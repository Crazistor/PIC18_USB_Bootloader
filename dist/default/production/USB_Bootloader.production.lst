

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Sep 03 21:02:18 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAMlh,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1,group=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1,group=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1,group=2
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1,group=2
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1,group=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1,group=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1,group=2
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1,group=2
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	text189,global,reloc=2,class=CODE,delta=1
   213                           	psect	text190,global,reloc=2,class=CODE,delta=1
   214                           	psect	text191,global,reloc=2,class=CODE,delta=1
   215                           	psect	text192,global,reloc=2,class=CODE,delta=1
   216                           	psect	text193,global,reloc=2,class=CODE,delta=1
   217                           	psect	text194,global,reloc=2,class=CODE,delta=1
   218                           	psect	text195,global,reloc=2,class=CODE,delta=1
   219                           	psect	text196,global,reloc=2,class=CODE,delta=1
   220                           	psect	text197,global,reloc=2,class=CODE,delta=1
   221                           	psect	text198,global,reloc=2,class=CODE,delta=1
   222                           	psect	text199,global,reloc=2,class=CODE,delta=1
   223                           	psect	text200,global,reloc=2,class=CODE,delta=1
   224                           	psect	text201,global,reloc=2,class=CODE,delta=1
   225                           	psect	text202,global,reloc=2,class=CODE,delta=1
   226                           	psect	text203,global,reloc=2,class=CODE,delta=1
   227                           	psect	text204,global,reloc=2,class=CODE,delta=1
   228                           	psect	text205,global,reloc=2,class=CODE,delta=1
   229                           	psect	text206,global,reloc=2,class=CODE,delta=1
   230                           	psect	text207,global,reloc=2,class=CODE,delta=1
   231                           	psect	text208,global,reloc=2,class=CODE,delta=1
   232                           	psect	text209,global,reloc=2,class=CODE,delta=1
   233                           	psect	text210,global,reloc=2,class=CODE,delta=1
   234                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   235                           	psect	text211,global,reloc=2,class=CODE,delta=1
   236                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   237                           	dabs	1,0x600,512,_msd_buffer
   238                           	dabs	1,0xD00,48,_BDT
   239                           	dabs	1,0xD40,31,_msd_cbw
   240                           	dabs	1,0xD80,13,_msd_csw
   241                           	dabs	1,0xD38,8,_CtrlTrfData
   242                           	dabs	1,0xD30,8,_SetupPkt
   243  0000                     
   244                           ; Version 2.00
   245                           ; Generated 27/05/2018 GMT
   246                           ; 
   247                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   248                           ; All rights reserved.
   249                           ; 
   250                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   251                           ; 
   252                           ; Redistribution and use in source and binary forms, with or without modification, are
   253                           ; permitted provided that the following conditions are met:
   254                           ; 
   255                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   256                           ;        conditions and the following disclaimer.
   257                           ; 
   258                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   259                           ;        of conditions and the following disclaimer in the documentation and/or other
   260                           ;        materials provided with the distribution.
   261                           ; 
   262                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   263                           ;        software without specific prior written permission.
   264                           ; 
   265                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   266                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   267                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   268                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   269                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   270                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   271                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   272                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   273                           ; 
   274                           ; 
   275                           ; Code-generator required, PIC18F47J53 Definitions
   276                           ; 
   277                           ; SFR Addresses
   278  0000                     
   279                           	psect	intcode
   280  000008  EF04 F048          	goto	36872	;# 
   281                           
   282                           	psect	intcodelo
   283  000018  EF0C F048          	goto	36888	; ;# 
   284  0000                     
   285                           	psect	idataBANK0
   286  0080FA                     __pidataBANK0:
   287                           	opt stack 0
   288                           
   289                           ;initializer for _file_number
   290  0080FA  FF                 	db	255
   291                           
   292                           	psect	idataBANK1
   293  007E6E                     __pidataBANK1:
   294                           	opt stack 0
   295                           
   296                           ;initializer for _LUN
   297  007E6E  DC                 	db	low _ExternalFlash_MediaInitialize
   298  007E6F  7E                 	db	high _ExternalFlash_MediaInitialize
   299  007E70  7C                 	db	low _ExternalFlash_CapacityRead
   300  007E71  7F                 	db	high _ExternalFlash_CapacityRead
   301  007E72  54                 	db	low _ExternalFlash_SectorSizeRead
   302  007E73  80                 	db	high _ExternalFlash_SectorSizeRead
   303  007E74  EE                 	db	low _ExternalFlash_MediaDetect
   304  007E75  80                 	db	high _ExternalFlash_MediaDetect
   305  007E76  8C                 	db	low _ExternalFlash_SectorRead
   306  007E77  7A                 	db	high _ExternalFlash_SectorRead
   307  007E78  EA                 	db	low _ExternalFlash_WriteProtectStateGet
   308  007E79  80                 	db	high _ExternalFlash_WriteProtectStateGet
   309  007E7A  5A                 	db	low _ExternalFlash_SectorWrite
   310  007E7B  7A                 	db	high _ExternalFlash_SectorWrite
   311  007E7C  00                 	db	0
   312  007E7D  00                 	db	0
   313  007E7E  00                 	db	0
   314  007E7F  00                 	db	0
   315  007E80  00                 	db	0
   316  007E81  00                 	db	0
   317                           
   318                           ;initializer for _tx_buf
   319  007E82  01                 	db	1
   320  007E83  02                 	db	2
   321  007E84  03                 	db	3
   322  007E85  04                 	db	4
   323  007E86  05                 	db	5
   324  007E87  06                 	db	6
   325  007E88  07                 	db	7
   326  007E89  08                 	db	8
   327                           
   328                           	psect	idataBANK2
   329  0080A4                     __pidataBANK2:
   330                           	opt stack 0
   331                           
   332                           ;initializer for i2c_display_send_init_sequence@F6808
   333  0080A4  3A                 	db	58
   334  0080A5  1E                 	db	30
   335  0080A6  39                 	db	57
   336  0080A7  0C                 	db	12
   337  0080A8  74                 	db	116
   338  0080A9  5C                 	db	92
   339  0080AA  6D                 	db	109
   340  0080AB  0C                 	db	12
   341  0080AC  01                 	db	1
   342                           
   343                           	psect	mediumconst
   344  008C98                     __pmediumconst:
   345                           	opt stack 0
   346  008C98  00                 	db	0
   347  008C99                     _checked_line2:
   348                           	opt stack 0
   349  008C99  46                 	db	70
   350  008C9A  69                 	db	105
   351  008C9B  6C                 	db	108
   352  008C9C  65                 	db	101
   353  008C9D  20                 	db	32
   354  008C9E  63                 	db	99
   355  008C9F  68                 	db	104
   356  008CA0  65                 	db	101
   357  008CA1  63                 	db	99
   358  008CA2  6B                 	db	107
   359  008CA3  20                 	db	32
   360  008CA4  63                 	db	99
   361  008CA5  6F                 	db	111
   362  008CA6  6D                 	db	109
   363  008CA7  70                 	db	112
   364  008CA8  6C                 	db	108
   365  008CA9  65                 	db	101
   366  008CAA  74                 	db	116
   367  008CAB  65                 	db	101
   368  008CAC  64                 	db	100
   369  008CAD  00                 	db	0
   370  008CAE                     __end_of_checked_line2:
   371                           	opt stack 0
   372  008CAE                     _failed_line3_addressRange:
   373                           	opt stack 0
   374  008CAE  41                 	db	65
   375  008CAF  64                 	db	100
   376  008CB0  64                 	db	100
   377  008CB1  72                 	db	114
   378  008CB2  2E                 	db	46
   379  008CB3  20                 	db	32
   380  008CB4  6F                 	db	111
   381  008CB5  75                 	db	117
   382  008CB6  74                 	db	116
   383  008CB7  73                 	db	115
   384  008CB8  69                 	db	105
   385  008CB9  64                 	db	100
   386  008CBA  65                 	db	101
   387  008CBB  20                 	db	32
   388  008CBC  72                 	db	114
   389  008CBD  61                 	db	97
   390  008CBE  6E                 	db	110
   391  008CBF  67                 	db	103
   392  008CC0  65                 	db	101
   393  008CC1  00                 	db	0
   394  008CC2                     __end_of_failed_line3_addressRange:
   395                           	opt stack 0
   396  008CC2                     _search_line3:
   397                           	opt stack 0
   398  008CC2  46                 	db	70
   399  008CC3  49                 	db	73
   400  008CC4  52                 	db	82
   401  008CC5  4D                 	db	77
   402  008CC6  57                 	db	87
   403  008CC7  41                 	db	65
   404  008CC8  52                 	db	82
   405  008CC9  45                 	db	69
   406  008CCA  2E                 	db	46
   407  008CCB  48                 	db	72
   408  008CCC  45                 	db	69
   409  008CCD  58                 	db	88
   410  008CCE  20                 	db	32
   411  008CCF  6F                 	db	111
   412  008CD0  6E                 	db	110
   413  008CD1  20                 	db	32
   414  008CD2  55                 	db	85
   415  008CD3  53                 	db	83
   416  008CD4  42                 	db	66
   417  008CD5  00                 	db	0
   418  008CD6                     __end_of_search_line3:
   419                           	opt stack 0
   420  008CD6                     _failed_line3_startCode:
   421                           	opt stack 0
   422  008CD6  4D                 	db	77
   423  008CD7  69                 	db	105
   424  008CD8  73                 	db	115
   425  008CD9  73                 	db	115
   426  008CDA  69                 	db	105
   427  008CDB  6E                 	db	110
   428  008CDC  67                 	db	103
   429  008CDD  20                 	db	32
   430  008CDE  73                 	db	115
   431  008CDF  74                 	db	116
   432  008CE0  61                 	db	97
   433  008CE1  72                 	db	114
   434  008CE2  74                 	db	116
   435  008CE3  20                 	db	32
   436  008CE4  63                 	db	99
   437  008CE5  6F                 	db	111
   438  008CE6  64                 	db	100
   439  008CE7  65                 	db	101
   440  008CE8  00                 	db	0
   441  008CE9                     __end_of_failed_line3_startCode:
   442                           	opt stack 0
   443  008CE9                     _found_line2:
   444                           	opt stack 0
   445  008CE9  46                 	db	70
   446  008CEA  49                 	db	73
   447  008CEB  52                 	db	82
   448  008CEC  4D                 	db	77
   449  008CED  57                 	db	87
   450  008CEE  41                 	db	65
   451  008CEF  52                 	db	82
   452  008CF0  45                 	db	69
   453  008CF1  2E                 	db	46
   454  008CF2  48                 	db	72
   455  008CF3  45                 	db	69
   456  008CF4  58                 	db	88
   457  008CF5  20                 	db	32
   458  008CF6  66                 	db	102
   459  008CF7  6F                 	db	111
   460  008CF8  75                 	db	117
   461  008CF9  6E                 	db	110
   462  008CFA  64                 	db	100
   463  008CFB  00                 	db	0
   464  008CFC                     __end_of_found_line2:
   465                           	opt stack 0
   466  008CFC                     _programming_line2:
   467                           	opt stack 0
   468  008CFC  50                 	db	80
   469  008CFD  72                 	db	114
   470  008CFE  6F                 	db	111
   471  008CFF  67                 	db	103
   472  008D00  72                 	db	114
   473  008D01  61                 	db	97
   474  008D02  6D                 	db	109
   475  008D03  6D                 	db	109
   476  008D04  69                 	db	105
   477  008D05  6E                 	db	110
   478  008D06  67                 	db	103
   479  008D07  20                 	db	32
   480  008D08  66                 	db	102
   481  008D09  6C                 	db	108
   482  008D0A  61                 	db	97
   483  008D0B  73                 	db	115
   484  008D0C  68                 	db	104
   485  008D0D  00                 	db	0
   486  008D0E                     __end_of_programming_line2:
   487                           	opt stack 0
   488  008D0E                     _failed_line2:
   489                           	opt stack 0
   490  008D0E  46                 	db	70
   491  008D0F  69                 	db	105
   492  008D10  6C                 	db	108
   493  008D11  65                 	db	101
   494  008D12  20                 	db	32
   495  008D13  63                 	db	99
   496  008D14  68                 	db	104
   497  008D15  65                 	db	101
   498  008D16  63                 	db	99
   499  008D17  6B                 	db	107
   500  008D18  20                 	db	32
   501  008D19  66                 	db	102
   502  008D1A  61                 	db	97
   503  008D1B  69                 	db	105
   504  008D1C  6C                 	db	108
   505  008D1D  65                 	db	101
   506  008D1E  64                 	db	100
   507  008D1F  00                 	db	0
   508  008D20                     __end_of_failed_line2:
   509                           	opt stack 0
   510  008D20                     _found_line4:
   511                           	opt stack 0
   512  008D20  50                 	db	80
   513  008D21  72                 	db	114
   514  008D22  65                 	db	101
   515  008D23  73                 	db	115
   516  008D24  73                 	db	115
   517  008D25  20                 	db	32
   518  008D26  74                 	db	116
   519  008D27  6F                 	db	111
   520  008D28  20                 	db	32
   521  008D29  75                 	db	117
   522  008D2A  73                 	db	115
   523  008D2B  65                 	db	101
   524  008D2C  20                 	db	32
   525  008D2D  66                 	db	102
   526  008D2E  69                 	db	105
   527  008D2F  6C                 	db	108
   528  008D30  65                 	db	101
   529  008D31  00                 	db	0
   530  008D32                     __end_of_found_line4:
   531                           	opt stack 0
   532  008D32                     _checked_line4:
   533                           	opt stack 0
   534  008D32  50                 	db	80
   535  008D33  72                 	db	114
   536  008D34  65                 	db	101
   537  008D35  73                 	db	115
   538  008D36  73                 	db	115
   539  008D37  20                 	db	32
   540  008D38  74                 	db	116
   541  008D39  6F                 	db	111
   542  008D3A  20                 	db	32
   543  008D3B  70                 	db	112
   544  008D3C  72                 	db	114
   545  008D3D  6F                 	db	111
   546  008D3E  67                 	db	103
   547  008D3F  72                 	db	114
   548  008D40  61                 	db	97
   549  008D41  6D                 	db	109
   550  008D42  00                 	db	0
   551  008D43                     __end_of_checked_line4:
   552                           	opt stack 0
   553  008D43                     _search_line2:
   554                           	opt stack 0
   555  008D43  4C                 	db	76
   556  008D44  6F                 	db	111
   557  008D45  6F                 	db	111
   558  008D46  6B                 	db	107
   559  008D47  69                 	db	105
   560  008D48  6E                 	db	110
   561  008D49  67                 	db	103
   562  008D4A  20                 	db	32
   563  008D4B  66                 	db	102
   564  008D4C  6F                 	db	111
   565  008D4D  72                 	db	114
   566  008D4E  20                 	db	32
   567  008D4F  66                 	db	102
   568  008D50  69                 	db	105
   569  008D51  6C                 	db	108
   570  008D52  65                 	db	101
   571  008D53  00                 	db	0
   572  008D54                     __end_of_search_line2:
   573                           	opt stack 0
   574  008D54                     _done_line4:
   575                           	opt stack 0
   576  008D54  50                 	db	80
   577  008D55  72                 	db	114
   578  008D56  65                 	db	101
   579  008D57  73                 	db	115
   580  008D58  73                 	db	115
   581  008D59  20                 	db	32
   582  008D5A  74                 	db	116
   583  008D5B  6F                 	db	111
   584  008D5C  20                 	db	32
   585  008D5D  72                 	db	114
   586  008D5E  65                 	db	101
   587  008D5F  62                 	db	98
   588  008D60  6F                 	db	111
   589  008D61  6F                 	db	111
   590  008D62  74                 	db	116
   591  008D63  00                 	db	0
   592  008D64                     __end_of_done_line4:
   593                           	opt stack 0
   594  008D64                     _done_line3:
   595                           	opt stack 0
   596  008D64  50                 	db	80
   597  008D65  61                 	db	97
   598  008D66  67                 	db	103
   599  008D67  65                 	db	101
   600  008D68  73                 	db	115
   601  008D69  20                 	db	32
   602  008D6A  77                 	db	119
   603  008D6B  72                 	db	114
   604  008D6C  69                 	db	105
   605  008D6D  74                 	db	116
   606  008D6E  74                 	db	116
   607  008D6F  65                 	db	101
   608  008D70  6E                 	db	110
   609  008D71  3A                 	db	58
   610  008D72  20                 	db	32
   611  008D73  00                 	db	0
   612  008D74                     __end_of_done_line3:
   613                           	opt stack 0
   614  008D74                     _done_line1:
   615                           	opt stack 0
   616  008D74  42                 	db	66
   617  008D75  6F                 	db	111
   618  008D76  6F                 	db	111
   619  008D77  74                 	db	116
   620  008D78  6C                 	db	108
   621  008D79  6F                 	db	111
   622  008D7A  61                 	db	97
   623  008D7B  64                 	db	100
   624  008D7C  65                 	db	101
   625  008D7D  72                 	db	114
   626  008D7E  20                 	db	32
   627  008D7F  4D                 	db	77
   628  008D80  6F                 	db	111
   629  008D81  64                 	db	100
   630  008D82  65                 	db	101
   631  008D83  00                 	db	0
   632  008D84                     __end_of_done_line1:
   633                           	opt stack 0
   634  008D84                     _programming_line4:
   635                           	opt stack 0
   636  008D84  50                 	db	80
   637  008D85  61                 	db	97
   638  008D86  67                 	db	103
   639  008D87  65                 	db	101
   640  008D88  73                 	db	115
   641  008D89  20                 	db	32
   642  008D8A  77                 	db	119
   643  008D8B  72                 	db	114
   644  008D8C  69                 	db	105
   645  008D8D  74                 	db	116
   646  008D8E  74                 	db	116
   647  008D8F  65                 	db	101
   648  008D90  6E                 	db	110
   649  008D91  3A                 	db	58
   650  008D92  20                 	db	32
   651  008D93  00                 	db	0
   652  008D94                     __end_of_programming_line4:
   653                           	opt stack 0
   654  008D94                     _programming_line1:
   655                           	opt stack 0
   656  008D94  42                 	db	66
   657  008D95  6F                 	db	111
   658  008D96  6F                 	db	111
   659  008D97  74                 	db	116
   660  008D98  6C                 	db	108
   661  008D99  6F                 	db	111
   662  008D9A  61                 	db	97
   663  008D9B  64                 	db	100
   664  008D9C  65                 	db	101
   665  008D9D  72                 	db	114
   666  008D9E  20                 	db	32
   667  008D9F  4D                 	db	77
   668  008DA0  6F                 	db	111
   669  008DA1  64                 	db	100
   670  008DA2  65                 	db	101
   671  008DA3  00                 	db	0
   672  008DA4                     __end_of_programming_line1:
   673                           	opt stack 0
   674  008DA4                     _failed_line1:
   675                           	opt stack 0
   676  008DA4  42                 	db	66
   677  008DA5  6F                 	db	111
   678  008DA6  6F                 	db	111
   679  008DA7  74                 	db	116
   680  008DA8  6C                 	db	108
   681  008DA9  6F                 	db	111
   682  008DAA  61                 	db	97
   683  008DAB  64                 	db	100
   684  008DAC  65                 	db	101
   685  008DAD  72                 	db	114
   686  008DAE  20                 	db	32
   687  008DAF  4D                 	db	77
   688  008DB0  6F                 	db	111
   689  008DB1  64                 	db	100
   690  008DB2  65                 	db	101
   691  008DB3  00                 	db	0
   692  008DB4                     __end_of_failed_line1:
   693                           	opt stack 0
   694  008DB4                     _checked_line1:
   695                           	opt stack 0
   696  008DB4  42                 	db	66
   697  008DB5  6F                 	db	111
   698  008DB6  6F                 	db	111
   699  008DB7  74                 	db	116
   700  008DB8  6C                 	db	108
   701  008DB9  6F                 	db	111
   702  008DBA  61                 	db	97
   703  008DBB  64                 	db	100
   704  008DBC  65                 	db	101
   705  008DBD  72                 	db	114
   706  008DBE  20                 	db	32
   707  008DBF  4D                 	db	77
   708  008DC0  6F                 	db	111
   709  008DC1  64                 	db	100
   710  008DC2  65                 	db	101
   711  008DC3  00                 	db	0
   712  008DC4                     __end_of_checked_line1:
   713                           	opt stack 0
   714  008DC4                     _verify_line1:
   715                           	opt stack 0
   716  008DC4  42                 	db	66
   717  008DC5  6F                 	db	111
   718  008DC6  6F                 	db	111
   719  008DC7  74                 	db	116
   720  008DC8  6C                 	db	108
   721  008DC9  6F                 	db	111
   722  008DCA  61                 	db	97
   723  008DCB  64                 	db	100
   724  008DCC  65                 	db	101
   725  008DCD  72                 	db	114
   726  008DCE  20                 	db	32
   727  008DCF  4D                 	db	77
   728  008DD0  6F                 	db	111
   729  008DD1  64                 	db	100
   730  008DD2  65                 	db	101
   731  008DD3  00                 	db	0
   732  008DD4                     __end_of_verify_line1:
   733                           	opt stack 0
   734  008DD4                     _found_line1:
   735                           	opt stack 0
   736  008DD4  42                 	db	66
   737  008DD5  6F                 	db	111
   738  008DD6  6F                 	db	111
   739  008DD7  74                 	db	116
   740  008DD8  6C                 	db	108
   741  008DD9  6F                 	db	111
   742  008DDA  61                 	db	97
   743  008DDB  64                 	db	100
   744  008DDC  65                 	db	101
   745  008DDD  72                 	db	114
   746  008DDE  20                 	db	32
   747  008DDF  4D                 	db	77
   748  008DE0  6F                 	db	111
   749  008DE1  64                 	db	100
   750  008DE2  65                 	db	101
   751  008DE3  00                 	db	0
   752  008DE4                     __end_of_found_line1:
   753                           	opt stack 0
   754  008DE4                     _search_line1:
   755                           	opt stack 0
   756  008DE4  42                 	db	66
   757  008DE5  6F                 	db	111
   758  008DE6  6F                 	db	111
   759  008DE7  74                 	db	116
   760  008DE8  6C                 	db	108
   761  008DE9  6F                 	db	111
   762  008DEA  61                 	db	97
   763  008DEB  64                 	db	100
   764  008DEC  65                 	db	101
   765  008DED  72                 	db	114
   766  008DEE  20                 	db	32
   767  008DEF  4D                 	db	77
   768  008DF0  6F                 	db	111
   769  008DF1  64                 	db	100
   770  008DF2  65                 	db	101
   771  008DF3  00                 	db	0
   772  008DF4                     __end_of_search_line1:
   773                           	opt stack 0
   774  008DF4                     _start_line1:
   775                           	opt stack 0
   776  008DF4  42                 	db	66
   777  008DF5  6F                 	db	111
   778  008DF6  6F                 	db	111
   779  008DF7  74                 	db	116
   780  008DF8  6C                 	db	108
   781  008DF9  6F                 	db	111
   782  008DFA  61                 	db	97
   783  008DFB  64                 	db	100
   784  008DFC  65                 	db	101
   785  008DFD  72                 	db	114
   786  008DFE  20                 	db	32
   787  008DFF  4D                 	db	77
   788  008E00  6F                 	db	111
   789  008E01  64                 	db	100
   790  008E02  65                 	db	101
   791  008E03  00                 	db	0
   792  008E04                     __end_of_start_line1:
   793                           	opt stack 0
   794  008E04                     _failed_line3_checksum:
   795                           	opt stack 0
   796  008E04  43                 	db	67
   797  008E05  68                 	db	104
   798  008E06  65                 	db	101
   799  008E07  63                 	db	99
   800  008E08  6B                 	db	107
   801  008E09  73                 	db	115
   802  008E0A  75                 	db	117
   803  008E0B  6D                 	db	109
   804  008E0C  20                 	db	32
   805  008E0D  65                 	db	101
   806  008E0E  72                 	db	114
   807  008E0F  72                 	db	114
   808  008E10  6F                 	db	111
   809  008E11  72                 	db	114
   810  008E12  00                 	db	0
   811  008E13                     __end_of_failed_line3_checksum:
   812                           	opt stack 0
   813  008E13                     _failed_line3_noNextRecord:
   814                           	opt stack 0
   815  008E13  4E                 	db	78
   816  008E14  6F                 	db	111
   817  008E15  20                 	db	32
   818  008E16  6E                 	db	110
   819  008E17  65                 	db	101
   820  008E18  78                 	db	120
   821  008E19  74                 	db	116
   822  008E1A  20                 	db	32
   823  008E1B  72                 	db	114
   824  008E1C  65                 	db	101
   825  008E1D  63                 	db	99
   826  008E1E  6F                 	db	111
   827  008E1F  72                 	db	114
   828  008E20  64                 	db	100
   829  008E21  00                 	db	0
   830  008E22                     __end_of_failed_line3_noNextRecord:
   831                           	opt stack 0
   832  008E22                     _start_line4:
   833                           	opt stack 0
   834  008E22  73                 	db	115
   835  008E23  6F                 	db	111
   836  008E24  6C                 	db	108
   837  008E25  64                 	db	100
   838  008E26  65                 	db	101
   839  008E27  72                 	db	114
   840  008E28  6E                 	db	110
   841  008E29  65                 	db	101
   842  008E2A  72                 	db	114
   843  008E2B  64                 	db	100
   844  008E2C  2E                 	db	46
   845  008E2D  63                 	db	99
   846  008E2E  6F                 	db	111
   847  008E2F  6D                 	db	109
   848  008E30  00                 	db	0
   849  008E31                     __end_of_start_line4:
   850                           	opt stack 0
   851  008E31                     _failed_line3_dataTooLong:
   852                           	opt stack 0
   853  008E31  44                 	db	68
   854  008E32  61                 	db	97
   855  008E33  74                 	db	116
   856  008E34  61                 	db	97
   857  008E35  20                 	db	32
   858  008E36  74                 	db	116
   859  008E37  6F                 	db	111
   860  008E38  6F                 	db	111
   861  008E39  20                 	db	32
   862  008E3A  6C                 	db	108
   863  008E3B  6F                 	db	111
   864  008E3C  6E                 	db	110
   865  008E3D  67                 	db	103
   866  008E3E  00                 	db	0
   867  008E3F                     __end_of_failed_line3_dataTooLong:
   868                           	opt stack 0
   869  008E3F                     _reboot_line1:
   870                           	opt stack 0
   871  008E3F  52                 	db	82
   872  008E40  65                 	db	101
   873  008E41  62                 	db	98
   874  008E42  6F                 	db	111
   875  008E43  6F                 	db	111
   876  008E44  74                 	db	116
   877  008E45  69                 	db	105
   878  008E46  6E                 	db	110
   879  008E47  67                 	db	103
   880  008E48  2E                 	db	46
   881  008E49  2E                 	db	46
   882  008E4A  2E                 	db	46
   883  008E4B  00                 	db	0
   884  008E4C                     __end_of_reboot_line1:
   885                           	opt stack 0
   886  008E4C                     _verify_line2:
   887                           	opt stack 0
   888  008E4C  56                 	db	86
   889  008E4D  65                 	db	101
   890  008E4E  72                 	db	114
   891  008E4F  69                 	db	105
   892  008E50  66                 	db	102
   893  008E51  79                 	db	121
   894  008E52  69                 	db	105
   895  008E53  6E                 	db	110
   896  008E54  67                 	db	103
   897  008E55  2E                 	db	46
   898  008E56  2E                 	db	46
   899  008E57  2E                 	db	46
   900  008E58  00                 	db	0
   901  008E59                     __end_of_verify_line2:
   902                           	opt stack 0
   903  008E59                     _search_line4:
   904                           	opt stack 0
   905  008E59  64                 	db	100
   906  008E5A  72                 	db	114
   907  008E5B  69                 	db	105
   908  008E5C  76                 	db	118
   909  008E5D  65                 	db	101
   910  008E5E  2E                 	db	46
   911  008E5F  2E                 	db	46
   912  008E60  2E                 	db	46
   913  008E61  00                 	db	0
   914  008E62                     __end_of_search_line4:
   915                           	opt stack 0
   916  008E62                     _start_line2:
   917                           	opt stack 0
   918  008E62  56                 	db	86
   919  008E63  65                 	db	101
   920  008E64  72                 	db	114
   921  008E65  73                 	db	115
   922  008E66  69                 	db	105
   923  008E67  6F                 	db	111
   924  008E68  6E                 	db	110
   925  008E69  20                 	db	32
   926  008E6A  00                 	db	0
   927  008E6B                     __end_of_start_line2:
   928                           	opt stack 0
   929  008E6B                     _failed_line4:
   930                           	opt stack 0
   931  008E6B  52                 	db	82
   932  008E6C  65                 	db	101
   933  008E6D  63                 	db	99
   934  008E6E  6F                 	db	111
   935  008E6F  72                 	db	114
   936  008E70  64                 	db	100
   937  008E71  20                 	db	32
   938  008E72  00                 	db	0
   939  008E73                     __end_of_failed_line4:
   940                           	opt stack 0
   941  008E73                     _checked_line3:
   942                           	opt stack 0
   943  008E73  72                 	db	114
   944  008E74  65                 	db	101
   945  008E75  63                 	db	99
   946  008E76  6F                 	db	111
   947  008E77  72                 	db	114
   948  008E78  64                 	db	100
   949  008E79  73                 	db	115
   950  008E7A  00                 	db	0
   951  008E7B                     __end_of_checked_line3:
   952                           	opt stack 0
   953  008E7B                     _USB_SD_Ptr:
   954                           	opt stack 0
   955  008E7B  CC                 	db	low _sd000
   956  008E7C  8F                 	db	high _sd000
   957  008E7D  E8                 	db	low _sd001
   958  008E7E  8E                 	db	high _sd001
   959  008E7F  1C                 	db	low _sd002
   960  008E80  8F                 	db	high _sd002
   961  008E81  8B                 	db	low _sd003
   962  008E82  8F                 	db	high _sd003
   963  008E83                     __end_of_USB_SD_Ptr:
   964                           	opt stack 0
   965  008E83                     _programming_line3:
   966                           	opt stack 0
   967  008E83  45                 	db	69
   968  008E84  6E                 	db	110
   969  008E85  74                 	db	116
   970  008E86  72                 	db	114
   971  008E87  79                 	db	121
   972  008E88  20                 	db	32
   973  008E89  00                 	db	0
   974  008E8A                     __end_of_programming_line3:
   975                           	opt stack 0
   976  008E8A                     _verify_line3:
   977                           	opt stack 0
   978  008E8A  52                 	db	82
   979  008E8B  65                 	db	101
   980  008E8C  63                 	db	99
   981  008E8D  6F                 	db	111
   982  008E8E  72                 	db	114
   983  008E8F  64                 	db	100
   984  008E90  00                 	db	0
   985  008E91                     __end_of_verify_line3:
   986                           	opt stack 0
   987  008E91                     _found_line3b:
   988                           	opt stack 0
   989  008E91  20                 	db	32
   990  008E92  62                 	db	98
   991  008E93  79                 	db	121
   992  008E94  74                 	db	116
   993  008E95  65                 	db	101
   994  008E96  73                 	db	115
   995  008E97  00                 	db	0
   996  008E98                     __end_of_found_line3b:
   997                           	opt stack 0
   998  008E98                     _found_line3:
   999                           	opt stack 0
  1000  008E98  53                 	db	83
  1001  008E99  69                 	db	105
  1002  008E9A  7A                 	db	122
  1003  008E9B  65                 	db	101
  1004  008E9C  3A                 	db	58
  1005  008E9D  20                 	db	32
  1006  008E9E  00                 	db	0
  1007  008E9F                     __end_of_found_line3:
  1008                           	opt stack 0
  1009  008E9F                     _done_line2:
  1010                           	opt stack 0
  1011  008E9F  44                 	db	68
  1012  008EA0  6F                 	db	111
  1013  008EA1  6E                 	db	110
  1014  008EA2  65                 	db	101
  1015  008EA3  21                 	db	33
  1016  008EA4  00                 	db	0
  1017  008EA5                     __end_of_done_line2:
  1018                           	opt stack 0
  1019  008EA5                     _USB_CD_Ptr:
  1020                           	opt stack 0
  1021  008EA5  A8                 	db	low _configDescriptor1
  1022  008EA6  8E                 	db	high _configDescriptor1
  1023  008EA7                     __end_of_USB_CD_Ptr:
  1024                           	opt stack 0
  1025  008EA7                     _start_line3:
  1026                           	opt stack 0
  1027  008EA7  00                 	db	0
  1028  008EA8                     __end_of_start_line3:
  1029                           	opt stack 0
  1030  008EA8                     _configDescriptor1:
  1031                           	opt stack 0
  1032  008EA8  09                 	db	9
  1033  008EA9  02                 	db	2
  1034  008EAA  40                 	db	64
  1035  008EAB  00                 	db	0
  1036  008EAC  02                 	db	2
  1037  008EAD  01                 	db	1
  1038  008EAE  00                 	db	0
  1039  008EAF  C0                 	db	192
  1040  008EB0  32                 	db	50
  1041  008EB1  09                 	db	9
  1042  008EB2  04                 	db	4
  1043  008EB3  00                 	db	0
  1044  008EB4  00                 	db	0
  1045  008EB5  02                 	db	2
  1046  008EB6  03                 	db	3
  1047  008EB7  00                 	db	0
  1048  008EB8  00                 	db	0
  1049  008EB9  00                 	db	0
  1050  008EBA  09                 	db	9
  1051  008EBB  21                 	db	33
  1052  008EBC  11                 	db	17
  1053  008EBD  01                 	db	1
  1054  008EBE  00                 	db	0
  1055  008EBF  01                 	db	1
  1056  008EC0  22                 	db	34
  1057  008EC1  1D                 	db	29
  1058  008EC2  00                 	db	0
  1059  008EC3  07                 	db	7
  1060  008EC4  05                 	db	5
  1061  008EC5  81                 	db	129
  1062  008EC6  03                 	db	3
  1063  008EC7  40                 	db	64
  1064  008EC8  00                 	db	0
  1065  008EC9  01                 	db	1
  1066  008ECA  07                 	db	7
  1067  008ECB  05                 	db	5
  1068  008ECC  01                 	db	1
  1069  008ECD  03                 	db	3
  1070  008ECE  40                 	db	64
  1071  008ECF  00                 	db	0
  1072  008ED0  01                 	db	1
  1073  008ED1  09                 	db	9
  1074  008ED2  04                 	db	4
  1075  008ED3  01                 	db	1
  1076  008ED4  00                 	db	0
  1077  008ED5  02                 	db	2
  1078  008ED6  08                 	db	8
  1079  008ED7  06                 	db	6
  1080  008ED8  50                 	db	80
  1081  008ED9  00                 	db	0
  1082  008EDA  07                 	db	7
  1083  008EDB  05                 	db	5
  1084  008EDC  82                 	db	130
  1085  008EDD  02                 	db	2
  1086  008EDE  40                 	db	64
  1087  008EDF  00                 	db	0
  1088  008EE0  01                 	db	1
  1089  008EE1  07                 	db	7
  1090  008EE2  05                 	db	5
  1091  008EE3  02                 	db	2
  1092  008EE4  02                 	db	2
  1093  008EE5  40                 	db	64
  1094  008EE6  00                 	db	0
  1095  008EE7  01                 	db	1
  1096  008EE8                     __end_of_configDescriptor1:
  1097                           	opt stack 0
  1098  008EE8                     _sd001:
  1099                           	opt stack 0
  1100  008EE8  34                 	db	52
  1101  008EE9  03                 	db	3
  1102  008EEA  0053               	dw	83
  1103  008EEC  006F               	dw	111
  1104  008EEE  006C               	dw	108
  1105  008EF0  0064               	dw	100
  1106  008EF2  0065               	dw	101
  1107  008EF4  0072               	dw	114
  1108  008EF6  006E               	dw	110
  1109  008EF8  0065               	dw	101
  1110  008EFA  0072               	dw	114
  1111  008EFC  0064               	dw	100
  1112  008EFE  002E               	dw	46
  1113  008F00  0063               	dw	99
  1114  008F02  006F               	dw	111
  1115  008F04  006D               	dw	109
  1116  008F06  0020               	dw	32
  1117  008F08  0020               	dw	32
  1118  008F0A  0020               	dw	32
  1119  008F0C  0020               	dw	32
  1120  008F0E  0020               	dw	32
  1121  008F10  0020               	dw	32
  1122  008F12  0020               	dw	32
  1123  008F14  0020               	dw	32
  1124  008F16  0020               	dw	32
  1125  008F18  0020               	dw	32
  1126  008F1A  0020               	dw	32
  1127  008F1C                     __end_of_sd001:
  1128                           	opt stack 0
  1129  008F1C                     _sd002:
  1130                           	opt stack 0
  1131  008F1C  2E                 	db	46
  1132  008F1D  03                 	db	3
  1133  008F1E  004D               	dw	77
  1134  008F20  0050               	dw	80
  1135  008F22  0050               	dw	80
  1136  008F24  0054               	dw	84
  1137  008F26  0053               	dw	83
  1138  008F28  006F               	dw	111
  1139  008F2A  006C               	dw	108
  1140  008F2C  0061               	dw	97
  1141  008F2E  0072               	dw	114
  1142  008F30  0020               	dw	32
  1143  008F32  0043               	dw	67
  1144  008F34  0068               	dw	104
  1145  008F36  0061               	dw	97
  1146  008F38  0072               	dw	114
  1147  008F3A  0067               	dw	103
  1148  008F3C  0065               	dw	101
  1149  008F3E  0072               	dw	114
  1150  008F40  0020               	dw	32
  1151  008F42  0052               	dw	82
  1152  008F44  0065               	dw	101
  1153  008F46  0076               	dw	118
  1154  008F48  0043               	dw	67
  1155  008F4A                     __end_of_sd002:
  1156                           	opt stack 0
  1157  008F4A                     _inq_resp:
  1158                           	opt stack 0
  1159  008F4A  00                 	db	0
  1160  008F4B  80                 	db	128
  1161  008F4C  04                 	db	4
  1162  008F4D  02                 	db	2
  1163  008F4E  20                 	db	32
  1164  008F4F  00                 	db	0
  1165  008F50  00                 	db	0
  1166  008F51  00                 	db	0
  1167  008F52  4D                 	db	77
  1168  008F53  69                 	db	105
  1169  008F54  63                 	db	99
  1170  008F55  72                 	db	114
  1171  008F56  6F                 	db	111
  1172  008F57  63                 	db	99
  1173  008F58  68                 	db	104
  1174  008F59  70                 	db	112
  1175  008F5A  4D                 	db	77
  1176  008F5B  61                 	db	97
  1177  008F5C  73                 	db	115
  1178  008F5D  73                 	db	115
  1179  008F5E  20                 	db	32
  1180  008F5F  53                 	db	83
  1181  008F60  74                 	db	116
  1182  008F61  6F                 	db	111
  1183  008F62  72                 	db	114
  1184  008F63  61                 	db	97
  1185  008F64  67                 	db	103
  1186  008F65  65                 	db	101
  1187  008F66  20                 	db	32
  1188  008F67  20                 	db	32
  1189  008F68  20                 	db	32
  1190  008F69  20                 	db	32
  1191  008F6A  30                 	db	48
  1192  008F6B  30                 	db	48
  1193  008F6C  30                 	db	48
  1194  008F6D  31                 	db	49
  1195  008F6E                     __end_of_inq_resp:
  1196                           	opt stack 0
  1197  008F6E                     _hid_rpt01:
  1198                           	opt stack 0
  1199  008F6E  06                 	db	6
  1200  008F6F  00                 	db	0
  1201  008F70  FF                 	db	255
  1202  008F71  09                 	db	9
  1203  008F72  01                 	db	1
  1204  008F73  A1                 	db	161
  1205  008F74  01                 	db	1
  1206  008F75  19                 	db	25
  1207  008F76  01                 	db	1
  1208  008F77  29                 	db	41
  1209  008F78  40                 	db	64
  1210  008F79  15                 	db	21
  1211  008F7A  00                 	db	0
  1212  008F7B  26                 	db	38
  1213  008F7C  FF                 	db	255
  1214  008F7D  00                 	db	0
  1215  008F7E  75                 	db	117
  1216  008F7F  08                 	db	8
  1217  008F80  95                 	db	149
  1218  008F81  40                 	db	64
  1219  008F82  81                 	db	129
  1220  008F83  00                 	db	0
  1221  008F84  19                 	db	25
  1222  008F85  01                 	db	1
  1223  008F86  29                 	db	41
  1224  008F87  40                 	db	64
  1225  008F88  91                 	db	145
  1226  008F89  00                 	db	0
  1227  008F8A  C0                 	db	192
  1228  008F8B                     __end_of_hid_rpt01:
  1229                           	opt stack 0
  1230  008F8B                     _sd003:
  1231                           	opt stack 0
  1232  008F8B  1A                 	db	26
  1233  008F8C  03                 	db	3
  1234  008F8D  0031               	dw	49
  1235  008F8F  0032               	dw	50
  1236  008F91  0033               	dw	51
  1237  008F93  0034               	dw	52
  1238  008F95  0035               	dw	53
  1239  008F97  0036               	dw	54
  1240  008F99  0037               	dw	55
  1241  008F9B  0038               	dw	56
  1242  008F9D  0039               	dw	57
  1243  008F9F  0030               	dw	48
  1244  008FA1  0039               	dw	57
  1245  008FA3  0039               	dw	57
  1246  008FA5                     __end_of_sd003:
  1247                           	opt stack 0
  1248  008FA5                     _device_dsc:
  1249                           	opt stack 0
  1250  008FA5  12                 	db	18
  1251  008FA6  01                 	db	1
  1252  008FA7  0200               	dw	512
  1253  008FA9  00                 	db	0
  1254  008FAA  00                 	db	0
  1255  008FAB  00                 	db	0
  1256  008FAC  08                 	db	8
  1257  008FAD  04D8               	dw	1240
  1258  008FAF  F08E               	dw	61582
  1259  008FB1  0100               	dw	256
  1260  008FB3  01                 	db	1
  1261  008FB4  02                 	db	2
  1262  008FB5  00                 	db	0
  1263  008FB6  01                 	db	1
  1264  008FB7                     __end_of_device_dsc:
  1265                           	opt stack 0
  1266  008FB7                     _bootloader_filename:
  1267                           	opt stack 0
  1268  008FB7  46                 	db	70
  1269  008FB8  49                 	db	73
  1270  008FB9  52                 	db	82
  1271  008FBA  4D                 	db	77
  1272  008FBB  57                 	db	87
  1273  008FBC  41                 	db	65
  1274  008FBD  52                 	db	82
  1275  008FBE  45                 	db	69
  1276  008FBF  00                 	db	0
  1277  008FC0                     __end_of_bootloader_filename:
  1278                           	opt stack 0
  1279  008FC0                     _flash_command_pagesize_528:
  1280                           	opt stack 0
  1281  008FC0  3D                 	db	61
  1282  008FC1  2A                 	db	42
  1283  008FC2  80                 	db	128
  1284  008FC3  A7                 	db	167
  1285  008FC4                     __end_of_flash_command_pagesize_528:
  1286                           	opt stack 0
  1287  008FC4                     _flash_command_pagesize_512:
  1288                           	opt stack 0
  1289  008FC4  3D                 	db	61
  1290  008FC5  2A                 	db	42
  1291  008FC6  80                 	db	128
  1292  008FC7  A6                 	db	166
  1293  008FC8                     __end_of_flash_command_pagesize_512:
  1294                           	opt stack 0
  1295  008FC8                     _bootloader_extension:
  1296                           	opt stack 0
  1297  008FC8  48                 	db	72
  1298  008FC9  45                 	db	69
  1299  008FCA  58                 	db	88
  1300  008FCB  00                 	db	0
  1301  008FCC                     __end_of_bootloader_extension:
  1302                           	opt stack 0
  1303  008FCC                     _sd000:
  1304                           	opt stack 0
  1305  008FCC  04                 	db	4
  1306  008FCD  03                 	db	3
  1307  008FCE  0409               	dw	1033
  1308  008FD0                     __end_of_sd000:
  1309                           	opt stack 0
  1310  0000                     _RPINR23	set	3838
  1311  0000                     _RPOR23	set	3799
  1312  0000                     _RPINR22	set	3837
  1313  0000                     _RPOR22	set	3798
  1314  0000                     _RPOR21	set	3797
  1315  0000                     _RPINR21	set	3836
  1316  0000                     _RPINR2	set	3810
  1317  0000                     _RPINR3	set	3811
  1318  0000                     _RPINR1	set	3809
  1319  0000                     _PPSCONbits	set	3775
  1320  0000                     _ODCON3bits	set	3904
  1321  0000                     _ANCON0bits	set	3912
  1322  0000                     _UEP0bits	set	3878
  1323  0000                     _UIEbits	set	3894
  1324  0000                     _UADDR	set	3896
  1325  0000                     _UIE	set	3894
  1326  0000                     _UEIE	set	3895
  1327  0000                     _UCFG	set	3897
  1328  0000                     _UEP1	set	3879
  1329  0000                     _UEP0	set	3878
  1330  0000                     _TBLPTR	set	4086
  1331  0000                     _DMACON2bits	set	3974
  1332  0000                     _SSP2CON1bits	set	3954
  1333  0000                     _SSP2STATbits	set	3955
  1334  0000                     _INTCON	set	4082
  1335  0000                     _EECON1	set	4006
  1336  0000                     _TABLAT	set	4085
  1337  0000                     _EECON1bits	set	4006
  1338  0000                     _SSP1CON1	set	4038
  1339  0000                     _SSP1BUF	set	4041
  1340  0000                     _SSP1CON2bits	set	4037
  1341  0000                     _SSP1CON1bits	set	4038
  1342  0000                     _SSP1ADD	set	4040
  1343  0000                     _SSP1STATbits	set	4039
  1344  0000                     _LATAbits	set	3977
  1345  0000                     _LATEbits	set	3981
  1346  0000                     _TRISEbits	set	3990
  1347  0000                     _LATBbits	set	3978
  1348  0000                     _TRISBbits	set	3987
  1349  0000                     _LATDbits	set	3980
  1350  0000                     _TRISDbits	set	3989
  1351  0000                     _TRISAbits	set	3986
  1352  0000                     _LATCbits	set	3979
  1353  0000                     _TRISCbits	set	3988
  1354  0000                     _T0CONbits	set	4053
  1355  0000                     _INTCON2bits	set	4081
  1356  0000                     _EECON2	set	4007
  1357  0000                     _PORTBbits	set	3969
  1358  0000                     _INTCON3bits	set	4080
  1359  0000                     _TMR0L	set	4054
  1360  0000                     _TMR0H	set	4055
  1361  0000                     _INTCONbits	set	4082
  1362  0000                     _OSCCON	set	4051
  1363  0000                     _OSCTUNEbits	set	3995
  1364  0000                     _PORTAbits	set	3968
  1365  0000                     _PIR3bits	set	4004
  1366  0000                     _DMABCL	set	3943
  1367  0000                     _DMABCH	set	3942
  1368  0000                     _RXADDRL	set	3945
  1369  0000                     _RXADDRH	set	3944
  1370  0000                     _DMACON1bits	set	3976
  1371  0000                     _TXADDRL	set	3947
  1372  0000                     _TXADDRH	set	3946
  1373  0000                     _PORTDbits	set	3971
  1374  0000                     _USTAT	set	3940
  1375  0000                     _PIR2bits	set	4001
  1376  0000                     _UCON	set	3941
  1377  0000                     _UIRbits	set	3938
  1378  0000                     _UCONbits	set	3941
  1379  0000                     _UIR	set	3938
  1380  0000                     _UEIR	set	3939
  1381  0000                     _PIE2bits	set	4000
  1382  008FD0                     STR_12:
  1383  008FD0  68                 	db	104	;'h'
  1384  008FD1  65                 	db	101	;'e'
  1385  008FD2  6C                 	db	108	;'l'
  1386  008FD3  6C                 	db	108	;'l'
  1387  008FD4  6F                 	db	111	;'o'
  1388  008FD5  20                 	db	32
  1389  008FD6  77                 	db	119	;'w'
  1390  008FD7  6F                 	db	111	;'o'
  1391  008FD8  72                 	db	114	;'r'
  1392  008FD9  6C                 	db	108	;'l'
  1393  008FDA  64                 	db	100	;'d'
  1394  008FDB  21                 	db	33
  1395  008FDC  00                 	db	0
  1396  008FDD                     STR_9:
  1397  008FDD  53                 	db	83	;'S'
  1398  008FDE  6F                 	db	111	;'o'
  1399  008FDF  6C                 	db	108	;'l'
  1400  008FE0  61                 	db	97	;'a'
  1401  008FE1  72                 	db	114	;'r'
  1402  008FE2  43                 	db	67	;'C'
  1403  008FE3  68                 	db	104	;'h'
  1404  008FE4  61                 	db	97	;'a'
  1405  008FE5  72                 	db	114	;'r'
  1406  008FE6  67                 	db	103	;'g'
  1407  008FE7  72                 	db	114	;'r'
  1408  008FE8  00                 	db	0
  1409  008FE9                     STR_10:
  1410  008FE9  46                 	db	70	;'F'
  1411  008FEA  49                 	db	73	;'I'
  1412  008FEB  4C                 	db	76	;'L'
  1413  008FEC  45                 	db	69	;'E'
  1414  008FED  20                 	db	32
  1415  008FEE  20                 	db	32
  1416  008FEF  20                 	db	32
  1417  008FF0  20                 	db	32
  1418  008FF1  00                 	db	0
  1419  008FF2                     STR_1:
  1420  008FF2  4D                 	db	77	;'M'
  1421  008FF3  53                 	db	83	;'S'
  1422  008FF4  44                 	db	68	;'D'
  1423  008FF5  4F                 	db	79	;'O'
  1424  008FF6  53                 	db	83	;'S'
  1425  008FF7  35                 	db	53	;'5'
  1426  008FF8  2E                 	db	46
  1427  008FF9  30                 	db	48	;'0'
  1428  008FFA  00                 	db	0
  1429  008FFB                     STR_11:
  1430  008FFB  54                 	db	84	;'T'
  1431  008FFC  58                 	db	88	;'X'
  1432  008FFD  54                 	db	84	;'T'
  1433  008FFE  00                 	db	0
  1434  0000                     
  1435                           ; #config settings
  1436  008FFF  00                 	db	0	; dummy byte at the end
  1437  0000                     
  1438                           	psect	cinit
  1439  0058B6                     __pcinit:
  1440                           	opt stack 0
  1441  0058B6                     start_initialization:
  1442                           	opt stack 0
  1443  0058B6                     __initialization:
  1444                           	opt stack 0
  1445                           
  1446                           ; Initialize objects allocated to BANK2 (9 bytes)
  1447                           ; load TBLPTR registers with __pidataBANK2
  1448  0058B6  0EA4               	movlw	low __pidataBANK2
  1449  0058B8  6EF6               	movwf	tblptrl,c
  1450  0058BA  0E80               	movlw	high __pidataBANK2
  1451  0058BC  6EF7               	movwf	tblptrh,c
  1452  0058BE  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1453  0058C0  6EF8               	movwf	tblptru,c
  1454  0058C2  EE02  F0F2         	lfsr	0,__pdataBANK2
  1455  0058C6  EE10 F009          	lfsr	1,9
  1456  0058CA                     copy_data0:
  1457  0058CA  0009               	tblrd		*+
  1458  0058CC  CFF5 FFEE          	movff	tablat,postinc0
  1459  0058D0  50E5               	movf	postdec1,w,c
  1460  0058D2  50E1               	movf	fsr1l,w,c
  1461  0058D4  E1FA               	bnz	copy_data0
  1462                           
  1463                           ; Initialize objects allocated to BANK1 (28 bytes)
  1464                           ; load TBLPTR registers with __pidataBANK1
  1465  0058D6  0E6E               	movlw	low __pidataBANK1
  1466  0058D8  6EF6               	movwf	tblptrl,c
  1467  0058DA  0E7E               	movlw	high __pidataBANK1
  1468  0058DC  6EF7               	movwf	tblptrh,c
  1469  0058DE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1470  0058E0  6EF8               	movwf	tblptru,c
  1471  0058E2  EE01  F0E4         	lfsr	0,__pdataBANK1
  1472  0058E6  EE10 F01C          	lfsr	1,28
  1473  0058EA                     copy_data1:
  1474  0058EA  0009               	tblrd		*+
  1475  0058EC  CFF5 FFEE          	movff	tablat,postinc0
  1476  0058F0  50E5               	movf	postdec1,w,c
  1477  0058F2  50E1               	movf	fsr1l,w,c
  1478  0058F4  E1FA               	bnz	copy_data1
  1479                           
  1480                           ; Initialize objects allocated to BANK0 (1 bytes)
  1481                           ; load TBLPTR registers with __pidataBANK0
  1482  0058F6  0EFA               	movlw	low __pidataBANK0
  1483  0058F8  6EF6               	movwf	tblptrl,c
  1484  0058FA  0E80               	movlw	high __pidataBANK0
  1485  0058FC  6EF7               	movwf	tblptrh,c
  1486  0058FE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1487  005900  6EF8               	movwf	tblptru,c
  1488  005902  0009               	tblrd		*+	;fetch initializer
  1489  005904  CFF5 F0FE          	movff	tablat,__pdataBANK0
  1490                           
  1491                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1492  005908  EE03  F040         	lfsr	0,__pbssBIGRAMll
  1493  00590C  EE12 F000          	lfsr	1,512
  1494  005910                     clear_0:
  1495  005910  6AEE               	clrf	postinc0,c
  1496  005912  50E5               	movf	postdec1,w,c
  1497  005914  50E1               	movf	fsr1l,w,c
  1498  005916  E1FC               	bnz	clear_0
  1499  005918  50E2               	movf	fsr1h,w,c
  1500  00591A  E1FA               	bnz	clear_0
  1501                           
  1502                           ; Clear objects allocated to BIGRAMlh (1024 bytes)
  1503  00591C  EE08  F000         	lfsr	0,__pbssBIGRAMlh
  1504  005920  EE14 F000          	lfsr	1,1024
  1505  005924                     clear_1:
  1506  005924  6AEE               	clrf	postinc0,c
  1507  005926  50E5               	movf	postdec1,w,c
  1508  005928  50E1               	movf	fsr1l,w,c
  1509  00592A  E1FC               	bnz	clear_1
  1510  00592C  50E2               	movf	fsr1h,w,c
  1511  00592E  E1FA               	bnz	clear_1
  1512                           
  1513                           ; Clear objects allocated to BANK3 (64 bytes)
  1514  005930  EE03  F000         	lfsr	0,__pbssBANK3
  1515  005934  0E40               	movlw	64
  1516  005936                     clear_2:
  1517  005936  6AEE               	clrf	postinc0,c
  1518  005938  06E8               	decf	wreg,f,c
  1519  00593A  E1FD               	bnz	clear_2
  1520                           
  1521                           ; Clear objects allocated to BANK2 (242 bytes)
  1522  00593C  EE02  F000         	lfsr	0,__pbssBANK2
  1523  005940  0EF2               	movlw	242
  1524  005942                     clear_3:
  1525  005942  6AEE               	clrf	postinc0,c
  1526  005944  06E8               	decf	wreg,f,c
  1527  005946  E1FD               	bnz	clear_3
  1528                           
  1529                           ; Clear objects allocated to BANK1 (228 bytes)
  1530  005948  EE01  F000         	lfsr	0,__pbssBANK1
  1531  00594C  0EE4               	movlw	228
  1532  00594E                     clear_4:
  1533  00594E  6AEE               	clrf	postinc0,c
  1534  005950  06E8               	decf	wreg,f,c
  1535  005952  E1FD               	bnz	clear_4
  1536                           
  1537                           ; Clear objects allocated to BANK0 (85 bytes)
  1538  005954  EE00  F060         	lfsr	0,__pbssBANK0
  1539  005958  0E55               	movlw	85
  1540  00595A                     clear_5:
  1541  00595A  6AEE               	clrf	postinc0,c
  1542  00595C  06E8               	decf	wreg,f,c
  1543  00595E  E1FD               	bnz	clear_5
  1544  005960                     end_of_initialization:
  1545                           	opt stack 0
  1546  005960                     __end_of__initialization:
  1547                           	opt stack 0
  1548  005960  0100               	movlb	0
  1549  005962  EF3E  F01C         	goto	_main	;jump to C main() function
  1550                           tblptru	equ	0xFF8
  1551                           tblptrh	equ	0xFF7
  1552                           tblptrl	equ	0xFF6
  1553                           tablat	equ	0xFF5
  1554                           postinc0	equ	0xFEE
  1555                           wreg	equ	0xFE8
  1556                           postdec1	equ	0xFE5
  1557                           fsr1h	equ	0xFE2
  1558                           fsr1l	equ	0xFE1
  1559                           
  1560                           	psect	bssBANK0
  1561  000060                     __pbssBANK0:
  1562                           	opt stack 0
  1563  000060                     _os:
  1564                           	opt stack 0
  1565  000060                     	ds	6
  1566  000066                     _inPipes:
  1567                           	opt stack 0
  1568  000066                     	ds	6
  1569  00006C                     _pBDTEntryIn:
  1570                           	opt stack 0
  1571  00006C                     	ds	6
  1572  000072                     _pBDTEntryOut:
  1573                           	opt stack 0
  1574  000072                     	ds	6
  1575  000078                     _hex_file_size:
  1576                           	opt stack 0
  1577  000078                     	ds	4
  1578  00007C                     _hex_file_offset:
  1579                           	opt stack 0
  1580  00007C                     	ds	4
  1581  000080                     _LBA:
  1582                           	opt stack 0
  1583  000080                     	ds	4
  1584  000084                     _USBOutHandle:
  1585                           	opt stack 0
  1586  000084                     	ds	2
  1587  000086                     _TransferLength:
  1588                           	opt stack 0
  1589  000086                     	ds	2
  1590  000088                     _USBMSDInHandle:
  1591                           	opt stack 0
  1592  000088                     	ds	2
  1593  00008A                     _USBMSDOutHandle:
  1594                           	opt stack 0
  1595  00008A                     	ds	2
  1596  00008C                     _ptrNextData:
  1597                           	opt stack 0
  1598  00008C                     	ds	2
  1599  00008E                     _pDst:
  1600                           	opt stack 0
  1601  00008E                     	ds	2
  1602  000090                     _pBDTEntryEP0OutNext:
  1603                           	opt stack 0
  1604  000090                     	ds	2
  1605  000092                     _pBDTEntryEP0OutCurrent:
  1606                           	opt stack 0
  1607  000092                     	ds	2
  1608  000094                     _active_configuration:
  1609                           	opt stack 0
  1610  000094                     	ds	1
  1611  000095                     _start_from_byte_next:
  1612                           	opt stack 0
  1613  000095                     	ds	1
  1614  000096                     _last_error:
  1615                           	opt stack 0
  1616  000096                     	ds	1
  1617  000097                     _power_state:
  1618                           	opt stack 0
  1619  000097                     	ds	1
  1620  000098                     _userInterfaceStatus:
  1621                           	opt stack 0
  1622  000098                     	ds	1
  1623  000099                     _i2c_frequency:
  1624                           	opt stack 0
  1625  000099                     	ds	1
  1626  00009A                     _MSDCBWValid:
  1627                           	opt stack 0
  1628  00009A                     	ds	1
  1629  00009B                     _MSDHostNoData:
  1630                           	opt stack 0
  1631  00009B                     	ds	1
  1632  00009C                     _SoftDetach:
  1633                           	opt stack 0
  1634  00009C                     	ds	1
  1635  00009D                     _gblCBWLength:
  1636                           	opt stack 0
  1637  00009D                     	ds	1
  1638  00009E                     _MSDRetryAttempt:
  1639                           	opt stack 0
  1640  00009E                     	ds	1
  1641  00009F                     _MSDWriteState:
  1642                           	opt stack 0
  1643  00009F                     	ds	1
  1644  0000A0                     _MSDReadState:
  1645                           	opt stack 0
  1646  0000A0                     	ds	1
  1647  0000A1                     _MSDCommandState:
  1648                           	opt stack 0
  1649  0000A1                     	ds	1
  1650  0000A2                     _MSD_State:
  1651                           	opt stack 0
  1652  0000A2                     	ds	1
  1653  0000A3                     _USBTicksSinceSuspendEnd:
  1654                           	opt stack 0
  1655  0000A3                     	ds	1
  1656  0000A4                     _USBDeferOUTDataStagePackets:
  1657                           	opt stack 0
  1658  0000A4                     	ds	1
  1659  0000A5                     _USBDeferINDataStagePackets:
  1660                           	opt stack 0
  1661  0000A5                     	ds	1
  1662  0000A6                     _USBStatusStageEnabledFlag2:
  1663                           	opt stack 0
  1664  0000A6                     	ds	1
  1665  0000A7                     _USBStatusStageEnabledFlag1:
  1666                           	opt stack 0
  1667  0000A7                     	ds	1
  1668  0000A8                     _USBDeferStatusStagePacket:
  1669                           	opt stack 0
  1670  0000A8                     	ds	1
  1671  0000A9                     _USBStatusStageTimeoutCounter:
  1672                           	opt stack 0
  1673  0000A9                     	ds	1
  1674  0000AA                     _BothEP0OutUOWNsSet:
  1675                           	opt stack 0
  1676  0000AA                     	ds	1
  1677  0000AB                     _endpoint_number:
  1678                           	opt stack 0
  1679  0000AB                     	ds	1
  1680  0000AC                     _USBBusIsSuspended:
  1681                           	opt stack 0
  1682  0000AC                     	ds	1
  1683  0000AD                     _RemoteWakeup:
  1684                           	opt stack 0
  1685  0000AD                     	ds	1
  1686  0000AE                     _controlTransferState:
  1687                           	opt stack 0
  1688  0000AE                     	ds	1
  1689  0000AF                     _shortPacketStatus:
  1690                           	opt stack 0
  1691  0000AF                     	ds	1
  1692  0000B0                     _USBDeviceState:
  1693                           	opt stack 0
  1694  0000B0                     	ds	1
  1695  0000B1                     _active_protocol:
  1696                           	opt stack 0
  1697  0000B1                     	ds	1
  1698  0000B2                     _idle_rate:
  1699                           	opt stack 0
  1700  0000B2                     	ds	1
  1701  0000B3                     _USTATcopy:
  1702                           	opt stack 0
  1703  0000B3                     	ds	1
  1704  0000B4                     _USBActiveConfiguration:
  1705                           	opt stack 0
  1706  0000B4                     	ds	1
  1707                           tblptru	equ	0xFF8
  1708                           tblptrh	equ	0xFF7
  1709                           tblptrl	equ	0xFF6
  1710                           tablat	equ	0xFF5
  1711                           postinc0	equ	0xFEE
  1712                           wreg	equ	0xFE8
  1713                           postdec1	equ	0xFE5
  1714                           fsr1h	equ	0xFE2
  1715                           fsr1l	equ	0xFE1
  1716                           
  1717                           	psect	dataBANK0
  1718  0000FE                     __pdataBANK0:
  1719                           	opt stack 0
  1720  0000FE                     _file_number:
  1721                           	opt stack 0
  1722  0000FE                     	ds	1
  1723                           tblptru	equ	0xFF8
  1724                           tblptrh	equ	0xFF7
  1725                           tblptrl	equ	0xFF6
  1726                           tablat	equ	0xFF5
  1727                           postinc0	equ	0xFEE
  1728                           wreg	equ	0xFE8
  1729                           postdec1	equ	0xFE5
  1730                           fsr1h	equ	0xFE2
  1731                           fsr1l	equ	0xFE1
  1732                           
  1733                           	psect	bssBANK1
  1734  000100                     __pbssBANK1:
  1735                           	opt stack 0
  1736  000100                     _gblCBW:
  1737                           	opt stack 0
  1738  000100                     	ds	31
  1739  00011F                     _gblSenseData:
  1740                           	opt stack 0
  1741  00011F                     	ds	18
  1742  000131                     _outPipes:
  1743                           	opt stack 0
  1744  000131                     	ds	8
  1745  000139                     _communicationSettings:
  1746                           	opt stack 0
  1747  000139                     	ds	7
  1748  000140                     _extended_linear_address:
  1749                           	opt stack 0
  1750  000140                     	ds	4
  1751  000144                     _file_maximum_address:
  1752                           	opt stack 0
  1753  000144                     	ds	4
  1754  000148                     _file_minimum_address:
  1755                           	opt stack 0
  1756  000148                     	ds	4
  1757  00014C                     _gblBLKLen:
  1758                           	opt stack 0
  1759  00014C                     	ds	4
  1760  000150                     _gblNumBLKS:
  1761                           	opt stack 0
  1762  000150                     	ds	4
  1763  000154                     _USB1msTickCount:
  1764                           	opt stack 0
  1765  000154                     	ds	4
  1766  000158                     _config_external:
  1767                           	opt stack 0
  1768  000158                     	ds	3
  1769  00015B                     _config_internal:
  1770                           	opt stack 0
  1771  00015B                     	ds	3
  1772  00015E                     _ep_data_out:
  1773                           	opt stack 0
  1774  00015E                     	ds	3
  1775  000161                     _ep_data_in:
  1776                           	opt stack 0
  1777  000161                     	ds	3
  1778  000164                     _FileAddress:
  1779                           	opt stack 0
  1780  000164                     	ds	2
  1781  000166                     _flash_pages_written:
  1782                           	opt stack 0
  1783  000166                     	ds	2
  1784  000168                     _total_hex_file_entries:
  1785                           	opt stack 0
  1786  000168                     	ds	2
  1787  00016A                     _hex_file_entries:
  1788                           	opt stack 0
  1789  00016A                     	ds	2
  1790  00016C                     _startup_timer:
  1791                           	opt stack 0
  1792  00016C                     	ds	2
  1793  00016E                     _system_ui_inactive_count:
  1794                           	opt stack 0
  1795  00016E                     	ds	2
  1796  000170                     _USBInHandle:
  1797                           	opt stack 0
  1798  000170                     	ds	2
  1799  000172                     _gblMediaPresent:
  1800                           	opt stack 0
  1801  000172                     	ds	2
  1802  000174                     _MSBBufferIndex:
  1803                           	opt stack 0
  1804  000174                     	ds	2
  1805  000176                     _display_content:
  1806                           	opt stack 0
  1807  000176                     	ds	80
  1808  0001C6                     _hex_file_entry:
  1809                           	opt stack 0
  1810  0001C6                     	ds	23
  1811  0001DD                     _mediaInformation:
  1812                           	opt stack 0
  1813  0001DD                     	ds	5
  1814  0001E2                     _USBAlternateInterface:
  1815                           	opt stack 0
  1816  0001E2                     	ds	2
  1817                           tblptru	equ	0xFF8
  1818                           tblptrh	equ	0xFF7
  1819                           tblptrl	equ	0xFF6
  1820                           tablat	equ	0xFF5
  1821                           postinc0	equ	0xFEE
  1822                           wreg	equ	0xFE8
  1823                           postdec1	equ	0xFE5
  1824                           fsr1h	equ	0xFE2
  1825                           fsr1l	equ	0xFE1
  1826                           
  1827                           	psect	dataBANK1
  1828  0001E4                     __pdataBANK1:
  1829                           	opt stack 0
  1830  0001E4                     _LUN:
  1831                           	opt stack 0
  1832  0001E4                     	ds	20
  1833  0001F8                     	ds	8
  1834                           tblptru	equ	0xFF8
  1835                           tblptrh	equ	0xFF7
  1836                           tblptrl	equ	0xFF6
  1837                           tablat	equ	0xFF5
  1838                           postinc0	equ	0xFEE
  1839                           wreg	equ	0xFE8
  1840                           postdec1	equ	0xFE5
  1841                           fsr1h	equ	0xFE2
  1842                           fsr1l	equ	0xFE1
  1843                           
  1844                           	psect	bssBANK2
  1845  000200                     __pbssBANK2:
  1846                           	opt stack 0
  1847  000200                     __spi_external_rx_buffer:
  1848                           	opt stack 0
  1849  000200                     	ds	64
  1850  000240                     __spi_external_tx_buffer:
  1851                           	opt stack 0
  1852  000240                     	ds	64
  1853  000280                     _ReceivedDataBuffer:
  1854                           	opt stack 0
  1855  000280                     	ds	64
  1856  0002C0                     _file_buffer:
  1857                           	opt stack 0
  1858  0002C0                     	ds	50
  1859                           tblptru	equ	0xFF8
  1860                           tblptrh	equ	0xFF7
  1861                           tblptrl	equ	0xFF6
  1862                           tablat	equ	0xFF5
  1863                           postinc0	equ	0xFEE
  1864                           wreg	equ	0xFE8
  1865                           postdec1	equ	0xFE5
  1866                           fsr1h	equ	0xFE2
  1867                           fsr1l	equ	0xFE1
  1868                           
  1869                           	psect	dataBANK2
  1870  0002F2                     __pdataBANK2:
  1871                           	opt stack 0
  1872  0002F2                     i2c_display_send_init_sequence@F6808:
  1873                           	opt stack 0
  1874  0002F2                     	ds	9
  1875                           tblptru	equ	0xFF8
  1876                           tblptrh	equ	0xFF7
  1877                           tblptrl	equ	0xFF6
  1878                           tablat	equ	0xFF5
  1879                           postinc0	equ	0xFEE
  1880                           wreg	equ	0xFE8
  1881                           postdec1	equ	0xFE5
  1882                           fsr1h	equ	0xFE2
  1883                           fsr1l	equ	0xFE1
  1884                           
  1885                           	psect	bssBANK3
  1886  000300                     __pbssBANK3:
  1887                           	opt stack 0
  1888  000300                     _ToSendDataBuffer:
  1889                           	opt stack 0
  1890  000300                     	ds	64
  1891                           tblptru	equ	0xFF8
  1892                           tblptrh	equ	0xFF7
  1893                           tblptrl	equ	0xFF6
  1894                           tablat	equ	0xFF5
  1895                           postinc0	equ	0xFEE
  1896                           wreg	equ	0xFE8
  1897                           postdec1	equ	0xFE5
  1898                           fsr1h	equ	0xFE2
  1899                           fsr1l	equ	0xFE1
  1900                           
  1901                           	psect	bssBIGRAMlh
  1902  000800                     __pbssBIGRAMlh:
  1903                           	opt stack 0
  1904  000800                     _pageBuffer:
  1905                           	opt stack 0
  1906  000800                     	ds	1024
  1907                           tblptru	equ	0xFF8
  1908                           tblptrh	equ	0xFF7
  1909                           tblptrl	equ	0xFF6
  1910                           tablat	equ	0xFF5
  1911                           postinc0	equ	0xFEE
  1912                           wreg	equ	0xFE8
  1913                           postdec1	equ	0xFE5
  1914                           fsr1h	equ	0xFE2
  1915                           fsr1l	equ	0xFE1
  1916                           
  1917                           	psect	bssBIGRAMll
  1918  000340                     __pbssBIGRAMll:
  1919                           	opt stack 0
  1920  000340                     _buffer:
  1921                           	opt stack 0
  1922  000340                     	ds	512
  1923                           tblptru	equ	0xFF8
  1924                           tblptrh	equ	0xFF7
  1925                           tblptrl	equ	0xFF6
  1926                           tablat	equ	0xFF5
  1927                           postinc0	equ	0xFEE
  1928                           wreg	equ	0xFE8
  1929                           postdec1	equ	0xFE5
  1930                           fsr1h	equ	0xFE2
  1931                           fsr1l	equ	0xFE1
  1932                           
  1933                           	psect	cstackBANK0
  1934  0000B5                     __pcstackBANK0:
  1935                           	opt stack 0
  1936  0000B5                     fat_rename_file@file_number:
  1937                           	opt stack 0
  1938  0000B5                     fat_create_file@next_cluster:
  1939                           	opt stack 0
  1940  0000B5                     fat_append_to_file@sector:
  1941                           	opt stack 0
  1942  0000B5                     fat_read_from_file@sector:
  1943                           	opt stack 0
  1944                           
  1945                           ; 2 bytes @ 0x0
  1946  0000B5                     	ds	1
  1947  0000B6                     fat_rename_file@root:
  1948                           	opt stack 0
  1949                           
  1950                           ; 32 bytes @ 0x1
  1951  0000B6                     	ds	1
  1952  0000B7                     fat_read_from_file@file_number:
  1953                           	opt stack 0
  1954  0000B7                     fat_create_file@cluster_count:
  1955                           	opt stack 0
  1956  0000B7                     fat_append_to_file@file_size:
  1957                           	opt stack 0
  1958                           
  1959                           ; 4 bytes @ 0x2
  1960  0000B7                     	ds	1
  1961  0000B8                     fat_read_from_file@root:
  1962                           	opt stack 0
  1963                           
  1964                           ; 32 bytes @ 0x3
  1965  0000B8                     	ds	1
  1966  0000B9                     fat_create_file@root_slot:
  1967                           	opt stack 0
  1968                           
  1969                           ; 1 bytes @ 0x4
  1970  0000B9                     	ds	1
  1971  0000BA                     fat_create_file@number_of_clusters:
  1972                           	opt stack 0
  1973                           
  1974                           ; 2 bytes @ 0x5
  1975  0000BA                     	ds	1
  1976  0000BB                     fat_append_to_file@new_cluster:
  1977                           	opt stack 0
  1978                           
  1979                           ; 2 bytes @ 0x6
  1980  0000BB                     	ds	1
  1981  0000BC                     fat_create_file@cluster:
  1982                           	opt stack 0
  1983                           
  1984                           ; 2 bytes @ 0x7
  1985  0000BC                     	ds	1
  1986  0000BD                     fat_append_to_file@fat_cluster:
  1987                           	opt stack 0
  1988                           
  1989                           ; 2 bytes @ 0x8
  1990  0000BD                     	ds	1
  1991  0000BE                     fat_create_file@root_entry:
  1992                           	opt stack 0
  1993                           
  1994                           ; 32 bytes @ 0x9
  1995  0000BE                     	ds	1
  1996  0000BF                     fat_append_to_file@offset:
  1997                           	opt stack 0
  1998                           
  1999                           ; 2 bytes @ 0xA
  2000  0000BF                     	ds	2
  2001  0000C1                     fat_append_to_file@file_number:
  2002                           	opt stack 0
  2003                           
  2004                           ; 1 bytes @ 0xC
  2005  0000C1                     	ds	1
  2006  0000C2                     fat_append_to_file@length:
  2007                           	opt stack 0
  2008                           
  2009                           ; 2 bytes @ 0xD
  2010  0000C2                     	ds	2
  2011  0000C4                     fat_append_to_file@position:
  2012                           	opt stack 0
  2013                           
  2014                           ; 4 bytes @ 0xF
  2015  0000C4                     	ds	4
  2016  0000C8                     fat_append_to_file@root:
  2017                           	opt stack 0
  2018                           
  2019                           ; 32 bytes @ 0x13
  2020  0000C8                     	ds	14
  2021  0000D6                     fat_rename_file@cntr:
  2022                           	opt stack 0
  2023                           
  2024                           ; 1 bytes @ 0x21
  2025  0000D6                     	ds	2
  2026  0000D8                     fat_read_from_file@cluster:
  2027                           	opt stack 0
  2028                           
  2029                           ; 2 bytes @ 0x23
  2030  0000D8                     	ds	2
  2031  0000DA                     fat_read_from_file@offset:
  2032                           	opt stack 0
  2033                           
  2034                           ; 2 bytes @ 0x25
  2035  0000DA                     	ds	2
  2036  0000DC                     fat_read_from_file@read_length:
  2037                           	opt stack 0
  2038                           
  2039                           ; 2 bytes @ 0x27
  2040  0000DC                     	ds	2
  2041  0000DE                     fat_read_from_file@position:
  2042                           	opt stack 0
  2043                           
  2044                           ; 4 bytes @ 0x29
  2045  0000DE                     	ds	4
  2046  0000E2                     __bootloader_verify_file@rec_counter:
  2047                           	opt stack 0
  2048  0000E2                     __bootloader_program@buffer:
  2049                           	opt stack 0
  2050  0000E2                     __fill_buffer_read_file@file_size:
  2051                           	opt stack 0
  2052                           
  2053                           ; 4 bytes @ 0x2D
  2054  0000E2                     	ds	1
  2055  0000E3                     __bootloader_verify_file@return_value:
  2056                           	opt stack 0
  2057                           
  2058                           ; 4 bytes @ 0x2E
  2059  0000E3                     	ds	1
  2060  0000E4                     __bootloader_program@entry_page:
  2061                           	opt stack 0
  2062                           
  2063                           ; 2 bytes @ 0x2F
  2064  0000E4                     	ds	2
  2065  0000E6                     __bootloader_program@address_within_page:
  2066                           	opt stack 0
  2067  0000E6                     __fill_buffer_read_file@data_length:
  2068                           	opt stack 0
  2069                           
  2070                           ; 4 bytes @ 0x31
  2071  0000E6                     	ds	1
  2072  0000E7                     __bootloader_verify_file@address32:
  2073                           	opt stack 0
  2074                           
  2075                           ; 4 bytes @ 0x32
  2076  0000E7                     	ds	1
  2077  0000E8                     api_parse@inBuffer:
  2078                           	opt stack 0
  2079  0000E8                     __bootloader_program@return_value:
  2080                           	opt stack 0
  2081                           
  2082                           ; 4 bytes @ 0x33
  2083  0000E8                     	ds	2
  2084  0000EA                     api_parse@receivedDataLength:
  2085                           	opt stack 0
  2086  0000EA                     __fill_buffer_read_file@start:
  2087                           	opt stack 0
  2088                           
  2089                           ; 4 bytes @ 0x35
  2090  0000EA                     	ds	2
  2091  0000EC                     __bootloader_program@address32:
  2092                           	opt stack 0
  2093                           
  2094                           ; 4 bytes @ 0x37
  2095  0000EC                     	ds	2
  2096  0000EE                     api_prepare@inBuffer:
  2097                           	opt stack 0
  2098                           
  2099                           ; 2 bytes @ 0x39
  2100  0000EE                     	ds	2
  2101  0000F0                     __bootloader_program@start_from_byte:
  2102                           	opt stack 0
  2103  0000F0                     api_prepare@outBuffer:
  2104                           	opt stack 0
  2105                           
  2106                           ; 2 bytes @ 0x3B
  2107  0000F0                     	ds	1
  2108  0000F1                     __bootloader_program@cntr:
  2109                           	opt stack 0
  2110                           
  2111                           ; 2 bytes @ 0x3C
  2112  0000F1                     	ds	1
  2113  0000F2                     ??_APP_DeviceCustomHIDTasks:
  2114                           
  2115                           ; 1 bytes @ 0x3D
  2116  0000F2                     	ds	1
  2117  0000F3                     __bootloader_program@page_to_write:
  2118                           	opt stack 0
  2119                           
  2120                           ; 2 bytes @ 0x3E
  2121  0000F3                     	ds	3
  2122  0000F6                     main@tx_start_addr:
  2123                           	opt stack 0
  2124                           
  2125                           ; 2 bytes @ 0x41
  2126  0000F6                     	ds	2
  2127  0000F8                     main@bytes_transmitted:
  2128                           	opt stack 0
  2129                           
  2130                           ; 2 bytes @ 0x43
  2131  0000F8                     	ds	2
  2132  0000FA                     main@rx_buffer:
  2133                           	opt stack 0
  2134                           
  2135                           ; 2 bytes @ 0x45
  2136  0000FA                     	ds	2
  2137  0000FC                     main@tx_buffer:
  2138                           	opt stack 0
  2139                           
  2140                           ; 2 bytes @ 0x47
  2141  0000FC                     	ds	2
  2142                           tblptru	equ	0xFF8
  2143                           tblptrh	equ	0xFF7
  2144                           tblptrl	equ	0xFF6
  2145                           tablat	equ	0xFF5
  2146                           postinc0	equ	0xFEE
  2147                           wreg	equ	0xFE8
  2148                           postdec1	equ	0xFE5
  2149                           fsr1h	equ	0xFE2
  2150                           fsr1l	equ	0xFE1
  2151                           
  2152                           	psect	cstackCOMRAM
  2153  000001                     __pcstackCOMRAM:
  2154                           	opt stack 0
  2155  000001                     ??_USBStdGetDscHandler:
  2156  000001                     ??_USBStdGetStatusHandler:
  2157  000001                     ??_system_delay_ms:
  2158  000001                     ??__i2c_wait_idle:
  2159  000001                     ??__display_clear:
  2160  000001                     ?_USBTransferOnePacket:
  2161                           	opt stack 0
  2162  000001                     ?_spi_get_external_rx_buffer:
  2163                           	opt stack 0
  2164  000001                     ?_spi_get_external_tx_buffer:
  2165                           	opt stack 0
  2166  000001                     ?_ExternalFlash_MediaInitialize:
  2167                           	opt stack 0
  2168  000001                     ?_ExternalFlash_SectorSizeRead:
  2169                           	opt stack 0
  2170  000001                     ?_bootloader_get_entries:
  2171                           	opt stack 0
  2172  000001                     ?_bootloader_get_total_entries:
  2173                           	opt stack 0
  2174  000001                     ?_bootloader_get_rec_address:
  2175                           	opt stack 0
  2176  000001                     ?_bootloader_get_flashPagesWritten:
  2177                           	opt stack 0
  2178  000001                     ?_strncmp:
  2179                           	opt stack 0
  2180  000001                     ?_internalFlash_pageFromAddress:
  2181                           	opt stack 0
  2182  000001                     ?_internalFlash_getBuffer:
  2183                           	opt stack 0
  2184  000001                     ?__get_time:
  2185                           	opt stack 0
  2186  000001                     ?__get_date:
  2187                           	opt stack 0
  2188  000001                     ?__sector_from_cluster:
  2189                           	opt stack 0
  2190  000001                     ?_bootloader_get_rec_dataLength:
  2191                           	opt stack 0
  2192  000001                     ?___lwdiv:
  2193                           	opt stack 0
  2194  000001                     ?___lwmod:
  2195                           	opt stack 0
  2196  000001                     ?_ExternalFlash_CapacityRead:
  2197                           	opt stack 0
  2198  000001                     ?_bootloader_get_file_size:
  2199                           	opt stack 0
  2200  000001                     ?_internalFlash_addressFromPage:
  2201                           	opt stack 0
  2202  000001                     ?___lldiv:
  2203                           	opt stack 0
  2204  000001                     ?___llmod:
  2205                           	opt stack 0
  2206  000001                     USBTransferOnePacket@dir:
  2207                           	opt stack 0
  2208  000001                     USBStallEndpoint@dir:
  2209                           	opt stack 0
  2210  000001                     USBConfigureEndpoint@direction:
  2211                           	opt stack 0
  2212  000001                     USBCtrlTrfTxService@byteToSend:
  2213                           	opt stack 0
  2214  000001                     USBCtrlTrfRxService@i:
  2215                           	opt stack 0
  2216  000001                     __i2c_send@dat:
  2217                           	opt stack 0
  2218  000001                     i2c_set_frequency@frequency:
  2219                           	opt stack 0
  2220  000001                     display_get_character@position:
  2221                           	opt stack 0
  2222  000001                     __display_search@cntr:
  2223                           	opt stack 0
  2224  000001                     __display_rebooting@cntr:
  2225                           	opt stack 0
  2226  000001                     hexCharToUint8@c:
  2227                           	opt stack 0
  2228  000001                     bootloader_get_rec_data@index:
  2229                           	opt stack 0
  2230  000001                     __internalFlash_unlockAndActivate@UnlockKey:
  2231                           	opt stack 0
  2232  000001                     spi_set_configuration@configuration:
  2233                           	opt stack 0
  2234  000001                     MSDComputeDeviceInAndResidue@DiExpected:
  2235                           	opt stack 0
  2236  000001                     SYSTEM_Initialize@pll_startup_counter:
  2237                           	opt stack 0
  2238  000001                     ExternalFlash_MediaInitialize@config:
  2239                           	opt stack 0
  2240  000001                     ExternalFlash_SectorSizeRead@config:
  2241                           	opt stack 0
  2242  000001                     ExternalFlash_CapacityRead@config:
  2243                           	opt stack 0
  2244  000001                     ExternalFlash_MediaDetect@config:
  2245                           	opt stack 0
  2246  000001                     ExternalFlash_WriteProtectStateGet@config:
  2247                           	opt stack 0
  2248  000001                     __sector_from_cluster@fat_cluster:
  2249                           	opt stack 0
  2250  000001                     __get_mbr@idx:
  2251                           	opt stack 0
  2252  000001                     __get_fbr@idx:
  2253                           	opt stack 0
  2254  000001                     __get_fat@idx:
  2255                           	opt stack 0
  2256  000001                     __get_root@idx:
  2257                           	opt stack 0
  2258  000001                     __get_data@idx:
  2259                           	opt stack 0
  2260  000001                     internalFlash_addressFromPage@page:
  2261                           	opt stack 0
  2262  000001                     __fill_buffer_get_configuration@outBuffer:
  2263                           	opt stack 0
  2264  000001                     __parse_file_truncate@data:
  2265                           	opt stack 0
  2266  000001                     __parse_file_modify@data:
  2267                           	opt stack 0
  2268  000001                     spi_tx@data:
  2269                           	opt stack 0
  2270  000001                     spi_tx_tx@command:
  2271                           	opt stack 0
  2272  000001                     spi_tx_rx@command:
  2273                           	opt stack 0
  2274  000001                     ___lwdiv@dividend:
  2275                           	opt stack 0
  2276  000001                     ___lwmod@dividend:
  2277                           	opt stack 0
  2278  000001                     memcpy@d1:
  2279                           	opt stack 0
  2280  000001                     memset@p1:
  2281                           	opt stack 0
  2282  000001                     strncmp@s1:
  2283                           	opt stack 0
  2284  000001                     __spi_init@details:
  2285                           	opt stack 0
  2286  000001                     __bootloader_check_address@address:
  2287                           	opt stack 0
  2288  000001                     internalFlash_pageFromAddress@address:
  2289                           	opt stack 0
  2290  000001                     ___lldiv@dividend:
  2291                           	opt stack 0
  2292  000001                     ___llmod@dividend:
  2293                           	opt stack 0
  2294                           
  2295                           ; 4 bytes @ 0x0
  2296  000001                     	ds	1
  2297  000002                     ??_USBConfigureEndpoint:
  2298  000002                     ??_USBStallEndpoint:
  2299  000002                     ??_display_get_character:
  2300  000002                     USBCtrlTrfRxService@byteToRead:
  2301                           	opt stack 0
  2302  000002                     USBCtrlTrfInHandler@lastDTS:
  2303                           	opt stack 0
  2304  000002                     system_delay_ms@ms:
  2305                           	opt stack 0
  2306  000002                     hexCharToUint8@ascii:
  2307                           	opt stack 0
  2308  000002                     __internalFlash_unlockAndActivate@InterruptEnableSave:
  2309                           	opt stack 0
  2310  000002                     USBTransferOnePacket@data:
  2311                           	opt stack 0
  2312  000002                     USBStdGetStatusHandler@p:
  2313                           	opt stack 0
  2314                           
  2315                           ; 2 bytes @ 0x1
  2316  000002                     	ds	1
  2317  000003                     ??_MSDComputeDeviceInAndResidue:
  2318  000003                     ??__get_mbr:
  2319  000003                     ??__get_fbr:
  2320  000003                     ??__get_fat:
  2321  000003                     ??__get_root:
  2322  000003                     ?_hexCharsToUint16:
  2323                           	opt stack 0
  2324  000003                     system_delay_ms@cntr:
  2325                           	opt stack 0
  2326  000003                     __display_clear@row:
  2327                           	opt stack 0
  2328  000003                     hexCharsToUint8@c2:
  2329                           	opt stack 0
  2330  000003                     hexCharsToUint16@c2:
  2331                           	opt stack 0
  2332  000003                     SYSTEM_Initialize@pll_startup_counter_3036:
  2333                           	opt stack 0
  2334  000003                     __get_time@time:
  2335                           	opt stack 0
  2336  000003                     __get_date@date:
  2337                           	opt stack 0
  2338  000003                     internalFlash_erasePage@page:
  2339                           	opt stack 0
  2340  000003                     internalFlash_writePage@page:
  2341                           	opt stack 0
  2342  000003                     spi_tx@length:
  2343                           	opt stack 0
  2344  000003                     spi_tx_tx@command_length:
  2345                           	opt stack 0
  2346  000003                     spi_tx_rx@command_length:
  2347                           	opt stack 0
  2348  000003                     ___lwdiv@divisor:
  2349                           	opt stack 0
  2350  000003                     ___lwmod@divisor:
  2351                           	opt stack 0
  2352  000003                     memset@c:
  2353                           	opt stack 0
  2354  000003                     strncmp@s2:
  2355                           	opt stack 0
  2356  000003                     memcpy@s1:
  2357                           	opt stack 0
  2358                           
  2359                           ; 3 bytes @ 0x2
  2360  000003                     	ds	1
  2361  000004                     ??_hexCharsToUint8:
  2362  000004                     USBTransferOnePacket@len:
  2363                           	opt stack 0
  2364  000004                     display_get_character@line:
  2365                           	opt stack 0
  2366  000004                     __display_clear@col:
  2367                           	opt stack 0
  2368  000004                     hexCharsToUint16@c3:
  2369                           	opt stack 0
  2370  000004                     spi_init@configuration:
  2371                           	opt stack 0
  2372                           
  2373                           ; 1 bytes @ 0x3
  2374  000004                     	ds	1
  2375  000005                     ??_USBTransferOnePacket:
  2376  000005                     ??_spi_tx:
  2377  000005                     ??_internalFlash_pageFromAddress:
  2378  000005                     SYSTEM_Initialize@state:
  2379                           	opt stack 0
  2380  000005                     hexCharsToUint8@c1:
  2381                           	opt stack 0
  2382  000005                     hexCharsToUint16@c4:
  2383                           	opt stack 0
  2384  000005                     __bootloader_check_address@dataLength:
  2385                           	opt stack 0
  2386  000005                     ___lwmod@counter:
  2387                           	opt stack 0
  2388  000005                     __update_modified_time@root:
  2389                           	opt stack 0
  2390  000005                     __fill_buffer_get_display@outBuffer:
  2391                           	opt stack 0
  2392  000005                     __fill_buffer_get_bootloader_details@outBuffer:
  2393                           	opt stack 0
  2394  000005                     spi_tx_tx@data:
  2395                           	opt stack 0
  2396  000005                     spi_tx_rx@data:
  2397                           	opt stack 0
  2398  000005                     ___lwdiv@quotient:
  2399                           	opt stack 0
  2400  000005                     memset@n:
  2401                           	opt stack 0
  2402  000005                     strncmp@len:
  2403                           	opt stack 0
  2404  000005                     internalFlash_erasePage@address:
  2405                           	opt stack 0
  2406  000005                     internalFlash_writePage@address:
  2407                           	opt stack 0
  2408  000005                     internalFlash_addressFromPage@address:
  2409                           	opt stack 0
  2410  000005                     ___lldiv@divisor:
  2411                           	opt stack 0
  2412  000005                     ___llmod@divisor:
  2413                           	opt stack 0
  2414                           
  2415                           ; 4 bytes @ 0x4
  2416  000005                     	ds	1
  2417  000006                     ??_hexCharsToUint16:
  2418  000006                     ??__bootloader_check_address:
  2419  000006                     USBStallEndpoint@ep:
  2420                           	opt stack 0
  2421  000006                     USBConfigureEndpoint@EPNum:
  2422                           	opt stack 0
  2423  000006                     hexCharsToUint8@retVal:
  2424                           	opt stack 0
  2425  000006                     __i2c_write@data:
  2426                           	opt stack 0
  2427  000006                     __i2c_read@data:
  2428                           	opt stack 0
  2429  000006                     i2c_display_write_fixed@data:
  2430                           	opt stack 0
  2431  000006                     memcpy@n:
  2432                           	opt stack 0
  2433                           
  2434                           ; 2 bytes @ 0x5
  2435  000006                     	ds	1
  2436  000007                     ??_strncmp:
  2437  000007                     ??__fill_buffer_get_bootloader_details:
  2438  000007                     __fill_buffer_get_display@secondHalf:
  2439                           	opt stack 0
  2440  000007                     ___lwdiv@counter:
  2441                           	opt stack 0
  2442  000007                     USBStallEndpoint@p:
  2443                           	opt stack 0
  2444  000007                     USBConfigureEndpoint@handle:
  2445                           	opt stack 0
  2446  000007                     spi_tx_tx@data_length:
  2447                           	opt stack 0
  2448  000007                     spi_tx_rx@data_length:
  2449                           	opt stack 0
  2450  000007                     memset@p:
  2451                           	opt stack 0
  2452                           
  2453                           ; 2 bytes @ 0x6
  2454  000007                     	ds	1
  2455  000008                     ??__fill_buffer_get_display:
  2456  000008                     __i2c_write@length:
  2457                           	opt stack 0
  2458  000008                     __i2c_read@length:
  2459                           	opt stack 0
  2460  000008                     i2c_display_write_fixed@length:
  2461                           	opt stack 0
  2462  000008                     utoa@buf:
  2463                           	opt stack 0
  2464  000008                     memcpy@s:
  2465                           	opt stack 0
  2466                           
  2467                           ; 3 bytes @ 0x7
  2468  000008                     	ds	1
  2469  000009                     ??_spi_tx_rx:
  2470  000009                     ??_spi_tx_tx:
  2471  000009                     ??__i2c_read:
  2472  000009                     ?_internalFlash_addressWithinPage:
  2473                           	opt stack 0
  2474  000009                     USBDeviceInit@i:
  2475                           	opt stack 0
  2476  000009                     USBEnableEndpoint@options:
  2477                           	opt stack 0
  2478  000009                     USBTransferOnePacket@ep:
  2479                           	opt stack 0
  2480  000009                     MSDErrorHandler@ErrorCase:
  2481                           	opt stack 0
  2482  000009                     __i2c_write@slave_address:
  2483                           	opt stack 0
  2484  000009                     i2c_display_write_fixed@pos:
  2485                           	opt stack 0
  2486  000009                     __flash_wakeup@command:
  2487                           	opt stack 0
  2488  000009                     hexCharsToUint16@c1:
  2489                           	opt stack 0
  2490  000009                     ___llmod@counter:
  2491                           	opt stack 0
  2492  000009                     internalFlash_writePage@cntr:
  2493                           	opt stack 0
  2494  000009                     internalFlash_addressWithinPage@address:
  2495                           	opt stack 0
  2496  000009                     ___lldiv@quotient:
  2497                           	opt stack 0
  2498                           
  2499                           ; 4 bytes @ 0x8
  2500  000009                     	ds	1
  2501  00000A                     MSDErrorHandler@OldMSD_State:
  2502                           	opt stack 0
  2503  00000A                     __i2c_write@cntr:
  2504                           	opt stack 0
  2505  00000A                     __bootloader_check_address@worst_case:
  2506                           	opt stack 0
  2507  00000A                     __fill_buffer_get_bootloader_details@data_length:
  2508                           	opt stack 0
  2509  00000A                     USBEnableEndpoint@p:
  2510                           	opt stack 0
  2511  00000A                     USBTransferOnePacket@handle:
  2512                           	opt stack 0
  2513  00000A                     hexCharsToUint16@retVal:
  2514                           	opt stack 0
  2515  00000A                     utoa@val:
  2516                           	opt stack 0
  2517                           
  2518                           ; 2 bytes @ 0x9
  2519  00000A                     	ds	1
  2520  00000B                     __ic2_display_set_address@address:
  2521                           	opt stack 0
  2522  00000B                     i2c_digipot_backlight@level:
  2523                           	opt stack 0
  2524  00000B                     __bootloader_check_address@byte_status:
  2525                           	opt stack 0
  2526  00000B                     internalFlash_writePage@block_cntr:
  2527                           	opt stack 0
  2528  00000B                     __fill_buffer_get_bootloader_details@cntr:
  2529                           	opt stack 0
  2530  00000B                     i2c_digipot_reset_on@data_array:
  2531                           	opt stack 0
  2532  00000B                     i2c_digipot_reset_off@data_array:
  2533                           	opt stack 0
  2534  00000B                     i2c_eeprom_writeByte@address:
  2535                           	opt stack 0
  2536  00000B                     memcpy@d:
  2537                           	opt stack 0
  2538  00000B                     MSDCheckForErrorCases@DeviceBytes:
  2539                           	opt stack 0
  2540  00000B                     i2c_display_send_init_sequence@init_sequence:
  2541                           	opt stack 0
  2542                           
  2543                           ; 9 bytes @ 0xA
  2544  00000B                     	ds	1
  2545  00000C                     ??_USBMSDInit:
  2546  00000C                     ?_parseHexFileEntry:
  2547                           	opt stack 0
  2548  00000C                     USBEnableEndpoint@ep:
  2549                           	opt stack 0
  2550  00000C                     __bootloader_check_address@cntr:
  2551                           	opt stack 0
  2552  00000C                     internalFlash_writePage@byte_cntr:
  2553                           	opt stack 0
  2554  00000C                     _USBCheckMSDRequest$2319:
  2555                           	opt stack 0
  2556  00000C                     MSDTransferTerminated@handle:
  2557                           	opt stack 0
  2558  00000C                     __ic2_display_set_address@data_array:
  2559                           	opt stack 0
  2560  00000C                     i2c_digipot_backlight@data_array:
  2561                           	opt stack 0
  2562  00000C                     parseHexFileEntry@data:
  2563                           	opt stack 0
  2564  00000C                     utoa@base:
  2565                           	opt stack 0
  2566  00000C                     __fill_buffer_get_bootloader_details@buffer_large:
  2567                           	opt stack 0
  2568                           
  2569                           ; 4 bytes @ 0xB
  2570  00000C                     	ds	1
  2571  00000D                     ?__flash_get_status:
  2572                           	opt stack 0
  2573  00000D                     i2c_eeprom_writeByte@data:
  2574                           	opt stack 0
  2575  00000D                     __fill_buffer_get_display@cntr:
  2576                           	opt stack 0
  2577  00000D                     ___lldiv@counter:
  2578                           	opt stack 0
  2579  00000D                     memcpy@tmp:
  2580                           	opt stack 0
  2581  00000D                     internalFlash_addressWithinPage@page:
  2582                           	opt stack 0
  2583                           
  2584                           ; 2 bytes @ 0xC
  2585  00000D                     	ds	1
  2586  00000E                     ??_i2c_eeprom_writeByte:
  2587  00000E                     i2c_display_cursor@position:
  2588                           	opt stack 0
  2589  00000E                     __fill_buffer_get_display@line:
  2590                           	opt stack 0
  2591  00000E                     _USBCheckMSDRequest$2320:
  2592                           	opt stack 0
  2593  00000E                     _MSDTransferTerminated$2407:
  2594                           	opt stack 0
  2595  00000E                     utoa@v:
  2596                           	opt stack 0
  2597  00000E                     parseHexFileEntry@offset:
  2598                           	opt stack 0
  2599  00000E                     internalFlash_read@address:
  2600                           	opt stack 0
  2601                           
  2602                           ; 4 bytes @ 0xD
  2603  00000E                     	ds	1
  2604  00000F                     ??_internalFlash_addressWithinPage:
  2605  00000F                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  2606                           	opt stack 0
  2607  00000F                     i2c_display_cursor@line:
  2608                           	opt stack 0
  2609  00000F                     __flash_get_status@command:
  2610                           	opt stack 0
  2611  00000F                     __fill_buffer_get_display@start_line:
  2612                           	opt stack 0
  2613                           
  2614                           ; 1 bytes @ 0xE
  2615  00000F                     	ds	1
  2616  000010                     MSDCheckForErrorCases@MSDErrorCase:
  2617                           	opt stack 0
  2618  000010                     __i2c_read@slave_address:
  2619                           	opt stack 0
  2620  000010                     i2c_display_cursor@address:
  2621                           	opt stack 0
  2622  000010                     __fill_buffer_get_display@position:
  2623                           	opt stack 0
  2624  000010                     utoa@c:
  2625                           	opt stack 0
  2626  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2627                           	opt stack 0
  2628  000010                     __flash_get_status@status:
  2629                           	opt stack 0
  2630  000010                     __fill_buffer_get_bootloader_details@buffer_small:
  2631                           	opt stack 0
  2632                           
  2633                           ; 2 bytes @ 0xF
  2634  000010                     	ds	1
  2635  000011                     MSDCheckForErrorCases@DeviceNoData:
  2636                           	opt stack 0
  2637  000011                     __i2c_read@cntr:
  2638                           	opt stack 0
  2639  000011                     i2c_eeprom_writeByte@dat:
  2640                           	opt stack 0
  2641  000011                     itoa@buf:
  2642                           	opt stack 0
  2643                           
  2644                           ; 2 bytes @ 0x10
  2645  000011                     	ds	1
  2646  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2647                           	opt stack 0
  2648  000012                     i2c_eeprom_readByte@address:
  2649                           	opt stack 0
  2650  000012                     __flash_is_busy@status:
  2651                           	opt stack 0
  2652  000012                     parseHexFileEntry@hexEntry:
  2653                           	opt stack 0
  2654  000012                     internalFlash_read@data_length:
  2655                           	opt stack 0
  2656                           
  2657                           ; 2 bytes @ 0x11
  2658  000012                     	ds	1
  2659  000013                     i2c_eeprom_writeByte@slave_address:
  2660                           	opt stack 0
  2661  000013                     itoa@val:
  2662                           	opt stack 0
  2663  000013                     internalFlash_addressWithinPage@page_start_address:
  2664                           	opt stack 0
  2665                           
  2666                           ; 4 bytes @ 0x12
  2667  000013                     	ds	1
  2668  000014                     ??_i2c_eeprom_readByte:
  2669  000014                     ??_parseHexFileEntry:
  2670  000014                     flash_is_busy@result:
  2671                           	opt stack 0
  2672  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2673                           	opt stack 0
  2674  000014                     __flash_copy_page_to_buffer@page:
  2675                           	opt stack 0
  2676  000014                     __flash_compare_page_to_buffer@page:
  2677                           	opt stack 0
  2678  000014                     __flash_write_to_buffer@start:
  2679                           	opt stack 0
  2680  000014                     __flash_write_page_from_buffer@page:
  2681                           	opt stack 0
  2682  000014                     __flash_partial_read@page:
  2683                           	opt stack 0
  2684  000014                     internalFlash_read@buffer:
  2685                           	opt stack 0
  2686  000014                     __flash_set_page_size@command:
  2687                           	opt stack 0
  2688                           
  2689                           ; 4 bytes @ 0x13
  2690  000014                     	ds	1
  2691  000015                     __fill_buffer_get_status@outBuffer:
  2692                           	opt stack 0
  2693  000015                     itoa@base:
  2694                           	opt stack 0
  2695                           
  2696                           ; 2 bytes @ 0x14
  2697  000015                     	ds	1
  2698  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2699  000016                     __flash_copy_page_to_buffer@buffer:
  2700                           	opt stack 0
  2701  000016                     __flash_compare_page_to_buffer@buffer:
  2702                           	opt stack 0
  2703  000016                     __flash_write_page_from_buffer@buffer:
  2704                           	opt stack 0
  2705  000016                     __flash_write_to_buffer@data:
  2706                           	opt stack 0
  2707  000016                     __flash_partial_read@start:
  2708                           	opt stack 0
  2709  000016                     internalFlash_readPage@page:
  2710                           	opt stack 0
  2711                           
  2712                           ; 2 bytes @ 0x15
  2713  000016                     	ds	1
  2714  000017                     ??__flash_copy_page_to_buffer:
  2715  000017                     ??__flash_compare_page_to_buffer:
  2716  000017                     ??__flash_write_page_from_buffer:
  2717  000017                     i2c_eeprom_readByte@slave_address:
  2718                           	opt stack 0
  2719  000017                     itoa@cp:
  2720                           	opt stack 0
  2721                           
  2722                           ; 2 bytes @ 0x16
  2723  000017                     	ds	1
  2724  000018                     ??_USBStdFeatureReqHandler:
  2725  000018                     USBStdSetCfgHandler@i:
  2726                           	opt stack 0
  2727  000018                     i2c_eeprom_readByte@addr:
  2728                           	opt stack 0
  2729  000018                     __flash_set_page_size@size:
  2730                           	opt stack 0
  2731  000018                     __flash_write_to_buffer@data_length:
  2732                           	opt stack 0
  2733  000018                     __flash_partial_read@length:
  2734                           	opt stack 0
  2735  000018                     internalFlash_readPage@address:
  2736                           	opt stack 0
  2737                           
  2738                           ; 4 bytes @ 0x17
  2739  000018                     	ds	1
  2740  000019                     USBStdFeatureReqHandler@pUEP:
  2741                           	opt stack 0
  2742  000019                     __display_itoa_u16@value:
  2743                           	opt stack 0
  2744                           
  2745                           ; 4 bytes @ 0x18
  2746  000019                     	ds	1
  2747  00001A                     __flash_write_to_buffer@buffer:
  2748                           	opt stack 0
  2749  00001A                     __flash_compare_page_to_buffer@status:
  2750                           	opt stack 0
  2751  00001A                     __flash_partial_read@data:
  2752                           	opt stack 0
  2753  00001A                     __flash_copy_page_to_buffer@command:
  2754                           	opt stack 0
  2755  00001A                     __flash_write_page_from_buffer@command:
  2756                           	opt stack 0
  2757                           
  2758                           ; 4 bytes @ 0x19
  2759  00001A                     	ds	1
  2760  00001B                     USBStdFeatureReqHandler@current_ep_data:
  2761                           	opt stack 0
  2762  00001B                     __flash_write_to_buffer@command:
  2763                           	opt stack 0
  2764                           
  2765                           ; 4 bytes @ 0x1A
  2766  00001B                     	ds	1
  2767  00001C                     ??__flash_partial_read:
  2768  00001C                     parseHexFileEntry@i:
  2769                           	opt stack 0
  2770  00001C                     USBStdFeatureReqHandler@p:
  2771                           	opt stack 0
  2772  00001C                     __flash_compare_page_to_buffer@command:
  2773                           	opt stack 0
  2774                           
  2775                           ; 4 bytes @ 0x1B
  2776  00001C                     	ds	1
  2777  00001D                     __display_itoa_u16@text:
  2778                           	opt stack 0
  2779                           
  2780                           ; 2 bytes @ 0x1C
  2781  00001D                     	ds	1
  2782  00001E                     ??_USBCtrlEPService:
  2783  00001E                     
  2784                           ; 1 bytes @ 0x1D
  2785  00001E                     	ds	1
  2786  00001F                     ??__display_verify:
  2787  00001F                     ??__display_checked:
  2788  00001F                     __display_programming@cntr:
  2789                           	opt stack 0
  2790  00001F                     __display_done@cntr:
  2791                           	opt stack 0
  2792  00001F                     __display_itoa_u32@value:
  2793                           	opt stack 0
  2794                           
  2795                           ; 4 bytes @ 0x1E
  2796  00001F                     	ds	1
  2797  000020                     USBDeviceTasks@i:
  2798                           	opt stack 0
  2799  000020                     flash_page_write@page:
  2800                           	opt stack 0
  2801  000020                     flash_partial_write@page:
  2802                           	opt stack 0
  2803  000020                     __flash_partial_read@command:
  2804                           	opt stack 0
  2805                           
  2806                           ; 4 bytes @ 0x1F
  2807  000020                     	ds	1
  2808  000021                     __display_verify@cntr:
  2809                           	opt stack 0
  2810  000021                     __display_checked@start:
  2811                           	opt stack 0
  2812                           
  2813                           ; 1 bytes @ 0x20
  2814  000021                     	ds	1
  2815  000022                     __display_checked@cntr:
  2816                           	opt stack 0
  2817  000022                     flash_page_write@data:
  2818                           	opt stack 0
  2819  000022                     flash_partial_write@start:
  2820                           	opt stack 0
  2821                           
  2822                           ; 2 bytes @ 0x21
  2823  000022                     	ds	1
  2824  000023                     __display_itoa_u32@text:
  2825                           	opt stack 0
  2826                           
  2827                           ; 2 bytes @ 0x22
  2828  000023                     	ds	1
  2829  000024                     flash_page_write@match:
  2830                           	opt stack 0
  2831  000024                     flash_partial_write@length:
  2832                           	opt stack 0
  2833  000024                     __flash_partial_read@address:
  2834                           	opt stack 0
  2835                           
  2836                           ; 4 bytes @ 0x23
  2837  000024                     	ds	1
  2838  000025                     ??__display_found:
  2839  000025                     __display_start@cntr:
  2840                           	opt stack 0
  2841  000025                     __display_failed@cntr:
  2842                           	opt stack 0
  2843  000025                     ExternalFlash_SectorWrite@config:
  2844                           	opt stack 0
  2845  000025                     fat_format@cntr:
  2846                           	opt stack 0
  2847                           
  2848                           ; 2 bytes @ 0x24
  2849  000025                     	ds	1
  2850  000026                     flash_partial_write@data:
  2851                           	opt stack 0
  2852                           
  2853                           ; 2 bytes @ 0x25
  2854  000026                     	ds	1
  2855  000027                     __display_found@start:
  2856                           	opt stack 0
  2857  000027                     ExternalFlash_SectorWrite@sector_addr:
  2858                           	opt stack 0
  2859                           
  2860                           ; 4 bytes @ 0x26
  2861  000027                     	ds	1
  2862  000028                     __display_found@cntr:
  2863                           	opt stack 0
  2864  000028                     flash_partial_write@match:
  2865                           	opt stack 0
  2866  000028                     flash_page_read@page:
  2867                           	opt stack 0
  2868  000028                     flash_partial_read@page:
  2869                           	opt stack 0
  2870                           
  2871                           ; 2 bytes @ 0x27
  2872  000028                     	ds	1
  2873  000029                     ??_display_prepare:
  2874  000029                     ??__delete_root:
  2875  000029                     __write_fat@cluster:
  2876                           	opt stack 0
  2877  000029                     __write_root@data:
  2878                           	opt stack 0
  2879                           
  2880                           ; 2 bytes @ 0x28
  2881  000029                     	ds	1
  2882  00002A                     flash_page_read@data:
  2883                           	opt stack 0
  2884  00002A                     flash_partial_read@start:
  2885                           	opt stack 0
  2886  00002A                     __delete_root@root_sector:
  2887                           	opt stack 0
  2888                           
  2889                           ; 2 bytes @ 0x29
  2890  00002A                     	ds	1
  2891  00002B                     ??__write_root:
  2892  00002B                     display_prepare@mode:
  2893                           	opt stack 0
  2894  00002B                     ExternalFlash_SectorWrite@buffer:
  2895                           	opt stack 0
  2896  00002B                     __write_fat@value:
  2897                           	opt stack 0
  2898                           
  2899                           ; 2 bytes @ 0x2A
  2900  00002B                     	ds	1
  2901  00002C                     ??_fat_get_format_status:
  2902  00002C                     __parse_command_short@cmd:
  2903                           	opt stack 0
  2904  00002C                     flash_partial_read@length:
  2905                           	opt stack 0
  2906  00002C                     ExternalFlash_SectorRead@config:
  2907                           	opt stack 0
  2908  00002C                     __write_root@root_sector:
  2909                           	opt stack 0
  2910  00002C                     __delete_root@offset:
  2911                           	opt stack 0
  2912                           
  2913                           ; 2 bytes @ 0x2B
  2914  00002C                     	ds	1
  2915  00002D                     ExternalFlash_SectorWrite@allowWriteToZero:
  2916                           	opt stack 0
  2917  00002D                     __write_fat@fat_sector:
  2918                           	opt stack 0
  2919                           
  2920                           ; 2 bytes @ 0x2C
  2921  00002D                     	ds	1
  2922  00002E                     __delete_root@deleted_value:
  2923                           	opt stack 0
  2924  00002E                     flash_partial_read@data:
  2925                           	opt stack 0
  2926  00002E                     ExternalFlash_SectorWrite@page:
  2927                           	opt stack 0
  2928  00002E                     __write_root@offset:
  2929                           	opt stack 0
  2930  00002E                     fat_get_format_status@cntr:
  2931                           	opt stack 0
  2932  00002E                     ExternalFlash_SectorRead@sector_addr:
  2933                           	opt stack 0
  2934                           
  2935                           ; 4 bytes @ 0x2D
  2936  00002E                     	ds	1
  2937  00002F                     __delete_root@slot:
  2938                           	opt stack 0
  2939  00002F                     __write_fat@offset:
  2940                           	opt stack 0
  2941                           
  2942                           ; 2 bytes @ 0x2E
  2943  00002F                     	ds	1
  2944  000030                     ??_MSDWriteHandler:
  2945  000030                     ??__root_is_available:
  2946  000030                     ?__get_empty_cluster:
  2947                           	opt stack 0
  2948  000030                     ?_fat_get_empty_clusters:
  2949                           	opt stack 0
  2950  000030                     ?__read_fat:
  2951                           	opt stack 0
  2952  000030                     ?__get_first_cluster:
  2953                           	opt stack 0
  2954  000030                     ?_fat_get_file_size:
  2955                           	opt stack 0
  2956  000030                     __write_root@slot:
  2957                           	opt stack 0
  2958  000030                     __get_empty_cluster@first_cluster:
  2959                           	opt stack 0
  2960  000030                     fat_get_empty_clusters@maximum:
  2961                           	opt stack 0
  2962  000030                     __read_fat@cluster:
  2963                           	opt stack 0
  2964  000030                     fat_find_file@name:
  2965                           	opt stack 0
  2966                           
  2967                           ; 2 bytes @ 0x2F
  2968  000030                     	ds	1
  2969  000031                     __root_is_available@root_sector:
  2970                           	opt stack 0
  2971                           
  2972                           ; 2 bytes @ 0x30
  2973  000031                     	ds	1
  2974  000032                     ??__get_first_cluster:
  2975  000032                     ExternalFlash_SectorRead@buffer:
  2976                           	opt stack 0
  2977  000032                     __get_empty_cluster@fat_sector:
  2978                           	opt stack 0
  2979  000032                     fat_get_empty_clusters@fat_sector:
  2980                           	opt stack 0
  2981  000032                     __read_fat@fat_sector:
  2982                           	opt stack 0
  2983  000032                     fat_find_file@extension:
  2984                           	opt stack 0
  2985                           
  2986                           ; 2 bytes @ 0x31
  2987  000032                     	ds	1
  2988  000033                     __root_is_available@offset:
  2989                           	opt stack 0
  2990  000033                     __get_first_cluster@sector:
  2991                           	opt stack 0
  2992                           
  2993                           ; 2 bytes @ 0x32
  2994  000033                     	ds	1
  2995  000034                     ??_fat_get_file_size:
  2996  000034                     ExternalFlash_SectorRead@page:
  2997                           	opt stack 0
  2998  000034                     __get_empty_cluster@offset:
  2999                           	opt stack 0
  3000  000034                     fat_get_empty_clusters@offset:
  3001                           	opt stack 0
  3002  000034                     __read_fat@offset:
  3003                           	opt stack 0
  3004  000034                     fat_find_file@buffer:
  3005                           	opt stack 0
  3006                           
  3007                           ; 11 bytes @ 0x33
  3008  000034                     	ds	1
  3009  000035                     __root_is_available@file_number:
  3010                           	opt stack 0
  3011  000035                     __get_first_cluster@offset:
  3012                           	opt stack 0
  3013  000035                     fat_get_file_size@sector:
  3014                           	opt stack 0
  3015                           
  3016                           ; 2 bytes @ 0x34
  3017  000035                     	ds	1
  3018  000036                     ??_MSDReadHandler:
  3019  000036                     __root_is_available@first_byte:
  3020                           	opt stack 0
  3021  000036                     __get_empty_cluster@value:
  3022                           	opt stack 0
  3023  000036                     fat_get_empty_clusters@value:
  3024                           	opt stack 0
  3025  000036                     __read_fat@value:
  3026                           	opt stack 0
  3027                           
  3028                           ; 2 bytes @ 0x35
  3029  000036                     	ds	1
  3030  000037                     __get_available_root_entry@file_number:
  3031                           	opt stack 0
  3032  000037                     __get_first_cluster@first_cluster:
  3033                           	opt stack 0
  3034  000037                     fat_get_file_information@data:
  3035                           	opt stack 0
  3036  000037                     fat_get_file_size@file_size:
  3037                           	opt stack 0
  3038                           
  3039                           ; 4 bytes @ 0x36
  3040  000037                     	ds	1
  3041  000038                     __get_empty_cluster@cluster:
  3042                           	opt stack 0
  3043  000038                     fat_get_empty_clusters@empty_clusters:
  3044                           	opt stack 0
  3045                           
  3046                           ; 2 bytes @ 0x37
  3047  000038                     	ds	1
  3048  000039                     ??_fat_get_file_information:
  3049  000039                     __get_first_cluster@slot:
  3050                           	opt stack 0
  3051                           
  3052                           ; 1 bytes @ 0x38
  3053  000039                     	ds	1
  3054  00003A                     ??_MSDProcessCommandMediaPresent:
  3055  00003A                     fat_get_empty_clusters@cluster:
  3056                           	opt stack 0
  3057  00003A                     fat_delete_file@next_cluster:
  3058                           	opt stack 0
  3059  00003A                     fat_get_file_information@root_sector:
  3060                           	opt stack 0
  3061                           
  3062                           ; 2 bytes @ 0x39
  3063  00003A                     	ds	1
  3064  00003B                     fat_get_file_size@offset:
  3065                           	opt stack 0
  3066                           
  3067                           ; 2 bytes @ 0x3A
  3068  00003B                     	ds	1
  3069  00003C                     _MSDProcessCommandMediaPresent$2390:
  3070                           	opt stack 0
  3071  00003C                     fat_delete_file@first_cluster:
  3072                           	opt stack 0
  3073  00003C                     fat_get_file_information@offset:
  3074                           	opt stack 0
  3075                           
  3076                           ; 2 bytes @ 0x3B
  3077  00003C                     	ds	1
  3078  00003D                     fat_get_file_size@file_number:
  3079                           	opt stack 0
  3080                           
  3081                           ; 1 bytes @ 0x3C
  3082  00003D                     	ds	1
  3083  00003E                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  3084                           	opt stack 0
  3085  00003E                     fat_delete_file@file_number:
  3086                           	opt stack 0
  3087  00003E                     fat_get_file_information@file_number:
  3088                           	opt stack 0
  3089                           
  3090                           ; 1 bytes @ 0x3D
  3091  00003E                     	ds	1
  3092  00003F                     fat_find_file@slot:
  3093                           	opt stack 0
  3094  00003F                     fat_append_to_file@number_of_bytes:
  3095                           	opt stack 0
  3096  00003F                     fat_rename_file@name:
  3097                           	opt stack 0
  3098  00003F                     __fill_buffer_get_file_details@inBuffer:
  3099                           	opt stack 0
  3100  00003F                     __parse_file_delete@data:
  3101                           	opt stack 0
  3102  00003F                     MSDProcessCommandMediaPresent@sectorSize:
  3103                           	opt stack 0
  3104  00003F                     fat_read_from_file@start_byte:
  3105                           	opt stack 0
  3106                           
  3107                           ; 4 bytes @ 0x3E
  3108  00003F                     	ds	1
  3109  000040                     fat_find_file@sector:
  3110                           	opt stack 0
  3111                           
  3112                           ; 2 bytes @ 0x3F
  3113  000040                     	ds	1
  3114  000041                     fat_append_to_file@data:
  3115                           	opt stack 0
  3116  000041                     fat_rename_file@extension:
  3117                           	opt stack 0
  3118  000041                     __fill_buffer_get_file_details@outBuffer:
  3119                           	opt stack 0
  3120                           
  3121                           ; 2 bytes @ 0x40
  3122  000041                     	ds	1
  3123  000042                     fat_find_file@offset:
  3124                           	opt stack 0
  3125                           
  3126                           ; 2 bytes @ 0x41
  3127  000042                     	ds	1
  3128  000043                     ??_fat_append_to_file:
  3129  000043                     __fill_buffer_get_file_details@file_number:
  3130                           	opt stack 0
  3131  000043                     __parse_file_rename@data:
  3132                           	opt stack 0
  3133  000043                     MSDProcessCommandMediaPresent@capacity:
  3134                           	opt stack 0
  3135  000043                     fat_read_from_file@length:
  3136                           	opt stack 0
  3137                           
  3138                           ; 4 bytes @ 0x42
  3139  000043                     	ds	1
  3140  000044                     fat_create_file@name:
  3141                           	opt stack 0
  3142  000044                     __fill_buffer_find_file@inBuffer:
  3143                           	opt stack 0
  3144                           
  3145                           ; 2 bytes @ 0x43
  3146  000044                     	ds	1
  3147  000045                     
  3148                           ; 1 bytes @ 0x44
  3149  000045                     	ds	1
  3150  000046                     fat_create_file@extension:
  3151                           	opt stack 0
  3152  000046                     __fill_buffer_find_file@outBuffer:
  3153                           	opt stack 0
  3154                           
  3155                           ; 2 bytes @ 0x45
  3156  000046                     	ds	1
  3157  000047                     MSDProcessCommandMediaPresent@i:
  3158                           	opt stack 0
  3159  000047                     fat_read_from_file@data:
  3160                           	opt stack 0
  3161                           
  3162                           ; 2 bytes @ 0x46
  3163  000047                     	ds	1
  3164  000048                     ??_MSDProcessCommand:
  3165  000048                     ??__fill_buffer_find_file:
  3166  000048                     fat_create_file@size:
  3167                           	opt stack 0
  3168                           
  3169                           ; 4 bytes @ 0x47
  3170  000048                     	ds	1
  3171  000049                     ??_fat_read_from_file:
  3172                           
  3173                           ; 1 bytes @ 0x48
  3174  000049                     	ds	2
  3175  00004B                     __parse_file_append@data:
  3176                           	opt stack 0
  3177                           
  3178                           ; 2 bytes @ 0x4A
  3179  00004B                     	ds	1
  3180  00004C                     ??_fat_create_file:
  3181  00004C                     __fill_buffer_find_file@cntr:
  3182                           	opt stack 0
  3183                           
  3184                           ; 1 bytes @ 0x4B
  3185  00004C                     	ds	1
  3186  00004D                     ??__parse_file_append:
  3187  00004D                     ??_MSDTasks:
  3188                           
  3189                           ; 1 bytes @ 0x4C
  3190  00004D                     	ds	1
  3191  00004E                     _MSDTasks$2372:
  3192                           	opt stack 0
  3193                           
  3194                           ; 2 bytes @ 0x4D
  3195  00004E                     	ds	2
  3196  000050                     _MSDTasks$2373:
  3197                           	opt stack 0
  3198  000050                     __parse_file_create@data:
  3199                           	opt stack 0
  3200                           
  3201                           ; 2 bytes @ 0x4F
  3202  000050                     	ds	2
  3203  000052                     MSDTasks@i:
  3204                           	opt stack 0
  3205                           
  3206                           ; 1 bytes @ 0x51
  3207  000052                     	ds	1
  3208  000053                     __parse_command_long@data:
  3209                           	opt stack 0
  3210                           
  3211                           ; 2 bytes @ 0x52
  3212  000053                     	ds	2
  3213  000055                     ??__bootloader_verify_file:
  3214  000055                     ??__bootloader_program:
  3215  000055                     __parse_command_long@length:
  3216                           	opt stack 0
  3217  000055                     __fill_buffer_read_file@inBuffer:
  3218                           	opt stack 0
  3219                           
  3220                           ; 2 bytes @ 0x54
  3221  000055                     	ds	1
  3222  000056                     ??_api_parse:
  3223                           
  3224                           ; 1 bytes @ 0x55
  3225  000056                     	ds	1
  3226  000057                     __fill_buffer_read_file@outBuffer:
  3227                           	opt stack 0
  3228                           
  3229                           ; 2 bytes @ 0x56
  3230  000057                     	ds	1
  3231  000058                     api_parse@idx:
  3232                           	opt stack 0
  3233                           
  3234                           ; 1 bytes @ 0x57
  3235  000058                     	ds	1
  3236  000059                     ??__fill_buffer_read_file:
  3237                           
  3238                           ; 1 bytes @ 0x58
  3239  000059                     	ds	4
  3240  00005D                     bootloader_run@timeslot:
  3241                           	opt stack 0
  3242  00005D                     api_prepare@command:
  3243                           	opt stack 0
  3244                           
  3245                           ; 1 bytes @ 0x5C
  3246  00005D                     	ds	1
  3247  00005E                     ??_main:
  3248                           
  3249                           ; 1 bytes @ 0x5D
  3250  00005E                     	ds	2
  3251                           tblptru	equ	0xFF8
  3252                           tblptrh	equ	0xFF7
  3253                           tblptrl	equ	0xFF6
  3254                           tablat	equ	0xFF5
  3255                           postinc0	equ	0xFEE
  3256                           wreg	equ	0xFE8
  3257                           postdec1	equ	0xFE5
  3258                           fsr1h	equ	0xFE2
  3259                           fsr1l	equ	0xFE1
  3260                           
  3261 ;;
  3262 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3263 ;;
  3264 ;; *************** function _main *****************
  3265 ;; Defined at:
  3266 ;;		line 54 in file "main.c"
  3267 ;; Parameters:    Size  Location     Type
  3268 ;;		None
  3269 ;; Auto vars:     Size  Location     Type
  3270 ;;  tx_buffer       2   71[BANK0 ] PTR unsigned char 
  3271 ;;		 -> _spi_external_tx_buffer(64), 
  3272 ;;  rx_buffer       2   69[BANK0 ] PTR unsigned char 
  3273 ;;		 -> _spi_external_rx_buffer(64), 
  3274 ;;  bytes_transm    2   67[BANK0 ] unsigned int 
  3275 ;;  tx_start_add    2   65[BANK0 ] unsigned int 
  3276 ;; Return value:  Size  Location     Type
  3277 ;;                  1    wreg      void 
  3278 ;; Registers used:
  3279 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3280 ;; Tracked objects:
  3281 ;;		On entry : 0/0
  3282 ;;		On exit  : 0/0
  3283 ;;		Unchanged: 0/0
  3284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3286 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3287 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3288 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3289 ;;Total ram usage:       10 bytes
  3290 ;; Hardware stack levels required when called:   12
  3291 ;; This function calls:
  3292 ;;		_APP_DeviceCustomHIDTasks
  3293 ;;		_APP_DeviceMSDTasks
  3294 ;;		_SYSTEM_Initialize
  3295 ;;		_USBDeviceInit
  3296 ;;		_USBDeviceTasks
  3297 ;;		__normal_mode
  3298 ;;		_api_parse
  3299 ;;		_api_prepare
  3300 ;;		_bootloader_run
  3301 ;;		_display_prepare
  3302 ;;		_display_update
  3303 ;;		_jump_to_main_program
  3304 ;;		_spi_get_external_rx_buffer
  3305 ;;		_spi_get_external_tx_buffer
  3306 ;;		_system_full_init
  3307 ;;		_system_minimal_init
  3308 ;;		_system_minimal_init_undo
  3309 ;;		_timer_pseudo_isr
  3310 ;;		_ui_get_status
  3311 ;;		_ui_run
  3312 ;; This function is called by:
  3313 ;;		Startup code after reset
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           	psect	text0
  3318  00387C                     __ptext0:
  3319                           	opt stack 0
  3320  00387C                     _main:
  3321                           	opt stack 19
  3322                           
  3323                           ;main.c: 56: uint16_t bytes_transmitted;;main.c: 57: uint16_t tx_start_addr;;main.c: 59:
      +                           uint8_t *rx_buffer;;main.c: 60: uint8_t *tx_buffer;;main.c: 62: rx_buffer = spi_get_ext
      +                          ernal_rx_buffer();
  3324                           
  3325                           ;incstack = 0
  3326  00387C  EC11  F040         	call	_spi_get_external_rx_buffer	;wreg free
  3327  003880  C001  F0FA         	movff	?_spi_get_external_rx_buffer,main@rx_buffer
  3328  003884  C002  F0FB         	movff	?_spi_get_external_rx_buffer+1,main@rx_buffer+1
  3329                           
  3330                           ;main.c: 63: tx_buffer = spi_get_external_tx_buffer();
  3331  003888  EC0C  F040         	call	_spi_get_external_tx_buffer	;wreg free
  3332  00388C  C001  F0FC         	movff	?_spi_get_external_tx_buffer,main@tx_buffer
  3333  003890  C002  F0FD         	movff	?_spi_get_external_tx_buffer+1,main@tx_buffer+1
  3334                           
  3335                           ;main.c: 64: tx_start_addr = (uint16_t) tx_buffer;
  3336  003894  C0FC  F0F6         	movff	main@tx_buffer,main@tx_start_addr
  3337  003898  C0FD  F0F7         	movff	main@tx_buffer+1,main@tx_start_addr+1
  3338                           
  3339                           ;main.c: 68: system_minimal_init();
  3340  00389C  ECE0  F03F         	call	_system_minimal_init	;wreg free
  3341                           
  3342                           ;main.c: 71: if(_normal_mode())
  3343  0038A0  EC2C  F038         	call	__normal_mode	;wreg free
  3344  0038A4  0900               	iorlw	0
  3345  0038A6  B4D8               	btfsc	status,2,c
  3346  0038A8  D004               	goto	l889
  3347                           
  3348                           ;main.c: 72: {;main.c: 74: system_minimal_init_undo();
  3349  0038AA  ECD8  F03F         	call	_system_minimal_init_undo	;wreg free
  3350                           
  3351                           ;main.c: 75: jump_to_main_program();
  3352  0038AE  EC63  F040         	call	_jump_to_main_program	;wreg free
  3353  0038B2                     l889:
  3354                           
  3355                           ;main.c: 76: };main.c: 80: system_full_init();
  3356  0038B2  ECA3  F037         	call	_system_full_init	;wreg free
  3357                           
  3358                           ;main.c: 84: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  3359  0038B6  0E00               	movlw	0
  3360  0038B8  EC36  F03A         	call	_SYSTEM_Initialize
  3361                           
  3362                           ;main.c: 85: USBDeviceInit();
  3363  0038BC  EC9F  F01D         	call	_USBDeviceInit	;wreg free
  3364  0038C0                     l890:
  3365  0038C0  0004               	clrwdt		;# 
  3366                           
  3367                           ;main.c: 98: USBDeviceTasks();
  3368  0038C2  EC05  F01A         	call	_USBDeviceTasks	;wreg free
  3369                           
  3370                           ;main.c: 99: APP_DeviceMSDTasks();
  3371  0038C6  ECB4  F03F         	call	_APP_DeviceMSDTasks	;wreg free
  3372                           
  3373                           ;main.c: 100: APP_DeviceCustomHIDTasks();
  3374  0038CA  EC5E  F02D         	call	_APP_DeviceCustomHIDTasks	;wreg free
  3375                           
  3376                           ;main.c: 104: timer_pseudo_isr();
  3377  0038CE  ECDF  F03C         	call	_timer_pseudo_isr	;wreg free
  3378                           
  3379                           ;main.c: 107: if(PORTDbits.RD2)
  3380  0038D2  A483               	btfss	3971,2,c	;volatile
  3381  0038D4  D039               	goto	l892
  3382                           
  3383                           ;main.c: 108: {;main.c: 111: bytes_transmitted = TXADDRH;
  3384  0038D6  CF6A F0F8          	movff	3946,main@bytes_transmitted	;volatile
  3385  0038DA  0100               	movlb	0	; () banked
  3386  0038DC  6BF9               	clrf	(main@bytes_transmitted+1)& (0+255),b
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;main.c: 112: bytes_transmitted <<= 8;
  3390  0038DE  51F8               	movf	main@bytes_transmitted& (0+255),w,b
  3391  0038E0  6FF9               	movwf	(main@bytes_transmitted+1)& (0+255),b
  3392  0038E2  6BF8               	clrf	main@bytes_transmitted& (0+255),b
  3393                           
  3394                           ; BSR set to: 0
  3395                           ;main.c: 113: bytes_transmitted |= TXADDRL;
  3396  0038E4  506B               	movf	3947,w,c	;volatile
  3397  0038E6  13F8               	iorwf	main@bytes_transmitted& (0+255),f,b
  3398                           
  3399                           ; BSR set to: 0
  3400                           ;main.c: 114: --bytes_transmitted;
  3401  0038E8  07F8               	decf	main@bytes_transmitted& (0+255),f,b
  3402  0038EA  A0D8               	btfss	status,0,c
  3403  0038EC  07F9               	decf	(main@bytes_transmitted+1)& (0+255),f,b
  3404                           
  3405                           ; BSR set to: 0
  3406                           ;main.c: 115: bytes_transmitted -= (uint16_t) spi_get_external_tx_buffer();
  3407  0038EE  EC0C  F040         	call	_spi_get_external_tx_buffer	;wreg free
  3408  0038F2  5001               	movf	?_spi_get_external_tx_buffer,w,c
  3409  0038F4  0100               	movlb	0	; () banked
  3410  0038F6  5FF8               	subwf	main@bytes_transmitted& (0+255),f,b
  3411  0038F8  5002               	movf	?_spi_get_external_tx_buffer+1,w,c
  3412  0038FA  5BF9               	subwfb	(main@bytes_transmitted+1)& (0+255),f,b
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;main.c: 118: if(bytes_transmitted>0)
  3416  0038FC  51F8               	movf	main@bytes_transmitted& (0+255),w,b
  3417  0038FE  11F9               	iorwf	(main@bytes_transmitted+1)& (0+255),w,b
  3418  003900  B4D8               	btfsc	status,2,c
  3419  003902  D022               	goto	l892
  3420                           
  3421                           ; BSR set to: 0
  3422                           ;main.c: 119: {;main.c: 121: DMACON1bits.DMAEN = 0;
  3423  003904  9088               	bcf	3976,0,c	;volatile
  3424                           
  3425                           ; BSR set to: 0
  3426                           ;main.c: 124: api_prepare(rx_buffer, tx_buffer);
  3427  003906  C0FA  F0EE         	movff	main@rx_buffer,api_prepare@inBuffer
  3428  00390A  C0FB  F0EF         	movff	main@rx_buffer+1,api_prepare@inBuffer+1
  3429  00390E  C0FC  F0F0         	movff	main@tx_buffer,api_prepare@outBuffer
  3430  003912  C0FD  F0F1         	movff	main@tx_buffer+1,api_prepare@outBuffer+1
  3431  003916  EC79  F01F         	call	_api_prepare	;wreg free
  3432                           
  3433                           ;main.c: 125: api_parse(rx_buffer, (uint8_t) bytes_transmitted);
  3434  00391A  C0FA  F0E8         	movff	main@rx_buffer,api_parse@inBuffer
  3435  00391E  C0FB  F0E9         	movff	main@rx_buffer+1,api_parse@inBuffer+1
  3436  003922  C0F8  F0EA         	movff	main@bytes_transmitted,api_parse@receivedDataLength
  3437  003926  ECBE  F027         	call	_api_parse	;wreg free
  3438                           
  3439                           ;main.c: 128: TXADDRH = ((unsigned char)((((uint16_t) tx_buffer)>>8)&0xFF));
  3440  00392A  0100               	movlb	0	; () banked
  3441  00392C  51FD               	movf	(main@tx_buffer+1)& (0+255),w,b
  3442  00392E  6E6A               	movwf	3946,c	;volatile
  3443                           
  3444                           ; BSR set to: 0
  3445                           ;main.c: 129: TXADDRL = ((unsigned char)(((uint16_t) tx_buffer)&0xFF));
  3446  003930  C0FC  FF6B         	movff	main@tx_buffer,3947	;volatile
  3447                           
  3448                           ; BSR set to: 0
  3449                           ;main.c: 132: RXADDRH = ((unsigned char)((((uint16_t) rx_buffer)>>8)&0xFF));
  3450  003934  51FB               	movf	(main@rx_buffer+1)& (0+255),w,b
  3451  003936  6E68               	movwf	3944,c	;volatile
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;main.c: 133: RXADDRL = ((unsigned char)(((uint16_t) rx_buffer)&0xFF));
  3455  003938  C0FA  FF69         	movff	main@rx_buffer,3945	;volatile
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;main.c: 136: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
  3459  00393C  0E00               	movlw	0
  3460  00393E  6E66               	movwf	3942,c	;volatile
  3461                           
  3462                           ; BSR set to: 0
  3463                           ;main.c: 137: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
  3464  003940  0E3F               	movlw	63
  3465  003942  6E67               	movwf	3943,c	;volatile
  3466                           
  3467                           ; BSR set to: 0
  3468                           ;main.c: 140: PIR3bits.SSP2IF = 0;
  3469  003944  9EA4               	bcf	4004,7,c	;volatile
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;main.c: 142: DMACON1bits.DMAEN = 1;
  3473  003946  8088               	bsf	3976,0,c	;volatile
  3474  003948                     l892:
  3475                           
  3476                           ;main.c: 143: };main.c: 144: };main.c: 148: if(!os.done)
  3477                           
  3478                           ; BSR set to: 0
  3479                           
  3480                           ; BSR set to: 0
  3481  003948  0100               	movlb	0	; () banked
  3482  00394A  5163               	movf	(_os+3)& (0+255),w,b	;volatile
  3483  00394C  A4D8               	btfss	status,2,c
  3484  00394E  D7B8               	goto	l890
  3485                           
  3486                           ; BSR set to: 0
  3487                           ;main.c: 149: {;main.c: 151: ui_run();
  3488  003950  ECA2  F021         	call	_ui_run	;wreg free
  3489                           
  3490                           ;main.c: 156: switch(os.timeSlot&0b00000111)
  3491  003954  D025               	goto	l894
  3492  003956                     
  3493                           ;main.c: 159: bootloader_run(0);
  3494  003956  0E00               	movlw	0
  3495  003958  ECFF  F037         	call	_bootloader_run
  3496                           
  3497                           ;main.c: 160: break;
  3498  00395C  D043               	goto	l896
  3499  00395E                     
  3500                           ;main.c: 163: bootloader_run(1);
  3501  00395E  0E01               	movlw	1
  3502  003960  ECFF  F037         	call	_bootloader_run
  3503                           
  3504                           ;main.c: 164: break;
  3505  003964  D03F               	goto	l896
  3506  003966                     
  3507                           ;main.c: 167: bootloader_run(2);
  3508  003966  0E02               	movlw	2
  3509  003968  ECFF  F037         	call	_bootloader_run
  3510                           
  3511                           ;main.c: 168: break;
  3512  00396C  D03B               	goto	l896
  3513  00396E                     
  3514                           ;main.c: 171: bootloader_run(3);
  3515  00396E  0E03               	movlw	3
  3516  003970  ECFF  F037         	call	_bootloader_run
  3517                           
  3518                           ;main.c: 172: break;
  3519  003974  D037               	goto	l896
  3520  003976                     
  3521                           ;main.c: 175: bootloader_run(4);
  3522  003976  0E04               	movlw	4
  3523  003978  ECFF  F037         	call	_bootloader_run
  3524                           
  3525                           ;main.c: 176: break;
  3526  00397C  D033               	goto	l896
  3527  00397E                     
  3528                           ;main.c: 179: bootloader_run(5);
  3529  00397E  0E05               	movlw	5
  3530  003980  ECFF  F037         	call	_bootloader_run
  3531                           
  3532                           ;main.c: 180: break;
  3533  003984  D02F               	goto	l896
  3534  003986                     
  3535                           ;main.c: 183: display_prepare(os.display_mode);
  3536  003986  0100               	movlb	0	; () banked
  3537  003988  5165               	movf	(_os+5)& (0+255),w,b	;volatile
  3538  00398A  EC27  F028         	call	_display_prepare
  3539                           
  3540                           ;main.c: 184: break;
  3541  00398E  D02A               	goto	l896
  3542  003990                     
  3543                           ;main.c: 187: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3544  003990  EC6F  F040         	call	_ui_get_status	;wreg free
  3545  003994  0A05               	xorlw	5
  3546  003996  A4D8               	btfss	status,2,c
  3547  003998  D025               	goto	l896
  3548                           
  3549                           ;main.c: 188: {;main.c: 189: display_update();
  3550  00399A  ECA7  F035         	call	_display_update	;wreg free
  3551                           
  3552                           ;main.c: 192: }
  3553                           
  3554                           ;main.c: 190: };main.c: 191: break;
  3555  00399E  D022               	goto	l896
  3556  0039A0                     l894:
  3557  0039A0  0100               	movlb	0	; () banked
  3558  0039A2  5162               	movf	(_os+2)& (0+255),w,b	;volatile
  3559  0039A4  0B07               	andlw	7
  3560  0039A6  6E5E               	movwf	??_main& (0+255),c
  3561  0039A8  6A5F               	clrf	(??_main+1)& (0+255),c
  3562                           
  3563                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3564                           ; Switch size 1, requested type "space"
  3565                           ; Number of cases is 1, Range of values is 0 to 0
  3566                           ; switch strategies available:
  3567                           ; Name         Instructions Cycles
  3568                           ; simple_byte            4     3 (average)
  3569                           ;	Chosen strategy is simple_byte
  3570  0039AA  505F               	movf	??_main+1,w,c
  3571  0039AC  0A00               	xorlw	0	; case 0
  3572  0039AE  A4D8               	btfss	status,2,c
  3573  0039B0  D019               	goto	l896
  3574                           
  3575                           ; BSR set to: 0
  3576                           ; Switch size 1, requested type "space"
  3577                           ; Number of cases is 8, Range of values is 0 to 7
  3578                           ; switch strategies available:
  3579                           ; Name         Instructions Cycles
  3580                           ; simple_byte           25    13 (average)
  3581                           ;	Chosen strategy is simple_byte
  3582  0039B2  505E               	movf	??_main,w,c
  3583  0039B4  0A00               	xorlw	0	; case 0
  3584  0039B6  B4D8               	btfsc	status,2,c
  3585  0039B8  D7CE               	goto	l895
  3586  0039BA  0A01               	xorlw	1	; case 1
  3587  0039BC  B4D8               	btfsc	status,2,c
  3588  0039BE  D7CF               	goto	l897
  3589  0039C0  0A03               	xorlw	3	; case 2
  3590  0039C2  B4D8               	btfsc	status,2,c
  3591  0039C4  D7D0               	goto	l898
  3592  0039C6  0A01               	xorlw	1	; case 3
  3593  0039C8  B4D8               	btfsc	status,2,c
  3594  0039CA  D7D1               	goto	l899
  3595  0039CC  0A07               	xorlw	7	; case 4
  3596  0039CE  B4D8               	btfsc	status,2,c
  3597  0039D0  D7D2               	goto	l900
  3598  0039D2  0A01               	xorlw	1	; case 5
  3599  0039D4  B4D8               	btfsc	status,2,c
  3600  0039D6  D7D3               	goto	l901
  3601  0039D8  0A03               	xorlw	3	; case 6
  3602  0039DA  B4D8               	btfsc	status,2,c
  3603  0039DC  D7D4               	goto	l902
  3604  0039DE  0A01               	xorlw	1	; case 7
  3605  0039E0  B4D8               	btfsc	status,2,c
  3606  0039E2  D7D6               	goto	l903
  3607  0039E4                     l896:
  3608                           
  3609                           ;main.c: 193: os.done = 1;
  3610                           
  3611                           ; BSR set to: 0
  3612  0039E4  0E01               	movlw	1
  3613  0039E6  0100               	movlb	0	; () banked
  3614  0039E8  6F63               	movwf	(_os+3)& (0+255),b	;volatile
  3615                           
  3616                           ; BSR set to: 0
  3617                           
  3618                           ; BSR set to: 0
  3619  0039EA  D76A               	goto	l890
  3620  0039EC                     __end_of_main:
  3621                           	opt stack 0
  3622                           tblptru	equ	0xFF8
  3623                           tblptrh	equ	0xFF7
  3624                           tblptrl	equ	0xFF6
  3625                           tablat	equ	0xFF5
  3626                           postinc0	equ	0xFEE
  3627                           wreg	equ	0xFE8
  3628                           postdec1	equ	0xFE5
  3629                           fsr1h	equ	0xFE2
  3630                           fsr1l	equ	0xFE1
  3631                           status	equ	0xFD8
  3632                           
  3633 ;; *************** function _ui_run *****************
  3634 ;; Defined at:
  3635 ;;		line 110 in file "ui.c"
  3636 ;; Parameters:    Size  Location     Type
  3637 ;;		None
  3638 ;; Auto vars:     Size  Location     Type
  3639 ;;		None
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  1    wreg      void 
  3642 ;; Registers used:
  3643 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3653 ;;Total ram usage:        0 bytes
  3654 ;; Hardware stack levels used:    1
  3655 ;; Hardware stack levels required when called:    9
  3656 ;; This function calls:
  3657 ;;		__ui_encoder
  3658 ;;		_i2c_digipot_backlight
  3659 ;;		_i2c_digipot_reset_off
  3660 ;;		_i2c_digipot_reset_on
  3661 ;;		_i2c_display_send_init_sequence
  3662 ;;		_system_encoder_enable
  3663 ;;		_ui_init
  3664 ;; This function is called by:
  3665 ;;		_main
  3666 ;; This function uses a non-reentrant model
  3667 ;;
  3668                           
  3669                           	psect	text1
  3670  004344                     __ptext1:
  3671                           	opt stack 0
  3672  004344                     _ui_run:
  3673                           	opt stack 21
  3674                           
  3675                           ;ui.c: 112: switch(userInterfaceStatus)
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;incstack = 0
  3679  004344  D06D               	goto	l1316
  3680  004346                     
  3681                           ;ui.c: 116: if (os.buttonCount!=0)
  3682  004346  0100               	movlb	0	; () banked
  3683  004348  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  3684  00434A  B4D8               	btfsc	status,2,c
  3685  00434C  0012               	return	
  3686                           
  3687                           ; BSR set to: 0
  3688                           ;ui.c: 117: {;ui.c: 118: ui_init();
  3689  00434E  ECAA  F03F         	call	_ui_init	;wreg free
  3690                           
  3691                           ;ui.c: 119: os.buttonCount = 0;
  3692  004352  0E00               	movlw	0
  3693  004354  0100               	movlb	0	; () banked
  3694  004356  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  3695                           
  3696                           ; BSR set to: 0
  3697                           ;ui.c: 120: };ui.c: 121: break;
  3698  004358  0012               	return	
  3699  00435A                     l1320:
  3700                           
  3701                           ; BSR set to: 0
  3702                           ;ui.c: 125: LATDbits.LD0 = 0;
  3703  00435A  908C               	bcf	3980,0,c	;volatile
  3704                           
  3705                           ; BSR set to: 0
  3706                           ;ui.c: 127: system_ui_inactive_count = 0;
  3707  00435C  0E00               	movlw	0
  3708  00435E  0101               	movlb	1	; () banked
  3709  004360  6F6F               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3710  004362  0E00               	movlw	0
  3711  004364  6F6E               	movwf	_system_ui_inactive_count& (0+255),b
  3712                           
  3713                           ;ui.c: 128: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  3714  004366  0E02               	movlw	2
  3715  004368  0100               	movlb	0	; () banked
  3716  00436A  6F98               	movwf	_userInterfaceStatus& (0+255),b
  3717                           
  3718                           ;ui.c: 129: break;
  3719  00436C  0012               	return	
  3720  00436E                     
  3721                           ; BSR set to: 0
  3722                           ;ui.c: 133: i2c_digipot_reset_on();
  3723                           
  3724                           ; BSR set to: 0
  3725  00436E  ECE3  F03E         	call	_i2c_digipot_reset_on	;wreg free
  3726                           
  3727                           ;ui.c: 135: system_ui_inactive_count = 0;
  3728  004372  0E00               	movlw	0
  3729  004374  0101               	movlb	1	; () banked
  3730  004376  6F6F               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3731  004378  0E00               	movlw	0
  3732  00437A  6F6E               	movwf	_system_ui_inactive_count& (0+255),b
  3733                           
  3734                           ; BSR set to: 1
  3735                           ;ui.c: 136: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  3736  00437C  0E03               	movlw	3
  3737  00437E  0100               	movlb	0	; () banked
  3738  004380  6F98               	movwf	_userInterfaceStatus& (0+255),b
  3739                           
  3740                           ;ui.c: 137: break;
  3741  004382  0012               	return	
  3742  004384                     
  3743                           ; BSR set to: 0
  3744                           ;ui.c: 140: ++system_ui_inactive_count;
  3745                           
  3746                           ; BSR set to: 0
  3747  004384  0101               	movlb	1	; () banked
  3748  004386  4B6E               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3749  004388  2B6F               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3750                           
  3751                           ; BSR set to: 1
  3752                           ;ui.c: 142: if (system_ui_inactive_count>3)
  3753  00438A  516F               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  3754  00438C  E104               	bnz	u11660
  3755  00438E  0E04               	movlw	4
  3756  004390  5D6E               	subwf	_system_ui_inactive_count& (0+255),w,b
  3757  004392  A0D8               	btfss	status,0,c
  3758  004394  0012               	return	
  3759  004396                     u11660:
  3760                           
  3761                           ; BSR set to: 1
  3762                           ;ui.c: 143: {;ui.c: 144: i2c_digipot_reset_off();
  3763  004396  ECF4  F03E         	call	_i2c_digipot_reset_off	;wreg free
  3764                           
  3765                           ;ui.c: 145: system_ui_inactive_count = 0;
  3766  00439A  0E00               	movlw	0
  3767  00439C  0101               	movlb	1	; () banked
  3768  00439E  6F6F               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3769  0043A0  0E00               	movlw	0
  3770  0043A2  6F6E               	movwf	_system_ui_inactive_count& (0+255),b
  3771                           
  3772                           ; BSR set to: 1
  3773                           ;ui.c: 146: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  3774  0043A4  0E04               	movlw	4
  3775  0043A6  0100               	movlb	0	; () banked
  3776  0043A8  6F98               	movwf	_userInterfaceStatus& (0+255),b
  3777                           
  3778                           ; BSR set to: 0
  3779                           ;ui.c: 147: };ui.c: 148: break;
  3780  0043AA  0012               	return	
  3781  0043AC                     
  3782                           ; BSR set to: 0
  3783                           ;ui.c: 152: i2c_display_send_init_sequence();
  3784                           
  3785                           ; BSR set to: 0
  3786  0043AC  ECF2  F03D         	call	_i2c_display_send_init_sequence	;wreg free
  3787                           
  3788                           ;ui.c: 154: i2c_digipot_backlight(150);
  3789  0043B0  0E96               	movlw	150
  3790  0043B2  EC87  F03E         	call	_i2c_digipot_backlight
  3791                           
  3792                           ;ui.c: 156: system_encoder_enable();
  3793  0043B6  ECD0  F03F         	call	_system_encoder_enable	;wreg free
  3794                           
  3795                           ;ui.c: 158: system_ui_inactive_count = 0;
  3796  0043BA  0E00               	movlw	0
  3797  0043BC  0101               	movlb	1	; () banked
  3798  0043BE  6F6F               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3799  0043C0  0E00               	movlw	0
  3800  0043C2  6F6E               	movwf	_system_ui_inactive_count& (0+255),b
  3801                           
  3802                           ; BSR set to: 1
  3803                           ;ui.c: 159: startup_timer = 0;
  3804  0043C4  0E00               	movlw	0
  3805  0043C6  6F6D               	movwf	(_startup_timer+1)& (0+255),b
  3806  0043C8  0E00               	movlw	0
  3807  0043CA  6F6C               	movwf	_startup_timer& (0+255),b
  3808                           
  3809                           ; BSR set to: 1
  3810                           ;ui.c: 160: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  3811  0043CC  0E05               	movlw	5
  3812  0043CE  0100               	movlb	0	; () banked
  3813  0043D0  6F98               	movwf	_userInterfaceStatus& (0+255),b
  3814                           
  3815                           ;ui.c: 161: break;
  3816  0043D2  0012               	return	
  3817  0043D4                     
  3818                           ; BSR set to: 0
  3819                           ;ui.c: 164: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  3820                           
  3821                           ; BSR set to: 0
  3822  0043D4  5165               	movf	(_os+5)& (0+255),w,b	;volatile
  3823  0043D6  A4D8               	btfss	status,2,c
  3824  0043D8  D00B               	goto	l1327
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;ui.c: 165: {;ui.c: 166: ++startup_timer;
  3828  0043DA  0101               	movlb	1	; () banked
  3829  0043DC  4B6C               	infsnz	_startup_timer& (0+255),f,b
  3830  0043DE  2B6D               	incf	(_startup_timer+1)& (0+255),f,b
  3831                           
  3832                           ; BSR set to: 1
  3833                           ;ui.c: 167: if(startup_timer==250)
  3834  0043E0  0EFA               	movlw	250
  3835  0043E2  196C               	xorwf	_startup_timer& (0+255),w,b
  3836  0043E4  116D               	iorwf	(_startup_timer+1)& (0+255),w,b
  3837  0043E6  A4D8               	btfss	status,2,c
  3838  0043E8  D003               	goto	l1327
  3839                           
  3840                           ; BSR set to: 1
  3841                           ;ui.c: 168: {;ui.c: 169: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
  3842  0043EA  0E10               	movlw	16
  3843  0043EC  0100               	movlb	0	; () banked
  3844  0043EE  6F65               	movwf	(_os+5)& (0+255),b	;volatile
  3845  0043F0                     l1327:
  3846                           
  3847                           ;ui.c: 170: };ui.c: 171: };ui.c: 172: if (os.encoderCount==0 && os.buttonCount==0)
  3848                           
  3849                           ; BSR set to: 0
  3850  0043F0  0100               	movlb	0	; () banked
  3851  0043F2  5160               	movf	_os& (0+255),w,b	;volatile
  3852  0043F4  A4D8               	btfss	status,2,c
  3853  0043F6  D00C               	goto	l1328
  3854                           
  3855                           ; BSR set to: 0
  3856  0043F8  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  3857  0043FA  A4D8               	btfss	status,2,c
  3858  0043FC  D009               	goto	l1328
  3859                           
  3860                           ; BSR set to: 0
  3861                           ;ui.c: 173: {;ui.c: 174: if(system_ui_inactive_count<0xFFFF)
  3862  0043FE  0101               	movlb	1	; () banked
  3863  004400  296E               	incf	_system_ui_inactive_count& (0+255),w,b
  3864  004402  E103               	bnz	u11710
  3865  004404  296F               	incf	(_system_ui_inactive_count+1)& (0+255),w,b
  3866  004406  B4D8               	btfsc	status,2,c
  3867  004408  0012               	return	
  3868  00440A                     u11710:
  3869                           
  3870                           ; BSR set to: 1
  3871                           ;ui.c: 175: ++system_ui_inactive_count;
  3872  00440A  4B6E               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3873  00440C  2B6F               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3874                           
  3875                           ; BSR set to: 1
  3876                           ;ui.c: 176: }
  3877  00440E  0012               	return	
  3878  004410                     l1328:
  3879                           
  3880                           ;ui.c: 177: else;ui.c: 178: {;ui.c: 179: system_ui_inactive_count = 0;
  3881                           
  3882                           ; BSR set to: 1
  3883  004410  0E00               	movlw	0
  3884  004412  0101               	movlb	1	; () banked
  3885  004414  6F6F               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3886  004416  0E00               	movlw	0
  3887  004418  6F6E               	movwf	_system_ui_inactive_count& (0+255),b
  3888                           
  3889                           ; BSR set to: 1
  3890                           ;ui.c: 180: _ui_encoder();
  3891  00441A  ECE1  F026         	call	__ui_encoder	;wreg free
  3892                           
  3893                           ;ui.c: 183: }
  3894                           
  3895                           ;ui.c: 181: };ui.c: 182: break;
  3896  00441E  0012               	return	
  3897  004420                     l1316:
  3898  004420  0100               	movlb	0	; () banked
  3899  004422  5198               	movf	_userInterfaceStatus& (0+255),w,b
  3900                           
  3901                           ; Switch size 1, requested type "space"
  3902                           ; Number of cases is 6, Range of values is 0 to 5
  3903                           ; switch strategies available:
  3904                           ; Name         Instructions Cycles
  3905                           ; simple_byte           19    10 (average)
  3906                           ;	Chosen strategy is simple_byte
  3907  004424  0A00               	xorlw	0	; case 0
  3908  004426  B4D8               	btfsc	status,2,c
  3909  004428  D78E               	goto	l1317
  3910  00442A  0A01               	xorlw	1	; case 1
  3911  00442C  B4D8               	btfsc	status,2,c
  3912  00442E  D795               	goto	l1320
  3913  004430  0A03               	xorlw	3	; case 2
  3914  004432  B4D8               	btfsc	status,2,c
  3915  004434  D79C               	goto	l1321
  3916  004436  0A01               	xorlw	1	; case 3
  3917  004438  B4D8               	btfsc	status,2,c
  3918  00443A  D7A4               	goto	l1322
  3919  00443C  0A07               	xorlw	7	; case 4
  3920  00443E  B4D8               	btfsc	status,2,c
  3921  004440  D7B5               	goto	l1324
  3922  004442  0A01               	xorlw	1	; case 5
  3923  004444  A4D8               	btfss	status,2,c
  3924  004446  0012               	return	
  3925  004448  D7C5               	goto	l1325
  3926  00444A                     __end_of_ui_run:
  3927                           	opt stack 0
  3928                           tblptru	equ	0xFF8
  3929                           tblptrh	equ	0xFF7
  3930                           tblptrl	equ	0xFF6
  3931                           tablat	equ	0xFF5
  3932                           postinc0	equ	0xFEE
  3933                           wreg	equ	0xFE8
  3934                           postdec1	equ	0xFE5
  3935                           fsr1h	equ	0xFE2
  3936                           fsr1l	equ	0xFE1
  3937                           status	equ	0xFD8
  3938                           
  3939 ;; *************** function _system_encoder_enable *****************
  3940 ;; Defined at:
  3941 ;;		line 96 in file "os.c"
  3942 ;; Parameters:    Size  Location     Type
  3943 ;;		None
  3944 ;; Auto vars:     Size  Location     Type
  3945 ;;		None
  3946 ;; Return value:  Size  Location     Type
  3947 ;;                  1    wreg      void 
  3948 ;; Registers used:
  3949 ;;		wreg, status,2
  3950 ;; Tracked objects:
  3951 ;;		On entry : 0/0
  3952 ;;		On exit  : 0/0
  3953 ;;		Unchanged: 0/0
  3954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3959 ;;Total ram usage:        0 bytes
  3960 ;; Hardware stack levels used:    1
  3961 ;; This function calls:
  3962 ;;		Nothing
  3963 ;; This function is called by:
  3964 ;;		_ui_run
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968                           	psect	text2
  3969  007FA0                     __ptext2:
  3970                           	opt stack 0
  3971  007FA0                     _system_encoder_enable:
  3972                           	opt stack 29
  3973                           
  3974                           ;os.c: 99: INTCON3bits.INT2IF = 0;
  3975                           
  3976                           ;incstack = 0
  3977  007FA0  92F0               	bcf	intcon3,1,c	;volatile
  3978                           
  3979                           ;os.c: 100: INTCON3bits.INT3IF = 0;
  3980  007FA2  94F0               	bcf	intcon3,2,c	;volatile
  3981                           
  3982                           ;os.c: 103: os.encoderCount = 0;
  3983  007FA4  0E00               	movlw	0
  3984  007FA6  0100               	movlb	0	; () banked
  3985  007FA8  6F60               	movwf	_os& (0+255),b	;volatile
  3986                           
  3987                           ; BSR set to: 0
  3988                           ;os.c: 106: INTCON3bits.INT2IE = 1;
  3989  007FAA  88F0               	bsf	intcon3,4,c	;volatile
  3990                           
  3991                           ; BSR set to: 0
  3992                           ;os.c: 107: INTCON3bits.INT3IE = 1;
  3993  007FAC  8AF0               	bsf	intcon3,5,c	;volatile
  3994                           
  3995                           ; BSR set to: 0
  3996  007FAE  0012               	return		;funcret
  3997  007FB0                     __end_of_system_encoder_enable:
  3998                           	opt stack 0
  3999                           tblptru	equ	0xFF8
  4000                           tblptrh	equ	0xFF7
  4001                           tblptrl	equ	0xFF6
  4002                           tablat	equ	0xFF5
  4003                           intcon3	equ	0xFF0
  4004                           postinc0	equ	0xFEE
  4005                           wreg	equ	0xFE8
  4006                           postdec1	equ	0xFE5
  4007                           fsr1h	equ	0xFE2
  4008                           fsr1l	equ	0xFE1
  4009                           status	equ	0xFD8
  4010                           
  4011 ;; *************** function _i2c_display_send_init_sequence *****************
  4012 ;; Defined at:
  4013 ;;		line 207 in file "i2c.c"
  4014 ;; Parameters:    Size  Location     Type
  4015 ;;		None
  4016 ;; Auto vars:     Size  Location     Type
  4017 ;;  init_sequenc    9   10[COMRAM] unsigned char [9]
  4018 ;; Return value:  Size  Location     Type
  4019 ;;                  1    wreg      void 
  4020 ;; Registers used:
  4021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4022 ;; Tracked objects:
  4023 ;;		On entry : 0/0
  4024 ;;		On exit  : 0/0
  4025 ;;		Unchanged: 0/0
  4026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4028 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4030 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4031 ;;Total ram usage:        9 bytes
  4032 ;; Hardware stack levels used:    1
  4033 ;; Hardware stack levels required when called:    2
  4034 ;; This function calls:
  4035 ;;		__i2c_write
  4036 ;;		_i2c_set_frequency
  4037 ;; This function is called by:
  4038 ;;		_ui_run
  4039 ;; This function uses a non-reentrant model
  4040 ;;
  4041                           
  4042                           	psect	text3
  4043  007BE4                     __ptext3:
  4044                           	opt stack 0
  4045  007BE4                     _i2c_display_send_init_sequence:
  4046                           	opt stack 27
  4047                           
  4048                           ;i2c.c: 209: uint8_t init_sequence[9] = {;i2c.c: 210: 0x3A,;i2c.c: 212: 0b00011110,;i2c.
      +                          c: 213: 0x39,;i2c.c: 215: 0b00001100,;i2c.c: 216: 0x74,;i2c.c: 217: 0b1011100,;i2c.c: 21
      +                          8: 0x6d,;i2c.c: 219: 0x0c,;i2c.c: 220: 0x01;i2c.c: 221: };
  4049                           
  4050                           ; BSR set to: 0
  4051                           ;incstack = 0
  4052  007BE4  EE22  F0F2         	lfsr	2,i2c_display_send_init_sequence@F6808
  4053  007BE8  EE10  F00B         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  4054  007BEC  0E08               	movlw	8
  4055  007BEE                     u10941:
  4056  007BEE  CFDB FFE3          	movff	plusw2,plusw1
  4057  007BF2  06E8               	decf	wreg,f,c
  4058  007BF4  E2FC               	bc	u10941
  4059                           
  4060                           ;i2c.c: 224: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  4061  007BF6  0E00               	movlw	0
  4062  007BF8  EC34  F03E         	call	_i2c_set_frequency
  4063                           
  4064                           ;i2c.c: 227: _i2c_write(0b01111000, &init_sequence[0], 9);
  4065  007BFC  0E0B               	movlw	low i2c_display_send_init_sequence@init_sequence
  4066  007BFE  6E06               	movwf	__i2c_write@data,c
  4067  007C00  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  4068  007C02  6E07               	movwf	__i2c_write@data+1,c
  4069  007C04  0E09               	movlw	9
  4070  007C06  6E08               	movwf	__i2c_write@length,c
  4071  007C08  0E78               	movlw	120
  4072  007C0A  EC26  F03B         	call	__i2c_write
  4073  007C0E  0012               	return		;funcret
  4074  007C10                     __end_of_i2c_display_send_init_sequence:
  4075                           	opt stack 0
  4076                           tblptru	equ	0xFF8
  4077                           tblptrh	equ	0xFF7
  4078                           tblptrl	equ	0xFF6
  4079                           tablat	equ	0xFF5
  4080                           intcon3	equ	0xFF0
  4081                           postinc0	equ	0xFEE
  4082                           wreg	equ	0xFE8
  4083                           postdec1	equ	0xFE5
  4084                           plusw1	equ	0xFE3
  4085                           fsr1h	equ	0xFE2
  4086                           fsr1l	equ	0xFE1
  4087                           plusw2	equ	0xFDB
  4088                           status	equ	0xFD8
  4089                           
  4090 ;; *************** function _i2c_digipot_reset_on *****************
  4091 ;; Defined at:
  4092 ;;		line 310 in file "i2c.c"
  4093 ;; Parameters:    Size  Location     Type
  4094 ;;		None
  4095 ;; Auto vars:     Size  Location     Type
  4096 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4097 ;; Return value:  Size  Location     Type
  4098 ;;                  1    wreg      void 
  4099 ;; Registers used:
  4100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4101 ;; Tracked objects:
  4102 ;;		On entry : 0/0
  4103 ;;		On exit  : 0/0
  4104 ;;		Unchanged: 0/0
  4105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4107 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4109 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4110 ;;Total ram usage:        2 bytes
  4111 ;; Hardware stack levels used:    1
  4112 ;; Hardware stack levels required when called:    2
  4113 ;; This function calls:
  4114 ;;		__i2c_write
  4115 ;;		_i2c_set_frequency
  4116 ;; This function is called by:
  4117 ;;		_ui_run
  4118 ;; This function uses a non-reentrant model
  4119 ;;
  4120                           
  4121                           	psect	text4
  4122  007DC6                     __ptext4:
  4123                           	opt stack 0
  4124  007DC6                     _i2c_digipot_reset_on:
  4125                           	opt stack 27
  4126                           
  4127                           ;i2c.c: 312: uint8_t data_array[2];;i2c.c: 313: data_array[0] = 0x10 | 0x00;
  4128                           
  4129                           ;incstack = 0
  4130  007DC6  0E10               	movlw	16
  4131  007DC8  6E0B               	movwf	i2c_digipot_reset_on@data_array,c
  4132                           
  4133                           ;i2c.c: 315: data_array[1] = 0x00;
  4134  007DCA  0E00               	movlw	0
  4135  007DCC  6E0C               	movwf	i2c_digipot_reset_on@data_array+1,c
  4136                           
  4137                           ;i2c.c: 318: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4138  007DCE  0E02               	movlw	2
  4139  007DD0  EC34  F03E         	call	_i2c_set_frequency
  4140                           
  4141                           ;i2c.c: 320: _i2c_write(0b01011100, &data_array[0], 2);
  4142  007DD4  0E0B               	movlw	low i2c_digipot_reset_on@data_array
  4143  007DD6  6E06               	movwf	__i2c_write@data,c
  4144  007DD8  0E00               	movlw	high i2c_digipot_reset_on@data_array
  4145  007DDA  6E07               	movwf	__i2c_write@data+1,c
  4146  007DDC  0E02               	movlw	2
  4147  007DDE  6E08               	movwf	__i2c_write@length,c
  4148  007DE0  0E5C               	movlw	92
  4149  007DE2  EC26  F03B         	call	__i2c_write
  4150  007DE6  0012               	return		;funcret
  4151  007DE8                     __end_of_i2c_digipot_reset_on:
  4152                           	opt stack 0
  4153                           tblptru	equ	0xFF8
  4154                           tblptrh	equ	0xFF7
  4155                           tblptrl	equ	0xFF6
  4156                           tablat	equ	0xFF5
  4157                           intcon3	equ	0xFF0
  4158                           postinc0	equ	0xFEE
  4159                           wreg	equ	0xFE8
  4160                           postdec1	equ	0xFE5
  4161                           plusw1	equ	0xFE3
  4162                           fsr1h	equ	0xFE2
  4163                           fsr1l	equ	0xFE1
  4164                           plusw2	equ	0xFDB
  4165                           status	equ	0xFD8
  4166                           
  4167 ;; *************** function _i2c_digipot_reset_off *****************
  4168 ;; Defined at:
  4169 ;;		line 323 in file "i2c.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;		None
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  1    wreg      void 
  4176 ;; Registers used:
  4177 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4184 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4186 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4187 ;;Total ram usage:        2 bytes
  4188 ;; Hardware stack levels used:    1
  4189 ;; Hardware stack levels required when called:    2
  4190 ;; This function calls:
  4191 ;;		__i2c_write
  4192 ;;		_i2c_set_frequency
  4193 ;; This function is called by:
  4194 ;;		_ui_run
  4195 ;; This function uses a non-reentrant model
  4196 ;;
  4197                           
  4198                           	psect	text5
  4199  007DE8                     __ptext5:
  4200                           	opt stack 0
  4201  007DE8                     _i2c_digipot_reset_off:
  4202                           	opt stack 27
  4203                           
  4204                           ;i2c.c: 325: uint8_t data_array[2];;i2c.c: 326: data_array[0] = 0x10 | 0x00;
  4205                           
  4206                           ;incstack = 0
  4207  007DE8  0E10               	movlw	16
  4208  007DEA  6E0B               	movwf	i2c_digipot_reset_off@data_array,c
  4209                           
  4210                           ;i2c.c: 327: data_array[1] = 0x80;
  4211  007DEC  0E80               	movlw	128
  4212  007DEE  6E0C               	movwf	i2c_digipot_reset_off@data_array+1,c
  4213                           
  4214                           ;i2c.c: 330: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4215  007DF0  0E02               	movlw	2
  4216  007DF2  EC34  F03E         	call	_i2c_set_frequency
  4217                           
  4218                           ;i2c.c: 332: _i2c_write(0b01011100, &data_array[0], 2);
  4219  007DF6  0E0B               	movlw	low i2c_digipot_reset_off@data_array
  4220  007DF8  6E06               	movwf	__i2c_write@data,c
  4221  007DFA  0E00               	movlw	high i2c_digipot_reset_off@data_array
  4222  007DFC  6E07               	movwf	__i2c_write@data+1,c
  4223  007DFE  0E02               	movlw	2
  4224  007E00  6E08               	movwf	__i2c_write@length,c
  4225  007E02  0E5C               	movlw	92
  4226  007E04  EC26  F03B         	call	__i2c_write
  4227  007E08  0012               	return		;funcret
  4228  007E0A                     __end_of_i2c_digipot_reset_off:
  4229                           	opt stack 0
  4230                           tblptru	equ	0xFF8
  4231                           tblptrh	equ	0xFF7
  4232                           tblptrl	equ	0xFF6
  4233                           tablat	equ	0xFF5
  4234                           intcon3	equ	0xFF0
  4235                           postinc0	equ	0xFEE
  4236                           wreg	equ	0xFE8
  4237                           postdec1	equ	0xFE5
  4238                           plusw1	equ	0xFE3
  4239                           fsr1h	equ	0xFE2
  4240                           fsr1l	equ	0xFE1
  4241                           plusw2	equ	0xFDB
  4242                           status	equ	0xFD8
  4243                           
  4244 ;; *************** function _i2c_digipot_backlight *****************
  4245 ;; Defined at:
  4246 ;;		line 335 in file "i2c.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;  level           1    wreg     unsigned char 
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;  level           1   10[COMRAM] unsigned char 
  4251 ;;  data_array      2   11[COMRAM] unsigned char [2]
  4252 ;; Return value:  Size  Location     Type
  4253 ;;                  1    wreg      void 
  4254 ;; Registers used:
  4255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4256 ;; Tracked objects:
  4257 ;;		On entry : 0/0
  4258 ;;		On exit  : 0/0
  4259 ;;		Unchanged: 0/0
  4260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4262 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4264 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4265 ;;Total ram usage:        3 bytes
  4266 ;; Hardware stack levels used:    1
  4267 ;; Hardware stack levels required when called:    2
  4268 ;; This function calls:
  4269 ;;		__i2c_write
  4270 ;;		_i2c_set_frequency
  4271 ;; This function is called by:
  4272 ;;		_ui_run
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           	psect	text6
  4277  007D0E                     __ptext6:
  4278                           	opt stack 0
  4279  007D0E                     _i2c_digipot_backlight:
  4280                           	opt stack 27
  4281                           
  4282                           ;incstack = 0
  4283                           ;i2c_digipot_backlight@level stored from wreg
  4284  007D0E  6E0B               	movwf	i2c_digipot_backlight@level,c
  4285                           
  4286                           ;i2c.c: 337: uint8_t data_array[2];;i2c.c: 338: data_array[0] = 0x00 | 0x00;
  4287  007D10  0E00               	movlw	0
  4288  007D12  6E0C               	movwf	i2c_digipot_backlight@data_array,c
  4289                           
  4290                           ;i2c.c: 339: data_array[1] = level>>1;
  4291  007D14  90D8               	bcf	status,0,c
  4292  007D16  300B               	rrcf	i2c_digipot_backlight@level,w,c
  4293  007D18  6E0D               	movwf	i2c_digipot_backlight@data_array+1,c
  4294                           
  4295                           ;i2c.c: 342: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4296  007D1A  0E02               	movlw	2
  4297  007D1C  EC34  F03E         	call	_i2c_set_frequency
  4298                           
  4299                           ;i2c.c: 344: _i2c_write(0b01011100, &data_array[0], 2);
  4300  007D20  0E0C               	movlw	low i2c_digipot_backlight@data_array
  4301  007D22  6E06               	movwf	__i2c_write@data,c
  4302  007D24  0E00               	movlw	high i2c_digipot_backlight@data_array
  4303  007D26  6E07               	movwf	__i2c_write@data+1,c
  4304  007D28  0E02               	movlw	2
  4305  007D2A  6E08               	movwf	__i2c_write@length,c
  4306  007D2C  0E5C               	movlw	92
  4307  007D2E  EC26  F03B         	call	__i2c_write
  4308  007D32  0012               	return		;funcret
  4309  007D34                     __end_of_i2c_digipot_backlight:
  4310                           	opt stack 0
  4311                           tblptru	equ	0xFF8
  4312                           tblptrh	equ	0xFF7
  4313                           tblptrl	equ	0xFF6
  4314                           tablat	equ	0xFF5
  4315                           intcon3	equ	0xFF0
  4316                           postinc0	equ	0xFEE
  4317                           wreg	equ	0xFE8
  4318                           postdec1	equ	0xFE5
  4319                           plusw1	equ	0xFE3
  4320                           fsr1h	equ	0xFE2
  4321                           fsr1l	equ	0xFE1
  4322                           plusw2	equ	0xFDB
  4323                           status	equ	0xFD8
  4324                           
  4325 ;; *************** function __ui_encoder *****************
  4326 ;; Defined at:
  4327 ;;		line 22 in file "ui.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;		None
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;		None
  4332 ;; Return value:  Size  Location     Type
  4333 ;;                  1    wreg      void 
  4334 ;; Registers used:
  4335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4336 ;; Tracked objects:
  4337 ;;		On entry : 0/0
  4338 ;;		On exit  : 0/0
  4339 ;;		Unchanged: 0/0
  4340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4345 ;;Total ram usage:        0 bytes
  4346 ;; Hardware stack levels used:    1
  4347 ;; Hardware stack levels required when called:    8
  4348 ;; This function calls:
  4349 ;;		_i2c_eeprom_writeByte
  4350 ;;		_reboot
  4351 ;;		_system_delay_ms
  4352 ;; This function is called by:
  4353 ;;		_ui_run
  4354 ;; This function uses a non-reentrant model
  4355 ;;
  4356                           
  4357                           	psect	text7
  4358  004DC2                     __ptext7:
  4359                           	opt stack 0
  4360  004DC2                     __ui_encoder:
  4361                           	opt stack 21
  4362                           
  4363                           ;ui.c: 24: switch(os.display_mode)
  4364                           
  4365                           ;incstack = 0
  4366  004DC2  D054               	goto	l1289
  4367  004DC4                     
  4368                           ;ui.c: 27: if(os.buttonCount>0)
  4369  004DC4  0100               	movlb	0	; () banked
  4370  004DC6  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4371  004DC8  0A80               	xorlw	128
  4372  004DCA  0F7F               	addlw	-129
  4373  004DCC  A0D8               	btfss	status,0,c
  4374  004DCE  0012               	return	
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;ui.c: 28: {;ui.c: 29: os.buttonCount = 0;
  4378  004DD0  0E00               	movlw	0
  4379  004DD2  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4380                           
  4381                           ; BSR set to: 0
  4382                           ;ui.c: 30: };ui.c: 31: break;
  4383  004DD4  0012               	return	
  4384  004DD6                     
  4385                           ; BSR set to: 0
  4386                           ;ui.c: 34: if(os.buttonCount>0)
  4387                           
  4388                           ; BSR set to: 0
  4389  004DD6  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4390  004DD8  0A80               	xorlw	128
  4391  004DDA  0F7F               	addlw	-129
  4392  004DDC  A0D8               	btfss	status,0,c
  4393  004DDE  0012               	return	
  4394                           
  4395                           ; BSR set to: 0
  4396                           ;ui.c: 35: {;ui.c: 36: os.buttonCount = 0;
  4397  004DE0  0E00               	movlw	0
  4398  004DE2  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;ui.c: 37: };ui.c: 38: break;
  4402  004DE4  0012               	return	
  4403  004DE6                     
  4404                           ; BSR set to: 0
  4405                           ;ui.c: 41: if(os.buttonCount>0)
  4406                           
  4407                           ; BSR set to: 0
  4408  004DE6  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4409  004DE8  0A80               	xorlw	128
  4410  004DEA  0F7F               	addlw	-129
  4411  004DEC  A0D8               	btfss	status,0,c
  4412  004DEE  0012               	return	
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;ui.c: 42: {;ui.c: 43: os.bootloader_mode = BOOTLOADER_MODE_FILE_VERIFYING;
  4416  004DF0  0E30               	movlw	48
  4417  004DF2  6F64               	movwf	(_os+4)& (0+255),b	;volatile
  4418                           
  4419                           ;ui.c: 44: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING;
  4420  004DF4  0E30               	movlw	48
  4421  004DF6  6F65               	movwf	(_os+5)& (0+255),b	;volatile
  4422                           
  4423                           ;ui.c: 45: os.buttonCount = 0;
  4424  004DF8  0E00               	movlw	0
  4425  004DFA  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4426                           
  4427                           ; BSR set to: 0
  4428                           ;ui.c: 46: };ui.c: 47: break;
  4429  004DFC  0012               	return	
  4430  004DFE                     
  4431                           ; BSR set to: 0
  4432                           ;ui.c: 50: if(os.buttonCount>0)
  4433                           
  4434                           ; BSR set to: 0
  4435  004DFE  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4436  004E00  0A80               	xorlw	128
  4437  004E02  0F7F               	addlw	-129
  4438  004E04  A0D8               	btfss	status,0,c
  4439  004E06  0012               	return	
  4440                           
  4441                           ; BSR set to: 0
  4442                           ;ui.c: 51: {;ui.c: 52: os.buttonCount = 0;
  4443  004E08  0E00               	movlw	0
  4444  004E0A  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4445                           
  4446                           ; BSR set to: 0
  4447                           ;ui.c: 53: };ui.c: 54: break;
  4448  004E0C  0012               	return	
  4449  004E0E                     
  4450                           ; BSR set to: 0
  4451                           ;ui.c: 57: if(os.buttonCount>0)
  4452                           
  4453                           ; BSR set to: 0
  4454  004E0E  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4455  004E10  0A80               	xorlw	128
  4456  004E12  0F7F               	addlw	-129
  4457  004E14  A0D8               	btfss	status,0,c
  4458  004E16  0012               	return	
  4459                           
  4460                           ; BSR set to: 0
  4461                           ;ui.c: 58: {;ui.c: 59: os.buttonCount = 0;
  4462  004E18  0E00               	movlw	0
  4463  004E1A  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4464                           
  4465                           ; BSR set to: 0
  4466                           ;ui.c: 60: };ui.c: 61: break;
  4467  004E1C  0012               	return	
  4468  004E1E                     
  4469                           ; BSR set to: 0
  4470                           ;ui.c: 64: if(os.buttonCount>0)
  4471                           
  4472                           ; BSR set to: 0
  4473  004E1E  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4474  004E20  0A80               	xorlw	128
  4475  004E22  0F7F               	addlw	-129
  4476  004E24  A0D8               	btfss	status,0,c
  4477  004E26  0012               	return	
  4478                           
  4479                           ; BSR set to: 0
  4480                           ;ui.c: 65: {;ui.c: 66: os.bootloader_mode = BOOTLOADER_MODE_PROGRAMMING;
  4481  004E28  0E60               	movlw	96
  4482  004E2A  6F64               	movwf	(_os+4)& (0+255),b	;volatile
  4483                           
  4484                           ;ui.c: 67: os.display_mode = DISPLAY_MODE_BOOTLOADER_PROGRAMMING;
  4485  004E2C  0E60               	movlw	96
  4486  004E2E  6F65               	movwf	(_os+5)& (0+255),b	;volatile
  4487                           
  4488                           ;ui.c: 68: os.buttonCount = 0;
  4489  004E30  0E00               	movlw	0
  4490  004E32  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;ui.c: 69: };ui.c: 70: break;
  4494  004E34  0012               	return	
  4495  004E36                     
  4496                           ; BSR set to: 0
  4497                           ;ui.c: 73: if(os.buttonCount>0)
  4498                           
  4499                           ; BSR set to: 0
  4500  004E36  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4501  004E38  0A80               	xorlw	128
  4502  004E3A  0F7F               	addlw	-129
  4503  004E3C  A0D8               	btfss	status,0,c
  4504  004E3E  0012               	return	
  4505                           
  4506                           ; BSR set to: 0
  4507                           ;ui.c: 74: {;ui.c: 75: os.buttonCount = 0;
  4508  004E40  0E00               	movlw	0
  4509  004E42  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4510                           
  4511                           ; BSR set to: 0
  4512                           ;ui.c: 76: };ui.c: 77: break;
  4513  004E44  0012               	return	
  4514  004E46                     
  4515                           ; BSR set to: 0
  4516                           ;ui.c: 80: if(os.buttonCount>0)
  4517                           
  4518                           ; BSR set to: 0
  4519  004E46  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4520  004E48  0A80               	xorlw	128
  4521  004E4A  0F7F               	addlw	-129
  4522  004E4C  A0D8               	btfss	status,0,c
  4523  004E4E  0012               	return	
  4524                           
  4525                           ; BSR set to: 0
  4526                           ;ui.c: 81: {;ui.c: 82: i2c_eeprom_writeByte(0x100, 0x78);
  4527  004E50  0E01               	movlw	1
  4528  004E52  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
  4529  004E54  0E00               	movlw	0
  4530  004E56  6E0B               	movwf	i2c_eeprom_writeByte@address,c
  4531  004E58  0E78               	movlw	120
  4532  004E5A  6E0D               	movwf	i2c_eeprom_writeByte@data,c
  4533  004E5C  ECF3  F03B         	call	_i2c_eeprom_writeByte	;wreg free
  4534                           
  4535                           ;ui.c: 83: system_delay_ms(10);
  4536  004E60  0E0A               	movlw	10
  4537  004E62  ECAD  F03E         	call	_system_delay_ms
  4538                           
  4539                           ;ui.c: 84: reboot();
  4540  004E66  EC7B  F03F         	call	_reboot	;wreg free
  4541                           
  4542                           ;ui.c: 87: }
  4543                           
  4544                           ;ui.c: 85: };ui.c: 86: break;
  4545  004E6A  0012               	return	
  4546  004E6C                     l1289:
  4547  004E6C  0100               	movlb	0	; () banked
  4548  004E6E  5165               	movf	(_os+5)& (0+255),w,b	;volatile
  4549                           
  4550                           ; Switch size 1, requested type "space"
  4551                           ; Number of cases is 8, Range of values is 0 to 112
  4552                           ; switch strategies available:
  4553                           ; Name         Instructions Cycles
  4554                           ; simple_byte           25    13 (average)
  4555                           ;	Chosen strategy is simple_byte
  4556  004E70  0A00               	xorlw	0	; case 0
  4557  004E72  B4D8               	btfsc	status,2,c
  4558  004E74  D7A7               	goto	l1290
  4559  004E76  0A10               	xorlw	16	; case 16
  4560  004E78  B4D8               	btfsc	status,2,c
  4561  004E7A  D7AD               	goto	l1293
  4562  004E7C  0A30               	xorlw	48	; case 32
  4563  004E7E  B4D8               	btfsc	status,2,c
  4564  004E80  D7B2               	goto	l1295
  4565  004E82  0A10               	xorlw	16	; case 48
  4566  004E84  B4D8               	btfsc	status,2,c
  4567  004E86  D7BB               	goto	l1297
  4568  004E88  0A70               	xorlw	112	; case 64
  4569  004E8A  B4D8               	btfsc	status,2,c
  4570  004E8C  D7C8               	goto	l1301
  4571  004E8E  0A10               	xorlw	16	; case 80
  4572  004E90  B4D8               	btfsc	status,2,c
  4573  004E92  D7BD               	goto	l1299
  4574  004E94  0A30               	xorlw	48	; case 96
  4575  004E96  B4D8               	btfsc	status,2,c
  4576  004E98  D7CE               	goto	l1303
  4577  004E9A  0A10               	xorlw	16	; case 112
  4578  004E9C  A4D8               	btfss	status,2,c
  4579  004E9E  0012               	return	
  4580  004EA0  D7D2               	goto	l1305
  4581  004EA2                     __end_of__ui_encoder:
  4582                           	opt stack 0
  4583                           tblptru	equ	0xFF8
  4584                           tblptrh	equ	0xFF7
  4585                           tblptrl	equ	0xFF6
  4586                           tablat	equ	0xFF5
  4587                           intcon3	equ	0xFF0
  4588                           postinc0	equ	0xFEE
  4589                           wreg	equ	0xFE8
  4590                           postdec1	equ	0xFE5
  4591                           plusw1	equ	0xFE3
  4592                           fsr1h	equ	0xFE2
  4593                           fsr1l	equ	0xFE1
  4594                           plusw2	equ	0xFDB
  4595                           status	equ	0xFD8
  4596                           
  4597 ;; *************** function _timer_pseudo_isr *****************
  4598 ;; Defined at:
  4599 ;;		line 19 in file "os.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;		None
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;		None
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  1    wreg      void 
  4606 ;; Registers used:
  4607 ;;		wreg, status,2, status,0
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4617 ;;Total ram usage:        0 bytes
  4618 ;; Hardware stack levels used:    1
  4619 ;; This function calls:
  4620 ;;		Nothing
  4621 ;; This function is called by:
  4622 ;;		_main
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626                           	psect	text8
  4627  0079BE                     __ptext8:
  4628                           	opt stack 0
  4629  0079BE                     _timer_pseudo_isr:
  4630                           	opt stack 30
  4631                           
  4632                           ;os.c: 22: if(INTCONbits.T0IF==0)
  4633                           
  4634                           ;incstack = 0
  4635  0079BE  A4F2               	btfss	intcon,2,c	;volatile
  4636  0079C0  0012               	return	
  4637                           
  4638                           ;os.c: 25: };os.c: 29: TMR0H = 0xD1;
  4639                           
  4640                           ;os.c: 23: {;os.c: 24: return;
  4641  0079C2  0ED1               	movlw	209
  4642  0079C4  6ED7               	movwf	4055,c	;volatile
  4643                           
  4644                           ;os.c: 30: TMR0L = 0x20;
  4645  0079C6  0E20               	movlw	32
  4646  0079C8  6ED6               	movwf	4054,c	;volatile
  4647                           
  4648                           ;os.c: 31: ++os.timeSlot;
  4649  0079CA  0100               	movlb	0	; () banked
  4650  0079CC  2B62               	incf	(_os+2)& (0+255),f,b	;volatile
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;os.c: 33: os.done = 0;
  4654  0079CE  0E00               	movlw	0
  4655  0079D0  6F63               	movwf	(_os+3)& (0+255),b	;volatile
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;os.c: 34: INTCONbits.T0IF = 0;
  4659  0079D2  94F2               	bcf	intcon,2,c	;volatile
  4660                           
  4661                           ; BSR set to: 0
  4662                           ;os.c: 37: if(INTCON3bits.INT1IF)
  4663  0079D4  A0F0               	btfss	intcon3,0,c	;volatile
  4664  0079D6  D002               	goto	l1080
  4665                           
  4666                           ; BSR set to: 0
  4667                           ;os.c: 38: {;os.c: 39: ++os.buttonCount;
  4668  0079D8  2B61               	incf	(_os+1)& (0+255),f,b	;volatile
  4669                           
  4670                           ; BSR set to: 0
  4671                           ;os.c: 40: INTCON3bits.INT1IF = 0;
  4672  0079DA  90F0               	bcf	intcon3,0,c	;volatile
  4673  0079DC                     l1080:
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;os.c: 41: };os.c: 44: if(INTCON3bits.INT2IF)
  4677                           
  4678                           ; BSR set to: 0
  4679  0079DC  A2F0               	btfss	intcon3,1,c	;volatile
  4680  0079DE  D003               	goto	l1081
  4681                           
  4682                           ; BSR set to: 0
  4683                           ;os.c: 45: {;os.c: 46: if(!PORTBbits.RB6)
  4684  0079E0  AC81               	btfss	3969,6,c	;volatile
  4685                           
  4686                           ; BSR set to: 0
  4687                           ;os.c: 47: {;os.c: 48: --os.encoderCount;
  4688  0079E2  0760               	decf	_os& (0+255),f,b	;volatile
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;os.c: 49: };os.c: 50: INTCON3bits.INT2IF = 0;
  4692                           
  4693                           ; BSR set to: 0
  4694  0079E4  92F0               	bcf	intcon3,1,c	;volatile
  4695  0079E6                     l1081:
  4696                           
  4697                           ; BSR set to: 0
  4698                           ;os.c: 51: };os.c: 52: if(INTCON3bits.INT3IF)
  4699                           
  4700                           ; BSR set to: 0
  4701  0079E6  A4F0               	btfss	intcon3,2,c	;volatile
  4702  0079E8  0012               	return	
  4703                           
  4704                           ; BSR set to: 0
  4705                           ;os.c: 53: {;os.c: 54: if(!PORTBbits.RB7)
  4706  0079EA  AE81               	btfss	3969,7,c	;volatile
  4707                           
  4708                           ; BSR set to: 0
  4709                           ;os.c: 55: {;os.c: 56: ++os.encoderCount;
  4710  0079EC  2B60               	incf	_os& (0+255),f,b	;volatile
  4711                           
  4712                           ; BSR set to: 0
  4713                           ;os.c: 57: };os.c: 58: INTCON3bits.INT3IF = 0;
  4714                           
  4715                           ; BSR set to: 0
  4716  0079EE  94F0               	bcf	intcon3,2,c	;volatile
  4717  0079F0  0012               	return	
  4718  0079F2                     __end_of_timer_pseudo_isr:
  4719                           	opt stack 0
  4720                           tblptru	equ	0xFF8
  4721                           tblptrh	equ	0xFF7
  4722                           tblptrl	equ	0xFF6
  4723                           tablat	equ	0xFF5
  4724                           intcon	equ	0xFF2
  4725                           intcon3	equ	0xFF0
  4726                           postinc0	equ	0xFEE
  4727                           wreg	equ	0xFE8
  4728                           postdec1	equ	0xFE5
  4729                           plusw1	equ	0xFE3
  4730                           fsr1h	equ	0xFE2
  4731                           fsr1l	equ	0xFE1
  4732                           plusw2	equ	0xFDB
  4733                           status	equ	0xFD8
  4734                           
  4735 ;; *************** function _system_minimal_init_undo *****************
  4736 ;; Defined at:
  4737 ;;		line 154 in file "os.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;		None
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;		None
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  1    wreg      void 
  4744 ;; Registers used:
  4745 ;;		wreg, status,2, cstack
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4755 ;;Total ram usage:        0 bytes
  4756 ;; Hardware stack levels used:    1
  4757 ;; Hardware stack levels required when called:    1
  4758 ;; This function calls:
  4759 ;;		_i2c_reset
  4760 ;; This function is called by:
  4761 ;;		_main
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764                           
  4765                           	psect	text9
  4766  007FB0                     __ptext9:
  4767                           	opt stack 0
  4768  007FB0                     _system_minimal_init_undo:
  4769                           	opt stack 29
  4770                           
  4771                           ;os.c: 157: i2c_reset();
  4772                           
  4773                           ;incstack = 0
  4774  007FB0  ECF8  F03F         	call	_i2c_reset	;wreg free
  4775                           
  4776                           ;os.c: 160: TRISAbits.TRISA0 = 1;
  4777  007FB4  8092               	bsf	3986,0,c	;volatile
  4778                           
  4779                           ;os.c: 161: ANCON0bits.PCFG0 = 0;
  4780  007FB6  010F               	movlb	15	; () banked
  4781  007FB8  9148               	bcf	72,0,b	;volatile
  4782                           
  4783                           ; BSR set to: 15
  4784                           ;os.c: 164: LATCbits.LC2 = 0;
  4785  007FBA  948B               	bcf	3979,2,c	;volatile
  4786                           
  4787                           ; BSR set to: 15
  4788                           ;os.c: 165: TRISCbits.TRISC2 = 1;
  4789  007FBC  8494               	bsf	3988,2,c	;volatile
  4790                           
  4791                           ; BSR set to: 15
  4792  007FBE  0012               	return		;funcret
  4793  007FC0                     __end_of_system_minimal_init_undo:
  4794                           	opt stack 0
  4795                           tblptru	equ	0xFF8
  4796                           tblptrh	equ	0xFF7
  4797                           tblptrl	equ	0xFF6
  4798                           tablat	equ	0xFF5
  4799                           intcon	equ	0xFF2
  4800                           intcon3	equ	0xFF0
  4801                           postinc0	equ	0xFEE
  4802                           wreg	equ	0xFE8
  4803                           postdec1	equ	0xFE5
  4804                           plusw1	equ	0xFE3
  4805                           fsr1h	equ	0xFE2
  4806                           fsr1l	equ	0xFE1
  4807                           plusw2	equ	0xFDB
  4808                           status	equ	0xFD8
  4809                           
  4810 ;; *************** function _i2c_reset *****************
  4811 ;; Defined at:
  4812 ;;		line 110 in file "i2c.c"
  4813 ;; Parameters:    Size  Location     Type
  4814 ;;		None
  4815 ;; Auto vars:     Size  Location     Type
  4816 ;;		None
  4817 ;; Return value:  Size  Location     Type
  4818 ;;                  1    wreg      void 
  4819 ;; Registers used:
  4820 ;;		wreg, status,2
  4821 ;; Tracked objects:
  4822 ;;		On entry : 0/0
  4823 ;;		On exit  : 0/0
  4824 ;;		Unchanged: 0/0
  4825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4830 ;;Total ram usage:        0 bytes
  4831 ;; Hardware stack levels used:    1
  4832 ;; This function calls:
  4833 ;;		Nothing
  4834 ;; This function is called by:
  4835 ;;		_system_minimal_init_undo
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           	psect	text10
  4840  007FF0                     __ptext10:
  4841                           	opt stack 0
  4842  007FF0                     _i2c_reset:
  4843                           	opt stack 29
  4844                           
  4845                           ;i2c.c: 112: SSP1STATbits.SMP = 0;
  4846                           
  4847                           ; BSR set to: 15
  4848                           ;incstack = 0
  4849  007FF0  9EC7               	bcf	4039,7,c	;volatile
  4850                           
  4851                           ;i2c.c: 113: SSP1STATbits.CKE = 0;
  4852  007FF2  9CC7               	bcf	4039,6,c	;volatile
  4853                           
  4854                           ;i2c.c: 114: SSP1CON1 = 0x00;
  4855  007FF4  0E00               	movlw	0
  4856  007FF6  6EC6               	movwf	4038,c	;volatile
  4857                           
  4858                           ;i2c.c: 115: SSP1ADD = 0x00;
  4859  007FF8  0E00               	movlw	0
  4860  007FFA  6EC8               	movwf	4040,c	;volatile
  4861  007FFC  0012               	return		;funcret
  4862  007FFE                     __end_of_i2c_reset:
  4863                           	opt stack 0
  4864                           tblptru	equ	0xFF8
  4865                           tblptrh	equ	0xFF7
  4866                           tblptrl	equ	0xFF6
  4867                           tablat	equ	0xFF5
  4868                           intcon	equ	0xFF2
  4869                           intcon3	equ	0xFF0
  4870                           postinc0	equ	0xFEE
  4871                           wreg	equ	0xFE8
  4872                           postdec1	equ	0xFE5
  4873                           plusw1	equ	0xFE3
  4874                           fsr1h	equ	0xFE2
  4875                           fsr1l	equ	0xFE1
  4876                           plusw2	equ	0xFDB
  4877                           status	equ	0xFD8
  4878                           
  4879 ;; *************** function _system_minimal_init *****************
  4880 ;; Defined at:
  4881 ;;		line 139 in file "os.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;		None
  4884 ;; Auto vars:     Size  Location     Type
  4885 ;;		None
  4886 ;; Return value:  Size  Location     Type
  4887 ;;                  1    wreg      void 
  4888 ;; Registers used:
  4889 ;;		wreg, status,2, status,0, cstack
  4890 ;; Tracked objects:
  4891 ;;		On entry : 0/0
  4892 ;;		On exit  : 0/0
  4893 ;;		Unchanged: 0/0
  4894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4899 ;;Total ram usage:        0 bytes
  4900 ;; Hardware stack levels used:    1
  4901 ;; Hardware stack levels required when called:    2
  4902 ;; This function calls:
  4903 ;;		_i2c_init
  4904 ;; This function is called by:
  4905 ;;		_main
  4906 ;; This function uses a non-reentrant model
  4907 ;;
  4908                           
  4909                           	psect	text11
  4910  007FC0                     __ptext11:
  4911                           	opt stack 0
  4912  007FC0                     _system_minimal_init:
  4913                           	opt stack 28
  4914                           
  4915                           ;os.c: 142: TRISCbits.TRISC2 = 0;
  4916                           
  4917                           ;incstack = 0
  4918  007FC0  9494               	bcf	3988,2,c	;volatile
  4919                           
  4920                           ;os.c: 143: LATCbits.LC2 = 1;
  4921  007FC2  848B               	bsf	3979,2,c	;volatile
  4922                           
  4923                           ;os.c: 146: TRISAbits.TRISA0 = 1;
  4924  007FC4  8092               	bsf	3986,0,c	;volatile
  4925                           
  4926                           ;os.c: 147: ANCON0bits.PCFG0 = 1;
  4927  007FC6  010F               	movlb	15	; () banked
  4928  007FC8  8148               	bsf	72,0,b	;volatile
  4929                           
  4930                           ; BSR set to: 15
  4931                           ;os.c: 150: i2c_init();
  4932  007FCA  EC06  F040         	call	_i2c_init	;wreg free
  4933  007FCE  0012               	return		;funcret
  4934  007FD0                     __end_of_system_minimal_init:
  4935                           	opt stack 0
  4936                           tblptru	equ	0xFF8
  4937                           tblptrh	equ	0xFF7
  4938                           tblptrl	equ	0xFF6
  4939                           tablat	equ	0xFF5
  4940                           intcon	equ	0xFF2
  4941                           intcon3	equ	0xFF0
  4942                           postinc0	equ	0xFEE
  4943                           wreg	equ	0xFE8
  4944                           postdec1	equ	0xFE5
  4945                           plusw1	equ	0xFE3
  4946                           fsr1h	equ	0xFE2
  4947                           fsr1l	equ	0xFE1
  4948                           plusw2	equ	0xFDB
  4949                           status	equ	0xFD8
  4950                           
  4951 ;; *************** function _i2c_init *****************
  4952 ;; Defined at:
  4953 ;;		line 102 in file "i2c.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;		None
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;		None
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  1    wreg      void 
  4960 ;; Registers used:
  4961 ;;		wreg, status,2, status,0, cstack
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4971 ;;Total ram usage:        0 bytes
  4972 ;; Hardware stack levels used:    1
  4973 ;; Hardware stack levels required when called:    1
  4974 ;; This function calls:
  4975 ;;		__i2c_open_1
  4976 ;;		_i2c_set_frequency
  4977 ;; This function is called by:
  4978 ;;		_system_minimal_init
  4979 ;; This function uses a non-reentrant model
  4980 ;;
  4981                           
  4982                           	psect	text12
  4983  00800C                     __ptext12:
  4984                           	opt stack 0
  4985  00800C                     _i2c_init:
  4986                           	opt stack 28
  4987                           
  4988                           ;i2c.c: 105: _i2c_open_1();
  4989                           
  4990                           ;incstack = 0
  4991  00800C  EC88  F03F         	call	__i2c_open_1	;wreg free
  4992                           
  4993                           ;i2c.c: 107: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  4994  008010  0E00               	movlw	0
  4995  008012  EC34  F03E         	call	_i2c_set_frequency
  4996  008016  0012               	return		;funcret
  4997  008018                     __end_of_i2c_init:
  4998                           	opt stack 0
  4999                           tblptru	equ	0xFF8
  5000                           tblptrh	equ	0xFF7
  5001                           tblptrl	equ	0xFF6
  5002                           tablat	equ	0xFF5
  5003                           intcon	equ	0xFF2
  5004                           intcon3	equ	0xFF0
  5005                           postinc0	equ	0xFEE
  5006                           wreg	equ	0xFE8
  5007                           postdec1	equ	0xFE5
  5008                           plusw1	equ	0xFE3
  5009                           fsr1h	equ	0xFE2
  5010                           fsr1l	equ	0xFE1
  5011                           plusw2	equ	0xFDB
  5012                           status	equ	0xFD8
  5013                           
  5014 ;; *************** function __i2c_open_1 *****************
  5015 ;; Defined at:
  5016 ;;		line 36 in file "i2c.c"
  5017 ;; Parameters:    Size  Location     Type
  5018 ;;		None
  5019 ;; Auto vars:     Size  Location     Type
  5020 ;;		None
  5021 ;; Return value:  Size  Location     Type
  5022 ;;                  1    wreg      void 
  5023 ;; Registers used:
  5024 ;;		wreg, status,2
  5025 ;; Tracked objects:
  5026 ;;		On entry : 0/0
  5027 ;;		On exit  : 0/0
  5028 ;;		Unchanged: 0/0
  5029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5033 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5034 ;;Total ram usage:        0 bytes
  5035 ;; Hardware stack levels used:    1
  5036 ;; This function calls:
  5037 ;;		Nothing
  5038 ;; This function is called by:
  5039 ;;		_i2c_init
  5040 ;; This function uses a non-reentrant model
  5041 ;;
  5042                           
  5043                           	psect	text13
  5044  007F10                     __ptext13:
  5045                           	opt stack 0
  5046  007F10                     __i2c_open_1:
  5047                           	opt stack 28
  5048                           
  5049                           ;i2c.c: 38: SSP1STATbits.SMP = 0;
  5050                           
  5051                           ;incstack = 0
  5052  007F10  9EC7               	bcf	4039,7,c	;volatile
  5053                           
  5054                           ;i2c.c: 39: SSP1STATbits.CKE = 0;
  5055  007F12  9CC7               	bcf	4039,6,c	;volatile
  5056                           
  5057                           ;i2c.c: 40: SSP1ADD = 29;
  5058  007F14  0E1D               	movlw	29
  5059  007F16  6EC8               	movwf	4040,c	;volatile
  5060                           
  5061                           ;i2c.c: 41: SSP1CON1bits.WCOL = 0;
  5062  007F18  9EC6               	bcf	4038,7,c	;volatile
  5063                           
  5064                           ;i2c.c: 42: SSP1CON1bits.SSPOV = 0;
  5065  007F1A  9CC6               	bcf	4038,6,c	;volatile
  5066                           
  5067                           ;i2c.c: 43: SSP1CON1bits.SSPM = 0b1000;
  5068  007F1C  50C6               	movf	4038,w,c	;volatile
  5069  007F1E  0BF0               	andlw	-16
  5070  007F20  0908               	iorlw	8
  5071  007F22  6EC6               	movwf	4038,c	;volatile
  5072                           
  5073                           ;i2c.c: 44: SSP1CON1bits.SSPEN = 1;
  5074  007F24  8AC6               	bsf	4038,5,c	;volatile
  5075  007F26  0012               	return		;funcret
  5076  007F28                     __end_of__i2c_open_1:
  5077                           	opt stack 0
  5078                           tblptru	equ	0xFF8
  5079                           tblptrh	equ	0xFF7
  5080                           tblptrl	equ	0xFF6
  5081                           tablat	equ	0xFF5
  5082                           intcon	equ	0xFF2
  5083                           intcon3	equ	0xFF0
  5084                           postinc0	equ	0xFEE
  5085                           wreg	equ	0xFE8
  5086                           postdec1	equ	0xFE5
  5087                           plusw1	equ	0xFE3
  5088                           fsr1h	equ	0xFE2
  5089                           fsr1l	equ	0xFE1
  5090                           plusw2	equ	0xFDB
  5091                           status	equ	0xFD8
  5092                           
  5093 ;; *************** function _system_full_init *****************
  5094 ;; Defined at:
  5095 ;;		line 169 in file "os.c"
  5096 ;; Parameters:    Size  Location     Type
  5097 ;;		None
  5098 ;; Auto vars:     Size  Location     Type
  5099 ;;		None
  5100 ;; Return value:  Size  Location     Type
  5101 ;;                  1    wreg      void 
  5102 ;; Registers used:
  5103 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5104 ;; Tracked objects:
  5105 ;;		On entry : 0/0
  5106 ;;		On exit  : 0/0
  5107 ;;		Unchanged: 0/0
  5108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5113 ;;Total ram usage:        0 bytes
  5114 ;; Hardware stack levels used:    1
  5115 ;; Hardware stack levels required when called:    7
  5116 ;; This function calls:
  5117 ;;		__system_encoder_init
  5118 ;;		__system_timer0_init
  5119 ;;		_fat_init
  5120 ;;		_flash_init
  5121 ;;		_ui_init
  5122 ;; This function is called by:
  5123 ;;		_main
  5124 ;; This function uses a non-reentrant model
  5125 ;;
  5126                           
  5127                           	psect	text14
  5128  006F46                     __ptext14:
  5129                           	opt stack 0
  5130  006F46                     _system_full_init:
  5131                           	opt stack 23
  5132                           
  5133                           ;os.c: 176: TRISDbits.TRISD0 = 0;
  5134                           
  5135                           ;incstack = 0
  5136  006F46  9095               	bcf	3989,0,c	;volatile
  5137                           
  5138                           ;os.c: 177: LATDbits.LD0 = 0;
  5139  006F48  908C               	bcf	3980,0,c	;volatile
  5140                           
  5141                           ;os.c: 180: TRISDbits.TRISD3 = 0;
  5142  006F4A  9695               	bcf	3989,3,c	;volatile
  5143                           
  5144                           ;os.c: 181: LATDbits.LD3 = 0;
  5145  006F4C  968C               	bcf	3980,3,c	;volatile
  5146                           
  5147                           ;os.c: 184: TRISDbits.TRISD1 = 0;
  5148  006F4E  9295               	bcf	3989,1,c	;volatile
  5149                           
  5150                           ;os.c: 185: LATDbits.LD1 = 0;
  5151  006F50  928C               	bcf	3980,1,c	;volatile
  5152                           
  5153                           ;os.c: 188: TRISBbits.TRISB1 = 0;
  5154  006F52  9293               	bcf	3987,1,c	;volatile
  5155                           
  5156                           ;os.c: 189: LATBbits.LB1 = 0;
  5157  006F54  928A               	bcf	3978,1,c	;volatile
  5158                           
  5159                           ;os.c: 192: TRISBbits.TRISB2 = 0;
  5160  006F56  9493               	bcf	3987,2,c	;volatile
  5161                           
  5162                           ;os.c: 193: LATBbits.LB2 = 0;
  5163  006F58  948A               	bcf	3978,2,c	;volatile
  5164                           
  5165                           ;os.c: 194: TRISBbits.TRISB3 = 0;
  5166  006F5A  9693               	bcf	3987,3,c	;volatile
  5167                           
  5168                           ;os.c: 195: LATBbits.LB3 = 0;
  5169  006F5C  968A               	bcf	3978,3,c	;volatile
  5170                           
  5171                           ;os.c: 198: TRISDbits.TRISD6 = 1;
  5172  006F5E  8C95               	bsf	3989,6,c	;volatile
  5173                           
  5174                           ;os.c: 199: TRISDbits.TRISD4 = 0;
  5175  006F60  9895               	bcf	3989,4,c	;volatile
  5176                           
  5177                           ;os.c: 200: TRISDbits.TRISD5 = 0;
  5178  006F62  9A95               	bcf	3989,5,c	;volatile
  5179                           
  5180                           ;os.c: 201: TRISDbits.TRISD7 = 0;
  5181  006F64  9E95               	bcf	3989,7,c	;volatile
  5182                           
  5183                           ;os.c: 202: LATDbits.LD7 = 1;
  5184  006F66  8E8C               	bsf	3980,7,c	;volatile
  5185                           
  5186                           ;os.c: 203: TRISDbits.TRISD2 = 1;
  5187  006F68  8495               	bsf	3989,2,c	;volatile
  5188                           
  5189                           ;os.c: 206: TRISCbits.TRISC7 = 0;
  5190  006F6A  9E94               	bcf	3988,7,c	;volatile
  5191                           
  5192                           ;os.c: 207: LATCbits.LC7 = 0;
  5193  006F6C  9E8B               	bcf	3979,7,c	;volatile
  5194                           
  5195                           ;os.c: 210: TRISEbits.TRISE2 = 0;
  5196  006F6E  9496               	bcf	3990,2,c	;volatile
  5197                           
  5198                           ;os.c: 211: LATEbits.LE2 = 1;
  5199  006F70  848D               	bsf	3981,2,c	;volatile
  5200                           
  5201                           ;os.c: 212: TRISEbits.TRISE1 = 0;
  5202  006F72  9296               	bcf	3990,1,c	;volatile
  5203                           
  5204                           ;os.c: 213: LATEbits.LE1 = 1;
  5205  006F74  828D               	bsf	3981,1,c	;volatile
  5206                           
  5207                           ;os.c: 214: TRISEbits.TRISE0 = 0;
  5208  006F76  9096               	bcf	3990,0,c	;volatile
  5209                           
  5210                           ;os.c: 215: LATEbits.LE0 = 1;
  5211  006F78  808D               	bsf	3981,0,c	;volatile
  5212                           
  5213                           ;os.c: 216: TRISAbits.TRISA5 = 0;
  5214  006F7A  9A92               	bcf	3986,5,c	;volatile
  5215                           
  5216                           ;os.c: 217: LATAbits.LA5 = 1;
  5217  006F7C  8A89               	bsf	3977,5,c	;volatile
  5218                           
  5219                           ;os.c: 220: TRISBbits.TRISB7 = 1;
  5220  006F7E  8E93               	bsf	3987,7,c	;volatile
  5221                           
  5222                           ;os.c: 221: TRISBbits.TRISB6 = 1;
  5223  006F80  8C93               	bsf	3987,6,c	;volatile
  5224                           
  5225                           ;os.c: 224: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
  5226  006F82  0E10               	movlw	16
  5227  006F84  0100               	movlb	0	; () banked
  5228  006F86  6F64               	movwf	(_os+4)& (0+255),b	;volatile
  5229                           
  5230                           ;os.c: 225: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
  5231  006F88  0E00               	movlw	0
  5232  006F8A  6F65               	movwf	(_os+5)& (0+255),b	;volatile
  5233                           
  5234                           ; BSR set to: 0
  5235                           ;os.c: 228: flash_init();
  5236  006F8C  EC61  F03F         	call	_flash_init	;wreg free
  5237                           
  5238                           ;os.c: 231: fat_init();
  5239  006F90  ECE8  F03F         	call	_fat_init	;wreg free
  5240                           
  5241                           ;os.c: 234: _system_encoder_init();
  5242  006F94  EC6F  F03C         	call	__system_encoder_init	;wreg free
  5243                           
  5244                           ;os.c: 237: ui_init();
  5245  006F98  ECAA  F03F         	call	_ui_init	;wreg free
  5246                           
  5247                           ;os.c: 240: _system_timer0_init();
  5248  006F9C  EC27  F03F         	call	__system_timer0_init	;wreg free
  5249  006FA0  0012               	return		;funcret
  5250  006FA2                     __end_of_system_full_init:
  5251                           	opt stack 0
  5252                           tblptru	equ	0xFF8
  5253                           tblptrh	equ	0xFF7
  5254                           tblptrl	equ	0xFF6
  5255                           tablat	equ	0xFF5
  5256                           intcon	equ	0xFF2
  5257                           intcon3	equ	0xFF0
  5258                           postinc0	equ	0xFEE
  5259                           wreg	equ	0xFE8
  5260                           postdec1	equ	0xFE5
  5261                           plusw1	equ	0xFE3
  5262                           fsr1h	equ	0xFE2
  5263                           fsr1l	equ	0xFE1
  5264                           plusw2	equ	0xFDB
  5265                           status	equ	0xFD8
  5266                           
  5267 ;; *************** function _ui_init *****************
  5268 ;; Defined at:
  5269 ;;		line 101 in file "ui.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;		None
  5272 ;; Auto vars:     Size  Location     Type
  5273 ;;		None
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  1    wreg      void 
  5276 ;; Registers used:
  5277 ;;		wreg, status,2
  5278 ;; Tracked objects:
  5279 ;;		On entry : 0/0
  5280 ;;		On exit  : 0/0
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5287 ;;Total ram usage:        0 bytes
  5288 ;; Hardware stack levels used:    1
  5289 ;; This function calls:
  5290 ;;		Nothing
  5291 ;; This function is called by:
  5292 ;;		_system_full_init
  5293 ;;		_ui_run
  5294 ;; This function uses a non-reentrant model
  5295 ;;
  5296                           
  5297                           	psect	text15
  5298  007F54                     __ptext15:
  5299                           	opt stack 0
  5300  007F54                     _ui_init:
  5301                           	opt stack 29
  5302                           
  5303                           ;ui.c: 103: system_ui_inactive_count = 0;
  5304                           
  5305                           ;incstack = 0
  5306  007F54  0E00               	movlw	0
  5307  007F56  0101               	movlb	1	; () banked
  5308  007F58  6F6F               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  5309  007F5A  0E00               	movlw	0
  5310  007F5C  6F6E               	movwf	_system_ui_inactive_count& (0+255),b
  5311                           
  5312                           ; BSR set to: 1
  5313                           ;ui.c: 105: LATCbits.LC2 = 1;
  5314  007F5E  848B               	bsf	3979,2,c	;volatile
  5315                           
  5316                           ;ui.c: 106: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  5317  007F60  0E01               	movlw	1
  5318  007F62  0100               	movlb	0	; () banked
  5319  007F64  6F98               	movwf	_userInterfaceStatus& (0+255),b
  5320                           
  5321                           ; BSR set to: 0
  5322  007F66  0012               	return		;funcret
  5323  007F68                     __end_of_ui_init:
  5324                           	opt stack 0
  5325                           tblptru	equ	0xFF8
  5326                           tblptrh	equ	0xFF7
  5327                           tblptrl	equ	0xFF6
  5328                           tablat	equ	0xFF5
  5329                           intcon	equ	0xFF2
  5330                           intcon3	equ	0xFF0
  5331                           postinc0	equ	0xFEE
  5332                           wreg	equ	0xFE8
  5333                           postdec1	equ	0xFE5
  5334                           plusw1	equ	0xFE3
  5335                           fsr1h	equ	0xFE2
  5336                           fsr1l	equ	0xFE1
  5337                           plusw2	equ	0xFDB
  5338                           status	equ	0xFD8
  5339                           
  5340 ;; *************** function _flash_init *****************
  5341 ;; Defined at:
  5342 ;;		line 337 in file "flash.c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;		None
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;		None
  5347 ;; Return value:  Size  Location     Type
  5348 ;;                  1    wreg      void 
  5349 ;; Registers used:
  5350 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5360 ;;Total ram usage:        0 bytes
  5361 ;; Hardware stack levels used:    1
  5362 ;; Hardware stack levels required when called:    4
  5363 ;; This function calls:
  5364 ;;		__flash_set_page_size
  5365 ;;		_spi_init
  5366 ;;		_spi_set_configuration
  5367 ;; This function is called by:
  5368 ;;		_system_full_init
  5369 ;; This function uses a non-reentrant model
  5370 ;;
  5371                           
  5372                           	psect	text16
  5373  007EC2                     __ptext16:
  5374                           	opt stack 0
  5375  007EC2                     _flash_init:
  5376                           	opt stack 25
  5377                           
  5378                           ;flash.c: 340: spi_init(SPI_CONFIGURATION_INTERNAL);
  5379                           
  5380                           ; BSR set to: 0
  5381                           ;incstack = 0
  5382  007EC2  0E00               	movlw	0
  5383  007EC4  EC33  F03C         	call	_spi_init
  5384                           
  5385                           ;flash.c: 341: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
  5386  007EC8  0E00               	movlw	0
  5387  007ECA  EC2C  F024         	call	_spi_set_configuration
  5388                           
  5389                           ;flash.c: 344: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  5390  007ECE  0E00               	movlw	0
  5391  007ED0  EC2D  F033         	call	__flash_set_page_size
  5392                           
  5393                           ;flash.c: 347: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
  5394  007ED4  0E01               	movlw	1
  5395  007ED6  EC2C  F024         	call	_spi_set_configuration
  5396  007EDA  0012               	return		;funcret
  5397  007EDC                     __end_of_flash_init:
  5398                           	opt stack 0
  5399                           tblptru	equ	0xFF8
  5400                           tblptrh	equ	0xFF7
  5401                           tblptrl	equ	0xFF6
  5402                           tablat	equ	0xFF5
  5403                           intcon	equ	0xFF2
  5404                           intcon3	equ	0xFF0
  5405                           postinc0	equ	0xFEE
  5406                           wreg	equ	0xFE8
  5407                           postdec1	equ	0xFE5
  5408                           plusw1	equ	0xFE3
  5409                           fsr1h	equ	0xFE2
  5410                           fsr1l	equ	0xFE1
  5411                           plusw2	equ	0xFDB
  5412                           status	equ	0xFD8
  5413                           
  5414 ;; *************** function _spi_init *****************
  5415 ;; Defined at:
  5416 ;;		line 122 in file "spi.c"
  5417 ;; Parameters:    Size  Location     Type
  5418 ;;  configuratio    1    wreg     enum E6749
  5419 ;; Auto vars:     Size  Location     Type
  5420 ;;  configuratio    1    3[COMRAM] enum E6749
  5421 ;; Return value:  Size  Location     Type
  5422 ;;                  1    wreg      void 
  5423 ;; Registers used:
  5424 ;;		wreg, status,2, status,0, cstack
  5425 ;; Tracked objects:
  5426 ;;		On entry : 0/0
  5427 ;;		On exit  : 0/0
  5428 ;;		Unchanged: 0/0
  5429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5431 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5433 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5434 ;;Total ram usage:        1 bytes
  5435 ;; Hardware stack levels used:    1
  5436 ;; Hardware stack levels required when called:    1
  5437 ;; This function calls:
  5438 ;;		__spi_init
  5439 ;; This function is called by:
  5440 ;;		_flash_init
  5441 ;; This function uses a non-reentrant model
  5442 ;;
  5443                           
  5444                           	psect	text17
  5445  007866                     __ptext17:
  5446                           	opt stack 0
  5447  007866                     _spi_init:
  5448                           	opt stack 27
  5449                           
  5450                           ;incstack = 0
  5451                           ;spi_init@configuration stored from wreg
  5452  007866  6E04               	movwf	spi_init@configuration,c
  5453                           
  5454                           ;spi.c: 124: switch(configuration)
  5455  007868  D012               	goto	l2788
  5456  00786A                     
  5457                           ;spi.c: 127: _spi_init(config_internal);
  5458  00786A  C15B  F001         	movff	_config_internal,__spi_init@details
  5459  00786E  C15C  F002         	movff	_config_internal+1,__spi_init@details+1
  5460  007872  C15D  F003         	movff	_config_internal+2,__spi_init@details+2
  5461  007876  EC8C  F03C         	call	__spi_init	;wreg free
  5462                           
  5463                           ;spi.c: 128: break;
  5464  00787A  D010               	goto	l2790
  5465  00787C                     
  5466                           ;spi.c: 131: _spi_init(config_external);
  5467  00787C  C158  F001         	movff	_config_external,__spi_init@details
  5468  007880  C159  F002         	movff	_config_external+1,__spi_init@details+1
  5469  007884  C15A  F003         	movff	_config_external+2,__spi_init@details+2
  5470  007888  EC8C  F03C         	call	__spi_init	;wreg free
  5471                           
  5472                           ;spi.c: 133: }
  5473                           
  5474                           ;spi.c: 132: break;
  5475  00788C  D007               	goto	l2790
  5476  00788E                     l2788:
  5477  00788E  5004               	movf	spi_init@configuration,w,c
  5478                           
  5479                           ; Switch size 1, requested type "space"
  5480                           ; Number of cases is 2, Range of values is 0 to 1
  5481                           ; switch strategies available:
  5482                           ; Name         Instructions Cycles
  5483                           ; simple_byte            7     4 (average)
  5484                           ;	Chosen strategy is simple_byte
  5485  007890  0A00               	xorlw	0	; case 0
  5486  007892  B4D8               	btfsc	status,2,c
  5487  007894  D7EA               	goto	l2789
  5488  007896  0A01               	xorlw	1	; case 1
  5489  007898  B4D8               	btfsc	status,2,c
  5490  00789A  D7F0               	goto	l2791
  5491  00789C                     l2790:
  5492                           
  5493                           ;spi.c: 135: active_configuration = configuration;
  5494  00789C  C004  F094         	movff	spi_init@configuration,_active_configuration
  5495  0078A0  0012               	return		;funcret
  5496  0078A2                     __end_of_spi_init:
  5497                           	opt stack 0
  5498                           tblptru	equ	0xFF8
  5499                           tblptrh	equ	0xFF7
  5500                           tblptrl	equ	0xFF6
  5501                           tablat	equ	0xFF5
  5502                           intcon	equ	0xFF2
  5503                           intcon3	equ	0xFF0
  5504                           postinc0	equ	0xFEE
  5505                           wreg	equ	0xFE8
  5506                           postdec1	equ	0xFE5
  5507                           plusw1	equ	0xFE3
  5508                           fsr1h	equ	0xFE2
  5509                           fsr1l	equ	0xFE1
  5510                           plusw2	equ	0xFDB
  5511                           status	equ	0xFD8
  5512                           
  5513 ;; *************** function __spi_init *****************
  5514 ;; Defined at:
  5515 ;;		line 25 in file "spi.c"
  5516 ;; Parameters:    Size  Location     Type
  5517 ;;  details         3    0[COMRAM] struct .
  5518 ;; Auto vars:     Size  Location     Type
  5519 ;;		None
  5520 ;; Return value:  Size  Location     Type
  5521 ;;                  1    wreg      void 
  5522 ;; Registers used:
  5523 ;;		wreg, status,2
  5524 ;; Tracked objects:
  5525 ;;		On entry : 0/0
  5526 ;;		On exit  : 0/0
  5527 ;;		Unchanged: 0/0
  5528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5529 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5532 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5533 ;;Total ram usage:        3 bytes
  5534 ;; Hardware stack levels used:    1
  5535 ;; This function calls:
  5536 ;;		Nothing
  5537 ;; This function is called by:
  5538 ;;		_spi_init
  5539 ;; This function uses a non-reentrant model
  5540 ;;
  5541                           
  5542                           	psect	text18
  5543  007918                     __ptext18:
  5544                           	opt stack 0
  5545  007918                     __spi_init:
  5546                           	opt stack 27
  5547                           
  5548                           ;spi.c: 31: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  5549                           
  5550                           ;incstack = 0
  5551  007918  0E55               	movlw	85
  5552  00791A  6EA7               	movwf	4007,c	;volsfr
  5553  00791C  0EAA               	movlw	170
  5554  00791E  6EA7               	movwf	4007,c	;volsfr
  5555  007920  010E               	movlb	14	; () banked
  5556  007922  91BF               	bcf	191,0,b	;volatile
  5557                           
  5558                           ;spi.c: 32: RPINR21 = 23;
  5559  007924  0E17               	movlw	23
  5560  007926  6FFC               	movwf	252,b	;volatile
  5561                           
  5562                           ;spi.c: 33: RPOR21 = 10;
  5563  007928  0E0A               	movlw	10
  5564  00792A  6FD5               	movwf	213,b	;volatile
  5565                           
  5566                           ;spi.c: 35: RPOR22 = 11;
  5567  00792C  0E0B               	movlw	11
  5568  00792E  6FD6               	movwf	214,b	;volatile
  5569                           
  5570                           ;spi.c: 36: RPINR22 = 22;
  5571  007930  0E16               	movlw	22
  5572  007932  6FFD               	movwf	253,b	;volatile
  5573                           
  5574                           ;spi.c: 37: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  5575  007934  0E55               	movlw	85
  5576  007936  6EA7               	movwf	4007,c	;volsfr
  5577  007938  0EAA               	movlw	170
  5578  00793A  6EA7               	movwf	4007,c	;volsfr
  5579                           
  5580                           ; BSR set to: 14
  5581  00793C  81BF               	bsf	191,0,b	;volatile
  5582                           
  5583                           ; BSR set to: 14
  5584                           ;spi.c: 40: SSP2STATbits.SMP = 1;
  5585  00793E  8E73               	bsf	3955,7,c	;volatile
  5586                           
  5587                           ; BSR set to: 14
  5588                           ;spi.c: 41: SSP2STATbits.CKE = 1;
  5589  007940  8C73               	bsf	3955,6,c	;volatile
  5590                           
  5591                           ; BSR set to: 14
  5592                           ;spi.c: 42: SSP2CON1bits.CKP = 0;
  5593  007942  9872               	bcf	3954,4,c	;volatile
  5594                           
  5595                           ; BSR set to: 14
  5596                           ;spi.c: 43: SSP2CON1bits.SSPM =0b0000;
  5597  007944  9072               	bcf	3954,0,c	;volatile
  5598  007946  9272               	bcf	3954,1,c	;volatile
  5599  007948  9472               	bcf	3954,2,c	;volatile
  5600  00794A  9672               	bcf	3954,3,c	;volatile
  5601                           
  5602                           ; BSR set to: 14
  5603                           ;spi.c: 44: SSP2CON1bits.SSPEN = 1;
  5604  00794C  8A72               	bsf	3954,5,c	;volatile
  5605                           
  5606                           ; BSR set to: 14
  5607  00794E  0012               	return		;funcret
  5608  007950                     __end_of__spi_init:
  5609                           	opt stack 0
  5610                           tblptru	equ	0xFF8
  5611                           tblptrh	equ	0xFF7
  5612                           tblptrl	equ	0xFF6
  5613                           tablat	equ	0xFF5
  5614                           intcon	equ	0xFF2
  5615                           intcon3	equ	0xFF0
  5616                           postinc0	equ	0xFEE
  5617                           wreg	equ	0xFE8
  5618                           postdec1	equ	0xFE5
  5619                           plusw1	equ	0xFE3
  5620                           fsr1h	equ	0xFE2
  5621                           fsr1l	equ	0xFE1
  5622                           plusw2	equ	0xFDB
  5623                           status	equ	0xFD8
  5624                           
  5625 ;; *************** function __flash_set_page_size *****************
  5626 ;; Defined at:
  5627 ;;		line 95 in file "flash.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;  size            1    wreg     enum E6886
  5630 ;; Auto vars:     Size  Location     Type
  5631 ;;  size            1   23[COMRAM] enum E6886
  5632 ;;  command         4   19[COMRAM] unsigned char [4]
  5633 ;; Return value:  Size  Location     Type
  5634 ;;                  1    wreg      void 
  5635 ;; Registers used:
  5636 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5637 ;; Tracked objects:
  5638 ;;		On entry : 0/0
  5639 ;;		On exit  : 0/0
  5640 ;;		Unchanged: 0/0
  5641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5643 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5645 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5646 ;;Total ram usage:        5 bytes
  5647 ;; Hardware stack levels used:    1
  5648 ;; Hardware stack levels required when called:    3
  5649 ;; This function calls:
  5650 ;;		__flash_is_busy
  5651 ;;		_memcpy
  5652 ;;		_spi_tx
  5653 ;; This function is called by:
  5654 ;;		_flash_init
  5655 ;; This function uses a non-reentrant model
  5656 ;;
  5657                           
  5658                           	psect	text19
  5659  00665A                     __ptext19:
  5660                           	opt stack 0
  5661  00665A                     __flash_set_page_size:
  5662                           	opt stack 25
  5663                           
  5664                           ; BSR set to: 14
  5665                           ;incstack = 0
  5666                           ;__flash_set_page_size@size stored from wreg
  5667  00665A  6E18               	movwf	__flash_set_page_size@size,c
  5668  00665C                     
  5669                           ;flash.c: 97: uint8_t command[4];;flash.c: 100: while(_flash_is_busy());
  5670  00665C  EC16  F03F         	call	__flash_is_busy	;wreg free
  5671  006660  0900               	iorlw	0
  5672  006662  A4D8               	btfss	status,2,c
  5673  006664  D7FB               	goto	l13061
  5674                           
  5675                           ;flash.c: 103: if(size==FLASH_PAGE_SIZE_512)
  5676  006666  5018               	movf	__flash_set_page_size@size,w,c
  5677  006668  A4D8               	btfss	status,2,c
  5678  00666A  D013               	goto	l1738
  5679                           
  5680                           ;flash.c: 104: memcpy(command, flash_command_pagesize_512, 4);
  5681  00666C  0E14               	movlw	low __flash_set_page_size@command
  5682  00666E  6E01               	movwf	memcpy@d1,c
  5683  006670  0E00               	movlw	high __flash_set_page_size@command
  5684  006672  6E02               	movwf	memcpy@d1+1,c
  5685  006674  0EC4               	movlw	low _flash_command_pagesize_512
  5686  006676  6E03               	movwf	memcpy@s1,c
  5687  006678  0E8F               	movlw	high _flash_command_pagesize_512
  5688  00667A  6E04               	movwf	memcpy@s1+1,c
  5689  00667C  5003               	movf	memcpy@s1,w,c
  5690  00667E  1004               	iorwf	memcpy@s1+1,w,c
  5691  006680  A4D8               	btfss	status,2,c
  5692  006682  0E00               	movlw	low (__mediumconst shr (0+16))
  5693  006684  6E05               	movwf	memcpy@s1+2,c
  5694  006686  0E00               	movlw	0
  5695  006688  6E07               	movwf	memcpy@n+1,c
  5696  00668A  0E04               	movlw	4
  5697  00668C  6E06               	movwf	memcpy@n,c
  5698  00668E  ECAE  F036         	call	_memcpy	;wreg free
  5699  006692                     l1738:
  5700                           
  5701                           ;flash.c: 105: if(size==FLASH_PAGE_SIZE_528)
  5702  006692  0418               	decf	__flash_set_page_size@size,w,c
  5703  006694  A4D8               	btfss	status,2,c
  5704  006696  D013               	goto	l1739
  5705                           
  5706                           ;flash.c: 106: memcpy(command, flash_command_pagesize_528, 4);
  5707  006698  0E14               	movlw	low __flash_set_page_size@command
  5708  00669A  6E01               	movwf	memcpy@d1,c
  5709  00669C  0E00               	movlw	high __flash_set_page_size@command
  5710  00669E  6E02               	movwf	memcpy@d1+1,c
  5711  0066A0  0EC0               	movlw	low _flash_command_pagesize_528
  5712  0066A2  6E03               	movwf	memcpy@s1,c
  5713  0066A4  0E8F               	movlw	high _flash_command_pagesize_528
  5714  0066A6  6E04               	movwf	memcpy@s1+1,c
  5715  0066A8  5003               	movf	memcpy@s1,w,c
  5716  0066AA  1004               	iorwf	memcpy@s1+1,w,c
  5717  0066AC  A4D8               	btfss	status,2,c
  5718  0066AE  0E00               	movlw	low (__mediumconst shr (0+16))
  5719  0066B0  6E05               	movwf	memcpy@s1+2,c
  5720  0066B2  0E00               	movlw	0
  5721  0066B4  6E07               	movwf	memcpy@n+1,c
  5722  0066B6  0E04               	movlw	4
  5723  0066B8  6E06               	movwf	memcpy@n,c
  5724  0066BA  ECAE  F036         	call	_memcpy	;wreg free
  5725  0066BE                     l1739:
  5726                           
  5727                           ;flash.c: 109: spi_tx(command, 4);
  5728  0066BE  0E14               	movlw	low __flash_set_page_size@command
  5729  0066C0  6E01               	movwf	spi_tx@data,c
  5730  0066C2  0E00               	movlw	high __flash_set_page_size@command
  5731  0066C4  6E02               	movwf	spi_tx@data+1,c
  5732  0066C6  0E00               	movlw	0
  5733  0066C8  6E04               	movwf	spi_tx@length+1,c
  5734  0066CA  0E04               	movlw	4
  5735  0066CC  6E03               	movwf	spi_tx@length,c
  5736  0066CE  EC08  F039         	call	_spi_tx	;wreg free
  5737  0066D2  0012               	return		;funcret
  5738  0066D4                     __end_of__flash_set_page_size:
  5739                           	opt stack 0
  5740                           tblptru	equ	0xFF8
  5741                           tblptrh	equ	0xFF7
  5742                           tblptrl	equ	0xFF6
  5743                           tablat	equ	0xFF5
  5744                           intcon	equ	0xFF2
  5745                           intcon3	equ	0xFF0
  5746                           postinc0	equ	0xFEE
  5747                           wreg	equ	0xFE8
  5748                           postdec1	equ	0xFE5
  5749                           plusw1	equ	0xFE3
  5750                           fsr1h	equ	0xFE2
  5751                           fsr1l	equ	0xFE1
  5752                           plusw2	equ	0xFDB
  5753                           status	equ	0xFD8
  5754                           
  5755 ;; *************** function _fat_init *****************
  5756 ;; Defined at:
  5757 ;;		line 972 in file "fat16.c"
  5758 ;; Parameters:    Size  Location     Type
  5759 ;;		None
  5760 ;; Auto vars:     Size  Location     Type
  5761 ;;		None
  5762 ;; Return value:  Size  Location     Type
  5763 ;;                  1    wreg      void 
  5764 ;; Registers used:
  5765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5766 ;; Tracked objects:
  5767 ;;		On entry : 0/0
  5768 ;;		On exit  : 0/0
  5769 ;;		Unchanged: 0/0
  5770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5772 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5774 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5775 ;;Total ram usage:        0 bytes
  5776 ;; Hardware stack levels used:    1
  5777 ;; Hardware stack levels required when called:    6
  5778 ;; This function calls:
  5779 ;;		_fat_format
  5780 ;;		_fat_get_format_status
  5781 ;; This function is called by:
  5782 ;;		_system_full_init
  5783 ;; This function uses a non-reentrant model
  5784 ;;
  5785                           
  5786                           	psect	text20
  5787  007FD0                     __ptext20:
  5788                           	opt stack 0
  5789  007FD0                     _fat_init:
  5790                           	opt stack 23
  5791                           
  5792                           ;fat16.c: 975: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  5793                           
  5794                           ;incstack = 0
  5795  007FD0  EC06  F02E         	call	_fat_get_format_status	;wreg free
  5796  007FD4  0900               	iorlw	0
  5797  007FD6  A4D8               	btfss	status,2,c
  5798  007FD8  0012               	return	
  5799                           
  5800                           ;fat16.c: 976: {;fat16.c: 977: fat_format();
  5801  007FDA  ECA8  F012         	call	_fat_format	;wreg free
  5802  007FDE  0012               	return	
  5803  007FE0                     __end_of_fat_init:
  5804                           	opt stack 0
  5805                           tblptru	equ	0xFF8
  5806                           tblptrh	equ	0xFF7
  5807                           tblptrl	equ	0xFF6
  5808                           tablat	equ	0xFF5
  5809                           intcon	equ	0xFF2
  5810                           intcon3	equ	0xFF0
  5811                           postinc0	equ	0xFEE
  5812                           wreg	equ	0xFE8
  5813                           postdec1	equ	0xFE5
  5814                           plusw1	equ	0xFE3
  5815                           fsr1h	equ	0xFE2
  5816                           fsr1l	equ	0xFE1
  5817                           plusw2	equ	0xFDB
  5818                           status	equ	0xFD8
  5819                           
  5820 ;; *************** function _fat_get_format_status *****************
  5821 ;; Defined at:
  5822 ;;		line 884 in file "fat16.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;		None
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;  cntr            2   45[COMRAM] unsigned int 
  5827 ;; Return value:  Size  Location     Type
  5828 ;;                  1    wreg      enum E6872
  5829 ;; Registers used:
  5830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5831 ;; Tracked objects:
  5832 ;;		On entry : 0/0
  5833 ;;		On exit  : 0/0
  5834 ;;		Unchanged: 0/0
  5835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5837 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5838 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5839 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5840 ;;Total ram usage:        4 bytes
  5841 ;; Hardware stack levels used:    1
  5842 ;; Hardware stack levels required when called:    5
  5843 ;; This function calls:
  5844 ;;		__get_fbr
  5845 ;;		__get_mbr
  5846 ;;		_flash_page_read
  5847 ;; This function is called by:
  5848 ;;		_fat_init
  5849 ;; This function uses a non-reentrant model
  5850 ;;
  5851                           
  5852                           	psect	text21
  5853  005C0C                     __ptext21:
  5854                           	opt stack 0
  5855  005C0C                     _fat_get_format_status:
  5856                           	opt stack 23
  5857                           
  5858                           ;fat16.c: 886: uint16_t cntr;;fat16.c: 889: flash_page_read(0, buffer);
  5859                           
  5860                           ;incstack = 0
  5861  005C0C  0E00               	movlw	0
  5862  005C0E  6E29               	movwf	flash_page_read@page+1,c
  5863  005C10  0E00               	movlw	0
  5864  005C12  6E28               	movwf	flash_page_read@page,c
  5865  005C14  0E40               	movlw	low _buffer
  5866  005C16  6E2A               	movwf	flash_page_read@data,c
  5867  005C18  0E03               	movlw	high _buffer
  5868  005C1A  6E2B               	movwf	flash_page_read@data+1,c
  5869  005C1C  EC5F  F03D         	call	_flash_page_read	;wreg free
  5870                           
  5871                           ;fat16.c: 890: for(cntr=0; cntr<512; ++cntr)
  5872  005C20  0E00               	movlw	0
  5873  005C22  6E2F               	movwf	fat_get_format_status@cntr+1,c
  5874  005C24  0E00               	movlw	0
  5875  005C26  6E2E               	movwf	fat_get_format_status@cntr,c
  5876  005C28                     l13089:
  5877  005C28  0E02               	movlw	2
  5878  005C2A  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  5879  005C2C  B0D8               	btfsc	status,0,c
  5880  005C2E  D016               	goto	u9960
  5881                           
  5882                           ;fat16.c: 891: {;fat16.c: 892: if(buffer[cntr] != _get_mbr(cntr))
  5883  005C30  0E40               	movlw	low _buffer
  5884  005C32  242E               	addwf	fat_get_format_status@cntr,w,c
  5885  005C34  6ED9               	movwf	fsr2l,c
  5886  005C36  0E03               	movlw	high _buffer
  5887  005C38  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  5888  005C3A  6EDA               	movwf	fsr2h,c
  5889  005C3C  C02E  F001         	movff	fat_get_format_status@cntr,__get_mbr@idx
  5890  005C40  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  5891  005C44  EC90  F028         	call	__get_mbr	;wreg free
  5892  005C48  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  5893  005C4A  50DE               	movf	postinc2,w,c
  5894  005C4C  182D               	xorwf	??_fat_get_format_status+1,w,c
  5895  005C4E  B4D8               	btfsc	status,2,c
  5896  005C50  D002               	goto	l2158
  5897                           
  5898                           ;fat16.c: 893: {;fat16.c: 894: return DRIVE_NOT_FORMATED;
  5899  005C52  0E00               	movlw	0
  5900  005C54  0012               	return	
  5901  005C56                     l2158:
  5902  005C56  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  5903  005C58  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  5904  005C5A  D7E6               	goto	l13089
  5905  005C5C                     u9960:
  5906                           
  5907                           ;fat16.c: 895: };fat16.c: 896: };fat16.c: 899: flash_page_read(1, buffer);
  5908  005C5C  0E00               	movlw	0
  5909  005C5E  6E29               	movwf	flash_page_read@page+1,c
  5910  005C60  0E01               	movlw	1
  5911  005C62  6E28               	movwf	flash_page_read@page,c
  5912  005C64  0E40               	movlw	low _buffer
  5913  005C66  6E2A               	movwf	flash_page_read@data,c
  5914  005C68  0E03               	movlw	high _buffer
  5915  005C6A  6E2B               	movwf	flash_page_read@data+1,c
  5916  005C6C  EC5F  F03D         	call	_flash_page_read	;wreg free
  5917                           
  5918                           ;fat16.c: 900: for(cntr=0; cntr<512; ++cntr)
  5919  005C70  0E00               	movlw	0
  5920  005C72  6E2F               	movwf	fat_get_format_status@cntr+1,c
  5921  005C74  0E00               	movlw	0
  5922  005C76  6E2E               	movwf	fat_get_format_status@cntr,c
  5923  005C78                     l13107:
  5924  005C78  0E02               	movlw	2
  5925  005C7A  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  5926  005C7C  B0D8               	btfsc	status,0,c
  5927  005C7E  D016               	goto	u9990
  5928                           
  5929                           ;fat16.c: 901: {;fat16.c: 902: if(buffer[cntr] != _get_fbr(cntr))
  5930  005C80  0E40               	movlw	low _buffer
  5931  005C82  242E               	addwf	fat_get_format_status@cntr,w,c
  5932  005C84  6ED9               	movwf	fsr2l,c
  5933  005C86  0E03               	movlw	high _buffer
  5934  005C88  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  5935  005C8A  6EDA               	movwf	fsr2h,c
  5936  005C8C  C02E  F001         	movff	fat_get_format_status@cntr,__get_fbr@idx
  5937  005C90  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  5938  005C94  EC1C  F00D         	call	__get_fbr	;wreg free
  5939  005C98  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  5940  005C9A  50DE               	movf	postinc2,w,c
  5941  005C9C  182D               	xorwf	??_fat_get_format_status+1,w,c
  5942  005C9E  B4D8               	btfsc	status,2,c
  5943  005CA0  D002               	goto	l2162
  5944                           
  5945                           ;fat16.c: 903: {;fat16.c: 904: return DRIVE_NOT_FORMATED;
  5946  005CA2  0E00               	movlw	0
  5947  005CA4  0012               	return	
  5948  005CA6                     l2162:
  5949  005CA6  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  5950  005CA8  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  5951  005CAA  D7E6               	goto	l13107
  5952  005CAC                     u9990:
  5953                           
  5954                           ;fat16.c: 905: };fat16.c: 906: };fat16.c: 909: return DRIVE_FORMATED;
  5955  005CAC  0E01               	movlw	1
  5956  005CAE  0012               	return	
  5957  005CB0                     __end_of_fat_get_format_status:
  5958                           	opt stack 0
  5959                           tblptru	equ	0xFF8
  5960                           tblptrh	equ	0xFF7
  5961                           tblptrl	equ	0xFF6
  5962                           tablat	equ	0xFF5
  5963                           intcon	equ	0xFF2
  5964                           intcon3	equ	0xFF0
  5965                           postinc0	equ	0xFEE
  5966                           wreg	equ	0xFE8
  5967                           postdec1	equ	0xFE5
  5968                           plusw1	equ	0xFE3
  5969                           fsr1h	equ	0xFE2
  5970                           fsr1l	equ	0xFE1
  5971                           postinc2	equ	0xFDE
  5972                           plusw2	equ	0xFDB
  5973                           fsr2h	equ	0xFDA
  5974                           fsr2l	equ	0xFD9
  5975                           status	equ	0xFD8
  5976                           
  5977 ;; *************** function _fat_format *****************
  5978 ;; Defined at:
  5979 ;;		line 912 in file "fat16.c"
  5980 ;; Parameters:    Size  Location     Type
  5981 ;;		None
  5982 ;; Auto vars:     Size  Location     Type
  5983 ;;  cntr            2   36[COMRAM] unsigned int 
  5984 ;; Return value:  Size  Location     Type
  5985 ;;                  1    wreg      void 
  5986 ;; Registers used:
  5987 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5988 ;; Tracked objects:
  5989 ;;		On entry : 0/0
  5990 ;;		On exit  : 0/0
  5991 ;;		Unchanged: 0/0
  5992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5994 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5996 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5997 ;;Total ram usage:        2 bytes
  5998 ;; Hardware stack levels used:    1
  5999 ;; Hardware stack levels required when called:    5
  6000 ;; This function calls:
  6001 ;;		__get_data
  6002 ;;		__get_fat
  6003 ;;		__get_fbr
  6004 ;;		__get_mbr
  6005 ;;		__get_root
  6006 ;;		_flash_page_write
  6007 ;; This function is called by:
  6008 ;;		_fat_init
  6009 ;; This function uses a non-reentrant model
  6010 ;;
  6011                           
  6012                           	psect	text22
  6013  002550                     __ptext22:
  6014                           	opt stack 0
  6015  002550                     _fat_format:
  6016                           	opt stack 23
  6017                           
  6018                           ;fat16.c: 914: uint16_t cntr;;fat16.c: 917: for(cntr=0; cntr<512; ++cntr)
  6019                           
  6020                           ;incstack = 0
  6021  002550  0E00               	movlw	0
  6022  002552  6E26               	movwf	fat_format@cntr+1,c
  6023  002554  0E00               	movlw	0
  6024  002556  6E25               	movwf	fat_format@cntr,c
  6025  002558                     l13127:
  6026  002558  0E02               	movlw	2
  6027  00255A  5C26               	subwf	fat_format@cntr+1,w,c
  6028  00255C  B0D8               	btfsc	status,0,c
  6029  00255E  D010               	goto	u10010
  6030                           
  6031                           ;fat16.c: 918: {;fat16.c: 919: buffer[cntr] = _get_mbr(cntr);
  6032  002560  0E40               	movlw	low _buffer
  6033  002562  2425               	addwf	fat_format@cntr,w,c
  6034  002564  6ED9               	movwf	fsr2l,c
  6035  002566  0E03               	movlw	high _buffer
  6036  002568  2026               	addwfc	fat_format@cntr+1,w,c
  6037  00256A  6EDA               	movwf	fsr2h,c
  6038  00256C  C025  F001         	movff	fat_format@cntr,__get_mbr@idx
  6039  002570  C026  F002         	movff	fat_format@cntr+1,__get_mbr@idx+1
  6040  002574  EC90  F028         	call	__get_mbr	;wreg free
  6041  002578  6EDF               	movwf	indf2,c
  6042  00257A  4A25               	infsnz	fat_format@cntr,f,c
  6043  00257C  2A26               	incf	fat_format@cntr+1,f,c
  6044  00257E  D7EC               	goto	l13127
  6045  002580                     u10010:
  6046                           
  6047                           ;fat16.c: 920: };fat16.c: 921: flash_page_write(0, buffer);
  6048  002580  0E00               	movlw	0
  6049  002582  6E21               	movwf	flash_page_write@page+1,c
  6050  002584  0E00               	movlw	0
  6051  002586  6E20               	movwf	flash_page_write@page,c
  6052  002588  0E40               	movlw	low _buffer
  6053  00258A  6E22               	movwf	flash_page_write@data,c
  6054  00258C  0E03               	movlw	high _buffer
  6055  00258E  6E23               	movwf	flash_page_write@data+1,c
  6056  002590  EC8A  F039         	call	_flash_page_write	;wreg free
  6057                           
  6058                           ;fat16.c: 924: for(cntr=0; cntr<512; ++cntr)
  6059  002594  0E00               	movlw	0
  6060  002596  6E26               	movwf	fat_format@cntr+1,c
  6061  002598  0E00               	movlw	0
  6062  00259A  6E25               	movwf	fat_format@cntr,c
  6063  00259C                     l13141:
  6064  00259C  0E02               	movlw	2
  6065  00259E  5C26               	subwf	fat_format@cntr+1,w,c
  6066  0025A0  B0D8               	btfsc	status,0,c
  6067  0025A2  D010               	goto	u10030
  6068                           
  6069                           ;fat16.c: 925: {;fat16.c: 926: buffer[cntr] = _get_fbr(cntr);
  6070  0025A4  0E40               	movlw	low _buffer
  6071  0025A6  2425               	addwf	fat_format@cntr,w,c
  6072  0025A8  6ED9               	movwf	fsr2l,c
  6073  0025AA  0E03               	movlw	high _buffer
  6074  0025AC  2026               	addwfc	fat_format@cntr+1,w,c
  6075  0025AE  6EDA               	movwf	fsr2h,c
  6076  0025B0  C025  F001         	movff	fat_format@cntr,__get_fbr@idx
  6077  0025B4  C026  F002         	movff	fat_format@cntr+1,__get_fbr@idx+1
  6078  0025B8  EC1C  F00D         	call	__get_fbr	;wreg free
  6079  0025BC  6EDF               	movwf	indf2,c
  6080  0025BE  4A25               	infsnz	fat_format@cntr,f,c
  6081  0025C0  2A26               	incf	fat_format@cntr+1,f,c
  6082  0025C2  D7EC               	goto	l13141
  6083  0025C4                     u10030:
  6084                           
  6085                           ;fat16.c: 927: };fat16.c: 928: flash_page_write(1, buffer);
  6086  0025C4  0E00               	movlw	0
  6087  0025C6  6E21               	movwf	flash_page_write@page+1,c
  6088  0025C8  0E01               	movlw	1
  6089  0025CA  6E20               	movwf	flash_page_write@page,c
  6090  0025CC  0E40               	movlw	low _buffer
  6091  0025CE  6E22               	movwf	flash_page_write@data,c
  6092  0025D0  0E03               	movlw	high _buffer
  6093  0025D2  6E23               	movwf	flash_page_write@data+1,c
  6094  0025D4  EC8A  F039         	call	_flash_page_write	;wreg free
  6095                           
  6096                           ;fat16.c: 931: for(cntr=0; cntr<512; ++cntr)
  6097  0025D8  0E00               	movlw	0
  6098  0025DA  6E26               	movwf	fat_format@cntr+1,c
  6099  0025DC  0E00               	movlw	0
  6100  0025DE  6E25               	movwf	fat_format@cntr,c
  6101  0025E0                     l13155:
  6102  0025E0  0E02               	movlw	2
  6103  0025E2  5C26               	subwf	fat_format@cntr+1,w,c
  6104  0025E4  B0D8               	btfsc	status,0,c
  6105  0025E6  D010               	goto	u10050
  6106                           
  6107                           ;fat16.c: 932: {;fat16.c: 933: buffer[cntr] = _get_fat(cntr);
  6108  0025E8  0E40               	movlw	low _buffer
  6109  0025EA  2425               	addwf	fat_format@cntr,w,c
  6110  0025EC  6ED9               	movwf	fsr2l,c
  6111  0025EE  0E03               	movlw	high _buffer
  6112  0025F0  2026               	addwfc	fat_format@cntr+1,w,c
  6113  0025F2  6EDA               	movwf	fsr2h,c
  6114  0025F4  C025  F001         	movff	fat_format@cntr,__get_fat@idx
  6115  0025F8  C026  F002         	movff	fat_format@cntr+1,__get_fat@idx+1
  6116  0025FC  EC34  F039         	call	__get_fat	;wreg free
  6117  002600  6EDF               	movwf	indf2,c
  6118  002602  4A25               	infsnz	fat_format@cntr,f,c
  6119  002604  2A26               	incf	fat_format@cntr+1,f,c
  6120  002606  D7EC               	goto	l13155
  6121  002608                     u10050:
  6122                           
  6123                           ;fat16.c: 934: };fat16.c: 935: flash_page_write(2, buffer);
  6124  002608  0E00               	movlw	0
  6125  00260A  6E21               	movwf	flash_page_write@page+1,c
  6126  00260C  0E02               	movlw	2
  6127  00260E  6E20               	movwf	flash_page_write@page,c
  6128  002610  0E40               	movlw	low _buffer
  6129  002612  6E22               	movwf	flash_page_write@data,c
  6130  002614  0E03               	movlw	high _buffer
  6131  002616  6E23               	movwf	flash_page_write@data+1,c
  6132  002618  EC8A  F039         	call	_flash_page_write	;wreg free
  6133                           
  6134                           ;fat16.c: 938: for(cntr=0; cntr<512; ++cntr)
  6135  00261C  0E00               	movlw	0
  6136  00261E  6E26               	movwf	fat_format@cntr+1,c
  6137  002620  0E00               	movlw	0
  6138  002622  6E25               	movwf	fat_format@cntr,c
  6139  002624                     l13169:
  6140  002624  0E02               	movlw	2
  6141  002626  5C26               	subwf	fat_format@cntr+1,w,c
  6142  002628  B0D8               	btfsc	status,0,c
  6143  00262A  D00B               	goto	u10070
  6144                           
  6145                           ;fat16.c: 939: {;fat16.c: 940: buffer[cntr] = 0x00;
  6146  00262C  0E40               	movlw	low _buffer
  6147  00262E  2425               	addwf	fat_format@cntr,w,c
  6148  002630  6ED9               	movwf	fsr2l,c
  6149  002632  0E03               	movlw	high _buffer
  6150  002634  2026               	addwfc	fat_format@cntr+1,w,c
  6151  002636  6EDA               	movwf	fsr2h,c
  6152  002638  0E00               	movlw	0
  6153  00263A  6EDF               	movwf	indf2,c
  6154  00263C  4A25               	infsnz	fat_format@cntr,f,c
  6155  00263E  2A26               	incf	fat_format@cntr+1,f,c
  6156  002640  D7F1               	goto	l13169
  6157  002642                     u10070:
  6158                           
  6159                           ;fat16.c: 941: };fat16.c: 942: for(cntr=2+1; cntr<=33; ++cntr)
  6160  002642  0E00               	movlw	0
  6161  002644  6E26               	movwf	fat_format@cntr+1,c
  6162  002646  0E03               	movlw	3
  6163  002648  6E25               	movwf	fat_format@cntr,c
  6164  00264A                     l13181:
  6165  00264A  5026               	movf	fat_format@cntr+1,w,c
  6166  00264C  E111               	bnz	l13191
  6167  00264E  0E22               	movlw	34
  6168  002650  5C25               	subwf	fat_format@cntr,w,c
  6169  002652  B0D8               	btfsc	status,0,c
  6170  002654  D00D               	goto	u10090
  6171                           
  6172                           ;fat16.c: 943: {;fat16.c: 944: flash_page_write(cntr, buffer);
  6173  002656  C025  F020         	movff	fat_format@cntr,flash_page_write@page
  6174  00265A  C026  F021         	movff	fat_format@cntr+1,flash_page_write@page+1
  6175  00265E  0E40               	movlw	low _buffer
  6176  002660  6E22               	movwf	flash_page_write@data,c
  6177  002662  0E03               	movlw	high _buffer
  6178  002664  6E23               	movwf	flash_page_write@data+1,c
  6179  002666  EC8A  F039         	call	_flash_page_write	;wreg free
  6180  00266A  4A25               	infsnz	fat_format@cntr,f,c
  6181  00266C  2A26               	incf	fat_format@cntr+1,f,c
  6182  00266E  D7ED               	goto	l13181
  6183  002670                     u10090:
  6184  002670                     l13191:
  6185                           
  6186                           ;fat16.c: 945: };fat16.c: 948: for(cntr=0; cntr<512; ++cntr)
  6187  002670  0E00               	movlw	0
  6188  002672  6E26               	movwf	fat_format@cntr+1,c
  6189  002674  0E00               	movlw	0
  6190  002676  6E25               	movwf	fat_format@cntr,c
  6191  002678                     l13193:
  6192  002678  0E02               	movlw	2
  6193  00267A  5C26               	subwf	fat_format@cntr+1,w,c
  6194  00267C  B0D8               	btfsc	status,0,c
  6195  00267E  D010               	goto	u10110
  6196                           
  6197                           ;fat16.c: 949: {;fat16.c: 950: buffer[cntr] = _get_root(cntr);
  6198  002680  0E40               	movlw	low _buffer
  6199  002682  2425               	addwf	fat_format@cntr,w,c
  6200  002684  6ED9               	movwf	fsr2l,c
  6201  002686  0E03               	movlw	high _buffer
  6202  002688  2026               	addwfc	fat_format@cntr+1,w,c
  6203  00268A  6EDA               	movwf	fsr2h,c
  6204  00268C  C025  F001         	movff	fat_format@cntr,__get_root@idx
  6205  002690  C026  F002         	movff	fat_format@cntr+1,__get_root@idx+1
  6206  002694  EC3A  F019         	call	__get_root	;wreg free
  6207  002698  6EDF               	movwf	indf2,c
  6208  00269A  4A25               	infsnz	fat_format@cntr,f,c
  6209  00269C  2A26               	incf	fat_format@cntr+1,f,c
  6210  00269E  D7EC               	goto	l13193
  6211  0026A0                     u10110:
  6212                           
  6213                           ;fat16.c: 951: };fat16.c: 952: flash_page_write(34, buffer);
  6214  0026A0  0E00               	movlw	0
  6215  0026A2  6E21               	movwf	flash_page_write@page+1,c
  6216  0026A4  0E22               	movlw	34
  6217  0026A6  6E20               	movwf	flash_page_write@page,c
  6218  0026A8  0E40               	movlw	low _buffer
  6219  0026AA  6E22               	movwf	flash_page_write@data,c
  6220  0026AC  0E03               	movlw	high _buffer
  6221  0026AE  6E23               	movwf	flash_page_write@data+1,c
  6222  0026B0  EC8A  F039         	call	_flash_page_write	;wreg free
  6223                           
  6224                           ;fat16.c: 955: for(cntr=0; cntr<512; ++cntr)
  6225  0026B4  0E00               	movlw	0
  6226  0026B6  6E26               	movwf	fat_format@cntr+1,c
  6227  0026B8  0E00               	movlw	0
  6228  0026BA  6E25               	movwf	fat_format@cntr,c
  6229  0026BC                     l13207:
  6230  0026BC  0E02               	movlw	2
  6231  0026BE  5C26               	subwf	fat_format@cntr+1,w,c
  6232  0026C0  B0D8               	btfsc	status,0,c
  6233  0026C2  D00B               	goto	u10130
  6234                           
  6235                           ;fat16.c: 956: {;fat16.c: 957: buffer[cntr] = 0x00;
  6236  0026C4  0E40               	movlw	low _buffer
  6237  0026C6  2425               	addwf	fat_format@cntr,w,c
  6238  0026C8  6ED9               	movwf	fsr2l,c
  6239  0026CA  0E03               	movlw	high _buffer
  6240  0026CC  2026               	addwfc	fat_format@cntr+1,w,c
  6241  0026CE  6EDA               	movwf	fsr2h,c
  6242  0026D0  0E00               	movlw	0
  6243  0026D2  6EDF               	movwf	indf2,c
  6244  0026D4  4A25               	infsnz	fat_format@cntr,f,c
  6245  0026D6  2A26               	incf	fat_format@cntr+1,f,c
  6246  0026D8  D7F1               	goto	l13207
  6247  0026DA                     u10130:
  6248                           
  6249                           ;fat16.c: 958: };fat16.c: 959: for(cntr=34+1; cntr<=37; ++cntr)
  6250  0026DA  0E00               	movlw	0
  6251  0026DC  6E26               	movwf	fat_format@cntr+1,c
  6252  0026DE  0E23               	movlw	35
  6253  0026E0  6E25               	movwf	fat_format@cntr,c
  6254  0026E2                     l13219:
  6255  0026E2  5026               	movf	fat_format@cntr+1,w,c
  6256  0026E4  E111               	bnz	l13229
  6257  0026E6  0E26               	movlw	38
  6258  0026E8  5C25               	subwf	fat_format@cntr,w,c
  6259  0026EA  B0D8               	btfsc	status,0,c
  6260  0026EC  D00D               	goto	u10150
  6261                           
  6262                           ;fat16.c: 960: {;fat16.c: 961: flash_page_write(cntr, buffer);
  6263  0026EE  C025  F020         	movff	fat_format@cntr,flash_page_write@page
  6264  0026F2  C026  F021         	movff	fat_format@cntr+1,flash_page_write@page+1
  6265  0026F6  0E40               	movlw	low _buffer
  6266  0026F8  6E22               	movwf	flash_page_write@data,c
  6267  0026FA  0E03               	movlw	high _buffer
  6268  0026FC  6E23               	movwf	flash_page_write@data+1,c
  6269  0026FE  EC8A  F039         	call	_flash_page_write	;wreg free
  6270  002702  4A25               	infsnz	fat_format@cntr,f,c
  6271  002704  2A26               	incf	fat_format@cntr+1,f,c
  6272  002706  D7ED               	goto	l13219
  6273  002708                     u10150:
  6274  002708                     l13229:
  6275                           
  6276                           ;fat16.c: 962: };fat16.c: 965: for(cntr=0; cntr<512; ++cntr)
  6277  002708  0E00               	movlw	0
  6278  00270A  6E26               	movwf	fat_format@cntr+1,c
  6279  00270C  0E00               	movlw	0
  6280  00270E  6E25               	movwf	fat_format@cntr,c
  6281  002710                     l13231:
  6282  002710  0E02               	movlw	2
  6283  002712  5C26               	subwf	fat_format@cntr+1,w,c
  6284  002714  B0D8               	btfsc	status,0,c
  6285  002716  D010               	goto	u10170
  6286                           
  6287                           ;fat16.c: 966: {;fat16.c: 967: buffer[cntr] = _get_data(cntr);
  6288  002718  0E40               	movlw	low _buffer
  6289  00271A  2425               	addwf	fat_format@cntr,w,c
  6290  00271C  6ED9               	movwf	fsr2l,c
  6291  00271E  0E03               	movlw	high _buffer
  6292  002720  2026               	addwfc	fat_format@cntr+1,w,c
  6293  002722  6EDA               	movwf	fsr2h,c
  6294  002724  C025  F001         	movff	fat_format@cntr,__get_data@idx
  6295  002728  C026  F002         	movff	fat_format@cntr+1,__get_data@idx+1
  6296  00272C  EC5F  F03E         	call	__get_data	;wreg free
  6297  002730  6EDF               	movwf	indf2,c
  6298  002732  4A25               	infsnz	fat_format@cntr,f,c
  6299  002734  2A26               	incf	fat_format@cntr+1,f,c
  6300  002736  D7EC               	goto	l13231
  6301  002738                     u10170:
  6302                           
  6303                           ;fat16.c: 968: };fat16.c: 969: flash_page_write(38, buffer);
  6304  002738  0E00               	movlw	0
  6305  00273A  6E21               	movwf	flash_page_write@page+1,c
  6306  00273C  0E26               	movlw	38
  6307  00273E  6E20               	movwf	flash_page_write@page,c
  6308  002740  0E40               	movlw	low _buffer
  6309  002742  6E22               	movwf	flash_page_write@data,c
  6310  002744  0E03               	movlw	high _buffer
  6311  002746  6E23               	movwf	flash_page_write@data+1,c
  6312  002748  EC8A  F039         	call	_flash_page_write	;wreg free
  6313  00274C  0012               	return		;funcret
  6314  00274E                     __end_of_fat_format:
  6315                           	opt stack 0
  6316                           tblptru	equ	0xFF8
  6317                           tblptrh	equ	0xFF7
  6318                           tblptrl	equ	0xFF6
  6319                           tablat	equ	0xFF5
  6320                           intcon	equ	0xFF2
  6321                           intcon3	equ	0xFF0
  6322                           postinc0	equ	0xFEE
  6323                           wreg	equ	0xFE8
  6324                           postdec1	equ	0xFE5
  6325                           plusw1	equ	0xFE3
  6326                           fsr1h	equ	0xFE2
  6327                           fsr1l	equ	0xFE1
  6328                           indf2	equ	0xFDF
  6329                           postinc2	equ	0xFDE
  6330                           plusw2	equ	0xFDB
  6331                           fsr2h	equ	0xFDA
  6332                           fsr2l	equ	0xFD9
  6333                           status	equ	0xFD8
  6334                           
  6335 ;; *************** function __get_root *****************
  6336 ;; Defined at:
  6337 ;;		line 798 in file "fat16.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;  idx             2    0[COMRAM] unsigned int 
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;		None
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  1    wreg      unsigned char 
  6344 ;; Registers used:
  6345 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6351 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6353 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6354 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6355 ;;Total ram usage:        6 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; This function calls:
  6358 ;;		Nothing
  6359 ;; This function is called by:
  6360 ;;		_fat_format
  6361 ;; This function uses a non-reentrant model
  6362 ;;
  6363                           
  6364                           	psect	text23
  6365  003274                     __ptext23:
  6366                           	opt stack 0
  6367  003274                     __get_root:
  6368                           	opt stack 27
  6369                           
  6370                           ;fat16.c: 800: if (idx < 0x20)
  6371                           
  6372                           ;incstack = 0
  6373  003274  5002               	movf	__get_root@idx+1,w,c
  6374  003276  E11D               	bnz	l12645
  6375  003278  0E20               	movlw	32
  6376  00327A  5C01               	subwf	__get_root@idx,w,c
  6377  00327C  B0D8               	btfsc	status,0,c
  6378  00327E  D019               	goto	l2123
  6379                           
  6380                           ;fat16.c: 801: {;fat16.c: 802: if (idx < 11)
  6381  003280  5002               	movf	__get_root@idx+1,w,c
  6382  003282  E110               	bnz	l12639
  6383  003284  0E0B               	movlw	11
  6384  003286  5C01               	subwf	__get_root@idx,w,c
  6385  003288  B0D8               	btfsc	status,0,c
  6386  00328A  D00C               	goto	l2121
  6387                           
  6388                           ;fat16.c: 803: {;fat16.c: 804: return "SolarChargr"[idx];
  6389  00328C  0EDD               	movlw	low STR_9
  6390  00328E  2401               	addwf	__get_root@idx,w,c
  6391  003290  6EF6               	movwf	tblptrl,c
  6392  003292  0E8F               	movlw	high STR_9
  6393  003294  2002               	addwfc	__get_root@idx+1,w,c
  6394  003296  6EF7               	movwf	tblptrh,c
  6395  003298                     	if	1	;There are 3 active tblptr bytes
  6396  003298  6AF8               	clrf	tblptru,c
  6397  00329A  0E00               	movlw	low (__mediumconst shr (0+16))
  6398  00329C  22F8               	addwfc	tblptru,f,c
  6399  00329E                     	endif
  6400  00329E  0008               	tblrd		*
  6401  0032A0  50F5               	movf	tablat,w,c
  6402  0032A2  0012               	return	
  6403  0032A4                     l2121:
  6404  0032A4                     l12639:
  6405                           
  6406                           ;fat16.c: 805: };fat16.c: 806: if(idx==11)
  6407  0032A4  0E0B               	movlw	11
  6408  0032A6  1801               	xorwf	__get_root@idx,w,c
  6409  0032A8  1002               	iorwf	__get_root@idx+1,w,c
  6410  0032AA  A4D8               	btfss	status,2,c
  6411  0032AC  D002               	goto	l2123
  6412                           
  6413                           ;fat16.c: 807: {;fat16.c: 808: return 0x08;
  6414  0032AE  0E08               	movlw	8
  6415  0032B0  0012               	return	
  6416  0032B2                     l2123:
  6417  0032B2                     l12645:
  6418                           
  6419                           ;fat16.c: 809: };fat16.c: 810: };fat16.c: 811: if (idx < 0x40)
  6420  0032B2  5002               	movf	__get_root@idx+1,w,c
  6421  0032B4  E103               	bnz	u9521
  6422  0032B6  0E40               	movlw	64
  6423  0032B8  5C01               	subwf	__get_root@idx,w,c
  6424  0032BA  B0D8               	btfsc	status,0,c
  6425  0032BC                     u9521:
  6426  0032BC  D0A4               	goto	l2149
  6427                           
  6428                           ;fat16.c: 812: {;fat16.c: 813: idx -= 0x20;
  6429  0032BE  0E20               	movlw	32
  6430  0032C0  5E01               	subwf	__get_root@idx,f,c
  6431  0032C2  0E00               	movlw	0
  6432  0032C4  5A02               	subwfb	__get_root@idx+1,f,c
  6433                           
  6434                           ;fat16.c: 814: if (idx < 0+8)
  6435  0032C6  5002               	movf	__get_root@idx+1,w,c
  6436  0032C8  E110               	bnz	l12653
  6437  0032CA  0E08               	movlw	8
  6438  0032CC  5C01               	subwf	__get_root@idx,w,c
  6439  0032CE  B0D8               	btfsc	status,0,c
  6440  0032D0  D00C               	goto	l2125
  6441                           
  6442                           ;fat16.c: 815: {;fat16.c: 816: return "FILE    "[idx];
  6443  0032D2  0EE9               	movlw	low STR_10
  6444  0032D4  2401               	addwf	__get_root@idx,w,c
  6445  0032D6  6EF6               	movwf	tblptrl,c
  6446  0032D8  0E8F               	movlw	high STR_10
  6447  0032DA  2002               	addwfc	__get_root@idx+1,w,c
  6448  0032DC  6EF7               	movwf	tblptrh,c
  6449  0032DE                     	if	1	;There are 3 active tblptr bytes
  6450  0032DE  6AF8               	clrf	tblptru,c
  6451  0032E0  0E00               	movlw	low (__mediumconst shr (0+16))
  6452  0032E2  22F8               	addwfc	tblptru,f,c
  6453  0032E4                     	endif
  6454  0032E4  0008               	tblrd		*
  6455  0032E6  50F5               	movf	tablat,w,c
  6456  0032E8  0012               	return	
  6457  0032EA                     l2125:
  6458  0032EA                     l12653:
  6459                           
  6460                           ;fat16.c: 817: };fat16.c: 818: if (idx < 11)
  6461  0032EA  5002               	movf	__get_root@idx+1,w,c
  6462  0032EC  E146               	bnz	l12745
  6463  0032EE  0E0B               	movlw	11
  6464  0032F0  5C01               	subwf	__get_root@idx,w,c
  6465  0032F2  B0D8               	btfsc	status,0,c
  6466  0032F4  D042               	goto	l2127
  6467                           
  6468                           ;fat16.c: 819: {;fat16.c: 820: return "TXT"[idx-8];
  6469  0032F6  0EF8               	movlw	248
  6470  0032F8  6E03               	movwf	??__get_root& (0+255),c
  6471  0032FA  0EFF               	movlw	255
  6472  0032FC  6E04               	movwf	(??__get_root+1)& (0+255),c
  6473  0032FE  C001  F005         	movff	__get_root@idx,??__get_root+2
  6474  003302  C002  F006         	movff	__get_root@idx+1,??__get_root+3
  6475  003306  5003               	movf	??__get_root,w,c
  6476  003308  2605               	addwf	??__get_root+2,f,c
  6477  00330A  5004               	movf	??__get_root+1,w,c
  6478  00330C  2206               	addwfc	??__get_root+3,f,c
  6479  00330E  0EFB               	movlw	low STR_11
  6480  003310  2405               	addwf	??__get_root+2,w,c
  6481  003312  6EF6               	movwf	tblptrl,c
  6482  003314  0E8F               	movlw	high STR_11
  6483  003316  2006               	addwfc	??__get_root+3,w,c
  6484  003318  6EF7               	movwf	tblptrh,c
  6485  00331A                     	if	1	;There are 3 active tblptr bytes
  6486  00331A  6AF8               	clrf	tblptru,c
  6487  00331C  0E00               	movlw	low (__mediumconst shr (0+16))
  6488  00331E  22F8               	addwfc	tblptru,f,c
  6489  003320                     	endif
  6490  003320  0008               	tblrd		*
  6491  003322  50F5               	movf	tablat,w,c
  6492  003324  0012               	return	
  6493  003326                     
  6494                           ;fat16.c: 825: return 0x20;
  6495  003326  0E20               	movlw	32
  6496  003328  0012               	return	
  6497  00332A                     
  6498                           ;fat16.c: 827: return 0x06;
  6499  00332A  0E06               	movlw	6
  6500  00332C  0012               	return	
  6501  00332E                     
  6502                           ;fat16.c: 829: return 0x28;
  6503  00332E  0E28               	movlw	40
  6504  003330  0012               	return	
  6505  003332                     
  6506                           ;fat16.c: 831: return 0x78;
  6507  003332  0E78               	movlw	120
  6508  003334  0012               	return	
  6509  003336                     
  6510                           ;fat16.c: 833: return 0xDE;
  6511  003336  0EDE               	movlw	222
  6512  003338  0012               	return	
  6513  00333A                     
  6514                           ;fat16.c: 835: return 0x38;
  6515  00333A  0E38               	movlw	56
  6516  00333C  0012               	return	
  6517  00333E                     
  6518                           ;fat16.c: 837: return 0x5F;
  6519  00333E  0E5F               	movlw	95
  6520  003340  0012               	return	
  6521  003342                     
  6522                           ;fat16.c: 839: return 0x4B;
  6523  003342  0E4B               	movlw	75
  6524  003344  0012               	return	
  6525  003346                     
  6526                           ;fat16.c: 841: return 0x00;
  6527  003346  0E00               	movlw	0
  6528  003348  0012               	return	
  6529  00334A                     
  6530                           ;fat16.c: 843: return 0x00;
  6531  00334A  0E00               	movlw	0
  6532  00334C  0012               	return	
  6533  00334E                     
  6534                           ;fat16.c: 845: return 0x04;
  6535  00334E  0E04               	movlw	4
  6536  003350  0012               	return	
  6537  003352                     
  6538                           ;fat16.c: 847: return 0x77;
  6539  003352  0E77               	movlw	119
  6540  003354  0012               	return	
  6541  003356                     
  6542                           ;fat16.c: 849: return 0xDE;
  6543  003356  0EDE               	movlw	222
  6544  003358  0012               	return	
  6545  00335A                     
  6546                           ;fat16.c: 851: return 0x38;
  6547  00335A  0E38               	movlw	56
  6548  00335C  0012               	return	
  6549  00335E                     
  6550                           ;fat16.c: 853: return ((unsigned char)((((uint16_t)2))&0xFF));
  6551  00335E  0E02               	movlw	2
  6552  003360  0012               	return	
  6553  003362                     
  6554                           ;fat16.c: 855: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
  6555  003362  0E00               	movlw	0
  6556  003364  0012               	return	
  6557  003366                     
  6558                           ;fat16.c: 857: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0xF
      +                          F));
  6559  003366  0E0C               	movlw	12
  6560  003368  0012               	return	
  6561  00336A                     
  6562                           ;fat16.c: 860: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>8
      +                          )&0xFF));
  6563  00336A  0E00               	movlw	0
  6564  00336C  0012               	return	
  6565  00336E                     
  6566                           ;fat16.c: 863: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF)
      +                          ))&0xFF));
  6567  00336E  0E00               	movlw	0
  6568  003370  0012               	return	
  6569  003372                     
  6570                           ;fat16.c: 866: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  6571  003372  0E00               	movlw	0
  6572  003374  0012               	return	
  6573  003376                     
  6574                           ;fat16.c: 869: return 0x00;
  6575  003376  0E00               	movlw	0
  6576  003378  0012               	return	
  6577  00337A                     l2127:
  6578  00337A                     l12745:
  6579  00337A  C001  F003         	movff	__get_root@idx,??__get_root
  6580  00337E  C002  F004         	movff	__get_root@idx+1,??__get_root+1
  6581                           
  6582                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6583                           ; Switch size 1, requested type "space"
  6584                           ; Number of cases is 1, Range of values is 0 to 0
  6585                           ; switch strategies available:
  6586                           ; Name         Instructions Cycles
  6587                           ; simple_byte            4     3 (average)
  6588                           ;	Chosen strategy is simple_byte
  6589  003382  5004               	movf	??__get_root+1,w,c
  6590  003384  0A00               	xorlw	0	; case 0
  6591  003386  A4D8               	btfss	status,2,c
  6592  003388  D7F6               	goto	l2148
  6593                           
  6594                           ; Switch size 1, requested type "space"
  6595                           ; Number of cases is 20, Range of values is 11 to 31
  6596                           ; switch strategies available:
  6597                           ; Name         Instructions Cycles
  6598                           ; simple_byte           61    31 (average)
  6599                           ;	Chosen strategy is simple_byte
  6600  00338A  5003               	movf	??__get_root,w,c
  6601  00338C  0A0B               	xorlw	11	; case 11
  6602  00338E  B4D8               	btfsc	status,2,c
  6603  003390  D7CA               	goto	l2128
  6604  003392  0A06               	xorlw	6	; case 13
  6605  003394  B4D8               	btfsc	status,2,c
  6606  003396  D7C9               	goto	l2129
  6607  003398  0A03               	xorlw	3	; case 14
  6608  00339A  B4D8               	btfsc	status,2,c
  6609  00339C  D7C8               	goto	l2130
  6610  00339E  0A01               	xorlw	1	; case 15
  6611  0033A0  B4D8               	btfsc	status,2,c
  6612  0033A2  D7C7               	goto	l2131
  6613  0033A4  0A1F               	xorlw	31	; case 16
  6614  0033A6  B4D8               	btfsc	status,2,c
  6615  0033A8  D7C6               	goto	l2132
  6616  0033AA  0A01               	xorlw	1	; case 17
  6617  0033AC  B4D8               	btfsc	status,2,c
  6618  0033AE  D7C5               	goto	l2133
  6619  0033B0  0A03               	xorlw	3	; case 18
  6620  0033B2  B4D8               	btfsc	status,2,c
  6621  0033B4  D7C4               	goto	l2134
  6622  0033B6  0A01               	xorlw	1	; case 19
  6623  0033B8  B4D8               	btfsc	status,2,c
  6624  0033BA  D7C3               	goto	l2135
  6625  0033BC  0A07               	xorlw	7	; case 20
  6626  0033BE  B4D8               	btfsc	status,2,c
  6627  0033C0  D7C2               	goto	l2136
  6628  0033C2  0A01               	xorlw	1	; case 21
  6629  0033C4  B4D8               	btfsc	status,2,c
  6630  0033C6  D7C1               	goto	l2137
  6631  0033C8  0A03               	xorlw	3	; case 22
  6632  0033CA  B4D8               	btfsc	status,2,c
  6633  0033CC  D7C0               	goto	l2138
  6634  0033CE  0A01               	xorlw	1	; case 23
  6635  0033D0  B4D8               	btfsc	status,2,c
  6636  0033D2  D7BF               	goto	l2139
  6637  0033D4  0A0F               	xorlw	15	; case 24
  6638  0033D6  B4D8               	btfsc	status,2,c
  6639  0033D8  D7BE               	goto	l2140
  6640  0033DA  0A01               	xorlw	1	; case 25
  6641  0033DC  B4D8               	btfsc	status,2,c
  6642  0033DE  D7BD               	goto	l2141
  6643  0033E0  0A03               	xorlw	3	; case 26
  6644  0033E2  B4D8               	btfsc	status,2,c
  6645  0033E4  D7BC               	goto	l2142
  6646  0033E6  0A01               	xorlw	1	; case 27
  6647  0033E8  B4D8               	btfsc	status,2,c
  6648  0033EA  D7BB               	goto	l2143
  6649  0033EC  0A07               	xorlw	7	; case 28
  6650  0033EE  B4D8               	btfsc	status,2,c
  6651  0033F0  D7BA               	goto	l2144
  6652  0033F2  0A01               	xorlw	1	; case 29
  6653  0033F4  B4D8               	btfsc	status,2,c
  6654  0033F6  D7B9               	goto	l2145
  6655  0033F8  0A03               	xorlw	3	; case 30
  6656  0033FA  B4D8               	btfsc	status,2,c
  6657  0033FC  D7B8               	goto	l2146
  6658  0033FE  0A01               	xorlw	1	; case 31
  6659  003400  B4D8               	btfsc	status,2,c
  6660  003402  D7B7               	goto	l2147
  6661  003404  D7B8               	goto	l2148
  6662  003406                     l2149:
  6663                           
  6664                           ;fat16.c: 871: };fat16.c: 872: return 0X00;
  6665  003406  0E00               	movlw	0
  6666  003408  0012               	return	
  6667  00340A                     __end_of__get_root:
  6668                           	opt stack 0
  6669                           tblptru	equ	0xFF8
  6670                           tblptrh	equ	0xFF7
  6671                           tblptrl	equ	0xFF6
  6672                           tablat	equ	0xFF5
  6673                           intcon	equ	0xFF2
  6674                           intcon3	equ	0xFF0
  6675                           postinc0	equ	0xFEE
  6676                           wreg	equ	0xFE8
  6677                           postdec1	equ	0xFE5
  6678                           plusw1	equ	0xFE3
  6679                           fsr1h	equ	0xFE2
  6680                           fsr1l	equ	0xFE1
  6681                           indf2	equ	0xFDF
  6682                           postinc2	equ	0xFDE
  6683                           plusw2	equ	0xFDB
  6684                           fsr2h	equ	0xFDA
  6685                           fsr2l	equ	0xFD9
  6686                           status	equ	0xFD8
  6687                           
  6688 ;; *************** function __get_mbr *****************
  6689 ;; Defined at:
  6690 ;;		line 625 in file "fat16.c"
  6691 ;; Parameters:    Size  Location     Type
  6692 ;;  idx             2    0[COMRAM] unsigned int 
  6693 ;; Auto vars:     Size  Location     Type
  6694 ;;		None
  6695 ;; Return value:  Size  Location     Type
  6696 ;;                  1    wreg      unsigned char 
  6697 ;; Registers used:
  6698 ;;		wreg, status,2, status,0
  6699 ;; Tracked objects:
  6700 ;;		On entry : 0/0
  6701 ;;		On exit  : 0/0
  6702 ;;		Unchanged: 0/0
  6703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6704 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6706 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6707 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6708 ;;Total ram usage:        4 bytes
  6709 ;; Hardware stack levels used:    1
  6710 ;; This function calls:
  6711 ;;		Nothing
  6712 ;; This function is called by:
  6713 ;;		_fat_get_format_status
  6714 ;;		_fat_format
  6715 ;; This function uses a non-reentrant model
  6716 ;;
  6717                           
  6718                           	psect	text24
  6719  005120                     __ptext24:
  6720                           	opt stack 0
  6721  005120                     __get_mbr:
  6722                           	opt stack 27
  6723                           
  6724                           ;fat16.c: 627: switch (idx)
  6725                           
  6726                           ;incstack = 0
  6727  005120  D026               	goto	l2030
  6728  005122                     
  6729                           ;fat16.c: 630: return 0x80;
  6730  005122  0E80               	movlw	128
  6731  005124  0012               	return	
  6732  005126                     
  6733                           ;fat16.c: 632: return 0;
  6734  005126  0E00               	movlw	0
  6735  005128  0012               	return	
  6736  00512A                     
  6737                           ;fat16.c: 634: return 2;
  6738  00512A  0E02               	movlw	2
  6739  00512C  0012               	return	
  6740  00512E                     
  6741                           ;fat16.c: 636: return 0;
  6742  00512E  0E00               	movlw	0
  6743  005130  0012               	return	
  6744  005132                     
  6745                           ;fat16.c: 638: return 0x04;
  6746  005132  0E04               	movlw	4
  6747  005134  0012               	return	
  6748  005136                     
  6749                           ;fat16.c: 640: return 2;
  6750  005136  0E02               	movlw	2
  6751  005138  0012               	return	
  6752  00513A                     
  6753                           ;fat16.c: 642: return 3;
  6754  00513A  0E03               	movlw	3
  6755  00513C  0012               	return	
  6756  00513E                     
  6757                           ;fat16.c: 644: return 8;
  6758  00513E  0E08               	movlw	8
  6759  005140  0012               	return	
  6760  005142                     
  6761                           ;fat16.c: 646: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xFF
      +                          ));
  6762  005142  0E01               	movlw	1
  6763  005144  0012               	return	
  6764  005146                     
  6765                           ;fat16.c: 648: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8)
      +                          &0xFF));
  6766  005146  0E00               	movlw	0
  6767  005148  0012               	return	
  6768  00514A                     
  6769                           ;fat16.c: 650: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF))
      +                          )&0xFF));
  6770  00514A  0E00               	movlw	0
  6771  00514C  0012               	return	
  6772  00514E                     
  6773                           ;fat16.c: 652: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))>>8)&0xFF));
  6774  00514E  0E00               	movlw	0
  6775  005150  0012               	return	
  6776  005152                     
  6777                           ;fat16.c: 654: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&0
      +                          xFF));
  6778  005152  0EFF               	movlw	255
  6779  005154  0012               	return	
  6780  005156                     
  6781                           ;fat16.c: 656: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))>
      +                          >8)&0xFF));
  6782  005156  0E1F               	movlw	31
  6783  005158  0012               	return	
  6784  00515A                     
  6785                           ;fat16.c: 658: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFFF
      +                          F)))&0xFF));
  6786  00515A  0E00               	movlw	0
  6787  00515C  0012               	return	
  6788  00515E                     
  6789                           ;fat16.c: 660: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))>>8)&0xFF));
  6790  00515E  0E00               	movlw	0
  6791  005160  0012               	return	
  6792  005162                     
  6793                           ;fat16.c: 662: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
  6794  005162  0E55               	movlw	85
  6795  005164  0012               	return	
  6796  005166                     
  6797                           ;fat16.c: 664: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
  6798  005166  0EAA               	movlw	170
  6799  005168  0012               	return	
  6800  00516A                     
  6801                           ;fat16.c: 666: return 0X00;
  6802  00516A  0E00               	movlw	0
  6803                           
  6804                           ;fat16.c: 667: }
  6805  00516C  0012               	return	
  6806  00516E                     l2030:
  6807  00516E  C001  F003         	movff	__get_mbr@idx,??__get_mbr
  6808  005172  C002  F004         	movff	__get_mbr@idx+1,??__get_mbr+1
  6809                           
  6810                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6811                           ; Switch size 1, requested type "space"
  6812                           ; Number of cases is 1, Range of values is 1 to 1
  6813                           ; switch strategies available:
  6814                           ; Name         Instructions Cycles
  6815                           ; simple_byte            4     3 (average)
  6816                           ;	Chosen strategy is simple_byte
  6817  005176  5004               	movf	??__get_mbr+1,w,c
  6818  005178  0A01               	xorlw	1	; case 1
  6819  00517A  A4D8               	btfss	status,2,c
  6820  00517C  D7F6               	goto	l2050
  6821                           
  6822                           ; Switch size 1, requested type "space"
  6823                           ; Number of cases is 18, Range of values is 190 to 255
  6824                           ; switch strategies available:
  6825                           ; Name         Instructions Cycles
  6826                           ; simple_byte           55    28 (average)
  6827                           ;	Chosen strategy is simple_byte
  6828  00517E  5003               	movf	??__get_mbr,w,c
  6829  005180  0ABE               	xorlw	190	; case 190
  6830  005182  B4D8               	btfsc	status,2,c
  6831  005184  D7CE               	goto	l2031
  6832  005186  0A01               	xorlw	1	; case 191
  6833  005188  B4D8               	btfsc	status,2,c
  6834  00518A  D7CD               	goto	l2033
  6835  00518C  0A7F               	xorlw	127	; case 192
  6836  00518E  B4D8               	btfsc	status,2,c
  6837  005190  D7CC               	goto	l2034
  6838  005192  0A01               	xorlw	1	; case 193
  6839  005194  B4D8               	btfsc	status,2,c
  6840  005196  D7CB               	goto	l2035
  6841  005198  0A03               	xorlw	3	; case 194
  6842  00519A  B4D8               	btfsc	status,2,c
  6843  00519C  D7CA               	goto	l2036
  6844  00519E  0A01               	xorlw	1	; case 195
  6845  0051A0  B4D8               	btfsc	status,2,c
  6846  0051A2  D7C9               	goto	l2037
  6847  0051A4  0A07               	xorlw	7	; case 196
  6848  0051A6  B4D8               	btfsc	status,2,c
  6849  0051A8  D7C8               	goto	l2038
  6850  0051AA  0A01               	xorlw	1	; case 197
  6851  0051AC  B4D8               	btfsc	status,2,c
  6852  0051AE  D7C7               	goto	l2039
  6853  0051B0  0A03               	xorlw	3	; case 198
  6854  0051B2  B4D8               	btfsc	status,2,c
  6855  0051B4  D7C6               	goto	l2040
  6856  0051B6  0A01               	xorlw	1	; case 199
  6857  0051B8  B4D8               	btfsc	status,2,c
  6858  0051BA  D7C5               	goto	l2041
  6859  0051BC  0A0F               	xorlw	15	; case 200
  6860  0051BE  B4D8               	btfsc	status,2,c
  6861  0051C0  D7C4               	goto	l2042
  6862  0051C2  0A01               	xorlw	1	; case 201
  6863  0051C4  B4D8               	btfsc	status,2,c
  6864  0051C6  D7C3               	goto	l2043
  6865  0051C8  0A03               	xorlw	3	; case 202
  6866  0051CA  B4D8               	btfsc	status,2,c
  6867  0051CC  D7C2               	goto	l2044
  6868  0051CE  0A01               	xorlw	1	; case 203
  6869  0051D0  B4D8               	btfsc	status,2,c
  6870  0051D2  D7C1               	goto	l2045
  6871  0051D4  0A07               	xorlw	7	; case 204
  6872  0051D6  B4D8               	btfsc	status,2,c
  6873  0051D8  D7C0               	goto	l2046
  6874  0051DA  0A01               	xorlw	1	; case 205
  6875  0051DC  B4D8               	btfsc	status,2,c
  6876  0051DE  D7BF               	goto	l2047
  6877  0051E0  0A33               	xorlw	51	; case 254
  6878  0051E2  B4D8               	btfsc	status,2,c
  6879  0051E4  D7BE               	goto	l2048
  6880  0051E6  0A01               	xorlw	1	; case 255
  6881  0051E8  B4D8               	btfsc	status,2,c
  6882  0051EA  D7BD               	goto	l2049
  6883  0051EC  D7BE               	goto	l2050
  6884  0051EE                     __end_of__get_mbr:
  6885                           	opt stack 0
  6886                           tblptru	equ	0xFF8
  6887                           tblptrh	equ	0xFF7
  6888                           tblptrl	equ	0xFF6
  6889                           tablat	equ	0xFF5
  6890                           intcon	equ	0xFF2
  6891                           intcon3	equ	0xFF0
  6892                           postinc0	equ	0xFEE
  6893                           wreg	equ	0xFE8
  6894                           postdec1	equ	0xFE5
  6895                           plusw1	equ	0xFE3
  6896                           fsr1h	equ	0xFE2
  6897                           fsr1l	equ	0xFE1
  6898                           indf2	equ	0xFDF
  6899                           postinc2	equ	0xFDE
  6900                           plusw2	equ	0xFDB
  6901                           fsr2h	equ	0xFDA
  6902                           fsr2l	equ	0xFD9
  6903                           status	equ	0xFD8
  6904                           
  6905 ;; *************** function __get_fbr *****************
  6906 ;; Defined at:
  6907 ;;		line 670 in file "fat16.c"
  6908 ;; Parameters:    Size  Location     Type
  6909 ;;  idx             2    0[COMRAM] unsigned int 
  6910 ;; Auto vars:     Size  Location     Type
  6911 ;;		None
  6912 ;; Return value:  Size  Location     Type
  6913 ;;                  1    wreg      unsigned char 
  6914 ;; Registers used:
  6915 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6916 ;; Tracked objects:
  6917 ;;		On entry : 0/0
  6918 ;;		On exit  : 0/0
  6919 ;;		Unchanged: 0/0
  6920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6921 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6923 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6924 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6925 ;;Total ram usage:        4 bytes
  6926 ;; Hardware stack levels used:    1
  6927 ;; This function calls:
  6928 ;;		Nothing
  6929 ;; This function is called by:
  6930 ;;		_fat_get_format_status
  6931 ;;		_fat_format
  6932 ;; This function uses a non-reentrant model
  6933 ;;
  6934                           
  6935                           	psect	text25
  6936  001A38                     __ptext25:
  6937                           	opt stack 0
  6938  001A38                     __get_fbr:
  6939                           	opt stack 27
  6940                           
  6941                           ;fat16.c: 672: switch (idx)
  6942                           
  6943                           ;incstack = 0
  6944  001A38  D091               	goto	l2054
  6945  001A3A                     
  6946                           ;fat16.c: 675: return 0xEB;
  6947  001A3A  0EEB               	movlw	235
  6948  001A3C  0012               	return	
  6949  001A3E                     
  6950                           ;fat16.c: 677: return 0x3C;
  6951  001A3E  0E3C               	movlw	60
  6952  001A40  0012               	return	
  6953  001A42                     
  6954                           ;fat16.c: 679: return 0x90;
  6955  001A42  0E90               	movlw	144
  6956  001A44  0012               	return	
  6957  001A46                     
  6958                           ;fat16.c: 681: return "MSDOS5.0"[0];
  6959  001A46  0EF2               	movlw	low STR_1
  6960  001A48  6EF6               	movwf	tblptrl,c
  6961  001A4A                     	if	1	;There is more than 1 active tblptr byte
  6962  001A4A  0E8F               	movlw	high STR_1
  6963  001A4C  6EF7               	movwf	tblptrh,c
  6964  001A4E                     	endif
  6965  001A4E                     	if	1	;There are 3 active tblptr bytes
  6966  001A4E  0E00               	movlw	low (STR_1 shr (0+16))
  6967  001A50  6EF8               	movwf	tblptru,c
  6968  001A52                     	endif
  6969  001A52  0008               	tblrd		*
  6970  001A54  50F5               	movf	tablat,w,c
  6971  001A56  0012               	return	
  6972  001A58                     
  6973                           ;fat16.c: 683: return "MSDOS5.0"[1];
  6974  001A58  0EF3               	movlw	low (STR_1+1)
  6975  001A5A  6EF6               	movwf	tblptrl,c
  6976  001A5C  0E8F               	movlw	high (STR_1+1)
  6977  001A5E  6EF7               	movwf	tblptrh,c
  6978  001A60                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6979  001A60  6AF8               	clrf	tblptru,c
  6980  001A62                     	endif
  6981  001A62                     	if	0	;tblptru may be non-zero
  6982  001A62                     	endif
  6983  001A62  0008               	tblrd		*
  6984  001A64  50F5               	movf	tablat,w,c
  6985  001A66  0012               	return	
  6986  001A68                     
  6987                           ;fat16.c: 685: return "MSDOS5.0"[2];
  6988  001A68  0EF4               	movlw	low (STR_1+2)
  6989  001A6A  6EF6               	movwf	tblptrl,c
  6990  001A6C  0E8F               	movlw	high (STR_1+2)
  6991  001A6E  6EF7               	movwf	tblptrh,c
  6992  001A70                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6993  001A70  6AF8               	clrf	tblptru,c
  6994  001A72                     	endif
  6995  001A72                     	if	0	;tblptru may be non-zero
  6996  001A72                     	endif
  6997  001A72  0008               	tblrd		*
  6998  001A74  50F5               	movf	tablat,w,c
  6999  001A76  0012               	return	
  7000  001A78                     
  7001                           ;fat16.c: 687: return "MSDOS5.0"[3];
  7002  001A78  0EF5               	movlw	low (STR_1+3)
  7003  001A7A  6EF6               	movwf	tblptrl,c
  7004  001A7C  0E8F               	movlw	high (STR_1+3)
  7005  001A7E  6EF7               	movwf	tblptrh,c
  7006  001A80                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7007  001A80  6AF8               	clrf	tblptru,c
  7008  001A82                     	endif
  7009  001A82                     	if	0	;tblptru may be non-zero
  7010  001A82                     	endif
  7011  001A82  0008               	tblrd		*
  7012  001A84  50F5               	movf	tablat,w,c
  7013  001A86  0012               	return	
  7014  001A88                     
  7015                           ;fat16.c: 689: return "MSDOS5.0"[4];
  7016  001A88  0EF6               	movlw	low (STR_1+4)
  7017  001A8A  6EF6               	movwf	tblptrl,c
  7018  001A8C  0E8F               	movlw	high (STR_1+4)
  7019  001A8E  6EF7               	movwf	tblptrh,c
  7020  001A90                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7021  001A90  6AF8               	clrf	tblptru,c
  7022  001A92                     	endif
  7023  001A92                     	if	0	;tblptru may be non-zero
  7024  001A92                     	endif
  7025  001A92  0008               	tblrd		*
  7026  001A94  50F5               	movf	tablat,w,c
  7027  001A96  0012               	return	
  7028  001A98                     
  7029                           ;fat16.c: 691: return "MSDOS5.0"[5];
  7030  001A98  0EF7               	movlw	low (STR_1+5)
  7031  001A9A  6EF6               	movwf	tblptrl,c
  7032  001A9C  0E8F               	movlw	high (STR_1+5)
  7033  001A9E  6EF7               	movwf	tblptrh,c
  7034  001AA0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7035  001AA0  6AF8               	clrf	tblptru,c
  7036  001AA2                     	endif
  7037  001AA2                     	if	0	;tblptru may be non-zero
  7038  001AA2                     	endif
  7039  001AA2  0008               	tblrd		*
  7040  001AA4  50F5               	movf	tablat,w,c
  7041  001AA6  0012               	return	
  7042  001AA8                     
  7043                           ;fat16.c: 693: return "MSDOS5.0"[6];
  7044  001AA8  0EF8               	movlw	low (STR_1+6)
  7045  001AAA  6EF6               	movwf	tblptrl,c
  7046  001AAC  0E8F               	movlw	high (STR_1+6)
  7047  001AAE  6EF7               	movwf	tblptrh,c
  7048  001AB0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7049  001AB0  6AF8               	clrf	tblptru,c
  7050  001AB2                     	endif
  7051  001AB2                     	if	0	;tblptru may be non-zero
  7052  001AB2                     	endif
  7053  001AB2  0008               	tblrd		*
  7054  001AB4  50F5               	movf	tablat,w,c
  7055  001AB6  0012               	return	
  7056  001AB8                     
  7057                           ;fat16.c: 695: return "MSDOS5.0"[7];
  7058  001AB8  0EF9               	movlw	low (STR_1+7)
  7059  001ABA  6EF6               	movwf	tblptrl,c
  7060  001ABC  0E8F               	movlw	high (STR_1+7)
  7061  001ABE  6EF7               	movwf	tblptrh,c
  7062  001AC0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7063  001AC0  6AF8               	clrf	tblptru,c
  7064  001AC2                     	endif
  7065  001AC2                     	if	0	;tblptru may be non-zero
  7066  001AC2                     	endif
  7067  001AC2  0008               	tblrd		*
  7068  001AC4  50F5               	movf	tablat,w,c
  7069  001AC6  0012               	return	
  7070  001AC8                     
  7071                           ;fat16.c: 697: return ((unsigned char)((((uint16_t)512))&0xFF));
  7072  001AC8  0E00               	movlw	0
  7073  001ACA  0012               	return	
  7074  001ACC                     
  7075                           ;fat16.c: 699: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  7076  001ACC  0E02               	movlw	2
  7077  001ACE  0012               	return	
  7078  001AD0                     
  7079                           ;fat16.c: 701: return 1;
  7080  001AD0  0E01               	movlw	1
  7081  001AD2  0012               	return	
  7082  001AD4                     
  7083                           ;fat16.c: 703: return ((unsigned char)((((uint16_t)1))&0xFF));
  7084  001AD4  0E01               	movlw	1
  7085  001AD6  0012               	return	
  7086  001AD8                     
  7087                           ;fat16.c: 705: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  7088  001AD8  0E00               	movlw	0
  7089  001ADA  0012               	return	
  7090  001ADC                     
  7091                           ;fat16.c: 707: return 1;
  7092  001ADC  0E01               	movlw	1
  7093  001ADE  0012               	return	
  7094  001AE0                     
  7095                           ;fat16.c: 709: return ((unsigned char)((((uint16_t)64))&0xFF));
  7096  001AE0  0E40               	movlw	64
  7097  001AE2  0012               	return	
  7098  001AE4                     
  7099                           ;fat16.c: 711: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  7100  001AE4  0E00               	movlw	0
  7101  001AE6  0012               	return	
  7102  001AE8                     
  7103                           ;fat16.c: 713: return ((unsigned char)((((uint16_t)8191))&0xFF));
  7104  001AE8  0EFF               	movlw	255
  7105  001AEA  0012               	return	
  7106  001AEC                     
  7107                           ;fat16.c: 715: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
  7108  001AEC  0E1F               	movlw	31
  7109  001AEE  0012               	return	
  7110  001AF0                     
  7111                           ;fat16.c: 717: return 0XF8;
  7112  001AF0  0EF8               	movlw	248
  7113  001AF2  0012               	return	
  7114  001AF4                     
  7115                           ;fat16.c: 719: return ((unsigned char)((((uint16_t)32))&0xFF));
  7116  001AF4  0E20               	movlw	32
  7117  001AF6  0012               	return	
  7118  001AF8                     
  7119                           ;fat16.c: 721: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
  7120  001AF8  0E00               	movlw	0
  7121  001AFA  0012               	return	
  7122  001AFC                     
  7123                           ;fat16.c: 723: return ((unsigned char)((((uint16_t)63))&0xFF));
  7124  001AFC  0E3F               	movlw	63
  7125  001AFE  0012               	return	
  7126  001B00                     
  7127                           ;fat16.c: 725: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
  7128  001B00  0E00               	movlw	0
  7129  001B02  0012               	return	
  7130  001B04                     
  7131                           ;fat16.c: 727: return ((unsigned char)((((uint16_t)16))&0xFF));
  7132  001B04  0E10               	movlw	16
  7133  001B06  0012               	return	
  7134  001B08                     
  7135                           ;fat16.c: 729: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  7136  001B08  0E00               	movlw	0
  7137  001B0A  0012               	return	
  7138  001B0C                     
  7139                           ;fat16.c: 731: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xFF
      +                          ));
  7140  001B0C  0E00               	movlw	0
  7141  001B0E  0012               	return	
  7142  001B10                     
  7143                           ;fat16.c: 733: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8)
      +                          &0xFF));
  7144  001B10  0E00               	movlw	0
  7145  001B12  0012               	return	
  7146  001B14                     
  7147                           ;fat16.c: 735: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF))
      +                          )&0xFF));
  7148  001B14  0E00               	movlw	0
  7149  001B16  0012               	return	
  7150  001B18                     
  7151                           ;fat16.c: 737: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))>>8)&0xFF));
  7152  001B18  0E00               	movlw	0
  7153  001B1A  0012               	return	
  7154  001B1C                     
  7155                           ;fat16.c: 739: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
  7156  001B1C  0E01               	movlw	1
  7157  001B1E  0012               	return	
  7158  001B20                     
  7159                           ;fat16.c: 741: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
  7160  001B20  0E00               	movlw	0
  7161  001B22  0012               	return	
  7162  001B24                     
  7163                           ;fat16.c: 743: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0xF
      +                          F));
  7164  001B24  0E22               	movlw	34
  7165  001B26  0012               	return	
  7166  001B28                     
  7167                           ;fat16.c: 745: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>8
      +                          )&0xFF));
  7168  001B28  0E00               	movlw	0
  7169  001B2A  0012               	return	
  7170  001B2C                     
  7171                           ;fat16.c: 749: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  7172                           
  7173                           ;fat16.c: 748: case 0x2F:
  7174  001B2C  0E00               	movlw	0
  7175  001B2E  0012               	return	
  7176  001B30                     
  7177                           ;fat16.c: 751: return 'F';
  7178  001B30  0E46               	movlw	70
  7179  001B32  0012               	return	
  7180  001B34                     
  7181                           ;fat16.c: 753: return 'A';
  7182  001B34  0E41               	movlw	65
  7183  001B36  0012               	return	
  7184  001B38                     
  7185                           ;fat16.c: 755: return 'T';
  7186  001B38  0E54               	movlw	84
  7187  001B3A  0012               	return	
  7188  001B3C                     
  7189                           ;fat16.c: 757: return '1';
  7190  001B3C  0E31               	movlw	49
  7191  001B3E  0012               	return	
  7192  001B40                     
  7193                           ;fat16.c: 759: return '6';
  7194  001B40  0E36               	movlw	54
  7195  001B42  0012               	return	
  7196  001B44                     
  7197                           ;fat16.c: 761: return ' ';
  7198  001B44  0E20               	movlw	32
  7199  001B46  0012               	return	
  7200  001B48                     
  7201                           ;fat16.c: 763: return ' ';
  7202  001B48  0E20               	movlw	32
  7203  001B4A  0012               	return	
  7204  001B4C                     
  7205                           ;fat16.c: 765: return ' ';
  7206  001B4C  0E20               	movlw	32
  7207  001B4E  0012               	return	
  7208  001B50                     
  7209                           ;fat16.c: 767: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
  7210  001B50  0E55               	movlw	85
  7211  001B52  0012               	return	
  7212  001B54                     
  7213                           ;fat16.c: 769: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
  7214  001B54  0EAA               	movlw	170
  7215  001B56  0012               	return	
  7216  001B58                     
  7217                           ;fat16.c: 771: return 0X00;
  7218  001B58  0E00               	movlw	0
  7219                           
  7220                           ;fat16.c: 772: }
  7221  001B5A  0012               	return	
  7222  001B5C                     l2054:
  7223  001B5C  C001  F003         	movff	__get_fbr@idx,??__get_fbr
  7224  001B60  C002  F004         	movff	__get_fbr@idx+1,??__get_fbr+1
  7225                           
  7226                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  7227                           ; Switch size 1, requested type "space"
  7228                           ; Number of cases is 2, Range of values is 0 to 1
  7229                           ; switch strategies available:
  7230                           ; Name         Instructions Cycles
  7231                           ; simple_byte            7     4 (average)
  7232                           ;	Chosen strategy is simple_byte
  7233  001B64  5004               	movf	??__get_fbr+1,w,c
  7234  001B66  0A00               	xorlw	0	; case 0
  7235  001B68  B4D8               	btfsc	status,2,c
  7236  001B6A  D004               	goto	l15187
  7237  001B6C  0A01               	xorlw	1	; case 1
  7238  001B6E  B4D8               	btfsc	status,2,c
  7239  001B70  D08D               	goto	l15189
  7240  001B72  D7F2               	goto	l2104
  7241  001B74                     l15187:
  7242                           
  7243                           ; Switch size 1, requested type "space"
  7244                           ; Number of cases is 46, Range of values is 0 to 61
  7245                           ; switch strategies available:
  7246                           ; Name         Instructions Cycles
  7247                           ; simple_byte          139    70 (average)
  7248                           ;	Chosen strategy is simple_byte
  7249  001B74  5003               	movf	??__get_fbr,w,c
  7250  001B76  0A00               	xorlw	0	; case 0
  7251  001B78  B4D8               	btfsc	status,2,c
  7252  001B7A  D75F               	goto	l2055
  7253  001B7C  0A01               	xorlw	1	; case 1
  7254  001B7E  B4D8               	btfsc	status,2,c
  7255  001B80  D75E               	goto	l2057
  7256  001B82  0A03               	xorlw	3	; case 2
  7257  001B84  B4D8               	btfsc	status,2,c
  7258  001B86  D75D               	goto	l2058
  7259  001B88  0A01               	xorlw	1	; case 3
  7260  001B8A  B4D8               	btfsc	status,2,c
  7261  001B8C  D75C               	goto	l2059
  7262  001B8E  0A07               	xorlw	7	; case 4
  7263  001B90  B4D8               	btfsc	status,2,c
  7264  001B92  D762               	goto	l2060
  7265  001B94  0A01               	xorlw	1	; case 5
  7266  001B96  B4D8               	btfsc	status,2,c
  7267  001B98  D767               	goto	l2061
  7268  001B9A  0A03               	xorlw	3	; case 6
  7269  001B9C  B4D8               	btfsc	status,2,c
  7270  001B9E  D76C               	goto	l2062
  7271  001BA0  0A01               	xorlw	1	; case 7
  7272  001BA2  B4D8               	btfsc	status,2,c
  7273  001BA4  D771               	goto	l2063
  7274  001BA6  0A0F               	xorlw	15	; case 8
  7275  001BA8  B4D8               	btfsc	status,2,c
  7276  001BAA  D776               	goto	l2064
  7277  001BAC  0A01               	xorlw	1	; case 9
  7278  001BAE  B4D8               	btfsc	status,2,c
  7279  001BB0  D77B               	goto	l2065
  7280  001BB2  0A03               	xorlw	3	; case 10
  7281  001BB4  B4D8               	btfsc	status,2,c
  7282  001BB6  D780               	goto	l2066
  7283  001BB8  0A01               	xorlw	1	; case 11
  7284  001BBA  B4D8               	btfsc	status,2,c
  7285  001BBC  D785               	goto	l2067
  7286  001BBE  0A07               	xorlw	7	; case 12
  7287  001BC0  B4D8               	btfsc	status,2,c
  7288  001BC2  D784               	goto	l2068
  7289  001BC4  0A01               	xorlw	1	; case 13
  7290  001BC6  B4D8               	btfsc	status,2,c
  7291  001BC8  D783               	goto	l2069
  7292  001BCA  0A03               	xorlw	3	; case 14
  7293  001BCC  B4D8               	btfsc	status,2,c
  7294  001BCE  D782               	goto	l2070
  7295  001BD0  0A01               	xorlw	1	; case 15
  7296  001BD2  B4D8               	btfsc	status,2,c
  7297  001BD4  D781               	goto	l2071
  7298  001BD6  0A1F               	xorlw	31	; case 16
  7299  001BD8  B4D8               	btfsc	status,2,c
  7300  001BDA  D780               	goto	l2072
  7301  001BDC  0A01               	xorlw	1	; case 17
  7302  001BDE  B4D8               	btfsc	status,2,c
  7303  001BE0  D77F               	goto	l2073
  7304  001BE2  0A03               	xorlw	3	; case 18
  7305  001BE4  B4D8               	btfsc	status,2,c
  7306  001BE6  D77E               	goto	l2074
  7307  001BE8  0A01               	xorlw	1	; case 19
  7308  001BEA  B4D8               	btfsc	status,2,c
  7309  001BEC  D77D               	goto	l2075
  7310  001BEE  0A07               	xorlw	7	; case 20
  7311  001BF0  B4D8               	btfsc	status,2,c
  7312  001BF2  D77C               	goto	l2076
  7313  001BF4  0A01               	xorlw	1	; case 21
  7314  001BF6  B4D8               	btfsc	status,2,c
  7315  001BF8  D77B               	goto	l2077
  7316  001BFA  0A03               	xorlw	3	; case 22
  7317  001BFC  B4D8               	btfsc	status,2,c
  7318  001BFE  D77A               	goto	l2078
  7319  001C00  0A01               	xorlw	1	; case 23
  7320  001C02  B4D8               	btfsc	status,2,c
  7321  001C04  D779               	goto	l2079
  7322  001C06  0A0F               	xorlw	15	; case 24
  7323  001C08  B4D8               	btfsc	status,2,c
  7324  001C0A  D778               	goto	l2080
  7325  001C0C  0A01               	xorlw	1	; case 25
  7326  001C0E  B4D8               	btfsc	status,2,c
  7327  001C10  D777               	goto	l2081
  7328  001C12  0A03               	xorlw	3	; case 26
  7329  001C14  B4D8               	btfsc	status,2,c
  7330  001C16  D776               	goto	l2082
  7331  001C18  0A01               	xorlw	1	; case 27
  7332  001C1A  B4D8               	btfsc	status,2,c
  7333  001C1C  D775               	goto	l2083
  7334  001C1E  0A07               	xorlw	7	; case 28
  7335  001C20  B4D8               	btfsc	status,2,c
  7336  001C22  D774               	goto	l2084
  7337  001C24  0A01               	xorlw	1	; case 29
  7338  001C26  B4D8               	btfsc	status,2,c
  7339  001C28  D773               	goto	l2085
  7340  001C2A  0A03               	xorlw	3	; case 30
  7341  001C2C  B4D8               	btfsc	status,2,c
  7342  001C2E  D772               	goto	l2086
  7343  001C30  0A01               	xorlw	1	; case 31
  7344  001C32  B4D8               	btfsc	status,2,c
  7345  001C34  D771               	goto	l2087
  7346  001C36  0A37               	xorlw	55	; case 40
  7347  001C38  B4D8               	btfsc	status,2,c
  7348  001C3A  D770               	goto	l2088
  7349  001C3C  0A01               	xorlw	1	; case 41
  7350  001C3E  B4D8               	btfsc	status,2,c
  7351  001C40  D76F               	goto	l2089
  7352  001C42  0A05               	xorlw	5	; case 44
  7353  001C44  B4D8               	btfsc	status,2,c
  7354  001C46  D76E               	goto	l2090
  7355  001C48  0A01               	xorlw	1	; case 45
  7356  001C4A  B4D8               	btfsc	status,2,c
  7357  001C4C  D76D               	goto	l2091
  7358  001C4E  0A03               	xorlw	3	; case 46
  7359  001C50  B4D8               	btfsc	status,2,c
  7360  001C52  D76C               	goto	l2092
  7361  001C54  0A01               	xorlw	1	; case 47
  7362  001C56  B4D8               	btfsc	status,2,c
  7363  001C58  D769               	goto	l2092
  7364  001C5A  0A19               	xorlw	25	; case 54
  7365  001C5C  B4D8               	btfsc	status,2,c
  7366  001C5E  D768               	goto	l2094
  7367  001C60  0A01               	xorlw	1	; case 55
  7368  001C62  B4D8               	btfsc	status,2,c
  7369  001C64  D767               	goto	l2095
  7370  001C66  0A0F               	xorlw	15	; case 56
  7371  001C68  B4D8               	btfsc	status,2,c
  7372  001C6A  D766               	goto	l2096
  7373  001C6C  0A01               	xorlw	1	; case 57
  7374  001C6E  B4D8               	btfsc	status,2,c
  7375  001C70  D765               	goto	l2097
  7376  001C72  0A03               	xorlw	3	; case 58
  7377  001C74  B4D8               	btfsc	status,2,c
  7378  001C76  D764               	goto	l2098
  7379  001C78  0A01               	xorlw	1	; case 59
  7380  001C7A  B4D8               	btfsc	status,2,c
  7381  001C7C  D763               	goto	l2099
  7382  001C7E  0A07               	xorlw	7	; case 60
  7383  001C80  B4D8               	btfsc	status,2,c
  7384  001C82  D762               	goto	l2100
  7385  001C84  0A01               	xorlw	1	; case 61
  7386  001C86  B4D8               	btfsc	status,2,c
  7387  001C88  D761               	goto	l2101
  7388  001C8A  D766               	goto	l2104
  7389  001C8C                     l15189:
  7390                           
  7391                           ; Switch size 1, requested type "space"
  7392                           ; Number of cases is 2, Range of values is 254 to 255
  7393                           ; switch strategies available:
  7394                           ; Name         Instructions Cycles
  7395                           ; simple_byte            7     4 (average)
  7396                           ;	Chosen strategy is simple_byte
  7397  001C8C  5003               	movf	??__get_fbr,w,c
  7398  001C8E  0AFE               	xorlw	254	; case 254
  7399  001C90  B4D8               	btfsc	status,2,c
  7400  001C92  D75E               	goto	l2102
  7401  001C94  0A01               	xorlw	1	; case 255
  7402  001C96  B4D8               	btfsc	status,2,c
  7403  001C98  D75D               	goto	l2103
  7404  001C9A  D75E               	goto	l2104
  7405  001C9C                     __end_of__get_fbr:
  7406                           	opt stack 0
  7407                           tblptru	equ	0xFF8
  7408                           tblptrh	equ	0xFF7
  7409                           tblptrl	equ	0xFF6
  7410                           tablat	equ	0xFF5
  7411                           intcon	equ	0xFF2
  7412                           intcon3	equ	0xFF0
  7413                           postinc0	equ	0xFEE
  7414                           wreg	equ	0xFE8
  7415                           postdec1	equ	0xFE5
  7416                           plusw1	equ	0xFE3
  7417                           fsr1h	equ	0xFE2
  7418                           fsr1l	equ	0xFE1
  7419                           indf2	equ	0xFDF
  7420                           postinc2	equ	0xFDE
  7421                           plusw2	equ	0xFDB
  7422                           fsr2h	equ	0xFDA
  7423                           fsr2l	equ	0xFD9
  7424                           status	equ	0xFD8
  7425                           
  7426 ;; *************** function __get_fat *****************
  7427 ;; Defined at:
  7428 ;;		line 775 in file "fat16.c"
  7429 ;; Parameters:    Size  Location     Type
  7430 ;;  idx             2    0[COMRAM] unsigned int 
  7431 ;; Auto vars:     Size  Location     Type
  7432 ;;		None
  7433 ;; Return value:  Size  Location     Type
  7434 ;;                  1    wreg      unsigned char 
  7435 ;; Registers used:
  7436 ;;		wreg, status,2, status,0
  7437 ;; Tracked objects:
  7438 ;;		On entry : 0/0
  7439 ;;		On exit  : 0/0
  7440 ;;		Unchanged: 0/0
  7441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7442 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7444 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7445 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7446 ;;Total ram usage:        4 bytes
  7447 ;; Hardware stack levels used:    1
  7448 ;; This function calls:
  7449 ;;		Nothing
  7450 ;; This function is called by:
  7451 ;;		_fat_format
  7452 ;; This function uses a non-reentrant model
  7453 ;;
  7454                           
  7455                           	psect	text26
  7456  007268                     __ptext26:
  7457                           	opt stack 0
  7458  007268                     __get_fat:
  7459                           	opt stack 27
  7460                           
  7461                           ;fat16.c: 777: switch (idx)
  7462                           
  7463                           ;incstack = 0
  7464  007268  D00E               	goto	l2108
  7465  00726A                     
  7466                           ;fat16.c: 781: return 0xF8;
  7467  00726A  0EF8               	movlw	248
  7468  00726C  0012               	return	
  7469  00726E                     
  7470                           ;fat16.c: 783: return 0xFF;
  7471  00726E  0EFF               	movlw	255
  7472  007270  0012               	return	
  7473  007272                     
  7474                           ;fat16.c: 785: return 0xFF;
  7475  007272  0EFF               	movlw	255
  7476  007274  0012               	return	
  7477  007276                     
  7478                           ;fat16.c: 787: return 0xFF;
  7479  007276  0EFF               	movlw	255
  7480  007278  0012               	return	
  7481  00727A                     
  7482                           ;fat16.c: 790: return 0xFF;
  7483  00727A  0EFF               	movlw	255
  7484  00727C  0012               	return	
  7485  00727E                     
  7486                           ;fat16.c: 792: return 0xFF;
  7487  00727E  0EFF               	movlw	255
  7488  007280  0012               	return	
  7489  007282                     
  7490                           ;fat16.c: 794: return 0X00;
  7491  007282  0E00               	movlw	0
  7492                           
  7493                           ;fat16.c: 795: }
  7494  007284  0012               	return	
  7495  007286                     l2108:
  7496  007286  C001  F003         	movff	__get_fat@idx,??__get_fat
  7497  00728A  C002  F004         	movff	__get_fat@idx+1,??__get_fat+1
  7498                           
  7499                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7500                           ; Switch size 1, requested type "space"
  7501                           ; Number of cases is 1, Range of values is 0 to 0
  7502                           ; switch strategies available:
  7503                           ; Name         Instructions Cycles
  7504                           ; simple_byte            4     3 (average)
  7505                           ;	Chosen strategy is simple_byte
  7506  00728E  5004               	movf	??__get_fat+1,w,c
  7507  007290  0A00               	xorlw	0	; case 0
  7508  007292  A4D8               	btfss	status,2,c
  7509  007294  D7F6               	goto	l2116
  7510                           
  7511                           ; Switch size 1, requested type "space"
  7512                           ; Number of cases is 6, Range of values is 0 to 5
  7513                           ; switch strategies available:
  7514                           ; Name         Instructions Cycles
  7515                           ; simple_byte           19    10 (average)
  7516                           ;	Chosen strategy is simple_byte
  7517  007296  5003               	movf	??__get_fat,w,c
  7518  007298  0A00               	xorlw	0	; case 0
  7519  00729A  B4D8               	btfsc	status,2,c
  7520  00729C  D7E6               	goto	l2109
  7521  00729E  0A01               	xorlw	1	; case 1
  7522  0072A0  B4D8               	btfsc	status,2,c
  7523  0072A2  D7E5               	goto	l2111
  7524  0072A4  0A03               	xorlw	3	; case 2
  7525  0072A6  B4D8               	btfsc	status,2,c
  7526  0072A8  D7E4               	goto	l2112
  7527  0072AA  0A01               	xorlw	1	; case 3
  7528  0072AC  B4D8               	btfsc	status,2,c
  7529  0072AE  D7E3               	goto	l2113
  7530  0072B0  0A07               	xorlw	7	; case 4
  7531  0072B2  B4D8               	btfsc	status,2,c
  7532  0072B4  D7E2               	goto	l2114
  7533  0072B6  0A01               	xorlw	1	; case 5
  7534  0072B8  B4D8               	btfsc	status,2,c
  7535  0072BA  D7E1               	goto	l2115
  7536  0072BC  D7E2               	goto	l2116
  7537  0072BE                     __end_of__get_fat:
  7538                           	opt stack 0
  7539                           tblptru	equ	0xFF8
  7540                           tblptrh	equ	0xFF7
  7541                           tblptrl	equ	0xFF6
  7542                           tablat	equ	0xFF5
  7543                           intcon	equ	0xFF2
  7544                           intcon3	equ	0xFF0
  7545                           postinc0	equ	0xFEE
  7546                           wreg	equ	0xFE8
  7547                           postdec1	equ	0xFE5
  7548                           plusw1	equ	0xFE3
  7549                           fsr1h	equ	0xFE2
  7550                           fsr1l	equ	0xFE1
  7551                           indf2	equ	0xFDF
  7552                           postinc2	equ	0xFDE
  7553                           plusw2	equ	0xFDB
  7554                           fsr2h	equ	0xFDA
  7555                           fsr2l	equ	0xFD9
  7556                           status	equ	0xFD8
  7557                           
  7558 ;; *************** function __get_data *****************
  7559 ;; Defined at:
  7560 ;;		line 875 in file "fat16.c"
  7561 ;; Parameters:    Size  Location     Type
  7562 ;;  idx             2    0[COMRAM] unsigned int 
  7563 ;; Auto vars:     Size  Location     Type
  7564 ;;		None
  7565 ;; Return value:  Size  Location     Type
  7566 ;;                  1    wreg      unsigned char 
  7567 ;; Registers used:
  7568 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7569 ;; Tracked objects:
  7570 ;;		On entry : 0/0
  7571 ;;		On exit  : 0/0
  7572 ;;		Unchanged: 0/0
  7573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7574 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7577 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7578 ;;Total ram usage:        2 bytes
  7579 ;; Hardware stack levels used:    1
  7580 ;; This function calls:
  7581 ;;		Nothing
  7582 ;; This function is called by:
  7583 ;;		_fat_format
  7584 ;; This function uses a non-reentrant model
  7585 ;;
  7586                           
  7587                           	psect	text27
  7588  007CBE                     __ptext27:
  7589                           	opt stack 0
  7590  007CBE                     __get_data:
  7591                           	opt stack 27
  7592                           
  7593                           ;fat16.c: 877: if (idx < 12)
  7594                           
  7595                           ;incstack = 0
  7596  007CBE  5002               	movf	__get_data@idx+1,w,c
  7597  007CC0  E110               	bnz	l12761
  7598  007CC2  0E0C               	movlw	12
  7599  007CC4  5C01               	subwf	__get_data@idx,w,c
  7600  007CC6  B0D8               	btfsc	status,0,c
  7601  007CC8  D00C               	goto	l2152
  7602                           
  7603                           ;fat16.c: 878: {;fat16.c: 879: return "hello world!"[idx];
  7604  007CCA  0ED0               	movlw	low STR_12
  7605  007CCC  2401               	addwf	__get_data@idx,w,c
  7606  007CCE  6EF6               	movwf	tblptrl,c
  7607  007CD0  0E8F               	movlw	high STR_12
  7608  007CD2  2002               	addwfc	__get_data@idx+1,w,c
  7609  007CD4  6EF7               	movwf	tblptrh,c
  7610  007CD6                     	if	1	;There are 3 active tblptr bytes
  7611  007CD6  6AF8               	clrf	tblptru,c
  7612  007CD8  0E00               	movlw	low (__mediumconst shr (0+16))
  7613  007CDA  22F8               	addwfc	tblptru,f,c
  7614  007CDC                     	endif
  7615  007CDC  0008               	tblrd		*
  7616  007CDE  50F5               	movf	tablat,w,c
  7617  007CE0  0012               	return	
  7618  007CE2                     l2152:
  7619  007CE2                     l12761:
  7620                           
  7621                           ;fat16.c: 880: };fat16.c: 881: return 0X00;
  7622  007CE2  0E00               	movlw	0
  7623  007CE4  0012               	return	
  7624  007CE6                     __end_of__get_data:
  7625                           	opt stack 0
  7626                           tblptru	equ	0xFF8
  7627                           tblptrh	equ	0xFF7
  7628                           tblptrl	equ	0xFF6
  7629                           tablat	equ	0xFF5
  7630                           intcon	equ	0xFF2
  7631                           intcon3	equ	0xFF0
  7632                           postinc0	equ	0xFEE
  7633                           wreg	equ	0xFE8
  7634                           postdec1	equ	0xFE5
  7635                           plusw1	equ	0xFE3
  7636                           fsr1h	equ	0xFE2
  7637                           fsr1l	equ	0xFE1
  7638                           indf2	equ	0xFDF
  7639                           postinc2	equ	0xFDE
  7640                           plusw2	equ	0xFDB
  7641                           fsr2h	equ	0xFDA
  7642                           fsr2l	equ	0xFD9
  7643                           status	equ	0xFD8
  7644                           
  7645 ;; *************** function __system_timer0_init *****************
  7646 ;; Defined at:
  7647 ;;		line 112 in file "os.c"
  7648 ;; Parameters:    Size  Location     Type
  7649 ;;		None
  7650 ;; Auto vars:     Size  Location     Type
  7651 ;;		None
  7652 ;; Return value:  Size  Location     Type
  7653 ;;                  1    wreg      void 
  7654 ;; Registers used:
  7655 ;;		wreg, status,2
  7656 ;; Tracked objects:
  7657 ;;		On entry : 0/0
  7658 ;;		On exit  : 0/0
  7659 ;;		Unchanged: 0/0
  7660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7664 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7665 ;;Total ram usage:        0 bytes
  7666 ;; Hardware stack levels used:    1
  7667 ;; This function calls:
  7668 ;;		Nothing
  7669 ;; This function is called by:
  7670 ;;		_system_full_init
  7671 ;; This function uses a non-reentrant model
  7672 ;;
  7673                           
  7674                           	psect	text28
  7675  007E4E                     __ptext28:
  7676                           	opt stack 0
  7677  007E4E                     __system_timer0_init:
  7678                           	opt stack 29
  7679                           
  7680                           ;os.c: 115: T0CONbits.T0CS = 0;
  7681                           
  7682                           ;incstack = 0
  7683  007E4E  9AD5               	bcf	4053,5,c	;volatile
  7684                           
  7685                           ;os.c: 117: T0CONbits.T08BIT = 0;
  7686  007E50  9CD5               	bcf	4053,6,c	;volatile
  7687                           
  7688                           ;os.c: 119: T0CONbits.T0PS2 = 0;
  7689  007E52  94D5               	bcf	4053,2,c	;volatile
  7690                           
  7691                           ;os.c: 120: T0CONbits.T0PS1 = 1;
  7692  007E54  82D5               	bsf	4053,1,c	;volatile
  7693                           
  7694                           ;os.c: 121: T0CONbits.T0PS0 = 0;
  7695  007E56  90D5               	bcf	4053,0,c	;volatile
  7696                           
  7697                           ;os.c: 123: T0CONbits.PSA = 0;
  7698  007E58  96D5               	bcf	4053,3,c	;volatile
  7699                           
  7700                           ;os.c: 125: TMR0H = 0xD1;
  7701  007E5A  0ED1               	movlw	209
  7702  007E5C  6ED7               	movwf	4055,c	;volatile
  7703                           
  7704                           ;os.c: 126: TMR0L = 0x20;
  7705  007E5E  0E20               	movlw	32
  7706  007E60  6ED6               	movwf	4054,c	;volatile
  7707                           
  7708                           ;os.c: 128: T0CONbits.TMR0ON = 1;
  7709  007E62  8ED5               	bsf	4053,7,c	;volatile
  7710                           
  7711                           ;os.c: 132: INTCONbits.TMR0IF = 0;
  7712  007E64  94F2               	bcf	intcon,2,c	;volatile
  7713                           
  7714                           ;os.c: 135: os.timeSlot = 0;
  7715  007E66  0E00               	movlw	0
  7716  007E68  0100               	movlb	0	; () banked
  7717  007E6A  6F62               	movwf	(_os+2)& (0+255),b	;volatile
  7718                           
  7719                           ; BSR set to: 0
  7720  007E6C  0012               	return		;funcret
  7721  007E6E                     __end_of__system_timer0_init:
  7722                           	opt stack 0
  7723                           tblptru	equ	0xFF8
  7724                           tblptrh	equ	0xFF7
  7725                           tblptrl	equ	0xFF6
  7726                           tablat	equ	0xFF5
  7727                           intcon	equ	0xFF2
  7728                           intcon3	equ	0xFF0
  7729                           postinc0	equ	0xFEE
  7730                           wreg	equ	0xFE8
  7731                           postdec1	equ	0xFE5
  7732                           plusw1	equ	0xFE3
  7733                           fsr1h	equ	0xFE2
  7734                           fsr1l	equ	0xFE1
  7735                           indf2	equ	0xFDF
  7736                           postinc2	equ	0xFDE
  7737                           plusw2	equ	0xFDB
  7738                           fsr2h	equ	0xFDA
  7739                           fsr2l	equ	0xFD9
  7740                           status	equ	0xFD8
  7741                           
  7742 ;; *************** function __system_encoder_init *****************
  7743 ;; Defined at:
  7744 ;;		line 73 in file "os.c"
  7745 ;; Parameters:    Size  Location     Type
  7746 ;;		None
  7747 ;; Auto vars:     Size  Location     Type
  7748 ;;		None
  7749 ;; Return value:  Size  Location     Type
  7750 ;;                  1    wreg      void 
  7751 ;; Registers used:
  7752 ;;		wreg, status,2
  7753 ;; Tracked objects:
  7754 ;;		On entry : 0/0
  7755 ;;		On exit  : 0/0
  7756 ;;		Unchanged: 0/0
  7757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7762 ;;Total ram usage:        0 bytes
  7763 ;; Hardware stack levels used:    1
  7764 ;; This function calls:
  7765 ;;		Nothing
  7766 ;; This function is called by:
  7767 ;;		_system_full_init
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           	psect	text29
  7772  0078DE                     __ptext29:
  7773                           	opt stack 0
  7774  0078DE                     __system_encoder_init:
  7775                           	opt stack 29
  7776                           
  7777                           ;os.c: 75: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  7778                           
  7779                           ; BSR set to: 0
  7780                           ;incstack = 0
  7781  0078DE  0E55               	movlw	85
  7782  0078E0  6EA7               	movwf	4007,c	;volsfr
  7783  0078E2  0EAA               	movlw	170
  7784  0078E4  6EA7               	movwf	4007,c	;volsfr
  7785  0078E6  010E               	movlb	14	; () banked
  7786  0078E8  91BF               	bcf	191,0,b	;volatile
  7787                           
  7788                           ;os.c: 76: RPINR1 = 0;
  7789  0078EA  0E00               	movlw	0
  7790  0078EC  6FE1               	movwf	225,b	;volatile
  7791                           
  7792                           ;os.c: 77: RPINR3 = 9;
  7793  0078EE  0E09               	movlw	9
  7794  0078F0  6FE3               	movwf	227,b	;volatile
  7795                           
  7796                           ;os.c: 78: RPINR2 = 10;
  7797  0078F2  0E0A               	movlw	10
  7798  0078F4  6FE2               	movwf	226,b	;volatile
  7799                           
  7800                           ;os.c: 79: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
  7801  0078F6  0E55               	movlw	85
  7802  0078F8  6EA7               	movwf	4007,c	;volsfr
  7803  0078FA  0EAA               	movlw	170
  7804  0078FC  6EA7               	movwf	4007,c	;volsfr
  7805                           
  7806                           ; BSR set to: 14
  7807  0078FE  91BF               	bcf	191,0,b	;volatile
  7808                           
  7809                           ; BSR set to: 14
  7810                           ;os.c: 82: INTCON2bits.INTEDG1 = 0;
  7811  007900  9AF1               	bcf	intcon2,5,c	;volatile
  7812                           
  7813                           ; BSR set to: 14
  7814                           ;os.c: 83: INTCON3bits.INT1IF = 0;
  7815  007902  90F0               	bcf	intcon3,0,c	;volatile
  7816                           
  7817                           ; BSR set to: 14
  7818                           ;os.c: 85: INTCON2bits.INTEDG2 = 1;
  7819  007904  88F1               	bsf	intcon2,4,c	;volatile
  7820                           
  7821                           ; BSR set to: 14
  7822                           ;os.c: 86: INTCON3bits.INT2IF = 0;
  7823  007906  92F0               	bcf	intcon3,1,c	;volatile
  7824                           
  7825                           ; BSR set to: 14
  7826                           ;os.c: 88: INTCON2bits.INTEDG3 = 1;
  7827  007908  86F1               	bsf	intcon2,3,c	;volatile
  7828                           
  7829                           ; BSR set to: 14
  7830                           ;os.c: 89: INTCON3bits.INT3IF = 0;
  7831  00790A  94F0               	bcf	intcon3,2,c	;volatile
  7832                           
  7833                           ;os.c: 91: os.encoderCount = 0;
  7834  00790C  0E00               	movlw	0
  7835  00790E  0100               	movlb	0	; () banked
  7836  007910  6F60               	movwf	_os& (0+255),b	;volatile
  7837                           
  7838                           ;os.c: 92: os.buttonCount = 0;
  7839  007912  0E00               	movlw	0
  7840  007914  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  7841                           
  7842                           ; BSR set to: 0
  7843  007916  0012               	return		;funcret
  7844  007918                     __end_of__system_encoder_init:
  7845                           	opt stack 0
  7846                           tblptru	equ	0xFF8
  7847                           tblptrh	equ	0xFF7
  7848                           tblptrl	equ	0xFF6
  7849                           tablat	equ	0xFF5
  7850                           intcon	equ	0xFF2
  7851                           intcon2	equ	0xFF1
  7852                           intcon3	equ	0xFF0
  7853                           postinc0	equ	0xFEE
  7854                           wreg	equ	0xFE8
  7855                           postdec1	equ	0xFE5
  7856                           plusw1	equ	0xFE3
  7857                           fsr1h	equ	0xFE2
  7858                           fsr1l	equ	0xFE1
  7859                           indf2	equ	0xFDF
  7860                           postinc2	equ	0xFDE
  7861                           plusw2	equ	0xFDB
  7862                           fsr2h	equ	0xFDA
  7863                           fsr2l	equ	0xFD9
  7864                           status	equ	0xFD8
  7865                           
  7866 ;; *************** function _spi_get_external_tx_buffer *****************
  7867 ;; Defined at:
  7868 ;;		line 75 in file "spi.c"
  7869 ;; Parameters:    Size  Location     Type
  7870 ;;		None
  7871 ;; Auto vars:     Size  Location     Type
  7872 ;;		None
  7873 ;; Return value:  Size  Location     Type
  7874 ;;                  2    0[COMRAM] PTR unsigned char 
  7875 ;; Registers used:
  7876 ;;		wreg, status,2, status,0
  7877 ;; Tracked objects:
  7878 ;;		On entry : 0/0
  7879 ;;		On exit  : 0/0
  7880 ;;		Unchanged: 0/0
  7881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7882 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7885 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7886 ;;Total ram usage:        2 bytes
  7887 ;; Hardware stack levels used:    1
  7888 ;; This function calls:
  7889 ;;		Nothing
  7890 ;; This function is called by:
  7891 ;;		_main
  7892 ;; This function uses a non-reentrant model
  7893 ;;
  7894                           
  7895                           	psect	text30
  7896  008018                     __ptext30:
  7897                           	opt stack 0
  7898  008018                     _spi_get_external_tx_buffer:
  7899                           	opt stack 30
  7900                           
  7901                           ;spi.c: 77: return _spi_external_tx_buffer;
  7902                           
  7903                           ; BSR set to: 0
  7904                           ;incstack = 0
  7905  008018  0E40               	movlw	low __spi_external_tx_buffer
  7906  00801A  6E01               	movwf	?_spi_get_external_tx_buffer,c
  7907  00801C  0E02               	movlw	high __spi_external_tx_buffer
  7908  00801E  6E02               	movwf	?_spi_get_external_tx_buffer+1,c
  7909  008020  0012               	return	
  7910  008022                     __end_of_spi_get_external_tx_buffer:
  7911                           	opt stack 0
  7912                           tblptru	equ	0xFF8
  7913                           tblptrh	equ	0xFF7
  7914                           tblptrl	equ	0xFF6
  7915                           tablat	equ	0xFF5
  7916                           intcon	equ	0xFF2
  7917                           intcon2	equ	0xFF1
  7918                           intcon3	equ	0xFF0
  7919                           postinc0	equ	0xFEE
  7920                           wreg	equ	0xFE8
  7921                           postdec1	equ	0xFE5
  7922                           plusw1	equ	0xFE3
  7923                           fsr1h	equ	0xFE2
  7924                           fsr1l	equ	0xFE1
  7925                           indf2	equ	0xFDF
  7926                           postinc2	equ	0xFDE
  7927                           plusw2	equ	0xFDB
  7928                           fsr2h	equ	0xFDA
  7929                           fsr2l	equ	0xFD9
  7930                           status	equ	0xFD8
  7931                           
  7932 ;; *************** function _spi_get_external_rx_buffer *****************
  7933 ;; Defined at:
  7934 ;;		line 80 in file "spi.c"
  7935 ;; Parameters:    Size  Location     Type
  7936 ;;		None
  7937 ;; Auto vars:     Size  Location     Type
  7938 ;;		None
  7939 ;; Return value:  Size  Location     Type
  7940 ;;                  2    0[COMRAM] PTR unsigned char 
  7941 ;; Registers used:
  7942 ;;		wreg, status,2, status,0
  7943 ;; Tracked objects:
  7944 ;;		On entry : 0/0
  7945 ;;		On exit  : 0/0
  7946 ;;		Unchanged: 0/0
  7947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7948 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7951 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7952 ;;Total ram usage:        2 bytes
  7953 ;; Hardware stack levels used:    1
  7954 ;; This function calls:
  7955 ;;		Nothing
  7956 ;; This function is called by:
  7957 ;;		_main
  7958 ;; This function uses a non-reentrant model
  7959 ;;
  7960                           
  7961                           	psect	text31
  7962  008022                     __ptext31:
  7963                           	opt stack 0
  7964  008022                     _spi_get_external_rx_buffer:
  7965                           	opt stack 30
  7966                           
  7967                           ;spi.c: 82: return _spi_external_rx_buffer;
  7968                           
  7969                           ;incstack = 0
  7970  008022  0E00               	movlw	low __spi_external_rx_buffer
  7971  008024  6E01               	movwf	?_spi_get_external_rx_buffer,c
  7972  008026  0E02               	movlw	high __spi_external_rx_buffer
  7973  008028  6E02               	movwf	?_spi_get_external_rx_buffer+1,c
  7974  00802A  0012               	return	
  7975  00802C                     __end_of_spi_get_external_rx_buffer:
  7976                           	opt stack 0
  7977                           tblptru	equ	0xFF8
  7978                           tblptrh	equ	0xFF7
  7979                           tblptrl	equ	0xFF6
  7980                           tablat	equ	0xFF5
  7981                           intcon	equ	0xFF2
  7982                           intcon2	equ	0xFF1
  7983                           intcon3	equ	0xFF0
  7984                           postinc0	equ	0xFEE
  7985                           wreg	equ	0xFE8
  7986                           postdec1	equ	0xFE5
  7987                           plusw1	equ	0xFE3
  7988                           fsr1h	equ	0xFE2
  7989                           fsr1l	equ	0xFE1
  7990                           indf2	equ	0xFDF
  7991                           postinc2	equ	0xFDE
  7992                           plusw2	equ	0xFDB
  7993                           fsr2h	equ	0xFDA
  7994                           fsr2l	equ	0xFD9
  7995                           status	equ	0xFD8
  7996                           
  7997 ;; *************** function _jump_to_main_program *****************
  7998 ;; Defined at:
  7999 ;;		line 248 in file "os.c"
  8000 ;; Parameters:    Size  Location     Type
  8001 ;;		None
  8002 ;; Auto vars:     Size  Location     Type
  8003 ;;		None
  8004 ;; Return value:  Size  Location     Type
  8005 ;;                  1    wreg      void 
  8006 ;; Registers used:
  8007 ;;		None
  8008 ;; Tracked objects:
  8009 ;;		On entry : 0/0
  8010 ;;		On exit  : 0/0
  8011 ;;		Unchanged: 0/0
  8012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8017 ;;Total ram usage:        0 bytes
  8018 ;; Hardware stack levels used:    1
  8019 ;; This function calls:
  8020 ;;		Nothing
  8021 ;; This function is called by:
  8022 ;;		_main
  8023 ;; This function uses a non-reentrant model
  8024 ;;
  8025                           
  8026                           	psect	text32
  8027  0080C6                     __ptext32:
  8028                           	opt stack 0
  8029  0080C6                     _jump_to_main_program:
  8030                           	opt stack 30
  8031                           
  8032                           ;incstack = 0
  8033  0080C6  EF00 F048          	goto	36864	; ;# 
  8034  0080CA  0012               	return		;funcret
  8035  0080CC                     __end_of_jump_to_main_program:
  8036                           	opt stack 0
  8037                           tblptru	equ	0xFF8
  8038                           tblptrh	equ	0xFF7
  8039                           tblptrl	equ	0xFF6
  8040                           tablat	equ	0xFF5
  8041                           intcon	equ	0xFF2
  8042                           intcon2	equ	0xFF1
  8043                           intcon3	equ	0xFF0
  8044                           postinc0	equ	0xFEE
  8045                           wreg	equ	0xFE8
  8046                           postdec1	equ	0xFE5
  8047                           plusw1	equ	0xFE3
  8048                           fsr1h	equ	0xFE2
  8049                           fsr1l	equ	0xFE1
  8050                           indf2	equ	0xFDF
  8051                           postinc2	equ	0xFDE
  8052                           plusw2	equ	0xFDB
  8053                           fsr2h	equ	0xFDA
  8054                           fsr2l	equ	0xFD9
  8055                           status	equ	0xFD8
  8056                           
  8057 ;; *************** function _bootloader_run *****************
  8058 ;; Defined at:
  8059 ;;		line 60 in file "bootloader.c"
  8060 ;; Parameters:    Size  Location     Type
  8061 ;;  timeslot        1    wreg     unsigned char 
  8062 ;; Auto vars:     Size  Location     Type
  8063 ;;  timeslot        1   92[COMRAM] unsigned char 
  8064 ;; Return value:  Size  Location     Type
  8065 ;;                  1    wreg      void 
  8066 ;; Registers used:
  8067 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8068 ;; Tracked objects:
  8069 ;;		On entry : 0/0
  8070 ;;		On exit  : 0/0
  8071 ;;		Unchanged: 0/0
  8072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8076 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8077 ;;Total ram usage:        1 bytes
  8078 ;; Hardware stack levels used:    1
  8079 ;; Hardware stack levels required when called:    9
  8080 ;; This function calls:
  8081 ;;		__bootloader_find_file
  8082 ;;		__bootloader_program
  8083 ;;		__bootloader_verify_file
  8084 ;; This function is called by:
  8085 ;;		_main
  8086 ;; This function uses a non-reentrant model
  8087 ;;
  8088                           
  8089                           	psect	text33
  8090  006FFE                     __ptext33:
  8091                           	opt stack 0
  8092  006FFE                     _bootloader_run:
  8093                           	opt stack 21
  8094                           
  8095                           ;incstack = 0
  8096                           ;bootloader_run@timeslot stored from wreg
  8097  006FFE  6E5D               	movwf	bootloader_run@timeslot,c
  8098                           
  8099                           ;bootloader.c: 62: switch(os.bootloader_mode)
  8100  007000  D015               	goto	l2292
  8101  007002                     
  8102                           ;bootloader.c: 65: if(timeslot==0)
  8103  007002  505D               	movf	bootloader_run@timeslot,w,c
  8104  007004  A4D8               	btfss	status,2,c
  8105  007006  0012               	return	
  8106                           
  8107                           ;bootloader.c: 66: {;bootloader.c: 67: _bootloader_find_file();
  8108  007008  ECB3  F02D         	call	__bootloader_find_file	;wreg free
  8109                           
  8110                           ;bootloader.c: 68: };bootloader.c: 69: break;
  8111  00700C  0012               	return	
  8112  00700E                     
  8113                           ;bootloader.c: 72: if(timeslot==0)
  8114  00700E  505D               	movf	bootloader_run@timeslot,w,c
  8115  007010  A4D8               	btfss	status,2,c
  8116  007012  0012               	return	
  8117                           
  8118                           ;bootloader.c: 73: {;bootloader.c: 74: _bootloader_find_file();
  8119  007014  ECB3  F02D         	call	__bootloader_find_file	;wreg free
  8120                           
  8121                           ;bootloader.c: 75: };bootloader.c: 76: break;
  8122  007018  0012               	return	
  8123  00701A                     
  8124                           ;bootloader.c: 79: _bootloader_verify_file();
  8125  00701A  EC16  F009         	call	__bootloader_verify_file	;wreg free
  8126                           
  8127                           ;bootloader.c: 86: break;
  8128                           
  8129                           ;bootloader.c: 85: case BOOTLOADER_MODE_CHECK_FAILED:
  8130                           
  8131                           ;bootloader.c: 83: break;
  8132                           
  8133                           ;bootloader.c: 82: case BOOTLOADER_MODE_CHECK_COMPLETE:
  8134                           
  8135                           ;bootloader.c: 80: break;
  8136  00701E  0012               	return	
  8137  007020                     
  8138                           ;bootloader.c: 89: if(timeslot==0)
  8139  007020  505D               	movf	bootloader_run@timeslot,w,c
  8140  007022  A4D8               	btfss	status,2,c
  8141  007024  0012               	return	
  8142                           
  8143                           ;bootloader.c: 90: {;bootloader.c: 91: _bootloader_program();
  8144  007026  EC2D  F004         	call	__bootloader_program	;wreg free
  8145                           
  8146                           ;bootloader.c: 97: }
  8147                           
  8148                           ;bootloader.c: 96: break;
  8149                           
  8150                           ;bootloader.c: 95: case BOOTLOADER_MODE_DONE:
  8151                           
  8152                           ;bootloader.c: 92: };bootloader.c: 93: break;
  8153  00702A  0012               	return	
  8154  00702C                     l2292:
  8155  00702C  0100               	movlb	0	; () banked
  8156  00702E  5164               	movf	(_os+4)& (0+255),w,b	;volatile
  8157                           
  8158                           ; Switch size 1, requested type "space"
  8159                           ; Number of cases is 7, Range of values is 16 to 112
  8160                           ; switch strategies available:
  8161                           ; Name         Instructions Cycles
  8162                           ; simple_byte           22    12 (average)
  8163                           ;	Chosen strategy is simple_byte
  8164  007030  0A10               	xorlw	16	; case 16
  8165  007032  B4D8               	btfsc	status,2,c
  8166  007034  D7E6               	goto	l2293
  8167  007036  0A30               	xorlw	48	; case 32
  8168  007038  B4D8               	btfsc	status,2,c
  8169  00703A  D7E9               	goto	l2296
  8170  00703C  0A10               	xorlw	16	; case 48
  8171  00703E  B4D8               	btfsc	status,2,c
  8172  007040  D7EC               	goto	l2298
  8173  007042  0A70               	xorlw	112	; case 64
  8174  007044  B4D8               	btfsc	status,2,c
  8175  007046  0012               	return	
  8176  007048  0A10               	xorlw	16	; case 80
  8177  00704A  B4D8               	btfsc	status,2,c
  8178  00704C  0012               	return	
  8179  00704E  0A30               	xorlw	48	; case 96
  8180  007050  B4D8               	btfsc	status,2,c
  8181  007052  D7E6               	goto	l2301
  8182  007054  0A10               	xorlw	16	; case 112
  8183  007056  0012               	return	
  8184  007058                     __end_of_bootloader_run:
  8185                           	opt stack 0
  8186                           tblptru	equ	0xFF8
  8187                           tblptrh	equ	0xFF7
  8188                           tblptrl	equ	0xFF6
  8189                           tablat	equ	0xFF5
  8190                           intcon	equ	0xFF2
  8191                           intcon2	equ	0xFF1
  8192                           intcon3	equ	0xFF0
  8193                           postinc0	equ	0xFEE
  8194                           wreg	equ	0xFE8
  8195                           postdec1	equ	0xFE5
  8196                           plusw1	equ	0xFE3
  8197                           fsr1h	equ	0xFE2
  8198                           fsr1l	equ	0xFE1
  8199                           indf2	equ	0xFDF
  8200                           postinc2	equ	0xFDE
  8201                           plusw2	equ	0xFDB
  8202                           fsr2h	equ	0xFDA
  8203                           fsr2l	equ	0xFD9
  8204                           status	equ	0xFD8
  8205                           
  8206 ;; *************** function __bootloader_verify_file *****************
  8207 ;; Defined at:
  8208 ;;		line 176 in file "bootloader.c"
  8209 ;; Parameters:    Size  Location     Type
  8210 ;;		None
  8211 ;; Auto vars:     Size  Location     Type
  8212 ;;  address32       4   50[BANK0 ] unsigned long 
  8213 ;;  return_value    4   46[BANK0 ] unsigned long 
  8214 ;;  rec_counter     1   45[BANK0 ] unsigned char 
  8215 ;; Return value:  Size  Location     Type
  8216 ;;                  1    wreg      void 
  8217 ;; Registers used:
  8218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8219 ;; Tracked objects:
  8220 ;;		On entry : 0/0
  8221 ;;		On exit  : 0/0
  8222 ;;		Unchanged: 0/0
  8223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8225 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8226 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8227 ;;      Totals:         8       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8228 ;;Total ram usage:       17 bytes
  8229 ;; Hardware stack levels used:    1
  8230 ;; Hardware stack levels required when called:    8
  8231 ;; This function calls:
  8232 ;;		__bootloader_check_address
  8233 ;;		_fat_get_file_size
  8234 ;;		_fat_read_from_file
  8235 ;;		_parseHexFileEntry
  8236 ;; This function is called by:
  8237 ;;		_bootloader_run
  8238 ;; This function uses a non-reentrant model
  8239 ;;
  8240                           
  8241                           	psect	text34
  8242  00122C                     __ptext34:
  8243                           	opt stack 0
  8244  00122C                     __bootloader_verify_file:
  8245                           	opt stack 21
  8246                           
  8247                           ;bootloader.c: 178: uint8_t rec_counter;;bootloader.c: 179: uint32_t return_value = 0;
  8248                           
  8249                           ;incstack = 0
  8250  00122C  0E00               	movlw	0
  8251  00122E  0100               	movlb	0	; () banked
  8252  001230  6FE3               	movwf	__bootloader_verify_file@return_value& (0+255),b
  8253  001232  0E00               	movlw	0
  8254  001234  6FE4               	movwf	(__bootloader_verify_file@return_value+1)& (0+255),b
  8255  001236  0E00               	movlw	0
  8256  001238  6FE5               	movwf	(__bootloader_verify_file@return_value+2)& (0+255),b
  8257  00123A  0E00               	movlw	0
  8258  00123C  6FE6               	movwf	(__bootloader_verify_file@return_value+3)& (0+255),b
  8259                           
  8260                           ; BSR set to: 0
  8261                           ;bootloader.c: 180: uint32_t address32;;bootloader.c: 183: hex_file_size = fat_get_file_
      +                          size(file_number);
  8262  00123E  51FE               	movf	_file_number& (0+255),w,b
  8263  001240  EC91  F034         	call	_fat_get_file_size
  8264  001244  C030  F078         	movff	?_fat_get_file_size,_hex_file_size
  8265  001248  C031  F079         	movff	?_fat_get_file_size+1,_hex_file_size+1
  8266  00124C  C032  F07A         	movff	?_fat_get_file_size+2,_hex_file_size+2
  8267  001250  C033  F07B         	movff	?_fat_get_file_size+3,_hex_file_size+3
  8268                           
  8269                           ;bootloader.c: 186: for(rec_counter=0; rec_counter<1; ++rec_counter)
  8270  001254  0E00               	movlw	0
  8271  001256  0100               	movlb	0	; () banked
  8272  001258  6FE2               	movwf	__bootloader_verify_file@rec_counter& (0+255),b
  8273  00125A                     l14191:
  8274                           
  8275                           ; BSR set to: 0
  8276  00125A  51E2               	movf	__bootloader_verify_file@rec_counter& (0+255),w,b
  8277  00125C  A4D8               	btfss	status,2,c
  8278  00125E  0012               	return	
  8279                           
  8280                           ; BSR set to: 0
  8281                           ;bootloader.c: 187: {;bootloader.c: 189: if((hex_file_size-hex_file_offset)>=50)
  8282                           
  8283                           ; BSR set to: 0
  8284                           
  8285                           ; BSR set to: 0
  8286  001260  C07C  F055         	movff	_hex_file_offset,??__bootloader_verify_file
  8287  001264  C07D  F056         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  8288  001268  C07E  F057         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  8289  00126C  C07F  F058         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  8290  001270  1E55               	comf	??__bootloader_verify_file,f,c
  8291  001272  1E56               	comf	??__bootloader_verify_file+1,f,c
  8292  001274  1E57               	comf	??__bootloader_verify_file+2,f,c
  8293  001276  1E58               	comf	??__bootloader_verify_file+3,f,c
  8294  001278  2A55               	incf	??__bootloader_verify_file,f,c
  8295  00127A  0E00               	movlw	0
  8296  00127C  2256               	addwfc	??__bootloader_verify_file+1,f,c
  8297  00127E  2257               	addwfc	??__bootloader_verify_file+2,f,c
  8298  001280  2258               	addwfc	??__bootloader_verify_file+3,f,c
  8299  001282  5178               	movf	_hex_file_size& (0+255),w,b
  8300  001284  2455               	addwf	??__bootloader_verify_file,w,c
  8301  001286  6E59               	movwf	(??__bootloader_verify_file+4)& (0+255),c
  8302  001288  5179               	movf	(_hex_file_size+1)& (0+255),w,b
  8303  00128A  2056               	addwfc	??__bootloader_verify_file+1,w,c
  8304  00128C  6E5A               	movwf	(??__bootloader_verify_file+5)& (0+255),c
  8305  00128E  517A               	movf	(_hex_file_size+2)& (0+255),w,b
  8306  001290  2057               	addwfc	??__bootloader_verify_file+2,w,c
  8307  001292  6E5B               	movwf	(??__bootloader_verify_file+6)& (0+255),c
  8308  001294  517B               	movf	(_hex_file_size+3)& (0+255),w,b
  8309  001296  2058               	addwfc	??__bootloader_verify_file+3,w,c
  8310  001298  6E5C               	movwf	(??__bootloader_verify_file+7)& (0+255),c
  8311  00129A  505C               	movf	??__bootloader_verify_file+7,w,c
  8312  00129C  105B               	iorwf	??__bootloader_verify_file+6,w,c
  8313  00129E  105A               	iorwf	??__bootloader_verify_file+5,w,c
  8314  0012A0  E104               	bnz	u11060
  8315  0012A2  0E32               	movlw	50
  8316  0012A4  5C59               	subwf	??__bootloader_verify_file+4,w,c
  8317  0012A6  A0D8               	btfss	status,0,c
  8318  0012A8  D018               	goto	l2327
  8319  0012AA                     u11060:
  8320                           
  8321                           ; BSR set to: 0
  8322                           ;bootloader.c: 190: fat_read_from_file(file_number, hex_file_offset, 50, file_buffer);
  8323  0012AA  C07C  F03F         	movff	_hex_file_offset,fat_read_from_file@start_byte
  8324  0012AE  C07D  F040         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
  8325  0012B2  C07E  F041         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
  8326  0012B6  C07F  F042         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
  8327  0012BA  0E32               	movlw	50
  8328  0012BC  6E43               	movwf	fat_read_from_file@length,c
  8329  0012BE  0E00               	movlw	0
  8330  0012C0  6E44               	movwf	fat_read_from_file@length+1,c
  8331  0012C2  0E00               	movlw	0
  8332  0012C4  6E45               	movwf	fat_read_from_file@length+2,c
  8333  0012C6  0E00               	movlw	0
  8334  0012C8  6E46               	movwf	fat_read_from_file@length+3,c
  8335  0012CA  0EC0               	movlw	low _file_buffer
  8336  0012CC  6E47               	movwf	fat_read_from_file@data,c
  8337  0012CE  0E02               	movlw	high _file_buffer
  8338  0012D0  6E48               	movwf	fat_read_from_file@data+1,c
  8339  0012D2  51FE               	movf	_file_number& (0+255),w,b
  8340  0012D4  EC7A  F00F         	call	_fat_read_from_file
  8341  0012D8  D02D               	goto	l2328
  8342  0012DA                     l2327:
  8343                           
  8344                           ;bootloader.c: 191: else;bootloader.c: 192: fat_read_from_file(file_number, hex_file_off
      +                          set, (hex_file_size-hex_file_offset), file_buffer);
  8345  0012DA  C07C  F03F         	movff	_hex_file_offset,fat_read_from_file@start_byte
  8346  0012DE  C07D  F040         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
  8347  0012E2  C07E  F041         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
  8348  0012E6  C07F  F042         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
  8349  0012EA  C07C  F055         	movff	_hex_file_offset,??__bootloader_verify_file
  8350  0012EE  C07D  F056         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  8351  0012F2  C07E  F057         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  8352  0012F6  C07F  F058         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  8353  0012FA  1E55               	comf	??__bootloader_verify_file,f,c
  8354  0012FC  1E56               	comf	??__bootloader_verify_file+1,f,c
  8355  0012FE  1E57               	comf	??__bootloader_verify_file+2,f,c
  8356  001300  1E58               	comf	??__bootloader_verify_file+3,f,c
  8357  001302  2A55               	incf	??__bootloader_verify_file,f,c
  8358  001304  0E00               	movlw	0
  8359  001306  2256               	addwfc	??__bootloader_verify_file+1,f,c
  8360  001308  2257               	addwfc	??__bootloader_verify_file+2,f,c
  8361  00130A  2258               	addwfc	??__bootloader_verify_file+3,f,c
  8362  00130C  0100               	movlb	0	; () banked
  8363  00130E  5178               	movf	_hex_file_size& (0+255),w,b
  8364  001310  2455               	addwf	??__bootloader_verify_file,w,c
  8365  001312  6E43               	movwf	fat_read_from_file@length,c
  8366  001314  5179               	movf	(_hex_file_size+1)& (0+255),w,b
  8367  001316  2056               	addwfc	??__bootloader_verify_file+1,w,c
  8368  001318  6E44               	movwf	fat_read_from_file@length+1,c
  8369  00131A  517A               	movf	(_hex_file_size+2)& (0+255),w,b
  8370  00131C  2057               	addwfc	??__bootloader_verify_file+2,w,c
  8371  00131E  6E45               	movwf	fat_read_from_file@length+2,c
  8372  001320  517B               	movf	(_hex_file_size+3)& (0+255),w,b
  8373  001322  2058               	addwfc	??__bootloader_verify_file+3,w,c
  8374  001324  6E46               	movwf	fat_read_from_file@length+3,c
  8375  001326  0EC0               	movlw	low _file_buffer
  8376  001328  6E47               	movwf	fat_read_from_file@data,c
  8377  00132A  0E02               	movlw	high _file_buffer
  8378  00132C  6E48               	movwf	fat_read_from_file@data+1,c
  8379  00132E  51FE               	movf	_file_number& (0+255),w,b
  8380  001330  EC7A  F00F         	call	_fat_read_from_file
  8381  001334                     l2328:
  8382                           
  8383                           ;bootloader.c: 194: return_value = parseHexFileEntry(file_buffer, 0, &hex_file_entry);
  8384  001334  0EC0               	movlw	low _file_buffer
  8385  001336  6E0C               	movwf	parseHexFileEntry@data,c
  8386  001338  0E02               	movlw	high _file_buffer
  8387  00133A  6E0D               	movwf	parseHexFileEntry@data+1,c
  8388  00133C  0E00               	movlw	0
  8389  00133E  6E0E               	movwf	parseHexFileEntry@offset,c
  8390  001340  0E00               	movlw	0
  8391  001342  6E0F               	movwf	parseHexFileEntry@offset+1,c
  8392  001344  0E00               	movlw	0
  8393  001346  6E10               	movwf	parseHexFileEntry@offset+2,c
  8394  001348  0E00               	movlw	0
  8395  00134A  6E11               	movwf	parseHexFileEntry@offset+3,c
  8396  00134C  0EC6               	movlw	low _hex_file_entry
  8397  00134E  6E12               	movwf	parseHexFileEntry@hexEntry,c
  8398  001350  0E01               	movlw	high _hex_file_entry
  8399  001352  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  8400  001354  EC10  F000         	call	_parseHexFileEntry	;wreg free
  8401  001358  C00C  F0E3         	movff	?_parseHexFileEntry,__bootloader_verify_file@return_value
  8402  00135C  C00D  F0E4         	movff	?_parseHexFileEntry+1,__bootloader_verify_file@return_value+1
  8403  001360  C00E  F0E5         	movff	?_parseHexFileEntry+2,__bootloader_verify_file@return_value+2
  8404  001364  C00F  F0E6         	movff	?_parseHexFileEntry+3,__bootloader_verify_file@return_value+3
  8405                           
  8406                           ;bootloader.c: 197: ++hex_file_entries;
  8407  001368  0101               	movlb	1	; () banked
  8408  00136A  4B6A               	infsnz	_hex_file_entries& (0+255),f,b
  8409  00136C  2B6B               	incf	(_hex_file_entries+1)& (0+255),f,b
  8410                           
  8411                           ; BSR set to: 1
  8412                           ;bootloader.c: 200: if(hex_file_entry.recordType==RecordTypeExtendedLinearAddress)
  8413  00136E  0E04               	movlw	4
  8414  001370  19CA               	xorwf	(_hex_file_entry+4)& (0+255),w,b
  8415  001372  A4D8               	btfss	status,2,c
  8416  001374  D01C               	goto	l2329
  8417                           
  8418                           ; BSR set to: 1
  8419                           ;bootloader.c: 201: {;bootloader.c: 202: extended_linear_address = hex_file_entry.data[0
      +                          ];
  8420  001376  51CB               	movf	(_hex_file_entry+5)& (0+255),w,b
  8421  001378  6F40               	movwf	_extended_linear_address& (0+255),b
  8422  00137A  6B41               	clrf	(_extended_linear_address+1)& (0+255),b
  8423  00137C  6B42               	clrf	(_extended_linear_address+2)& (0+255),b
  8424  00137E  6B43               	clrf	(_extended_linear_address+3)& (0+255),b
  8425                           
  8426                           ; BSR set to: 1
  8427                           ;bootloader.c: 203: extended_linear_address <<= 8;
  8428  001380  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
  8429  001384  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
  8430  001388  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
  8431  00138C  6B40               	clrf	_extended_linear_address& (0+255),b
  8432                           
  8433                           ; BSR set to: 1
  8434                           ;bootloader.c: 204: extended_linear_address |= hex_file_entry.data[1];
  8435  00138E  51CC               	movf	(_hex_file_entry+6)& (0+255),w,b
  8436  001390  1340               	iorwf	_extended_linear_address& (0+255),f,b
  8437                           
  8438                           ; BSR set to: 1
  8439                           ;bootloader.c: 205: extended_linear_address <<= 8;
  8440  001392  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
  8441  001396  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
  8442  00139A  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
  8443  00139E  6B40               	clrf	_extended_linear_address& (0+255),b
  8444                           
  8445                           ; BSR set to: 1
  8446                           ;bootloader.c: 206: extended_linear_address <<= 8;
  8447  0013A0  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
  8448  0013A4  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
  8449  0013A8  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
  8450  0013AC  6B40               	clrf	_extended_linear_address& (0+255),b
  8451  0013AE                     l2329:
  8452                           
  8453                           ; BSR set to: 1
  8454                           ;bootloader.c: 207: };bootloader.c: 210: if(hex_file_entry.recordType==RecordTypeData)
  8455                           
  8456                           ; BSR set to: 1
  8457  0013AE  51CA               	movf	(_hex_file_entry+4)& (0+255),w,b
  8458  0013B0  A4D8               	btfss	status,2,c
  8459  0013B2  D05D               	goto	l2333
  8460                           
  8461                           ; BSR set to: 1
  8462                           ;bootloader.c: 211: {;bootloader.c: 213: address32 = extended_linear_address + hex_file_
      +                          entry.address;
  8463  0013B4  51C8               	movf	(_hex_file_entry+2)& (0+255),w,b
  8464  0013B6  2540               	addwf	_extended_linear_address& (0+255),w,b
  8465  0013B8  0100               	movlb	0	; () banked
  8466  0013BA  6FE7               	movwf	__bootloader_verify_file@address32& (0+255),b
  8467  0013BC  0101               	movlb	1	; () banked
  8468  0013BE  51C9               	movf	(_hex_file_entry+3)& (0+255),w,b
  8469  0013C0  2141               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  8470  0013C2  0100               	movlb	0	; () banked
  8471  0013C4  6FE8               	movwf	(__bootloader_verify_file@address32+1)& (0+255),b
  8472  0013C6  0E00               	movlw	0
  8473  0013C8  0101               	movlb	1	; () banked
  8474  0013CA  2142               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  8475  0013CC  0100               	movlb	0	; () banked
  8476  0013CE  6FE9               	movwf	(__bootloader_verify_file@address32+2)& (0+255),b
  8477  0013D0  0E00               	movlw	0
  8478  0013D2  0101               	movlb	1	; () banked
  8479  0013D4  2143               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  8480  0013D6  0100               	movlb	0	; () banked
  8481  0013D8  6FEA               	movwf	(__bootloader_verify_file@address32+3)& (0+255),b
  8482                           
  8483                           ;bootloader.c: 216: if(address32<file_minimum_address)
  8484  0013DA  0101               	movlb	1	; () banked
  8485  0013DC  5148               	movf	_file_minimum_address& (0+255),w,b
  8486  0013DE  0100               	movlb	0	; () banked
  8487  0013E0  5DE7               	subwf	__bootloader_verify_file@address32& (0+255),w,b
  8488  0013E2  0101               	movlb	1	; () banked
  8489  0013E4  5149               	movf	(_file_minimum_address+1)& (0+255),w,b
  8490  0013E6  0100               	movlb	0	; () banked
  8491  0013E8  59E8               	subwfb	(__bootloader_verify_file@address32+1)& (0+255),w,b
  8492  0013EA  0101               	movlb	1	; () banked
  8493  0013EC  514A               	movf	(_file_minimum_address+2)& (0+255),w,b
  8494  0013EE  0100               	movlb	0	; () banked
  8495  0013F0  59E9               	subwfb	(__bootloader_verify_file@address32+2)& (0+255),w,b
  8496  0013F2  0101               	movlb	1	; () banked
  8497  0013F4  514B               	movf	(_file_minimum_address+3)& (0+255),w,b
  8498  0013F6  0100               	movlb	0	; () banked
  8499  0013F8  59EA               	subwfb	(__bootloader_verify_file@address32+3)& (0+255),w,b
  8500  0013FA  B0D8               	btfsc	status,0,c
  8501  0013FC  D008               	goto	l2331
  8502                           
  8503                           ; BSR set to: 0
  8504                           ;bootloader.c: 217: {;bootloader.c: 218: file_minimum_address = address32;
  8505  0013FE  C0E7  F148         	movff	__bootloader_verify_file@address32,_file_minimum_address
  8506  001402  C0E8  F149         	movff	__bootloader_verify_file@address32+1,_file_minimum_address+1
  8507  001406  C0E9  F14A         	movff	__bootloader_verify_file@address32+2,_file_minimum_address+2
  8508  00140A  C0EA  F14B         	movff	__bootloader_verify_file@address32+3,_file_minimum_address+3
  8509  00140E                     l2331:
  8510                           
  8511                           ; BSR set to: 0
  8512                           ;bootloader.c: 219: };bootloader.c: 220: if(address32>file_maximum_address)
  8513                           
  8514                           ; BSR set to: 0
  8515  00140E  51E7               	movf	__bootloader_verify_file@address32& (0+255),w,b
  8516  001410  0101               	movlb	1	; () banked
  8517  001412  5D44               	subwf	_file_maximum_address& (0+255),w,b
  8518  001414  0100               	movlb	0	; () banked
  8519  001416  51E8               	movf	(__bootloader_verify_file@address32+1)& (0+255),w,b
  8520  001418  0101               	movlb	1	; () banked
  8521  00141A  5945               	subwfb	(_file_maximum_address+1)& (0+255),w,b
  8522  00141C  0100               	movlb	0	; () banked
  8523  00141E  51E9               	movf	(__bootloader_verify_file@address32+2)& (0+255),w,b
  8524  001420  0101               	movlb	1	; () banked
  8525  001422  5946               	subwfb	(_file_maximum_address+2)& (0+255),w,b
  8526  001424  0100               	movlb	0	; () banked
  8527  001426  51EA               	movf	(__bootloader_verify_file@address32+3)& (0+255),w,b
  8528  001428  0101               	movlb	1	; () banked
  8529  00142A  5947               	subwfb	(_file_maximum_address+3)& (0+255),w,b
  8530  00142C  B0D8               	btfsc	status,0,c
  8531  00142E  D008               	goto	l2332
  8532                           
  8533                           ; BSR set to: 1
  8534                           ;bootloader.c: 221: {;bootloader.c: 222: file_maximum_address = address32;
  8535  001430  C0E7  F144         	movff	__bootloader_verify_file@address32,_file_maximum_address
  8536  001434  C0E8  F145         	movff	__bootloader_verify_file@address32+1,_file_maximum_address+1
  8537  001438  C0E9  F146         	movff	__bootloader_verify_file@address32+2,_file_maximum_address+2
  8538  00143C  C0EA  F147         	movff	__bootloader_verify_file@address32+3,_file_maximum_address+3
  8539  001440                     l2332:
  8540                           
  8541                           ; BSR set to: 1
  8542                           ;bootloader.c: 223: };bootloader.c: 226: if(_bootloader_check_address(address32, hex_fil
      +                          e_entry.dataLength) == ADDRESS_CHECK_RESULT_ERROR)
  8543                           
  8544                           ; BSR set to: 1
  8545  001440  C0E7  F001         	movff	__bootloader_verify_file@address32,__bootloader_check_address@address
  8546  001444  C0E8  F002         	movff	__bootloader_verify_file@address32+1,__bootloader_check_address@address+1
  8547  001448  C0E9  F003         	movff	__bootloader_verify_file@address32+2,__bootloader_check_address@address+2
  8548  00144C  C0EA  F004         	movff	__bootloader_verify_file@address32+3,__bootloader_check_address@address+3
  8549  001450  C1C6  F005         	movff	_hex_file_entry,__bootloader_check_address@dataLength
  8550  001454  EC51  F027         	call	__bootloader_check_address	;wreg free
  8551  001458  0AFF               	xorlw	255
  8552  00145A  A4D8               	btfss	status,2,c
  8553  00145C  D008               	goto	l2333
  8554                           
  8555                           ;bootloader.c: 227: {;bootloader.c: 229: last_error = ShortRecordErrorAddressRange;
  8556  00145E  0E0B               	movlw	11
  8557  001460  0100               	movlb	0	; () banked
  8558  001462  6F96               	movwf	_last_error& (0+255),b
  8559                           
  8560                           ;bootloader.c: 231: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  8561  001464  0E50               	movlw	80
  8562  001466  6F64               	movwf	(_os+4)& (0+255),b	;volatile
  8563                           
  8564                           ;bootloader.c: 232: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  8565  001468  0E50               	movlw	80
  8566  00146A  6F65               	movwf	(_os+5)& (0+255),b	;volatile
  8567                           
  8568                           ;bootloader.c: 233: break;
  8569  00146C  0012               	return	
  8570  00146E                     l2333:
  8571                           
  8572                           ;bootloader.c: 234: };bootloader.c: 235: };bootloader.c: 237: if(return_value==0)
  8573                           
  8574                           ; BSR set to: 0
  8575                           
  8576                           ; BSR set to: 0
  8577  00146E  0100               	movlb	0	; () banked
  8578  001470  51E3               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  8579  001472  11E4               	iorwf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  8580  001474  11E5               	iorwf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  8581  001476  11E6               	iorwf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  8582  001478  A4D8               	btfss	status,2,c
  8583  00147A  D027               	goto	l2334
  8584                           
  8585                           ; BSR set to: 0
  8586                           ;bootloader.c: 238: {;bootloader.c: 241: total_hex_file_entries = hex_file_entries;
  8587  00147C  C16A  F168         	movff	_hex_file_entries,_total_hex_file_entries
  8588  001480  C16B  F169         	movff	_hex_file_entries+1,_total_hex_file_entries+1
  8589                           
  8590                           ; BSR set to: 0
  8591                           ;bootloader.c: 242: hex_file_entries = 0;
  8592  001484  0E00               	movlw	0
  8593  001486  0101               	movlb	1	; () banked
  8594  001488  6F6B               	movwf	(_hex_file_entries+1)& (0+255),b
  8595  00148A  0E00               	movlw	0
  8596  00148C  6F6A               	movwf	_hex_file_entries& (0+255),b
  8597                           
  8598                           ;bootloader.c: 243: hex_file_offset = 0;
  8599  00148E  0E00               	movlw	0
  8600  001490  0100               	movlb	0	; () banked
  8601  001492  6F7C               	movwf	_hex_file_offset& (0+255),b
  8602  001494  0E00               	movlw	0
  8603  001496  6F7D               	movwf	(_hex_file_offset+1)& (0+255),b
  8604  001498  0E00               	movlw	0
  8605  00149A  6F7E               	movwf	(_hex_file_offset+2)& (0+255),b
  8606  00149C  0E00               	movlw	0
  8607  00149E  6F7F               	movwf	(_hex_file_offset+3)& (0+255),b
  8608                           
  8609                           ;bootloader.c: 244: extended_linear_address = 0;
  8610  0014A0  0E00               	movlw	0
  8611  0014A2  0101               	movlb	1	; () banked
  8612  0014A4  6F40               	movwf	_extended_linear_address& (0+255),b
  8613  0014A6  0E00               	movlw	0
  8614  0014A8  6F41               	movwf	(_extended_linear_address+1)& (0+255),b
  8615  0014AA  0E00               	movlw	0
  8616  0014AC  6F42               	movwf	(_extended_linear_address+2)& (0+255),b
  8617  0014AE  0E00               	movlw	0
  8618  0014B0  6F43               	movwf	(_extended_linear_address+3)& (0+255),b
  8619                           
  8620                           ;bootloader.c: 245: flash_pages_written = 0;
  8621  0014B2  0E00               	movlw	0
  8622  0014B4  6F67               	movwf	(_flash_pages_written+1)& (0+255),b
  8623  0014B6  0E00               	movlw	0
  8624  0014B8  6F66               	movwf	_flash_pages_written& (0+255),b
  8625                           
  8626                           ;bootloader.c: 246: start_from_byte_next = 0;
  8627  0014BA  0E00               	movlw	0
  8628  0014BC  0100               	movlb	0	; () banked
  8629  0014BE  6F95               	movwf	_start_from_byte_next& (0+255),b
  8630                           
  8631                           ;bootloader.c: 248: os.bootloader_mode = BOOTLOADER_MODE_CHECK_COMPLETE;
  8632  0014C0  0E40               	movlw	64
  8633  0014C2  6F64               	movwf	(_os+4)& (0+255),b	;volatile
  8634                           
  8635                           ;bootloader.c: 249: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_COMPLETE;
  8636  0014C4  0E40               	movlw	64
  8637  0014C6  6F65               	movwf	(_os+5)& (0+255),b	;volatile
  8638                           
  8639                           ;bootloader.c: 250: break;
  8640  0014C8  0012               	return	
  8641  0014CA                     l2334:
  8642                           
  8643                           ; BSR set to: 0
  8644                           ;bootloader.c: 252: else if(return_value>0xFFFFFFF0)
  8645                           
  8646                           ; BSR set to: 0
  8647  0014CA  0EF1               	movlw	241
  8648  0014CC  5DE3               	subwf	__bootloader_verify_file@return_value& (0+255),w,b
  8649  0014CE  0EFF               	movlw	255
  8650  0014D0  59E4               	subwfb	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  8651  0014D2  0EFF               	movlw	255
  8652  0014D4  59E5               	subwfb	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  8653  0014D6  0EFF               	movlw	255
  8654  0014D8  59E6               	subwfb	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  8655  0014DA  A0D8               	btfss	status,0,c
  8656  0014DC  D007               	goto	l2336
  8657                           
  8658                           ; BSR set to: 0
  8659                           ;bootloader.c: 253: {;bootloader.c: 255: last_error = return_value & 0xF;
  8660  0014DE  51E3               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  8661  0014E0  0B0F               	andlw	15
  8662  0014E2  6F96               	movwf	_last_error& (0+255),b
  8663                           
  8664                           ; BSR set to: 0
  8665                           ;bootloader.c: 257: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  8666  0014E4  0E50               	movlw	80
  8667  0014E6  6F64               	movwf	(_os+4)& (0+255),b	;volatile
  8668                           
  8669                           ; BSR set to: 0
  8670                           ;bootloader.c: 258: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  8671  0014E8  0E50               	movlw	80
  8672  0014EA  D7ED               	goto	L1
  8673  0014EC                     l2336:
  8674                           
  8675                           ; BSR set to: 0
  8676                           ;bootloader.c: 261: else;bootloader.c: 262: {;bootloader.c: 264: hex_file_offset += retu
      +                          rn_value;
  8677                           
  8678                           ; BSR set to: 0
  8679  0014EC  51E3               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  8680  0014EE  277C               	addwf	_hex_file_offset& (0+255),f,b
  8681  0014F0  51E4               	movf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  8682  0014F2  237D               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  8683  0014F4  51E5               	movf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  8684  0014F6  237E               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  8685  0014F8  51E6               	movf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  8686  0014FA  237F               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  8687                           
  8688                           ; BSR set to: 0
  8689                           
  8690                           ; BSR set to: 0
  8691                           
  8692                           ; BSR set to: 0
  8693  0014FC  2BE2               	incf	__bootloader_verify_file@rec_counter& (0+255),f,b
  8694  0014FE  D6AD               	goto	l14191
  8695  001500                     __end_of__bootloader_verify_file:
  8696                           	opt stack 0
  8697                           tblptru	equ	0xFF8
  8698                           tblptrh	equ	0xFF7
  8699                           tblptrl	equ	0xFF6
  8700                           tablat	equ	0xFF5
  8701                           intcon	equ	0xFF2
  8702                           intcon2	equ	0xFF1
  8703                           intcon3	equ	0xFF0
  8704                           postinc0	equ	0xFEE
  8705                           wreg	equ	0xFE8
  8706                           postdec1	equ	0xFE5
  8707                           plusw1	equ	0xFE3
  8708                           fsr1h	equ	0xFE2
  8709                           fsr1l	equ	0xFE1
  8710                           indf2	equ	0xFDF
  8711                           postinc2	equ	0xFDE
  8712                           plusw2	equ	0xFDB
  8713                           fsr2h	equ	0xFDA
  8714                           fsr2l	equ	0xFD9
  8715                           status	equ	0xFD8
  8716                           
  8717 ;; *************** function __bootloader_program *****************
  8718 ;; Defined at:
  8719 ;;		line 269 in file "bootloader.c"
  8720 ;; Parameters:    Size  Location     Type
  8721 ;;		None
  8722 ;; Auto vars:     Size  Location     Type
  8723 ;;  address32       4   55[BANK0 ] unsigned long 
  8724 ;;  return_value    4   51[BANK0 ] unsigned long 
  8725 ;;  page_to_writ    2   62[BANK0 ] unsigned int 
  8726 ;;  cntr            2   60[BANK0 ] unsigned int 
  8727 ;;  address_with    2   49[BANK0 ] unsigned int 
  8728 ;;  entry_page      2   47[BANK0 ] unsigned int 
  8729 ;;  buffer          2   45[BANK0 ] PTR unsigned char 
  8730 ;;		 -> pageBuffer(1024), 
  8731 ;;  start_from_b    1   59[BANK0 ] unsigned char 
  8732 ;; Return value:  Size  Location     Type
  8733 ;;                  1    wreg      void 
  8734 ;; Registers used:
  8735 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8736 ;; Tracked objects:
  8737 ;;		On entry : 0/0
  8738 ;;		On exit  : 0/0
  8739 ;;		Unchanged: 0/0
  8740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8742 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8743 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8744 ;;      Totals:         8      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8745 ;;Total ram usage:       27 bytes
  8746 ;; Hardware stack levels used:    1
  8747 ;; Hardware stack levels required when called:    8
  8748 ;; This function calls:
  8749 ;;		__bootloader_check_address
  8750 ;;		_fat_read_from_file
  8751 ;;		_internalFlash_addressWithinPage
  8752 ;;		_internalFlash_erasePage
  8753 ;;		_internalFlash_getBuffer
  8754 ;;		_internalFlash_pageFromAddress
  8755 ;;		_internalFlash_readPage
  8756 ;;		_internalFlash_writePage
  8757 ;;		_parseHexFileEntry
  8758 ;; This function is called by:
  8759 ;;		_bootloader_run
  8760 ;; This function uses a non-reentrant model
  8761 ;;
  8762                           
  8763                           	psect	text35
  8764  00085A                     __ptext35:
  8765                           	opt stack 0
  8766  00085A                     __bootloader_program:
  8767                           	opt stack 21
  8768                           
  8769                           ;bootloader.c: 271: uint16_t cntr;;bootloader.c: 272: uint8_t* buffer;;bootloader.c: 273
      +                          : uint16_t entry_page;;bootloader.c: 274: uint16_t page_to_write = 0;
  8770                           
  8771                           ; BSR set to: 0
  8772                           ;incstack = 0
  8773  00085A  0E00               	movlw	0
  8774  00085C  0100               	movlb	0	; () banked
  8775  00085E  6FF4               	movwf	(__bootloader_program@page_to_write+1)& (0+255),b
  8776  000860  0E00               	movlw	0
  8777  000862  6FF3               	movwf	__bootloader_program@page_to_write& (0+255),b
  8778                           
  8779                           ;bootloader.c: 275: uint8_t start_from_byte;;bootloader.c: 276: uint32_t address32;;boot
      +                          loader.c: 277: uint32_t return_value = 0;
  8780  000864  0E00               	movlw	0
  8781  000866  6FE8               	movwf	__bootloader_program@return_value& (0+255),b
  8782  000868  0E00               	movlw	0
  8783  00086A  6FE9               	movwf	(__bootloader_program@return_value+1)& (0+255),b
  8784  00086C  0E00               	movlw	0
  8785  00086E  6FEA               	movwf	(__bootloader_program@return_value+2)& (0+255),b
  8786  000870  0E00               	movlw	0
  8787  000872  6FEB               	movwf	(__bootloader_program@return_value+3)& (0+255),b
  8788  000874                     l2341:
  8789  000874  0004               	clrwdt		;# 
  8790                           
  8791                           ;bootloader.c: 287: if((hex_file_size-hex_file_offset)>=50)
  8792  000876  C07C  F055         	movff	_hex_file_offset,??__bootloader_program
  8793  00087A  C07D  F056         	movff	_hex_file_offset+1,??__bootloader_program+1
  8794  00087E  C07E  F057         	movff	_hex_file_offset+2,??__bootloader_program+2
  8795  000882  C07F  F058         	movff	_hex_file_offset+3,??__bootloader_program+3
  8796  000886  1E55               	comf	??__bootloader_program,f,c
  8797  000888  1E56               	comf	??__bootloader_program+1,f,c
  8798  00088A  1E57               	comf	??__bootloader_program+2,f,c
  8799  00088C  1E58               	comf	??__bootloader_program+3,f,c
  8800  00088E  2A55               	incf	??__bootloader_program,f,c
  8801  000890  0E00               	movlw	0
  8802  000892  2256               	addwfc	??__bootloader_program+1,f,c
  8803  000894  2257               	addwfc	??__bootloader_program+2,f,c
  8804  000896  2258               	addwfc	??__bootloader_program+3,f,c
  8805  000898  0100               	movlb	0	; () banked
  8806  00089A  5178               	movf	_hex_file_size& (0+255),w,b
  8807  00089C  2455               	addwf	??__bootloader_program,w,c
  8808  00089E  6E59               	movwf	(??__bootloader_program+4)& (0+255),c
  8809  0008A0  5179               	movf	(_hex_file_size+1)& (0+255),w,b
  8810  0008A2  2056               	addwfc	??__bootloader_program+1,w,c
  8811  0008A4  6E5A               	movwf	(??__bootloader_program+5)& (0+255),c
  8812  0008A6  517A               	movf	(_hex_file_size+2)& (0+255),w,b
  8813  0008A8  2057               	addwfc	??__bootloader_program+2,w,c
  8814  0008AA  6E5B               	movwf	(??__bootloader_program+6)& (0+255),c
  8815  0008AC  517B               	movf	(_hex_file_size+3)& (0+255),w,b
  8816  0008AE  2058               	addwfc	??__bootloader_program+3,w,c
  8817  0008B0  6E5C               	movwf	(??__bootloader_program+7)& (0+255),c
  8818  0008B2  505C               	movf	??__bootloader_program+7,w,c
  8819  0008B4  105B               	iorwf	??__bootloader_program+6,w,c
  8820  0008B6  105A               	iorwf	??__bootloader_program+5,w,c
  8821  0008B8  E104               	bnz	u11150
  8822  0008BA  0E32               	movlw	50
  8823  0008BC  5C59               	subwf	??__bootloader_program+4,w,c
  8824  0008BE  A0D8               	btfss	status,0,c
  8825  0008C0  D018               	goto	l2342
  8826  0008C2                     u11150:
  8827                           
  8828                           ; BSR set to: 0
  8829                           ;bootloader.c: 288: {;bootloader.c: 289: fat_read_from_file(file_number, hex_file_offset
      +                          , 50, file_buffer);
  8830  0008C2  C07C  F03F         	movff	_hex_file_offset,fat_read_from_file@start_byte
  8831  0008C6  C07D  F040         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
  8832  0008CA  C07E  F041         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
  8833  0008CE  C07F  F042         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
  8834  0008D2  0E32               	movlw	50
  8835  0008D4  6E43               	movwf	fat_read_from_file@length,c
  8836  0008D6  0E00               	movlw	0
  8837  0008D8  6E44               	movwf	fat_read_from_file@length+1,c
  8838  0008DA  0E00               	movlw	0
  8839  0008DC  6E45               	movwf	fat_read_from_file@length+2,c
  8840  0008DE  0E00               	movlw	0
  8841  0008E0  6E46               	movwf	fat_read_from_file@length+3,c
  8842  0008E2  0EC0               	movlw	low _file_buffer
  8843  0008E4  6E47               	movwf	fat_read_from_file@data,c
  8844  0008E6  0E02               	movlw	high _file_buffer
  8845  0008E8  6E48               	movwf	fat_read_from_file@data+1,c
  8846  0008EA  51FE               	movf	_file_number& (0+255),w,b
  8847  0008EC  EC7A  F00F         	call	_fat_read_from_file
  8848                           
  8849                           ;bootloader.c: 290: }
  8850  0008F0  D02D               	goto	l2343
  8851  0008F2                     l2342:
  8852                           
  8853                           ;bootloader.c: 291: else;bootloader.c: 292: {;bootloader.c: 293: fat_read_from_file(file
      +                          _number, hex_file_offset, (hex_file_size-hex_file_offset), file_buffer);
  8854  0008F2  C07C  F03F         	movff	_hex_file_offset,fat_read_from_file@start_byte
  8855  0008F6  C07D  F040         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
  8856  0008FA  C07E  F041         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
  8857  0008FE  C07F  F042         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
  8858  000902  C07C  F055         	movff	_hex_file_offset,??__bootloader_program
  8859  000906  C07D  F056         	movff	_hex_file_offset+1,??__bootloader_program+1
  8860  00090A  C07E  F057         	movff	_hex_file_offset+2,??__bootloader_program+2
  8861  00090E  C07F  F058         	movff	_hex_file_offset+3,??__bootloader_program+3
  8862  000912  1E55               	comf	??__bootloader_program,f,c
  8863  000914  1E56               	comf	??__bootloader_program+1,f,c
  8864  000916  1E57               	comf	??__bootloader_program+2,f,c
  8865  000918  1E58               	comf	??__bootloader_program+3,f,c
  8866  00091A  2A55               	incf	??__bootloader_program,f,c
  8867  00091C  0E00               	movlw	0
  8868  00091E  2256               	addwfc	??__bootloader_program+1,f,c
  8869  000920  2257               	addwfc	??__bootloader_program+2,f,c
  8870  000922  2258               	addwfc	??__bootloader_program+3,f,c
  8871  000924  0100               	movlb	0	; () banked
  8872  000926  5178               	movf	_hex_file_size& (0+255),w,b
  8873  000928  2455               	addwf	??__bootloader_program,w,c
  8874  00092A  6E43               	movwf	fat_read_from_file@length,c
  8875  00092C  5179               	movf	(_hex_file_size+1)& (0+255),w,b
  8876  00092E  2056               	addwfc	??__bootloader_program+1,w,c
  8877  000930  6E44               	movwf	fat_read_from_file@length+1,c
  8878  000932  517A               	movf	(_hex_file_size+2)& (0+255),w,b
  8879  000934  2057               	addwfc	??__bootloader_program+2,w,c
  8880  000936  6E45               	movwf	fat_read_from_file@length+2,c
  8881  000938  517B               	movf	(_hex_file_size+3)& (0+255),w,b
  8882  00093A  2058               	addwfc	??__bootloader_program+3,w,c
  8883  00093C  6E46               	movwf	fat_read_from_file@length+3,c
  8884  00093E  0EC0               	movlw	low _file_buffer
  8885  000940  6E47               	movwf	fat_read_from_file@data,c
  8886  000942  0E02               	movlw	high _file_buffer
  8887  000944  6E48               	movwf	fat_read_from_file@data+1,c
  8888  000946  51FE               	movf	_file_number& (0+255),w,b
  8889  000948  EC7A  F00F         	call	_fat_read_from_file
  8890  00094C                     l2343:
  8891                           
  8892                           ;bootloader.c: 294: };bootloader.c: 297: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  8893  00094C  0EC0               	movlw	low _file_buffer
  8894  00094E  6E0C               	movwf	parseHexFileEntry@data,c
  8895  000950  0E02               	movlw	high _file_buffer
  8896  000952  6E0D               	movwf	parseHexFileEntry@data+1,c
  8897  000954  0E00               	movlw	0
  8898  000956  6E0E               	movwf	parseHexFileEntry@offset,c
  8899  000958  0E00               	movlw	0
  8900  00095A  6E0F               	movwf	parseHexFileEntry@offset+1,c
  8901  00095C  0E00               	movlw	0
  8902  00095E  6E10               	movwf	parseHexFileEntry@offset+2,c
  8903  000960  0E00               	movlw	0
  8904  000962  6E11               	movwf	parseHexFileEntry@offset+3,c
  8905  000964  0EC6               	movlw	low _hex_file_entry
  8906  000966  6E12               	movwf	parseHexFileEntry@hexEntry,c
  8907  000968  0E01               	movlw	high _hex_file_entry
  8908  00096A  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  8909  00096C  EC10  F000         	call	_parseHexFileEntry	;wreg free
  8910  000970  C00C  F0E8         	movff	?_parseHexFileEntry,__bootloader_program@return_value
  8911  000974  C00D  F0E9         	movff	?_parseHexFileEntry+1,__bootloader_program@return_value+1
  8912  000978  C00E  F0EA         	movff	?_parseHexFileEntry+2,__bootloader_program@return_value+2
  8913  00097C  C00F  F0EB         	movff	?_parseHexFileEntry+3,__bootloader_program@return_value+3
  8914                           
  8915                           ;bootloader.c: 300: ++hex_file_entries;
  8916  000980  0101               	movlb	1	; () banked
  8917  000982  4B6A               	infsnz	_hex_file_entries& (0+255),f,b
  8918  000984  2B6B               	incf	(_hex_file_entries+1)& (0+255),f,b
  8919                           
  8920                           ; BSR set to: 1
  8921                           ;bootloader.c: 303: if(return_value>RecordErrorNoError)
  8922  000986  0EF1               	movlw	241
  8923  000988  0100               	movlb	0	; () banked
  8924  00098A  5DE8               	subwf	__bootloader_program@return_value& (0+255),w,b
  8925  00098C  0EFF               	movlw	255
  8926  00098E  59E9               	subwfb	(__bootloader_program@return_value+1)& (0+255),w,b
  8927  000990  0EFF               	movlw	255
  8928  000992  59EA               	subwfb	(__bootloader_program@return_value+2)& (0+255),w,b
  8929  000994  0EFF               	movlw	255
  8930  000996  59EB               	subwfb	(__bootloader_program@return_value+3)& (0+255),w,b
  8931  000998  A0D8               	btfss	status,0,c
  8932  00099A  D005               	goto	l2344
  8933                           
  8934                           ; BSR set to: 0
  8935                           ;bootloader.c: 304: {;bootloader.c: 306: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAIL
      +                          ED;
  8936  00099C  0E50               	movlw	80
  8937  00099E  6F64               	movwf	(_os+4)& (0+255),b	;volatile
  8938                           
  8939                           ;bootloader.c: 307: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  8940  0009A0  0E50               	movlw	80
  8941  0009A2  6F65               	movwf	(_os+5)& (0+255),b	;volatile
  8942                           
  8943                           ; BSR set to: 0
  8944                           ;bootloader.c: 308: return;
  8945  0009A4  0012               	return	
  8946  0009A6                     l2344:
  8947                           
  8948                           ; BSR set to: 0
  8949                           ;bootloader.c: 310: else;bootloader.c: 311: {;bootloader.c: 313: hex_file_offset += retu
      +                          rn_value;
  8950                           
  8951                           ; BSR set to: 0
  8952  0009A6  51E8               	movf	__bootloader_program@return_value& (0+255),w,b
  8953  0009A8  277C               	addwf	_hex_file_offset& (0+255),f,b
  8954  0009AA  51E9               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  8955  0009AC  237D               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  8956  0009AE  51EA               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  8957  0009B0  237E               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  8958  0009B2  51EB               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  8959  0009B4  237F               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  8960                           
  8961                           ; BSR set to: 0
  8962                           ;bootloader.c: 314: };bootloader.c: 316: switch(hex_file_entry.recordType)
  8963  0009B6  D0FC               	goto	l2347
  8964  0009B8                     
  8965                           ;bootloader.c: 322: extended_linear_address = hex_file_entry.data[0];
  8966                           
  8967                           ; BSR set to: 0
  8968  0009B8  0101               	movlb	1	; () banked
  8969  0009BA  51CB               	movf	(_hex_file_entry+5)& (0+255),w,b
  8970  0009BC  6F40               	movwf	_extended_linear_address& (0+255),b
  8971  0009BE  6B41               	clrf	(_extended_linear_address+1)& (0+255),b
  8972  0009C0  6B42               	clrf	(_extended_linear_address+2)& (0+255),b
  8973  0009C2  6B43               	clrf	(_extended_linear_address+3)& (0+255),b
  8974                           
  8975                           ; BSR set to: 1
  8976                           ;bootloader.c: 323: extended_linear_address <<= 8;
  8977  0009C4  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
  8978  0009C8  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
  8979  0009CC  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
  8980  0009D0  6B40               	clrf	_extended_linear_address& (0+255),b
  8981                           
  8982                           ; BSR set to: 1
  8983                           ;bootloader.c: 324: extended_linear_address |= hex_file_entry.data[1];
  8984  0009D2  51CC               	movf	(_hex_file_entry+6)& (0+255),w,b
  8985  0009D4  1340               	iorwf	_extended_linear_address& (0+255),f,b
  8986                           
  8987                           ; BSR set to: 1
  8988                           ;bootloader.c: 325: extended_linear_address <<= 8;
  8989  0009D6  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
  8990  0009DA  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
  8991  0009DE  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
  8992  0009E2  6B40               	clrf	_extended_linear_address& (0+255),b
  8993                           
  8994                           ; BSR set to: 1
  8995                           ;bootloader.c: 326: extended_linear_address <<= 8;
  8996  0009E4  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
  8997  0009E8  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
  8998  0009EC  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
  8999  0009F0  6B40               	clrf	_extended_linear_address& (0+255),b
  9000                           
  9001                           ; BSR set to: 1
  9002                           ;bootloader.c: 328: break;
  9003                           
  9004                           ;bootloader.c: 327: continue;
  9005  0009F2  D740               	goto	l2341
  9006  0009F4                     l2351:
  9007                           
  9008                           ; BSR set to: 1
  9009                           ;bootloader.c: 333: start_from_byte = start_from_byte_next;
  9010  0009F4  C095  F0F0         	movff	_start_from_byte_next,__bootloader_program@start_from_byte
  9011                           
  9012                           ; BSR set to: 1
  9013                           ;bootloader.c: 335: start_from_byte_next = 0;
  9014  0009F8  0E00               	movlw	0
  9015  0009FA  0100               	movlb	0	; () banked
  9016  0009FC  6F95               	movwf	_start_from_byte_next& (0+255),b
  9017                           
  9018                           ; BSR set to: 0
  9019                           ;bootloader.c: 338: address32 = extended_linear_address + hex_file_entry.address;
  9020  0009FE  0101               	movlb	1	; () banked
  9021  000A00  51C8               	movf	(_hex_file_entry+2)& (0+255),w,b
  9022  000A02  2540               	addwf	_extended_linear_address& (0+255),w,b
  9023  000A04  0100               	movlb	0	; () banked
  9024  000A06  6FEC               	movwf	__bootloader_program@address32& (0+255),b
  9025  000A08  0101               	movlb	1	; () banked
  9026  000A0A  51C9               	movf	(_hex_file_entry+3)& (0+255),w,b
  9027  000A0C  2141               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  9028  000A0E  0100               	movlb	0	; () banked
  9029  000A10  6FED               	movwf	(__bootloader_program@address32+1)& (0+255),b
  9030  000A12  0E00               	movlw	0
  9031  000A14  0101               	movlb	1	; () banked
  9032  000A16  2142               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  9033  000A18  0100               	movlb	0	; () banked
  9034  000A1A  6FEE               	movwf	(__bootloader_program@address32+2)& (0+255),b
  9035  000A1C  0E00               	movlw	0
  9036  000A1E  0101               	movlb	1	; () banked
  9037  000A20  2143               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  9038  000A22  0100               	movlb	0	; () banked
  9039  000A24  6FEF               	movwf	(__bootloader_program@address32+3)& (0+255),b
  9040                           
  9041                           ; BSR set to: 0
  9042                           ;bootloader.c: 339: entry_page = internalFlash_pageFromAddress(address32 + start_from_by
      +                          te);
  9043  000A26  51F0               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  9044  000A28  25EC               	addwf	__bootloader_program@address32& (0+255),w,b
  9045  000A2A  6E01               	movwf	internalFlash_pageFromAddress@address,c
  9046  000A2C  0E00               	movlw	0
  9047  000A2E  21ED               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  9048  000A30  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  9049  000A32  0E00               	movlw	0
  9050  000A34  21EE               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  9051  000A36  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  9052  000A38  0E00               	movlw	0
  9053  000A3A  21EF               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  9054  000A3C  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  9055  000A3E  EC53  F03F         	call	_internalFlash_pageFromAddress	;wreg free
  9056  000A42  C001  F0E4         	movff	?_internalFlash_pageFromAddress,__bootloader_program@entry_page
  9057  000A46  C002  F0E5         	movff	?_internalFlash_pageFromAddress+1,__bootloader_program@entry_page+1
  9058                           
  9059                           ;bootloader.c: 342: if(_bootloader_check_address(address32+start_from_byte, hex_file_ent
      +                          ry.dataLength-start_from_byte) != ADDRESS_CHECK_RESULT_OK)
  9060  000A4A  0100               	movlb	0	; () banked
  9061  000A4C  51F0               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  9062  000A4E  25EC               	addwf	__bootloader_program@address32& (0+255),w,b
  9063  000A50  6E01               	movwf	__bootloader_check_address@address,c
  9064  000A52  0E00               	movlw	0
  9065  000A54  21ED               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  9066  000A56  6E02               	movwf	__bootloader_check_address@address+1,c
  9067  000A58  0E00               	movlw	0
  9068  000A5A  21EE               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  9069  000A5C  6E03               	movwf	__bootloader_check_address@address+2,c
  9070  000A5E  0E00               	movlw	0
  9071  000A60  21EF               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  9072  000A62  6E04               	movwf	__bootloader_check_address@address+3,c
  9073  000A64  51F0               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  9074  000A66  0800               	sublw	0
  9075  000A68  0101               	movlb	1	; () banked
  9076  000A6A  25C6               	addwf	_hex_file_entry& (0+255),w,b
  9077  000A6C  6E05               	movwf	__bootloader_check_address@dataLength,c
  9078  000A6E  EC51  F027         	call	__bootloader_check_address	;wreg free
  9079  000A72  0900               	iorlw	0
  9080  000A74  A4D8               	btfss	status,2,c
  9081  000A76  D6FE               	goto	l2341
  9082                           
  9083                           ;bootloader.c: 345: };bootloader.c: 347: if(page_to_write==0)
  9084                           
  9085                           ;bootloader.c: 343: {;bootloader.c: 344: break;
  9086  000A78  0100               	movlb	0	; () banked
  9087  000A7A  51F3               	movf	__bootloader_program@page_to_write& (0+255),w,b
  9088  000A7C  11F4               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  9089  000A7E  A4D8               	btfss	status,2,c
  9090  000A80  D010               	goto	l2353
  9091                           
  9092                           ; BSR set to: 0
  9093                           ;bootloader.c: 348: {;bootloader.c: 352: page_to_write = entry_page;
  9094  000A82  C0E4  F0F3         	movff	__bootloader_program@entry_page,__bootloader_program@page_to_write
  9095  000A86  C0E5  F0F4         	movff	__bootloader_program@entry_page+1,__bootloader_program@page_to_write+1
  9096                           
  9097                           ; BSR set to: 0
  9098                           ;bootloader.c: 353: internalFlash_readPage(page_to_write);
  9099  000A8A  C0F3  F016         	movff	__bootloader_program@page_to_write,internalFlash_readPage@page
  9100  000A8E  C0F4  F017         	movff	__bootloader_program@page_to_write+1,internalFlash_readPage@page+1
  9101  000A92  EC90  F03B         	call	_internalFlash_readPage	;wreg free
  9102                           
  9103                           ;bootloader.c: 354: buffer = internalFlash_getBuffer();
  9104  000A96  EC16  F040         	call	_internalFlash_getBuffer	;wreg free
  9105  000A9A  C001  F0E2         	movff	?_internalFlash_getBuffer,__bootloader_program@buffer
  9106  000A9E  C002  F0E3         	movff	?_internalFlash_getBuffer+1,__bootloader_program@buffer+1
  9107  000AA2                     l2353:
  9108                           
  9109                           ;bootloader.c: 355: };bootloader.c: 357: for(cntr=start_from_byte; cntr<hex_file_entry.d
      +                          ataLength; ++cntr)
  9110  000AA2  C0F0  F0F1         	movff	__bootloader_program@start_from_byte,__bootloader_program@cntr
  9111  000AA6  0100               	movlb	0	; () banked
  9112  000AA8  6BF2               	clrf	(__bootloader_program@cntr+1)& (0+255),b
  9113  000AAA  D05D               	goto	l2354
  9114  000AAC                     
  9115                           ; BSR set to: 0
  9116                           ;bootloader.c: 358: {;bootloader.c: 361: if(internalFlash_pageFromAddress(address32+cntr
      +                          ) == page_to_write)
  9117                           
  9118                           ; BSR set to: 0
  9119  000AAC  51F1               	movf	__bootloader_program@cntr& (0+255),w,b
  9120  000AAE  25EC               	addwf	__bootloader_program@address32& (0+255),w,b
  9121  000AB0  6E01               	movwf	internalFlash_pageFromAddress@address,c
  9122  000AB2  51F2               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  9123  000AB4  21ED               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  9124  000AB6  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  9125  000AB8  0E00               	movlw	0
  9126  000ABA  21EE               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  9127  000ABC  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  9128  000ABE  0E00               	movlw	0
  9129  000AC0  21EF               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  9130  000AC2  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  9131  000AC4  EC53  F03F         	call	_internalFlash_pageFromAddress	;wreg free
  9132  000AC8  0100               	movlb	0	; () banked
  9133  000ACA  51F3               	movf	__bootloader_program@page_to_write& (0+255),w,b
  9134  000ACC  1801               	xorwf	?_internalFlash_pageFromAddress,w,c
  9135  000ACE  E12A               	bnz	l14315
  9136  000AD0  51F4               	movf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  9137  000AD2  1802               	xorwf	?_internalFlash_pageFromAddress+1,w,c
  9138  000AD4  A4D8               	btfss	status,2,c
  9139  000AD6  D026               	goto	l2356
  9140                           
  9141                           ; BSR set to: 0
  9142                           ;bootloader.c: 362: {;bootloader.c: 363: address_within_page = internalFlash_addressWith
      +                          inPage(address32+cntr, page_to_write);
  9143  000AD8  51F1               	movf	__bootloader_program@cntr& (0+255),w,b
  9144  000ADA  25EC               	addwf	__bootloader_program@address32& (0+255),w,b
  9145  000ADC  6E09               	movwf	internalFlash_addressWithinPage@address,c
  9146  000ADE  51F2               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  9147  000AE0  21ED               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  9148  000AE2  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
  9149  000AE4  0E00               	movlw	0
  9150  000AE6  21EE               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  9151  000AE8  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
  9152  000AEA  0E00               	movlw	0
  9153  000AEC  21EF               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  9154  000AEE  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
  9155  000AF0  C0F3  F00D         	movff	__bootloader_program@page_to_write,internalFlash_addressWithinPage@page
  9156  000AF4  C0F4  F00E         	movff	__bootloader_program@page_to_write+1,internalFlash_addressWithinPage@page+1
  9157  000AF8  EC43  F037         	call	_internalFlash_addressWithinPage	;wreg free
  9158  000AFC  C009  F0E6         	movff	?_internalFlash_addressWithinPage,__bootloader_program@address_within_page
  9159  000B00  C00A  F0E7         	movff	?_internalFlash_addressWithinPage+1,__bootloader_program@address_within_page+1
  9160                           
  9161                           ;bootloader.c: 364: buffer[address_within_page] = hex_file_entry.data[cntr];
  9162  000B04  0ECB               	movlw	low (_hex_file_entry+5)
  9163  000B06  0100               	movlb	0	; () banked
  9164  000B08  25F1               	addwf	__bootloader_program@cntr& (0+255),w,b
  9165  000B0A  6ED9               	movwf	fsr2l,c
  9166  000B0C  0E01               	movlw	high (_hex_file_entry+5)
  9167  000B0E  21F2               	addwfc	(__bootloader_program@cntr+1)& (0+255),w,b
  9168  000B10  6EDA               	movwf	fsr2h,c
  9169  000B12  51E6               	movf	__bootloader_program@address_within_page& (0+255),w,b
  9170  000B14  25E2               	addwf	__bootloader_program@buffer& (0+255),w,b
  9171  000B16  6EE1               	movwf	fsr1l,c
  9172  000B18  51E7               	movf	(__bootloader_program@address_within_page+1)& (0+255),w,b
  9173  000B1A  21E3               	addwfc	(__bootloader_program@buffer+1)& (0+255),w,b
  9174  000B1C  6EE2               	movwf	fsr1h,c
  9175  000B1E  CFDF FFE7          	movff	indf2,indf1
  9176                           
  9177                           ;bootloader.c: 365: }
  9178  000B22  D01E               	goto	l2357
  9179  000B24                     l2356:
  9180  000B24                     l14315:
  9181                           
  9182                           ; BSR set to: 0
  9183                           ;bootloader.c: 366: else;bootloader.c: 367: {;bootloader.c: 369: hex_file_offset -= retu
      +                          rn_value;
  9184  000B24  51E8               	movf	__bootloader_program@return_value& (0+255),w,b
  9185  000B26  5F7C               	subwf	_hex_file_offset& (0+255),f,b
  9186  000B28  51E9               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  9187  000B2A  5B7D               	subwfb	(_hex_file_offset+1)& (0+255),f,b
  9188  000B2C  51EA               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  9189  000B2E  5B7E               	subwfb	(_hex_file_offset+2)& (0+255),f,b
  9190  000B30  51EB               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  9191  000B32  5B7F               	subwfb	(_hex_file_offset+3)& (0+255),f,b
  9192                           
  9193                           ; BSR set to: 0
  9194                           ;bootloader.c: 370: --hex_file_entries;
  9195  000B34  0101               	movlb	1	; () banked
  9196  000B36  076A               	decf	_hex_file_entries& (0+255),f,b
  9197  000B38  A0D8               	btfss	status,0,c
  9198  000B3A  076B               	decf	(_hex_file_entries+1)& (0+255),f,b
  9199                           
  9200                           ; BSR set to: 1
  9201                           ;bootloader.c: 372: start_from_byte_next = cntr;
  9202  000B3C  C0F1  F095         	movff	__bootloader_program@cntr,_start_from_byte_next
  9203                           
  9204                           ; BSR set to: 1
  9205                           ;bootloader.c: 374: internalFlash_erasePage(page_to_write);
  9206  000B40  C0F3  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  9207  000B44  C0F4  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  9208  000B48  ECF9  F03C         	call	_internalFlash_erasePage	;wreg free
  9209                           
  9210                           ;bootloader.c: 375: internalFlash_writePage(page_to_write);
  9211  000B4C  C0F3  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  9212  000B50  C0F4  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  9213  000B54  ECEE  F032         	call	_internalFlash_writePage	;wreg free
  9214                           
  9215                           ;bootloader.c: 376: ++flash_pages_written;
  9216  000B58  0101               	movlb	1	; () banked
  9217  000B5A  4B66               	infsnz	_flash_pages_written& (0+255),f,b
  9218  000B5C  2B67               	incf	(_flash_pages_written+1)& (0+255),f,b
  9219                           
  9220                           ; BSR set to: 1
  9221                           ;bootloader.c: 378: return;
  9222  000B5E  0012               	return	
  9223  000B60                     l2357:
  9224                           
  9225                           ; BSR set to: 1
  9226  000B60  0100               	movlb	0	; () banked
  9227  000B62  4BF1               	infsnz	__bootloader_program@cntr& (0+255),f,b
  9228  000B64  2BF2               	incf	(__bootloader_program@cntr+1)& (0+255),f,b
  9229  000B66                     l2354:
  9230                           
  9231                           ; BSR set to: 0
  9232                           
  9233                           ; BSR set to: 0
  9234  000B66  0101               	movlb	1	; () banked
  9235  000B68  51C6               	movf	_hex_file_entry& (0+255),w,b
  9236  000B6A  0100               	movlb	0	; () banked
  9237  000B6C  5DF1               	subwf	__bootloader_program@cntr& (0+255),w,b
  9238  000B6E  0101               	movlb	1	; () banked
  9239  000B70  51C7               	movf	(_hex_file_entry+1)& (0+255),w,b
  9240  000B72  0100               	movlb	0	; () banked
  9241  000B74  59F2               	subwfb	(__bootloader_program@cntr+1)& (0+255),w,b
  9242  000B76  B0D8               	btfsc	status,0,c
  9243  000B78  D67D               	goto	l2341
  9244  000B7A  D798               	goto	l2355
  9245  000B7C                     
  9246                           ;bootloader.c: 386: if(page_to_write!=0)
  9247                           
  9248                           ; BSR set to: 0
  9249  000B7C  0100               	movlb	0	; () banked
  9250  000B7E  51F3               	movf	__bootloader_program@page_to_write& (0+255),w,b
  9251  000B80  11F4               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  9252  000B82  B4D8               	btfsc	status,2,c
  9253  000B84  0012               	return	
  9254                           
  9255                           ; BSR set to: 0
  9256                           ;bootloader.c: 387: {;bootloader.c: 389: internalFlash_erasePage(page_to_write);
  9257  000B86  C0F3  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  9258  000B8A  C0F4  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  9259  000B8E  ECF9  F03C         	call	_internalFlash_erasePage	;wreg free
  9260                           
  9261                           ;bootloader.c: 390: internalFlash_writePage(page_to_write);
  9262  000B92  C0F3  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  9263  000B96  C0F4  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  9264  000B9A  ECEE  F032         	call	_internalFlash_writePage	;wreg free
  9265                           
  9266                           ;bootloader.c: 391: ++flash_pages_written;
  9267  000B9E  0101               	movlb	1	; () banked
  9268  000BA0  4B66               	infsnz	_flash_pages_written& (0+255),f,b
  9269  000BA2  2B67               	incf	(_flash_pages_written+1)& (0+255),f,b
  9270                           
  9271                           ; BSR set to: 1
  9272                           ;bootloader.c: 393: os.bootloader_mode = BOOTLOADER_MODE_DONE;
  9273  000BA4  0E70               	movlw	112
  9274  000BA6  0100               	movlb	0	; () banked
  9275  000BA8  6F64               	movwf	(_os+4)& (0+255),b	;volatile
  9276                           
  9277                           ; BSR set to: 0
  9278                           ;bootloader.c: 394: os.display_mode = DISPLAY_MODE_BOOTLOADER_DONE;
  9279  000BAA  0E70               	movlw	112
  9280  000BAC  6F65               	movwf	(_os+5)& (0+255),b	;volatile
  9281                           
  9282                           ; BSR set to: 0
  9283                           ;bootloader.c: 395: };bootloader.c: 397: return;
  9284                           
  9285                           ; BSR set to: 0
  9286  000BAE  0012               	return	
  9287  000BB0                     l2347:
  9288                           
  9289                           ; BSR set to: 0
  9290                           
  9291                           ; BSR set to: 0
  9292  000BB0  0101               	movlb	1	; () banked
  9293  000BB2  51CA               	movf	(_hex_file_entry+4)& (0+255),w,b
  9294                           
  9295                           ; Switch size 1, requested type "space"
  9296                           ; Number of cases is 3, Range of values is 0 to 4
  9297                           ; switch strategies available:
  9298                           ; Name         Instructions Cycles
  9299                           ; simple_byte           10     6 (average)
  9300                           ;	Chosen strategy is simple_byte
  9301  000BB4  0A00               	xorlw	0	; case 0
  9302  000BB6  B4D8               	btfsc	status,2,c
  9303  000BB8  D71D               	goto	l2351
  9304  000BBA  0A01               	xorlw	1	; case 1
  9305  000BBC  B4D8               	btfsc	status,2,c
  9306  000BBE  D7DE               	goto	l2359
  9307  000BC0  0A05               	xorlw	5	; case 4
  9308  000BC2  B4D8               	btfsc	status,2,c
  9309  000BC4  D6F9               	goto	l2348
  9310                           
  9311                           ; BSR set to: 1
  9312                           
  9313                           ; BSR set to: 1
  9314  000BC6  D656               	goto	l2341
  9315  000BC8                     __end_of__bootloader_program:
  9316                           	opt stack 0
  9317                           tblptru	equ	0xFF8
  9318                           tblptrh	equ	0xFF7
  9319                           tblptrl	equ	0xFF6
  9320                           tablat	equ	0xFF5
  9321                           intcon	equ	0xFF2
  9322                           intcon2	equ	0xFF1
  9323                           intcon3	equ	0xFF0
  9324                           postinc0	equ	0xFEE
  9325                           wreg	equ	0xFE8
  9326                           indf1	equ	0xFE7
  9327                           postdec1	equ	0xFE5
  9328                           plusw1	equ	0xFE3
  9329                           fsr1h	equ	0xFE2
  9330                           fsr1l	equ	0xFE1
  9331                           indf2	equ	0xFDF
  9332                           postinc2	equ	0xFDE
  9333                           plusw2	equ	0xFDB
  9334                           fsr2h	equ	0xFDA
  9335                           fsr2l	equ	0xFD9
  9336                           status	equ	0xFD8
  9337                           
  9338 ;; *************** function _parseHexFileEntry *****************
  9339 ;; Defined at:
  9340 ;;		line 59 in file "hex.c"
  9341 ;; Parameters:    Size  Location     Type
  9342 ;;  data            2   11[COMRAM] PTR unsigned char 
  9343 ;;		 -> file_buffer(50), 
  9344 ;;  offset          4   13[COMRAM] unsigned long 
  9345 ;;  hexEntry        2   17[COMRAM] PTR struct HexFileEntry
  9346 ;;		 -> hex_file_entry(23), 
  9347 ;; Auto vars:     Size  Location     Type
  9348 ;;  i               1   27[COMRAM] unsigned char 
  9349 ;; Return value:  Size  Location     Type
  9350 ;;                  4   11[COMRAM] unsigned long 
  9351 ;; Registers used:
  9352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9353 ;; Tracked objects:
  9354 ;;		On entry : 0/0
  9355 ;;		On exit  : 0/0
  9356 ;;		Unchanged: 0/0
  9357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9358 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9359 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9360 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9361 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9362 ;;Total ram usage:       17 bytes
  9363 ;; Hardware stack levels used:    1
  9364 ;; Hardware stack levels required when called:    2
  9365 ;; This function calls:
  9366 ;;		_hexCharsToUint16
  9367 ;;		_hexCharsToUint8
  9368 ;; This function is called by:
  9369 ;;		__bootloader_verify_file
  9370 ;;		__bootloader_program
  9371 ;; This function uses a non-reentrant model
  9372 ;;
  9373                           
  9374                           	psect	text36
  9375  000020                     __ptext36:
  9376                           	opt stack 0
  9377  000020                     _parseHexFileEntry:
  9378                           	opt stack 26
  9379                           
  9380                           ;hex.c: 61: uint8_t i;;hex.c: 64: if (data[offset] != ':')
  9381                           
  9382                           ;incstack = 0
  9383  000020  500E               	movf	parseHexFileEntry@offset,w,c
  9384  000022  240C               	addwf	parseHexFileEntry@data,w,c
  9385  000024  6ED9               	movwf	fsr2l,c
  9386  000026  500F               	movf	parseHexFileEntry@offset+1,w,c
  9387  000028  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9388  00002A  6EDA               	movwf	fsr2h,c
  9389  00002C  0E3A               	movlw	58
  9390  00002E  18DE               	xorwf	postinc2,w,c
  9391  000030  B4D8               	btfsc	status,2,c
  9392  000032  D005               	goto	l2210
  9393                           
  9394                           ;hex.c: 65: {;hex.c: 66: return (uint32_t) RecordErrorStartCode;
  9395  000034  680C               	setf	?_parseHexFileEntry,c
  9396  000036  680D               	setf	?_parseHexFileEntry+1,c
  9397  000038  680E               	setf	?_parseHexFileEntry+2,c
  9398  00003A  680F               	setf	?_parseHexFileEntry+3,c
  9399  00003C  0012               	return	
  9400  00003E                     l2210:
  9401                           
  9402                           ;hex.c: 67: };hex.c: 70: hexEntry->dataLength = hexCharsToUint8(data[offset + 1], data[o
      +                          ffset + 2]);
  9403  00003E  0E02               	movlw	2
  9404  000040  240E               	addwf	parseHexFileEntry@offset,w,c
  9405  000042  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  9406  000044  0E00               	movlw	0
  9407  000046  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  9408  000048  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  9409  00004A  5014               	movf	??_parseHexFileEntry,w,c
  9410  00004C  240C               	addwf	parseHexFileEntry@data,w,c
  9411  00004E  6ED9               	movwf	fsr2l,c
  9412  000050  5015               	movf	??_parseHexFileEntry+1,w,c
  9413  000052  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9414  000054  6EDA               	movwf	fsr2h,c
  9415  000056  50DF               	movf	indf2,w,c
  9416  000058  6E03               	movwf	hexCharsToUint8@c2,c
  9417  00005A  0E01               	movlw	1
  9418  00005C  240E               	addwf	parseHexFileEntry@offset,w,c
  9419  00005E  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  9420  000060  0E00               	movlw	0
  9421  000062  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  9422  000064  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  9423  000066  5016               	movf	??_parseHexFileEntry+2,w,c
  9424  000068  240C               	addwf	parseHexFileEntry@data,w,c
  9425  00006A  6ED9               	movwf	fsr2l,c
  9426  00006C  5017               	movf	??_parseHexFileEntry+3,w,c
  9427  00006E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9428  000070  6EDA               	movwf	fsr2h,c
  9429  000072  50DF               	movf	indf2,w,c
  9430  000074  EC45  F03F         	call	_hexCharsToUint8
  9431  000078  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  9432  00007A  6A19               	clrf	(??_parseHexFileEntry+5)& (0+255),c
  9433  00007C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  9434  000080  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  9435  000084  C018  FFDE         	movff	??_parseHexFileEntry+4,postinc2
  9436  000088  C019  FFDD         	movff	??_parseHexFileEntry+5,postdec2
  9437                           
  9438                           ;hex.c: 71: if (hexEntry->dataLength > 16)
  9439  00008C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  9440  000090  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  9441  000094  0E01               	movlw	1
  9442  000096  50DB               	movf	plusw2,w,c
  9443  000098  E104               	bnz	u10190
  9444  00009A  0E11               	movlw	17
  9445  00009C  5CDE               	subwf	postinc2,w,c
  9446  00009E  A0D8               	btfss	status,0,c
  9447  0000A0  D009               	goto	l2212
  9448  0000A2                     u10190:
  9449                           
  9450                           ;hex.c: 72: {;hex.c: 73: return (uint32_t) RecordErrorDataTooLong;
  9451  0000A2  0EFC               	movlw	252
  9452  0000A4  6E0C               	movwf	?_parseHexFileEntry,c
  9453  0000A6  0EFF               	movlw	255
  9454  0000A8  6E0D               	movwf	?_parseHexFileEntry+1,c
  9455  0000AA  0EFF               	movlw	255
  9456  0000AC  6E0E               	movwf	?_parseHexFileEntry+2,c
  9457  0000AE  0EFF               	movlw	255
  9458  0000B0  6E0F               	movwf	?_parseHexFileEntry+3,c
  9459  0000B2  0012               	return	
  9460  0000B4                     l2212:
  9461                           
  9462                           ;hex.c: 74: };hex.c: 77: hexEntry->address = hexCharsToUint16(data[offset + 3], data[off
      +                          set + 4], data[offset + 5], data[offset + 6]);
  9463  0000B4  0E04               	movlw	4
  9464  0000B6  240E               	addwf	parseHexFileEntry@offset,w,c
  9465  0000B8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  9466  0000BA  0E00               	movlw	0
  9467  0000BC  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  9468  0000BE  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  9469  0000C0  5014               	movf	??_parseHexFileEntry,w,c
  9470  0000C2  240C               	addwf	parseHexFileEntry@data,w,c
  9471  0000C4  6ED9               	movwf	fsr2l,c
  9472  0000C6  5015               	movf	??_parseHexFileEntry+1,w,c
  9473  0000C8  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9474  0000CA  6EDA               	movwf	fsr2h,c
  9475  0000CC  50DF               	movf	indf2,w,c
  9476  0000CE  6E03               	movwf	hexCharsToUint16@c2,c
  9477  0000D0  0E05               	movlw	5
  9478  0000D2  240E               	addwf	parseHexFileEntry@offset,w,c
  9479  0000D4  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  9480  0000D6  0E00               	movlw	0
  9481  0000D8  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  9482  0000DA  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  9483  0000DC  5016               	movf	??_parseHexFileEntry+2,w,c
  9484  0000DE  240C               	addwf	parseHexFileEntry@data,w,c
  9485  0000E0  6ED9               	movwf	fsr2l,c
  9486  0000E2  5017               	movf	??_parseHexFileEntry+3,w,c
  9487  0000E4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9488  0000E6  6EDA               	movwf	fsr2h,c
  9489  0000E8  50DF               	movf	indf2,w,c
  9490  0000EA  6E04               	movwf	hexCharsToUint16@c3,c
  9491  0000EC  0E06               	movlw	6
  9492  0000EE  240E               	addwf	parseHexFileEntry@offset,w,c
  9493  0000F0  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  9494  0000F2  0E00               	movlw	0
  9495  0000F4  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  9496  0000F6  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  9497  0000F8  5018               	movf	??_parseHexFileEntry+4,w,c
  9498  0000FA  240C               	addwf	parseHexFileEntry@data,w,c
  9499  0000FC  6ED9               	movwf	fsr2l,c
  9500  0000FE  5019               	movf	??_parseHexFileEntry+5,w,c
  9501  000100  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9502  000102  6EDA               	movwf	fsr2h,c
  9503  000104  50DF               	movf	indf2,w,c
  9504  000106  6E05               	movwf	hexCharsToUint16@c4,c
  9505  000108  0E03               	movlw	3
  9506  00010A  240E               	addwf	parseHexFileEntry@offset,w,c
  9507  00010C  6E1A               	movwf	(??_parseHexFileEntry+6)& (0+255),c
  9508  00010E  0E00               	movlw	0
  9509  000110  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  9510  000112  6E1B               	movwf	(??_parseHexFileEntry+7)& (0+255),c
  9511  000114  501A               	movf	??_parseHexFileEntry+6,w,c
  9512  000116  240C               	addwf	parseHexFileEntry@data,w,c
  9513  000118  6ED9               	movwf	fsr2l,c
  9514  00011A  501B               	movf	??_parseHexFileEntry+7,w,c
  9515  00011C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9516  00011E  6EDA               	movwf	fsr2h,c
  9517  000120  50DF               	movf	indf2,w,c
  9518  000122  ECCA  F034         	call	_hexCharsToUint16
  9519  000126  EE20 F002          	lfsr	2,2
  9520  00012A  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9521  00012C  26D9               	addwf	fsr2l,f,c
  9522  00012E  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9523  000130  22DA               	addwfc	fsr2h,f,c
  9524  000132  C003  FFDE         	movff	?_hexCharsToUint16,postinc2
  9525  000136  C004  FFDD         	movff	?_hexCharsToUint16+1,postdec2
  9526                           
  9527                           ;hex.c: 80: hexEntry->recordType = (RecordType_t)hexCharsToUint8(data[offset + 7], data[
      +                          offset + 8]);
  9528  00013A  EE20 F004          	lfsr	2,4
  9529  00013E  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9530  000140  26D9               	addwf	fsr2l,f,c
  9531  000142  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9532  000144  22DA               	addwfc	fsr2h,f,c
  9533  000146  0E08               	movlw	8
  9534  000148  240E               	addwf	parseHexFileEntry@offset,w,c
  9535  00014A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  9536  00014C  0E00               	movlw	0
  9537  00014E  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  9538  000150  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  9539  000152  5014               	movf	??_parseHexFileEntry,w,c
  9540  000154  240C               	addwf	parseHexFileEntry@data,w,c
  9541  000156  6EE1               	movwf	fsr1l,c
  9542  000158  5015               	movf	??_parseHexFileEntry+1,w,c
  9543  00015A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9544  00015C  6EE2               	movwf	fsr1h,c
  9545  00015E  50E7               	movf	indf1,w,c
  9546  000160  6E03               	movwf	hexCharsToUint8@c2,c
  9547  000162  0E07               	movlw	7
  9548  000164  240E               	addwf	parseHexFileEntry@offset,w,c
  9549  000166  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  9550  000168  0E00               	movlw	0
  9551  00016A  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  9552  00016C  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  9553  00016E  5016               	movf	??_parseHexFileEntry+2,w,c
  9554  000170  240C               	addwf	parseHexFileEntry@data,w,c
  9555  000172  6EE1               	movwf	fsr1l,c
  9556  000174  5017               	movf	??_parseHexFileEntry+3,w,c
  9557  000176  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9558  000178  6EE2               	movwf	fsr1h,c
  9559  00017A  50E7               	movf	indf1,w,c
  9560  00017C  EC45  F03F         	call	_hexCharsToUint8
  9561  000180  6EDF               	movwf	indf2,c
  9562                           
  9563                           ;hex.c: 83: for (i = 0; i < hexEntry->dataLength; ++i)
  9564  000182  0E00               	movlw	0
  9565  000184  6E1C               	movwf	parseHexFileEntry@i,c
  9566  000186  D03D               	goto	l2213
  9567  000188                     
  9568                           ;hex.c: 84: {;hex.c: 85: hexEntry->data[i] = hexCharsToUint8(data[offset + 9 + i + i], d
      +                          ata[offset + 10 + i + i]);
  9569  000188  501C               	movf	parseHexFileEntry@i,w,c
  9570  00018A  0D01               	mullw	1
  9571  00018C  0E05               	movlw	5
  9572  00018E  26F3               	addwf	prodl,f,c
  9573  000190  0E00               	movlw	0
  9574  000192  22F4               	addwfc	prodh,f,c
  9575  000194  50F3               	movf	prodl,w,c
  9576  000196  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  9577  000198  6ED9               	movwf	fsr2l,c
  9578  00019A  50F4               	movf	prodh,w,c
  9579  00019C  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  9580  00019E  6EDA               	movwf	fsr2h,c
  9581  0001A0  501C               	movf	parseHexFileEntry@i,w,c
  9582  0001A2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  9583  0001A6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  9584  0001A8  2614               	addwf	??_parseHexFileEntry,f,c
  9585  0001AA  0E00               	movlw	0
  9586  0001AC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  9587  0001AE  500E               	movf	parseHexFileEntry@offset,w,c
  9588  0001B0  2614               	addwf	??_parseHexFileEntry,f,c
  9589  0001B2  500F               	movf	parseHexFileEntry@offset+1,w,c
  9590  0001B4  2215               	addwfc	??_parseHexFileEntry+1,f,c
  9591  0001B6  0E0A               	movlw	10
  9592  0001B8  2614               	addwf	??_parseHexFileEntry,f,c
  9593  0001BA  0E00               	movlw	0
  9594  0001BC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  9595  0001BE  5014               	movf	??_parseHexFileEntry,w,c
  9596  0001C0  240C               	addwf	parseHexFileEntry@data,w,c
  9597  0001C2  6EE1               	movwf	fsr1l,c
  9598  0001C4  5015               	movf	??_parseHexFileEntry+1,w,c
  9599  0001C6  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9600  0001C8  6EE2               	movwf	fsr1h,c
  9601  0001CA  50E7               	movf	indf1,w,c
  9602  0001CC  6E03               	movwf	hexCharsToUint8@c2,c
  9603  0001CE  501C               	movf	parseHexFileEntry@i,w,c
  9604  0001D0  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  9605  0001D4  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  9606  0001D6  2616               	addwf	??_parseHexFileEntry+2,f,c
  9607  0001D8  0E00               	movlw	0
  9608  0001DA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  9609  0001DC  500E               	movf	parseHexFileEntry@offset,w,c
  9610  0001DE  2616               	addwf	??_parseHexFileEntry+2,f,c
  9611  0001E0  500F               	movf	parseHexFileEntry@offset+1,w,c
  9612  0001E2  2217               	addwfc	??_parseHexFileEntry+3,f,c
  9613  0001E4  0E09               	movlw	9
  9614  0001E6  2616               	addwf	??_parseHexFileEntry+2,f,c
  9615  0001E8  0E00               	movlw	0
  9616  0001EA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  9617  0001EC  5016               	movf	??_parseHexFileEntry+2,w,c
  9618  0001EE  240C               	addwf	parseHexFileEntry@data,w,c
  9619  0001F0  6EE1               	movwf	fsr1l,c
  9620  0001F2  5017               	movf	??_parseHexFileEntry+3,w,c
  9621  0001F4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9622  0001F6  6EE2               	movwf	fsr1h,c
  9623  0001F8  50E7               	movf	indf1,w,c
  9624  0001FA  EC45  F03F         	call	_hexCharsToUint8
  9625  0001FE  6EDF               	movwf	indf2,c
  9626  000200  2A1C               	incf	parseHexFileEntry@i,f,c
  9627  000202                     l2213:
  9628  000202  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  9629  000206  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  9630  00020A  501C               	movf	parseHexFileEntry@i,w,c
  9631  00020C  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  9632  00020E  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  9633  000210  50DE               	movf	postinc2,w,c
  9634  000212  5C16               	subwf	??_parseHexFileEntry+2,w,c
  9635  000214  50DE               	movf	postinc2,w,c
  9636  000216  5817               	subwfb	??_parseHexFileEntry+3,w,c
  9637  000218  A0D8               	btfss	status,0,c
  9638  00021A  D7B6               	goto	l2214
  9639                           
  9640                           ;hex.c: 86: };hex.c: 89: hexEntry->checksum = hexCharsToUint8(data[offset + 9 + i + i], 
      +                          data[offset + 10 + i + i]);
  9641  00021C  EE20 F015          	lfsr	2,21
  9642  000220  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9643  000222  26D9               	addwf	fsr2l,f,c
  9644  000224  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9645  000226  22DA               	addwfc	fsr2h,f,c
  9646  000228  501C               	movf	parseHexFileEntry@i,w,c
  9647  00022A  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  9648  00022E  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  9649  000230  2614               	addwf	??_parseHexFileEntry,f,c
  9650  000232  0E00               	movlw	0
  9651  000234  2215               	addwfc	??_parseHexFileEntry+1,f,c
  9652  000236  500E               	movf	parseHexFileEntry@offset,w,c
  9653  000238  2614               	addwf	??_parseHexFileEntry,f,c
  9654  00023A  500F               	movf	parseHexFileEntry@offset+1,w,c
  9655  00023C  2215               	addwfc	??_parseHexFileEntry+1,f,c
  9656  00023E  0E0A               	movlw	10
  9657  000240  2614               	addwf	??_parseHexFileEntry,f,c
  9658  000242  0E00               	movlw	0
  9659  000244  2215               	addwfc	??_parseHexFileEntry+1,f,c
  9660  000246  5014               	movf	??_parseHexFileEntry,w,c
  9661  000248  240C               	addwf	parseHexFileEntry@data,w,c
  9662  00024A  6EE1               	movwf	fsr1l,c
  9663  00024C  5015               	movf	??_parseHexFileEntry+1,w,c
  9664  00024E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9665  000250  6EE2               	movwf	fsr1h,c
  9666  000252  50E7               	movf	indf1,w,c
  9667  000254  6E03               	movwf	hexCharsToUint8@c2,c
  9668  000256  501C               	movf	parseHexFileEntry@i,w,c
  9669  000258  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  9670  00025C  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  9671  00025E  2616               	addwf	??_parseHexFileEntry+2,f,c
  9672  000260  0E00               	movlw	0
  9673  000262  2217               	addwfc	??_parseHexFileEntry+3,f,c
  9674  000264  500E               	movf	parseHexFileEntry@offset,w,c
  9675  000266  2616               	addwf	??_parseHexFileEntry+2,f,c
  9676  000268  500F               	movf	parseHexFileEntry@offset+1,w,c
  9677  00026A  2217               	addwfc	??_parseHexFileEntry+3,f,c
  9678  00026C  0E09               	movlw	9
  9679  00026E  2616               	addwf	??_parseHexFileEntry+2,f,c
  9680  000270  0E00               	movlw	0
  9681  000272  2217               	addwfc	??_parseHexFileEntry+3,f,c
  9682  000274  5016               	movf	??_parseHexFileEntry+2,w,c
  9683  000276  240C               	addwf	parseHexFileEntry@data,w,c
  9684  000278  6EE1               	movwf	fsr1l,c
  9685  00027A  5017               	movf	??_parseHexFileEntry+3,w,c
  9686  00027C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9687  00027E  6EE2               	movwf	fsr1h,c
  9688  000280  50E7               	movf	indf1,w,c
  9689  000282  EC45  F03F         	call	_hexCharsToUint8
  9690  000286  6EDF               	movwf	indf2,c
  9691                           
  9692                           ;hex.c: 92: hexEntry->checksumCheck = hexEntry->dataLength;
  9693  000288  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  9694  00028C  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  9695  000290  EE10 F016          	lfsr	1,22
  9696  000294  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9697  000296  26E1               	addwf	fsr1l,f,c
  9698  000298  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9699  00029A  22E2               	addwfc	fsr1h,f,c
  9700  00029C  CFDF FFE7          	movff	indf2,indf1
  9701                           
  9702                           ;hex.c: 93: hexEntry->checksumCheck += (hexEntry->address >> 8);
  9703  0002A0  EE20 F002          	lfsr	2,2
  9704  0002A4  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9705  0002A6  26D9               	addwf	fsr2l,f,c
  9706  0002A8  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9707  0002AA  22DA               	addwfc	fsr2h,f,c
  9708  0002AC  CFDE F014          	movff	postinc2,??_parseHexFileEntry
  9709  0002B0  CFDD F015          	movff	postdec2,??_parseHexFileEntry+1
  9710  0002B4  C015  F014         	movff	??_parseHexFileEntry+1,??_parseHexFileEntry
  9711  0002B8  6A15               	clrf	??_parseHexFileEntry+1,c
  9712  0002BA  EE20 F016          	lfsr	2,22
  9713  0002BE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9714  0002C0  26D9               	addwf	fsr2l,f,c
  9715  0002C2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9716  0002C4  22DA               	addwfc	fsr2h,f,c
  9717  0002C6  5014               	movf	??_parseHexFileEntry,w,c
  9718  0002C8  26DF               	addwf	indf2,f,c
  9719                           
  9720                           ;hex.c: 94: hexEntry->checksumCheck += (hexEntry->address & 0xFF);
  9721  0002CA  EE20 F002          	lfsr	2,2
  9722  0002CE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9723  0002D0  26D9               	addwf	fsr2l,f,c
  9724  0002D2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9725  0002D4  22DA               	addwfc	fsr2h,f,c
  9726  0002D6  50DF               	movf	indf2,w,c
  9727  0002D8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  9728  0002DA  EE20 F016          	lfsr	2,22
  9729  0002DE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9730  0002E0  26D9               	addwf	fsr2l,f,c
  9731  0002E2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9732  0002E4  22DA               	addwfc	fsr2h,f,c
  9733  0002E6  5014               	movf	??_parseHexFileEntry,w,c
  9734  0002E8  26DF               	addwf	indf2,f,c
  9735                           
  9736                           ;hex.c: 95: hexEntry->checksumCheck += hexEntry->recordType;
  9737  0002EA  EE20 F004          	lfsr	2,4
  9738  0002EE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9739  0002F0  26D9               	addwf	fsr2l,f,c
  9740  0002F2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9741  0002F4  22DA               	addwfc	fsr2h,f,c
  9742  0002F6  50DF               	movf	indf2,w,c
  9743  0002F8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  9744  0002FA  EE20 F016          	lfsr	2,22
  9745  0002FE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9746  000300  26D9               	addwf	fsr2l,f,c
  9747  000302  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9748  000304  22DA               	addwfc	fsr2h,f,c
  9749  000306  5014               	movf	??_parseHexFileEntry,w,c
  9750  000308  26DF               	addwf	indf2,f,c
  9751                           
  9752                           ;hex.c: 96: for (i = 0; i < hexEntry->dataLength; ++i)
  9753  00030A  0E00               	movlw	0
  9754  00030C  6E1C               	movwf	parseHexFileEntry@i,c
  9755  00030E  D017               	goto	l2216
  9756  000310                     
  9757                           ;hex.c: 97: {;hex.c: 98: hexEntry->checksumCheck += hexEntry->data[i];
  9758  000310  501C               	movf	parseHexFileEntry@i,w,c
  9759  000312  0D01               	mullw	1
  9760  000314  0E05               	movlw	5
  9761  000316  26F3               	addwf	prodl,f,c
  9762  000318  0E00               	movlw	0
  9763  00031A  22F4               	addwfc	prodh,f,c
  9764  00031C  50F3               	movf	prodl,w,c
  9765  00031E  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  9766  000320  6ED9               	movwf	fsr2l,c
  9767  000322  50F4               	movf	prodh,w,c
  9768  000324  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  9769  000326  6EDA               	movwf	fsr2h,c
  9770  000328  50DF               	movf	indf2,w,c
  9771  00032A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  9772  00032C  EE20 F016          	lfsr	2,22
  9773  000330  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9774  000332  26D9               	addwf	fsr2l,f,c
  9775  000334  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9776  000336  22DA               	addwfc	fsr2h,f,c
  9777  000338  5014               	movf	??_parseHexFileEntry,w,c
  9778  00033A  26DF               	addwf	indf2,f,c
  9779  00033C  2A1C               	incf	parseHexFileEntry@i,f,c
  9780  00033E                     l2216:
  9781  00033E  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  9782  000342  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  9783  000346  501C               	movf	parseHexFileEntry@i,w,c
  9784  000348  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  9785  00034A  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  9786  00034C  50DE               	movf	postinc2,w,c
  9787  00034E  5C16               	subwf	??_parseHexFileEntry+2,w,c
  9788  000350  50DE               	movf	postinc2,w,c
  9789  000352  5817               	subwfb	??_parseHexFileEntry+3,w,c
  9790  000354  A0D8               	btfss	status,0,c
  9791  000356  D7DC               	goto	l2217
  9792                           
  9793                           ;hex.c: 99: };hex.c: 100: hexEntry->checksumCheck += hexEntry->checksum;
  9794  000358  EE20 F015          	lfsr	2,21
  9795  00035C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9796  00035E  26D9               	addwf	fsr2l,f,c
  9797  000360  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9798  000362  22DA               	addwfc	fsr2h,f,c
  9799  000364  50DF               	movf	indf2,w,c
  9800  000366  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  9801  000368  EE20 F016          	lfsr	2,22
  9802  00036C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9803  00036E  26D9               	addwf	fsr2l,f,c
  9804  000370  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9805  000372  22DA               	addwfc	fsr2h,f,c
  9806  000374  5014               	movf	??_parseHexFileEntry,w,c
  9807  000376  26DF               	addwf	indf2,f,c
  9808                           
  9809                           ;hex.c: 103: if (hexEntry->checksumCheck != 0)
  9810  000378  EE20 F016          	lfsr	2,22
  9811  00037C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9812  00037E  26D9               	addwf	fsr2l,f,c
  9813  000380  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9814  000382  22DA               	addwfc	fsr2h,f,c
  9815  000384  50DF               	movf	indf2,w,c
  9816  000386  B4D8               	btfsc	status,2,c
  9817  000388  D009               	goto	l2219
  9818                           
  9819                           ;hex.c: 104: {;hex.c: 105: return (uint32_t) RecordErrorChecksum;
  9820  00038A  0EFE               	movlw	254
  9821  00038C  6E0C               	movwf	?_parseHexFileEntry,c
  9822  00038E  0EFF               	movlw	255
  9823  000390  6E0D               	movwf	?_parseHexFileEntry+1,c
  9824  000392  0EFF               	movlw	255
  9825  000394  6E0E               	movwf	?_parseHexFileEntry+2,c
  9826  000396  0EFF               	movlw	255
  9827  000398  6E0F               	movwf	?_parseHexFileEntry+3,c
  9828  00039A  0012               	return	
  9829  00039C                     l2219:
  9830                           
  9831                           ;hex.c: 106: };hex.c: 109: if (hexEntry->recordType == RecordTypeEndOfFile)
  9832  00039C  EE20 F004          	lfsr	2,4
  9833  0003A0  5012               	movf	parseHexFileEntry@hexEntry,w,c
  9834  0003A2  26D9               	addwf	fsr2l,f,c
  9835  0003A4  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  9836  0003A6  22DA               	addwfc	fsr2h,f,c
  9837  0003A8  04DE               	decf	postinc2,w,c
  9838  0003AA  A4D8               	btfss	status,2,c
  9839  0003AC  D009               	goto	l2220
  9840                           
  9841                           ;hex.c: 110: {;hex.c: 112: return 0;
  9842  0003AE  0E00               	movlw	0
  9843  0003B0  6E0C               	movwf	?_parseHexFileEntry,c
  9844  0003B2  0E00               	movlw	0
  9845  0003B4  6E0D               	movwf	?_parseHexFileEntry+1,c
  9846  0003B6  0E00               	movlw	0
  9847  0003B8  6E0E               	movwf	?_parseHexFileEntry+2,c
  9848  0003BA  0E00               	movlw	0
  9849  0003BC  6E0F               	movwf	?_parseHexFileEntry+3,c
  9850                           
  9851                           ;hex.c: 113: }
  9852  0003BE  0012               	return	
  9853  0003C0                     l2220:
  9854                           
  9855                           ;hex.c: 114: else;hex.c: 115: {;hex.c: 116: offset += 11 + i + i;
  9856  0003C0  501C               	movf	parseHexFileEntry@i,w,c
  9857  0003C2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  9858  0003C6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  9859  0003C8  2614               	addwf	??_parseHexFileEntry,f,c
  9860  0003CA  0E00               	movlw	0
  9861  0003CC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  9862  0003CE  0E0B               	movlw	11
  9863  0003D0  2414               	addwf	??_parseHexFileEntry,w,c
  9864  0003D2  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  9865  0003D4  0E00               	movlw	0
  9866  0003D6  2015               	addwfc	??_parseHexFileEntry+1,w,c
  9867  0003D8  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  9868  0003DA  6A18               	clrf	(??_parseHexFileEntry+4)& (0+255),c
  9869  0003DC  BE17               	btfsc	(??_parseHexFileEntry+3)& (0+255),7,c
  9870  0003DE  0618               	decf	(??_parseHexFileEntry+4)& (0+255),f,c
  9871  0003E0  5018               	movf	(??_parseHexFileEntry+4)& (0+255),w,c
  9872  0003E2  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  9873  0003E4  5016               	movf	??_parseHexFileEntry+2,w,c
  9874  0003E6  260E               	addwf	parseHexFileEntry@offset,f,c
  9875  0003E8  5017               	movf	??_parseHexFileEntry+3,w,c
  9876  0003EA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  9877  0003EC  5018               	movf	??_parseHexFileEntry+4,w,c
  9878  0003EE  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  9879  0003F0  5019               	movf	??_parseHexFileEntry+5,w,c
  9880  0003F2  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  9881                           
  9882                           ;hex.c: 117: if (data[++offset] == ':')
  9883  0003F4  0E01               	movlw	1
  9884  0003F6  260E               	addwf	parseHexFileEntry@offset,f,c
  9885  0003F8  0E00               	movlw	0
  9886  0003FA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  9887  0003FC  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  9888  0003FE  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  9889  000400  500E               	movf	parseHexFileEntry@offset,w,c
  9890  000402  240C               	addwf	parseHexFileEntry@data,w,c
  9891  000404  6ED9               	movwf	fsr2l,c
  9892  000406  500F               	movf	parseHexFileEntry@offset+1,w,c
  9893  000408  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9894  00040A  6EDA               	movwf	fsr2h,c
  9895  00040C  0E3A               	movlw	58
  9896  00040E  18DE               	xorwf	postinc2,w,c
  9897  000410  A4D8               	btfss	status,2,c
  9898  000412  D009               	goto	l2222
  9899                           
  9900                           ;hex.c: 118: {;hex.c: 119: return offset;
  9901  000414  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  9902  000418  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  9903  00041C  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  9904  000420  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  9905                           
  9906                           ;hex.c: 120: }
  9907  000424  0012               	return	
  9908  000426                     l2222:
  9909                           
  9910                           ;hex.c: 121: else if (data[++offset] == ':')
  9911  000426  0E01               	movlw	1
  9912  000428  260E               	addwf	parseHexFileEntry@offset,f,c
  9913  00042A  0E00               	movlw	0
  9914  00042C  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  9915  00042E  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  9916  000430  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  9917  000432  500E               	movf	parseHexFileEntry@offset,w,c
  9918  000434  240C               	addwf	parseHexFileEntry@data,w,c
  9919  000436  6ED9               	movwf	fsr2l,c
  9920  000438  500F               	movf	parseHexFileEntry@offset+1,w,c
  9921  00043A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9922  00043C  6EDA               	movwf	fsr2h,c
  9923  00043E  0E3A               	movlw	58
  9924  000440  18DE               	xorwf	postinc2,w,c
  9925  000442  A4D8               	btfss	status,2,c
  9926  000444  D009               	goto	l2224
  9927                           
  9928                           ;hex.c: 122: {;hex.c: 123: return offset;
  9929  000446  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  9930  00044A  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  9931  00044E  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  9932  000452  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  9933                           
  9934                           ;hex.c: 124: }
  9935  000456  0012               	return	
  9936  000458                     l2224:
  9937                           
  9938                           ;hex.c: 125: else if (data[++offset] == ':')
  9939  000458  0E01               	movlw	1
  9940  00045A  260E               	addwf	parseHexFileEntry@offset,f,c
  9941  00045C  0E00               	movlw	0
  9942  00045E  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  9943  000460  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  9944  000462  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  9945  000464  500E               	movf	parseHexFileEntry@offset,w,c
  9946  000466  240C               	addwf	parseHexFileEntry@data,w,c
  9947  000468  6ED9               	movwf	fsr2l,c
  9948  00046A  500F               	movf	parseHexFileEntry@offset+1,w,c
  9949  00046C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  9950  00046E  6EDA               	movwf	fsr2h,c
  9951  000470  0E3A               	movlw	58
  9952  000472  18DE               	xorwf	postinc2,w,c
  9953  000474  A4D8               	btfss	status,2,c
  9954  000476  D009               	goto	l2226
  9955                           
  9956                           ;hex.c: 126: {;hex.c: 127: return offset;
  9957  000478  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  9958  00047C  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  9959  000480  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  9960  000484  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  9961                           
  9962                           ;hex.c: 128: }
  9963  000488  0012               	return	
  9964  00048A                     l2226:
  9965                           
  9966                           ;hex.c: 129: else;hex.c: 130: {;hex.c: 132: return (uint32_t) RecordErrorNoNextRecord;
  9967  00048A  0EFD               	movlw	253
  9968  00048C  6E0C               	movwf	?_parseHexFileEntry,c
  9969  00048E  0EFF               	movlw	255
  9970  000490  6E0D               	movwf	?_parseHexFileEntry+1,c
  9971  000492  0EFF               	movlw	255
  9972  000494  6E0E               	movwf	?_parseHexFileEntry+2,c
  9973  000496  0EFF               	movlw	255
  9974  000498  6E0F               	movwf	?_parseHexFileEntry+3,c
  9975  00049A  0012               	return	
  9976  00049C                     __end_of_parseHexFileEntry:
  9977                           	opt stack 0
  9978                           tblptru	equ	0xFF8
  9979                           tblptrh	equ	0xFF7
  9980                           tblptrl	equ	0xFF6
  9981                           tablat	equ	0xFF5
  9982                           prodh	equ	0xFF4
  9983                           prodl	equ	0xFF3
  9984                           intcon	equ	0xFF2
  9985                           intcon2	equ	0xFF1
  9986                           intcon3	equ	0xFF0
  9987                           postinc0	equ	0xFEE
  9988                           wreg	equ	0xFE8
  9989                           indf1	equ	0xFE7
  9990                           postdec1	equ	0xFE5
  9991                           plusw1	equ	0xFE3
  9992                           fsr1h	equ	0xFE2
  9993                           fsr1l	equ	0xFE1
  9994                           indf2	equ	0xFDF
  9995                           postinc2	equ	0xFDE
  9996                           postdec2	equ	0xFDD
  9997                           plusw2	equ	0xFDB
  9998                           fsr2h	equ	0xFDA
  9999                           fsr2l	equ	0xFD9
 10000                           status	equ	0xFD8
 10001                           
 10002 ;; *************** function _hexCharsToUint8 *****************
 10003 ;; Defined at:
 10004 ;;		line 42 in file "hex.c"
 10005 ;; Parameters:    Size  Location     Type
 10006 ;;  c1              1    wreg     unsigned char 
 10007 ;;  c2              1    2[COMRAM] unsigned char 
 10008 ;; Auto vars:     Size  Location     Type
 10009 ;;  c1              1    4[COMRAM] unsigned char 
 10010 ;;  retVal          1    5[COMRAM] unsigned char 
 10011 ;; Return value:  Size  Location     Type
 10012 ;;                  1    wreg      unsigned char 
 10013 ;; Registers used:
 10014 ;;		wreg, status,2, status,0, cstack
 10015 ;; Tracked objects:
 10016 ;;		On entry : 0/0
 10017 ;;		On exit  : 0/0
 10018 ;;		Unchanged: 0/0
 10019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10020 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10021 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10022 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10023 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10024 ;;Total ram usage:        4 bytes
 10025 ;; Hardware stack levels used:    1
 10026 ;; Hardware stack levels required when called:    1
 10027 ;; This function calls:
 10028 ;;		_hexCharToUint8
 10029 ;; This function is called by:
 10030 ;;		_parseHexFileEntry
 10031 ;; This function uses a non-reentrant model
 10032 ;;
 10033                           
 10034                           	psect	text37
 10035  007E8A                     __ptext37:
 10036                           	opt stack 0
 10037  007E8A                     _hexCharsToUint8:
 10038                           	opt stack 26
 10039                           
 10040                           ;incstack = 0
 10041                           ;hexCharsToUint8@c1 stored from wreg
 10042  007E8A  6E05               	movwf	hexCharsToUint8@c1,c
 10043                           
 10044                           ;hex.c: 44: uint8_t retVal = (hexCharToUint8(c1) << 4);
 10045  007E8C  5005               	movf	hexCharsToUint8@c1,w,c
 10046  007E8E  EC08  F03E         	call	_hexCharToUint8
 10047  007E92  6E04               	movwf	??_hexCharsToUint8& (0+255),c
 10048  007E94  3804               	swapf	??_hexCharsToUint8,w,c
 10049  007E96  0BF0               	andlw	240
 10050  007E98  6E06               	movwf	hexCharsToUint8@retVal,c
 10051                           
 10052                           ;hex.c: 45: retVal |= hexCharToUint8(c2);
 10053  007E9A  5003               	movf	hexCharsToUint8@c2,w,c
 10054  007E9C  EC08  F03E         	call	_hexCharToUint8
 10055  007EA0  1206               	iorwf	hexCharsToUint8@retVal,f,c
 10056                           
 10057                           ;hex.c: 46: return retVal;
 10058  007EA2  5006               	movf	hexCharsToUint8@retVal,w,c
 10059  007EA4  0012               	return	
 10060  007EA6                     __end_of_hexCharsToUint8:
 10061                           	opt stack 0
 10062                           tblptru	equ	0xFF8
 10063                           tblptrh	equ	0xFF7
 10064                           tblptrl	equ	0xFF6
 10065                           tablat	equ	0xFF5
 10066                           prodh	equ	0xFF4
 10067                           prodl	equ	0xFF3
 10068                           intcon	equ	0xFF2
 10069                           intcon2	equ	0xFF1
 10070                           intcon3	equ	0xFF0
 10071                           postinc0	equ	0xFEE
 10072                           wreg	equ	0xFE8
 10073                           indf1	equ	0xFE7
 10074                           postdec1	equ	0xFE5
 10075                           plusw1	equ	0xFE3
 10076                           fsr1h	equ	0xFE2
 10077                           fsr1l	equ	0xFE1
 10078                           indf2	equ	0xFDF
 10079                           postinc2	equ	0xFDE
 10080                           postdec2	equ	0xFDD
 10081                           plusw2	equ	0xFDB
 10082                           fsr2h	equ	0xFDA
 10083                           fsr2l	equ	0xFD9
 10084                           status	equ	0xFD8
 10085                           
 10086 ;; *************** function _hexCharsToUint16 *****************
 10087 ;; Defined at:
 10088 ;;		line 49 in file "hex.c"
 10089 ;; Parameters:    Size  Location     Type
 10090 ;;  c1              1    wreg     unsigned char 
 10091 ;;  c2              1    2[COMRAM] unsigned char 
 10092 ;;  c3              1    3[COMRAM] unsigned char 
 10093 ;;  c4              1    4[COMRAM] unsigned char 
 10094 ;; Auto vars:     Size  Location     Type
 10095 ;;  c1              1    8[COMRAM] unsigned char 
 10096 ;;  retVal          2    9[COMRAM] unsigned int 
 10097 ;; Return value:  Size  Location     Type
 10098 ;;                  2    2[COMRAM] unsigned int 
 10099 ;; Registers used:
 10100 ;;		wreg, status,2, status,0, cstack
 10101 ;; Tracked objects:
 10102 ;;		On entry : 0/0
 10103 ;;		On exit  : 0/0
 10104 ;;		Unchanged: 0/0
 10105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10106 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10107 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10108 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10109 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10110 ;;Total ram usage:        9 bytes
 10111 ;; Hardware stack levels used:    1
 10112 ;; Hardware stack levels required when called:    1
 10113 ;; This function calls:
 10114 ;;		_hexCharToUint8
 10115 ;; This function is called by:
 10116 ;;		_parseHexFileEntry
 10117 ;; This function uses a non-reentrant model
 10118 ;;
 10119                           
 10120                           	psect	text38
 10121  006994                     __ptext38:
 10122                           	opt stack 0
 10123  006994                     _hexCharsToUint16:
 10124                           	opt stack 26
 10125                           
 10126                           ;incstack = 0
 10127                           ;hexCharsToUint16@c1 stored from wreg
 10128  006994  6E09               	movwf	hexCharsToUint16@c1,c
 10129                           
 10130                           ;hex.c: 51: uint16_t retVal = (hexCharToUint8(c1) << 12);
 10131  006996  5009               	movf	hexCharsToUint16@c1,w,c
 10132  006998  EC08  F03E         	call	_hexCharToUint8
 10133  00699C  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 10134  00699E  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 10135  0069A0  0E0C               	movlw	12
 10136  0069A2                     u9565:
 10137  0069A2  90D8               	bcf	status,0,c
 10138  0069A4  3606               	rlcf	??_hexCharsToUint16,f,c
 10139  0069A6  3607               	rlcf	??_hexCharsToUint16+1,f,c
 10140  0069A8  2EE8               	decfsz	wreg,f,c
 10141  0069AA  D7FB               	goto	u9565
 10142  0069AC  C006  F00A         	movff	??_hexCharsToUint16,hexCharsToUint16@retVal
 10143  0069B0  C007  F00B         	movff	??_hexCharsToUint16+1,hexCharsToUint16@retVal+1
 10144                           
 10145                           ;hex.c: 52: retVal |= (hexCharToUint8(c2) << 8);
 10146  0069B4  5003               	movf	hexCharsToUint16@c2,w,c
 10147  0069B6  EC08  F03E         	call	_hexCharToUint8
 10148  0069BA  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 10149  0069BC  5006               	movf	??_hexCharsToUint16,w,c
 10150  0069BE  6E08               	movwf	(??_hexCharsToUint16+2)& (0+255),c
 10151  0069C0  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 10152  0069C2  5007               	movf	??_hexCharsToUint16+1,w,c
 10153  0069C4  120A               	iorwf	hexCharsToUint16@retVal,f,c
 10154  0069C6  5008               	movf	??_hexCharsToUint16+2,w,c
 10155  0069C8  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
 10156                           
 10157                           ;hex.c: 53: retVal |= (hexCharToUint8(c3) << 4);
 10158  0069CA  5004               	movf	hexCharsToUint16@c3,w,c
 10159  0069CC  EC08  F03E         	call	_hexCharToUint8
 10160  0069D0  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 10161  0069D2  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 10162  0069D4  3A06               	swapf	??_hexCharsToUint16,f,c
 10163  0069D6  3A07               	swapf	??_hexCharsToUint16+1,f,c
 10164  0069D8  0EF0               	movlw	240
 10165  0069DA  1607               	andwf	??_hexCharsToUint16+1,f,c
 10166  0069DC  5006               	movf	??_hexCharsToUint16,w,c
 10167  0069DE  0B0F               	andlw	15
 10168  0069E0  1207               	iorwf	??_hexCharsToUint16+1,f,c
 10169  0069E2  0EF0               	movlw	240
 10170  0069E4  1606               	andwf	??_hexCharsToUint16,f,c
 10171  0069E6  5006               	movf	??_hexCharsToUint16,w,c
 10172  0069E8  120A               	iorwf	hexCharsToUint16@retVal,f,c
 10173  0069EA  5007               	movf	??_hexCharsToUint16+1,w,c
 10174  0069EC  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
 10175                           
 10176                           ;hex.c: 54: retVal |= hexCharToUint8(c4);
 10177  0069EE  5005               	movf	hexCharsToUint16@c4,w,c
 10178  0069F0  EC08  F03E         	call	_hexCharToUint8
 10179  0069F4  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 10180  0069F6  5006               	movf	??_hexCharsToUint16,w,c
 10181  0069F8  120A               	iorwf	hexCharsToUint16@retVal,f,c
 10182                           
 10183                           ;hex.c: 55: return retVal;
 10184  0069FA  C00A  F003         	movff	hexCharsToUint16@retVal,?_hexCharsToUint16
 10185  0069FE  C00B  F004         	movff	hexCharsToUint16@retVal+1,?_hexCharsToUint16+1
 10186  006A02  0012               	return	
 10187  006A04                     __end_of_hexCharsToUint16:
 10188                           	opt stack 0
 10189                           tblptru	equ	0xFF8
 10190                           tblptrh	equ	0xFF7
 10191                           tblptrl	equ	0xFF6
 10192                           tablat	equ	0xFF5
 10193                           prodh	equ	0xFF4
 10194                           prodl	equ	0xFF3
 10195                           intcon	equ	0xFF2
 10196                           intcon2	equ	0xFF1
 10197                           intcon3	equ	0xFF0
 10198                           postinc0	equ	0xFEE
 10199                           wreg	equ	0xFE8
 10200                           indf1	equ	0xFE7
 10201                           postdec1	equ	0xFE5
 10202                           plusw1	equ	0xFE3
 10203                           fsr1h	equ	0xFE2
 10204                           fsr1l	equ	0xFE1
 10205                           indf2	equ	0xFDF
 10206                           postinc2	equ	0xFDE
 10207                           postdec2	equ	0xFDD
 10208                           plusw2	equ	0xFDB
 10209                           fsr2h	equ	0xFDA
 10210                           fsr2l	equ	0xFD9
 10211                           status	equ	0xFD8
 10212                           
 10213 ;; *************** function _hexCharToUint8 *****************
 10214 ;; Defined at:
 10215 ;;		line 11 in file "hex.c"
 10216 ;; Parameters:    Size  Location     Type
 10217 ;;  c               1    wreg     unsigned char 
 10218 ;; Auto vars:     Size  Location     Type
 10219 ;;  c               1    0[COMRAM] unsigned char 
 10220 ;;  ascii           1    1[COMRAM] unsigned char 
 10221 ;; Return value:  Size  Location     Type
 10222 ;;                  1    wreg      unsigned char 
 10223 ;; Registers used:
 10224 ;;		wreg, status,2, status,0
 10225 ;; Tracked objects:
 10226 ;;		On entry : 0/0
 10227 ;;		On exit  : 0/0
 10228 ;;		Unchanged: 0/0
 10229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10231 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10233 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10234 ;;Total ram usage:        2 bytes
 10235 ;; Hardware stack levels used:    1
 10236 ;; This function calls:
 10237 ;;		Nothing
 10238 ;; This function is called by:
 10239 ;;		_hexCharsToUint8
 10240 ;;		_hexCharsToUint16
 10241 ;; This function uses a non-reentrant model
 10242 ;;
 10243                           
 10244                           	psect	text39
 10245  007C10                     __ptext39:
 10246                           	opt stack 0
 10247  007C10                     _hexCharToUint8:
 10248                           	opt stack 26
 10249                           
 10250                           ;incstack = 0
 10251                           ;hexCharToUint8@c stored from wreg
 10252  007C10  6E01               	movwf	hexCharToUint8@c,c
 10253                           
 10254                           ;hex.c: 13: uint8_t ascii = (uint8_t)c;
 10255  007C12  C001  F002         	movff	hexCharToUint8@c,hexCharToUint8@ascii
 10256                           
 10257                           ;hex.c: 16: if (ascii >= 97)
 10258  007C16  0E60               	movlw	96
 10259  007C18  6402               	cpfsgt	hexCharToUint8@ascii,c
 10260  007C1A  D002               	goto	l2195
 10261                           
 10262                           ;hex.c: 17: {;hex.c: 18: ascii -= 87;
 10263  007C1C  0E57               	movlw	87
 10264  007C1E  D006               	goto	L3
 10265  007C20                     l2195:
 10266                           
 10267                           ;hex.c: 21: else if (ascii >= 65)
 10268  007C20  0E40               	movlw	64
 10269  007C22  6402               	cpfsgt	hexCharToUint8@ascii,c
 10270  007C24  D002               	goto	l2197
 10271                           
 10272                           ;hex.c: 22: {;hex.c: 23: ascii -= 55;
 10273  007C26  0E37               	movlw	55
 10274  007C28  D001               	goto	L3
 10275  007C2A                     l2197:
 10276                           
 10277                           ;hex.c: 26: else;hex.c: 27: {;hex.c: 28: ascii -= 48;
 10278  007C2A  0E30               	movlw	48
 10279  007C2C                     L3:
 10280  007C2C  5E02               	subwf	hexCharToUint8@ascii,f,c
 10281                           
 10282                           ;hex.c: 29: };hex.c: 31: if (ascii > 15)
 10283  007C2E  0E0F               	movlw	15
 10284  007C30  6402               	cpfsgt	hexCharToUint8@ascii,c
 10285  007C32  D002               	goto	l2199
 10286                           
 10287                           ;hex.c: 32: {;hex.c: 33: return 0;
 10288  007C34  0E00               	movlw	0
 10289                           
 10290                           ;hex.c: 34: }
 10291  007C36  0012               	return	
 10292  007C38                     l2199:
 10293                           
 10294                           ;hex.c: 35: else;hex.c: 36: {;hex.c: 37: return ascii;
 10295  007C38  5002               	movf	hexCharToUint8@ascii,w,c
 10296  007C3A  0012               	return	
 10297  007C3C                     __end_of_hexCharToUint8:
 10298                           	opt stack 0
 10299                           tblptru	equ	0xFF8
 10300                           tblptrh	equ	0xFF7
 10301                           tblptrl	equ	0xFF6
 10302                           tablat	equ	0xFF5
 10303                           prodh	equ	0xFF4
 10304                           prodl	equ	0xFF3
 10305                           intcon	equ	0xFF2
 10306                           intcon2	equ	0xFF1
 10307                           intcon3	equ	0xFF0
 10308                           postinc0	equ	0xFEE
 10309                           wreg	equ	0xFE8
 10310                           indf1	equ	0xFE7
 10311                           postdec1	equ	0xFE5
 10312                           plusw1	equ	0xFE3
 10313                           fsr1h	equ	0xFE2
 10314                           fsr1l	equ	0xFE1
 10315                           indf2	equ	0xFDF
 10316                           postinc2	equ	0xFDE
 10317                           postdec2	equ	0xFDD
 10318                           plusw2	equ	0xFDB
 10319                           fsr2h	equ	0xFDA
 10320                           fsr2l	equ	0xFD9
 10321                           status	equ	0xFD8
 10322                           
 10323 ;; *************** function _internalFlash_writePage *****************
 10324 ;; Defined at:
 10325 ;;		line 63 in file "internal_flash.c"
 10326 ;; Parameters:    Size  Location     Type
 10327 ;;  page            2    2[COMRAM] unsigned int 
 10328 ;; Auto vars:     Size  Location     Type
 10329 ;;  address         4    4[COMRAM] unsigned long 
 10330 ;;  cntr            2    8[COMRAM] unsigned int 
 10331 ;;  byte_cntr       1   11[COMRAM] unsigned char 
 10332 ;;  block_cntr      1   10[COMRAM] unsigned char 
 10333 ;;  i               1    0        unsigned char 
 10334 ;;  gie             1    0        unsigned char 
 10335 ;; Return value:  Size  Location     Type
 10336 ;;                  1    wreg      void 
 10337 ;; Registers used:
 10338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10339 ;; Tracked objects:
 10340 ;;		On entry : 0/0
 10341 ;;		On exit  : 0/0
 10342 ;;		Unchanged: 0/0
 10343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10344 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10345 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10347 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10348 ;;Total ram usage:       10 bytes
 10349 ;; Hardware stack levels used:    1
 10350 ;; Hardware stack levels required when called:    1
 10351 ;; This function calls:
 10352 ;;		__internalFlash_unlockAndActivate
 10353 ;; This function is called by:
 10354 ;;		__bootloader_program
 10355 ;; This function uses a non-reentrant model
 10356 ;;
 10357                           
 10358                           	psect	text40
 10359  0065DC                     __ptext40:
 10360                           	opt stack 0
 10361  0065DC                     _internalFlash_writePage:
 10362                           	opt stack 27
 10363                           
 10364                           ;internal_flash.c: 65: uint32_t address;;internal_flash.c: 66: uint8_t gie;;internal_fla
      +                          sh.c: 67: uint16_t cntr;;internal_flash.c: 68: uint8_t i;;internal_flash.c: 69: uint8_t 
      +                          block_cntr;;internal_flash.c: 70: uint8_t byte_cntr;;internal_flash.c: 73: address = pag
      +                          e;
 10365                           
 10366                           ;incstack = 0
 10367  0065DC  C003  F005         	movff	internalFlash_writePage@page,internalFlash_writePage@address
 10368  0065E0  C004  F006         	movff	internalFlash_writePage@page+1,internalFlash_writePage@address+1
 10369  0065E4  6A07               	clrf	internalFlash_writePage@address+2,c
 10370  0065E6  6A08               	clrf	internalFlash_writePage@address+3,c
 10371                           
 10372                           ;internal_flash.c: 74: address <<= 10;
 10373  0065E8  0E0A               	movlw	10
 10374  0065EA                     u10365:
 10375  0065EA  90D8               	bcf	status,0,c
 10376  0065EC  3605               	rlcf	internalFlash_writePage@address,f,c
 10377  0065EE  3606               	rlcf	internalFlash_writePage@address+1,f,c
 10378  0065F0  3607               	rlcf	internalFlash_writePage@address+2,f,c
 10379  0065F2  3608               	rlcf	internalFlash_writePage@address+3,f,c
 10380  0065F4  2EE8               	decfsz	wreg,f,c
 10381  0065F6  D7F9               	goto	u10365
 10382                           
 10383                           ;internal_flash.c: 76: TBLPTR = address;
 10384  0065F8  C005  FFF6         	movff	internalFlash_writePage@address,tblptrl	;volatile
 10385  0065FC  C006  FFF7         	movff	internalFlash_writePage@address+1,tblptrh	;volatile
 10386  006600  C007  FFF8         	movff	internalFlash_writePage@address+2,tblptru	;volatile
 10387                           
 10388                           ;internal_flash.c: 79: cntr = 0;
 10389  006604  0E00               	movlw	0
 10390  006606  6E0A               	movwf	internalFlash_writePage@cntr+1,c
 10391  006608  0E00               	movlw	0
 10392  00660A  6E09               	movwf	internalFlash_writePage@cntr,c
 10393                           
 10394                           ;internal_flash.c: 80: for(block_cntr=0; block_cntr<16; ++block_cntr)
 10395  00660C  0E00               	movlw	0
 10396  00660E  6E0B               	movwf	internalFlash_writePage@block_cntr,c
 10397  006610                     l13399:
 10398  006610  0E0F               	movlw	15
 10399  006612  640B               	cpfsgt	internalFlash_writePage@block_cntr,c
 10400  006614  D001               	goto	l2439
 10401  006616  0012               	return	
 10402  006618                     l2439:
 10403                           
 10404                           ;internal_flash.c: 81: {;internal_flash.c: 84: for(byte_cntr=0; byte_cntr<64; ++byte_cnt
      +                          r)
 10405  006618  0E00               	movlw	0
 10406  00661A  6E0C               	movwf	internalFlash_writePage@byte_cntr,c
 10407  00661C                     l13405:
 10408  00661C  0E3F               	movlw	63
 10409  00661E  640C               	cpfsgt	internalFlash_writePage@byte_cntr,c
 10410  006620  D001               	goto	l2441
 10411  006622  D00D               	goto	u10390
 10412  006624                     l2441:
 10413                           
 10414                           ;internal_flash.c: 85: {;internal_flash.c: 87: TABLAT = pageBuffer[cntr];
 10415  006624  0E00               	movlw	low _pageBuffer
 10416  006626  2409               	addwf	internalFlash_writePage@cntr,w,c
 10417  006628  6ED9               	movwf	fsr2l,c
 10418  00662A  0E08               	movlw	high _pageBuffer
 10419  00662C  200A               	addwfc	internalFlash_writePage@cntr+1,w,c
 10420  00662E  6EDA               	movwf	fsr2h,c
 10421  006630  50DF               	movf	indf2,w,c
 10422  006632  6EF5               	movwf	tablat,c	;volatile
 10423  006634  000D               	tblwt		*+	;# 
 10424                           
 10425                           ;internal_flash.c: 91: ++cntr;
 10426  006636  4A09               	infsnz	internalFlash_writePage@cntr,f,c
 10427  006638  2A0A               	incf	internalFlash_writePage@cntr+1,f,c
 10428  00663A  2A0C               	incf	internalFlash_writePage@byte_cntr,f,c
 10429  00663C  D7EF               	goto	l13405
 10430  00663E                     u10390:
 10431  00663E  000A               	tblrd		*-	;# 
 10432                           
 10433                           ;internal_flash.c: 98: EECON1 = 0x84;
 10434  006640  0E84               	movlw	132
 10435  006642  6EA6               	movwf	4006,c	;volsfr
 10436                           
 10437                           ;internal_flash.c: 99: _internalFlash_unlockAndActivate((uint8_t)0xB5);
 10438  006644  0EB5               	movlw	181
 10439  006646  EC73  F03E         	call	__internalFlash_unlockAndActivate
 10440                           
 10441                           ;internal_flash.c: 100: TBLPTR++;
 10442  00664A  0E01               	movlw	1
 10443  00664C  26F6               	addwf	tblptrl,f,c	;volatile
 10444  00664E  0E00               	movlw	0
 10445  006650  22F7               	addwfc	tblptrh,f,c	;volatile
 10446  006652  0E00               	movlw	0
 10447  006654  22F8               	addwfc	tblptru,f,c	;volatile
 10448  006656  2A0B               	incf	internalFlash_writePage@block_cntr,f,c
 10449  006658  D7DB               	goto	l13399
 10450  00665A                     __end_of_internalFlash_writePage:
 10451                           	opt stack 0
 10452                           tblptru	equ	0xFF8
 10453                           tblptrh	equ	0xFF7
 10454                           tblptrl	equ	0xFF6
 10455                           tablat	equ	0xFF5
 10456                           prodh	equ	0xFF4
 10457                           prodl	equ	0xFF3
 10458                           intcon	equ	0xFF2
 10459                           intcon2	equ	0xFF1
 10460                           intcon3	equ	0xFF0
 10461                           postinc0	equ	0xFEE
 10462                           wreg	equ	0xFE8
 10463                           indf1	equ	0xFE7
 10464                           postdec1	equ	0xFE5
 10465                           plusw1	equ	0xFE3
 10466                           fsr1h	equ	0xFE2
 10467                           fsr1l	equ	0xFE1
 10468                           indf2	equ	0xFDF
 10469                           postinc2	equ	0xFDE
 10470                           postdec2	equ	0xFDD
 10471                           plusw2	equ	0xFDB
 10472                           fsr2h	equ	0xFDA
 10473                           fsr2l	equ	0xFD9
 10474                           status	equ	0xFD8
 10475                           
 10476 ;; *************** function _internalFlash_readPage *****************
 10477 ;; Defined at:
 10478 ;;		line 37 in file "internal_flash.c"
 10479 ;; Parameters:    Size  Location     Type
 10480 ;;  page            2   21[COMRAM] unsigned int 
 10481 ;; Auto vars:     Size  Location     Type
 10482 ;;  address         4   23[COMRAM] unsigned long 
 10483 ;; Return value:  Size  Location     Type
 10484 ;;                  1    wreg      void 
 10485 ;; Registers used:
 10486 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10487 ;; Tracked objects:
 10488 ;;		On entry : 0/0
 10489 ;;		On exit  : 0/0
 10490 ;;		Unchanged: 0/0
 10491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10493 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10495 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10496 ;;Total ram usage:        6 bytes
 10497 ;; Hardware stack levels used:    1
 10498 ;; Hardware stack levels required when called:    2
 10499 ;; This function calls:
 10500 ;;		_internalFlash_addressFromPage
 10501 ;;		_internalFlash_read
 10502 ;; This function is called by:
 10503 ;;		__bootloader_program
 10504 ;; This function uses a non-reentrant model
 10505 ;;
 10506                           
 10507                           	psect	text41
 10508  007720                     __ptext41:
 10509                           	opt stack 0
 10510  007720                     _internalFlash_readPage:
 10511                           	opt stack 26
 10512                           
 10513                           ;internal_flash.c: 39: uint32_t address;;internal_flash.c: 40: address = internalFlash_a
      +                          ddressFromPage(page);
 10514                           
 10515                           ;incstack = 0
 10516  007720  C016  F001         	movff	internalFlash_readPage@page,internalFlash_addressFromPage@page
 10517  007724  C017  F002         	movff	internalFlash_readPage@page+1,internalFlash_addressFromPage@page+1
 10518  007728  ECDB  F03D         	call	_internalFlash_addressFromPage	;wreg free
 10519  00772C  C001  F018         	movff	?_internalFlash_addressFromPage,internalFlash_readPage@address
 10520  007730  C002  F019         	movff	?_internalFlash_addressFromPage+1,internalFlash_readPage@address+1
 10521  007734  C003  F01A         	movff	?_internalFlash_addressFromPage+2,internalFlash_readPage@address+2
 10522  007738  C004  F01B         	movff	?_internalFlash_addressFromPage+3,internalFlash_readPage@address+3
 10523                           
 10524                           ;internal_flash.c: 41: internalFlash_read(address, 1024, pageBuffer);
 10525  00773C  C018  F00E         	movff	internalFlash_readPage@address,internalFlash_read@address
 10526  007740  C019  F00F         	movff	internalFlash_readPage@address+1,internalFlash_read@address+1
 10527  007744  C01A  F010         	movff	internalFlash_readPage@address+2,internalFlash_read@address+2
 10528  007748  C01B  F011         	movff	internalFlash_readPage@address+3,internalFlash_read@address+3
 10529  00774C  0E04               	movlw	4
 10530  00774E  6E13               	movwf	internalFlash_read@data_length+1,c
 10531  007750  0E00               	movlw	0
 10532  007752  6E12               	movwf	internalFlash_read@data_length,c
 10533  007754  0E00               	movlw	low _pageBuffer
 10534  007756  6E14               	movwf	internalFlash_read@buffer,c
 10535  007758  0E08               	movlw	high _pageBuffer
 10536  00775A  6E15               	movwf	internalFlash_read@buffer+1,c
 10537  00775C  ECC4  F03C         	call	_internalFlash_read	;wreg free
 10538  007760  0012               	return		;funcret
 10539  007762                     __end_of_internalFlash_readPage:
 10540                           	opt stack 0
 10541                           tblptru	equ	0xFF8
 10542                           tblptrh	equ	0xFF7
 10543                           tblptrl	equ	0xFF6
 10544                           tablat	equ	0xFF5
 10545                           prodh	equ	0xFF4
 10546                           prodl	equ	0xFF3
 10547                           intcon	equ	0xFF2
 10548                           intcon2	equ	0xFF1
 10549                           intcon3	equ	0xFF0
 10550                           postinc0	equ	0xFEE
 10551                           wreg	equ	0xFE8
 10552                           indf1	equ	0xFE7
 10553                           postdec1	equ	0xFE5
 10554                           plusw1	equ	0xFE3
 10555                           fsr1h	equ	0xFE2
 10556                           fsr1l	equ	0xFE1
 10557                           indf2	equ	0xFDF
 10558                           postinc2	equ	0xFDE
 10559                           postdec2	equ	0xFDD
 10560                           plusw2	equ	0xFDB
 10561                           fsr2h	equ	0xFDA
 10562                           fsr2l	equ	0xFD9
 10563                           status	equ	0xFD8
 10564                           
 10565 ;; *************** function _internalFlash_read *****************
 10566 ;; Defined at:
 10567 ;;		line 144 in file "internal_flash.c"
 10568 ;; Parameters:    Size  Location     Type
 10569 ;;  address         4   13[COMRAM] unsigned long 
 10570 ;;  data_length     2   17[COMRAM] unsigned int 
 10571 ;;  buffer          2   19[COMRAM] PTR unsigned char 
 10572 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), 
 10573 ;; Auto vars:     Size  Location     Type
 10574 ;;		None
 10575 ;; Return value:  Size  Location     Type
 10576 ;;                  1    wreg      unsigned char 
 10577 ;; Registers used:
 10578 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10579 ;; Tracked objects:
 10580 ;;		On entry : 0/0
 10581 ;;		On exit  : 0/0
 10582 ;;		Unchanged: 0/0
 10583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10584 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10587 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10588 ;;Total ram usage:        8 bytes
 10589 ;; Hardware stack levels used:    1
 10590 ;; Hardware stack levels required when called:    1
 10591 ;; This function calls:
 10592 ;;		_memcpy
 10593 ;; This function is called by:
 10594 ;;		_internalFlash_readPage
 10595 ;;		__bootloader_verify_program_memory
 10596 ;; This function uses a non-reentrant model
 10597 ;;
 10598                           
 10599                           	psect	text42
 10600  007988                     __ptext42:
 10601                           	opt stack 0
 10602  007988                     _internalFlash_read:
 10603                           	opt stack 26
 10604                           
 10605                           ;internal_flash.c: 149: if(address >= 0x1FFFF)
 10606                           
 10607                           ;incstack = 0
 10608  007988  5011               	movf	internalFlash_read@address+3,w,c
 10609  00798A  E118               	bnz	l2455
 10610  00798C  280E               	incf	internalFlash_read@address,w,c
 10611  00798E  0EFF               	movlw	255
 10612  007990  580F               	subwfb	internalFlash_read@address+1,w,c
 10613  007992  0E01               	movlw	1
 10614  007994  5810               	subwfb	internalFlash_read@address+2,w,c
 10615  007996  B0D8               	btfsc	status,0,c
 10616  007998  0012               	return	
 10617                           
 10618                           ;internal_flash.c: 152: };internal_flash.c: 155: memcpy;internal_flash.c: 156: (;interna
      +                          l_flash.c: 157: (void*)buffer,;internal_flash.c: 158: (const void*)(address),;internal_f
      +                          lash.c: 159: data_length;internal_flash.c: 160: );
 10619                           
 10620                           ;internal_flash.c: 150: {;internal_flash.c: 151: return 0;;	Return value of _internalFla
      +                          sh_read is never used
 10621  00799A  C014  F001         	movff	internalFlash_read@buffer,memcpy@d1
 10622  00799E  C015  F002         	movff	internalFlash_read@buffer+1,memcpy@d1+1
 10623  0079A2  C00E  F003         	movff	internalFlash_read@address,memcpy@s1
 10624  0079A6  C00F  F004         	movff	internalFlash_read@address+1,memcpy@s1+1
 10625  0079AA  C010  F005         	movff	internalFlash_read@address+2,memcpy@s1+2
 10626  0079AE  C012  F006         	movff	internalFlash_read@data_length,memcpy@n
 10627  0079B2  C013  F007         	movff	internalFlash_read@data_length+1,memcpy@n+1
 10628  0079B6  ECAE  F036         	call	_memcpy	;wreg free
 10629  0079BA  0012               	return	
 10630  0079BC                     l2455:
 10631  0079BC  0012               	return		;funcret
 10632  0079BE                     __end_of_internalFlash_read:
 10633                           	opt stack 0
 10634                           tblptru	equ	0xFF8
 10635                           tblptrh	equ	0xFF7
 10636                           tblptrl	equ	0xFF6
 10637                           tablat	equ	0xFF5
 10638                           prodh	equ	0xFF4
 10639                           prodl	equ	0xFF3
 10640                           intcon	equ	0xFF2
 10641                           intcon2	equ	0xFF1
 10642                           intcon3	equ	0xFF0
 10643                           postinc0	equ	0xFEE
 10644                           wreg	equ	0xFE8
 10645                           indf1	equ	0xFE7
 10646                           postdec1	equ	0xFE5
 10647                           plusw1	equ	0xFE3
 10648                           fsr1h	equ	0xFE2
 10649                           fsr1l	equ	0xFE1
 10650                           indf2	equ	0xFDF
 10651                           postinc2	equ	0xFDE
 10652                           postdec2	equ	0xFDD
 10653                           plusw2	equ	0xFDB
 10654                           fsr2h	equ	0xFDA
 10655                           fsr2l	equ	0xFD9
 10656                           status	equ	0xFD8
 10657                           
 10658 ;; *************** function _internalFlash_pageFromAddress *****************
 10659 ;; Defined at:
 10660 ;;		line 308 in file "internal_flash.c"
 10661 ;; Parameters:    Size  Location     Type
 10662 ;;  address         4    0[COMRAM] unsigned long 
 10663 ;; Auto vars:     Size  Location     Type
 10664 ;;		None
 10665 ;; Return value:  Size  Location     Type
 10666 ;;                  2    0[COMRAM] unsigned int 
 10667 ;; Registers used:
 10668 ;;		wreg, status,2, status,0
 10669 ;; Tracked objects:
 10670 ;;		On entry : 0/0
 10671 ;;		On exit  : 0/0
 10672 ;;		Unchanged: 0/0
 10673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10674 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10676 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10677 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10678 ;;Total ram usage:        5 bytes
 10679 ;; Hardware stack levels used:    1
 10680 ;; This function calls:
 10681 ;;		Nothing
 10682 ;; This function is called by:
 10683 ;;		__bootloader_program
 10684 ;; This function uses a non-reentrant model
 10685 ;;
 10686                           
 10687                           	psect	text43
 10688  007EA6                     __ptext43:
 10689                           	opt stack 0
 10690  007EA6                     _internalFlash_pageFromAddress:
 10691                           	opt stack 28
 10692                           
 10693                           ;internal_flash.c: 310: address >>= 10;
 10694                           
 10695                           ;incstack = 0
 10696  007EA6  0E0A               	movlw	10
 10697  007EA8  6E05               	movwf	??_internalFlash_pageFromAddress& (0+255),c
 10698  007EAA                     u10345:
 10699  007EAA  90D8               	bcf	status,0,c
 10700  007EAC  3204               	rrcf	internalFlash_pageFromAddress@address+3,f,c
 10701  007EAE  3203               	rrcf	internalFlash_pageFromAddress@address+2,f,c
 10702  007EB0  3202               	rrcf	internalFlash_pageFromAddress@address+1,f,c
 10703  007EB2  3201               	rrcf	internalFlash_pageFromAddress@address,f,c
 10704  007EB4  2E05               	decfsz	??_internalFlash_pageFromAddress& (0+255),f,c
 10705  007EB6  D7F9               	goto	u10345
 10706                           
 10707                           ;internal_flash.c: 311: return (uint16_t) address;
 10708  007EB8  C001  F001         	movff	internalFlash_pageFromAddress@address,?_internalFlash_pageFromAddress
 10709  007EBC  C002  F002         	movff	internalFlash_pageFromAddress@address+1,?_internalFlash_pageFromAddress+1
 10710  007EC0  0012               	return	
 10711  007EC2                     __end_of_internalFlash_pageFromAddress:
 10712                           	opt stack 0
 10713                           tblptru	equ	0xFF8
 10714                           tblptrh	equ	0xFF7
 10715                           tblptrl	equ	0xFF6
 10716                           tablat	equ	0xFF5
 10717                           prodh	equ	0xFF4
 10718                           prodl	equ	0xFF3
 10719                           intcon	equ	0xFF2
 10720                           intcon2	equ	0xFF1
 10721                           intcon3	equ	0xFF0
 10722                           postinc0	equ	0xFEE
 10723                           wreg	equ	0xFE8
 10724                           indf1	equ	0xFE7
 10725                           postdec1	equ	0xFE5
 10726                           plusw1	equ	0xFE3
 10727                           fsr1h	equ	0xFE2
 10728                           fsr1l	equ	0xFE1
 10729                           indf2	equ	0xFDF
 10730                           postinc2	equ	0xFDE
 10731                           postdec2	equ	0xFDD
 10732                           plusw2	equ	0xFDB
 10733                           fsr2h	equ	0xFDA
 10734                           fsr2l	equ	0xFD9
 10735                           status	equ	0xFD8
 10736                           
 10737 ;; *************** function _internalFlash_getBuffer *****************
 10738 ;; Defined at:
 10739 ;;		line 32 in file "internal_flash.c"
 10740 ;; Parameters:    Size  Location     Type
 10741 ;;		None
 10742 ;; Auto vars:     Size  Location     Type
 10743 ;;		None
 10744 ;; Return value:  Size  Location     Type
 10745 ;;                  2    0[COMRAM] PTR unsigned char 
 10746 ;; Registers used:
 10747 ;;		wreg, status,2, status,0
 10748 ;; Tracked objects:
 10749 ;;		On entry : 0/0
 10750 ;;		On exit  : 0/0
 10751 ;;		Unchanged: 0/0
 10752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10753 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10756 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10757 ;;Total ram usage:        2 bytes
 10758 ;; Hardware stack levels used:    1
 10759 ;; This function calls:
 10760 ;;		Nothing
 10761 ;; This function is called by:
 10762 ;;		__bootloader_program
 10763 ;; This function uses a non-reentrant model
 10764 ;;
 10765                           
 10766                           	psect	text44
 10767  00802C                     __ptext44:
 10768                           	opt stack 0
 10769  00802C                     _internalFlash_getBuffer:
 10770                           	opt stack 28
 10771                           
 10772                           ;internal_flash.c: 34: return pageBuffer;
 10773                           
 10774                           ;incstack = 0
 10775  00802C  0E00               	movlw	low _pageBuffer
 10776  00802E  6E01               	movwf	?_internalFlash_getBuffer,c
 10777  008030  0E08               	movlw	high _pageBuffer
 10778  008032  6E02               	movwf	?_internalFlash_getBuffer+1,c
 10779  008034  0012               	return	
 10780  008036                     __end_of_internalFlash_getBuffer:
 10781                           	opt stack 0
 10782                           tblptru	equ	0xFF8
 10783                           tblptrh	equ	0xFF7
 10784                           tblptrl	equ	0xFF6
 10785                           tablat	equ	0xFF5
 10786                           prodh	equ	0xFF4
 10787                           prodl	equ	0xFF3
 10788                           intcon	equ	0xFF2
 10789                           intcon2	equ	0xFF1
 10790                           intcon3	equ	0xFF0
 10791                           postinc0	equ	0xFEE
 10792                           wreg	equ	0xFE8
 10793                           indf1	equ	0xFE7
 10794                           postdec1	equ	0xFE5
 10795                           plusw1	equ	0xFE3
 10796                           fsr1h	equ	0xFE2
 10797                           fsr1l	equ	0xFE1
 10798                           indf2	equ	0xFDF
 10799                           postinc2	equ	0xFDE
 10800                           postdec2	equ	0xFDD
 10801                           plusw2	equ	0xFDB
 10802                           fsr2h	equ	0xFDA
 10803                           fsr2l	equ	0xFD9
 10804                           status	equ	0xFD8
 10805                           
 10806 ;; *************** function _internalFlash_erasePage *****************
 10807 ;; Defined at:
 10808 ;;		line 44 in file "internal_flash.c"
 10809 ;; Parameters:    Size  Location     Type
 10810 ;;  page            2    2[COMRAM] unsigned int 
 10811 ;; Auto vars:     Size  Location     Type
 10812 ;;  address         4    4[COMRAM] unsigned long 
 10813 ;; Return value:  Size  Location     Type
 10814 ;;                  1    wreg      void 
 10815 ;; Registers used:
 10816 ;;		wreg, status,2, status,0, cstack
 10817 ;; Tracked objects:
 10818 ;;		On entry : 0/0
 10819 ;;		On exit  : 0/0
 10820 ;;		Unchanged: 0/0
 10821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10823 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10825 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10826 ;;Total ram usage:        6 bytes
 10827 ;; Hardware stack levels used:    1
 10828 ;; Hardware stack levels required when called:    1
 10829 ;; This function calls:
 10830 ;;		__internalFlash_unlockAndActivate
 10831 ;; This function is called by:
 10832 ;;		__bootloader_program
 10833 ;; This function uses a non-reentrant model
 10834 ;;
 10835                           
 10836                           	psect	text45
 10837  0079F2                     __ptext45:
 10838                           	opt stack 0
 10839  0079F2                     _internalFlash_erasePage:
 10840                           	opt stack 27
 10841                           
 10842                           ;internal_flash.c: 46: uint32_t address;;internal_flash.c: 49: address = page;
 10843                           
 10844                           ;incstack = 0
 10845  0079F2  C003  F005         	movff	internalFlash_erasePage@page,internalFlash_erasePage@address
 10846  0079F6  C004  F006         	movff	internalFlash_erasePage@page+1,internalFlash_erasePage@address+1
 10847  0079FA  6A07               	clrf	internalFlash_erasePage@address+2,c
 10848  0079FC  6A08               	clrf	internalFlash_erasePage@address+3,c
 10849                           
 10850                           ;internal_flash.c: 50: address <<= 10;
 10851  0079FE  0E0A               	movlw	10
 10852  007A00                     u10355:
 10853  007A00  90D8               	bcf	status,0,c
 10854  007A02  3605               	rlcf	internalFlash_erasePage@address,f,c
 10855  007A04  3606               	rlcf	internalFlash_erasePage@address+1,f,c
 10856  007A06  3607               	rlcf	internalFlash_erasePage@address+2,f,c
 10857  007A08  3608               	rlcf	internalFlash_erasePage@address+3,f,c
 10858  007A0A  2EE8               	decfsz	wreg,f,c
 10859  007A0C  D7F9               	goto	u10355
 10860                           
 10861                           ;internal_flash.c: 51: TBLPTR = address;
 10862  007A0E  C005  FFF6         	movff	internalFlash_erasePage@address,tblptrl	;volatile
 10863  007A12  C006  FFF7         	movff	internalFlash_erasePage@address+1,tblptrh	;volatile
 10864  007A16  C007  FFF8         	movff	internalFlash_erasePage@address+2,tblptru	;volatile
 10865                           
 10866                           ;internal_flash.c: 57: EECON1bits.WREN = 1;
 10867  007A1A  84A6               	bsf	4006,2,c	;volsfr
 10868                           
 10869                           ;internal_flash.c: 58: EECON1bits.FREE = 1;
 10870  007A1C  88A6               	bsf	4006,4,c	;volsfr
 10871                           
 10872                           ;internal_flash.c: 60: _internalFlash_unlockAndActivate((uint8_t)0xB5);
 10873  007A1E  0EB5               	movlw	181
 10874  007A20  EC73  F03E         	call	__internalFlash_unlockAndActivate
 10875  007A24  0012               	return		;funcret
 10876  007A26                     __end_of_internalFlash_erasePage:
 10877                           	opt stack 0
 10878                           tblptru	equ	0xFF8
 10879                           tblptrh	equ	0xFF7
 10880                           tblptrl	equ	0xFF6
 10881                           tablat	equ	0xFF5
 10882                           prodh	equ	0xFF4
 10883                           prodl	equ	0xFF3
 10884                           intcon	equ	0xFF2
 10885                           intcon2	equ	0xFF1
 10886                           intcon3	equ	0xFF0
 10887                           postinc0	equ	0xFEE
 10888                           wreg	equ	0xFE8
 10889                           indf1	equ	0xFE7
 10890                           postdec1	equ	0xFE5
 10891                           plusw1	equ	0xFE3
 10892                           fsr1h	equ	0xFE2
 10893                           fsr1l	equ	0xFE1
 10894                           indf2	equ	0xFDF
 10895                           postinc2	equ	0xFDE
 10896                           postdec2	equ	0xFDD
 10897                           plusw2	equ	0xFDB
 10898                           fsr2h	equ	0xFDA
 10899                           fsr2l	equ	0xFD9
 10900                           status	equ	0xFD8
 10901                           
 10902 ;; *************** function __internalFlash_unlockAndActivate *****************
 10903 ;; Defined at:
 10904 ;;		line 106 in file "internal_flash.c"
 10905 ;; Parameters:    Size  Location     Type
 10906 ;;  UnlockKey       1    wreg     unsigned char 
 10907 ;; Auto vars:     Size  Location     Type
 10908 ;;  UnlockKey       1    0[COMRAM] unsigned char 
 10909 ;;  InterruptEna    1    1[COMRAM] unsigned char 
 10910 ;; Return value:  Size  Location     Type
 10911 ;;                  1    wreg      void 
 10912 ;; Registers used:
 10913 ;;		wreg, status,2, status,0
 10914 ;; Tracked objects:
 10915 ;;		On entry : 0/0
 10916 ;;		On exit  : 0/0
 10917 ;;		Unchanged: 0/0
 10918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10920 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10922 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10923 ;;Total ram usage:        2 bytes
 10924 ;; Hardware stack levels used:    1
 10925 ;; This function calls:
 10926 ;;		Nothing
 10927 ;; This function is called by:
 10928 ;;		_internalFlash_erasePage
 10929 ;;		_internalFlash_writePage
 10930 ;;		_EraseBlock
 10931 ;; This function uses a non-reentrant model
 10932 ;;
 10933                           
 10934                           	psect	text46
 10935  007CE6                     __ptext46:
 10936                           	opt stack 0
 10937  007CE6                     __internalFlash_unlockAndActivate:
 10938                           	opt stack 27
 10939                           
 10940                           ;incstack = 0
 10941                           ;__internalFlash_unlockAndActivate@UnlockKey stored from wreg
 10942  007CE6  6E01               	movwf	__internalFlash_unlockAndActivate@UnlockKey,c
 10943                           
 10944                           ;internal_flash.c: 108: uint8_t InterruptEnableSave;;internal_flash.c: 115: if(UnlockKey
      +                           != (uint8_t)0xB5)
 10945  007CE8  0EB5               	movlw	181
 10946  007CEA  1801               	xorwf	__internalFlash_unlockAndActivate@UnlockKey,w,c
 10947  007CEC  B4D8               	btfsc	status,2,c
 10948  007CEE  D002               	goto	l2446
 10949                           
 10950                           ;internal_flash.c: 116: {;internal_flash.c: 117: EECON1bits.WREN = 0;
 10951  007CF0  94A6               	bcf	4006,2,c	;volsfr
 10952                           
 10953                           ;internal_flash.c: 118: return;
 10954  007CF2  0012               	return	
 10955  007CF4                     l2446:
 10956                           
 10957                           ;internal_flash.c: 119: };internal_flash.c: 121: InterruptEnableSave = INTCON;
 10958  007CF4  CFF2 F002          	movff	intcon,__internalFlash_unlockAndActivate@InterruptEnableSave	;volatile
 10959                           
 10960                           ;internal_flash.c: 122: INTCONbits.GIEH = 0;
 10961  007CF8  9EF2               	bcf	intcon,7,c	;volatile
 10962                           
 10963                           ;internal_flash.c: 123: EECON2 = 0x55;
 10964  007CFA  0E55               	movlw	85
 10965  007CFC  6EA7               	movwf	4007,c	;volsfr
 10966                           
 10967                           ;internal_flash.c: 124: EECON2 = 0xAA;
 10968  007CFE  0EAA               	movlw	170
 10969  007D00  6EA7               	movwf	4007,c	;volsfr
 10970                           
 10971                           ;internal_flash.c: 125: EECON1bits.WR = 1;
 10972  007D02  82A6               	bsf	4006,1,c	;volsfr
 10973                           
 10974                           ;internal_flash.c: 126: EECON1bits.WREN = 0;
 10975  007D04  94A6               	bcf	4006,2,c	;volsfr
 10976                           
 10977                           ;internal_flash.c: 128: if(InterruptEnableSave & 0x80)
 10978  007D06  AE02               	btfss	__internalFlash_unlockAndActivate@InterruptEnableSave,7,c
 10979  007D08  0012               	return	
 10980                           
 10981                           ;internal_flash.c: 129: {;internal_flash.c: 130: INTCONbits.GIEH = 1;
 10982  007D0A  8EF2               	bsf	intcon,7,c	;volatile
 10983  007D0C  0012               	return	
 10984  007D0E                     __end_of__internalFlash_unlockAndActivate:
 10985                           	opt stack 0
 10986                           tblptru	equ	0xFF8
 10987                           tblptrh	equ	0xFF7
 10988                           tblptrl	equ	0xFF6
 10989                           tablat	equ	0xFF5
 10990                           prodh	equ	0xFF4
 10991                           prodl	equ	0xFF3
 10992                           intcon	equ	0xFF2
 10993                           intcon2	equ	0xFF1
 10994                           intcon3	equ	0xFF0
 10995                           postinc0	equ	0xFEE
 10996                           wreg	equ	0xFE8
 10997                           indf1	equ	0xFE7
 10998                           postdec1	equ	0xFE5
 10999                           plusw1	equ	0xFE3
 11000                           fsr1h	equ	0xFE2
 11001                           fsr1l	equ	0xFE1
 11002                           indf2	equ	0xFDF
 11003                           postinc2	equ	0xFDE
 11004                           postdec2	equ	0xFDD
 11005                           plusw2	equ	0xFDB
 11006                           fsr2h	equ	0xFDA
 11007                           fsr2l	equ	0xFD9
 11008                           status	equ	0xFD8
 11009                           
 11010 ;; *************** function _internalFlash_addressWithinPage *****************
 11011 ;; Defined at:
 11012 ;;		line 322 in file "internal_flash.c"
 11013 ;; Parameters:    Size  Location     Type
 11014 ;;  address         4    8[COMRAM] unsigned long 
 11015 ;;  page            2   12[COMRAM] unsigned int 
 11016 ;; Auto vars:     Size  Location     Type
 11017 ;;  page_start_a    4   18[COMRAM] unsigned long 
 11018 ;; Return value:  Size  Location     Type
 11019 ;;                  2    8[COMRAM] unsigned int 
 11020 ;; Registers used:
 11021 ;;		wreg, status,2, status,0, cstack
 11022 ;; Tracked objects:
 11023 ;;		On entry : 0/0
 11024 ;;		On exit  : 0/0
 11025 ;;		Unchanged: 0/0
 11026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11027 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11028 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11029 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11030 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11031 ;;Total ram usage:       14 bytes
 11032 ;; Hardware stack levels used:    1
 11033 ;; Hardware stack levels required when called:    1
 11034 ;; This function calls:
 11035 ;;		_internalFlash_addressFromPage
 11036 ;; This function is called by:
 11037 ;;		__bootloader_program
 11038 ;; This function uses a non-reentrant model
 11039 ;;
 11040                           
 11041                           	psect	text47
 11042  006E86                     __ptext47:
 11043                           	opt stack 0
 11044  006E86                     _internalFlash_addressWithinPage:
 11045                           	opt stack 27
 11046                           
 11047                           ;internal_flash.c: 324: uint32_t page_start_address;;internal_flash.c: 325: page_start_a
      +                          ddress = internalFlash_addressFromPage(page);
 11048                           
 11049                           ;incstack = 0
 11050  006E86  C00D  F001         	movff	internalFlash_addressWithinPage@page,internalFlash_addressFromPage@page
 11051  006E8A  C00E  F002         	movff	internalFlash_addressWithinPage@page+1,internalFlash_addressFromPage@page+1
 11052  006E8E  ECDB  F03D         	call	_internalFlash_addressFromPage	;wreg free
 11053  006E92  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_addressWithinPage@page_start_addres
      +                          s
 11054  006E96  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_addressWithinPage@page_start_addr
      +                          ess+1
 11055  006E9A  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_addressWithinPage@page_start_addr
      +                          ess+2
 11056  006E9E  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_addressWithinPage@page_start_addr
      +                          ess+3
 11057                           
 11058                           ;internal_flash.c: 326: address = address - page_start_address;
 11059  006EA2  C013  F00F         	movff	internalFlash_addressWithinPage@page_start_address,??_internalFlash_addressWithin
      +                          Page
 11060  006EA6  C014  F010         	movff	internalFlash_addressWithinPage@page_start_address+1,??_internalFlash_addressWith
      +                          inPage+1
 11061  006EAA  C015  F011         	movff	internalFlash_addressWithinPage@page_start_address+2,??_internalFlash_addressWith
      +                          inPage+2
 11062  006EAE  C016  F012         	movff	internalFlash_addressWithinPage@page_start_address+3,??_internalFlash_addressWith
      +                          inPage+3
 11063  006EB2  1E0F               	comf	??_internalFlash_addressWithinPage,f,c
 11064  006EB4  1E10               	comf	??_internalFlash_addressWithinPage+1,f,c
 11065  006EB6  1E11               	comf	??_internalFlash_addressWithinPage+2,f,c
 11066  006EB8  1E12               	comf	??_internalFlash_addressWithinPage+3,f,c
 11067  006EBA  2A0F               	incf	??_internalFlash_addressWithinPage,f,c
 11068  006EBC  0E00               	movlw	0
 11069  006EBE  2210               	addwfc	??_internalFlash_addressWithinPage+1,f,c
 11070  006EC0  2211               	addwfc	??_internalFlash_addressWithinPage+2,f,c
 11071  006EC2  2212               	addwfc	??_internalFlash_addressWithinPage+3,f,c
 11072  006EC4  5009               	movf	internalFlash_addressWithinPage@address,w,c
 11073  006EC6  240F               	addwf	??_internalFlash_addressWithinPage,w,c
 11074  006EC8  6E09               	movwf	internalFlash_addressWithinPage@address,c
 11075  006ECA  500A               	movf	internalFlash_addressWithinPage@address+1,w,c
 11076  006ECC  2010               	addwfc	??_internalFlash_addressWithinPage+1,w,c
 11077  006ECE  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
 11078  006ED0  500B               	movf	internalFlash_addressWithinPage@address+2,w,c
 11079  006ED2  2011               	addwfc	??_internalFlash_addressWithinPage+2,w,c
 11080  006ED4  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
 11081  006ED6  500C               	movf	internalFlash_addressWithinPage@address+3,w,c
 11082  006ED8  2012               	addwfc	??_internalFlash_addressWithinPage+3,w,c
 11083  006EDA  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
 11084                           
 11085                           ;internal_flash.c: 327: return (uint16_t) address;
 11086  006EDC  C009  F009         	movff	internalFlash_addressWithinPage@address,?_internalFlash_addressWithinPage
 11087  006EE0  C00A  F00A         	movff	internalFlash_addressWithinPage@address+1,?_internalFlash_addressWithinPage+1
 11088  006EE4  0012               	return	
 11089  006EE6                     __end_of_internalFlash_addressWithinPage:
 11090                           	opt stack 0
 11091                           tblptru	equ	0xFF8
 11092                           tblptrh	equ	0xFF7
 11093                           tblptrl	equ	0xFF6
 11094                           tablat	equ	0xFF5
 11095                           prodh	equ	0xFF4
 11096                           prodl	equ	0xFF3
 11097                           intcon	equ	0xFF2
 11098                           intcon2	equ	0xFF1
 11099                           intcon3	equ	0xFF0
 11100                           postinc0	equ	0xFEE
 11101                           wreg	equ	0xFE8
 11102                           indf1	equ	0xFE7
 11103                           postdec1	equ	0xFE5
 11104                           plusw1	equ	0xFE3
 11105                           fsr1h	equ	0xFE2
 11106                           fsr1l	equ	0xFE1
 11107                           indf2	equ	0xFDF
 11108                           postinc2	equ	0xFDE
 11109                           postdec2	equ	0xFDD
 11110                           plusw2	equ	0xFDB
 11111                           fsr2h	equ	0xFDA
 11112                           fsr2l	equ	0xFD9
 11113                           status	equ	0xFD8
 11114                           
 11115 ;; *************** function _internalFlash_addressFromPage *****************
 11116 ;; Defined at:
 11117 ;;		line 314 in file "internal_flash.c"
 11118 ;; Parameters:    Size  Location     Type
 11119 ;;  page            2    0[COMRAM] unsigned int 
 11120 ;; Auto vars:     Size  Location     Type
 11121 ;;  address         4    4[COMRAM] unsigned long 
 11122 ;; Return value:  Size  Location     Type
 11123 ;;                  4    0[COMRAM] unsigned long 
 11124 ;; Registers used:
 11125 ;;		wreg, status,2, status,0
 11126 ;; Tracked objects:
 11127 ;;		On entry : 0/0
 11128 ;;		On exit  : 0/0
 11129 ;;		Unchanged: 0/0
 11130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11131 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11132 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11134 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11135 ;;Total ram usage:        8 bytes
 11136 ;; Hardware stack levels used:    1
 11137 ;; This function calls:
 11138 ;;		Nothing
 11139 ;; This function is called by:
 11140 ;;		_internalFlash_readPage
 11141 ;;		_internalFlash_addressWithinPage
 11142 ;; This function uses a non-reentrant model
 11143 ;;
 11144                           
 11145                           	psect	text48
 11146  007BB6                     __ptext48:
 11147                           	opt stack 0
 11148  007BB6                     _internalFlash_addressFromPage:
 11149                           	opt stack 27
 11150                           
 11151                           ;internal_flash.c: 316: uint32_t address;;internal_flash.c: 317: address = (uint32_t) pa
      +                          ge;
 11152                           
 11153                           ;incstack = 0
 11154  007BB6  C001  F005         	movff	internalFlash_addressFromPage@page,internalFlash_addressFromPage@address
 11155  007BBA  C002  F006         	movff	internalFlash_addressFromPage@page+1,internalFlash_addressFromPage@address+1
 11156  007BBE  6A07               	clrf	internalFlash_addressFromPage@address+2,c
 11157  007BC0  6A08               	clrf	internalFlash_addressFromPage@address+3,c
 11158                           
 11159                           ;internal_flash.c: 318: address <<= 10;
 11160  007BC2  0E0A               	movlw	10
 11161  007BC4                     u9585:
 11162  007BC4  90D8               	bcf	status,0,c
 11163  007BC6  3605               	rlcf	internalFlash_addressFromPage@address,f,c
 11164  007BC8  3606               	rlcf	internalFlash_addressFromPage@address+1,f,c
 11165  007BCA  3607               	rlcf	internalFlash_addressFromPage@address+2,f,c
 11166  007BCC  3608               	rlcf	internalFlash_addressFromPage@address+3,f,c
 11167  007BCE  2EE8               	decfsz	wreg,f,c
 11168  007BD0  D7F9               	goto	u9585
 11169                           
 11170                           ;internal_flash.c: 319: return address;
 11171  007BD2  C005  F001         	movff	internalFlash_addressFromPage@address,?_internalFlash_addressFromPage
 11172  007BD6  C006  F002         	movff	internalFlash_addressFromPage@address+1,?_internalFlash_addressFromPage+1
 11173  007BDA  C007  F003         	movff	internalFlash_addressFromPage@address+2,?_internalFlash_addressFromPage+2
 11174  007BDE  C008  F004         	movff	internalFlash_addressFromPage@address+3,?_internalFlash_addressFromPage+3
 11175  007BE2  0012               	return	
 11176  007BE4                     __end_of_internalFlash_addressFromPage:
 11177                           	opt stack 0
 11178                           tblptru	equ	0xFF8
 11179                           tblptrh	equ	0xFF7
 11180                           tblptrl	equ	0xFF6
 11181                           tablat	equ	0xFF5
 11182                           prodh	equ	0xFF4
 11183                           prodl	equ	0xFF3
 11184                           intcon	equ	0xFF2
 11185                           intcon2	equ	0xFF1
 11186                           intcon3	equ	0xFF0
 11187                           postinc0	equ	0xFEE
 11188                           wreg	equ	0xFE8
 11189                           indf1	equ	0xFE7
 11190                           postdec1	equ	0xFE5
 11191                           plusw1	equ	0xFE3
 11192                           fsr1h	equ	0xFE2
 11193                           fsr1l	equ	0xFE1
 11194                           indf2	equ	0xFDF
 11195                           postinc2	equ	0xFDE
 11196                           postdec2	equ	0xFDD
 11197                           plusw2	equ	0xFDB
 11198                           fsr2h	equ	0xFDA
 11199                           fsr2l	equ	0xFD9
 11200                           status	equ	0xFD8
 11201                           
 11202 ;; *************** function __bootloader_check_address *****************
 11203 ;; Defined at:
 11204 ;;		line 100 in file "bootloader.c"
 11205 ;; Parameters:    Size  Location     Type
 11206 ;;  address         4    0[COMRAM] unsigned long 
 11207 ;;  dataLength      1    4[COMRAM] unsigned char 
 11208 ;; Auto vars:     Size  Location     Type
 11209 ;;  cntr            1   11[COMRAM] unsigned char 
 11210 ;;  byte_status     1   10[COMRAM] enum E6935
 11211 ;;  worst_case      1    9[COMRAM] enum E6935
 11212 ;; Return value:  Size  Location     Type
 11213 ;;                  1    wreg      enum E6935
 11214 ;; Registers used:
 11215 ;;		wreg, status,2, status,0
 11216 ;; Tracked objects:
 11217 ;;		On entry : 0/0
 11218 ;;		On exit  : 0/0
 11219 ;;		Unchanged: 0/0
 11220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11221 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11222 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11223 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11224 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11225 ;;Total ram usage:       12 bytes
 11226 ;; Hardware stack levels used:    1
 11227 ;; This function calls:
 11228 ;;		Nothing
 11229 ;; This function is called by:
 11230 ;;		__bootloader_verify_file
 11231 ;;		__bootloader_program
 11232 ;; This function uses a non-reentrant model
 11233 ;;
 11234                           
 11235                           	psect	text49
 11236  004EA2                     __ptext49:
 11237                           	opt stack 0
 11238  004EA2                     __bootloader_check_address:
 11239                           	opt stack 28
 11240                           
 11241                           ;bootloader.c: 102: addressCheckResult_t byte_status;;bootloader.c: 103: addressCheckRes
      +                          ult_t worst_case;;bootloader.c: 104: uint8_t cntr;;bootloader.c: 106: worst_case = ADDRE
      +                          SS_CHECK_RESULT_OK;
 11242                           
 11243                           ;incstack = 0
 11244  004EA2  0E00               	movlw	0
 11245  004EA4  6E0A               	movwf	__bootloader_check_address@worst_case,c
 11246                           
 11247                           ;bootloader.c: 109: for(cntr=0; cntr<dataLength; ++cntr)
 11248  004EA6  0E00               	movlw	0
 11249  004EA8  6E0C               	movwf	__bootloader_check_address@cntr,c
 11250  004EAA  D062               	goto	l2307
 11251  004EAC                     
 11252                           ;bootloader.c: 110: {;bootloader.c: 112: if(((address+cntr)>=0x09000) && ((address+cntr)
      +                          <=0x1FFF7))
 11253  004EAC  500C               	movf	__bootloader_check_address@cntr,w,c
 11254  004EAE  2401               	addwf	__bootloader_check_address@address,w,c
 11255  004EB0  6E06               	movwf	??__bootloader_check_address& (0+255),c
 11256  004EB2  0E00               	movlw	0
 11257  004EB4  2002               	addwfc	__bootloader_check_address@address+1,w,c
 11258  004EB6  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 11259  004EB8  0E00               	movlw	0
 11260  004EBA  2003               	addwfc	__bootloader_check_address@address+2,w,c
 11261  004EBC  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 11262  004EBE  0E00               	movlw	0
 11263  004EC0  2004               	addwfc	__bootloader_check_address@address+3,w,c
 11264  004EC2  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 11265  004EC4  5009               	movf	??__bootloader_check_address+3,w,c
 11266  004EC6  1008               	iorwf	??__bootloader_check_address+2,w,c
 11267  004EC8  E104               	bnz	u10270
 11268  004ECA  0E90               	movlw	144
 11269  004ECC  5C07               	subwf	??__bootloader_check_address+1,w,c
 11270  004ECE  A0D8               	btfss	status,0,c
 11271  004ED0  D018               	goto	l2309
 11272  004ED2                     u10270:
 11273  004ED2  500C               	movf	__bootloader_check_address@cntr,w,c
 11274  004ED4  2401               	addwf	__bootloader_check_address@address,w,c
 11275  004ED6  6E06               	movwf	??__bootloader_check_address& (0+255),c
 11276  004ED8  0E00               	movlw	0
 11277  004EDA  2002               	addwfc	__bootloader_check_address@address+1,w,c
 11278  004EDC  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 11279  004EDE  0E00               	movlw	0
 11280  004EE0  2003               	addwfc	__bootloader_check_address@address+2,w,c
 11281  004EE2  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 11282  004EE4  0E00               	movlw	0
 11283  004EE6  2004               	addwfc	__bootloader_check_address@address+3,w,c
 11284  004EE8  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 11285  004EEA  5009               	movf	??__bootloader_check_address+3,w,c
 11286  004EEC  E10A               	bnz	l13331
 11287  004EEE  0EF8               	movlw	248
 11288  004EF0  5C06               	subwf	??__bootloader_check_address,w,c
 11289  004EF2  0EFF               	movlw	255
 11290  004EF4  5807               	subwfb	??__bootloader_check_address+1,w,c
 11291  004EF6  0E01               	movlw	1
 11292  004EF8  5808               	subwfb	??__bootloader_check_address+2,w,c
 11293  004EFA  B0D8               	btfsc	status,0,c
 11294  004EFC  D002               	goto	l2309
 11295                           
 11296                           ;bootloader.c: 113: {;bootloader.c: 114: byte_status = ADDRESS_CHECK_RESULT_OK;
 11297  004EFE  0E00               	movlw	0
 11298  004F00  D029               	goto	L4
 11299  004F02                     l2309:
 11300  004F02                     l13331:
 11301                           
 11302                           ;bootloader.c: 118: else if(((address+cntr)>=0x1FFF8) && ((address+cntr)<=0x1FFFF))
 11303  004F02  500C               	movf	__bootloader_check_address@cntr,w,c
 11304  004F04  2401               	addwf	__bootloader_check_address@address,w,c
 11305  004F06  6E06               	movwf	??__bootloader_check_address& (0+255),c
 11306  004F08  0E00               	movlw	0
 11307  004F0A  2002               	addwfc	__bootloader_check_address@address+1,w,c
 11308  004F0C  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 11309  004F0E  0E00               	movlw	0
 11310  004F10  2003               	addwfc	__bootloader_check_address@address+2,w,c
 11311  004F12  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 11312  004F14  0E00               	movlw	0
 11313  004F16  2004               	addwfc	__bootloader_check_address@address+3,w,c
 11314  004F18  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 11315  004F1A  5009               	movf	??__bootloader_check_address+3,w,c
 11316  004F1C  E108               	bnz	u10290
 11317  004F1E  0EF8               	movlw	248
 11318  004F20  5C06               	subwf	??__bootloader_check_address,w,c
 11319  004F22  0EFF               	movlw	255
 11320  004F24  5807               	subwfb	??__bootloader_check_address+1,w,c
 11321  004F26  0E01               	movlw	1
 11322  004F28  5808               	subwfb	??__bootloader_check_address+2,w,c
 11323  004F2A  A0D8               	btfss	status,0,c
 11324  004F2C  D015               	goto	l2311
 11325  004F2E                     u10290:
 11326  004F2E  500C               	movf	__bootloader_check_address@cntr,w,c
 11327  004F30  2401               	addwf	__bootloader_check_address@address,w,c
 11328  004F32  6E06               	movwf	??__bootloader_check_address& (0+255),c
 11329  004F34  0E00               	movlw	0
 11330  004F36  2002               	addwfc	__bootloader_check_address@address+1,w,c
 11331  004F38  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 11332  004F3A  0E00               	movlw	0
 11333  004F3C  2003               	addwfc	__bootloader_check_address@address+2,w,c
 11334  004F3E  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 11335  004F40  0E00               	movlw	0
 11336  004F42  2004               	addwfc	__bootloader_check_address@address+3,w,c
 11337  004F44  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 11338  004F46  5009               	movf	??__bootloader_check_address+3,w,c
 11339  004F48  E107               	bnz	l2311
 11340  004F4A  0E02               	movlw	2
 11341  004F4C  5C08               	subwf	??__bootloader_check_address+2,w,c
 11342  004F4E  B0D8               	btfsc	status,0,c
 11343  004F50  D003               	goto	l2311
 11344                           
 11345                           ;bootloader.c: 119: {;bootloader.c: 120: byte_status = ADDRESS_CHECK_RESULT_CONFIGURATIO
      +                          N_BITS;
 11346  004F52  0E01               	movlw	1
 11347  004F54                     L4:
 11348  004F54  6E0B               	movwf	__bootloader_check_address@byte_status,c
 11349                           
 11350                           ;bootloader.c: 121: }
 11351  004F56  D001               	goto	l2312
 11352  004F58                     l2311:
 11353                           
 11354                           ;bootloader.c: 122: else;bootloader.c: 123: {;bootloader.c: 124: byte_status = ADDRESS_C
      +                          HECK_RESULT_ERROR;
 11355  004F58  680B               	setf	__bootloader_check_address@byte_status,c
 11356  004F5A                     l2312:
 11357                           
 11358                           ;bootloader.c: 125: };bootloader.c: 128: if(byte_status == ADDRESS_CHECK_RESULT_ERROR)
 11359  004F5A  280B               	incf	__bootloader_check_address@byte_status,w,c
 11360  004F5C  A4D8               	btfss	status,2,c
 11361  004F5E  D002               	goto	l2313
 11362                           
 11363                           ;bootloader.c: 129: {;bootloader.c: 130: return ADDRESS_CHECK_RESULT_ERROR;
 11364  004F60  0EFF               	movlw	255
 11365  004F62  0012               	return	
 11366  004F64                     l2313:
 11367                           
 11368                           ;bootloader.c: 131: };bootloader.c: 134: if(byte_status > worst_case)
 11369  004F64  500B               	movf	__bootloader_check_address@byte_status,w,c
 11370  004F66  5C0A               	subwf	__bootloader_check_address@worst_case,w,c
 11371  004F68  A0D8               	btfss	status,0,c
 11372                           
 11373                           ;bootloader.c: 135: {;bootloader.c: 136: worst_case = byte_status;
 11374  004F6A  C00B  F00A         	movff	__bootloader_check_address@byte_status,__bootloader_check_address@worst_case
 11375  004F6E  2A0C               	incf	__bootloader_check_address@cntr,f,c
 11376  004F70                     l2307:
 11377  004F70  5005               	movf	__bootloader_check_address@dataLength,w,c
 11378  004F72  5C0C               	subwf	__bootloader_check_address@cntr,w,c
 11379  004F74  A0D8               	btfss	status,0,c
 11380  004F76  D79A               	goto	l2308
 11381                           
 11382                           ;bootloader.c: 137: };bootloader.c: 138: };bootloader.c: 140: return worst_case;
 11383  004F78  500A               	movf	__bootloader_check_address@worst_case,w,c
 11384  004F7A  0012               	return	
 11385  004F7C                     __end_of__bootloader_check_address:
 11386                           	opt stack 0
 11387                           tblptru	equ	0xFF8
 11388                           tblptrh	equ	0xFF7
 11389                           tblptrl	equ	0xFF6
 11390                           tablat	equ	0xFF5
 11391                           prodh	equ	0xFF4
 11392                           prodl	equ	0xFF3
 11393                           intcon	equ	0xFF2
 11394                           intcon2	equ	0xFF1
 11395                           intcon3	equ	0xFF0
 11396                           postinc0	equ	0xFEE
 11397                           wreg	equ	0xFE8
 11398                           indf1	equ	0xFE7
 11399                           postdec1	equ	0xFE5
 11400                           plusw1	equ	0xFE3
 11401                           fsr1h	equ	0xFE2
 11402                           fsr1l	equ	0xFE1
 11403                           indf2	equ	0xFDF
 11404                           postinc2	equ	0xFDE
 11405                           postdec2	equ	0xFDD
 11406                           plusw2	equ	0xFDB
 11407                           fsr2h	equ	0xFDA
 11408                           fsr2l	equ	0xFD9
 11409                           status	equ	0xFD8
 11410                           
 11411 ;; *************** function __bootloader_find_file *****************
 11412 ;; Defined at:
 11413 ;;		line 143 in file "bootloader.c"
 11414 ;; Parameters:    Size  Location     Type
 11415 ;;		None
 11416 ;; Auto vars:     Size  Location     Type
 11417 ;;		None
 11418 ;; Return value:  Size  Location     Type
 11419 ;;                  1    wreg      void 
 11420 ;; Registers used:
 11421 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11422 ;; Tracked objects:
 11423 ;;		On entry : 0/0
 11424 ;;		On exit  : 0/0
 11425 ;;		Unchanged: 0/0
 11426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11431 ;;Total ram usage:        0 bytes
 11432 ;; Hardware stack levels used:    1
 11433 ;; Hardware stack levels required when called:    6
 11434 ;; This function calls:
 11435 ;;		_fat_find_file
 11436 ;;		_fat_get_file_size
 11437 ;; This function is called by:
 11438 ;;		_bootloader_run
 11439 ;; This function uses a non-reentrant model
 11440 ;;
 11441                           
 11442                           	psect	text50
 11443  005B66                     __ptext50:
 11444                           	opt stack 0
 11445  005B66                     __bootloader_find_file:
 11446                           	opt stack 23
 11447                           
 11448                           ;bootloader.c: 146: file_number = fat_find_file(bootloader_filename, bootloader_extensio
      +                          n);
 11449                           
 11450                           ;incstack = 0
 11451  005B66  0EB7               	movlw	low _bootloader_filename
 11452  005B68  6E30               	movwf	fat_find_file@name,c
 11453  005B6A  0E8F               	movlw	high _bootloader_filename
 11454  005B6C  6E31               	movwf	fat_find_file@name+1,c
 11455  005B6E  0EC8               	movlw	low _bootloader_extension
 11456  005B70  6E32               	movwf	fat_find_file@extension,c
 11457  005B72  0E8F               	movlw	high _bootloader_extension
 11458  005B74  6E33               	movwf	fat_find_file@extension+1,c
 11459  005B76  EC47  F02B         	call	_fat_find_file	;wreg free
 11460  005B7A  0100               	movlb	0	; () banked
 11461  005B7C  6FFE               	movwf	_file_number& (0+255),b
 11462                           
 11463                           ; BSR set to: 0
 11464                           ;bootloader.c: 149: if(file_number!=0xFF)
 11465  005B7E  29FE               	incf	_file_number& (0+255),w,b
 11466  005B80  B4D8               	btfsc	status,2,c
 11467  005B82  D034               	goto	l2319
 11468                           
 11469                           ; BSR set to: 0
 11470                           ;bootloader.c: 150: {;bootloader.c: 152: hex_file_size = fat_get_file_size(file_number);
 11471  005B84  51FE               	movf	_file_number& (0+255),w,b
 11472  005B86  EC91  F034         	call	_fat_get_file_size
 11473  005B8A  C030  F078         	movff	?_fat_get_file_size,_hex_file_size
 11474  005B8E  C031  F079         	movff	?_fat_get_file_size+1,_hex_file_size+1
 11475  005B92  C032  F07A         	movff	?_fat_get_file_size+2,_hex_file_size+2
 11476  005B96  C033  F07B         	movff	?_fat_get_file_size+3,_hex_file_size+3
 11477                           
 11478                           ;bootloader.c: 154: hex_file_entries = 0;
 11479  005B9A  0E00               	movlw	0
 11480  005B9C  0101               	movlb	1	; () banked
 11481  005B9E  6F6B               	movwf	(_hex_file_entries+1)& (0+255),b
 11482  005BA0  0E00               	movlw	0
 11483  005BA2  6F6A               	movwf	_hex_file_entries& (0+255),b
 11484                           
 11485                           ; BSR set to: 1
 11486                           ;bootloader.c: 155: hex_file_offset = 0;
 11487  005BA4  0E00               	movlw	0
 11488  005BA6  0100               	movlb	0	; () banked
 11489  005BA8  6F7C               	movwf	_hex_file_offset& (0+255),b
 11490  005BAA  0E00               	movlw	0
 11491  005BAC  6F7D               	movwf	(_hex_file_offset+1)& (0+255),b
 11492  005BAE  0E00               	movlw	0
 11493  005BB0  6F7E               	movwf	(_hex_file_offset+2)& (0+255),b
 11494  005BB2  0E00               	movlw	0
 11495  005BB4  6F7F               	movwf	(_hex_file_offset+3)& (0+255),b
 11496                           
 11497                           ; BSR set to: 0
 11498                           ;bootloader.c: 156: file_minimum_address = 0xFFFFFFFF;
 11499  005BB6  0101               	movlb	1	; () banked
 11500  005BB8  6948               	setf	_file_minimum_address& (0+255),b
 11501  005BBA  6949               	setf	(_file_minimum_address+1)& (0+255),b
 11502  005BBC  694A               	setf	(_file_minimum_address+2)& (0+255),b
 11503  005BBE  694B               	setf	(_file_minimum_address+3)& (0+255),b
 11504                           
 11505                           ; BSR set to: 1
 11506                           ;bootloader.c: 157: file_maximum_address = 0x00000000;
 11507  005BC0  0E00               	movlw	0
 11508  005BC2  6F44               	movwf	_file_maximum_address& (0+255),b
 11509  005BC4  0E00               	movlw	0
 11510  005BC6  6F45               	movwf	(_file_maximum_address+1)& (0+255),b
 11511  005BC8  0E00               	movlw	0
 11512  005BCA  6F46               	movwf	(_file_maximum_address+2)& (0+255),b
 11513  005BCC  0E00               	movlw	0
 11514  005BCE  6F47               	movwf	(_file_maximum_address+3)& (0+255),b
 11515                           
 11516                           ; BSR set to: 1
 11517                           ;bootloader.c: 158: extended_linear_address = 0x00000000;
 11518  005BD0  0E00               	movlw	0
 11519  005BD2  6F40               	movwf	_extended_linear_address& (0+255),b
 11520  005BD4  0E00               	movlw	0
 11521  005BD6  6F41               	movwf	(_extended_linear_address+1)& (0+255),b
 11522  005BD8  0E00               	movlw	0
 11523  005BDA  6F42               	movwf	(_extended_linear_address+2)& (0+255),b
 11524  005BDC  0E00               	movlw	0
 11525  005BDE  6F43               	movwf	(_extended_linear_address+3)& (0+255),b
 11526                           
 11527                           ; BSR set to: 1
 11528                           ;bootloader.c: 159: os.bootloader_mode = BOOTLOADER_MODE_FILE_FOUND;
 11529  005BE0  0E20               	movlw	32
 11530  005BE2  0100               	movlb	0	; () banked
 11531  005BE4  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 11532                           
 11533                           ; BSR set to: 0
 11534                           ;bootloader.c: 160: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_FOUND;
 11535  005BE6  0E20               	movlw	32
 11536  005BE8  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 11537                           
 11538                           ;bootloader.c: 161: }
 11539  005BEA  0012               	return	
 11540  005BEC                     l2319:
 11541                           
 11542                           ; BSR set to: 0
 11543                           ;bootloader.c: 163: else;bootloader.c: 164: {;bootloader.c: 166: hex_file_size = 0;
 11544                           
 11545                           ; BSR set to: 0
 11546  005BEC  0E00               	movlw	0
 11547  005BEE  6F78               	movwf	_hex_file_size& (0+255),b
 11548  005BF0  0E00               	movlw	0
 11549  005BF2  6F79               	movwf	(_hex_file_size+1)& (0+255),b
 11550  005BF4  0E00               	movlw	0
 11551  005BF6  6F7A               	movwf	(_hex_file_size+2)& (0+255),b
 11552  005BF8  0E00               	movlw	0
 11553  005BFA  6F7B               	movwf	(_hex_file_size+3)& (0+255),b
 11554                           
 11555                           ;bootloader.c: 168: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
 11556  005BFC  0E10               	movlw	16
 11557  005BFE  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 11558                           
 11559                           ;bootloader.c: 169: if(os.display_mode != DISPLAY_MODE_BOOTLOADER_START)
 11560  005C00  5165               	movf	(_os+5)& (0+255),w,b	;volatile
 11561  005C02  B4D8               	btfsc	status,2,c
 11562  005C04  0012               	return	
 11563                           
 11564                           ; BSR set to: 0
 11565                           ;bootloader.c: 170: {;bootloader.c: 171: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARC
      +                          H;
 11566  005C06  0E10               	movlw	16
 11567  005C08  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 11568                           
 11569                           ; BSR set to: 0
 11570  005C0A  0012               	return	
 11571  005C0C                     __end_of__bootloader_find_file:
 11572                           	opt stack 0
 11573                           tblptru	equ	0xFF8
 11574                           tblptrh	equ	0xFF7
 11575                           tblptrl	equ	0xFF6
 11576                           tablat	equ	0xFF5
 11577                           prodh	equ	0xFF4
 11578                           prodl	equ	0xFF3
 11579                           intcon	equ	0xFF2
 11580                           intcon2	equ	0xFF1
 11581                           intcon3	equ	0xFF0
 11582                           postinc0	equ	0xFEE
 11583                           wreg	equ	0xFE8
 11584                           indf1	equ	0xFE7
 11585                           postdec1	equ	0xFE5
 11586                           plusw1	equ	0xFE3
 11587                           fsr1h	equ	0xFE2
 11588                           fsr1l	equ	0xFE1
 11589                           indf2	equ	0xFDF
 11590                           postinc2	equ	0xFDE
 11591                           postdec2	equ	0xFDD
 11592                           plusw2	equ	0xFDB
 11593                           fsr2h	equ	0xFDA
 11594                           fsr2l	equ	0xFD9
 11595                           status	equ	0xFD8
 11596                           
 11597 ;; *************** function __normal_mode *****************
 11598 ;; Defined at:
 11599 ;;		line 205 in file "main.c"
 11600 ;; Parameters:    Size  Location     Type
 11601 ;;		None
 11602 ;; Auto vars:     Size  Location     Type
 11603 ;;		None
 11604 ;; Return value:  Size  Location     Type
 11605 ;;                  1    wreg      unsigned char 
 11606 ;; Registers used:
 11607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11608 ;; Tracked objects:
 11609 ;;		On entry : 0/0
 11610 ;;		On exit  : 0/0
 11611 ;;		Unchanged: 0/0
 11612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11617 ;;Total ram usage:        0 bytes
 11618 ;; Hardware stack levels used:    1
 11619 ;; Hardware stack levels required when called:    3
 11620 ;; This function calls:
 11621 ;;		_i2c_eeprom_readByte
 11622 ;;		_i2c_eeprom_writeByte
 11623 ;; This function is called by:
 11624 ;;		_main
 11625 ;; This function uses a non-reentrant model
 11626 ;;
 11627                           
 11628                           	psect	text51
 11629  007058                     __ptext51:
 11630                           	opt stack 0
 11631  007058                     __normal_mode:
 11632                           	opt stack 27
 11633                           
 11634                           ;main.c: 207: if(i2c_eeprom_readByte(0x100)==0x94)
 11635                           
 11636                           ; BSR set to: 0
 11637                           ;incstack = 0
 11638  007058  0E01               	movlw	1
 11639  00705A  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 11640  00705C  0E00               	movlw	0
 11641  00705E  6E12               	movwf	i2c_eeprom_readByte@address,c
 11642  007060  ECB2  F03A         	call	_i2c_eeprom_readByte	;wreg free
 11643  007064  0A94               	xorlw	148
 11644  007066  A4D8               	btfss	status,2,c
 11645  007068  D00A               	goto	l910
 11646                           
 11647                           ;main.c: 208: {;main.c: 210: i2c_eeprom_writeByte(0x100, 0x00);
 11648  00706A  0E01               	movlw	1
 11649  00706C  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 11650  00706E  0E00               	movlw	0
 11651  007070  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 11652  007072  0E00               	movlw	0
 11653  007074  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 11654  007076  ECF3  F03B         	call	_i2c_eeprom_writeByte	;wreg free
 11655                           
 11656                           ;main.c: 212: return 0;
 11657  00707A  0E00               	movlw	0
 11658                           
 11659                           ;main.c: 213: }
 11660  00707C  0012               	return	
 11661  00707E                     l910:
 11662                           
 11663                           ;main.c: 214: else if(i2c_eeprom_readByte(0x100)==0x78)
 11664  00707E  0E01               	movlw	1
 11665  007080  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 11666  007082  0E00               	movlw	0
 11667  007084  6E12               	movwf	i2c_eeprom_readByte@address,c
 11668  007086  ECB2  F03A         	call	_i2c_eeprom_readByte	;wreg free
 11669  00708A  0A78               	xorlw	120
 11670  00708C  A4D8               	btfss	status,2,c
 11671  00708E  D00A               	goto	l913
 11672                           
 11673                           ;main.c: 215: {;main.c: 217: i2c_eeprom_writeByte(0x100, 0x00);
 11674  007090  0E01               	movlw	1
 11675  007092  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 11676  007094  0E00               	movlw	0
 11677  007096  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 11678  007098  0E00               	movlw	0
 11679  00709A  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 11680  00709C  ECF3  F03B         	call	_i2c_eeprom_writeByte	;wreg free
 11681                           
 11682                           ;main.c: 219: return 1;
 11683  0070A0  0E01               	movlw	1
 11684                           
 11685                           ;main.c: 220: }
 11686  0070A2  0012               	return	
 11687  0070A4                     l913:
 11688                           
 11689                           ;main.c: 221: else if(!PORTAbits.RA0)
 11690  0070A4  B080               	btfsc	3968,0,c	;volatile
 11691  0070A6  D002               	goto	l915
 11692                           
 11693                           ;main.c: 222: {;main.c: 224: return 0;
 11694  0070A8  0E00               	movlw	0
 11695                           
 11696                           ;main.c: 225: }
 11697  0070AA  0012               	return	
 11698  0070AC                     l915:
 11699                           
 11700                           ;main.c: 226: else;main.c: 227: {;main.c: 229: return 1;
 11701  0070AC  0E01               	movlw	1
 11702  0070AE  0012               	return	
 11703  0070B0                     __end_of__normal_mode:
 11704                           	opt stack 0
 11705                           tblptru	equ	0xFF8
 11706                           tblptrh	equ	0xFF7
 11707                           tblptrl	equ	0xFF6
 11708                           tablat	equ	0xFF5
 11709                           prodh	equ	0xFF4
 11710                           prodl	equ	0xFF3
 11711                           intcon	equ	0xFF2
 11712                           intcon2	equ	0xFF1
 11713                           intcon3	equ	0xFF0
 11714                           postinc0	equ	0xFEE
 11715                           wreg	equ	0xFE8
 11716                           indf1	equ	0xFE7
 11717                           postdec1	equ	0xFE5
 11718                           plusw1	equ	0xFE3
 11719                           fsr1h	equ	0xFE2
 11720                           fsr1l	equ	0xFE1
 11721                           indf2	equ	0xFDF
 11722                           postinc2	equ	0xFDE
 11723                           postdec2	equ	0xFDD
 11724                           plusw2	equ	0xFDB
 11725                           fsr2h	equ	0xFDA
 11726                           fsr2l	equ	0xFD9
 11727                           status	equ	0xFD8
 11728                           
 11729 ;; *************** function _i2c_eeprom_readByte *****************
 11730 ;; Defined at:
 11731 ;;		line 367 in file "i2c.c"
 11732 ;; Parameters:    Size  Location     Type
 11733 ;;  address         2   17[COMRAM] unsigned int 
 11734 ;; Auto vars:     Size  Location     Type
 11735 ;;  addr            1   23[COMRAM] unsigned char 
 11736 ;;  slave_addres    1   22[COMRAM] unsigned char 
 11737 ;; Return value:  Size  Location     Type
 11738 ;;                  1    wreg      unsigned char 
 11739 ;; Registers used:
 11740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11741 ;; Tracked objects:
 11742 ;;		On entry : 0/0
 11743 ;;		On exit  : 0/0
 11744 ;;		Unchanged: 0/0
 11745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11746 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11747 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11748 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11749 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11750 ;;Total ram usage:        7 bytes
 11751 ;; Hardware stack levels used:    1
 11752 ;; Hardware stack levels required when called:    2
 11753 ;; This function calls:
 11754 ;;		__i2c_read
 11755 ;;		__i2c_write
 11756 ;;		_i2c_set_frequency
 11757 ;; This function is called by:
 11758 ;;		__normal_mode
 11759 ;; This function uses a non-reentrant model
 11760 ;;
 11761                           
 11762                           	psect	text52
 11763  007564                     __ptext52:
 11764                           	opt stack 0
 11765  007564                     _i2c_eeprom_readByte:
 11766                           	opt stack 27
 11767                           
 11768                           ;i2c.c: 369: uint8_t slave_address;;i2c.c: 370: uint8_t addr;;i2c.c: 371: slave_address 
      +                          = 0b10100000 | ((address&0b0000011100000000)>>7);
 11769                           
 11770                           ;incstack = 0
 11771  007564  C012  F014         	movff	i2c_eeprom_readByte@address,??_i2c_eeprom_readByte
 11772  007568  C013  F015         	movff	i2c_eeprom_readByte@address+1,??_i2c_eeprom_readByte+1
 11773  00756C  0E07               	movlw	7
 11774  00756E  6E16               	movwf	(??_i2c_eeprom_readByte+2)& (0+255),c
 11775  007570                     u10925:
 11776  007570  90D8               	bcf	status,0,c
 11777  007572  3215               	rrcf	??_i2c_eeprom_readByte+1,f,c
 11778  007574  3214               	rrcf	??_i2c_eeprom_readByte,f,c
 11779  007576  2E16               	decfsz	(??_i2c_eeprom_readByte+2)& (0+255),f,c
 11780  007578  D7FB               	goto	u10925
 11781  00757A  5014               	movf	??_i2c_eeprom_readByte,w,c
 11782  00757C  0B0E               	andlw	14
 11783  00757E  09A0               	iorlw	160
 11784  007580  6E17               	movwf	i2c_eeprom_readByte@slave_address,c
 11785                           
 11786                           ;i2c.c: 372: addr = address & 0xFF;
 11787  007582  C012  F018         	movff	i2c_eeprom_readByte@address,i2c_eeprom_readByte@addr
 11788                           
 11789                           ;i2c.c: 375: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 11790  007586  0E02               	movlw	2
 11791  007588  EC34  F03E         	call	_i2c_set_frequency
 11792                           
 11793                           ;i2c.c: 377: _i2c_write(slave_address, &addr, 1);
 11794  00758C  0E18               	movlw	low i2c_eeprom_readByte@addr
 11795  00758E  6E06               	movwf	__i2c_write@data,c
 11796  007590  0E00               	movlw	high i2c_eeprom_readByte@addr
 11797  007592  6E07               	movwf	__i2c_write@data+1,c
 11798  007594  0E01               	movlw	1
 11799  007596  6E08               	movwf	__i2c_write@length,c
 11800  007598  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 11801  00759A  EC26  F03B         	call	__i2c_write
 11802                           
 11803                           ;i2c.c: 378: _i2c_read(slave_address, &addr, 1);
 11804  00759E  0E18               	movlw	low i2c_eeprom_readByte@addr
 11805  0075A0  6E06               	movwf	__i2c_read@data,c
 11806  0075A2  0E00               	movlw	high i2c_eeprom_readByte@addr
 11807  0075A4  6E07               	movwf	__i2c_read@data+1,c
 11808  0075A6  0E01               	movlw	1
 11809  0075A8  6E08               	movwf	__i2c_read@length,c
 11810  0075AA  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 11811  0075AC  EC9D  F031         	call	__i2c_read
 11812                           
 11813                           ;i2c.c: 379: return addr;
 11814  0075B0  5018               	movf	i2c_eeprom_readByte@addr,w,c
 11815  0075B2  0012               	return	
 11816  0075B4                     __end_of_i2c_eeprom_readByte:
 11817                           	opt stack 0
 11818                           tblptru	equ	0xFF8
 11819                           tblptrh	equ	0xFF7
 11820                           tblptrl	equ	0xFF6
 11821                           tablat	equ	0xFF5
 11822                           prodh	equ	0xFF4
 11823                           prodl	equ	0xFF3
 11824                           intcon	equ	0xFF2
 11825                           intcon2	equ	0xFF1
 11826                           intcon3	equ	0xFF0
 11827                           postinc0	equ	0xFEE
 11828                           wreg	equ	0xFE8
 11829                           indf1	equ	0xFE7
 11830                           postdec1	equ	0xFE5
 11831                           plusw1	equ	0xFE3
 11832                           fsr1h	equ	0xFE2
 11833                           fsr1l	equ	0xFE1
 11834                           indf2	equ	0xFDF
 11835                           postinc2	equ	0xFDE
 11836                           postdec2	equ	0xFDD
 11837                           plusw2	equ	0xFDB
 11838                           fsr2h	equ	0xFDA
 11839                           fsr2l	equ	0xFD9
 11840                           status	equ	0xFD8
 11841                           
 11842 ;; *************** function __i2c_read *****************
 11843 ;; Defined at:
 11844 ;;		line 161 in file "i2c.c"
 11845 ;; Parameters:    Size  Location     Type
 11846 ;;  slave_addres    1    wreg     unsigned char 
 11847 ;;  data            2    5[COMRAM] PTR unsigned char 
 11848 ;;		 -> i2c_eeprom_readByte@addr(1), 
 11849 ;;  length          1    7[COMRAM] unsigned char 
 11850 ;; Auto vars:     Size  Location     Type
 11851 ;;  slave_addres    1   15[COMRAM] unsigned char 
 11852 ;;  cntr            1   16[COMRAM] unsigned char 
 11853 ;; Return value:  Size  Location     Type
 11854 ;;                  1    wreg      void 
 11855 ;; Registers used:
 11856 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11857 ;; Tracked objects:
 11858 ;;		On entry : 0/0
 11859 ;;		On exit  : 0/0
 11860 ;;		Unchanged: 0/0
 11861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11862 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11863 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11864 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11865 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11866 ;;Total ram usage:       12 bytes
 11867 ;; Hardware stack levels used:    1
 11868 ;; Hardware stack levels required when called:    1
 11869 ;; This function calls:
 11870 ;;		__i2c_acknowledge
 11871 ;;		__i2c_get
 11872 ;;		__i2c_not_acknowledge
 11873 ;;		__i2c_send
 11874 ;;		__i2c_start
 11875 ;;		__i2c_stop
 11876 ;;		__i2c_wait_idle
 11877 ;; This function is called by:
 11878 ;;		_i2c_eeprom_readByte
 11879 ;;		_i2c_eeprom_read
 11880 ;; This function uses a non-reentrant model
 11881 ;;
 11882                           
 11883                           	psect	text53
 11884  00633A                     __ptext53:
 11885                           	opt stack 0
 11886  00633A                     __i2c_read:
 11887                           	opt stack 27
 11888                           
 11889                           ;incstack = 0
 11890                           ;__i2c_read@slave_address stored from wreg
 11891  00633A  6E10               	movwf	__i2c_read@slave_address,c
 11892                           
 11893                           ;i2c.c: 163: uint8_t cntr;;i2c.c: 165: _i2c_wait_idle();
 11894  00633C  EC58  F038         	call	__i2c_wait_idle	;wreg free
 11895                           
 11896                           ;i2c.c: 166: _i2c_start();
 11897  006340  EC5B  F040         	call	__i2c_start	;wreg free
 11898                           
 11899                           ;i2c.c: 167: _i2c_wait_idle();
 11900  006344  EC58  F038         	call	__i2c_wait_idle	;wreg free
 11901                           
 11902                           ;i2c.c: 168: _i2c_send(slave_address | 0x01);
 11903  006348  5010               	movf	__i2c_read@slave_address,w,c
 11904  00634A  0901               	iorlw	1
 11905  00634C  EC5F  F040         	call	__i2c_send
 11906                           
 11907                           ;i2c.c: 169: _i2c_wait_idle();
 11908  006350  EC58  F038         	call	__i2c_wait_idle	;wreg free
 11909                           
 11910                           ;i2c.c: 171: for(cntr=0; cntr<length-1; ++cntr)
 11911  006354  0E00               	movlw	0
 11912  006356  6E11               	movwf	__i2c_read@cntr,c
 11913  006358  D00E               	goto	l1206
 11914  00635A                     
 11915                           ;i2c.c: 172: {;i2c.c: 173: data[cntr] = _i2c_get();
 11916  00635A  5011               	movf	__i2c_read@cntr,w,c
 11917  00635C  0D01               	mullw	1
 11918  00635E  50F3               	movf	prodl,w,c
 11919  006360  2406               	addwf	__i2c_read@data,w,c
 11920  006362  6ED9               	movwf	fsr2l,c
 11921  006364  50F4               	movf	prodh,w,c
 11922  006366  2007               	addwfc	__i2c_read@data+1,w,c
 11923  006368  6EDA               	movwf	fsr2h,c
 11924  00636A  EC20  F040         	call	__i2c_get	;wreg free
 11925  00636E  6EDF               	movwf	indf2,c
 11926                           
 11927                           ;i2c.c: 174: _i2c_acknowledge();
 11928  006370  EC25  F040         	call	__i2c_acknowledge	;wreg free
 11929  006374  2A11               	incf	__i2c_read@cntr,f,c
 11930  006376                     l1206:
 11931  006376  0EFF               	movlw	255
 11932  006378  6E09               	movwf	??__i2c_read& (0+255),c
 11933  00637A  0EFF               	movlw	255
 11934  00637C  6E0A               	movwf	(??__i2c_read+1)& (0+255),c
 11935  00637E  5008               	movf	__i2c_read@length,w,c
 11936  006380  6E0B               	movwf	(??__i2c_read+2)& (0+255),c
 11937  006382  6A0C               	clrf	(??__i2c_read+3)& (0+255),c
 11938  006384  5009               	movf	??__i2c_read,w,c
 11939  006386  260B               	addwf	??__i2c_read+2,f,c
 11940  006388  500A               	movf	??__i2c_read+1,w,c
 11941  00638A  220C               	addwfc	??__i2c_read+3,f,c
 11942  00638C  5011               	movf	__i2c_read@cntr,w,c
 11943  00638E  6E0D               	movwf	(??__i2c_read+4)& (0+255),c
 11944  006390  6A0E               	clrf	(??__i2c_read+5)& (0+255),c
 11945  006392  500B               	movf	??__i2c_read+2,w,c
 11946  006394  5C0D               	subwf	??__i2c_read+4,w,c
 11947  006396  500E               	movf	??__i2c_read+5,w,c
 11948  006398  0A80               	xorlw	128
 11949  00639A  6E0F               	movwf	(??__i2c_read+6)& (0+255),c
 11950  00639C  500C               	movf	??__i2c_read+3,w,c
 11951  00639E  0A80               	xorlw	128
 11952  0063A0  580F               	subwfb	(??__i2c_read+6)& (0+255),w,c
 11953  0063A2  A0D8               	btfss	status,0,c
 11954  0063A4  D7DA               	goto	l1207
 11955                           
 11956                           ;i2c.c: 175: };i2c.c: 176: data[cntr] = _i2c_get();
 11957  0063A6  5011               	movf	__i2c_read@cntr,w,c
 11958  0063A8  0D01               	mullw	1
 11959  0063AA  50F3               	movf	prodl,w,c
 11960  0063AC  2406               	addwf	__i2c_read@data,w,c
 11961  0063AE  6ED9               	movwf	fsr2l,c
 11962  0063B0  50F4               	movf	prodh,w,c
 11963  0063B2  2007               	addwfc	__i2c_read@data+1,w,c
 11964  0063B4  6EDA               	movwf	fsr2h,c
 11965  0063B6  EC20  F040         	call	__i2c_get	;wreg free
 11966  0063BA  6EDF               	movwf	indf2,c
 11967                           
 11968                           ;i2c.c: 177: _i2c_not_acknowledge();
 11969  0063BC  EC1B  F040         	call	__i2c_not_acknowledge	;wreg free
 11970                           
 11971                           ;i2c.c: 179: _i2c_stop();
 11972  0063C0  EC57  F040         	call	__i2c_stop	;wreg free
 11973  0063C4  0012               	return		;funcret
 11974  0063C6                     __end_of__i2c_read:
 11975                           	opt stack 0
 11976                           tblptru	equ	0xFF8
 11977                           tblptrh	equ	0xFF7
 11978                           tblptrl	equ	0xFF6
 11979                           tablat	equ	0xFF5
 11980                           prodh	equ	0xFF4
 11981                           prodl	equ	0xFF3
 11982                           intcon	equ	0xFF2
 11983                           intcon2	equ	0xFF1
 11984                           intcon3	equ	0xFF0
 11985                           postinc0	equ	0xFEE
 11986                           wreg	equ	0xFE8
 11987                           indf1	equ	0xFE7
 11988                           postdec1	equ	0xFE5
 11989                           plusw1	equ	0xFE3
 11990                           fsr1h	equ	0xFE2
 11991                           fsr1l	equ	0xFE1
 11992                           indf2	equ	0xFDF
 11993                           postinc2	equ	0xFDE
 11994                           postdec2	equ	0xFDD
 11995                           plusw2	equ	0xFDB
 11996                           fsr2h	equ	0xFDA
 11997                           fsr2l	equ	0xFD9
 11998                           status	equ	0xFD8
 11999                           
 12000 ;; *************** function __i2c_not_acknowledge *****************
 12001 ;; Defined at:
 12002 ;;		line 90 in file "i2c.c"
 12003 ;; Parameters:    Size  Location     Type
 12004 ;;		None
 12005 ;; Auto vars:     Size  Location     Type
 12006 ;;		None
 12007 ;; Return value:  Size  Location     Type
 12008 ;;                  1    wreg      void 
 12009 ;; Registers used:
 12010 ;;		None
 12011 ;; Tracked objects:
 12012 ;;		On entry : 0/0
 12013 ;;		On exit  : 0/0
 12014 ;;		Unchanged: 0/0
 12015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12020 ;;Total ram usage:        0 bytes
 12021 ;; Hardware stack levels used:    1
 12022 ;; This function calls:
 12023 ;;		Nothing
 12024 ;; This function is called by:
 12025 ;;		__i2c_read
 12026 ;; This function uses a non-reentrant model
 12027 ;;
 12028                           
 12029                           	psect	text54
 12030  008036                     __ptext54:
 12031                           	opt stack 0
 12032  008036                     __i2c_not_acknowledge:
 12033                           	opt stack 27
 12034                           
 12035                           ;i2c.c: 92: SSP1CON2bits.ACKDT = 1;
 12036                           
 12037                           ;incstack = 0
 12038  008036  8AC5               	bsf	4037,5,c	;volatile
 12039                           
 12040                           ;i2c.c: 93: SSP1CON2bits.ACKEN = 1;
 12041  008038  88C5               	bsf	4037,4,c	;volatile
 12042  00803A  A8C5               	btfss	4037,4,c	;volatile
 12043  00803C  0012               	return	
 12044  00803E  D7FD               	goto	l1178
 12045  008040                     __end_of__i2c_not_acknowledge:
 12046                           	opt stack 0
 12047                           tblptru	equ	0xFF8
 12048                           tblptrh	equ	0xFF7
 12049                           tblptrl	equ	0xFF6
 12050                           tablat	equ	0xFF5
 12051                           prodh	equ	0xFF4
 12052                           prodl	equ	0xFF3
 12053                           intcon	equ	0xFF2
 12054                           intcon2	equ	0xFF1
 12055                           intcon3	equ	0xFF0
 12056                           postinc0	equ	0xFEE
 12057                           wreg	equ	0xFE8
 12058                           indf1	equ	0xFE7
 12059                           postdec1	equ	0xFE5
 12060                           plusw1	equ	0xFE3
 12061                           fsr1h	equ	0xFE2
 12062                           fsr1l	equ	0xFE1
 12063                           indf2	equ	0xFDF
 12064                           postinc2	equ	0xFDE
 12065                           postdec2	equ	0xFDD
 12066                           plusw2	equ	0xFDB
 12067                           fsr2h	equ	0xFDA
 12068                           fsr2l	equ	0xFD9
 12069                           status	equ	0xFD8
 12070                           
 12071 ;; *************** function __i2c_get *****************
 12072 ;; Defined at:
 12073 ;;		line 67 in file "i2c.c"
 12074 ;; Parameters:    Size  Location     Type
 12075 ;;		None
 12076 ;; Auto vars:     Size  Location     Type
 12077 ;;		None
 12078 ;; Return value:  Size  Location     Type
 12079 ;;                  1    wreg      unsigned char 
 12080 ;; Registers used:
 12081 ;;		wreg, status,2
 12082 ;; Tracked objects:
 12083 ;;		On entry : 0/0
 12084 ;;		On exit  : 0/0
 12085 ;;		Unchanged: 0/0
 12086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12091 ;;Total ram usage:        0 bytes
 12092 ;; Hardware stack levels used:    1
 12093 ;; This function calls:
 12094 ;;		Nothing
 12095 ;; This function is called by:
 12096 ;;		__i2c_read
 12097 ;; This function uses a non-reentrant model
 12098 ;;
 12099                           
 12100                           	psect	text55
 12101  008040                     __ptext55:
 12102                           	opt stack 0
 12103  008040                     __i2c_get:
 12104                           	opt stack 27
 12105                           
 12106                           ;i2c.c: 69: SSP1CON2bits.RCEN = 1 ;
 12107                           
 12108                           ;incstack = 0
 12109  008040  86C5               	bsf	4037,3,c	;volatile
 12110  008042  B6C5               	btfsc	4037,3,c	;volatile
 12111  008044  D7FE               	goto	l1160
 12112                           
 12113                           ;i2c.c: 71: return SSP1BUF;
 12114  008046  50C9               	movf	4041,w,c	;volatile
 12115  008048  0012               	return	
 12116  00804A                     __end_of__i2c_get:
 12117                           	opt stack 0
 12118                           tblptru	equ	0xFF8
 12119                           tblptrh	equ	0xFF7
 12120                           tblptrl	equ	0xFF6
 12121                           tablat	equ	0xFF5
 12122                           prodh	equ	0xFF4
 12123                           prodl	equ	0xFF3
 12124                           intcon	equ	0xFF2
 12125                           intcon2	equ	0xFF1
 12126                           intcon3	equ	0xFF0
 12127                           postinc0	equ	0xFEE
 12128                           wreg	equ	0xFE8
 12129                           indf1	equ	0xFE7
 12130                           postdec1	equ	0xFE5
 12131                           plusw1	equ	0xFE3
 12132                           fsr1h	equ	0xFE2
 12133                           fsr1l	equ	0xFE1
 12134                           indf2	equ	0xFDF
 12135                           postinc2	equ	0xFDE
 12136                           postdec2	equ	0xFDD
 12137                           plusw2	equ	0xFDB
 12138                           fsr2h	equ	0xFDA
 12139                           fsr2l	equ	0xFD9
 12140                           status	equ	0xFD8
 12141                           
 12142 ;; *************** function __i2c_acknowledge *****************
 12143 ;; Defined at:
 12144 ;;		line 82 in file "i2c.c"
 12145 ;; Parameters:    Size  Location     Type
 12146 ;;		None
 12147 ;; Auto vars:     Size  Location     Type
 12148 ;;		None
 12149 ;; Return value:  Size  Location     Type
 12150 ;;                  1    wreg      void 
 12151 ;; Registers used:
 12152 ;;		None
 12153 ;; Tracked objects:
 12154 ;;		On entry : 0/0
 12155 ;;		On exit  : 0/0
 12156 ;;		Unchanged: 0/0
 12157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12162 ;;Total ram usage:        0 bytes
 12163 ;; Hardware stack levels used:    1
 12164 ;; This function calls:
 12165 ;;		Nothing
 12166 ;; This function is called by:
 12167 ;;		__i2c_read
 12168 ;; This function uses a non-reentrant model
 12169 ;;
 12170                           
 12171                           	psect	text56
 12172  00804A                     __ptext56:
 12173                           	opt stack 0
 12174  00804A                     __i2c_acknowledge:
 12175                           	opt stack 27
 12176                           
 12177                           ;i2c.c: 84: SSP1CON2bits.ACKDT = 0;
 12178                           
 12179                           ;incstack = 0
 12180  00804A  9AC5               	bcf	4037,5,c	;volatile
 12181                           
 12182                           ;i2c.c: 85: SSP1CON2bits.ACKEN = 1;
 12183  00804C  88C5               	bsf	4037,4,c	;volatile
 12184  00804E  A8C5               	btfss	4037,4,c	;volatile
 12185  008050  0012               	return	
 12186  008052  D7FD               	goto	l1172
 12187  008054                     __end_of__i2c_acknowledge:
 12188                           	opt stack 0
 12189                           tblptru	equ	0xFF8
 12190                           tblptrh	equ	0xFF7
 12191                           tblptrl	equ	0xFF6
 12192                           tablat	equ	0xFF5
 12193                           prodh	equ	0xFF4
 12194                           prodl	equ	0xFF3
 12195                           intcon	equ	0xFF2
 12196                           intcon2	equ	0xFF1
 12197                           intcon3	equ	0xFF0
 12198                           postinc0	equ	0xFEE
 12199                           wreg	equ	0xFE8
 12200                           indf1	equ	0xFE7
 12201                           postdec1	equ	0xFE5
 12202                           plusw1	equ	0xFE3
 12203                           fsr1h	equ	0xFE2
 12204                           fsr1l	equ	0xFE1
 12205                           indf2	equ	0xFDF
 12206                           postinc2	equ	0xFDE
 12207                           postdec2	equ	0xFDD
 12208                           plusw2	equ	0xFDB
 12209                           fsr2h	equ	0xFDA
 12210                           fsr2l	equ	0xFD9
 12211                           status	equ	0xFD8
 12212                           
 12213 ;; *************** function _USBDeviceTasks *****************
 12214 ;; Defined at:
 12215 ;;		line 477 in file "usb_device.c"
 12216 ;; Parameters:    Size  Location     Type
 12217 ;;		None
 12218 ;; Auto vars:     Size  Location     Type
 12219 ;;  i               1   31[COMRAM] unsigned char 
 12220 ;; Return value:  Size  Location     Type
 12221 ;;                  1    wreg      void 
 12222 ;; Registers used:
 12223 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 12224 ;; Tracked objects:
 12225 ;;		On entry : 0/0
 12226 ;;		On exit  : 0/0
 12227 ;;		Unchanged: 0/0
 12228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12232 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12233 ;;Total ram usage:        1 bytes
 12234 ;; Hardware stack levels used:    1
 12235 ;; Hardware stack levels required when called:    8
 12236 ;; This function calls:
 12237 ;;		_USBCtrlEPAllowStatusStage
 12238 ;;		_USBCtrlEPService
 12239 ;;		_USBDeviceInit
 12240 ;;		_USBIncrement1msInternalTimers
 12241 ;;		_USBStallHandler
 12242 ;;		_USBSuspend
 12243 ;;		_USBWakeFromSuspend
 12244 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12245 ;; This function is called by:
 12246 ;;		_main
 12247 ;; This function uses a non-reentrant model
 12248 ;;
 12249                           
 12250                           	psect	text57
 12251  00340A                     __ptext57:
 12252                           	opt stack 0
 12253  00340A                     _USBDeviceTasks:
 12254                           	opt stack 22
 12255                           
 12256                           ;usb_device.c: 544: };usb_device.c: 566: if(USBDeviceState == DETACHED_STATE)
 12257                           
 12258                           ; BSR set to: 0
 12259                           
 12260                           ; BSR set to: 0
 12261                           ;usb_device.c: 543: return;
 12262                           
 12263                           ; BSR set to: 0
 12264                           ;usb_device.c: 542: {PIR2bits.USBIF = 0;};
 12265                           
 12266                           ;usb_device.c: 514: USBDeviceState = DETACHED_STATE;
 12267                           
 12268                           ;usb_device.c: 511: UIE = 0;
 12269                           
 12270                           ;usb_device.c: 506: {;usb_device.c: 508: UCON = 0;
 12271                           
 12272                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 505: if (1 != 1)
 12273                           
 12274                           ;incstack = 0
 12275  00340A  0100               	movlb	0	; () banked
 12276  00340C  51B0               	movf	_USBDeviceState& (0+255),w,b
 12277  00340E  A4D8               	btfss	status,2,c
 12278  003410  D012               	goto	l150
 12279                           
 12280                           ; BSR set to: 0
 12281                           ;usb_device.c: 567: {;usb_device.c: 569: UCON = 0;
 12282  003412  0E00               	movlw	0
 12283  003414  6E65               	movwf	3941,c	;volatile
 12284                           
 12285                           ;usb_device.c: 572: UIE = 0;
 12286  003416  0E00               	movlw	0
 12287  003418  010F               	movlb	15	; () banked
 12288  00341A  6F36               	movwf	54,b	;volatile
 12289                           
 12290                           ;usb_device.c: 576: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 12291  00341C  0E16               	movlw	22
 12292  00341E  6F39               	movwf	57,b	;volatile
 12293  003420  0E9F               	movlw	159
 12294  003422  6F37               	movwf	55,b	;volatile
 12295  003424  0E7B               	movlw	123
 12296  003426  6F36               	movwf	54,b	;volatile
 12297                           
 12298                           ;usb_device.c: 579: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 12299  003428  D001               	goto	l151
 12300  00342A                     l152:
 12301  00342A  8665               	bsf	3941,3,c	;volatile
 12302  00342C                     l151:
 12303  00342C  A665               	btfss	3941,3,c	;volatile
 12304  00342E  D7FD               	goto	l152
 12305                           
 12306                           ;usb_device.c: 582: USBDeviceState = ATTACHED_STATE;
 12307  003430  0E01               	movlw	1
 12308  003432  0100               	movlb	0	; () banked
 12309  003434  6FB0               	movwf	_USBDeviceState& (0+255),b
 12310  003436                     l150:
 12311                           
 12312                           ; BSR set to: 0
 12313                           ;usb_device.c: 587: };usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 12314                           
 12315                           ; BSR set to: 0
 12316  003436  05B0               	decf	_USBDeviceState& (0+255),w,b
 12317  003438  B4D8               	btfsc	status,2,c
 12318                           
 12319                           ; BSR set to: 0
 12320                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 12321  00343A  BA65               	btfsc	3941,5,c	;volatile
 12322  00343C  D00A               	goto	l155
 12323                           
 12324                           ; BSR set to: 0
 12325                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 12326  00343E  0E00               	movlw	0
 12327  003440  6E62               	movwf	3938,c	;volatile
 12328                           
 12329                           ;usb_device.c: 612: UIE=0;
 12330  003442  0E00               	movlw	0
 12331  003444  010F               	movlb	15	; () banked
 12332  003446  6F36               	movwf	54,b	;volatile
 12333                           
 12334                           ; BSR set to: 15
 12335                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 12336  003448  8136               	bsf	54,0,b	;volatile
 12337                           
 12338                           ; BSR set to: 15
 12339                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 12340  00344A  8936               	bsf	54,4,b	;volatile
 12341                           
 12342                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 12343  00344C  0E02               	movlw	2
 12344  00344E  0100               	movlb	0	; () banked
 12345  003450  6FB0               	movwf	_USBDeviceState& (0+255),b
 12346  003452                     l155:
 12347                           
 12348                           ; BSR set to: 0
 12349                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 12350                           
 12351                           ; BSR set to: 0
 12352                           
 12353                           ; BSR set to: 0
 12354  003452  A462               	btfss	3938,2,c	;volatile
 12355  003454  D006               	goto	l156
 12356                           
 12357                           ; BSR set to: 0
 12358  003456  010F               	movlb	15	; () banked
 12359  003458  A536               	btfss	54,2,b	;volatile
 12360  00345A  D003               	goto	l156
 12361                           
 12362                           ; BSR set to: 15
 12363                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 12364  00345C  9462               	bcf	3938,2,c	;volatile
 12365                           
 12366                           ; BSR set to: 15
 12367                           ;usb_device.c: 640: USBWakeFromSuspend();
 12368  00345E  ECA8  F03C         	call	_USBWakeFromSuspend	;wreg free
 12369  003462                     l156:
 12370                           
 12371                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 12372  003462  A265               	btfss	3941,1,c	;volatile
 12373  003464  D002               	goto	l157
 12374                           
 12375                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 12376  003466  98A1               	bcf	4001,4,c	;volatile
 12377                           
 12378                           ;usb_device.c: 650: return;
 12379  003468  0012               	return	
 12380  00346A                     l157:
 12381                           
 12382                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 12383  00346A  A062               	btfss	3938,0,c	;volatile
 12384  00346C  D009               	goto	l158
 12385  00346E  010F               	movlb	15	; () banked
 12386  003470  A136               	btfss	54,0,b	;volatile
 12387  003472  D006               	goto	l158
 12388                           
 12389                           ; BSR set to: 15
 12390                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 12391  003474  EC9F  F01D         	call	_USBDeviceInit	;wreg free
 12392                           
 12393                           ;usb_device.c: 669: ;;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 12394  003478  0E04               	movlw	4
 12395  00347A  0100               	movlb	0	; () banked
 12396  00347C  6FB0               	movwf	_USBDeviceState& (0+255),b
 12397                           
 12398                           ; BSR set to: 0
 12399                           ;usb_device.c: 681: (UIR &= 0xFE);
 12400  00347E  9062               	bcf	3938,0,c	;volatile
 12401  003480                     l158:
 12402                           
 12403                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 12404                           
 12405                           ; BSR set to: 0
 12406  003480  A862               	btfss	3938,4,c	;volatile
 12407  003482  D004               	goto	l159
 12408  003484  010F               	movlb	15	; () banked
 12409  003486  B936               	btfsc	54,4,b	;volatile
 12410                           
 12411                           ; BSR set to: 15
 12412                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 12413  003488  ECC3  F03D         	call	_USBSuspend	;wreg free
 12414  00348C                     l159:
 12415                           
 12416                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 12417  00348C  AC62               	btfss	3938,6,c	;volatile
 12418  00348E  D01C               	goto	l163
 12419                           
 12420                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 12421  003490  010F               	movlb	15	; () banked
 12422  003492  AD36               	btfss	54,6,b	;volatile
 12423  003494  D00E               	goto	l161
 12424                           
 12425                           ; BSR set to: 15
 12426                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 12427  003496  0E00               	movlw	0
 12428  003498  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12429  00349A  0E73               	movlw	115
 12430  00349C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12431  00349E  0E00               	movlw	0
 12432  0034A0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12433  0034A2  0E00               	movlw	0
 12434  0034A4  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12435  0034A6  0E00               	movlw	0
 12436  0034A8  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12437  0034AA  0E01               	movlw	1
 12438  0034AC  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12439  0034AE  EC29  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12440  0034B2                     l161:
 12441                           
 12442                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 12443  0034B2  9C62               	bcf	3938,6,c	;volatile
 12444                           
 12445                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 12446  0034B4  EC05  F03F         	call	_USBIncrement1msInternalTimers	;wreg free
 12447                           
 12448                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 12449  0034B8  0100               	movlb	0	; () banked
 12450  0034BA  51A9               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 12451  0034BC  A4D8               	btfss	status,2,c
 12452                           
 12453                           ; BSR set to: 0
 12454                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 12455  0034BE  07A9               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
 12456                           
 12457                           ; BSR set to: 0
 12458                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 12459                           
 12460                           ; BSR set to: 0
 12461  0034C0  51A9               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 12462  0034C2  B4D8               	btfsc	status,2,c
 12463                           
 12464                           ; BSR set to: 0
 12465                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 12466  0034C4  ECC1  F029         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12467  0034C8                     l163:
 12468                           
 12469                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 12470  0034C8  AA62               	btfss	3938,5,c	;volatile
 12471  0034CA  D004               	goto	l164
 12472  0034CC  010F               	movlb	15	; () banked
 12473  0034CE  BB36               	btfsc	54,5,b	;volatile
 12474                           
 12475                           ; BSR set to: 15
 12476                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 12477  0034D0  EC6E  F03B         	call	_USBStallHandler	;wreg free
 12478  0034D4                     l164:
 12479                           
 12480                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 12481  0034D4  A262               	btfss	3938,1,c	;volatile
 12482  0034D6  D012               	goto	l165
 12483  0034D8  010F               	movlb	15	; () banked
 12484  0034DA  A336               	btfss	54,1,b	;volatile
 12485  0034DC  D00F               	goto	l165
 12486                           
 12487                           ; BSR set to: 15
 12488                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 12489  0034DE  0E7F               	movlw	127
 12490  0034E0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12491  0034E2  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12492  0034E4  0E00               	movlw	0
 12493  0034E6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12494  0034E8  0E00               	movlw	0
 12495  0034EA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12496  0034EC  0E00               	movlw	0
 12497  0034EE  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12498  0034F0  0E01               	movlw	1
 12499  0034F2  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12500  0034F4  EC29  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12501                           
 12502                           ;usb_device.c: 759: {UEIR = 0;};
 12503  0034F8  0E00               	movlw	0
 12504  0034FA  6E63               	movwf	3939,c	;volatile
 12505  0034FC                     l165:
 12506                           
 12507                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 12508  0034FC  0E04               	movlw	4
 12509  0034FE  0100               	movlb	0	; () banked
 12510  003500  61B0               	cpfslt	_USBDeviceState& (0+255),b
 12511  003502  D002               	goto	l166
 12512                           
 12513                           ; BSR set to: 0
 12514                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 12515  003504  98A1               	bcf	4001,4,c	;volatile
 12516                           
 12517                           ;usb_device.c: 777: return;
 12518  003506  0012               	return	
 12519  003508                     l166:
 12520                           
 12521                           ; BSR set to: 0
 12522                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 12523  003508  010F               	movlb	15	; () banked
 12524  00350A  A736               	btfss	54,3,b	;volatile
 12525  00350C  D03C               	goto	u11470
 12526                           
 12527                           ; BSR set to: 15
 12528                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 12529  00350E  0E00               	movlw	0
 12530  003510  6E20               	movwf	USBDeviceTasks@i,c
 12531  003512                     l14441:
 12532                           
 12533                           ; BSR set to: 15
 12534  003512  0E03               	movlw	3
 12535  003514  6420               	cpfsgt	USBDeviceTasks@i,c
 12536  003516  D001               	goto	l168
 12537  003518  D036               	goto	u11470
 12538  00351A                     l168:
 12539                           
 12540                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 12541  00351A  A662               	btfss	3938,3,c	;volatile
 12542  00351C  D034               	goto	u11470
 12543                           
 12544                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 12545  00351E  CF64 F0B3          	movff	3940,_USTATcopy	;volatile
 12546                           
 12547                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 12548  003522  0100               	movlb	0	; () banked
 12549  003524  31B3               	rrcf	_USTATcopy& (0+255),w,b
 12550  003526  32E8               	rrcf	wreg,f,c
 12551  003528  32E8               	rrcf	wreg,f,c
 12552  00352A  0B0F               	andlw	15
 12553  00352C  6FAB               	movwf	_endpoint_number& (0+255),b
 12554                           
 12555                           ; BSR set to: 0
 12556                           ;usb_device.c: 793: (UIR &= 0xF7);
 12557  00352E  9662               	bcf	3938,3,c	;volatile
 12558                           
 12559                           ; BSR set to: 0
 12560                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 12561  003530  B5B3               	btfsc	_USTATcopy& (0+255),2,b
 12562  003532  D007               	goto	l171
 12563                           
 12564                           ; BSR set to: 0
 12565                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 12566  003534  51AB               	movf	_endpoint_number& (0+255),w,b
 12567  003536  0D01               	mullw	1
 12568  003538  0E5E               	movlw	low _ep_data_out
 12569  00353A  24F3               	addwf	prodl,w,c
 12570  00353C  6ED9               	movwf	fsr2l,c
 12571  00353E  0E01               	movlw	high _ep_data_out
 12572  003540  D007               	goto	L5
 12573  003542                     l171:
 12574                           
 12575                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 12576                           
 12577                           ; BSR set to: 1
 12578  003542  0100               	movlb	0	; () banked
 12579  003544  51AB               	movf	_endpoint_number& (0+255),w,b
 12580  003546  0D01               	mullw	1
 12581  003548  0E61               	movlw	low _ep_data_in
 12582  00354A  24F3               	addwf	prodl,w,c
 12583  00354C  6ED9               	movwf	fsr2l,c
 12584  00354E  0E01               	movlw	high _ep_data_in
 12585  003550                     L5:
 12586  003550  20F4               	addwfc	prodh,w,c
 12587  003552  6EDA               	movwf	fsr2h,c
 12588  003554  0101               	movlb	1	; () banked
 12589  003556  70DF               	btg	indf2,0,c
 12590                           
 12591                           ; BSR set to: 1
 12592                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 12593                           
 12594                           ; BSR set to: 1
 12595  003558  0100               	movlb	0	; () banked
 12596  00355A  51AB               	movf	_endpoint_number& (0+255),w,b
 12597  00355C  A4D8               	btfss	status,2,c
 12598  00355E  D003               	goto	l173
 12599                           
 12600                           ; BSR set to: 0
 12601                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 12602  003560  ECB3  F02C         	call	_USBCtrlEPService	;wreg free
 12603                           
 12604                           ;usb_device.c: 813: }
 12605  003564  D00E               	goto	l175
 12606  003566                     l173:
 12607                           
 12608                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 12609  003566  0E00               	movlw	0
 12610  003568  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12611  00356A  0E72               	movlw	114
 12612  00356C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12613  00356E  0EB3               	movlw	low _USTATcopy
 12614  003570  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12615  003572  0E00               	movlw	high _USTATcopy
 12616  003574  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12617  003576  0E00               	movlw	0
 12618  003578  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12619  00357A  0E00               	movlw	0
 12620  00357C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12621  00357E  EC29  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12622  003582                     l175:
 12623  003582  2A20               	incf	USBDeviceTasks@i,f,c
 12624  003584  D7C6               	goto	l14441
 12625  003586                     u11470:
 12626                           
 12627                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 12628  003586  98A1               	bcf	4001,4,c	;volatile
 12629  003588  0012               	return		;funcret
 12630  00358A                     __end_of_USBDeviceTasks:
 12631                           	opt stack 0
 12632                           tblptru	equ	0xFF8
 12633                           tblptrh	equ	0xFF7
 12634                           tblptrl	equ	0xFF6
 12635                           tablat	equ	0xFF5
 12636                           prodh	equ	0xFF4
 12637                           prodl	equ	0xFF3
 12638                           intcon	equ	0xFF2
 12639                           intcon2	equ	0xFF1
 12640                           intcon3	equ	0xFF0
 12641                           postinc0	equ	0xFEE
 12642                           wreg	equ	0xFE8
 12643                           indf1	equ	0xFE7
 12644                           postdec1	equ	0xFE5
 12645                           plusw1	equ	0xFE3
 12646                           fsr1h	equ	0xFE2
 12647                           fsr1l	equ	0xFE1
 12648                           indf2	equ	0xFDF
 12649                           postinc2	equ	0xFDE
 12650                           postdec2	equ	0xFDD
 12651                           plusw2	equ	0xFDB
 12652                           fsr2h	equ	0xFDA
 12653                           fsr2l	equ	0xFD9
 12654                           status	equ	0xFD8
 12655                           
 12656 ;; *************** function _USBWakeFromSuspend *****************
 12657 ;; Defined at:
 12658 ;;		line 2305 in file "usb_device.c"
 12659 ;; Parameters:    Size  Location     Type
 12660 ;;		None
 12661 ;; Auto vars:     Size  Location     Type
 12662 ;;		None
 12663 ;; Return value:  Size  Location     Type
 12664 ;;                  1    wreg      void 
 12665 ;; Registers used:
 12666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12667 ;; Tracked objects:
 12668 ;;		On entry : 0/0
 12669 ;;		On exit  : 0/0
 12670 ;;		Unchanged: 0/0
 12671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12676 ;;Total ram usage:        0 bytes
 12677 ;; Hardware stack levels used:    1
 12678 ;; Hardware stack levels required when called:    4
 12679 ;; This function calls:
 12680 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12681 ;; This function is called by:
 12682 ;;		_USBDeviceTasks
 12683 ;; This function uses a non-reentrant model
 12684 ;;
 12685                           
 12686                           	psect	text58
 12687  007950                     __ptext58:
 12688                           	opt stack 0
 12689  007950                     _USBWakeFromSuspend:
 12690                           	opt stack 25
 12691                           
 12692                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 12693                           
 12694                           ;incstack = 0
 12695  007950  0E00               	movlw	0
 12696  007952  0100               	movlb	0	; () banked
 12697  007954  6FAC               	movwf	_USBBusIsSuspended& (0+255),b
 12698                           
 12699                           ; BSR set to: 0
 12700                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 12701  007956  0E00               	movlw	0
 12702  007958  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12703  00795A  0E74               	movlw	116
 12704  00795C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12705  00795E  0E00               	movlw	0
 12706  007960  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12707  007962  0E00               	movlw	0
 12708  007964  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12709  007966  0E00               	movlw	0
 12710  007968  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12711  00796A  0E00               	movlw	0
 12712  00796C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12713  00796E  EC29  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12714                           
 12715                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 12716  007972  9265               	bcf	3941,1,c	;volatile
 12717                           
 12718                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 12719  007974  010F               	movlb	15	; () banked
 12720  007976  9536               	bcf	54,2,b	;volatile
 12721                           
 12722                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 12723  007978  D001               	goto	l303
 12724  00797A                     
 12725                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 12726                           
 12727                           ; BSR set to: 15
 12728  00797A  9462               	bcf	3938,2,c	;volatile
 12729  00797C                     l303:
 12730  00797C  B462               	btfsc	3938,2,c	;volatile
 12731  00797E  D7FD               	goto	l304
 12732                           
 12733                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 12734  007980  0E00               	movlw	0
 12735  007982  0100               	movlb	0	; () banked
 12736  007984  6FA3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 12737                           
 12738                           ; BSR set to: 0
 12739  007986  0012               	return		;funcret
 12740  007988                     __end_of_USBWakeFromSuspend:
 12741                           	opt stack 0
 12742                           tblptru	equ	0xFF8
 12743                           tblptrh	equ	0xFF7
 12744                           tblptrl	equ	0xFF6
 12745                           tablat	equ	0xFF5
 12746                           prodh	equ	0xFF4
 12747                           prodl	equ	0xFF3
 12748                           intcon	equ	0xFF2
 12749                           intcon2	equ	0xFF1
 12750                           intcon3	equ	0xFF0
 12751                           postinc0	equ	0xFEE
 12752                           wreg	equ	0xFE8
 12753                           indf1	equ	0xFE7
 12754                           postdec1	equ	0xFE5
 12755                           plusw1	equ	0xFE3
 12756                           fsr1h	equ	0xFE2
 12757                           fsr1l	equ	0xFE1
 12758                           indf2	equ	0xFDF
 12759                           postinc2	equ	0xFDE
 12760                           postdec2	equ	0xFDD
 12761                           plusw2	equ	0xFDB
 12762                           fsr2h	equ	0xFDA
 12763                           fsr2l	equ	0xFD9
 12764                           status	equ	0xFD8
 12765                           
 12766 ;; *************** function _USBSuspend *****************
 12767 ;; Defined at:
 12768 ;;		line 2247 in file "usb_device.c"
 12769 ;; Parameters:    Size  Location     Type
 12770 ;;		None
 12771 ;; Auto vars:     Size  Location     Type
 12772 ;;		None
 12773 ;; Return value:  Size  Location     Type
 12774 ;;                  1    wreg      void 
 12775 ;; Registers used:
 12776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 12777 ;; Tracked objects:
 12778 ;;		On entry : 0/0
 12779 ;;		On exit  : 0/0
 12780 ;;		Unchanged: 0/0
 12781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12786 ;;Total ram usage:        0 bytes
 12787 ;; Hardware stack levels used:    1
 12788 ;; Hardware stack levels required when called:    4
 12789 ;; This function calls:
 12790 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12791 ;; This function is called by:
 12792 ;;		_USBDeviceTasks
 12793 ;; This function uses a non-reentrant model
 12794 ;;
 12795                           
 12796                           	psect	text59
 12797  007B86                     __ptext59:
 12798                           	opt stack 0
 12799  007B86                     _USBSuspend:
 12800                           	opt stack 25
 12801                           
 12802                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 12803                           
 12804                           ; BSR set to: 0
 12805                           ;incstack = 0
 12806  007B86  010F               	movlb	15	; () banked
 12807  007B88  8536               	bsf	54,2,b	;volatile
 12808                           
 12809                           ; BSR set to: 15
 12810                           ;usb_device.c: 2273: (UIR &= 0xEF);
 12811  007B8A  9862               	bcf	3938,4,c	;volatile
 12812                           
 12813                           ; BSR set to: 15
 12814                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 12815  007B8C  8265               	bsf	3941,1,c	;volatile
 12816                           
 12817                           ; BSR set to: 15
 12818                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 12819  007B8E  0E01               	movlw	1
 12820  007B90  0100               	movlb	0	; () banked
 12821  007B92  6FAC               	movwf	_USBBusIsSuspended& (0+255),b
 12822                           
 12823                           ; BSR set to: 0
 12824                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 12825  007B94  0E00               	movlw	0
 12826  007B96  6FA3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 12827                           
 12828                           ; BSR set to: 0
 12829                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 12830  007B98  0E00               	movlw	0
 12831  007B9A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12832  007B9C  0E75               	movlw	117
 12833  007B9E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12834  007BA0  0E00               	movlw	0
 12835  007BA2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12836  007BA4  0E00               	movlw	0
 12837  007BA6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12838  007BA8  0E00               	movlw	0
 12839  007BAA  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12840  007BAC  0E00               	movlw	0
 12841  007BAE  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12842  007BB0  EC29  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12843  007BB4  0012               	return		;funcret
 12844  007BB6                     __end_of_USBSuspend:
 12845                           	opt stack 0
 12846                           tblptru	equ	0xFF8
 12847                           tblptrh	equ	0xFF7
 12848                           tblptrl	equ	0xFF6
 12849                           tablat	equ	0xFF5
 12850                           prodh	equ	0xFF4
 12851                           prodl	equ	0xFF3
 12852                           intcon	equ	0xFF2
 12853                           intcon2	equ	0xFF1
 12854                           intcon3	equ	0xFF0
 12855                           postinc0	equ	0xFEE
 12856                           wreg	equ	0xFE8
 12857                           indf1	equ	0xFE7
 12858                           postdec1	equ	0xFE5
 12859                           plusw1	equ	0xFE3
 12860                           fsr1h	equ	0xFE2
 12861                           fsr1l	equ	0xFE1
 12862                           indf2	equ	0xFDF
 12863                           postinc2	equ	0xFDE
 12864                           postdec2	equ	0xFDD
 12865                           plusw2	equ	0xFDB
 12866                           fsr2h	equ	0xFDA
 12867                           fsr2l	equ	0xFD9
 12868                           status	equ	0xFD8
 12869                           
 12870 ;; *************** function _USBStallHandler *****************
 12871 ;; Defined at:
 12872 ;;		line 2204 in file "usb_device.c"
 12873 ;; Parameters:    Size  Location     Type
 12874 ;;		None
 12875 ;; Auto vars:     Size  Location     Type
 12876 ;;		None
 12877 ;; Return value:  Size  Location     Type
 12878 ;;                  1    wreg      void 
 12879 ;; Registers used:
 12880 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12881 ;; Tracked objects:
 12882 ;;		On entry : 0/0
 12883 ;;		On exit  : 0/0
 12884 ;;		Unchanged: 0/0
 12885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12888 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12889 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12890 ;;Total ram usage:        1 bytes
 12891 ;; Hardware stack levels used:    1
 12892 ;; This function calls:
 12893 ;;		Nothing
 12894 ;; This function is called by:
 12895 ;;		_USBDeviceTasks
 12896 ;; This function uses a non-reentrant model
 12897 ;;
 12898                           
 12899                           	psect	text60
 12900  0076DC                     __ptext60:
 12901                           	opt stack 0
 12902  0076DC                     _USBStallHandler:
 12903                           	opt stack 29
 12904                           
 12905                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 12906                           
 12907                           ;incstack = 0
 12908  0076DC  010F               	movlb	15	; () banked
 12909  0076DE  A126               	btfss	38,0,b	;volatile
 12910  0076E0  D01D               	goto	l295
 12911                           
 12912                           ; BSR set to: 15
 12913                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 12914  0076E2  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12915  0076E6  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12916  0076EA  0E80               	movlw	128
 12917  0076EC  18DE               	xorwf	postinc2,w,c
 12918  0076EE  A4D8               	btfss	status,2,c
 12919  0076F0  D014               	goto	l296
 12920                           
 12921                           ; BSR set to: 15
 12922  0076F2  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 12923  0076F6  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12924  0076FA  0E84               	movlw	132
 12925  0076FC  18DE               	xorwf	postinc2,w,c
 12926  0076FE  A4D8               	btfss	status,2,c
 12927  007700  D00C               	goto	l296
 12928                           
 12929                           ; BSR set to: 15
 12930                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 12931  007702  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12932  007706  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12933  00770A  0E0C               	movlw	12
 12934  00770C  6EDF               	movwf	indf2,c
 12935                           
 12936                           ; BSR set to: 15
 12937                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 12938  00770E  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12939  007712  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12940  007716  0E00               	movlw	0
 12941  007718  8EDB               	bsf	plusw2,7,c
 12942  00771A                     l296:
 12943                           
 12944                           ; BSR set to: 15
 12945                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 12946                           
 12947                           ; BSR set to: 15
 12948  00771A  9126               	bcf	38,0,b	;volatile
 12949  00771C                     l295:
 12950                           
 12951                           ; BSR set to: 15
 12952                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 12953  00771C  9A62               	bcf	3938,5,c	;volatile
 12954                           
 12955                           ; BSR set to: 15
 12956  00771E  0012               	return		;funcret
 12957  007720                     __end_of_USBStallHandler:
 12958                           	opt stack 0
 12959                           tblptru	equ	0xFF8
 12960                           tblptrh	equ	0xFF7
 12961                           tblptrl	equ	0xFF6
 12962                           tablat	equ	0xFF5
 12963                           prodh	equ	0xFF4
 12964                           prodl	equ	0xFF3
 12965                           intcon	equ	0xFF2
 12966                           intcon2	equ	0xFF1
 12967                           intcon3	equ	0xFF0
 12968                           postinc0	equ	0xFEE
 12969                           wreg	equ	0xFE8
 12970                           indf1	equ	0xFE7
 12971                           postdec1	equ	0xFE5
 12972                           plusw1	equ	0xFE3
 12973                           fsr1h	equ	0xFE2
 12974                           fsr1l	equ	0xFE1
 12975                           indf2	equ	0xFDF
 12976                           postinc2	equ	0xFDE
 12977                           postdec2	equ	0xFDD
 12978                           plusw2	equ	0xFDB
 12979                           fsr2h	equ	0xFDA
 12980                           fsr2l	equ	0xFD9
 12981                           status	equ	0xFD8
 12982                           
 12983 ;; *************** function _USBIncrement1msInternalTimers *****************
 12984 ;; Defined at:
 12985 ;;		line 3027 in file "usb_device.c"
 12986 ;; Parameters:    Size  Location     Type
 12987 ;;		None
 12988 ;; Auto vars:     Size  Location     Type
 12989 ;;		None
 12990 ;; Return value:  Size  Location     Type
 12991 ;;                  1    wreg      void 
 12992 ;; Registers used:
 12993 ;;		wreg, status,2, status,0
 12994 ;; Tracked objects:
 12995 ;;		On entry : 0/0
 12996 ;;		On exit  : 0/0
 12997 ;;		Unchanged: 0/0
 12998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13003 ;;Total ram usage:        0 bytes
 13004 ;; Hardware stack levels used:    1
 13005 ;; This function calls:
 13006 ;;		Nothing
 13007 ;; This function is called by:
 13008 ;;		_USBDeviceTasks
 13009 ;; This function uses a non-reentrant model
 13010 ;;
 13011                           
 13012                           	psect	text61
 13013  007E0A                     __ptext61:
 13014                           	opt stack 0
 13015  007E0A                     _USBIncrement1msInternalTimers:
 13016                           	opt stack 29
 13017                           
 13018                           ;usb_device.c: 3035: USB1msTickCount++;
 13019                           
 13020                           ; BSR set to: 15
 13021                           ;incstack = 0
 13022  007E0A  0E01               	movlw	1
 13023  007E0C  0101               	movlb	1	; () banked
 13024  007E0E  2754               	addwf	_USB1msTickCount& (0+255),f,b
 13025  007E10  0E00               	movlw	0
 13026  007E12  2355               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
 13027  007E14  2356               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
 13028  007E16  2357               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
 13029                           
 13030                           ; BSR set to: 1
 13031                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 13032  007E18  0100               	movlb	0	; () banked
 13033  007E1A  51AC               	movf	_USBBusIsSuspended& (0+255),w,b
 13034  007E1C  A4D8               	btfss	status,2,c
 13035  007E1E  0012               	return	
 13036                           
 13037                           ; BSR set to: 0
 13038                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 13039  007E20  2BA3               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
 13040                           
 13041                           ; BSR set to: 0
 13042                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 13043  007E22  51A3               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
 13044  007E24  A4D8               	btfss	status,2,c
 13045  007E26  0012               	return	
 13046                           
 13047                           ; BSR set to: 0
 13048                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 13049  007E28  69A3               	setf	_USBTicksSinceSuspendEnd& (0+255),b
 13050                           
 13051                           ; BSR set to: 0
 13052  007E2A  0012               	return	
 13053  007E2C                     __end_of_USBIncrement1msInternalTimers:
 13054                           	opt stack 0
 13055                           tblptru	equ	0xFF8
 13056                           tblptrh	equ	0xFF7
 13057                           tblptrl	equ	0xFF6
 13058                           tablat	equ	0xFF5
 13059                           prodh	equ	0xFF4
 13060                           prodl	equ	0xFF3
 13061                           intcon	equ	0xFF2
 13062                           intcon2	equ	0xFF1
 13063                           intcon3	equ	0xFF0
 13064                           postinc0	equ	0xFEE
 13065                           wreg	equ	0xFE8
 13066                           indf1	equ	0xFE7
 13067                           postdec1	equ	0xFE5
 13068                           plusw1	equ	0xFE3
 13069                           fsr1h	equ	0xFE2
 13070                           fsr1l	equ	0xFE1
 13071                           indf2	equ	0xFDF
 13072                           postinc2	equ	0xFDE
 13073                           postdec2	equ	0xFDD
 13074                           plusw2	equ	0xFDB
 13075                           fsr2h	equ	0xFDA
 13076                           fsr2l	equ	0xFD9
 13077                           status	equ	0xFD8
 13078                           
 13079 ;; *************** function _USBDeviceInit *****************
 13080 ;; Defined at:
 13081 ;;		line 277 in file "usb_device.c"
 13082 ;; Parameters:    Size  Location     Type
 13083 ;;		None
 13084 ;; Auto vars:     Size  Location     Type
 13085 ;;  i               1    8[COMRAM] unsigned char 
 13086 ;; Return value:  Size  Location     Type
 13087 ;;                  1    wreg      void 
 13088 ;; Registers used:
 13089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13090 ;; Tracked objects:
 13091 ;;		On entry : 0/0
 13092 ;;		On exit  : 0/0
 13093 ;;		Unchanged: 0/0
 13094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13096 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13098 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13099 ;;Total ram usage:        1 bytes
 13100 ;; Hardware stack levels used:    1
 13101 ;; Hardware stack levels required when called:    1
 13102 ;; This function calls:
 13103 ;;		_memset
 13104 ;; This function is called by:
 13105 ;;		_USBDeviceTasks
 13106 ;;		_main
 13107 ;; This function uses a non-reentrant model
 13108 ;;
 13109                           
 13110                           	psect	text62
 13111  003B3E                     __ptext62:
 13112                           	opt stack 0
 13113  003B3E                     _USBDeviceInit:
 13114                           	opt stack 28
 13115                           
 13116                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 13117                           
 13118                           ; BSR set to: 0
 13119                           ;incstack = 0
 13120  003B3E  98A0               	bcf	4000,4,c	;volatile
 13121                           
 13122                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 13123  003B40  0E00               	movlw	0
 13124  003B42  6E63               	movwf	3939,c	;volatile
 13125                           
 13126                           ;usb_device.c: 291: {UIR = 0;};
 13127  003B44  0E00               	movlw	0
 13128  003B46  6E62               	movwf	3938,c	;volatile
 13129                           
 13130                           ;usb_device.c: 294: UEP0 = 0;
 13131  003B48  0E00               	movlw	0
 13132  003B4A  010F               	movlb	15	; () banked
 13133  003B4C  6F26               	movwf	38,b	;volatile
 13134                           
 13135                           ; BSR set to: 15
 13136                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 13137  003B4E  0E27               	movlw	39
 13138  003B50  6E01               	movwf	memset@p1,c
 13139  003B52  0E0F               	movlw	15
 13140  003B54  6E02               	movwf	memset@p1+1,c
 13141  003B56  0E00               	movlw	0
 13142  003B58  6E04               	movwf	memset@c+1,c
 13143  003B5A  0E00               	movlw	0
 13144  003B5C  6E03               	movwf	memset@c,c
 13145  003B5E  0E00               	movlw	0
 13146  003B60  6E06               	movwf	memset@n+1,c
 13147  003B62  0E02               	movlw	2
 13148  003B64  6E05               	movwf	memset@n,c
 13149  003B66  EC1E  F03E         	call	_memset	;wreg free
 13150                           
 13151                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 13152  003B6A  0E16               	movlw	22
 13153  003B6C  010F               	movlb	15	; () banked
 13154  003B6E  6F39               	movwf	57,b	;volatile
 13155                           
 13156                           ; BSR set to: 15
 13157  003B70  0E9F               	movlw	159
 13158  003B72  6F37               	movwf	55,b	;volatile
 13159                           
 13160                           ; BSR set to: 15
 13161  003B74  0E7B               	movlw	123
 13162  003B76  6F36               	movwf	54,b	;volatile
 13163                           
 13164                           ; BSR set to: 15
 13165                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 13166  003B78  0E00               	movlw	0
 13167  003B7A  6E09               	movwf	USBDeviceInit@i,c
 13168  003B7C                     l13725:
 13169                           
 13170                           ; BSR set to: 15
 13171  003B7C  0E0B               	movlw	11
 13172  003B7E  6409               	cpfsgt	USBDeviceInit@i,c
 13173  003B80  D001               	goto	l139
 13174  003B82  D00E               	goto	u10520
 13175  003B84                     l139:
 13176                           
 13177                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 13178                           
 13179                           ; BSR set to: 15
 13180  003B84  5009               	movf	USBDeviceInit@i,w,c
 13181  003B86  0D04               	mullw	4
 13182  003B88  0E00               	movlw	0
 13183  003B8A  24F3               	addwf	prodl,w,c
 13184  003B8C  6ED9               	movwf	fsr2l,c
 13185  003B8E  0E0D               	movlw	13
 13186  003B90  20F4               	addwfc	prodh,w,c
 13187  003B92  6EDA               	movwf	fsr2h,c
 13188  003B94  6ADE               	clrf	postinc2,c
 13189  003B96  6ADE               	clrf	postinc2,c
 13190  003B98  6ADE               	clrf	postinc2,c
 13191  003B9A  6ADD               	clrf	postdec2,c
 13192  003B9C  2A09               	incf	USBDeviceInit@i,f,c
 13193  003B9E  D7EE               	goto	l13725
 13194  003BA0                     u10520:
 13195                           
 13196                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 13197  003BA0  8C65               	bsf	3941,6,c	;volatile
 13198                           
 13199                           ;usb_device.c: 316: UADDR = 0x00;
 13200  003BA2  0E00               	movlw	0
 13201  003BA4  010F               	movlb	15	; () banked
 13202  003BA6  6F38               	movwf	56,b	;volatile
 13203                           
 13204                           ; BSR set to: 15
 13205                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 13206  003BA8  9865               	bcf	3941,4,c	;volatile
 13207                           
 13208                           ; BSR set to: 15
 13209                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 13210  003BAA  9C65               	bcf	3941,6,c	;volatile
 13211  003BAC                     
 13212                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 13213                           
 13214                           ; BSR set to: 15
 13215  003BAC  9662               	bcf	3938,3,c	;volatile
 13216                           
 13217                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 13218  003BAE  0E00               	movlw	0
 13219  003BB0  0100               	movlb	0	; () banked
 13220  003BB2  6F69               	movwf	(_inPipes+3)& (0+255),b
 13221                           
 13222                           ; BSR set to: 0
 13223                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 13224  003BB4  0E00               	movlw	0
 13225  003BB6  0101               	movlb	1	; () banked
 13226  003BB8  6F34               	movwf	(_outPipes+3)& (0+255),b
 13227                           
 13228                           ; BSR set to: 1
 13229                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 13230  003BBA  0E00               	movlw	0
 13231  003BBC  6F36               	movwf	(_outPipes+5)& (0+255),b
 13232  003BBE  0E00               	movlw	0
 13233  003BC0  6F35               	movwf	(_outPipes+4)& (0+255),b
 13234                           
 13235                           ; BSR set to: 1
 13236                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 13237  003BC2  B662               	btfsc	3938,3,c	;volatile
 13238  003BC4  D7F3               	goto	l141
 13239                           
 13240                           ; BSR set to: 1
 13241                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 13242                           
 13243                           ; BSR set to: 1
 13244  003BC6  0E01               	movlw	1
 13245  003BC8  0100               	movlb	0	; () banked
 13246  003BCA  6FA7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 13247                           
 13248                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 13249  003BCC  0E01               	movlw	1
 13250  003BCE  6FA6               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 13251                           
 13252                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 13253  003BD0  0E00               	movlw	0
 13254  003BD2  6FA5               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 13255                           
 13256                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 13257  003BD4  0E00               	movlw	0
 13258  003BD6  6FA4               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 13259                           
 13260                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 13261  003BD8  0E00               	movlw	0
 13262  003BDA  6FAC               	movwf	_USBBusIsSuspended& (0+255),b
 13263                           
 13264                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 13265  003BDC  0E00               	movlw	0
 13266  003BDE  6E09               	movwf	USBDeviceInit@i,c
 13267  003BE0                     l13753:
 13268                           
 13269                           ; BSR set to: 0
 13270  003BE0  0E02               	movlw	2
 13271  003BE2  6409               	cpfsgt	USBDeviceInit@i,c
 13272  003BE4  D001               	goto	l143
 13273  003BE6  D02E               	goto	u10550
 13274  003BE8                     l143:
 13275                           
 13276                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 13277                           
 13278                           ; BSR set to: 0
 13279  003BE8  5009               	movf	USBDeviceInit@i,w,c
 13280  003BEA  0D02               	mullw	2
 13281  003BEC  0E6C               	movlw	low _pBDTEntryIn
 13282  003BEE  24F3               	addwf	prodl,w,c
 13283  003BF0  6ED9               	movwf	fsr2l,c
 13284  003BF2  0E00               	movlw	high _pBDTEntryIn
 13285  003BF4  20F4               	addwfc	prodh,w,c
 13286  003BF6  6EDA               	movwf	fsr2h,c
 13287  003BF8  0E00               	movlw	0
 13288  003BFA  6EDE               	movwf	postinc2,c
 13289  003BFC  0E00               	movlw	0
 13290  003BFE  6EDD               	movwf	postdec2,c
 13291                           
 13292                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 13293  003C00  5009               	movf	USBDeviceInit@i,w,c
 13294  003C02  0D02               	mullw	2
 13295  003C04  0E72               	movlw	low _pBDTEntryOut
 13296  003C06  24F3               	addwf	prodl,w,c
 13297  003C08  6ED9               	movwf	fsr2l,c
 13298  003C0A  0E00               	movlw	high _pBDTEntryOut
 13299  003C0C  20F4               	addwfc	prodh,w,c
 13300  003C0E  6EDA               	movwf	fsr2h,c
 13301  003C10  0E00               	movlw	0
 13302  003C12  6EDE               	movwf	postinc2,c
 13303  003C14  0E00               	movlw	0
 13304  003C16  6EDD               	movwf	postdec2,c
 13305                           
 13306                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 13307  003C18  5009               	movf	USBDeviceInit@i,w,c
 13308  003C1A  0D01               	mullw	1
 13309  003C1C  0E61               	movlw	low _ep_data_in
 13310  003C1E  24F3               	addwf	prodl,w,c
 13311  003C20  6ED9               	movwf	fsr2l,c
 13312  003C22  0E01               	movlw	high _ep_data_in
 13313  003C24  20F4               	addwfc	prodh,w,c
 13314  003C26  6EDA               	movwf	fsr2h,c
 13315  003C28  0E00               	movlw	0
 13316  003C2A  6EDF               	movwf	indf2,c
 13317                           
 13318                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 13319  003C2C  5009               	movf	USBDeviceInit@i,w,c
 13320  003C2E  0D01               	mullw	1
 13321  003C30  0E5E               	movlw	low _ep_data_out
 13322  003C32  24F3               	addwf	prodl,w,c
 13323  003C34  6ED9               	movwf	fsr2l,c
 13324  003C36  0E01               	movlw	high _ep_data_out
 13325  003C38  20F4               	addwfc	prodh,w,c
 13326  003C3A  6EDA               	movwf	fsr2h,c
 13327  003C3C  0E00               	movlw	0
 13328  003C3E  6EDF               	movwf	indf2,c
 13329  003C40  2A09               	incf	USBDeviceInit@i,f,c
 13330  003C42  D7CE               	goto	l13753
 13331  003C44                     u10550:
 13332                           
 13333                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13334  003C44  0E08               	movlw	8
 13335  003C46  0100               	movlb	0	; () banked
 13336  003C48  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 13337  003C4A  0E0D               	movlw	13
 13338  003C4C  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13339                           
 13340                           ; BSR set to: 0
 13341                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 13342  003C4E  0E16               	movlw	22
 13343  003C50  010F               	movlb	15	; () banked
 13344  003C52  6F26               	movwf	38,b	;volatile
 13345                           
 13346                           ; BSR set to: 15
 13347                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 13348  003C54  0E0D               	movlw	13
 13349  003C56  010D               	movlb	13	; () banked
 13350  003C58  6F03               	movwf	3,b	;volatile
 13351  003C5A  0E30               	movlw	48
 13352  003C5C  6F02               	movwf	2,b	;volatile
 13353                           
 13354                           ; BSR set to: 13
 13355                           ;usb_device.c: 359: BDT[0].CNT = 8;
 13356  003C5E  0E08               	movlw	8
 13357  003C60  6F01               	movwf	1,b	;volatile
 13358                           
 13359                           ; BSR set to: 13
 13360                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 13361  003C62  0E04               	movlw	4
 13362  003C64  6F00               	movwf	0,b	;volatile
 13363                           
 13364                           ; BSR set to: 13
 13365                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 13366  003C66  8F00               	bsf	0,7,b	;volatile
 13367                           
 13368                           ; BSR set to: 13
 13369                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 13370  003C68  0E00               	movlw	0
 13371  003C6A  0100               	movlb	0	; () banked
 13372  003C6C  6FB4               	movwf	_USBActiveConfiguration& (0+255),b
 13373                           
 13374                           ; BSR set to: 0
 13375                           ;usb_device.c: 366: USB1msTickCount = 0;
 13376  003C6E  0E00               	movlw	0
 13377  003C70  0101               	movlb	1	; () banked
 13378  003C72  6F54               	movwf	_USB1msTickCount& (0+255),b
 13379  003C74  0E00               	movlw	0
 13380  003C76  6F55               	movwf	(_USB1msTickCount+1)& (0+255),b
 13381  003C78  0E00               	movlw	0
 13382  003C7A  6F56               	movwf	(_USB1msTickCount+2)& (0+255),b
 13383  003C7C  0E00               	movlw	0
 13384  003C7E  6F57               	movwf	(_USB1msTickCount+3)& (0+255),b
 13385                           
 13386                           ; BSR set to: 1
 13387                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 13388  003C80  0E00               	movlw	0
 13389  003C82  0100               	movlb	0	; () banked
 13390  003C84  6FA3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 13391                           
 13392                           ; BSR set to: 0
 13393                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 13394  003C86  0E00               	movlw	0
 13395  003C88  6FB0               	movwf	_USBDeviceState& (0+255),b
 13396                           
 13397                           ; BSR set to: 0
 13398  003C8A  0012               	return		;funcret
 13399  003C8C                     __end_of_USBDeviceInit:
 13400                           	opt stack 0
 13401                           tblptru	equ	0xFF8
 13402                           tblptrh	equ	0xFF7
 13403                           tblptrl	equ	0xFF6
 13404                           tablat	equ	0xFF5
 13405                           prodh	equ	0xFF4
 13406                           prodl	equ	0xFF3
 13407                           intcon	equ	0xFF2
 13408                           intcon2	equ	0xFF1
 13409                           intcon3	equ	0xFF0
 13410                           postinc0	equ	0xFEE
 13411                           wreg	equ	0xFE8
 13412                           indf1	equ	0xFE7
 13413                           postdec1	equ	0xFE5
 13414                           plusw1	equ	0xFE3
 13415                           fsr1h	equ	0xFE2
 13416                           fsr1l	equ	0xFE1
 13417                           indf2	equ	0xFDF
 13418                           postinc2	equ	0xFDE
 13419                           postdec2	equ	0xFDD
 13420                           plusw2	equ	0xFDB
 13421                           fsr2h	equ	0xFDA
 13422                           fsr2l	equ	0xFD9
 13423                           status	equ	0xFD8
 13424                           
 13425 ;; *************** function _USBCtrlEPService *****************
 13426 ;; Defined at:
 13427 ;;		line 2374 in file "usb_device.c"
 13428 ;; Parameters:    Size  Location     Type
 13429 ;;		None
 13430 ;; Auto vars:     Size  Location     Type
 13431 ;;		None
 13432 ;; Return value:  Size  Location     Type
 13433 ;;                  1    wreg      void 
 13434 ;; Registers used:
 13435 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 13436 ;; Tracked objects:
 13437 ;;		On entry : 0/0
 13438 ;;		On exit  : 0/0
 13439 ;;		Unchanged: 0/0
 13440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13443 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13444 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13445 ;;Total ram usage:        2 bytes
 13446 ;; Hardware stack levels used:    1
 13447 ;; Hardware stack levels required when called:    7
 13448 ;; This function calls:
 13449 ;;		_USBCtrlTrfInHandler
 13450 ;;		_USBCtrlTrfOutHandler
 13451 ;;		_USBCtrlTrfSetupHandler
 13452 ;;		_memcpy
 13453 ;; This function is called by:
 13454 ;;		_USBDeviceTasks
 13455 ;; This function uses a non-reentrant model
 13456 ;;
 13457                           
 13458                           	psect	text63
 13459  005966                     __ptext63:
 13460                           	opt stack 0
 13461  005966                     _USBCtrlEPService:
 13462                           	opt stack 22
 13463                           
 13464                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 13465                           
 13466                           ; BSR set to: 0
 13467                           ;incstack = 0
 13468  005966  0E2D               	movlw	45
 13469  005968  0100               	movlb	0	; () banked
 13470  00596A  6FA9               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
 13471                           
 13472                           ; BSR set to: 0
 13473                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 13474  00596C  C0B3  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 13475  005970  0EFD               	movlw	253
 13476  005972  161E               	andwf	??_USBCtrlEPService,f,c
 13477  005974  A4D8               	btfss	status,2,c
 13478  005976  D044               	goto	l309
 13479                           
 13480                           ; BSR set to: 0
 13481                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 13482  005978  C0B3  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 13483  00597C  90D8               	bcf	status,0,c
 13484  00597E  321E               	rrcf	??_USBCtrlEPService,f,c
 13485  005980  0E3F               	movlw	63
 13486  005982  161E               	andwf	??_USBCtrlEPService,f,c
 13487  005984  501E               	movf	??_USBCtrlEPService,w,c
 13488  005986  0D04               	mullw	4
 13489  005988  0E00               	movlw	0
 13490  00598A  24F3               	addwf	prodl,w,c
 13491  00598C  6F92               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 13492  00598E  0E0D               	movlw	13
 13493  005990  20F4               	addwfc	prodh,w,c
 13494  005992  6F93               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 13495                           
 13496                           ; BSR set to: 0
 13497                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 13498  005994  C092  F090         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 13499  005998  C093  F091         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 13500                           
 13501                           ; BSR set to: 0
 13502                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 13503  00599C  0E04               	movlw	4
 13504  00599E  1990               	xorwf	_pBDTEntryEP0OutNext& (0+255),w,b
 13505  0059A0  6F90               	movwf	_pBDTEntryEP0OutNext& (0+255),b
 13506  0059A2  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13507  0059A4  6F91               	movwf	(_pBDTEntryEP0OutNext+1)& (0+255),b
 13508                           
 13509                           ; BSR set to: 0
 13510                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 13511  0059A6  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 13512  0059AA  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 13513  0059AE  30DF               	rrcf	223,w,c
 13514  0059B0  32E8               	rrcf	wreg,f,c
 13515  0059B2  0B0F               	andlw	15
 13516  0059B4  0A0D               	xorlw	13
 13517  0059B6  A4D8               	btfss	status,2,c
 13518  0059B8  D020               	goto	l310
 13519                           
 13520                           ; BSR set to: 0
 13521                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 13522  0059BA  0E30               	movlw	48
 13523  0059BC  6E01               	movwf	memcpy@d1,c
 13524  0059BE  0E0D               	movlw	13
 13525  0059C0  6E02               	movwf	memcpy@d1+1,c
 13526  0059C2  EE20 F002          	lfsr	2,2
 13527  0059C6  5192               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 13528  0059C8  26D9               	addwf	fsr2l,f,c
 13529  0059CA  5193               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 13530  0059CC  22DA               	addwfc	fsr2h,f,c
 13531  0059CE  CFDE F01E          	movff	postinc2,??_USBCtrlEPService
 13532  0059D2  CFDD F01F          	movff	postdec2,??_USBCtrlEPService+1
 13533  0059D6  C01E  F003         	movff	??_USBCtrlEPService,memcpy@s1
 13534  0059DA  C01F  F004         	movff	??_USBCtrlEPService+1,memcpy@s1+1
 13535  0059DE  5003               	movf	memcpy@s1,w,c
 13536  0059E0  1004               	iorwf	memcpy@s1+1,w,c
 13537  0059E2  A4D8               	btfss	status,2,c
 13538  0059E4  0E20               	movlw	32
 13539  0059E6  6E05               	movwf	memcpy@s1+2,c
 13540  0059E8  0E00               	movlw	0
 13541  0059EA  6E07               	movwf	memcpy@n+1,c
 13542  0059EC  0E08               	movlw	8
 13543  0059EE  6E06               	movwf	memcpy@n,c
 13544  0059F0  ECAE  F036         	call	_memcpy	;wreg free
 13545                           
 13546                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 13547  0059F4  ECC6  F030         	call	_USBCtrlTrfSetupHandler	;wreg free
 13548                           
 13549                           ;usb_device.c: 2411: }
 13550  0059F8  0012               	return	
 13551  0059FA                     l310:
 13552                           
 13553                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 13554  0059FA  EC73  F037         	call	_USBCtrlTrfOutHandler	;wreg free
 13555                           
 13556                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 13557  0059FE  0012               	return	
 13558  005A00                     l309:
 13559                           
 13560                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 13561  005A00  0100               	movlb	0	; () banked
 13562  005A02  51B3               	movf	_USTATcopy& (0+255),w,b
 13563  005A04  0BFD               	andlw	253
 13564  005A06  0A04               	xorlw	4
 13565  005A08  A4D8               	btfss	status,2,c
 13566  005A0A  0012               	return	
 13567                           
 13568                           ; BSR set to: 0
 13569                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 13570  005A0C  EC5D  F029         	call	_USBCtrlTrfInHandler	;wreg free
 13571  005A10  0012               	return	
 13572  005A12                     __end_of_USBCtrlEPService:
 13573                           	opt stack 0
 13574                           tblptru	equ	0xFF8
 13575                           tblptrh	equ	0xFF7
 13576                           tblptrl	equ	0xFF6
 13577                           tablat	equ	0xFF5
 13578                           prodh	equ	0xFF4
 13579                           prodl	equ	0xFF3
 13580                           intcon	equ	0xFF2
 13581                           intcon2	equ	0xFF1
 13582                           intcon3	equ	0xFF0
 13583                           postinc0	equ	0xFEE
 13584                           wreg	equ	0xFE8
 13585                           indf1	equ	0xFE7
 13586                           postdec1	equ	0xFE5
 13587                           plusw1	equ	0xFE3
 13588                           fsr1h	equ	0xFE2
 13589                           fsr1l	equ	0xFE1
 13590                           indf2	equ	0xFDF
 13591                           postinc2	equ	0xFDE
 13592                           postdec2	equ	0xFDD
 13593                           plusw2	equ	0xFDB
 13594                           fsr2h	equ	0xFDA
 13595                           fsr2l	equ	0xFD9
 13596                           status	equ	0xFD8
 13597                           
 13598 ;; *************** function _USBCtrlTrfSetupHandler *****************
 13599 ;; Defined at:
 13600 ;;		line 2467 in file "usb_device.c"
 13601 ;; Parameters:    Size  Location     Type
 13602 ;;		None
 13603 ;; Auto vars:     Size  Location     Type
 13604 ;;		None
 13605 ;; Return value:  Size  Location     Type
 13606 ;;                  1    wreg      void 
 13607 ;; Registers used:
 13608 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13609 ;; Tracked objects:
 13610 ;;		On entry : 0/0
 13611 ;;		On exit  : 0/0
 13612 ;;		Unchanged: 0/0
 13613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13618 ;;Total ram usage:        0 bytes
 13619 ;; Hardware stack levels used:    1
 13620 ;; Hardware stack levels required when called:    6
 13621 ;; This function calls:
 13622 ;;		_USBCheckStdRequest
 13623 ;;		_USBCtrlEPServiceComplete
 13624 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13625 ;; This function is called by:
 13626 ;;		_USBCtrlEPService
 13627 ;; This function uses a non-reentrant model
 13628 ;;
 13629                           
 13630                           	psect	text64
 13631  00618C                     __ptext64:
 13632                           	opt stack 0
 13633  00618C                     _USBCtrlTrfSetupHandler:
 13634                           	opt stack 22
 13635                           
 13636                           ;usb_device.c: 2472: shortPacketStatus = 0;
 13637                           
 13638                           ;incstack = 0
 13639  00618C  0E00               	movlw	0
 13640  00618E  0100               	movlb	0	; () banked
 13641  006190  6FAF               	movwf	_shortPacketStatus& (0+255),b
 13642                           
 13643                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 13644  006192  0E00               	movlw	0
 13645  006194  6FA8               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 13646                           
 13647                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 13648  006196  0E00               	movlw	0
 13649  006198  6FA5               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 13650                           
 13651                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 13652  00619A  0E00               	movlw	0
 13653  00619C  6FA4               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 13654                           
 13655                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 13656  00619E  0E00               	movlw	0
 13657  0061A0  6FAA               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 13658                           
 13659                           ;usb_device.c: 2477: controlTransferState = 0;
 13660  0061A2  0E00               	movlw	0
 13661  0061A4  6FAE               	movwf	_controlTransferState& (0+255),b
 13662                           
 13663                           ; BSR set to: 0
 13664                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 13665  0061A6  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 13666  0061AA  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13667  0061AE  0E7F               	movlw	127
 13668  0061B0  16DF               	andwf	indf2,f,c
 13669                           
 13670                           ; BSR set to: 0
 13671                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 13672  0061B2  0E04               	movlw	4
 13673  0061B4  196C               	xorwf	_pBDTEntryIn& (0+255),w,b
 13674  0061B6  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 13675  0061B8  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13676  0061BA  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13677                           
 13678                           ; BSR set to: 0
 13679                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 13680  0061BC  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 13681  0061C0  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13682  0061C4  0E7F               	movlw	127
 13683  0061C6  16DF               	andwf	indf2,f,c
 13684                           
 13685                           ; BSR set to: 0
 13686                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 13687  0061C8  0E04               	movlw	4
 13688  0061CA  196C               	xorwf	_pBDTEntryIn& (0+255),w,b
 13689  0061CC  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 13690  0061CE  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 13691  0061D0  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13692                           
 13693                           ; BSR set to: 0
 13694                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 13695  0061D2  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13696  0061D6  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13697  0061DA  0E7F               	movlw	127
 13698  0061DC  16DF               	andwf	indf2,f,c
 13699                           
 13700                           ; BSR set to: 0
 13701                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 13702  0061DE  0E00               	movlw	0
 13703  0061E0  6F69               	movwf	(_inPipes+3)& (0+255),b
 13704                           
 13705                           ; BSR set to: 0
 13706                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 13707  0061E2  0E00               	movlw	0
 13708  0061E4  6F6B               	movwf	(_inPipes+5)& (0+255),b
 13709  0061E6  0E00               	movlw	0
 13710  0061E8  6F6A               	movwf	(_inPipes+4)& (0+255),b
 13711                           
 13712                           ; BSR set to: 0
 13713                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 13714  0061EA  0E00               	movlw	0
 13715  0061EC  0101               	movlb	1	; () banked
 13716  0061EE  6F34               	movwf	(_outPipes+3)& (0+255),b
 13717                           
 13718                           ; BSR set to: 1
 13719                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 13720  0061F0  0E00               	movlw	0
 13721  0061F2  6F36               	movwf	(_outPipes+5)& (0+255),b
 13722  0061F4  0E00               	movlw	0
 13723  0061F6  6F35               	movwf	(_outPipes+4)& (0+255),b
 13724                           
 13725                           ; BSR set to: 1
 13726                           ;usb_device.c: 2502: USBCheckStdRequest();
 13727  0061F8  ECAC  F024         	call	_USBCheckStdRequest	;wreg free
 13728                           
 13729                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 13730  0061FC  0E00               	movlw	0
 13731  0061FE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13732  006200  0E03               	movlw	3
 13733  006202  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13734  006204  0E00               	movlw	0
 13735  006206  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13736  006208  0E00               	movlw	0
 13737  00620A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13738  00620C  0E00               	movlw	0
 13739  00620E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13740  006210  0E00               	movlw	0
 13741  006212  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13742  006214  EC29  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13743                           
 13744                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 13745  006218  ECAC  F023         	call	_USBCtrlEPServiceComplete	;wreg free
 13746  00621C  0012               	return		;funcret
 13747  00621E                     __end_of_USBCtrlTrfSetupHandler:
 13748                           	opt stack 0
 13749                           tblptru	equ	0xFF8
 13750                           tblptrh	equ	0xFF7
 13751                           tblptrl	equ	0xFF6
 13752                           tablat	equ	0xFF5
 13753                           prodh	equ	0xFF4
 13754                           prodl	equ	0xFF3
 13755                           intcon	equ	0xFF2
 13756                           intcon2	equ	0xFF1
 13757                           intcon3	equ	0xFF0
 13758                           postinc0	equ	0xFEE
 13759                           wreg	equ	0xFE8
 13760                           indf1	equ	0xFE7
 13761                           postdec1	equ	0xFE5
 13762                           plusw1	equ	0xFE3
 13763                           fsr1h	equ	0xFE2
 13764                           fsr1l	equ	0xFE1
 13765                           indf2	equ	0xFDF
 13766                           postinc2	equ	0xFDE
 13767                           postdec2	equ	0xFDD
 13768                           plusw2	equ	0xFDB
 13769                           fsr2h	equ	0xFDA
 13770                           fsr2l	equ	0xFD9
 13771                           status	equ	0xFD8
 13772                           
 13773 ;; *************** function _USBCtrlEPServiceComplete *****************
 13774 ;; Defined at:
 13775 ;;		line 1618 in file "usb_device.c"
 13776 ;; Parameters:    Size  Location     Type
 13777 ;;		None
 13778 ;; Auto vars:     Size  Location     Type
 13779 ;;		None
 13780 ;; Return value:  Size  Location     Type
 13781 ;;                  1    wreg      void 
 13782 ;; Registers used:
 13783 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13784 ;; Tracked objects:
 13785 ;;		On entry : 0/0
 13786 ;;		On exit  : 0/0
 13787 ;;		Unchanged: 0/0
 13788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13793 ;;Total ram usage:        0 bytes
 13794 ;; Hardware stack levels used:    1
 13795 ;; Hardware stack levels required when called:    2
 13796 ;; This function calls:
 13797 ;;		_USBCtrlEPAllowDataStage
 13798 ;;		_USBCtrlEPAllowStatusStage
 13799 ;; This function is called by:
 13800 ;;		_USBCtrlTrfSetupHandler
 13801 ;; This function uses a non-reentrant model
 13802 ;;
 13803                           
 13804                           	psect	text65
 13805  004758                     __ptext65:
 13806                           	opt stack 0
 13807  004758                     _USBCtrlEPServiceComplete:
 13808                           	opt stack 25
 13809                           
 13810                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 13811                           
 13812                           ;incstack = 0
 13813  004758  9865               	bcf	3941,4,c	;volatile
 13814                           
 13815                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 13816  00475A  0100               	movlb	0	; () banked
 13817  00475C  BF69               	btfsc	(_inPipes+3)& (0+255),7,b
 13818  00475E  D03C               	goto	l219
 13819                           
 13820                           ; BSR set to: 0
 13821                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 13822  004760  0101               	movlb	1	; () banked
 13823  004762  AF34               	btfss	(_outPipes+3)& (0+255),7,b
 13824  004764  D00D               	goto	l220
 13825                           
 13826                           ; BSR set to: 1
 13827                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 13828  004766  0E02               	movlw	2
 13829  004768  0100               	movlb	0	; () banked
 13830  00476A  6FAE               	movwf	_controlTransferState& (0+255),b
 13831                           
 13832                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 13833  00476C  51A4               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 13834  00476E  B4D8               	btfsc	status,2,c
 13835                           
 13836                           ; BSR set to: 0
 13837                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 13838  004770  ECFB  F02E         	call	_USBCtrlEPAllowDataStage	;wreg free
 13839                           
 13840                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 13841  004774  0E00               	movlw	0
 13842  004776  0100               	movlb	0	; () banked
 13843  004778  6FA6               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 13844                           
 13845                           ; BSR set to: 0
 13846                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 13847  00477A  0E00               	movlw	0
 13848  00477C  6FA7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 13849                           
 13850                           ;usb_device.c: 1654: }
 13851  00477E  0012               	return	
 13852  004780                     l220:
 13853                           
 13854                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 13855                           
 13856                           ; BSR set to: 0
 13857  004780  0100               	movlb	0	; () banked
 13858  004782  EE20 F001          	lfsr	2,1
 13859  004786  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13860  004788  26D9               	addwf	fsr2l,f,c
 13861  00478A  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13862  00478C  22DA               	addwfc	fsr2h,f,c
 13863  00478E  0E08               	movlw	8
 13864  004790  6EDF               	movwf	indf2,c
 13865                           
 13866                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13867  004792  EE20 F002          	lfsr	2,2
 13868  004796  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13869  004798  26D9               	addwf	fsr2l,f,c
 13870  00479A  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13871  00479C  22DA               	addwfc	fsr2h,f,c
 13872  00479E  0E30               	movlw	48
 13873  0047A0  6EDE               	movwf	postinc2,c
 13874  0047A2  0E0D               	movlw	13
 13875  0047A4  6EDD               	movwf	postdec2,c
 13876                           
 13877                           ; BSR set to: 0
 13878                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 13879  0047A6  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13880  0047AA  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13881  0047AE  0E0C               	movlw	12
 13882  0047B0  6EDF               	movwf	indf2,c
 13883                           
 13884                           ; BSR set to: 0
 13885                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13886  0047B2  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13887  0047B6  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13888  0047BA  0E00               	movlw	0
 13889  0047BC  8EDB               	bsf	plusw2,7,c
 13890                           
 13891                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 13892  0047BE  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 13893  0047C2  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13894  0047C6  0E04               	movlw	4
 13895  0047C8  6EDF               	movwf	indf2,c
 13896                           
 13897                           ; BSR set to: 0
 13898                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 13899  0047CA  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 13900  0047CE  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 13901  0047D2  0E00               	movlw	0
 13902  0047D4  8EDB               	bsf	plusw2,7,c
 13903                           
 13904                           ; BSR set to: 0
 13905                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 13906  0047D6  0012               	return	
 13907  0047D8                     l219:
 13908                           
 13909                           ; BSR set to: 0
 13910                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 13911  0047D8  010D               	movlb	13	; () banked
 13912  0047DA  AF30               	btfss	48,7,b	;volatile
 13913  0047DC  D012               	goto	l224
 13914                           
 13915                           ; BSR set to: 13
 13916                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 13917  0047DE  0E01               	movlw	1
 13918  0047E0  0100               	movlb	0	; () banked
 13919  0047E2  6FAE               	movwf	_controlTransferState& (0+255),b
 13920                           
 13921                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 13922  0047E4  51A5               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 13923  0047E6  B4D8               	btfsc	status,2,c
 13924                           
 13925                           ; BSR set to: 0
 13926                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 13927  0047E8  ECFB  F02E         	call	_USBCtrlEPAllowDataStage	;wreg free
 13928                           
 13929                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 13930  0047EC  0E00               	movlw	0
 13931  0047EE  0100               	movlb	0	; () banked
 13932  0047F0  6FA6               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 13933                           
 13934                           ; BSR set to: 0
 13935                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 13936  0047F2  0E00               	movlw	0
 13937  0047F4  6FA7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 13938                           
 13939                           ; BSR set to: 0
 13940                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 13941  0047F6  51A8               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 13942  0047F8  A4D8               	btfss	status,2,c
 13943  0047FA  0012               	return	
 13944                           
 13945                           ; BSR set to: 0
 13946                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 13947  0047FC  ECC1  F029         	call	_USBCtrlEPAllowStatusStage	;wreg free
 13948                           
 13949                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 13950  004800  0012               	return	
 13951  004802                     l224:
 13952                           
 13953                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 13954  004802  0E02               	movlw	2
 13955  004804  0100               	movlb	0	; () banked
 13956  004806  6FAE               	movwf	_controlTransferState& (0+255),b
 13957                           
 13958                           ; BSR set to: 0
 13959                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 13960  004808  EE20 F001          	lfsr	2,1
 13961  00480C  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13962  00480E  26D9               	addwf	fsr2l,f,c
 13963  004810  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13964  004812  22DA               	addwfc	fsr2h,f,c
 13965  004814  0E08               	movlw	8
 13966  004816  6EDF               	movwf	indf2,c
 13967                           
 13968                           ; BSR set to: 0
 13969                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 13970  004818  EE20 F002          	lfsr	2,2
 13971  00481C  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 13972  00481E  26D9               	addwf	fsr2l,f,c
 13973  004820  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 13974  004822  22DA               	addwfc	fsr2h,f,c
 13975  004824  0E30               	movlw	48
 13976  004826  6EDE               	movwf	postinc2,c
 13977  004828  0E0D               	movlw	13
 13978  00482A  6EDD               	movwf	postdec2,c
 13979                           
 13980                           ; BSR set to: 0
 13981                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 13982  00482C  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13983  004830  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13984  004834  0E04               	movlw	4
 13985  004836  6EDF               	movwf	indf2,c
 13986                           
 13987                           ; BSR set to: 0
 13988                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 13989  004838  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 13990  00483C  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 13991  004840  0E00               	movlw	0
 13992  004842  8EDB               	bsf	plusw2,7,c
 13993                           
 13994                           ; BSR set to: 0
 13995                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 13996  004844  0E00               	movlw	0
 13997  004846  6FA6               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 13998                           
 13999                           ; BSR set to: 0
 14000                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 14001  004848  0E00               	movlw	0
 14002  00484A  6FA7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 14003                           
 14004                           ; BSR set to: 0
 14005                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 14006  00484C  51A8               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 14007  00484E  A4D8               	btfss	status,2,c
 14008  004850  0012               	return	
 14009                           
 14010                           ; BSR set to: 0
 14011                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 14012  004852  ECC1  F029         	call	_USBCtrlEPAllowStatusStage	;wreg free
 14013  004856  0012               	return	
 14014  004858                     __end_of_USBCtrlEPServiceComplete:
 14015                           	opt stack 0
 14016                           tblptru	equ	0xFF8
 14017                           tblptrh	equ	0xFF7
 14018                           tblptrl	equ	0xFF6
 14019                           tablat	equ	0xFF5
 14020                           prodh	equ	0xFF4
 14021                           prodl	equ	0xFF3
 14022                           intcon	equ	0xFF2
 14023                           intcon2	equ	0xFF1
 14024                           intcon3	equ	0xFF0
 14025                           postinc0	equ	0xFEE
 14026                           wreg	equ	0xFE8
 14027                           indf1	equ	0xFE7
 14028                           postdec1	equ	0xFE5
 14029                           plusw1	equ	0xFE3
 14030                           fsr1h	equ	0xFE2
 14031                           fsr1l	equ	0xFE1
 14032                           indf2	equ	0xFDF
 14033                           postinc2	equ	0xFDE
 14034                           postdec2	equ	0xFDD
 14035                           plusw2	equ	0xFDB
 14036                           fsr2h	equ	0xFDA
 14037                           fsr2l	equ	0xFD9
 14038                           status	equ	0xFD8
 14039                           
 14040 ;; *************** function _USBCtrlEPAllowDataStage *****************
 14041 ;; Defined at:
 14042 ;;		line 1490 in file "usb_device.c"
 14043 ;; Parameters:    Size  Location     Type
 14044 ;;		None
 14045 ;; Auto vars:     Size  Location     Type
 14046 ;;		None
 14047 ;; Return value:  Size  Location     Type
 14048 ;;                  1    wreg      void 
 14049 ;; Registers used:
 14050 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14051 ;; Tracked objects:
 14052 ;;		On entry : 0/0
 14053 ;;		On exit  : 0/0
 14054 ;;		Unchanged: 0/0
 14055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14057 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14059 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14060 ;;Total ram usage:        0 bytes
 14061 ;; Hardware stack levels used:    1
 14062 ;; Hardware stack levels required when called:    1
 14063 ;; This function calls:
 14064 ;;		_USBCtrlTrfTxService
 14065 ;; This function is called by:
 14066 ;;		_USBCtrlEPServiceComplete
 14067 ;; This function uses a non-reentrant model
 14068 ;;
 14069                           
 14070                           	psect	text66
 14071  005DF6                     __ptext66:
 14072                           	opt stack 0
 14073  005DF6                     _USBCtrlEPAllowDataStage:
 14074                           	opt stack 25
 14075                           
 14076                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 14077                           
 14078                           ;incstack = 0
 14079  005DF6  0E00               	movlw	0
 14080  005DF8  0100               	movlb	0	; () banked
 14081  005DFA  6FA5               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 14082                           
 14083                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 14084  005DFC  0E00               	movlw	0
 14085  005DFE  6FA4               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 14086                           
 14087                           ; BSR set to: 0
 14088                           ;usb_device.c: 1495: if(controlTransferState == 2)
 14089  005E00  0E02               	movlw	2
 14090  005E02  19AE               	xorwf	_controlTransferState& (0+255),w,b
 14091  005E04  A4D8               	btfss	status,2,c
 14092  005E06  D01F               	goto	l208
 14093                           
 14094                           ; BSR set to: 0
 14095                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 14096  005E08  EE20 F001          	lfsr	2,1
 14097  005E0C  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 14098  005E0E  26D9               	addwf	fsr2l,f,c
 14099  005E10  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 14100  005E12  22DA               	addwfc	fsr2h,f,c
 14101  005E14  0E08               	movlw	8
 14102  005E16  6EDF               	movwf	indf2,c
 14103                           
 14104                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 14105  005E18  EE20 F002          	lfsr	2,2
 14106  005E1C  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 14107  005E1E  26D9               	addwf	fsr2l,f,c
 14108  005E20  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 14109  005E22  22DA               	addwfc	fsr2h,f,c
 14110  005E24  0E38               	movlw	56
 14111  005E26  6EDE               	movwf	postinc2,c
 14112  005E28  0E0D               	movlw	13
 14113  005E2A  6EDD               	movwf	postdec2,c
 14114                           
 14115                           ; BSR set to: 0
 14116                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 14117  005E2C  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14118  005E30  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14119  005E34  0E48               	movlw	72
 14120  005E36  6EDF               	movwf	indf2,c
 14121                           
 14122                           ; BSR set to: 0
 14123                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 14124  005E38  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 14125  005E3C  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 14126  005E40  0E00               	movlw	0
 14127  005E42  8EDB               	bsf	plusw2,7,c
 14128                           
 14129                           ;usb_device.c: 1502: }
 14130  005E44  0012               	return	
 14131  005E46                     l208:
 14132                           
 14133                           ; BSR set to: 0
 14134                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 14135                           
 14136                           ; BSR set to: 0
 14137  005E46  516A               	movf	(_inPipes+4)& (0+255),w,b
 14138  005E48  010D               	movlb	13	; () banked
 14139  005E4A  5D36               	subwf	54,w,b	;volatile
 14140  005E4C  0100               	movlb	0	; () banked
 14141  005E4E  516B               	movf	(_inPipes+5)& (0+255),w,b
 14142  005E50  010D               	movlb	13	; () banked
 14143  005E52  5937               	subwfb	55,w,b	;volatile
 14144  005E54  B0D8               	btfsc	status,0,c
 14145  005E56  D004               	goto	l210
 14146                           
 14147                           ; BSR set to: 13
 14148                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 14149  005E58  CD36 F06A          	movff	3382,_inPipes+4	;volatile
 14150  005E5C  CD37 F06B          	movff	3383,_inPipes+5	;volatile
 14151  005E60                     l210:
 14152                           
 14153                           ; BSR set to: 13
 14154                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 14155                           
 14156                           ; BSR set to: 13
 14157  005E60  ECF7  F028         	call	_USBCtrlTrfTxService	;wreg free
 14158                           
 14159                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 14160  005E64  0100               	movlb	0	; () banked
 14161  005E66  EE20 F002          	lfsr	2,2
 14162  005E6A  516C               	movf	_pBDTEntryIn& (0+255),w,b
 14163  005E6C  26D9               	addwf	fsr2l,f,c
 14164  005E6E  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 14165  005E70  22DA               	addwfc	fsr2h,f,c
 14166  005E72  0E38               	movlw	56
 14167  005E74  6EDE               	movwf	postinc2,c
 14168  005E76  0E0D               	movlw	13
 14169  005E78  6EDD               	movwf	postdec2,c
 14170                           
 14171                           ; BSR set to: 0
 14172                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 14173  005E7A  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 14174  005E7E  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14175  005E82  0E48               	movlw	72
 14176  005E84  6EDF               	movwf	indf2,c
 14177                           
 14178                           ; BSR set to: 0
 14179                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 14180  005E86  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 14181  005E8A  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 14182  005E8E  0E00               	movlw	0
 14183  005E90  8EDB               	bsf	plusw2,7,c
 14184  005E92  0012               	return	
 14185  005E94                     __end_of_USBCtrlEPAllowDataStage:
 14186                           	opt stack 0
 14187                           tblptru	equ	0xFF8
 14188                           tblptrh	equ	0xFF7
 14189                           tblptrl	equ	0xFF6
 14190                           tablat	equ	0xFF5
 14191                           prodh	equ	0xFF4
 14192                           prodl	equ	0xFF3
 14193                           intcon	equ	0xFF2
 14194                           intcon2	equ	0xFF1
 14195                           intcon3	equ	0xFF0
 14196                           postinc0	equ	0xFEE
 14197                           wreg	equ	0xFE8
 14198                           indf1	equ	0xFE7
 14199                           postdec1	equ	0xFE5
 14200                           plusw1	equ	0xFE3
 14201                           fsr1h	equ	0xFE2
 14202                           fsr1l	equ	0xFE1
 14203                           indf2	equ	0xFDF
 14204                           postinc2	equ	0xFDE
 14205                           postdec2	equ	0xFDD
 14206                           plusw2	equ	0xFDB
 14207                           fsr2h	equ	0xFDA
 14208                           fsr2l	equ	0xFD9
 14209                           status	equ	0xFD8
 14210                           
 14211 ;; *************** function _USBCheckStdRequest *****************
 14212 ;; Defined at:
 14213 ;;		line 2688 in file "usb_device.c"
 14214 ;; Parameters:    Size  Location     Type
 14215 ;;		None
 14216 ;; Auto vars:     Size  Location     Type
 14217 ;;		None
 14218 ;; Return value:  Size  Location     Type
 14219 ;;                  1    wreg      void 
 14220 ;; Registers used:
 14221 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14222 ;; Tracked objects:
 14223 ;;		On entry : 0/0
 14224 ;;		On exit  : 0/0
 14225 ;;		Unchanged: 0/0
 14226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14231 ;;Total ram usage:        0 bytes
 14232 ;; Hardware stack levels used:    1
 14233 ;; Hardware stack levels required when called:    5
 14234 ;; This function calls:
 14235 ;;		_USBStdFeatureReqHandler
 14236 ;;		_USBStdGetDscHandler
 14237 ;;		_USBStdGetStatusHandler
 14238 ;;		_USBStdSetCfgHandler
 14239 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14240 ;; This function is called by:
 14241 ;;		_USBCtrlTrfSetupHandler
 14242 ;; This function uses a non-reentrant model
 14243 ;;
 14244                           
 14245                           	psect	text67
 14246  004958                     __ptext67:
 14247                           	opt stack 0
 14248  004958                     _USBCheckStdRequest:
 14249                           	opt stack 22
 14250                           
 14251                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 14252                           
 14253                           ; BSR set to: 0
 14254                           ;incstack = 0
 14255  004958  010D               	movlb	13	; () banked
 14256  00495A  3930               	swapf	48,w,b	;volatile
 14257  00495C  32E8               	rrcf	wreg,f,c
 14258  00495E  0B03               	andlw	3
 14259  004960  0900               	iorlw	0
 14260  004962  A4D8               	btfss	status,2,c
 14261  004964  0012               	return	
 14262  004966  D047               	goto	l343
 14263  004968                     l344:
 14264                           
 14265                           ; BSR set to: 13
 14266                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 14267  004968  0100               	movlb	0	; () banked
 14268  00496A  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 14269                           
 14270                           ; BSR set to: 0
 14271                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 14272  00496C  0E08               	movlw	8
 14273  00496E  6FB0               	movwf	_USBDeviceState& (0+255),b
 14274                           
 14275                           ;usb_device.c: 2698: break;
 14276  004970  0012               	return	
 14277  004972                     
 14278                           ;usb_device.c: 2700: USBStdGetDscHandler();
 14279                           
 14280                           ; BSR set to: 0
 14281  004972  EC46  F01E         	call	_USBStdGetDscHandler	;wreg free
 14282                           
 14283                           ;usb_device.c: 2701: break;
 14284  004976  0012               	return	
 14285  004978                     
 14286                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 14287  004978  EC1D  F025         	call	_USBStdSetCfgHandler	;wreg free
 14288                           
 14289                           ;usb_device.c: 2704: break;
 14290  00497C  0012               	return	
 14291  00497E                     
 14292                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 14293  00497E  0EB4               	movlw	low _USBActiveConfiguration
 14294  004980  0100               	movlb	0	; () banked
 14295  004982  6F66               	movwf	_inPipes& (0+255),b
 14296  004984  0E00               	movlw	high _USBActiveConfiguration
 14297  004986  6F67               	movwf	(_inPipes+1)& (0+255),b
 14298                           
 14299                           ; BSR set to: 0
 14300                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14301  004988  8169               	bsf	(_inPipes+3)& (0+255),0,b
 14302                           
 14303                           ; BSR set to: 0
 14304                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 14305  00498A  0E01               	movlw	1
 14306  00498C  6F6A               	movwf	(_inPipes+4)& (0+255),b
 14307                           
 14308                           ; BSR set to: 0
 14309                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 14310  00498E  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 14311                           
 14312                           ;usb_device.c: 2710: break;
 14313  004990  0012               	return	
 14314  004992                     
 14315                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 14316                           
 14317                           ; BSR set to: 0
 14318  004992  EC09  F02D         	call	_USBStdGetStatusHandler	;wreg free
 14319                           
 14320                           ;usb_device.c: 2713: break;
 14321  004996  0012               	return	
 14322  004998                     
 14323                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 14324  004998  ECDA  F00B         	call	_USBStdFeatureReqHandler	;wreg free
 14325                           
 14326                           ;usb_device.c: 2717: break;
 14327  00499C  0012               	return	
 14328  00499E                     
 14329                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 14330  00499E  010D               	movlb	13	; () banked
 14331  0049A0  5134               	movf	52,w,b	;volatile
 14332  0049A2  0D01               	mullw	1
 14333  0049A4  0EE2               	movlw	low _USBAlternateInterface
 14334  0049A6  24F3               	addwf	prodl,w,c
 14335  0049A8  0100               	movlb	0	; () banked
 14336  0049AA  6F66               	movwf	_inPipes& (0+255),b
 14337  0049AC  0E01               	movlw	high _USBAlternateInterface
 14338  0049AE  20F4               	addwfc	prodh,w,c
 14339  0049B0  6F67               	movwf	(_inPipes+1)& (0+255),b
 14340                           
 14341                           ; BSR set to: 0
 14342                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14343  0049B2  8169               	bsf	(_inPipes+3)& (0+255),0,b
 14344                           
 14345                           ; BSR set to: 0
 14346                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 14347  0049B4  0E01               	movlw	1
 14348  0049B6  6F6A               	movwf	(_inPipes+4)& (0+255),b
 14349                           
 14350                           ; BSR set to: 0
 14351                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 14352  0049B8  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 14353                           
 14354                           ;usb_device.c: 2723: break;
 14355  0049BA  0012               	return	
 14356  0049BC                     l353:
 14357                           
 14358                           ; BSR set to: 13
 14359                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 14360  0049BC  0100               	movlb	0	; () banked
 14361  0049BE  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 14362                           
 14363                           ; BSR set to: 0
 14364                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 14365  0049C0  010D               	movlb	13	; () banked
 14366  0049C2  5134               	movf	52,w,b	;volatile
 14367  0049C4  0D01               	mullw	1
 14368  0049C6  0EE2               	movlw	low _USBAlternateInterface
 14369  0049C8  24F3               	addwf	prodl,w,c
 14370  0049CA  6ED9               	movwf	fsr2l,c
 14371  0049CC  0E01               	movlw	high _USBAlternateInterface
 14372  0049CE  20F4               	addwfc	prodh,w,c
 14373  0049D0  6EDA               	movwf	fsr2h,c
 14374  0049D2  CD32 FFDF          	movff	3378,indf2	;volatile
 14375                           
 14376                           ;usb_device.c: 2727: break;
 14377  0049D6  0012               	return	
 14378  0049D8                     
 14379                           ; BSR set to: 13
 14380                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 14381                           
 14382                           ; BSR set to: 13
 14383  0049D8  0E00               	movlw	0
 14384  0049DA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14385  0049DC  0E02               	movlw	2
 14386  0049DE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14387  0049E0  0E00               	movlw	0
 14388  0049E2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14389  0049E4  0E00               	movlw	0
 14390  0049E6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14391  0049E8  0E00               	movlw	0
 14392  0049EA  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14393  0049EC  0E00               	movlw	0
 14394  0049EE  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14395  0049F0  EC29  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14396                           
 14397                           ;usb_device.c: 2734: }
 14398                           
 14399                           ;usb_device.c: 2733: break;
 14400                           
 14401                           ;usb_device.c: 2732: default:
 14402                           
 14403                           ;usb_device.c: 2731: case 12:
 14404                           
 14405                           ;usb_device.c: 2730: break;
 14406  0049F4  0012               	return	
 14407  0049F6                     l343:
 14408  0049F6  010D               	movlb	13	; () banked
 14409  0049F8  5131               	movf	49,w,b	;volatile
 14410                           
 14411                           ; Switch size 1, requested type "space"
 14412                           ; Number of cases is 11, Range of values is 0 to 12
 14413                           ; switch strategies available:
 14414                           ; Name         Instructions Cycles
 14415                           ; simple_byte           34    18 (average)
 14416                           ;	Chosen strategy is simple_byte
 14417  0049FA  0A00               	xorlw	0	; case 0
 14418  0049FC  B4D8               	btfsc	status,2,c
 14419  0049FE  D7C9               	goto	l349
 14420  004A00  0A01               	xorlw	1	; case 1
 14421  004A02  B4D8               	btfsc	status,2,c
 14422  004A04  D7C9               	goto	l350
 14423  004A06  0A02               	xorlw	2	; case 3
 14424  004A08  B4D8               	btfsc	status,2,c
 14425  004A0A  D7C6               	goto	l350
 14426  004A0C  0A06               	xorlw	6	; case 5
 14427  004A0E  B4D8               	btfsc	status,2,c
 14428  004A10  D7AB               	goto	l344
 14429  004A12  0A03               	xorlw	3	; case 6
 14430  004A14  B4D8               	btfsc	status,2,c
 14431  004A16  D7AD               	goto	l346
 14432  004A18  0A01               	xorlw	1	; case 7
 14433  004A1A  B4D8               	btfsc	status,2,c
 14434  004A1C  D7DD               	goto	l354
 14435  004A1E  0A0F               	xorlw	15	; case 8
 14436  004A20  B4D8               	btfsc	status,2,c
 14437  004A22  D7AD               	goto	l348
 14438  004A24  0A01               	xorlw	1	; case 9
 14439  004A26  B4D8               	btfsc	status,2,c
 14440  004A28  D7A7               	goto	l347
 14441  004A2A  0A03               	xorlw	3	; case 10
 14442  004A2C  B4D8               	btfsc	status,2,c
 14443  004A2E  D7B7               	goto	l352
 14444  004A30  0A01               	xorlw	1	; case 11
 14445  004A32  B4D8               	btfsc	status,2,c
 14446  004A34  D7C3               	goto	l353
 14447  004A36  0A07               	xorlw	7	; case 12
 14448  004A38  0012               	return	
 14449  004A3A                     __end_of_USBCheckStdRequest:
 14450                           	opt stack 0
 14451                           tblptru	equ	0xFF8
 14452                           tblptrh	equ	0xFF7
 14453                           tblptrl	equ	0xFF6
 14454                           tablat	equ	0xFF5
 14455                           prodh	equ	0xFF4
 14456                           prodl	equ	0xFF3
 14457                           intcon	equ	0xFF2
 14458                           intcon2	equ	0xFF1
 14459                           intcon3	equ	0xFF0
 14460                           postinc0	equ	0xFEE
 14461                           wreg	equ	0xFE8
 14462                           indf1	equ	0xFE7
 14463                           postdec1	equ	0xFE5
 14464                           plusw1	equ	0xFE3
 14465                           fsr1h	equ	0xFE2
 14466                           fsr1l	equ	0xFE1
 14467                           indf2	equ	0xFDF
 14468                           postinc2	equ	0xFDE
 14469                           postdec2	equ	0xFDD
 14470                           plusw2	equ	0xFDB
 14471                           fsr2h	equ	0xFDA
 14472                           fsr2l	equ	0xFD9
 14473                           status	equ	0xFD8
 14474                           
 14475 ;; *************** function _USBStdSetCfgHandler *****************
 14476 ;; Defined at:
 14477 ;;		line 1970 in file "usb_device.c"
 14478 ;; Parameters:    Size  Location     Type
 14479 ;;		None
 14480 ;; Auto vars:     Size  Location     Type
 14481 ;;  i               1   23[COMRAM] unsigned char 
 14482 ;; Return value:  Size  Location     Type
 14483 ;;                  1    wreg      void 
 14484 ;; Registers used:
 14485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14486 ;; Tracked objects:
 14487 ;;		On entry : 0/0
 14488 ;;		On exit  : 0/0
 14489 ;;		Unchanged: 0/0
 14490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14492 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14494 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14495 ;;Total ram usage:        1 bytes
 14496 ;; Hardware stack levels used:    1
 14497 ;; Hardware stack levels required when called:    4
 14498 ;; This function calls:
 14499 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14500 ;;		_memset
 14501 ;; This function is called by:
 14502 ;;		_USBCheckStdRequest
 14503 ;; This function uses a non-reentrant model
 14504 ;;
 14505                           
 14506                           	psect	text68
 14507  004A3A                     __ptext68:
 14508                           	opt stack 0
 14509  004A3A                     _USBStdSetCfgHandler:
 14510                           	opt stack 22
 14511                           
 14512                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 14513                           
 14514                           ;incstack = 0
 14515  004A3A  0100               	movlb	0	; () banked
 14516  004A3C  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 14517                           
 14518                           ; BSR set to: 0
 14519                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 14520  004A3E  0E27               	movlw	39
 14521  004A40  6E01               	movwf	memset@p1,c
 14522  004A42  0E0F               	movlw	15
 14523  004A44  6E02               	movwf	memset@p1+1,c
 14524  004A46  0E00               	movlw	0
 14525  004A48  6E04               	movwf	memset@c+1,c
 14526  004A4A  0E00               	movlw	0
 14527  004A4C  6E03               	movwf	memset@c,c
 14528  004A4E  0E00               	movlw	0
 14529  004A50  6E06               	movwf	memset@n+1,c
 14530  004A52  0E02               	movlw	2
 14531  004A54  6E05               	movwf	memset@n,c
 14532  004A56  EC1E  F03E         	call	_memset	;wreg free
 14533                           
 14534                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 14535  004A5A  0E00               	movlw	0
 14536  004A5C  6E01               	movwf	memset@p1,c
 14537  004A5E  0E0D               	movlw	13
 14538  004A60  6E02               	movwf	memset@p1+1,c
 14539  004A62  0E00               	movlw	0
 14540  004A64  6E04               	movwf	memset@c+1,c
 14541  004A66  0E00               	movlw	0
 14542  004A68  6E03               	movwf	memset@c,c
 14543  004A6A  0E00               	movlw	0
 14544  004A6C  6E06               	movwf	memset@n+1,c
 14545  004A6E  0E30               	movlw	48
 14546  004A70  6E05               	movwf	memset@n,c
 14547  004A72  EC1E  F03E         	call	_memset	;wreg free
 14548                           
 14549                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 14550  004A76  8C65               	bsf	3941,6,c	;volatile
 14551                           
 14552                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 14553  004A78  0E00               	movlw	0
 14554  004A7A  6E18               	movwf	USBStdSetCfgHandler@i,c
 14555  004A7C                     l11493:
 14556  004A7C  0E02               	movlw	2
 14557  004A7E  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 14558  004A80  D001               	goto	l260
 14559  004A82  D016               	goto	u8490
 14560  004A84                     l260:
 14561                           
 14562                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 14563  004A84  5018               	movf	USBStdSetCfgHandler@i,w,c
 14564  004A86  0D01               	mullw	1
 14565  004A88  0E61               	movlw	low _ep_data_in
 14566  004A8A  24F3               	addwf	prodl,w,c
 14567  004A8C  6ED9               	movwf	fsr2l,c
 14568  004A8E  0E01               	movlw	high _ep_data_in
 14569  004A90  20F4               	addwfc	prodh,w,c
 14570  004A92  6EDA               	movwf	fsr2h,c
 14571  004A94  0E00               	movlw	0
 14572  004A96  6EDF               	movwf	indf2,c
 14573                           
 14574                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 14575  004A98  5018               	movf	USBStdSetCfgHandler@i,w,c
 14576  004A9A  0D01               	mullw	1
 14577  004A9C  0E5E               	movlw	low _ep_data_out
 14578  004A9E  24F3               	addwf	prodl,w,c
 14579  004AA0  6ED9               	movwf	fsr2l,c
 14580  004AA2  0E01               	movlw	high _ep_data_out
 14581  004AA4  20F4               	addwfc	prodh,w,c
 14582  004AA6  6EDA               	movwf	fsr2h,c
 14583  004AA8  0E00               	movlw	0
 14584  004AAA  6EDF               	movwf	indf2,c
 14585  004AAC  2A18               	incf	USBStdSetCfgHandler@i,f,c
 14586  004AAE  D7E6               	goto	l11493
 14587  004AB0                     u8490:
 14588                           
 14589                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 14590  004AB0  0EE2               	movlw	low _USBAlternateInterface
 14591  004AB2  6E01               	movwf	memset@p1,c
 14592  004AB4  0E01               	movlw	high _USBAlternateInterface
 14593  004AB6  6E02               	movwf	memset@p1+1,c
 14594  004AB8  0E00               	movlw	0
 14595  004ABA  6E04               	movwf	memset@c+1,c
 14596  004ABC  0E00               	movlw	0
 14597  004ABE  6E03               	movwf	memset@c,c
 14598  004AC0  0E00               	movlw	0
 14599  004AC2  6E06               	movwf	memset@n+1,c
 14600  004AC4  0E02               	movlw	2
 14601  004AC6  6E05               	movwf	memset@n,c
 14602  004AC8  EC1E  F03E         	call	_memset	;wreg free
 14603                           
 14604                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 14605  004ACC  9C65               	bcf	3941,6,c	;volatile
 14606                           
 14607                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 14608  004ACE  0E08               	movlw	8
 14609  004AD0  0100               	movlb	0	; () banked
 14610  004AD2  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 14611  004AD4  0E0D               	movlw	13
 14612  004AD6  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 14613                           
 14614                           ; BSR set to: 0
 14615                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 14616  004AD8  0E00               	movlw	0
 14617  004ADA  6F92               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 14618  004ADC  0E0D               	movlw	13
 14619  004ADE  6F93               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 14620                           
 14621                           ; BSR set to: 0
 14622                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 14623  004AE0  C092  F090         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 14624  004AE4  C093  F091         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 14625                           
 14626                           ; BSR set to: 0
 14627                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 14628  004AE8  CD32 F0B4          	movff	3378,_USBActiveConfiguration	;volatile
 14629                           
 14630                           ; BSR set to: 0
 14631                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 14632  004AEC  51B4               	movf	_USBActiveConfiguration& (0+255),w,b
 14633  004AEE  A4D8               	btfss	status,2,c
 14634  004AF0  D003               	goto	l262
 14635                           
 14636                           ; BSR set to: 0
 14637                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 14638  004AF2  0E10               	movlw	16
 14639  004AF4  6FB0               	movwf	_USBDeviceState& (0+255),b
 14640                           
 14641                           ;usb_device.c: 2015: }
 14642  004AF6  0012               	return	
 14643  004AF8                     l262:
 14644                           
 14645                           ; BSR set to: 0
 14646                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 14647                           
 14648                           ; BSR set to: 0
 14649  004AF8  0E00               	movlw	0
 14650  004AFA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14651  004AFC  0E01               	movlw	1
 14652  004AFE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14653  004B00  0EB4               	movlw	low _USBActiveConfiguration
 14654  004B02  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 14655  004B04  0E00               	movlw	high _USBActiveConfiguration
 14656  004B06  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 14657  004B08  0E00               	movlw	0
 14658  004B0A  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14659  004B0C  0E01               	movlw	1
 14660  004B0E  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14661  004B10  EC29  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14662                           
 14663                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 14664  004B14  0E20               	movlw	32
 14665  004B16  0100               	movlb	0	; () banked
 14666  004B18  6FB0               	movwf	_USBDeviceState& (0+255),b
 14667  004B1A  0012               	return	
 14668  004B1C                     __end_of_USBStdSetCfgHandler:
 14669                           	opt stack 0
 14670                           tblptru	equ	0xFF8
 14671                           tblptrh	equ	0xFF7
 14672                           tblptrl	equ	0xFF6
 14673                           tablat	equ	0xFF5
 14674                           prodh	equ	0xFF4
 14675                           prodl	equ	0xFF3
 14676                           intcon	equ	0xFF2
 14677                           intcon2	equ	0xFF1
 14678                           intcon3	equ	0xFF0
 14679                           postinc0	equ	0xFEE
 14680                           wreg	equ	0xFE8
 14681                           indf1	equ	0xFE7
 14682                           postdec1	equ	0xFE5
 14683                           plusw1	equ	0xFE3
 14684                           fsr1h	equ	0xFE2
 14685                           fsr1l	equ	0xFE1
 14686                           indf2	equ	0xFDF
 14687                           postinc2	equ	0xFDE
 14688                           postdec2	equ	0xFDD
 14689                           plusw2	equ	0xFDB
 14690                           fsr2h	equ	0xFDA
 14691                           fsr2l	equ	0xFD9
 14692                           status	equ	0xFD8
 14693                           
 14694 ;; *************** function _memset *****************
 14695 ;; Defined at:
 14696 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 14697 ;; Parameters:    Size  Location     Type
 14698 ;;  p1              2    0[COMRAM] PTR void 
 14699 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 14700 ;;  c               2    2[COMRAM] int 
 14701 ;;  n               2    4[COMRAM] unsigned int 
 14702 ;; Auto vars:     Size  Location     Type
 14703 ;;  p               2    6[COMRAM] PTR unsigned char 
 14704 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 14705 ;; Return value:  Size  Location     Type
 14706 ;;                  2    0[COMRAM] PTR void 
 14707 ;; Registers used:
 14708 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14709 ;; Tracked objects:
 14710 ;;		On entry : 0/0
 14711 ;;		On exit  : 0/0
 14712 ;;		Unchanged: 0/0
 14713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14714 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14715 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14717 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14718 ;;Total ram usage:        8 bytes
 14719 ;; Hardware stack levels used:    1
 14720 ;; This function calls:
 14721 ;;		Nothing
 14722 ;; This function is called by:
 14723 ;;		_USBDeviceInit
 14724 ;;		_USBStdSetCfgHandler
 14725 ;; This function uses a non-reentrant model
 14726 ;;
 14727                           
 14728                           	psect	text69
 14729  007C3C                     __ptext69:
 14730                           	opt stack 0
 14731  007C3C                     _memset:
 14732                           	opt stack 28
 14733                           
 14734                           ; BSR set to: 0
 14735                           ;incstack = 0
 14736  007C3C  C001  F007         	movff	memset@p1,memset@p
 14737  007C40  C002  F008         	movff	memset@p1+1,memset@p+1
 14738  007C44  D008               	goto	l3511
 14739  007C46                     l10579:
 14740  007C46  C007  FFD9         	movff	memset@p,fsr2l
 14741  007C4A  C008  FFDA         	movff	memset@p+1,fsr2h
 14742  007C4E  C003  FFDF         	movff	memset@c,indf2
 14743  007C52  4A07               	infsnz	memset@p,f,c
 14744  007C54  2A08               	incf	memset@p+1,f,c
 14745  007C56                     l3511:
 14746  007C56  0605               	decf	memset@n,f,c
 14747  007C58  A0D8               	btfss	status,0,c
 14748  007C5A  0606               	decf	memset@n+1,f,c
 14749  007C5C  2805               	incf	memset@n,w,c
 14750  007C5E  E1F3               	bnz	l10579
 14751  007C60  2806               	incf	memset@n+1,w,c
 14752  007C62  B4D8               	btfsc	status,2,c
 14753  007C64  0012               	return	
 14754  007C66  D7EF               	goto	l3512
 14755  007C68                     __end_of_memset:
 14756                           	opt stack 0
 14757                           tblptru	equ	0xFF8
 14758                           tblptrh	equ	0xFF7
 14759                           tblptrl	equ	0xFF6
 14760                           tablat	equ	0xFF5
 14761                           prodh	equ	0xFF4
 14762                           prodl	equ	0xFF3
 14763                           intcon	equ	0xFF2
 14764                           intcon2	equ	0xFF1
 14765                           intcon3	equ	0xFF0
 14766                           postinc0	equ	0xFEE
 14767                           wreg	equ	0xFE8
 14768                           indf1	equ	0xFE7
 14769                           postdec1	equ	0xFE5
 14770                           plusw1	equ	0xFE3
 14771                           fsr1h	equ	0xFE2
 14772                           fsr1l	equ	0xFE1
 14773                           indf2	equ	0xFDF
 14774                           postinc2	equ	0xFDE
 14775                           postdec2	equ	0xFDD
 14776                           plusw2	equ	0xFDB
 14777                           fsr2h	equ	0xFDA
 14778                           fsr2l	equ	0xFD9
 14779                           status	equ	0xFD8
 14780                           
 14781 ;; *************** function _USBStdGetStatusHandler *****************
 14782 ;; Defined at:
 14783 ;;		line 2131 in file "usb_device.c"
 14784 ;; Parameters:    Size  Location     Type
 14785 ;;		None
 14786 ;; Auto vars:     Size  Location     Type
 14787 ;;  p               2    1[COMRAM] PTR struct __BDT
 14788 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 14789 ;; Return value:  Size  Location     Type
 14790 ;;                  1    wreg      void 
 14791 ;; Registers used:
 14792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14793 ;; Tracked objects:
 14794 ;;		On entry : 0/0
 14795 ;;		On exit  : 0/0
 14796 ;;		Unchanged: 0/0
 14797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14799 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14800 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14801 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14802 ;;Total ram usage:        3 bytes
 14803 ;; Hardware stack levels used:    1
 14804 ;; This function calls:
 14805 ;;		Nothing
 14806 ;; This function is called by:
 14807 ;;		_USBCheckStdRequest
 14808 ;; This function uses a non-reentrant model
 14809 ;;
 14810                           
 14811                           	psect	text70
 14812  005A12                     __ptext70:
 14813                           	opt stack 0
 14814  005A12                     _USBStdGetStatusHandler:
 14815                           	opt stack 26
 14816                           
 14817                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 14818                           
 14819                           ;incstack = 0
 14820  005A12  0E00               	movlw	0
 14821  005A14  010D               	movlb	13	; () banked
 14822  005A16  6F38               	movwf	56,b	;volatile
 14823                           
 14824                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 14825  005A18  0E00               	movlw	0
 14826  005A1A  6F39               	movwf	57,b	;volatile
 14827                           
 14828                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 14829  005A1C  D039               	goto	l281
 14830  005A1E                     l282:
 14831                           
 14832                           ; BSR set to: 13
 14833                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 14834  005A1E  0100               	movlb	0	; () banked
 14835  005A20  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 14836                           
 14837                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 14838                           
 14839                           ; BSR set to: 13
 14840                           
 14841                           ; BSR set to: 0
 14842                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 14843                           
 14844                           ;usb_device.c: 2144: if(0 == 1)
 14845  005A22  0100               	movlb	0	; () banked
 14846  005A24  05AD               	decf	_RemoteWakeup& (0+255),w,b
 14847  005A26  A4D8               	btfss	status,2,c
 14848  005A28  D03E               	goto	l285
 14849                           
 14850                           ; BSR set to: 0
 14851                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 14852  005A2A  010D               	movlb	13	; () banked
 14853  005A2C  8338               	bsf	56,1,b	;volatile
 14854                           
 14855                           ; BSR set to: 13
 14856                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 14857  005A2E  D03B               	goto	l285
 14858  005A30                     l286:
 14859                           
 14860                           ; BSR set to: 13
 14861                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 14862  005A30  0100               	movlb	0	; () banked
 14863  005A32  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 14864                           
 14865                           ;usb_device.c: 2156: break;
 14866  005A34  D038               	goto	l285
 14867  005A36                     l287:
 14868                           
 14869                           ; BSR set to: 13
 14870                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 14871  005A36  0100               	movlb	0	; () banked
 14872  005A38  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 14873                           
 14874                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 14875  005A3A  010D               	movlb	13	; () banked
 14876  005A3C  BF34               	btfsc	52,7,b	;volatile
 14877  005A3E  D00A               	goto	l288
 14878                           
 14879                           ; BSR set to: 13
 14880                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 14881  005A40  5134               	movf	52,w,b	;volatile
 14882  005A42  0B0F               	andlw	15
 14883  005A44  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 14884  005A46  5001               	movf	??_USBStdGetStatusHandler,w,c
 14885  005A48  0D02               	mullw	2
 14886  005A4A  0E72               	movlw	low _pBDTEntryOut
 14887  005A4C  24F3               	addwf	prodl,w,c
 14888  005A4E  6ED9               	movwf	fsr2l,c
 14889  005A50  0E00               	movlw	high _pBDTEntryOut
 14890  005A52  D009               	goto	L6
 14891  005A54                     l288:
 14892                           
 14893                           ; BSR set to: 13
 14894                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 14895                           
 14896                           ; BSR set to: 13
 14897  005A54  5134               	movf	52,w,b	;volatile
 14898  005A56  0B0F               	andlw	15
 14899  005A58  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 14900  005A5A  5001               	movf	??_USBStdGetStatusHandler,w,c
 14901  005A5C  0D02               	mullw	2
 14902  005A5E  0E6C               	movlw	low _pBDTEntryIn
 14903  005A60  24F3               	addwf	prodl,w,c
 14904  005A62  6ED9               	movwf	fsr2l,c
 14905  005A64  0E00               	movlw	high _pBDTEntryIn
 14906  005A66                     L6:
 14907  005A66  20F4               	addwfc	prodh,w,c
 14908  005A68  6EDA               	movwf	fsr2h,c
 14909  005A6A  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 14910  005A6E  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 14911                           
 14912                           ; BSR set to: 13
 14913                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 14914                           
 14915                           ; BSR set to: 13
 14916  005A72  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 14917  005A76  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 14918  005A7A  AEDF               	btfss	indf2,7,c
 14919  005A7C  D014               	goto	l285
 14920                           
 14921                           ; BSR set to: 13
 14922  005A7E  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 14923  005A82  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 14924  005A86  A4DF               	btfss	indf2,2,c
 14925  005A88  D00E               	goto	l285
 14926                           
 14927                           ; BSR set to: 13
 14928                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 14929  005A8A  0E01               	movlw	1
 14930  005A8C  6F38               	movwf	56,b	;volatile
 14931                           
 14932                           ; BSR set to: 13
 14933                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 14934                           
 14935                           ; BSR set to: 13
 14936                           ;usb_device.c: 2176: break;
 14937  005A8E  D00B               	goto	l285
 14938  005A90                     l281:
 14939                           
 14940                           ; BSR set to: 13
 14941                           
 14942                           ; BSR set to: 13
 14943  005A90  5130               	movf	48,w,b	;volatile
 14944  005A92  0B1F               	andlw	31
 14945                           
 14946                           ; Switch size 1, requested type "space"
 14947                           ; Number of cases is 3, Range of values is 0 to 2
 14948                           ; switch strategies available:
 14949                           ; Name         Instructions Cycles
 14950                           ; simple_byte           10     6 (average)
 14951                           ;	Chosen strategy is simple_byte
 14952  005A94  0A00               	xorlw	0	; case 0
 14953  005A96  B4D8               	btfsc	status,2,c
 14954  005A98  D7C2               	goto	l282
 14955  005A9A  0A01               	xorlw	1	; case 1
 14956  005A9C  B4D8               	btfsc	status,2,c
 14957  005A9E  D7C8               	goto	l286
 14958  005AA0  0A03               	xorlw	3	; case 2
 14959  005AA2  B4D8               	btfsc	status,2,c
 14960  005AA4  D7C8               	goto	l287
 14961  005AA6                     l285:
 14962                           
 14963                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 14964  005AA6  0100               	movlb	0	; () banked
 14965  005AA8  AF69               	btfss	(_inPipes+3)& (0+255),7,b
 14966  005AAA  0012               	return	
 14967                           
 14968                           ; BSR set to: 0
 14969                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 14970  005AAC  0E38               	movlw	56
 14971  005AAE  6F66               	movwf	_inPipes& (0+255),b
 14972  005AB0  0E0D               	movlw	13
 14973  005AB2  6F67               	movwf	(_inPipes+1)& (0+255),b
 14974                           
 14975                           ; BSR set to: 0
 14976                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 14977  005AB4  8169               	bsf	(_inPipes+3)& (0+255),0,b
 14978                           
 14979                           ; BSR set to: 0
 14980                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 14981  005AB6  0E02               	movlw	2
 14982  005AB8  6F6A               	movwf	(_inPipes+4)& (0+255),b
 14983  005ABA  0012               	return	
 14984  005ABC                     __end_of_USBStdGetStatusHandler:
 14985                           	opt stack 0
 14986                           tblptru	equ	0xFF8
 14987                           tblptrh	equ	0xFF7
 14988                           tblptrl	equ	0xFF6
 14989                           tablat	equ	0xFF5
 14990                           prodh	equ	0xFF4
 14991                           prodl	equ	0xFF3
 14992                           intcon	equ	0xFF2
 14993                           intcon2	equ	0xFF1
 14994                           intcon3	equ	0xFF0
 14995                           postinc0	equ	0xFEE
 14996                           wreg	equ	0xFE8
 14997                           indf1	equ	0xFE7
 14998                           postdec1	equ	0xFE5
 14999                           plusw1	equ	0xFE3
 15000                           fsr1h	equ	0xFE2
 15001                           fsr1l	equ	0xFE1
 15002                           indf2	equ	0xFDF
 15003                           postinc2	equ	0xFDE
 15004                           postdec2	equ	0xFDD
 15005                           plusw2	equ	0xFDB
 15006                           fsr2h	equ	0xFDA
 15007                           fsr2l	equ	0xFD9
 15008                           status	equ	0xFD8
 15009                           
 15010 ;; *************** function _USBStdGetDscHandler *****************
 15011 ;; Defined at:
 15012 ;;		line 2045 in file "usb_device.c"
 15013 ;; Parameters:    Size  Location     Type
 15014 ;;		None
 15015 ;; Auto vars:     Size  Location     Type
 15016 ;;		None
 15017 ;; Return value:  Size  Location     Type
 15018 ;;                  1    wreg      void 
 15019 ;; Registers used:
 15020 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 15021 ;; Tracked objects:
 15022 ;;		On entry : 0/0
 15023 ;;		On exit  : 0/0
 15024 ;;		Unchanged: 0/0
 15025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15028 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15029 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15030 ;;Total ram usage:        2 bytes
 15031 ;; Hardware stack levels used:    1
 15032 ;; This function calls:
 15033 ;;		Nothing
 15034 ;; This function is called by:
 15035 ;;		_USBCheckStdRequest
 15036 ;; This function uses a non-reentrant model
 15037 ;;
 15038                           
 15039                           	psect	text71
 15040  003C8C                     __ptext71:
 15041                           	opt stack 0
 15042  003C8C                     _USBStdGetDscHandler:
 15043                           	opt stack 26
 15044                           
 15045                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 15046                           
 15047                           ; BSR set to: 0
 15048                           ;incstack = 0
 15049  003C8C  0E80               	movlw	128
 15050  003C8E  010D               	movlb	13	; () banked
 15051  003C90  1930               	xorwf	48,w,b	;volatile
 15052  003C92  A4D8               	btfss	status,2,c
 15053  003C94  0012               	return	
 15054                           
 15055                           ; BSR set to: 13
 15056                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 15057  003C96  0EC0               	movlw	192
 15058  003C98  0100               	movlb	0	; () banked
 15059  003C9A  6F69               	movwf	(_inPipes+3)& (0+255),b
 15060                           
 15061                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 15062  003C9C  D088               	goto	l268
 15063  003C9E                     
 15064                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 15065                           
 15066                           ; BSR set to: 0
 15067  003C9E  0EA5               	movlw	low _device_dsc
 15068  003CA0  0100               	movlb	0	; () banked
 15069  003CA2  6F66               	movwf	_inPipes& (0+255),b
 15070  003CA4  0E8F               	movlw	high _device_dsc
 15071  003CA6  6F67               	movwf	(_inPipes+1)& (0+255),b
 15072                           
 15073                           ; BSR set to: 0
 15074                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 15075  003CA8  0E00               	movlw	0
 15076  003CAA  6F6B               	movwf	(_inPipes+5)& (0+255),b
 15077  003CAC  0E12               	movlw	18
 15078  003CAE  6F6A               	movwf	(_inPipes+4)& (0+255),b
 15079                           
 15080                           ;usb_device.c: 2060: break;
 15081  003CB0  0012               	return	
 15082  003CB2                     
 15083                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 15084                           
 15085                           ; BSR set to: 0
 15086  003CB2  010D               	movlb	13	; () banked
 15087  003CB4  5132               	movf	50,w,b	;volatile
 15088  003CB6  A4D8               	btfss	status,2,c
 15089  003CB8  D043               	goto	l272
 15090                           
 15091                           ; BSR set to: 13
 15092                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 15093  003CBA  5132               	movf	50,w,b	;volatile
 15094  003CBC  0D02               	mullw	2
 15095  003CBE  0EA5               	movlw	low _USB_CD_Ptr
 15096  003CC0  24F3               	addwf	prodl,w,c
 15097  003CC2  6EF6               	movwf	tblptrl,c
 15098  003CC4  0E8E               	movlw	high _USB_CD_Ptr
 15099  003CC6  20F4               	addwfc	prodh,w,c
 15100  003CC8  6EF7               	movwf	tblptrh,c
 15101  003CCA                     	if	1	;There are 3 active tblptr bytes
 15102  003CCA  6AF8               	clrf	tblptru,c
 15103  003CCC  0E00               	movlw	low (__mediumconst shr (0+16))
 15104  003CCE  22F8               	addwfc	tblptru,f,c
 15105  003CD0                     	endif
 15106  003CD0  0009               	tblrd		*+
 15107  003CD2  CFF5 F066          	movff	tablat,_inPipes
 15108  003CD6  000A               	tblrd		*-
 15109  003CD8  CFF5 F067          	movff	tablat,_inPipes+1
 15110                           
 15111                           ; BSR set to: 13
 15112                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 15113  003CDC  0E02               	movlw	2
 15114  003CDE  0100               	movlb	0	; () banked
 15115  003CE0  2566               	addwf	_inPipes& (0+255),w,b
 15116  003CE2  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 15117  003CE4  0E00               	movlw	0
 15118  003CE6  2167               	addwfc	(_inPipes+1)& (0+255),w,b
 15119  003CE8  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 15120  003CEA  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 15121  003CEE  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 15122  003CF2  6AF8               	clrf	tblptru,c
 15123  003CF4  0E0E               	movlw	(high __ramtop+-1)
 15124  003CF6  64F7               	cpfsgt	tblptrh,c
 15125  003CF8  D003               	bra	u8537
 15126  003CFA  0008               	tblrd		*
 15127  003CFC  50F5               	movf	tablat,w,c
 15128  003CFE  D005               	bra	u8530
 15129  003D00                     u8537:
 15130  003D00  CFF6 FFE9          	movff	tblptrl,fsr0l
 15131  003D04  CFF7 FFEA          	movff	tblptrh,fsr0h
 15132  003D08  50EF               	movf	indf0,w,c
 15133  003D0A                     u8530:
 15134  003D0A  0100               	movlb	0	; () banked
 15135  003D0C  6F6A               	movwf	(_inPipes+4)& (0+255),b
 15136                           
 15137                           ; BSR set to: 0
 15138                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 15139  003D0E  0E03               	movlw	3
 15140  003D10  2566               	addwf	_inPipes& (0+255),w,b
 15141  003D12  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 15142  003D14  0E00               	movlw	0
 15143  003D16  2167               	addwfc	(_inPipes+1)& (0+255),w,b
 15144  003D18  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 15145  003D1A  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 15146  003D1E  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 15147  003D22  6AF8               	clrf	tblptru,c
 15148  003D24  0E0E               	movlw	(high __ramtop+-1)
 15149  003D26  64F7               	cpfsgt	tblptrh,c
 15150  003D28  D003               	bra	u8547
 15151  003D2A  0008               	tblrd		*
 15152  003D2C  50F5               	movf	tablat,w,c
 15153  003D2E  D005               	bra	u8540
 15154  003D30                     u8547:
 15155  003D30  CFF6 FFE9          	movff	tblptrl,fsr0l
 15156  003D34  CFF7 FFEA          	movff	tblptrh,fsr0h
 15157  003D38  50EF               	movf	indf0,w,c
 15158  003D3A                     u8540:
 15159  003D3A  0100               	movlb	0	; () banked
 15160  003D3C  6F6B               	movwf	(_inPipes+5)& (0+255),b
 15161                           
 15162                           ;usb_device.c: 2078: }
 15163  003D3E  0012               	return	
 15164  003D40                     l272:
 15165                           
 15166                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 15167                           
 15168                           ; BSR set to: 0
 15169  003D40  0E00               	movlw	0
 15170  003D42  0100               	movlb	0	; () banked
 15171  003D44  6F69               	movwf	(_inPipes+3)& (0+255),b
 15172                           
 15173                           ; BSR set to: 0
 15174                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 15175  003D46  0012               	return	
 15176  003D48                     
 15177                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 15178                           
 15179                           ; BSR set to: 0
 15180  003D48  0E04               	movlw	4
 15181  003D4A  010D               	movlb	13	; () banked
 15182  003D4C  6132               	cpfslt	50,b	;volatile
 15183  003D4E  D027               	goto	l275
 15184                           
 15185                           ; BSR set to: 13
 15186                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 15187  003D50  5132               	movf	50,w,b	;volatile
 15188  003D52  0D02               	mullw	2
 15189  003D54  0E7B               	movlw	low _USB_SD_Ptr
 15190  003D56  24F3               	addwf	prodl,w,c
 15191  003D58  6EF6               	movwf	tblptrl,c
 15192  003D5A  0E8E               	movlw	high _USB_SD_Ptr
 15193  003D5C  20F4               	addwfc	prodh,w,c
 15194  003D5E  6EF7               	movwf	tblptrh,c
 15195  003D60                     	if	1	;There are 3 active tblptr bytes
 15196  003D60  6AF8               	clrf	tblptru,c
 15197  003D62  0E00               	movlw	low (__mediumconst shr (0+16))
 15198  003D64  22F8               	addwfc	tblptru,f,c
 15199  003D66                     	endif
 15200  003D66  0009               	tblrd		*+
 15201  003D68  CFF5 F066          	movff	tablat,_inPipes
 15202  003D6C  000A               	tblrd		*-
 15203  003D6E  CFF5 F067          	movff	tablat,_inPipes+1
 15204                           
 15205                           ; BSR set to: 13
 15206                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 15207  003D72  C066  FFF6         	movff	_inPipes,tblptrl
 15208  003D76  C067  FFF7         	movff	_inPipes+1,tblptrh
 15209  003D7A  6AF8               	clrf	tblptru,c
 15210  003D7C  0E0E               	movlw	(high __ramtop+-1)
 15211  003D7E  64F7               	cpfsgt	tblptrh,c
 15212  003D80  D003               	bra	u8567
 15213  003D82  0008               	tblrd		*
 15214  003D84  50F5               	movf	tablat,w,c
 15215  003D86  D005               	bra	u8560
 15216  003D88                     u8567:
 15217  003D88  CFF6 FFE9          	movff	tblptrl,fsr0l
 15218  003D8C  CFF7 FFEA          	movff	tblptrh,fsr0h
 15219  003D90  50EF               	movf	indf0,w,c
 15220  003D92                     u8560:
 15221  003D92  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 15222  003D94  5001               	movf	??_USBStdGetDscHandler,w,c
 15223  003D96  0100               	movlb	0	; () banked
 15224  003D98  6F6A               	movwf	(_inPipes+4)& (0+255),b
 15225  003D9A  6B6B               	clrf	(_inPipes+5)& (0+255),b
 15226                           
 15227                           ;usb_device.c: 2094: }
 15228  003D9C  0012               	return	
 15229  003D9E                     l275:
 15230                           
 15231                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 15232                           
 15233                           ; BSR set to: 0
 15234  003D9E  0E00               	movlw	0
 15235  003DA0  0100               	movlb	0	; () banked
 15236  003DA2  6F69               	movwf	(_inPipes+3)& (0+255),b
 15237                           
 15238                           ; BSR set to: 0
 15239                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 15240  003DA4  0012               	return	
 15241  003DA6                     
 15242                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 15243                           
 15244                           ; BSR set to: 0
 15245  003DA6  0E00               	movlw	0
 15246  003DA8  0100               	movlb	0	; () banked
 15247  003DAA  6F69               	movwf	(_inPipes+3)& (0+255),b
 15248                           
 15249                           ; BSR set to: 0
 15250                           ;usb_device.c: 2112: }
 15251                           
 15252                           ;usb_device.c: 2111: break;
 15253  003DAC  0012               	return	
 15254  003DAE                     l268:
 15255                           
 15256                           ; BSR set to: 0
 15257                           
 15258                           ; BSR set to: 0
 15259  003DAE  010D               	movlb	13	; () banked
 15260  003DB0  5133               	movf	51,w,b	;volatile
 15261                           
 15262                           ; Switch size 1, requested type "space"
 15263                           ; Number of cases is 3, Range of values is 1 to 3
 15264                           ; switch strategies available:
 15265                           ; Name         Instructions Cycles
 15266                           ; simple_byte           10     6 (average)
 15267                           ;	Chosen strategy is simple_byte
 15268  003DB2  0A01               	xorlw	1	; case 1
 15269  003DB4  B4D8               	btfsc	status,2,c
 15270  003DB6  D773               	goto	l269
 15271  003DB8  0A03               	xorlw	3	; case 2
 15272  003DBA  B4D8               	btfsc	status,2,c
 15273  003DBC  D77A               	goto	l271
 15274  003DBE  0A01               	xorlw	1	; case 3
 15275  003DC0  B4D8               	btfsc	status,2,c
 15276  003DC2  D7C2               	goto	l274
 15277  003DC4  D7F0               	goto	l277
 15278  003DC6                     __end_of_USBStdGetDscHandler:
 15279                           	opt stack 0
 15280                           tblptru	equ	0xFF8
 15281                           tblptrh	equ	0xFF7
 15282                           tblptrl	equ	0xFF6
 15283                           tablat	equ	0xFF5
 15284                           prodh	equ	0xFF4
 15285                           prodl	equ	0xFF3
 15286                           intcon	equ	0xFF2
 15287                           intcon2	equ	0xFF1
 15288                           intcon3	equ	0xFF0
 15289                           indf0	equ	0xFEF
 15290                           postinc0	equ	0xFEE
 15291                           fsr0h	equ	0xFEA
 15292                           fsr0l	equ	0xFE9
 15293                           wreg	equ	0xFE8
 15294                           indf1	equ	0xFE7
 15295                           postdec1	equ	0xFE5
 15296                           plusw1	equ	0xFE3
 15297                           fsr1h	equ	0xFE2
 15298                           fsr1l	equ	0xFE1
 15299                           indf2	equ	0xFDF
 15300                           postinc2	equ	0xFDE
 15301                           postdec2	equ	0xFDD
 15302                           plusw2	equ	0xFDB
 15303                           fsr2h	equ	0xFDA
 15304                           fsr2l	equ	0xFD9
 15305                           status	equ	0xFD8
 15306                           
 15307 ;; *************** function _USBStdFeatureReqHandler *****************
 15308 ;; Defined at:
 15309 ;;		line 2756 in file "usb_device.c"
 15310 ;; Parameters:    Size  Location     Type
 15311 ;;		None
 15312 ;; Auto vars:     Size  Location     Type
 15313 ;;  p               2   27[COMRAM] PTR struct __BDT
 15314 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 15315 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 15316 ;;		 -> UEP0(1), 
 15317 ;;  current_ep_d    1   26[COMRAM] struct .
 15318 ;; Return value:  Size  Location     Type
 15319 ;;                  1    wreg      void 
 15320 ;; Registers used:
 15321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15322 ;; Tracked objects:
 15323 ;;		On entry : 0/0
 15324 ;;		On exit  : 0/0
 15325 ;;		Unchanged: 0/0
 15326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15328 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15329 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15330 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15331 ;;Total ram usage:        6 bytes
 15332 ;; Hardware stack levels used:    1
 15333 ;; Hardware stack levels required when called:    4
 15334 ;; This function calls:
 15335 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15336 ;; This function is called by:
 15337 ;;		_USBCheckStdRequest
 15338 ;; This function uses a non-reentrant model
 15339 ;;
 15340                           
 15341                           	psect	text72
 15342  0017B4                     __ptext72:
 15343                           	opt stack 0
 15344  0017B4                     _USBStdFeatureReqHandler:
 15345                           	opt stack 22
 15346                           
 15347                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 15348                           
 15349                           ;incstack = 0
 15350  0017B4  010D               	movlb	13	; () banked
 15351  0017B6  0532               	decf	50,w,b	;volatile
 15352  0017B8  A4D8               	btfss	status,2,c
 15353  0017BA  D011               	goto	l361
 15354                           
 15355                           ; BSR set to: 13
 15356  0017BC  5130               	movf	48,w,b	;volatile
 15357  0017BE  0B1F               	andlw	31
 15358  0017C0  0900               	iorlw	0
 15359  0017C2  A4D8               	btfss	status,2,c
 15360  0017C4  D00C               	goto	l361
 15361                           
 15362                           ; BSR set to: 13
 15363                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 15364  0017C6  0100               	movlb	0	; () banked
 15365  0017C8  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 15366                           
 15367                           ; BSR set to: 0
 15368                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 15369  0017CA  0E03               	movlw	3
 15370  0017CC  010D               	movlb	13	; () banked
 15371  0017CE  1931               	xorwf	49,w,b	;volatile
 15372  0017D0  A4D8               	btfss	status,2,c
 15373  0017D2  D002               	goto	l360
 15374                           
 15375                           ; BSR set to: 13
 15376                           ;usb_device.c: 2806: RemoteWakeup = 1;
 15377  0017D4  0E01               	movlw	1
 15378  0017D6  D001               	goto	L7
 15379  0017D8                     l360:
 15380                           
 15381                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 15382                           
 15383                           ; BSR set to: 0
 15384  0017D8  0E00               	movlw	0
 15385  0017DA                     L7:
 15386  0017DA  0100               	movlb	0	; () banked
 15387  0017DC  6FAD               	movwf	_RemoteWakeup& (0+255),b
 15388  0017DE                     l361:
 15389                           
 15390                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 15391                           
 15392                           ; BSR set to: 0
 15393  0017DE  010D               	movlb	13	; () banked
 15394  0017E0  5132               	movf	50,w,b	;volatile
 15395  0017E2  A4D8               	btfss	status,2,c
 15396  0017E4  0012               	return	
 15397                           
 15398                           ; BSR set to: 13
 15399  0017E6  5130               	movf	48,w,b	;volatile
 15400  0017E8  0B1F               	andlw	31
 15401  0017EA  0A02               	xorlw	2
 15402  0017EC  A4D8               	btfss	status,2,c
 15403  0017EE  0012               	return	
 15404                           
 15405                           ; BSR set to: 13
 15406  0017F0  5134               	movf	52,w,b	;volatile
 15407  0017F2  0B0F               	andlw	15
 15408  0017F4  0900               	iorlw	0
 15409  0017F6  B4D8               	btfsc	status,2,c
 15410  0017F8  0012               	return	
 15411                           
 15412                           ; BSR set to: 13
 15413  0017FA  5134               	movf	52,w,b	;volatile
 15414  0017FC  0B0F               	andlw	15
 15415  0017FE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15416  001800  0E03               	movlw	3
 15417  001802  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 15418  001804  0012               	return	
 15419                           
 15420                           ; BSR set to: 13
 15421  001806  0E20               	movlw	32
 15422  001808  0100               	movlb	0	; () banked
 15423  00180A  19B0               	xorwf	_USBDeviceState& (0+255),w,b
 15424  00180C  A4D8               	btfss	status,2,c
 15425  00180E  0012               	return	
 15426                           
 15427                           ; BSR set to: 0
 15428                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 15429  001810  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 15430                           
 15431                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 15432  001812  010D               	movlb	13	; () banked
 15433  001814  BF34               	btfsc	52,7,b	;volatile
 15434  001816  D019               	goto	l363
 15435                           
 15436                           ; BSR set to: 13
 15437                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 15438  001818  5134               	movf	52,w,b	;volatile
 15439  00181A  0B0F               	andlw	15
 15440  00181C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15441  00181E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15442  001820  0D02               	mullw	2
 15443  001822  0E72               	movlw	low _pBDTEntryOut
 15444  001824  24F3               	addwf	prodl,w,c
 15445  001826  6ED9               	movwf	fsr2l,c
 15446  001828  0E00               	movlw	high _pBDTEntryOut
 15447  00182A  20F4               	addwfc	prodh,w,c
 15448  00182C  6EDA               	movwf	fsr2h,c
 15449  00182E  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 15450  001832  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 15451                           
 15452                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 15453  001836  5134               	movf	52,w,b	;volatile
 15454  001838  0B0F               	andlw	15
 15455  00183A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15456  00183C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15457  00183E  0D01               	mullw	1
 15458  001840  0E5E               	movlw	low _ep_data_out
 15459  001842  24F3               	addwf	prodl,w,c
 15460  001844  6ED9               	movwf	fsr2l,c
 15461  001846  0E01               	movlw	high _ep_data_out
 15462  001848  D018               	goto	L8
 15463  00184A                     l363:
 15464                           
 15465                           ; BSR set to: 13
 15466                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 15467                           
 15468                           ; BSR set to: 13
 15469  00184A  5134               	movf	52,w,b	;volatile
 15470  00184C  0B0F               	andlw	15
 15471  00184E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15472  001850  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15473  001852  0D02               	mullw	2
 15474  001854  0E6C               	movlw	low _pBDTEntryIn
 15475  001856  24F3               	addwf	prodl,w,c
 15476  001858  6ED9               	movwf	fsr2l,c
 15477  00185A  0E00               	movlw	high _pBDTEntryIn
 15478  00185C  20F4               	addwfc	prodh,w,c
 15479  00185E  6EDA               	movwf	fsr2h,c
 15480  001860  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 15481  001864  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 15482                           
 15483                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 15484  001868  5134               	movf	52,w,b	;volatile
 15485  00186A  0B0F               	andlw	15
 15486  00186C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15487  00186E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15488  001870  0D01               	mullw	1
 15489  001872  0E61               	movlw	low _ep_data_in
 15490  001874  24F3               	addwf	prodl,w,c
 15491  001876  6ED9               	movwf	fsr2l,c
 15492  001878  0E01               	movlw	high _ep_data_in
 15493  00187A                     L8:
 15494  00187A  20F4               	addwfc	prodh,w,c
 15495  00187C  6EDA               	movwf	fsr2h,c
 15496  00187E  50DF               	movf	indf2,w,c
 15497  001880  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 15498                           
 15499                           ; BSR set to: 13
 15500                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 15501                           
 15502                           ; BSR set to: 13
 15503  001882  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 15504  001884  D006               	goto	l365
 15505                           
 15506                           ; BSR set to: 13
 15507                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 15508  001886  0EFB               	movlw	251
 15509  001888  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 15510  00188A  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 15511  00188C  0EFF               	movlw	255
 15512  00188E  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 15513  001890  D004               	goto	L9
 15514  001892                     l365:
 15515                           
 15516                           ; BSR set to: 13
 15517                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 15518                           
 15519                           ; BSR set to: 13
 15520  001892  0E04               	movlw	4
 15521  001894  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 15522  001896  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 15523  001898  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 15524  00189A                     L9:
 15525  00189A  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 15526                           
 15527                           ; BSR set to: 13
 15528                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 15529                           
 15530                           ; BSR set to: 13
 15531  00189C  BF34               	btfsc	52,7,b	;volatile
 15532  00189E  D00A               	goto	l367
 15533                           
 15534                           ; BSR set to: 13
 15535                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 15536  0018A0  5134               	movf	52,w,b	;volatile
 15537  0018A2  0B0F               	andlw	15
 15538  0018A4  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15539  0018A6  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15540  0018A8  0D02               	mullw	2
 15541  0018AA  0E72               	movlw	low _pBDTEntryOut
 15542  0018AC  24F3               	addwf	prodl,w,c
 15543  0018AE  6ED9               	movwf	fsr2l,c
 15544  0018B0  0E00               	movlw	high _pBDTEntryOut
 15545  0018B2  D009               	goto	L10
 15546  0018B4                     l367:
 15547                           
 15548                           ; BSR set to: 13
 15549                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 15550                           
 15551                           ; BSR set to: 13
 15552  0018B4  5134               	movf	52,w,b	;volatile
 15553  0018B6  0B0F               	andlw	15
 15554  0018B8  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15555  0018BA  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15556  0018BC  0D02               	mullw	2
 15557  0018BE  0E6C               	movlw	low _pBDTEntryIn
 15558  0018C0  24F3               	addwf	prodl,w,c
 15559  0018C2  6ED9               	movwf	fsr2l,c
 15560  0018C4  0E00               	movlw	high _pBDTEntryIn
 15561  0018C6                     L10:
 15562  0018C6  20F4               	addwfc	prodh,w,c
 15563  0018C8  6EDA               	movwf	fsr2h,c
 15564  0018CA  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 15565  0018CE  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 15566                           
 15567                           ; BSR set to: 13
 15568                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 15569                           
 15570                           ; BSR set to: 13
 15571  0018D2  0E03               	movlw	3
 15572  0018D4  1931               	xorwf	49,w,b	;volatile
 15573  0018D6  A4D8               	btfss	status,2,c
 15574  0018D8  D02D               	goto	l369
 15575                           
 15576                           ; BSR set to: 13
 15577                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 15578  0018DA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15579  0018DE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15580  0018E2  AEDF               	btfss	indf2,7,c
 15581  0018E4  D01A               	goto	l372
 15582                           
 15583                           ; BSR set to: 13
 15584                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 15585  0018E6  BF34               	btfsc	52,7,b	;volatile
 15586  0018E8  D00A               	goto	l371
 15587                           
 15588                           ; BSR set to: 13
 15589                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 15590  0018EA  5134               	movf	52,w,b	;volatile
 15591  0018EC  0B0F               	andlw	15
 15592  0018EE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15593  0018F0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15594  0018F2  0D01               	mullw	1
 15595  0018F4  0E5E               	movlw	low _ep_data_out
 15596  0018F6  24F3               	addwf	prodl,w,c
 15597  0018F8  6ED9               	movwf	fsr2l,c
 15598  0018FA  0E01               	movlw	high _ep_data_out
 15599  0018FC  D00A               	goto	L11
 15600  0018FE                     l371:
 15601                           
 15602                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 15603                           
 15604                           ; BSR set to: 1
 15605  0018FE  010D               	movlb	13	; () banked
 15606  001900  5134               	movf	52,w,b	;volatile
 15607  001902  0B0F               	andlw	15
 15608  001904  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15609  001906  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15610  001908  0D01               	mullw	1
 15611  00190A  0E61               	movlw	low _ep_data_in
 15612  00190C  24F3               	addwf	prodl,w,c
 15613  00190E  6ED9               	movwf	fsr2l,c
 15614  001910  0E01               	movlw	high _ep_data_in
 15615  001912                     L11:
 15616  001912  20F4               	addwfc	prodh,w,c
 15617  001914  6EDA               	movwf	fsr2h,c
 15618  001916  0101               	movlb	1	; () banked
 15619  001918  82DF               	bsf	indf2,1,c
 15620  00191A                     l372:
 15621                           
 15622                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 15623                           
 15624                           ; BSR set to: 1
 15625                           
 15626                           ; BSR set to: 1
 15627  00191A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15628  00191E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15629  001922  0E00               	movlw	0
 15630  001924  84DB               	bsf	plusw2,2,c
 15631                           
 15632                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 15633  001926  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15634  00192A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15635  00192E  0E00               	movlw	0
 15636  001930  8EDB               	bsf	plusw2,7,c
 15637                           
 15638                           ;usb_device.c: 2878: }
 15639  001932  0012               	return	
 15640  001934                     l369:
 15641                           
 15642                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 15643  001934  0E04               	movlw	4
 15644  001936  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 15645  001938  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 15646  00193A  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 15647  00193C  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 15648                           
 15649                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 15650  00193E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15651  001942  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15652  001946  AEDF               	btfss	indf2,7,c
 15653  001948  D01B               	goto	l374
 15654                           
 15655                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 15656  00194A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15657  00194E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15658  001952  0E7F               	movlw	127
 15659  001954  16DF               	andwf	indf2,f,c
 15660                           
 15661                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 15662  001956  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15663  00195A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15664  00195E  0E00               	movlw	0
 15665  001960  8CDB               	bsf	plusw2,6,c
 15666                           
 15667                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 15668  001962  0E00               	movlw	0
 15669  001964  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15670  001966  0E05               	movlw	5
 15671  001968  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15672  00196A  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 15673  00196E  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 15674  001972  0E00               	movlw	0
 15675  001974  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15676  001976  0E02               	movlw	2
 15677  001978  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15678  00197A  EC29  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15679                           
 15680                           ;usb_device.c: 2893: }
 15681  00197E  D006               	goto	l375
 15682  001980                     l374:
 15683                           
 15684                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 15685  001980  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15686  001984  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15687  001988  0E00               	movlw	0
 15688  00198A  8CDB               	bsf	plusw2,6,c
 15689  00198C                     l375:
 15690                           
 15691                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 15692  00198C  0E04               	movlw	4
 15693  00198E  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 15694  001990  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 15695  001992  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 15696  001994  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 15697                           
 15698                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 15699  001996  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 15700  001998  D006               	goto	u8780
 15701  00199A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15702  00199E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15703  0019A2  AEDF               	btfss	indf2,7,c
 15704  0019A4  D030               	goto	l376
 15705  0019A6                     u8780:
 15706                           
 15707                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 15708  0019A6  010D               	movlb	13	; () banked
 15709  0019A8  BF34               	btfsc	52,7,b	;volatile
 15710  0019AA  D00A               	goto	l379
 15711                           
 15712                           ; BSR set to: 13
 15713                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 15714  0019AC  5134               	movf	52,w,b	;volatile
 15715  0019AE  0B0F               	andlw	15
 15716  0019B0  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15717  0019B2  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15718  0019B4  0D01               	mullw	1
 15719  0019B6  0E5E               	movlw	low _ep_data_out
 15720  0019B8  24F3               	addwf	prodl,w,c
 15721  0019BA  6ED9               	movwf	fsr2l,c
 15722  0019BC  0E01               	movlw	high _ep_data_out
 15723  0019BE  D00A               	goto	L12
 15724  0019C0                     l379:
 15725                           
 15726                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 15727                           
 15728                           ; BSR set to: 1
 15729  0019C0  010D               	movlb	13	; () banked
 15730  0019C2  5134               	movf	52,w,b	;volatile
 15731  0019C4  0B0F               	andlw	15
 15732  0019C6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15733  0019C8  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15734  0019CA  0D01               	mullw	1
 15735  0019CC  0E61               	movlw	low _ep_data_in
 15736  0019CE  24F3               	addwf	prodl,w,c
 15737  0019D0  6ED9               	movwf	fsr2l,c
 15738  0019D2  0E01               	movlw	high _ep_data_in
 15739  0019D4                     L12:
 15740  0019D4  20F4               	addwfc	prodh,w,c
 15741  0019D6  6EDA               	movwf	fsr2h,c
 15742  0019D8  0101               	movlb	1	; () banked
 15743  0019DA  92DF               	bcf	indf2,1,c
 15744                           
 15745                           ; BSR set to: 1
 15746                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 15747                           
 15748                           ; BSR set to: 1
 15749  0019DC  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15750  0019E0  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15751  0019E4  0E3B               	movlw	59
 15752  0019E6  16DF               	andwf	indf2,f,c
 15753                           
 15754                           ; BSR set to: 1
 15755                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 15756  0019E8  0E00               	movlw	0
 15757  0019EA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 15758  0019EC  0E05               	movlw	5
 15759  0019EE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 15760  0019F0  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 15761  0019F4  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 15762  0019F8  0E00               	movlw	0
 15763  0019FA  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 15764  0019FC  0E02               	movlw	2
 15765  0019FE  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 15766  001A00  EC29  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 15767                           
 15768                           ;usb_device.c: 2923: }
 15769  001A04  D006               	goto	l381
 15770  001A06                     l376:
 15771                           
 15772                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 15773  001A06  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 15774  001A0A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 15775  001A0E  0E3B               	movlw	59
 15776  001A10  16DF               	andwf	indf2,f,c
 15777  001A12                     l381:
 15778                           
 15779                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 15780  001A12  010D               	movlb	13	; () banked
 15781  001A14  5134               	movf	52,w,b	;volatile
 15782  001A16  0B0F               	andlw	15
 15783  001A18  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 15784  001A1A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 15785  001A1C  0D01               	mullw	1
 15786  001A1E  0E26               	movlw	38
 15787  001A20  24F3               	addwf	prodl,w,c
 15788  001A22  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 15789  001A24  0E0F               	movlw	15
 15790  001A26  20F4               	addwfc	prodh,w,c
 15791  001A28  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 15792                           
 15793                           ; BSR set to: 13
 15794                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 15795  001A2A  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 15796  001A2E  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 15797  001A32  0EFE               	movlw	254
 15798  001A34  16DF               	andwf	indf2,f,c
 15799                           
 15800                           ; BSR set to: 13
 15801  001A36  0012               	return	
 15802  001A38                     __end_of_USBStdFeatureReqHandler:
 15803                           	opt stack 0
 15804                           tblptru	equ	0xFF8
 15805                           tblptrh	equ	0xFF7
 15806                           tblptrl	equ	0xFF6
 15807                           tablat	equ	0xFF5
 15808                           prodh	equ	0xFF4
 15809                           prodl	equ	0xFF3
 15810                           intcon	equ	0xFF2
 15811                           intcon2	equ	0xFF1
 15812                           intcon3	equ	0xFF0
 15813                           indf0	equ	0xFEF
 15814                           postinc0	equ	0xFEE
 15815                           fsr0h	equ	0xFEA
 15816                           fsr0l	equ	0xFE9
 15817                           wreg	equ	0xFE8
 15818                           indf1	equ	0xFE7
 15819                           postdec1	equ	0xFE5
 15820                           plusw1	equ	0xFE3
 15821                           fsr1h	equ	0xFE2
 15822                           fsr1l	equ	0xFE1
 15823                           indf2	equ	0xFDF
 15824                           postinc2	equ	0xFDE
 15825                           postdec2	equ	0xFDD
 15826                           plusw2	equ	0xFDB
 15827                           fsr2h	equ	0xFDA
 15828                           fsr2l	equ	0xFD9
 15829                           status	equ	0xFD8
 15830                           
 15831 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 15832 ;; Defined at:
 15833 ;;		line 54 in file "usb_events.c"
 15834 ;; Parameters:    Size  Location     Type
 15835 ;;  event           2   15[COMRAM] enum E6832
 15836 ;;  pdata           2   17[COMRAM] PTR void 
 15837 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 15838 ;;		 -> BDT(48), 
 15839 ;;  size            2   19[COMRAM] unsigned int 
 15840 ;; Auto vars:     Size  Location     Type
 15841 ;;		None
 15842 ;; Return value:  Size  Location     Type
 15843 ;;                  1    wreg      unsigned char 
 15844 ;; Registers used:
 15845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15846 ;; Tracked objects:
 15847 ;;		On entry : 0/0
 15848 ;;		On exit  : 0/0
 15849 ;;		Unchanged: 0/0
 15850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15851 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15853 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15854 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15855 ;;Total ram usage:        8 bytes
 15856 ;; Hardware stack levels used:    1
 15857 ;; Hardware stack levels required when called:    3
 15858 ;; This function calls:
 15859 ;;		_APP_DeviceCustomHIDInitialize
 15860 ;;		_APP_DeviceMSDInitialize
 15861 ;;		_MSDTransferTerminated
 15862 ;;		_SYSTEM_Initialize
 15863 ;;		_USBCheckHIDRequest
 15864 ;;		_USBCheckMSDRequest
 15865 ;; This function is called by:
 15866 ;;		_USBDeviceTasks
 15867 ;;		_USBStdSetCfgHandler
 15868 ;;		_USBSuspend
 15869 ;;		_USBWakeFromSuspend
 15870 ;;		_USBCtrlTrfSetupHandler
 15871 ;;		_USBCheckStdRequest
 15872 ;;		_USBStdFeatureReqHandler
 15873 ;; This function uses a non-reentrant model
 15874 ;;
 15875                           
 15876                           	psect	text73
 15877  006452                     __ptext73:
 15878                           	opt stack 0
 15879  006452                     _USER_USB_CALLBACK_EVENT_HANDLER:
 15880                           	opt stack 26
 15881                           
 15882                           ;usb_events.c: 56: switch((int)event)
 15883                           
 15884                           ;incstack = 0
 15885  006452  D019               	goto	l800
 15886  006454                     
 15887                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 15888  006454  0E01               	movlw	1
 15889  006456  EC36  F03A         	call	_SYSTEM_Initialize
 15890                           
 15891                           ;usb_events.c: 79: break;
 15892  00645A  0012               	return	
 15893  00645C                     
 15894                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 15895  00645C  0E02               	movlw	2
 15896  00645E  EC36  F03A         	call	_SYSTEM_Initialize
 15897                           
 15898                           ;usb_events.c: 90: break;
 15899  006462  0012               	return	
 15900  006464                     
 15901                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 15902  006464  EC13  F03D         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 15903                           
 15904                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 15905  006468  ECF0  F03F         	call	_APP_DeviceMSDInitialize	;wreg free
 15906                           
 15907                           ;usb_events.c: 100: break;
 15908                           
 15909                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 15910                           
 15911                           ;usb_events.c: 97: break;
 15912  00646C  0012               	return	
 15913  00646E                     
 15914                           ;usb_events.c: 105: USBCheckHIDRequest();
 15915  00646E  EC8E  F025         	call	_USBCheckHIDRequest	;wreg free
 15916                           
 15917                           ;usb_events.c: 108: USBCheckMSDRequest();
 15918  006472  EC85  F02A         	call	_USBCheckMSDRequest	;wreg free
 15919                           
 15920                           ;usb_events.c: 112: break;
 15921                           
 15922                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 15923                           
 15924                           ;usb_events.c: 109: break;
 15925  006476  0012               	return	
 15926  006478                     
 15927                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 15928  006478  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 15929  00647C  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 15930  006480  EC5F  F039         	call	_MSDTransferTerminated	;wreg free
 15931                           
 15932                           ;usb_events.c: 129: }
 15933                           
 15934                           ;usb_events.c: 128: break;
 15935                           
 15936                           ;usb_events.c: 127: default:
 15937                           
 15938                           ;usb_events.c: 125: break;
 15939  006484  0012               	return	
 15940  006486                     l800:
 15941  006486  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 15942  00648A  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 15943                           
 15944                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 15945                           ; Switch size 1, requested type "space"
 15946                           ; Number of cases is 2, Range of values is 0 to 127
 15947                           ; switch strategies available:
 15948                           ; Name         Instructions Cycles
 15949                           ; simple_byte            7     4 (average)
 15950                           ;	Chosen strategy is simple_byte
 15951  00648E  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 15952  006490  0A00               	xorlw	0	; case 0
 15953  006492  B4D8               	btfsc	status,2,c
 15954  006494  D004               	goto	l15193
 15955  006496  0A7F               	xorlw	127	; case 127
 15956  006498  A4D8               	btfss	status,2,c
 15957  00649A  0012               	return	
 15958  00649C  D01A               	goto	l15195
 15959  00649E                     l15193:
 15960                           
 15961                           ; Switch size 1, requested type "space"
 15962                           ; Number of cases is 8, Range of values is 1 to 117
 15963                           ; switch strategies available:
 15964                           ; Name         Instructions Cycles
 15965                           ; simple_byte           25    13 (average)
 15966                           ;	Chosen strategy is simple_byte
 15967  00649E  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 15968  0064A0  0A01               	xorlw	1	; case 1
 15969  0064A2  B4D8               	btfsc	status,2,c
 15970  0064A4  D7DF               	goto	l806
 15971  0064A6  0A03               	xorlw	3	; case 2
 15972  0064A8  B4D8               	btfsc	status,2,c
 15973  0064AA  0012               	return	
 15974  0064AC  0A01               	xorlw	1	; case 3
 15975  0064AE  B4D8               	btfsc	status,2,c
 15976  0064B0  D7DE               	goto	l808
 15977  0064B2  0A06               	xorlw	6	; case 5
 15978  0064B4  B4D8               	btfsc	status,2,c
 15979  0064B6  D7E0               	goto	l810
 15980  0064B8  0A77               	xorlw	119	; case 114
 15981  0064BA  B4D8               	btfsc	status,2,c
 15982  0064BC  0012               	return	
 15983  0064BE  0A01               	xorlw	1	; case 115
 15984  0064C0  B4D8               	btfsc	status,2,c
 15985  0064C2  0012               	return	
 15986  0064C4  0A07               	xorlw	7	; case 116
 15987  0064C6  B4D8               	btfsc	status,2,c
 15988  0064C8  D7C9               	goto	l805
 15989  0064CA  0A01               	xorlw	1	; case 117
 15990  0064CC  A4D8               	btfss	status,2,c
 15991  0064CE  0012               	return	
 15992  0064D0  D7C1               	goto	l804
 15993  0064D2                     l15195:
 15994                           
 15995                           ; Switch size 1, requested type "space"
 15996                           ; Number of cases is 1, Range of values is 255 to 255
 15997                           ; switch strategies available:
 15998                           ; Name         Instructions Cycles
 15999                           ; simple_byte            4     3 (average)
 16000                           ;	Chosen strategy is simple_byte
 16001  0064D2  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 16002  0064D4  0AFF               	xorlw	255	; case 255
 16003  0064D6  0012               	return	
 16004  0064D8                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 16005                           	opt stack 0
 16006                           tblptru	equ	0xFF8
 16007                           tblptrh	equ	0xFF7
 16008                           tblptrl	equ	0xFF6
 16009                           tablat	equ	0xFF5
 16010                           prodh	equ	0xFF4
 16011                           prodl	equ	0xFF3
 16012                           intcon	equ	0xFF2
 16013                           intcon2	equ	0xFF1
 16014                           intcon3	equ	0xFF0
 16015                           indf0	equ	0xFEF
 16016                           postinc0	equ	0xFEE
 16017                           fsr0h	equ	0xFEA
 16018                           fsr0l	equ	0xFE9
 16019                           wreg	equ	0xFE8
 16020                           indf1	equ	0xFE7
 16021                           postdec1	equ	0xFE5
 16022                           plusw1	equ	0xFE3
 16023                           fsr1h	equ	0xFE2
 16024                           fsr1l	equ	0xFE1
 16025                           indf2	equ	0xFDF
 16026                           postinc2	equ	0xFDE
 16027                           postdec2	equ	0xFDD
 16028                           plusw2	equ	0xFDB
 16029                           fsr2h	equ	0xFDA
 16030                           fsr2l	equ	0xFD9
 16031                           status	equ	0xFD8
 16032                           
 16033 ;; *************** function _USBCheckMSDRequest *****************
 16034 ;; Defined at:
 16035 ;;		line 218 in file "usb_device_msd.c"
 16036 ;; Parameters:    Size  Location     Type
 16037 ;;		None
 16038 ;; Auto vars:     Size  Location     Type
 16039 ;;		None
 16040 ;; Return value:  Size  Location     Type
 16041 ;;                  1    wreg      void 
 16042 ;; Registers used:
 16043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16044 ;; Tracked objects:
 16045 ;;		On entry : 0/0
 16046 ;;		On exit  : 0/0
 16047 ;;		Unchanged: 0/0
 16048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16050 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16052 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16053 ;;Total ram usage:        4 bytes
 16054 ;; Hardware stack levels used:    1
 16055 ;; Hardware stack levels required when called:    1
 16056 ;; This function calls:
 16057 ;;		_USBTransferOnePacket
 16058 ;; This function is called by:
 16059 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16060 ;; This function uses a non-reentrant model
 16061 ;;
 16062                           
 16063                           	psect	text74
 16064  00550A                     __ptext74:
 16065                           	opt stack 0
 16066  00550A                     _USBCheckMSDRequest:
 16067                           	opt stack 27
 16068                           
 16069                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 16070                           
 16071                           ;incstack = 0
 16072  00550A  010D               	movlb	13	; () banked
 16073  00550C  5130               	movf	48,w,b	;volatile
 16074  00550E  0B1F               	andlw	31
 16075  005510  06E8               	decf	wreg,f,c
 16076  005512  A4D8               	btfss	status,2,c
 16077  005514  0012               	return	
 16078                           
 16079                           ; BSR set to: 13
 16080                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 16081                           
 16082                           ; BSR set to: 13
 16083                           
 16084                           ; BSR set to: 13
 16085                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 16086  005516  5134               	movf	52,w,b	;volatile
 16087  005518  A4D8               	btfss	status,2,c
 16088  00551A  0012               	return	
 16089  00551C  D04E               	goto	l529
 16090  00551E                     
 16091                           ; BSR set to: 13
 16092                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 16093                           
 16094                           ; BSR set to: 13
 16095  00551E  5132               	movf	50,w,b	;volatile
 16096  005520  1133               	iorwf	51,w,b	;volatile
 16097  005522  A4D8               	btfss	status,2,c
 16098  005524  0012               	return	
 16099                           
 16100                           ; BSR set to: 13
 16101  005526  5136               	movf	54,w,b	;volatile
 16102  005528  1137               	iorwf	55,w,b	;volatile
 16103  00552A  A4D8               	btfss	status,2,c
 16104  00552C  0012               	return	
 16105                           
 16106                           ; BSR set to: 13
 16107                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 16108                           
 16109                           ; BSR set to: 13
 16110                           
 16111                           ; BSR set to: 13
 16112                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 16113  00552E  0E00               	movlw	0
 16114  005530  0100               	movlb	0	; () banked
 16115  005532  6FA2               	movwf	_MSD_State& (0+255),b
 16116                           
 16117                           ; BSR set to: 0
 16118                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 16119  005534  69A1               	setf	_MSDCommandState& (0+255),b
 16120                           
 16121                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 16122  005536  0E00               	movlw	0
 16123  005538  6FA0               	movwf	_MSDReadState& (0+255),b
 16124                           
 16125                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 16126  00553A  0E00               	movlw	0
 16127  00553C  6F9F               	movwf	_MSDWriteState& (0+255),b
 16128                           
 16129                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 16130  00553E  0E01               	movlw	1
 16131  005540  6F9A               	movwf	_MSDCBWValid& (0+255),b
 16132                           
 16133                           ; BSR set to: 0
 16134                           
 16135                           ; BSR set to: 0
 16136                           
 16137                           ; BSR set to: 0
 16138                           
 16139                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 16140  005542  C076  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2319
 16141  005546  C077  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2319+1
 16142                           
 16143                           ; BSR set to: 0
 16144  00554A  500C               	movf	_USBCheckMSDRequest$2319,w,c
 16145  00554C  100D               	iorwf	_USBCheckMSDRequest$2319+1,w,c
 16146  00554E  B4D8               	btfsc	status,2,c
 16147  005550  D00A               	goto	u6910
 16148                           
 16149                           ; BSR set to: 0
 16150                           
 16151                           ; BSR set to: 0
 16152                           
 16153                           ; BSR set to: 0
 16154                           
 16155                           ; BSR set to: 0
 16156  005552  C076  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2320
 16157  005556  C077  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2320+1
 16158                           
 16159                           ; BSR set to: 0
 16160                           
 16161                           ; BSR set to: 0
 16162  00555A  C00E  FFD9         	movff	_USBCheckMSDRequest$2320,fsr2l
 16163  00555E  C00F  FFDA         	movff	_USBCheckMSDRequest$2320+1,fsr2h
 16164  005562  BEDF               	btfsc	indf2,7,c
 16165  005564  D00F               	goto	l534
 16166  005566                     u6910:
 16167                           
 16168                           ; BSR set to: 0
 16169                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 16170                           
 16171                           ; BSR set to: 0
 16172  005566  0E00               	movlw	0
 16173  005568  6E01               	movwf	USBTransferOnePacket@dir,c
 16174  00556A  0E40               	movlw	64
 16175  00556C  6E02               	movwf	USBTransferOnePacket@data,c
 16176  00556E  0E0D               	movlw	13
 16177  005570  6E03               	movwf	USBTransferOnePacket@data+1,c
 16178  005572  0E40               	movlw	64
 16179  005574  6E04               	movwf	USBTransferOnePacket@len,c
 16180  005576  0E02               	movlw	2
 16181  005578  EC2B  F023         	call	_USBTransferOnePacket
 16182  00557C  C001  F08A         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 16183  005580  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 16184  005584                     l534:
 16185                           
 16186                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 16187  005584  0E80               	movlw	128
 16188  005586  0100               	movlb	0	; () banked
 16189  005588  6F69               	movwf	(_inPipes+3)& (0+255),b
 16190                           
 16191                           ;usb_device_msd.c: 263: break;
 16192  00558A  0012               	return	
 16193  00558C                     
 16194                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 16195                           
 16196                           ; BSR set to: 0
 16197  00558C  010D               	movlb	13	; () banked
 16198  00558E  5132               	movf	50,w,b	;volatile
 16199  005590  1133               	iorwf	51,w,b	;volatile
 16200  005592  A4D8               	btfss	status,2,c
 16201  005594  0012               	return	
 16202                           
 16203                           ; BSR set to: 13
 16204  005596  0536               	decf	54,w,b	;volatile
 16205  005598  1137               	iorwf	55,w,b	;volatile
 16206  00559A  A4D8               	btfss	status,2,c
 16207  00559C  0012               	return	
 16208                           
 16209                           ; BSR set to: 13
 16210                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 16211                           
 16212                           ; BSR set to: 13
 16213                           
 16214                           ; BSR set to: 13
 16215                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 16216  00559E  0E00               	movlw	0
 16217  0055A0  6F38               	movwf	56,b	;volatile
 16218                           
 16219                           ; BSR set to: 13
 16220                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 16221  0055A2  0E38               	movlw	56
 16222  0055A4  0100               	movlb	0	; () banked
 16223  0055A6  6F66               	movwf	_inPipes& (0+255),b
 16224  0055A8  0E0D               	movlw	13
 16225  0055AA  6F67               	movwf	(_inPipes+1)& (0+255),b
 16226                           
 16227                           ; BSR set to: 0
 16228  0055AC  0E00               	movlw	0
 16229  0055AE  6F6B               	movwf	(_inPipes+5)& (0+255),b
 16230  0055B0  0E01               	movlw	1
 16231  0055B2  6F6A               	movwf	(_inPipes+4)& (0+255),b
 16232                           
 16233                           ; BSR set to: 0
 16234  0055B4  0EC1               	movlw	193
 16235  0055B6  6F69               	movwf	(_inPipes+3)& (0+255),b
 16236                           
 16237                           ; BSR set to: 0
 16238                           ;usb_device_msd.c: 278: }
 16239                           
 16240                           ;usb_device_msd.c: 277: break;
 16241  0055B8  0012               	return	
 16242  0055BA                     l529:
 16243                           
 16244                           ; BSR set to: 0
 16245  0055BA  010D               	movlb	13	; () banked
 16246  0055BC  5131               	movf	49,w,b	;volatile
 16247                           
 16248                           ; Switch size 1, requested type "space"
 16249                           ; Number of cases is 2, Range of values is 254 to 255
 16250                           ; switch strategies available:
 16251                           ; Name         Instructions Cycles
 16252                           ; simple_byte            7     4 (average)
 16253                           ;	Chosen strategy is simple_byte
 16254  0055BE  0AFE               	xorlw	254	; case 254
 16255  0055C0  B4D8               	btfsc	status,2,c
 16256  0055C2  D7E4               	goto	l546
 16257  0055C4  0A01               	xorlw	1	; case 255
 16258  0055C6  A4D8               	btfss	status,2,c
 16259  0055C8  0012               	return	
 16260  0055CA  D7A9               	goto	l530
 16261  0055CC                     __end_of_USBCheckMSDRequest:
 16262                           	opt stack 0
 16263                           tblptru	equ	0xFF8
 16264                           tblptrh	equ	0xFF7
 16265                           tblptrl	equ	0xFF6
 16266                           tablat	equ	0xFF5
 16267                           prodh	equ	0xFF4
 16268                           prodl	equ	0xFF3
 16269                           intcon	equ	0xFF2
 16270                           intcon2	equ	0xFF1
 16271                           intcon3	equ	0xFF0
 16272                           indf0	equ	0xFEF
 16273                           postinc0	equ	0xFEE
 16274                           fsr0h	equ	0xFEA
 16275                           fsr0l	equ	0xFE9
 16276                           wreg	equ	0xFE8
 16277                           indf1	equ	0xFE7
 16278                           postdec1	equ	0xFE5
 16279                           plusw1	equ	0xFE3
 16280                           fsr1h	equ	0xFE2
 16281                           fsr1l	equ	0xFE1
 16282                           indf2	equ	0xFDF
 16283                           postinc2	equ	0xFDE
 16284                           postdec2	equ	0xFDD
 16285                           plusw2	equ	0xFDB
 16286                           fsr2h	equ	0xFDA
 16287                           fsr2l	equ	0xFD9
 16288                           status	equ	0xFD8
 16289                           
 16290 ;; *************** function _USBCheckHIDRequest *****************
 16291 ;; Defined at:
 16292 ;;		line 153 in file "usb_device_hid.c"
 16293 ;; Parameters:    Size  Location     Type
 16294 ;;		None
 16295 ;; Auto vars:     Size  Location     Type
 16296 ;;		None
 16297 ;; Return value:  Size  Location     Type
 16298 ;;                  1    wreg      void 
 16299 ;; Registers used:
 16300 ;;		wreg, status,2, status,0
 16301 ;; Tracked objects:
 16302 ;;		On entry : 0/0
 16303 ;;		On exit  : 0/0
 16304 ;;		Unchanged: 0/0
 16305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16310 ;;Total ram usage:        0 bytes
 16311 ;; Hardware stack levels used:    1
 16312 ;; This function calls:
 16313 ;;		Nothing
 16314 ;; This function is called by:
 16315 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16316 ;; This function uses a non-reentrant model
 16317 ;;
 16318                           
 16319                           	psect	text75
 16320  004B1C                     __ptext75:
 16321                           	opt stack 0
 16322  004B1C                     _USBCheckHIDRequest:
 16323                           	opt stack 28
 16324                           
 16325                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 16326                           
 16327                           ;incstack = 0
 16328  004B1C  010D               	movlb	13	; () banked
 16329  004B1E  5130               	movf	48,w,b	;volatile
 16330  004B20  0B1F               	andlw	31
 16331  004B22  06E8               	decf	wreg,f,c
 16332  004B24  A4D8               	btfss	status,2,c
 16333  004B26  0012               	return	
 16334                           
 16335                           ; BSR set to: 13
 16336                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 16337                           
 16338                           ; BSR set to: 13
 16339                           
 16340                           ; BSR set to: 13
 16341  004B28  5134               	movf	52,w,b	;volatile
 16342  004B2A  A4D8               	btfss	status,2,c
 16343  004B2C  0012               	return	
 16344                           
 16345                           ; BSR set to: 13
 16346                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 16347                           
 16348                           ; BSR set to: 13
 16349                           
 16350                           ; BSR set to: 13
 16351  004B2E  0E06               	movlw	6
 16352  004B30  1931               	xorwf	49,w,b	;volatile
 16353  004B32  B4D8               	btfsc	status,2,c
 16354  004B34  D01A               	goto	l411
 16355  004B36  D022               	goto	l414
 16356  004B38                     
 16357                           ; BSR set to: 13
 16358                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 16359                           
 16360                           ; BSR set to: 13
 16361  004B38  0100               	movlb	0	; () banked
 16362  004B3A  05B4               	decf	_USBActiveConfiguration& (0+255),w,b
 16363  004B3C  A4D8               	btfss	status,2,c
 16364  004B3E  D01E               	goto	l414
 16365                           
 16366                           ; BSR set to: 0
 16367                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 16368  004B40  0EBA               	movlw	low (_configDescriptor1+18)
 16369  004B42  6F66               	movwf	_inPipes& (0+255),b
 16370  004B44  0E8E               	movlw	high (_configDescriptor1+18)
 16371  004B46  6F67               	movwf	(_inPipes+1)& (0+255),b
 16372                           
 16373                           ; BSR set to: 0
 16374  004B48  0E00               	movlw	0
 16375  004B4A  6F6B               	movwf	(_inPipes+5)& (0+255),b
 16376  004B4C  0E09               	movlw	9
 16377  004B4E  D00B               	goto	L13
 16378  004B50                     l10199:
 16379                           
 16380                           ; BSR set to: 0
 16381  004B50  0EC0               	movlw	192
 16382  004B52  6F69               	movwf	(_inPipes+3)& (0+255),b
 16383                           
 16384                           ; BSR set to: 0
 16385                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 16386  004B54  D013               	goto	l414
 16387  004B56                     
 16388                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 16389                           
 16390                           ; BSR set to: 0
 16391  004B56  0E6E               	movlw	low _hid_rpt01
 16392  004B58  0100               	movlb	0	; () banked
 16393  004B5A  6F66               	movwf	_inPipes& (0+255),b
 16394  004B5C  0E8F               	movlw	high _hid_rpt01
 16395  004B5E  6F67               	movwf	(_inPipes+1)& (0+255),b
 16396                           
 16397                           ; BSR set to: 0
 16398  004B60  0E00               	movlw	0
 16399  004B62  6F6B               	movwf	(_inPipes+5)& (0+255),b
 16400  004B64  0E1D               	movlw	29
 16401  004B66                     L13:
 16402  004B66  6F6A               	movwf	(_inPipes+4)& (0+255),b
 16403  004B68  D7F3               	goto	l10199
 16404  004B6A                     l411:
 16405                           
 16406                           ; BSR set to: 0
 16407  004B6A  010D               	movlb	13	; () banked
 16408  004B6C  5133               	movf	51,w,b	;volatile
 16409                           
 16410                           ; Switch size 1, requested type "space"
 16411                           ; Number of cases is 3, Range of values is 33 to 35
 16412                           ; switch strategies available:
 16413                           ; Name         Instructions Cycles
 16414                           ; simple_byte           10     6 (average)
 16415                           ;	Chosen strategy is simple_byte
 16416  004B6E  0A21               	xorlw	33	; case 33
 16417  004B70  B4D8               	btfsc	status,2,c
 16418  004B72  D7E2               	goto	l412
 16419  004B74  0A03               	xorlw	3	; case 34
 16420  004B76  B4D8               	btfsc	status,2,c
 16421  004B78  D7EE               	goto	l415
 16422  004B7A  0A01               	xorlw	1	; case 35
 16423  004B7C                     l414:
 16424                           
 16425                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 16426                           
 16427                           ; BSR set to: 13
 16428                           
 16429                           ; BSR set to: 13
 16430  004B7C  010D               	movlb	13	; () banked
 16431  004B7E  3930               	swapf	48,w,b	;volatile
 16432  004B80  32E8               	rrcf	wreg,f,c
 16433  004B82  0B03               	andlw	3
 16434  004B84  06E8               	decf	wreg,f,c
 16435  004B86  A4D8               	btfss	status,2,c
 16436  004B88  0012               	return	
 16437  004B8A  D024               	goto	l418
 16438  004B8C                     
 16439                           ; BSR set to: 13
 16440                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 16441                           
 16442                           ; BSR set to: 13
 16443  004B8C  0EB2               	movlw	low _idle_rate
 16444  004B8E  0100               	movlb	0	; () banked
 16445  004B90  6F66               	movwf	_inPipes& (0+255),b
 16446  004B92  0E00               	movlw	high _idle_rate
 16447  004B94  6F67               	movwf	(_inPipes+1)& (0+255),b
 16448                           
 16449                           ; BSR set to: 0
 16450  004B96  0E00               	movlw	0
 16451  004B98  6F6B               	movwf	(_inPipes+5)& (0+255),b
 16452  004B9A  0E01               	movlw	1
 16453  004B9C  6F6A               	movwf	(_inPipes+4)& (0+255),b
 16454                           
 16455                           ; BSR set to: 0
 16456  004B9E  0EC1               	movlw	193
 16457  004BA0  6F69               	movwf	(_inPipes+3)& (0+255),b
 16458                           
 16459                           ;usb_device_hid.c: 223: break;
 16460  004BA2  0012               	return	
 16461  004BA4                     
 16462                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 16463                           
 16464                           ; BSR set to: 0
 16465  004BA4  0E80               	movlw	128
 16466  004BA6  0100               	movlb	0	; () banked
 16467  004BA8  6F69               	movwf	(_inPipes+3)& (0+255),b
 16468                           
 16469                           ; BSR set to: 0
 16470                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 16471  004BAA  CD33 F0B2          	movff	3379,_idle_rate	;volatile
 16472                           
 16473                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 16474  004BAE  0012               	return	
 16475  004BB0                     
 16476                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 16477                           
 16478                           ; BSR set to: 0
 16479  004BB0  0EB1               	movlw	low _active_protocol
 16480  004BB2  0100               	movlb	0	; () banked
 16481  004BB4  6F66               	movwf	_inPipes& (0+255),b
 16482  004BB6  0E00               	movlw	high _active_protocol
 16483  004BB8  6F67               	movwf	(_inPipes+1)& (0+255),b
 16484                           
 16485                           ; BSR set to: 0
 16486  004BBA  0E00               	movlw	0
 16487  004BBC  6F6B               	movwf	(_inPipes+5)& (0+255),b
 16488  004BBE  0E01               	movlw	1
 16489  004BC0  6F6A               	movwf	(_inPipes+4)& (0+255),b
 16490                           
 16491                           ; BSR set to: 0
 16492  004BC2  0E81               	movlw	129
 16493  004BC4  6F69               	movwf	(_inPipes+3)& (0+255),b
 16494                           
 16495                           ;usb_device_hid.c: 234: break;
 16496  004BC6  0012               	return	
 16497  004BC8                     
 16498                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 16499                           
 16500                           ; BSR set to: 0
 16501  004BC8  0E80               	movlw	128
 16502  004BCA  0100               	movlb	0	; () banked
 16503  004BCC  6F69               	movwf	(_inPipes+3)& (0+255),b
 16504                           
 16505                           ; BSR set to: 0
 16506                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 16507  004BCE  CD32 F0B1          	movff	3378,_active_protocol	;volatile
 16508                           
 16509                           ; BSR set to: 0
 16510                           ;usb_device_hid.c: 239: }
 16511                           
 16512                           ;usb_device_hid.c: 238: break;
 16513  004BD2  0012               	return	
 16514  004BD4                     l418:
 16515                           
 16516                           ; BSR set to: 0
 16517  004BD4  010D               	movlb	13	; () banked
 16518  004BD6  5131               	movf	49,w,b	;volatile
 16519                           
 16520                           ; Switch size 1, requested type "space"
 16521                           ; Number of cases is 6, Range of values is 1 to 11
 16522                           ; switch strategies available:
 16523                           ; Name         Instructions Cycles
 16524                           ; simple_byte           19    10 (average)
 16525                           ;	Chosen strategy is simple_byte
 16526  004BD8  0A01               	xorlw	1	; case 1
 16527  004BDA  B4D8               	btfsc	status,2,c
 16528  004BDC  0012               	return	
 16529  004BDE  0A03               	xorlw	3	; case 2
 16530  004BE0  B4D8               	btfsc	status,2,c
 16531  004BE2  D7D4               	goto	l422
 16532  004BE4  0A01               	xorlw	1	; case 3
 16533  004BE6  B4D8               	btfsc	status,2,c
 16534  004BE8  D7E3               	goto	l424
 16535  004BEA  0A0A               	xorlw	10	; case 9
 16536  004BEC  B4D8               	btfsc	status,2,c
 16537  004BEE  0012               	return	
 16538  004BF0  0A03               	xorlw	3	; case 10
 16539  004BF2  B4D8               	btfsc	status,2,c
 16540  004BF4  D7D7               	goto	l423
 16541  004BF6  0A01               	xorlw	1	; case 11
 16542  004BF8  A4D8               	btfss	status,2,c
 16543  004BFA  0012               	return	
 16544  004BFC  D7E5               	goto	l425
 16545  004BFE                     __end_of_USBCheckHIDRequest:
 16546                           	opt stack 0
 16547                           tblptru	equ	0xFF8
 16548                           tblptrh	equ	0xFF7
 16549                           tblptrl	equ	0xFF6
 16550                           tablat	equ	0xFF5
 16551                           prodh	equ	0xFF4
 16552                           prodl	equ	0xFF3
 16553                           intcon	equ	0xFF2
 16554                           intcon2	equ	0xFF1
 16555                           intcon3	equ	0xFF0
 16556                           indf0	equ	0xFEF
 16557                           postinc0	equ	0xFEE
 16558                           fsr0h	equ	0xFEA
 16559                           fsr0l	equ	0xFE9
 16560                           wreg	equ	0xFE8
 16561                           indf1	equ	0xFE7
 16562                           postdec1	equ	0xFE5
 16563                           plusw1	equ	0xFE3
 16564                           fsr1h	equ	0xFE2
 16565                           fsr1l	equ	0xFE1
 16566                           indf2	equ	0xFDF
 16567                           postinc2	equ	0xFDE
 16568                           postdec2	equ	0xFDD
 16569                           plusw2	equ	0xFDB
 16570                           fsr2h	equ	0xFDA
 16571                           fsr2l	equ	0xFD9
 16572                           status	equ	0xFD8
 16573                           
 16574 ;; *************** function _SYSTEM_Initialize *****************
 16575 ;; Defined at:
 16576 ;;		line 80 in file "system.c"
 16577 ;; Parameters:    Size  Location     Type
 16578 ;;  state           1    wreg     enum E6623
 16579 ;; Auto vars:     Size  Location     Type
 16580 ;;  state           1    4[COMRAM] enum E6623
 16581 ;;  pll_startup_    2    2[COMRAM] unsigned int 
 16582 ;;  pll_startup_    2    0[COMRAM] unsigned int 
 16583 ;; Return value:  Size  Location     Type
 16584 ;;                  1    wreg      void 
 16585 ;; Registers used:
 16586 ;;		wreg, status,2, status,0
 16587 ;; Tracked objects:
 16588 ;;		On entry : 0/0
 16589 ;;		On exit  : 0/0
 16590 ;;		Unchanged: 0/0
 16591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16593 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16595 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16596 ;;Total ram usage:        5 bytes
 16597 ;; Hardware stack levels used:    1
 16598 ;; This function calls:
 16599 ;;		Nothing
 16600 ;; This function is called by:
 16601 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16602 ;;		_main
 16603 ;; This function uses a non-reentrant model
 16604 ;;
 16605                           
 16606                           	psect	text76
 16607  00746C                     __ptext76:
 16608                           	opt stack 0
 16609  00746C                     _SYSTEM_Initialize:
 16610                           	opt stack 28
 16611                           
 16612                           ;incstack = 0
 16613                           ;SYSTEM_Initialize@state stored from wreg
 16614  00746C  6E05               	movwf	SYSTEM_Initialize@state,c
 16615                           
 16616                           ;system.c: 82: switch(state)
 16617  00746E  D01D               	goto	l923
 16618  007470                     
 16619                           ;system.c: 91: {;system.c: 92: unsigned int pll_startup_counter = 600;
 16620  007470  0E02               	movlw	2
 16621  007472  6E02               	movwf	SYSTEM_Initialize@pll_startup_counter+1,c
 16622  007474  0E58               	movlw	88
 16623  007476  6E01               	movwf	SYSTEM_Initialize@pll_startup_counter,c
 16624                           
 16625                           ;system.c: 93: OSCTUNEbits.PLLEN = 1;
 16626  007478  8C9B               	bsf	3995,6,c	;volatile
 16627  00747A                     l10385:
 16628  00747A  0601               	decf	SYSTEM_Initialize@pll_startup_counter,f,c
 16629  00747C  A0D8               	btfss	status,0,c
 16630  00747E  0602               	decf	SYSTEM_Initialize@pll_startup_counter+1,f,c
 16631  007480  2801               	incf	SYSTEM_Initialize@pll_startup_counter,w,c
 16632  007482  E1FB               	bnz	l10385
 16633  007484  2802               	incf	SYSTEM_Initialize@pll_startup_counter+1,w,c
 16634  007486  B4D8               	btfsc	status,2,c
 16635  007488  0012               	return	
 16636  00748A  D7F7               	goto	l926
 16637  00748C                     
 16638                           ;system.c: 119: OSCCON = 0x70;
 16639  00748C  0E70               	movlw	112
 16640  00748E  6ED3               	movwf	4051,c	;volatile
 16641                           
 16642                           ;system.c: 125: {;system.c: 126: unsigned int pll_startup_counter = 800;
 16643  007490  0E03               	movlw	3
 16644  007492  6E04               	movwf	SYSTEM_Initialize@pll_startup_counter_3036+1,c
 16645  007494  0E20               	movlw	32
 16646  007496  6E03               	movwf	SYSTEM_Initialize@pll_startup_counter_3036,c
 16647  007498                     l10389:
 16648  007498  0603               	decf	SYSTEM_Initialize@pll_startup_counter_3036,f,c
 16649  00749A  A0D8               	btfss	status,0,c
 16650  00749C  0604               	decf	SYSTEM_Initialize@pll_startup_counter_3036+1,f,c
 16651  00749E  2803               	incf	SYSTEM_Initialize@pll_startup_counter_3036,w,c
 16652  0074A0  E1FB               	bnz	l10389
 16653  0074A2  2804               	incf	SYSTEM_Initialize@pll_startup_counter_3036+1,w,c
 16654  0074A4  B4D8               	btfsc	status,2,c
 16655  0074A6  0012               	return	
 16656  0074A8  D7F7               	goto	l932
 16657  0074AA                     l923:
 16658  0074AA  5005               	movf	SYSTEM_Initialize@state,w,c
 16659                           
 16660                           ; Switch size 1, requested type "space"
 16661                           ; Number of cases is 3, Range of values is 0 to 2
 16662                           ; switch strategies available:
 16663                           ; Name         Instructions Cycles
 16664                           ; simple_byte           10     6 (average)
 16665                           ;	Chosen strategy is simple_byte
 16666  0074AC  0A00               	xorlw	0	; case 0
 16667  0074AE  B4D8               	btfsc	status,2,c
 16668  0074B0  D7DF               	goto	l924
 16669  0074B2  0A01               	xorlw	1	; case 1
 16670  0074B4  B4D8               	btfsc	status,2,c
 16671  0074B6  0012               	return	
 16672  0074B8  0A03               	xorlw	3	; case 2
 16673  0074BA  A4D8               	btfss	status,2,c
 16674  0074BC  0012               	return	
 16675  0074BE  D7E6               	goto	l930
 16676  0074C0                     __end_of_SYSTEM_Initialize:
 16677                           	opt stack 0
 16678                           tblptru	equ	0xFF8
 16679                           tblptrh	equ	0xFF7
 16680                           tblptrl	equ	0xFF6
 16681                           tablat	equ	0xFF5
 16682                           prodh	equ	0xFF4
 16683                           prodl	equ	0xFF3
 16684                           intcon	equ	0xFF2
 16685                           intcon2	equ	0xFF1
 16686                           intcon3	equ	0xFF0
 16687                           indf0	equ	0xFEF
 16688                           postinc0	equ	0xFEE
 16689                           fsr0h	equ	0xFEA
 16690                           fsr0l	equ	0xFE9
 16691                           wreg	equ	0xFE8
 16692                           indf1	equ	0xFE7
 16693                           postdec1	equ	0xFE5
 16694                           plusw1	equ	0xFE3
 16695                           fsr1h	equ	0xFE2
 16696                           fsr1l	equ	0xFE1
 16697                           indf2	equ	0xFDF
 16698                           postinc2	equ	0xFDE
 16699                           postdec2	equ	0xFDD
 16700                           plusw2	equ	0xFDB
 16701                           fsr2h	equ	0xFDA
 16702                           fsr2l	equ	0xFD9
 16703                           status	equ	0xFD8
 16704                           
 16705 ;; *************** function _MSDTransferTerminated *****************
 16706 ;; Defined at:
 16707 ;;		line 1674 in file "usb_device_msd.c"
 16708 ;; Parameters:    Size  Location     Type
 16709 ;;  handle          2   11[COMRAM] PTR void 
 16710 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 16711 ;;		 -> BDT(48), 
 16712 ;; Auto vars:     Size  Location     Type
 16713 ;;		None
 16714 ;; Return value:  Size  Location     Type
 16715 ;;                  1    wreg      void 
 16716 ;; Registers used:
 16717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16718 ;; Tracked objects:
 16719 ;;		On entry : 0/0
 16720 ;;		On exit  : 0/0
 16721 ;;		Unchanged: 0/0
 16722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16723 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16724 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16726 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16727 ;;Total ram usage:        4 bytes
 16728 ;; Hardware stack levels used:    1
 16729 ;; Hardware stack levels required when called:    1
 16730 ;; This function calls:
 16731 ;;		_USBStallEndpoint
 16732 ;;		_USBTransferOnePacket
 16733 ;; This function is called by:
 16734 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16735 ;; This function uses a non-reentrant model
 16736 ;;
 16737                           
 16738                           	psect	text77
 16739  0072BE                     __ptext77:
 16740                           	opt stack 0
 16741  0072BE                     _MSDTransferTerminated:
 16742                           	opt stack 27
 16743                           
 16744                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 16745                           
 16746                           ;incstack = 0
 16747  0072BE  0100               	movlb	0	; () banked
 16748  0072C0  519A               	movf	_MSDCBWValid& (0+255),w,b
 16749  0072C2  A4D8               	btfss	status,2,c
 16750  0072C4  D00B               	goto	l764
 16751                           
 16752                           ; BSR set to: 0
 16753                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 16754  0072C6  0E01               	movlw	1
 16755  0072C8  6E01               	movwf	USBStallEndpoint@dir,c
 16756  0072CA  0E02               	movlw	2
 16757  0072CC  EC1E  F021         	call	_USBStallEndpoint
 16758                           
 16759                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 16760  0072D0  0E00               	movlw	0
 16761  0072D2  6E01               	movwf	USBStallEndpoint@dir,c
 16762  0072D4  0E02               	movlw	2
 16763  0072D6  EC1E  F021         	call	_USBStallEndpoint
 16764                           
 16765                           ;usb_device_msd.c: 1681: }
 16766  0072DA  0012               	return	
 16767  0072DC                     l764:
 16768  0072DC  C076  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2407
 16769  0072E0  C077  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2407+1
 16770  0072E4  500E               	movf	_MSDTransferTerminated$2407,w,c
 16771  0072E6  180C               	xorwf	MSDTransferTerminated@handle,w,c
 16772  0072E8  E114               	bnz	l767
 16773  0072EA  500F               	movf	_MSDTransferTerminated$2407+1,w,c
 16774  0072EC  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 16775  0072EE  A4D8               	btfss	status,2,c
 16776  0072F0  0012               	return	
 16777                           
 16778                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 16779  0072F2  0E00               	movlw	0
 16780  0072F4  6E01               	movwf	USBTransferOnePacket@dir,c
 16781  0072F6  0E40               	movlw	64
 16782  0072F8  6E02               	movwf	USBTransferOnePacket@data,c
 16783  0072FA  0E0D               	movlw	13
 16784  0072FC  6E03               	movwf	USBTransferOnePacket@data+1,c
 16785  0072FE  0E40               	movlw	64
 16786  007300  6E04               	movwf	USBTransferOnePacket@len,c
 16787  007302  0E02               	movlw	2
 16788  007304  EC2B  F023         	call	_USBTransferOnePacket
 16789  007308  C001  F08A         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 16790  00730C  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 16791  007310  0012               	return	
 16792  007312                     l767:
 16793  007312  0012               	return		;funcret
 16794  007314                     __end_of_MSDTransferTerminated:
 16795                           	opt stack 0
 16796                           tblptru	equ	0xFF8
 16797                           tblptrh	equ	0xFF7
 16798                           tblptrl	equ	0xFF6
 16799                           tablat	equ	0xFF5
 16800                           prodh	equ	0xFF4
 16801                           prodl	equ	0xFF3
 16802                           intcon	equ	0xFF2
 16803                           intcon2	equ	0xFF1
 16804                           intcon3	equ	0xFF0
 16805                           indf0	equ	0xFEF
 16806                           postinc0	equ	0xFEE
 16807                           fsr0h	equ	0xFEA
 16808                           fsr0l	equ	0xFE9
 16809                           wreg	equ	0xFE8
 16810                           indf1	equ	0xFE7
 16811                           postdec1	equ	0xFE5
 16812                           plusw1	equ	0xFE3
 16813                           fsr1h	equ	0xFE2
 16814                           fsr1l	equ	0xFE1
 16815                           indf2	equ	0xFDF
 16816                           postinc2	equ	0xFDE
 16817                           postdec2	equ	0xFDD
 16818                           plusw2	equ	0xFDB
 16819                           fsr2h	equ	0xFDA
 16820                           fsr2l	equ	0xFD9
 16821                           status	equ	0xFD8
 16822                           
 16823 ;; *************** function _APP_DeviceMSDInitialize *****************
 16824 ;; Defined at:
 16825 ;;		line 84 in file "app_device_msd.c"
 16826 ;; Parameters:    Size  Location     Type
 16827 ;;		None
 16828 ;; Auto vars:     Size  Location     Type
 16829 ;;		None
 16830 ;; Return value:  Size  Location     Type
 16831 ;;                  1    wreg      void 
 16832 ;; Registers used:
 16833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16834 ;; Tracked objects:
 16835 ;;		On entry : 0/0
 16836 ;;		On exit  : 0/0
 16837 ;;		Unchanged: 0/0
 16838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16843 ;;Total ram usage:        0 bytes
 16844 ;; Hardware stack levels used:    1
 16845 ;; Hardware stack levels required when called:    2
 16846 ;; This function calls:
 16847 ;;		_USBEnableEndpoint
 16848 ;;		_USBMSDInit
 16849 ;; This function is called by:
 16850 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16851 ;; This function uses a non-reentrant model
 16852 ;;
 16853                           
 16854                           	psect	text78
 16855  007FE0                     __ptext78:
 16856                           	opt stack 0
 16857  007FE0                     _APP_DeviceMSDInitialize:
 16858                           	opt stack 26
 16859                           
 16860                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 16861                           
 16862                           ;incstack = 0
 16863  007FE0  0E1E               	movlw	30
 16864  007FE2  6E09               	movwf	USBEnableEndpoint@options,c
 16865  007FE4  0E02               	movlw	2
 16866  007FE6  EC51  F03C         	call	_USBEnableEndpoint
 16867                           
 16868                           ;app_device_msd.c: 93: USBMSDInit();
 16869  007FEA  EC25  F022         	call	_USBMSDInit	;wreg free
 16870  007FEE  0012               	return		;funcret
 16871  007FF0                     __end_of_APP_DeviceMSDInitialize:
 16872                           	opt stack 0
 16873                           tblptru	equ	0xFF8
 16874                           tblptrh	equ	0xFF7
 16875                           tblptrl	equ	0xFF6
 16876                           tablat	equ	0xFF5
 16877                           prodh	equ	0xFF4
 16878                           prodl	equ	0xFF3
 16879                           intcon	equ	0xFF2
 16880                           intcon2	equ	0xFF1
 16881                           intcon3	equ	0xFF0
 16882                           indf0	equ	0xFEF
 16883                           postinc0	equ	0xFEE
 16884                           fsr0h	equ	0xFEA
 16885                           fsr0l	equ	0xFE9
 16886                           wreg	equ	0xFE8
 16887                           indf1	equ	0xFE7
 16888                           postdec1	equ	0xFE5
 16889                           plusw1	equ	0xFE3
 16890                           fsr1h	equ	0xFE2
 16891                           fsr1l	equ	0xFE1
 16892                           indf2	equ	0xFDF
 16893                           postinc2	equ	0xFDE
 16894                           postdec2	equ	0xFDD
 16895                           plusw2	equ	0xFDB
 16896                           fsr2h	equ	0xFDA
 16897                           fsr2l	equ	0xFD9
 16898                           status	equ	0xFD8
 16899                           
 16900 ;; *************** function _USBMSDInit *****************
 16901 ;; Defined at:
 16902 ;;		line 142 in file "usb_device_msd.c"
 16903 ;; Parameters:    Size  Location     Type
 16904 ;;		None
 16905 ;; Auto vars:     Size  Location     Type
 16906 ;;		None
 16907 ;; Return value:  Size  Location     Type
 16908 ;;                  1    wreg      void 
 16909 ;; Registers used:
 16910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16911 ;; Tracked objects:
 16912 ;;		On entry : 0/0
 16913 ;;		On exit  : 0/0
 16914 ;;		Unchanged: 0/0
 16915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16918 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16919 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16920 ;;Total ram usage:        3 bytes
 16921 ;; Hardware stack levels used:    1
 16922 ;; Hardware stack levels required when called:    1
 16923 ;; This function calls:
 16924 ;;		_ExternalFlash_MediaDetect
 16925 ;;		_ExternalFlash_MediaInitialize
 16926 ;;		_ResetSenseData
 16927 ;;		_USBTransferOnePacket
 16928 ;; This function is called by:
 16929 ;;		_APP_DeviceMSDInitialize
 16930 ;; This function uses a non-reentrant model
 16931 ;;
 16932                           
 16933                           	psect	text79
 16934  00444A                     __ptext79:
 16935                           	opt stack 0
 16936  00444A                     _USBMSDInit:
 16937                           	opt stack 26
 16938                           
 16939                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 16940                           
 16941                           ;incstack = 0
 16942  00444A  0E00               	movlw	0
 16943  00444C  6E01               	movwf	USBTransferOnePacket@dir,c
 16944  00444E  0E40               	movlw	64
 16945  004450  6E02               	movwf	USBTransferOnePacket@data,c
 16946  004452  0E0D               	movlw	13
 16947  004454  6E03               	movwf	USBTransferOnePacket@data+1,c
 16948  004456  0E40               	movlw	64
 16949  004458  6E04               	movwf	USBTransferOnePacket@len,c
 16950  00445A  0E02               	movlw	2
 16951  00445C  EC2B  F023         	call	_USBTransferOnePacket
 16952  004460  C001  F08A         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 16953  004464  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 16954  004468  C070  F088         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 16955  00446C  C071  F089         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 16956                           
 16957                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 16958  004470  0E00               	movlw	0
 16959  004472  0100               	movlb	0	; () banked
 16960  004474  6FA2               	movwf	_MSD_State& (0+255),b
 16961                           
 16962                           ; BSR set to: 0
 16963                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 16964  004476  69A1               	setf	_MSDCommandState& (0+255),b
 16965                           
 16966                           ; BSR set to: 0
 16967                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 16968  004478  0E00               	movlw	0
 16969  00447A  6FA0               	movwf	_MSDReadState& (0+255),b
 16970                           
 16971                           ; BSR set to: 0
 16972                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 16973  00447C  0E00               	movlw	0
 16974  00447E  6F9F               	movwf	_MSDWriteState& (0+255),b
 16975                           
 16976                           ; BSR set to: 0
 16977                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 16978  004480  0E00               	movlw	0
 16979  004482  6F9B               	movwf	_MSDHostNoData& (0+255),b
 16980                           
 16981                           ; BSR set to: 0
 16982                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 16983  004484  0E00               	movlw	0
 16984  004486  0101               	movlb	1	; () banked
 16985  004488  6F50               	movwf	_gblNumBLKS& (0+255),b
 16986  00448A  0E00               	movlw	0
 16987  00448C  6F51               	movwf	(_gblNumBLKS+1)& (0+255),b
 16988  00448E  0E00               	movlw	0
 16989  004490  6F52               	movwf	(_gblNumBLKS+2)& (0+255),b
 16990  004492  0E00               	movlw	0
 16991  004494  6F53               	movwf	(_gblNumBLKS+3)& (0+255),b
 16992                           
 16993                           ; BSR set to: 1
 16994                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 16995  004496  0E00               	movlw	0
 16996  004498  6F4C               	movwf	_gblBLKLen& (0+255),b
 16997  00449A  0E00               	movlw	0
 16998  00449C  6F4D               	movwf	(_gblBLKLen+1)& (0+255),b
 16999  00449E  0E00               	movlw	0
 17000  0044A0  6F4E               	movwf	(_gblBLKLen+2)& (0+255),b
 17001  0044A2  0E00               	movlw	0
 17002  0044A4  6F4F               	movwf	(_gblBLKLen+3)& (0+255),b
 17003                           
 17004                           ; BSR set to: 1
 17005                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 17006  0044A6  0E01               	movlw	1
 17007  0044A8  0100               	movlb	0	; () banked
 17008  0044AA  6F9A               	movwf	_MSDCBWValid& (0+255),b
 17009                           
 17010                           ; BSR set to: 0
 17011                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 17012  0044AC  0E00               	movlw	0
 17013  0044AE  0101               	movlb	1	; () banked
 17014  0044B0  6F73               	movwf	(_gblMediaPresent+1)& (0+255),b
 17015  0044B2  0E00               	movlw	0
 17016  0044B4  6F72               	movwf	_gblMediaPresent& (0+255),b
 17017                           
 17018                           ; BSR set to: 1
 17019                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 17020  0044B6  0E00               	movlw	0
 17021  0044B8  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 17022  0044BA  D046               	goto	l518
 17023  0044BC                     
 17024                           ; BSR set to: 1
 17025                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 17026                           
 17027                           ; BSR set to: 1
 17028  0044BC  510D               	movf	(_gblCBW+13)& (0+255),w,b
 17029  0044BE  0D01               	mullw	1
 17030  0044C0  0E9C               	movlw	low _SoftDetach
 17031  0044C2  24F3               	addwf	prodl,w,c
 17032  0044C4  6ED9               	movwf	fsr2l,c
 17033  0044C6  0E00               	movlw	high _SoftDetach
 17034  0044C8  20F4               	addwfc	prodh,w,c
 17035  0044CA  6EDA               	movwf	fsr2h,c
 17036  0044CC  0E00               	movlw	0
 17037  0044CE  6EDF               	movwf	indf2,c
 17038                           
 17039                           ; BSR set to: 1
 17040                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 17041  0044D0  C1F2  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 17042  0044D4  C1F3  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 17043  0044D8  D801               	call	u6538
 17044  0044DA  D009               	goto	u6539
 17045  0044DC                     u6538:
 17046  0044DC  0005               	push	
 17047  0044DE  6EFA               	movwf	pclath,c
 17048  0044E0  51EA               	movf	(_LUN+6)& (0+255),w,b
 17049  0044E2  6EFD               	movwf	tosl,c
 17050  0044E4  51EB               	movf	(_LUN+7)& (0+255),w,b
 17051  0044E6  6EFE               	movwf	tosh,c
 17052  0044E8  6AFF               	clrf	tosu,c
 17053  0044EA  50FA               	movf	pclath,w,c
 17054  0044EC  0012               	return		;indir
 17055  0044EE                     u6539:
 17056  0044EE  0900               	iorlw	0
 17057  0044F0  B4D8               	btfsc	status,2,c
 17058  0044F2  D026               	goto	l521
 17059                           
 17060                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 17061  0044F4  C1F2  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 17062  0044F8  C1F3  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 17063  0044FC  D801               	call	u6558
 17064  0044FE  D00A               	goto	u6559
 17065  004500                     u6558:
 17066  004500  0005               	push	
 17067  004502  6EFA               	movwf	pclath,c
 17068  004504  0101               	movlb	1	; () banked
 17069  004506  51E4               	movf	_LUN& (0+255),w,b
 17070  004508  6EFD               	movwf	tosl,c
 17071  00450A  51E5               	movf	(_LUN+1)& (0+255),w,b
 17072  00450C  6EFE               	movwf	tosh,c
 17073  00450E  6AFF               	clrf	tosu,c
 17074  004510  50FA               	movf	pclath,w,c
 17075  004512  0012               	return		;indir
 17076  004514                     u6559:
 17077  004514  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 17078  004516  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 17079  004518  B4D8               	btfsc	status,2,c
 17080  00451A  D012               	goto	l521
 17081                           
 17082                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 17083  00451C  C10D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 17084  004520  0E01               	movlw	1
 17085  004522  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 17086  004524  0E00               	movlw	0
 17087  004526  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 17088  004528  2A0C               	incf	??_USBMSDInit,f,c
 17089  00452A  D003               	goto	u6574
 17090  00452C                     u6575:
 17091  00452C  90D8               	bcf	status,0,c
 17092  00452E  360D               	rlcf	??_USBMSDInit+1,f,c
 17093  004530  360E               	rlcf	??_USBMSDInit+2,f,c
 17094  004532                     u6574:
 17095  004532  2E0C               	decfsz	??_USBMSDInit,f,c
 17096  004534  D7FB               	goto	u6575
 17097  004536  500D               	movf	??_USBMSDInit+1,w,c
 17098  004538  0101               	movlb	1	; () banked
 17099  00453A  1372               	iorwf	_gblMediaPresent& (0+255),f,b
 17100  00453C  500E               	movf	??_USBMSDInit+2,w,c
 17101  00453E  1373               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 17102  004540                     l521:
 17103                           
 17104                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 17105                           
 17106                           ; BSR set to: 1
 17107                           
 17108                           ; BSR set to: 1
 17109  004540  EC12  F037         	call	_ResetSenseData	;wreg free
 17110  004544  0101               	movlb	1	; () banked
 17111  004546  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 17112  004548                     l518:
 17113                           
 17114                           ; BSR set to: 1
 17115                           
 17116                           ; BSR set to: 1
 17117  004548  510D               	movf	(_gblCBW+13)& (0+255),w,b
 17118  00454A  A4D8               	btfss	status,2,c
 17119  00454C  0012               	return	
 17120  00454E  D7B6               	goto	l519
 17121  004550                     __end_of_USBMSDInit:
 17122                           	opt stack 0
 17123                           tosu	equ	0xFFF
 17124                           tosh	equ	0xFFE
 17125                           tosl	equ	0xFFD
 17126                           pclath	equ	0xFFA
 17127                           tblptru	equ	0xFF8
 17128                           tblptrh	equ	0xFF7
 17129                           tblptrl	equ	0xFF6
 17130                           tablat	equ	0xFF5
 17131                           prodh	equ	0xFF4
 17132                           prodl	equ	0xFF3
 17133                           intcon	equ	0xFF2
 17134                           intcon2	equ	0xFF1
 17135                           intcon3	equ	0xFF0
 17136                           indf0	equ	0xFEF
 17137                           postinc0	equ	0xFEE
 17138                           fsr0h	equ	0xFEA
 17139                           fsr0l	equ	0xFE9
 17140                           wreg	equ	0xFE8
 17141                           indf1	equ	0xFE7
 17142                           postdec1	equ	0xFE5
 17143                           plusw1	equ	0xFE3
 17144                           fsr1h	equ	0xFE2
 17145                           fsr1l	equ	0xFE1
 17146                           indf2	equ	0xFDF
 17147                           postinc2	equ	0xFDE
 17148                           postdec2	equ	0xFDD
 17149                           plusw2	equ	0xFDB
 17150                           fsr2h	equ	0xFDA
 17151                           fsr2l	equ	0xFD9
 17152                           status	equ	0xFD8
 17153                           
 17154 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 17155 ;; Defined at:
 17156 ;;		line 47 in file "app_device_custom_hid.c"
 17157 ;; Parameters:    Size  Location     Type
 17158 ;;		None
 17159 ;; Auto vars:     Size  Location     Type
 17160 ;;		None
 17161 ;; Return value:  Size  Location     Type
 17162 ;;                  1    wreg      void 
 17163 ;; Registers used:
 17164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17165 ;; Tracked objects:
 17166 ;;		On entry : 0/0
 17167 ;;		On exit  : 0/0
 17168 ;;		Unchanged: 0/0
 17169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17174 ;;Total ram usage:        0 bytes
 17175 ;; Hardware stack levels used:    1
 17176 ;; Hardware stack levels required when called:    2
 17177 ;; This function calls:
 17178 ;;		_USBEnableEndpoint
 17179 ;;		_USBTransferOnePacket
 17180 ;; This function is called by:
 17181 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17182 ;; This function uses a non-reentrant model
 17183 ;;
 17184                           
 17185                           	psect	text80
 17186  007A26                     __ptext80:
 17187                           	opt stack 0
 17188  007A26                     _APP_DeviceCustomHIDInitialize:
 17189                           	opt stack 26
 17190                           
 17191                           ;app_device_custom_hid.c: 51: USBInHandle = 0;
 17192                           
 17193                           ; BSR set to: 1
 17194                           ;incstack = 0
 17195  007A26  0E00               	movlw	0
 17196  007A28  0101               	movlb	1	; () banked
 17197  007A2A  6F70               	movwf	_USBInHandle& (0+255),b
 17198  007A2C  0E00               	movlw	0
 17199  007A2E  6F71               	movwf	(_USBInHandle+1)& (0+255),b
 17200                           
 17201                           ; BSR set to: 1
 17202                           ;app_device_custom_hid.c: 54: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 17203  007A30  0E1E               	movlw	30
 17204  007A32  6E09               	movwf	USBEnableEndpoint@options,c
 17205  007A34  0E01               	movlw	1
 17206  007A36  EC51  F03C         	call	_USBEnableEndpoint
 17207                           
 17208                           ;app_device_custom_hid.c: 57: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 17209  007A3A  0E00               	movlw	0
 17210  007A3C  6E01               	movwf	USBTransferOnePacket@dir,c
 17211  007A3E  0E80               	movlw	low _ReceivedDataBuffer
 17212  007A40  6E02               	movwf	USBTransferOnePacket@data,c
 17213  007A42  0E02               	movlw	high _ReceivedDataBuffer
 17214  007A44  6E03               	movwf	USBTransferOnePacket@data+1,c
 17215  007A46  0E40               	movlw	64
 17216  007A48  6E04               	movwf	USBTransferOnePacket@len,c
 17217  007A4A  0E01               	movlw	1
 17218  007A4C  EC2B  F023         	call	_USBTransferOnePacket
 17219  007A50  C001  F084         	movff	?_USBTransferOnePacket,_USBOutHandle
 17220  007A54  C002  F085         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 17221  007A58  0012               	return		;funcret
 17222  007A5A                     __end_of_APP_DeviceCustomHIDInitialize:
 17223                           	opt stack 0
 17224                           tosu	equ	0xFFF
 17225                           tosh	equ	0xFFE
 17226                           tosl	equ	0xFFD
 17227                           pclath	equ	0xFFA
 17228                           tblptru	equ	0xFF8
 17229                           tblptrh	equ	0xFF7
 17230                           tblptrl	equ	0xFF6
 17231                           tablat	equ	0xFF5
 17232                           prodh	equ	0xFF4
 17233                           prodl	equ	0xFF3
 17234                           intcon	equ	0xFF2
 17235                           intcon2	equ	0xFF1
 17236                           intcon3	equ	0xFF0
 17237                           indf0	equ	0xFEF
 17238                           postinc0	equ	0xFEE
 17239                           fsr0h	equ	0xFEA
 17240                           fsr0l	equ	0xFE9
 17241                           wreg	equ	0xFE8
 17242                           indf1	equ	0xFE7
 17243                           postdec1	equ	0xFE5
 17244                           plusw1	equ	0xFE3
 17245                           fsr1h	equ	0xFE2
 17246                           fsr1l	equ	0xFE1
 17247                           indf2	equ	0xFDF
 17248                           postinc2	equ	0xFDE
 17249                           postdec2	equ	0xFDD
 17250                           plusw2	equ	0xFDB
 17251                           fsr2h	equ	0xFDA
 17252                           fsr2l	equ	0xFD9
 17253                           status	equ	0xFD8
 17254                           
 17255 ;; *************** function _USBEnableEndpoint *****************
 17256 ;; Defined at:
 17257 ;;		line 878 in file "usb_device.c"
 17258 ;; Parameters:    Size  Location     Type
 17259 ;;  ep              1    wreg     unsigned char 
 17260 ;;  options         1    8[COMRAM] unsigned char 
 17261 ;; Auto vars:     Size  Location     Type
 17262 ;;  ep              1   11[COMRAM] unsigned char 
 17263 ;;  p               2    9[COMRAM] PTR unsigned char 
 17264 ;;		 -> UEP0(1), 
 17265 ;; Return value:  Size  Location     Type
 17266 ;;                  1    wreg      void 
 17267 ;; Registers used:
 17268 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17269 ;; Tracked objects:
 17270 ;;		On entry : 0/0
 17271 ;;		On exit  : 0/0
 17272 ;;		Unchanged: 0/0
 17273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17274 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17275 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17277 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17278 ;;Total ram usage:        4 bytes
 17279 ;; Hardware stack levels used:    1
 17280 ;; Hardware stack levels required when called:    1
 17281 ;; This function calls:
 17282 ;;		_USBConfigureEndpoint
 17283 ;; This function is called by:
 17284 ;;		_APP_DeviceCustomHIDInitialize
 17285 ;;		_APP_DeviceMSDInitialize
 17286 ;; This function uses a non-reentrant model
 17287 ;;
 17288                           
 17289                           	psect	text81
 17290  0078A2                     __ptext81:
 17291                           	opt stack 0
 17292  0078A2                     _USBEnableEndpoint:
 17293                           	opt stack 26
 17294                           
 17295                           ;incstack = 0
 17296                           ;USBEnableEndpoint@ep stored from wreg
 17297  0078A2  6E0C               	movwf	USBEnableEndpoint@ep,c
 17298                           
 17299                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 17300  0078A4  A409               	btfss	USBEnableEndpoint@options,2,c
 17301  0078A6  D005               	goto	l178
 17302                           
 17303                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 17304  0078A8  0E00               	movlw	0
 17305  0078AA  6E01               	movwf	USBConfigureEndpoint@direction,c
 17306  0078AC  500C               	movf	USBEnableEndpoint@ep,w,c
 17307  0078AE  EC32  F030         	call	_USBConfigureEndpoint
 17308  0078B2                     l178:
 17309                           
 17310                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 17311  0078B2  A209               	btfss	USBEnableEndpoint@options,1,c
 17312  0078B4  D005               	goto	l179
 17313                           
 17314                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 17315  0078B6  0E01               	movlw	1
 17316  0078B8  6E01               	movwf	USBConfigureEndpoint@direction,c
 17317  0078BA  500C               	movf	USBEnableEndpoint@ep,w,c
 17318  0078BC  EC32  F030         	call	_USBConfigureEndpoint
 17319  0078C0                     l179:
 17320                           
 17321                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 17322  0078C0  500C               	movf	USBEnableEndpoint@ep,w,c
 17323  0078C2  0D01               	mullw	1
 17324  0078C4  0E26               	movlw	38
 17325  0078C6  24F3               	addwf	prodl,w,c
 17326  0078C8  6E0A               	movwf	USBEnableEndpoint@p,c
 17327  0078CA  0E0F               	movlw	15
 17328  0078CC  20F4               	addwfc	prodh,w,c
 17329  0078CE  6E0B               	movwf	USBEnableEndpoint@p+1,c
 17330                           
 17331                           ;usb_device.c: 901: *p = options;
 17332  0078D0  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 17333  0078D4  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 17334  0078D8  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 17335  0078DC  0012               	return		;funcret
 17336  0078DE                     __end_of_USBEnableEndpoint:
 17337                           	opt stack 0
 17338                           tosu	equ	0xFFF
 17339                           tosh	equ	0xFFE
 17340                           tosl	equ	0xFFD
 17341                           pclath	equ	0xFFA
 17342                           tblptru	equ	0xFF8
 17343                           tblptrh	equ	0xFF7
 17344                           tblptrl	equ	0xFF6
 17345                           tablat	equ	0xFF5
 17346                           prodh	equ	0xFF4
 17347                           prodl	equ	0xFF3
 17348                           intcon	equ	0xFF2
 17349                           intcon2	equ	0xFF1
 17350                           intcon3	equ	0xFF0
 17351                           indf0	equ	0xFEF
 17352                           postinc0	equ	0xFEE
 17353                           fsr0h	equ	0xFEA
 17354                           fsr0l	equ	0xFE9
 17355                           wreg	equ	0xFE8
 17356                           indf1	equ	0xFE7
 17357                           postdec1	equ	0xFE5
 17358                           plusw1	equ	0xFE3
 17359                           fsr1h	equ	0xFE2
 17360                           fsr1l	equ	0xFE1
 17361                           indf2	equ	0xFDF
 17362                           postinc2	equ	0xFDE
 17363                           postdec2	equ	0xFDD
 17364                           plusw2	equ	0xFDB
 17365                           fsr2h	equ	0xFDA
 17366                           fsr2l	equ	0xFD9
 17367                           status	equ	0xFD8
 17368                           
 17369 ;; *************** function _USBConfigureEndpoint *****************
 17370 ;; Defined at:
 17371 ;;		line 1545 in file "usb_device.c"
 17372 ;; Parameters:    Size  Location     Type
 17373 ;;  EPNum           1    wreg     unsigned char 
 17374 ;;  direction       1    0[COMRAM] unsigned char 
 17375 ;; Auto vars:     Size  Location     Type
 17376 ;;  EPNum           1    5[COMRAM] unsigned char 
 17377 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 17378 ;;		 -> BDT(48), 
 17379 ;; Return value:  Size  Location     Type
 17380 ;;                  1    wreg      void 
 17381 ;; Registers used:
 17382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17383 ;; Tracked objects:
 17384 ;;		On entry : 0/0
 17385 ;;		On exit  : 0/0
 17386 ;;		Unchanged: 0/0
 17387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17388 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17389 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17390 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17391 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17392 ;;Total ram usage:        8 bytes
 17393 ;; Hardware stack levels used:    1
 17394 ;; This function calls:
 17395 ;;		Nothing
 17396 ;; This function is called by:
 17397 ;;		_USBEnableEndpoint
 17398 ;; This function uses a non-reentrant model
 17399 ;;
 17400                           
 17401                           	psect	text82
 17402  006064                     __ptext82:
 17403                           	opt stack 0
 17404  006064                     _USBConfigureEndpoint:
 17405                           	opt stack 26
 17406                           
 17407                           ;incstack = 0
 17408                           ;USBConfigureEndpoint@EPNum stored from wreg
 17409  006064  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 17410                           
 17411                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 17412  006066  0E00               	movlw	0
 17413  006068  6E07               	movwf	USBConfigureEndpoint@handle,c
 17414  00606A  0E0D               	movlw	13
 17415  00606C  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 17416                           
 17417                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 17418  00606E  5001               	movf	USBConfigureEndpoint@direction,w,c
 17419  006070  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 17420  006072  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 17421  006074  90D8               	bcf	status,0,c
 17422  006076  3602               	rlcf	??_USBConfigureEndpoint,f,c
 17423  006078  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 17424  00607A  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 17425  00607C  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 17426  00607E  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 17427  006080  90D8               	bcf	status,0,c
 17428  006082  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17429  006084  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17430  006086  90D8               	bcf	status,0,c
 17431  006088  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17432  00608A  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17433  00608C  5002               	movf	??_USBConfigureEndpoint,w,c
 17434  00608E  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 17435  006090  5003               	movf	??_USBConfigureEndpoint+1,w,c
 17436  006092  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 17437  006094  90D8               	bcf	status,0,c
 17438  006096  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17439  006098  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17440  00609A  90D8               	bcf	status,0,c
 17441  00609C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 17442  00609E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 17443  0060A0  5004               	movf	??_USBConfigureEndpoint+2,w,c
 17444  0060A2  2607               	addwf	USBConfigureEndpoint@handle,f,c
 17445  0060A4  5005               	movf	??_USBConfigureEndpoint+3,w,c
 17446  0060A6  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 17447                           
 17448                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 17449  0060A8  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 17450  0060AC  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 17451  0060B0  9EDF               	bcf	indf2,7,c
 17452                           
 17453                           ;usb_device.c: 1559: if(direction == 0)
 17454  0060B2  5001               	movf	USBConfigureEndpoint@direction,w,c
 17455  0060B4  A4D8               	btfss	status,2,c
 17456  0060B6  D007               	goto	l214
 17457                           
 17458                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 17459  0060B8  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 17460  0060BA  0D02               	mullw	2
 17461  0060BC  0E72               	movlw	low _pBDTEntryOut
 17462  0060BE  24F3               	addwf	prodl,w,c
 17463  0060C0  6ED9               	movwf	fsr2l,c
 17464  0060C2  0E00               	movlw	high _pBDTEntryOut
 17465  0060C4  D006               	goto	L14
 17466  0060C6                     l214:
 17467                           
 17468                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 17469  0060C6  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 17470  0060C8  0D02               	mullw	2
 17471  0060CA  0E6C               	movlw	low _pBDTEntryIn
 17472  0060CC  24F3               	addwf	prodl,w,c
 17473  0060CE  6ED9               	movwf	fsr2l,c
 17474  0060D0  0E00               	movlw	high _pBDTEntryIn
 17475  0060D2                     L14:
 17476  0060D2  20F4               	addwfc	prodh,w,c
 17477  0060D4  6EDA               	movwf	fsr2h,c
 17478  0060D6  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 17479  0060DA  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 17480                           
 17481                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 17482  0060DE  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 17483  0060E2  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 17484  0060E6  9CDF               	bcf	indf2,6,c
 17485                           
 17486                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 17487  0060E8  EE20 F004          	lfsr	2,4
 17488  0060EC  5007               	movf	USBConfigureEndpoint@handle,w,c
 17489  0060EE  26D9               	addwf	fsr2l,f,c
 17490  0060F0  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 17491  0060F2  22DA               	addwfc	fsr2h,f,c
 17492  0060F4  8CDF               	bsf	indf2,6,c
 17493  0060F6  0012               	return		;funcret
 17494  0060F8                     __end_of_USBConfigureEndpoint:
 17495                           	opt stack 0
 17496                           tosu	equ	0xFFF
 17497                           tosh	equ	0xFFE
 17498                           tosl	equ	0xFFD
 17499                           pclath	equ	0xFFA
 17500                           tblptru	equ	0xFF8
 17501                           tblptrh	equ	0xFF7
 17502                           tblptrl	equ	0xFF6
 17503                           tablat	equ	0xFF5
 17504                           prodh	equ	0xFF4
 17505                           prodl	equ	0xFF3
 17506                           intcon	equ	0xFF2
 17507                           intcon2	equ	0xFF1
 17508                           intcon3	equ	0xFF0
 17509                           indf0	equ	0xFEF
 17510                           postinc0	equ	0xFEE
 17511                           fsr0h	equ	0xFEA
 17512                           fsr0l	equ	0xFE9
 17513                           wreg	equ	0xFE8
 17514                           indf1	equ	0xFE7
 17515                           postdec1	equ	0xFE5
 17516                           plusw1	equ	0xFE3
 17517                           fsr1h	equ	0xFE2
 17518                           fsr1l	equ	0xFE1
 17519                           indf2	equ	0xFDF
 17520                           postinc2	equ	0xFDE
 17521                           postdec2	equ	0xFDD
 17522                           plusw2	equ	0xFDB
 17523                           fsr2h	equ	0xFDA
 17524                           fsr2l	equ	0xFD9
 17525                           status	equ	0xFD8
 17526                           
 17527 ;; *************** function _USBCtrlTrfOutHandler *****************
 17528 ;; Defined at:
 17529 ;;		line 2540 in file "usb_device.c"
 17530 ;; Parameters:    Size  Location     Type
 17531 ;;		None
 17532 ;; Auto vars:     Size  Location     Type
 17533 ;;		None
 17534 ;; Return value:  Size  Location     Type
 17535 ;;                  1    wreg      void 
 17536 ;; Registers used:
 17537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17538 ;; Tracked objects:
 17539 ;;		On entry : 0/0
 17540 ;;		On exit  : 0/0
 17541 ;;		Unchanged: 0/0
 17542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17547 ;;Total ram usage:        0 bytes
 17548 ;; Hardware stack levels used:    1
 17549 ;; Hardware stack levels required when called:    2
 17550 ;; This function calls:
 17551 ;;		_USBCtrlTrfRxService
 17552 ;; This function is called by:
 17553 ;;		_USBCtrlEPService
 17554 ;; This function uses a non-reentrant model
 17555 ;;
 17556                           
 17557                           	psect	text83
 17558  006EE6                     __ptext83:
 17559                           	opt stack 0
 17560  006EE6                     _USBCtrlTrfOutHandler:
 17561                           	opt stack 26
 17562                           
 17563                           ;usb_device.c: 2542: if(controlTransferState == 2)
 17564                           
 17565                           ;incstack = 0
 17566  006EE6  0E02               	movlw	2
 17567  006EE8  0100               	movlb	0	; () banked
 17568  006EEA  19AE               	xorwf	_controlTransferState& (0+255),w,b
 17569  006EEC  A4D8               	btfss	status,2,c
 17570  006EEE  D003               	goto	l320
 17571                           
 17572                           ; BSR set to: 0
 17573                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 17574  006EF0  EC09  F020         	call	_USBCtrlTrfRxService	;wreg free
 17575                           
 17576                           ;usb_device.c: 2545: }
 17577  006EF4  0012               	return	
 17578  006EF6                     l320:
 17579                           
 17580                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 17581  006EF6  0E00               	movlw	0
 17582  006EF8  0100               	movlb	0	; () banked
 17583  006EFA  6FAE               	movwf	_controlTransferState& (0+255),b
 17584                           
 17585                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 17586  006EFC  51AA               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 17587  006EFE  A4D8               	btfss	status,2,c
 17588  006F00  D01F               	goto	l322
 17589                           
 17590                           ; BSR set to: 0
 17591                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 17592  006F02  EE20 F001          	lfsr	2,1
 17593  006F06  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17594  006F08  26D9               	addwf	fsr2l,f,c
 17595  006F0A  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17596  006F0C  22DA               	addwfc	fsr2h,f,c
 17597  006F0E  0E08               	movlw	8
 17598  006F10  6EDF               	movwf	indf2,c
 17599                           
 17600                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17601  006F12  EE20 F002          	lfsr	2,2
 17602  006F16  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17603  006F18  26D9               	addwf	fsr2l,f,c
 17604  006F1A  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17605  006F1C  22DA               	addwfc	fsr2h,f,c
 17606  006F1E  0E30               	movlw	48
 17607  006F20  6EDE               	movwf	postinc2,c
 17608  006F22  0E0D               	movlw	13
 17609  006F24  6EDD               	movwf	postdec2,c
 17610                           
 17611                           ; BSR set to: 0
 17612                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 17613  006F26  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17614  006F2A  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17615  006F2E  0E0C               	movlw	12
 17616  006F30  6EDF               	movwf	indf2,c
 17617                           
 17618                           ; BSR set to: 0
 17619                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17620  006F32  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17621  006F36  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17622  006F3A  0E00               	movlw	0
 17623  006F3C  8EDB               	bsf	plusw2,7,c
 17624                           
 17625                           ;usb_device.c: 2563: }
 17626  006F3E  0012               	return	
 17627  006F40                     l322:
 17628                           
 17629                           ; BSR set to: 0
 17630                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 17631                           
 17632                           ; BSR set to: 0
 17633  006F40  0E00               	movlw	0
 17634  006F42  6FAA               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 17635                           
 17636                           ; BSR set to: 0
 17637  006F44  0012               	return	
 17638  006F46                     __end_of_USBCtrlTrfOutHandler:
 17639                           	opt stack 0
 17640                           tosu	equ	0xFFF
 17641                           tosh	equ	0xFFE
 17642                           tosl	equ	0xFFD
 17643                           pclath	equ	0xFFA
 17644                           tblptru	equ	0xFF8
 17645                           tblptrh	equ	0xFF7
 17646                           tblptrl	equ	0xFF6
 17647                           tablat	equ	0xFF5
 17648                           prodh	equ	0xFF4
 17649                           prodl	equ	0xFF3
 17650                           intcon	equ	0xFF2
 17651                           intcon2	equ	0xFF1
 17652                           intcon3	equ	0xFF0
 17653                           indf0	equ	0xFEF
 17654                           postinc0	equ	0xFEE
 17655                           fsr0h	equ	0xFEA
 17656                           fsr0l	equ	0xFE9
 17657                           wreg	equ	0xFE8
 17658                           indf1	equ	0xFE7
 17659                           postdec1	equ	0xFE5
 17660                           plusw1	equ	0xFE3
 17661                           fsr1h	equ	0xFE2
 17662                           fsr1l	equ	0xFE1
 17663                           indf2	equ	0xFDF
 17664                           postinc2	equ	0xFDE
 17665                           postdec2	equ	0xFDD
 17666                           plusw2	equ	0xFDB
 17667                           fsr2h	equ	0xFDA
 17668                           fsr2l	equ	0xFD9
 17669                           status	equ	0xFD8
 17670                           
 17671 ;; *************** function _USBCtrlTrfRxService *****************
 17672 ;; Defined at:
 17673 ;;		line 1854 in file "usb_device.c"
 17674 ;; Parameters:    Size  Location     Type
 17675 ;;		None
 17676 ;; Auto vars:     Size  Location     Type
 17677 ;;  byteToRead      1    1[COMRAM] unsigned char 
 17678 ;;  i               1    0[COMRAM] unsigned char 
 17679 ;; Return value:  Size  Location     Type
 17680 ;;                  1    wreg      void 
 17681 ;; Registers used:
 17682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17683 ;; Tracked objects:
 17684 ;;		On entry : 0/0
 17685 ;;		On exit  : 0/0
 17686 ;;		Unchanged: 0/0
 17687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17689 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17691 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17692 ;;Total ram usage:        2 bytes
 17693 ;; Hardware stack levels used:    1
 17694 ;; Hardware stack levels required when called:    1
 17695 ;; This function calls:
 17696 ;;		_USBCtrlEPAllowStatusStage
 17697 ;; This function is called by:
 17698 ;;		_USBCtrlTrfOutHandler
 17699 ;; This function uses a non-reentrant model
 17700 ;;
 17701                           
 17702                           	psect	text84
 17703  004012                     __ptext84:
 17704                           	opt stack 0
 17705  004012                     _USBCtrlTrfRxService:
 17706                           	opt stack 26
 17707                           
 17708                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 17709                           
 17710                           ;incstack = 0
 17711  004012  0100               	movlb	0	; () banked
 17712  004014  EE20 F001          	lfsr	2,1
 17713  004018  5192               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 17714  00401A  26D9               	addwf	fsr2l,f,c
 17715  00401C  5193               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 17716  00401E  22DA               	addwfc	fsr2h,f,c
 17717  004020  50DF               	movf	indf2,w,c
 17718  004022  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 17719                           
 17720                           ; BSR set to: 0
 17721                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 17722  004024  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 17723  004026  0101               	movlb	1	; () banked
 17724  004028  5D35               	subwf	(_outPipes+4)& (0+255),w,b
 17725  00402A  0E00               	movlw	0
 17726  00402C  5936               	subwfb	(_outPipes+5)& (0+255),w,b
 17727  00402E  A0D8               	btfss	status,0,c
 17728                           
 17729                           ; BSR set to: 1
 17730                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 17731  004030  C135  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 17732                           
 17733                           ; BSR set to: 1
 17734                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 17735                           
 17736                           ; BSR set to: 1
 17737  004034  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 17738  004036  5F35               	subwf	(_outPipes+4)& (0+255),f,b
 17739  004038  0E00               	movlw	0
 17740  00403A  5B36               	subwfb	(_outPipes+5)& (0+255),f,b
 17741                           
 17742                           ; BSR set to: 1
 17743                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 17744  00403C  0E00               	movlw	0
 17745  00403E  6E01               	movwf	USBCtrlTrfRxService@i,c
 17746  004040  D011               	goto	l248
 17747  004042                     
 17748                           ; BSR set to: 1
 17749                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 17750                           
 17751                           ; BSR set to: 1
 17752  004042  5001               	movf	USBCtrlTrfRxService@i,w,c
 17753  004044  0D01               	mullw	1
 17754  004046  0E38               	movlw	56
 17755  004048  24F3               	addwf	prodl,w,c
 17756  00404A  6ED9               	movwf	fsr2l,c
 17757  00404C  0E0D               	movlw	13
 17758  00404E  20F4               	addwfc	prodh,w,c
 17759  004050  6EDA               	movwf	fsr2h,c
 17760  004052  C131  FFE1         	movff	_outPipes,fsr1l
 17761  004056  C132  FFE2         	movff	_outPipes+1,fsr1h
 17762  00405A  CFDF FFE7          	movff	indf2,indf1
 17763                           
 17764                           ; BSR set to: 1
 17765  00405E  4B31               	infsnz	_outPipes& (0+255),f,b
 17766  004060  2B32               	incf	(_outPipes+1)& (0+255),f,b
 17767                           
 17768                           ; BSR set to: 1
 17769  004062  2A01               	incf	USBCtrlTrfRxService@i,f,c
 17770  004064                     l248:
 17771                           
 17772                           ; BSR set to: 1
 17773                           
 17774                           ; BSR set to: 1
 17775  004064  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 17776  004066  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 17777  004068  A0D8               	btfss	status,0,c
 17778  00406A  D7EB               	goto	l249
 17779                           
 17780                           ; BSR set to: 1
 17781                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 17782                           
 17783                           ; BSR set to: 1
 17784  00406C  5135               	movf	(_outPipes+4)& (0+255),w,b
 17785  00406E  1136               	iorwf	(_outPipes+5)& (0+255),w,b
 17786  004070  B4D8               	btfsc	status,2,c
 17787  004072  D033               	goto	l251
 17788                           
 17789                           ; BSR set to: 1
 17790                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 17791  004074  0100               	movlb	0	; () banked
 17792  004076  EE20 F001          	lfsr	2,1
 17793  00407A  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17794  00407C  26D9               	addwf	fsr2l,f,c
 17795  00407E  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17796  004080  22DA               	addwfc	fsr2h,f,c
 17797  004082  0E08               	movlw	8
 17798  004084  6EDF               	movwf	indf2,c
 17799                           
 17800                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 17801  004086  EE20 F002          	lfsr	2,2
 17802  00408A  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17803  00408C  26D9               	addwf	fsr2l,f,c
 17804  00408E  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17805  004090  22DA               	addwfc	fsr2h,f,c
 17806  004092  0E38               	movlw	56
 17807  004094  6EDE               	movwf	postinc2,c
 17808  004096  0E0D               	movlw	13
 17809  004098  6EDD               	movwf	postdec2,c
 17810                           
 17811                           ; BSR set to: 0
 17812                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 17813  00409A  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17814  00409E  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17815  0040A2  BCDF               	btfsc	indf2,6,c
 17816  0040A4  D00D               	goto	l252
 17817                           
 17818                           ; BSR set to: 0
 17819                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 17820  0040A6  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17821  0040AA  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17822  0040AE  0E48               	movlw	72
 17823  0040B0  6EDF               	movwf	indf2,c
 17824                           
 17825                           ; BSR set to: 0
 17826                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17827  0040B2  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17828  0040B6  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17829  0040BA  0E00               	movlw	0
 17830  0040BC  8EDB               	bsf	plusw2,7,c
 17831                           
 17832                           ;usb_device.c: 1891: }
 17833  0040BE  0012               	return	
 17834  0040C0                     l252:
 17835                           
 17836                           ; BSR set to: 0
 17837                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 17838                           
 17839                           ; BSR set to: 0
 17840  0040C0  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17841  0040C4  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17842  0040C8  0E08               	movlw	8
 17843  0040CA  6EDF               	movwf	indf2,c
 17844                           
 17845                           ; BSR set to: 0
 17846                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17847  0040CC  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17848  0040D0  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17849  0040D4  0E00               	movlw	0
 17850  0040D6  8EDB               	bsf	plusw2,7,c
 17851                           
 17852                           ; BSR set to: 0
 17853                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 17854  0040D8  0012               	return	
 17855  0040DA                     l251:
 17856                           
 17857                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 17858                           
 17859                           ; BSR set to: 0
 17860  0040DA  0100               	movlb	0	; () banked
 17861  0040DC  EE20 F001          	lfsr	2,1
 17862  0040E0  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17863  0040E2  26D9               	addwf	fsr2l,f,c
 17864  0040E4  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17865  0040E6  22DA               	addwfc	fsr2h,f,c
 17866  0040E8  0E08               	movlw	8
 17867  0040EA  6EDF               	movwf	indf2,c
 17868                           
 17869                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17870  0040EC  EE20 F002          	lfsr	2,2
 17871  0040F0  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17872  0040F2  26D9               	addwf	fsr2l,f,c
 17873  0040F4  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17874  0040F6  22DA               	addwfc	fsr2h,f,c
 17875  0040F8  0E30               	movlw	48
 17876  0040FA  6EDE               	movwf	postinc2,c
 17877  0040FC  0E0D               	movlw	13
 17878  0040FE  6EDD               	movwf	postdec2,c
 17879                           
 17880                           ; BSR set to: 0
 17881                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 17882  004100  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17883  004104  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17884  004108  0E04               	movlw	4
 17885  00410A  6EDF               	movwf	indf2,c
 17886                           
 17887                           ; BSR set to: 0
 17888                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17889  00410C  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17890  004110  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17891  004114  0E00               	movlw	0
 17892  004116  8EDB               	bsf	plusw2,7,c
 17893                           
 17894                           ; BSR set to: 0
 17895                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 17896                           
 17897                           ; BSR set to: 0
 17898  004118  0101               	movlb	1	; () banked
 17899  00411A  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 17900                           
 17901                           ; BSR set to: 1
 17902                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 17903  00411C  0100               	movlb	0	; () banked
 17904  00411E  51A8               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 17905  004120  A4D8               	btfss	status,2,c
 17906  004122  0012               	return	
 17907                           
 17908                           ; BSR set to: 0
 17909                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 17910  004124  ECC1  F029         	call	_USBCtrlEPAllowStatusStage	;wreg free
 17911  004128  0012               	return	
 17912  00412A                     __end_of_USBCtrlTrfRxService:
 17913                           	opt stack 0
 17914                           tosu	equ	0xFFF
 17915                           tosh	equ	0xFFE
 17916                           tosl	equ	0xFFD
 17917                           pclath	equ	0xFFA
 17918                           tblptru	equ	0xFF8
 17919                           tblptrh	equ	0xFF7
 17920                           tblptrl	equ	0xFF6
 17921                           tablat	equ	0xFF5
 17922                           prodh	equ	0xFF4
 17923                           prodl	equ	0xFF3
 17924                           intcon	equ	0xFF2
 17925                           intcon2	equ	0xFF1
 17926                           intcon3	equ	0xFF0
 17927                           indf0	equ	0xFEF
 17928                           postinc0	equ	0xFEE
 17929                           fsr0h	equ	0xFEA
 17930                           fsr0l	equ	0xFE9
 17931                           wreg	equ	0xFE8
 17932                           indf1	equ	0xFE7
 17933                           postdec1	equ	0xFE5
 17934                           plusw1	equ	0xFE3
 17935                           fsr1h	equ	0xFE2
 17936                           fsr1l	equ	0xFE1
 17937                           indf2	equ	0xFDF
 17938                           postinc2	equ	0xFDE
 17939                           postdec2	equ	0xFDD
 17940                           plusw2	equ	0xFDB
 17941                           fsr2h	equ	0xFDA
 17942                           fsr2l	equ	0xFD9
 17943                           status	equ	0xFD8
 17944                           
 17945 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 17946 ;; Defined at:
 17947 ;;		line 1418 in file "usb_device.c"
 17948 ;; Parameters:    Size  Location     Type
 17949 ;;		None
 17950 ;; Auto vars:     Size  Location     Type
 17951 ;;		None
 17952 ;; Return value:  Size  Location     Type
 17953 ;;                  1    wreg      void 
 17954 ;; Registers used:
 17955 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17956 ;; Tracked objects:
 17957 ;;		On entry : 0/0
 17958 ;;		On exit  : 0/0
 17959 ;;		Unchanged: 0/0
 17960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17965 ;;Total ram usage:        0 bytes
 17966 ;; Hardware stack levels used:    1
 17967 ;; This function calls:
 17968 ;;		Nothing
 17969 ;; This function is called by:
 17970 ;;		_USBDeviceTasks
 17971 ;;		_USBCtrlEPServiceComplete
 17972 ;;		_USBCtrlTrfRxService
 17973 ;; This function uses a non-reentrant model
 17974 ;;
 17975                           
 17976                           	psect	text85
 17977  005382                     __ptext85:
 17978                           	opt stack 0
 17979  005382                     _USBCtrlEPAllowStatusStage:
 17980                           	opt stack 26
 17981                           
 17982                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 17983                           
 17984                           ;incstack = 0
 17985  005382  0100               	movlb	0	; () banked
 17986  005384  51A7               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 17987  005386  A4D8               	btfss	status,2,c
 17988  005388  0012               	return	
 17989                           
 17990                           ; BSR set to: 0
 17991                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 17992  00538A  0E01               	movlw	1
 17993  00538C  6FA7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17994                           
 17995                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 17996  00538E  51A6               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 17997  005390  A4D8               	btfss	status,2,c
 17998  005392  0012               	return	
 17999                           
 18000                           ; BSR set to: 0
 18001                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 18002  005394  0E01               	movlw	1
 18003  005396  6FA6               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 18004                           
 18005                           ; BSR set to: 0
 18006                           ;usb_device.c: 1434: if(controlTransferState == 2)
 18007  005398  0E02               	movlw	2
 18008  00539A  19AE               	xorwf	_controlTransferState& (0+255),w,b
 18009  00539C  A4D8               	btfss	status,2,c
 18010  00539E  D015               	goto	l202
 18011                           
 18012                           ; BSR set to: 0
 18013                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 18014  0053A0  EE20 F001          	lfsr	2,1
 18015  0053A4  516C               	movf	_pBDTEntryIn& (0+255),w,b
 18016  0053A6  26D9               	addwf	fsr2l,f,c
 18017  0053A8  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18018  0053AA  22DA               	addwfc	fsr2h,f,c
 18019  0053AC  0E00               	movlw	0
 18020  0053AE  6EDF               	movwf	indf2,c
 18021                           
 18022                           ; BSR set to: 0
 18023                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 18024  0053B0  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 18025  0053B4  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18026  0053B8  0E48               	movlw	72
 18027  0053BA  6EDF               	movwf	indf2,c
 18028                           
 18029                           ; BSR set to: 0
 18030                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18031  0053BC  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 18032  0053C0  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18033  0053C4  0E00               	movlw	0
 18034  0053C6  8EDB               	bsf	plusw2,7,c
 18035                           
 18036                           ;usb_device.c: 1439: }
 18037  0053C8  0012               	return	
 18038  0053CA                     l202:
 18039                           
 18040                           ; BSR set to: 0
 18041                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 18042                           
 18043                           ; BSR set to: 0
 18044  0053CA  05AE               	decf	_controlTransferState& (0+255),w,b
 18045  0053CC  A4D8               	btfss	status,2,c
 18046  0053CE  0012               	return	
 18047                           
 18048                           ; BSR set to: 0
 18049                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 18050  0053D0  0E00               	movlw	0
 18051  0053D2  6FAA               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 18052                           
 18053                           ; BSR set to: 0
 18054                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 18055  0053D4  EE20 F001          	lfsr	2,1
 18056  0053D8  5192               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 18057  0053DA  26D9               	addwf	fsr2l,f,c
 18058  0053DC  5193               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 18059  0053DE  22DA               	addwfc	fsr2h,f,c
 18060  0053E0  0E08               	movlw	8
 18061  0053E2  6EDF               	movwf	indf2,c
 18062                           
 18063                           ; BSR set to: 0
 18064                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 18065  0053E4  EE20 F002          	lfsr	2,2
 18066  0053E8  5192               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 18067  0053EA  26D9               	addwf	fsr2l,f,c
 18068  0053EC  5193               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 18069  0053EE  22DA               	addwfc	fsr2h,f,c
 18070  0053F0  0E30               	movlw	48
 18071  0053F2  6EDE               	movwf	postinc2,c
 18072  0053F4  0E0D               	movlw	13
 18073  0053F6  6EDD               	movwf	postdec2,c
 18074                           
 18075                           ; BSR set to: 0
 18076                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 18077  0053F8  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18078  0053FC  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18079  005400  0E04               	movlw	4
 18080  005402  6EDF               	movwf	indf2,c
 18081                           
 18082                           ; BSR set to: 0
 18083                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 18084  005404  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 18085  005408  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 18086  00540C  0E00               	movlw	0
 18087  00540E  8EDB               	bsf	plusw2,7,c
 18088                           
 18089                           ; BSR set to: 0
 18090                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 18091  005410  0E01               	movlw	1
 18092  005412  6FAA               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 18093                           
 18094                           ; BSR set to: 0
 18095                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 18096  005414  EE20 F001          	lfsr	2,1
 18097  005418  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18098  00541A  26D9               	addwf	fsr2l,f,c
 18099  00541C  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18100  00541E  22DA               	addwfc	fsr2h,f,c
 18101  005420  0E08               	movlw	8
 18102  005422  6EDF               	movwf	indf2,c
 18103                           
 18104                           ; BSR set to: 0
 18105                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18106  005424  EE20 F002          	lfsr	2,2
 18107  005428  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18108  00542A  26D9               	addwf	fsr2l,f,c
 18109  00542C  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18110  00542E  22DA               	addwfc	fsr2h,f,c
 18111  005430  0E30               	movlw	48
 18112  005432  6EDE               	movwf	postinc2,c
 18113  005434  0E0D               	movlw	13
 18114  005436  6EDD               	movwf	postdec2,c
 18115                           
 18116                           ; BSR set to: 0
 18117                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 18118  005438  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18119  00543C  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18120  005440  0E80               	movlw	128
 18121  005442  6EDF               	movwf	indf2,c
 18122                           
 18123                           ; BSR set to: 0
 18124                           
 18125                           ; BSR set to: 0
 18126                           
 18127                           ; BSR set to: 0
 18128  005444  0012               	return	
 18129  005446                     __end_of_USBCtrlEPAllowStatusStage:
 18130                           	opt stack 0
 18131                           tosu	equ	0xFFF
 18132                           tosh	equ	0xFFE
 18133                           tosl	equ	0xFFD
 18134                           pclath	equ	0xFFA
 18135                           tblptru	equ	0xFF8
 18136                           tblptrh	equ	0xFF7
 18137                           tblptrl	equ	0xFF6
 18138                           tablat	equ	0xFF5
 18139                           prodh	equ	0xFF4
 18140                           prodl	equ	0xFF3
 18141                           intcon	equ	0xFF2
 18142                           intcon2	equ	0xFF1
 18143                           intcon3	equ	0xFF0
 18144                           indf0	equ	0xFEF
 18145                           postinc0	equ	0xFEE
 18146                           fsr0h	equ	0xFEA
 18147                           fsr0l	equ	0xFE9
 18148                           wreg	equ	0xFE8
 18149                           indf1	equ	0xFE7
 18150                           postdec1	equ	0xFE5
 18151                           plusw1	equ	0xFE3
 18152                           fsr1h	equ	0xFE2
 18153                           fsr1l	equ	0xFE1
 18154                           indf2	equ	0xFDF
 18155                           postinc2	equ	0xFDE
 18156                           postdec2	equ	0xFDD
 18157                           plusw2	equ	0xFDB
 18158                           fsr2h	equ	0xFDA
 18159                           fsr2l	equ	0xFD9
 18160                           status	equ	0xFD8
 18161                           
 18162 ;; *************** function _USBCtrlTrfInHandler *****************
 18163 ;; Defined at:
 18164 ;;		line 2594 in file "usb_device.c"
 18165 ;; Parameters:    Size  Location     Type
 18166 ;;		None
 18167 ;; Auto vars:     Size  Location     Type
 18168 ;;  lastDTS         1    1[COMRAM] unsigned char 
 18169 ;; Return value:  Size  Location     Type
 18170 ;;                  1    wreg      void 
 18171 ;; Registers used:
 18172 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18173 ;; Tracked objects:
 18174 ;;		On entry : 0/0
 18175 ;;		On exit  : 0/0
 18176 ;;		Unchanged: 0/0
 18177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18179 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18181 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18182 ;;Total ram usage:        1 bytes
 18183 ;; Hardware stack levels used:    1
 18184 ;; Hardware stack levels required when called:    1
 18185 ;; This function calls:
 18186 ;;		_USBCtrlTrfTxService
 18187 ;; This function is called by:
 18188 ;;		_USBCtrlEPService
 18189 ;; This function uses a non-reentrant model
 18190 ;;
 18191                           
 18192                           	psect	text86
 18193  0052BA                     __ptext86:
 18194                           	opt stack 0
 18195  0052BA                     _USBCtrlTrfInHandler:
 18196                           	opt stack 27
 18197                           
 18198                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 18199                           
 18200                           ; BSR set to: 0
 18201                           ;incstack = 0
 18202  0052BA  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 18203  0052BE  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18204  0052C2  0100               	movlb	0	; () banked
 18205  0052C4  0E00               	movlw	0
 18206  0052C6  BCDF               	btfsc	indf2,6,c
 18207  0052C8  0E01               	movlw	1
 18208  0052CA  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 18209                           
 18210                           ; BSR set to: 0
 18211                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 18212  0052CC  0E04               	movlw	4
 18213  0052CE  196C               	xorwf	_pBDTEntryIn& (0+255),w,b
 18214  0052D0  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 18215  0052D2  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18216  0052D4  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 18217                           
 18218                           ; BSR set to: 0
 18219                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 18220  0052D6  0E08               	movlw	8
 18221  0052D8  19B0               	xorwf	_USBDeviceState& (0+255),w,b
 18222  0052DA  A4D8               	btfss	status,2,c
 18223  0052DC  D00D               	goto	l329
 18224                           
 18225                           ; BSR set to: 0
 18226                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 18227  0052DE  010D               	movlb	13	; () banked
 18228  0052E0  5132               	movf	50,w,b	;volatile
 18229  0052E2  0B7F               	andlw	127
 18230  0052E4  010F               	movlb	15	; () banked
 18231  0052E6  6F38               	movwf	56,b	;volatile
 18232                           
 18233                           ; BSR set to: 15
 18234                           ;usb_device.c: 2609: if(UADDR != 0u)
 18235  0052E8  5138               	movf	56,w,b	;volatile
 18236  0052EA  B4D8               	btfsc	status,2,c
 18237  0052EC  D002               	goto	l328
 18238                           
 18239                           ; BSR set to: 15
 18240                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 18241  0052EE  0E10               	movlw	16
 18242  0052F0  D001               	goto	L15
 18243  0052F2                     l328:
 18244                           
 18245                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 18246                           
 18247                           ; BSR set to: 0
 18248  0052F2  0E04               	movlw	4
 18249  0052F4                     L15:
 18250  0052F4  0100               	movlb	0	; () banked
 18251  0052F6  6FB0               	movwf	_USBDeviceState& (0+255),b
 18252  0052F8                     l329:
 18253                           
 18254                           ; BSR set to: 0
 18255                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 18256                           
 18257                           ; BSR set to: 0
 18258                           
 18259                           ; BSR set to: 0
 18260  0052F8  05AE               	decf	_controlTransferState& (0+255),w,b
 18261  0052FA  A4D8               	btfss	status,2,c
 18262  0052FC  D03B               	goto	l330
 18263                           
 18264                           ; BSR set to: 0
 18265                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 18266  0052FE  EE20 F002          	lfsr	2,2
 18267  005302  516C               	movf	_pBDTEntryIn& (0+255),w,b
 18268  005304  26D9               	addwf	fsr2l,f,c
 18269  005306  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18270  005308  22DA               	addwfc	fsr2h,f,c
 18271  00530A  0E38               	movlw	56
 18272  00530C  6EDE               	movwf	postinc2,c
 18273  00530E  0E0D               	movlw	13
 18274  005310  6EDD               	movwf	postdec2,c
 18275                           
 18276                           ; BSR set to: 0
 18277                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 18278  005312  ECF7  F028         	call	_USBCtrlTrfTxService	;wreg free
 18279                           
 18280                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 18281  005316  0E02               	movlw	2
 18282  005318  0100               	movlb	0	; () banked
 18283  00531A  19AF               	xorwf	_shortPacketStatus& (0+255),w,b
 18284  00531C  A4D8               	btfss	status,2,c
 18285  00531E  D00D               	goto	l331
 18286                           
 18287                           ; BSR set to: 0
 18288                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 18289  005320  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 18290  005324  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18291  005328  0E04               	movlw	4
 18292  00532A  6EDF               	movwf	indf2,c
 18293                           
 18294                           ; BSR set to: 0
 18295                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18296  00532C  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 18297  005330  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18298  005334  0E00               	movlw	0
 18299  005336  8EDB               	bsf	plusw2,7,c
 18300                           
 18301                           ;usb_device.c: 2635: }
 18302  005338  0012               	return	
 18303  00533A                     l331:
 18304                           
 18305                           ; BSR set to: 0
 18306                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 18307                           
 18308                           ; BSR set to: 0
 18309  00533A  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 18310  00533C  A4D8               	btfss	status,2,c
 18311  00533E  D00D               	goto	l333
 18312                           
 18313                           ; BSR set to: 0
 18314                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 18315  005340  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 18316  005344  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18317  005348  0E48               	movlw	72
 18318  00534A  6EDF               	movwf	indf2,c
 18319                           
 18320                           ; BSR set to: 0
 18321                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18322  00534C  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 18323  005350  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18324  005354  0E00               	movlw	0
 18325  005356  8EDB               	bsf	plusw2,7,c
 18326                           
 18327                           ;usb_device.c: 2642: }
 18328  005358  0012               	return	
 18329  00535A                     l333:
 18330                           
 18331                           ; BSR set to: 0
 18332                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 18333                           
 18334                           ; BSR set to: 0
 18335  00535A  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 18336  00535E  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18337  005362  0E08               	movlw	8
 18338  005364  6EDF               	movwf	indf2,c
 18339                           
 18340                           ; BSR set to: 0
 18341                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18342  005366  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 18343  00536A  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18344  00536E  0E00               	movlw	0
 18345  005370  8EDB               	bsf	plusw2,7,c
 18346                           
 18347                           ; BSR set to: 0
 18348                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 18349                           
 18350                           ; BSR set to: 0
 18351  005372  0012               	return	
 18352  005374                     l330:
 18353                           
 18354                           ; BSR set to: 0
 18355                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 18356  005374  0101               	movlb	1	; () banked
 18357  005376  BF34               	btfsc	(_outPipes+3)& (0+255),7,b
 18358                           
 18359                           ; BSR set to: 1
 18360                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 18361                           
 18362                           ; BSR set to: 1
 18363  005378  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 18364                           
 18365                           ; BSR set to: 1
 18366                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 18367                           
 18368                           ; BSR set to: 1
 18369  00537A  0E00               	movlw	0
 18370  00537C  0100               	movlb	0	; () banked
 18371  00537E  6FAE               	movwf	_controlTransferState& (0+255),b
 18372  005380  0012               	return	
 18373  005382                     __end_of_USBCtrlTrfInHandler:
 18374                           	opt stack 0
 18375                           tosu	equ	0xFFF
 18376                           tosh	equ	0xFFE
 18377                           tosl	equ	0xFFD
 18378                           pclath	equ	0xFFA
 18379                           tblptru	equ	0xFF8
 18380                           tblptrh	equ	0xFF7
 18381                           tblptrl	equ	0xFF6
 18382                           tablat	equ	0xFF5
 18383                           prodh	equ	0xFF4
 18384                           prodl	equ	0xFF3
 18385                           intcon	equ	0xFF2
 18386                           intcon2	equ	0xFF1
 18387                           intcon3	equ	0xFF0
 18388                           indf0	equ	0xFEF
 18389                           postinc0	equ	0xFEE
 18390                           fsr0h	equ	0xFEA
 18391                           fsr0l	equ	0xFE9
 18392                           wreg	equ	0xFE8
 18393                           indf1	equ	0xFE7
 18394                           postdec1	equ	0xFE5
 18395                           plusw1	equ	0xFE3
 18396                           fsr1h	equ	0xFE2
 18397                           fsr1l	equ	0xFE1
 18398                           indf2	equ	0xFDF
 18399                           postinc2	equ	0xFDE
 18400                           postdec2	equ	0xFDD
 18401                           plusw2	equ	0xFDB
 18402                           fsr2h	equ	0xFDA
 18403                           fsr2l	equ	0xFD9
 18404                           status	equ	0xFD8
 18405                           
 18406 ;; *************** function _USBCtrlTrfTxService *****************
 18407 ;; Defined at:
 18408 ;;		line 1773 in file "usb_device.c"
 18409 ;; Parameters:    Size  Location     Type
 18410 ;;		None
 18411 ;; Auto vars:     Size  Location     Type
 18412 ;;  byteToSend      1    0[COMRAM] unsigned char 
 18413 ;; Return value:  Size  Location     Type
 18414 ;;                  1    wreg      void 
 18415 ;; Registers used:
 18416 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 18417 ;; Tracked objects:
 18418 ;;		On entry : 0/0
 18419 ;;		On exit  : 0/0
 18420 ;;		Unchanged: 0/0
 18421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18423 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18425 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18426 ;;Total ram usage:        1 bytes
 18427 ;; Hardware stack levels used:    1
 18428 ;; This function calls:
 18429 ;;		Nothing
 18430 ;; This function is called by:
 18431 ;;		_USBCtrlEPAllowDataStage
 18432 ;;		_USBCtrlTrfInHandler
 18433 ;; This function uses a non-reentrant model
 18434 ;;
 18435                           
 18436                           	psect	text87
 18437  0051EE                     __ptext87:
 18438                           	opt stack 0
 18439  0051EE                     _USBCtrlTrfTxService:
 18440                           	opt stack 25
 18441                           
 18442                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 18443                           
 18444                           ; BSR set to: 0
 18445                           ;incstack = 0
 18446  0051EE  0E08               	movlw	8
 18447  0051F0  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 18448                           
 18449                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 18450  0051F2  0100               	movlb	0	; () banked
 18451  0051F4  516B               	movf	(_inPipes+5)& (0+255),w,b
 18452  0051F6  E110               	bnz	l10627
 18453  0051F8  0E08               	movlw	8
 18454  0051FA  5D6A               	subwf	(_inPipes+4)& (0+255),w,b
 18455  0051FC  B0D8               	btfsc	status,0,c
 18456  0051FE  D00C               	goto	l235
 18457                           
 18458                           ; BSR set to: 0
 18459                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 18460  005200  C06A  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 18461                           
 18462                           ; BSR set to: 0
 18463                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 18464  005204  51AF               	movf	_shortPacketStatus& (0+255),w,b
 18465  005206  A4D8               	btfss	status,2,c
 18466  005208  D002               	goto	l233
 18467                           
 18468                           ; BSR set to: 0
 18469                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 18470  00520A  0E01               	movlw	1
 18471  00520C  D004               	goto	L16
 18472  00520E                     l233:
 18473                           
 18474                           ; BSR set to: 0
 18475                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 18476                           
 18477                           ; BSR set to: 0
 18478  00520E  05AF               	decf	_shortPacketStatus& (0+255),w,b
 18479  005210  A4D8               	btfss	status,2,c
 18480  005212  D002               	goto	l235
 18481                           
 18482                           ; BSR set to: 0
 18483                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 18484  005214  0E02               	movlw	2
 18485  005216                     L16:
 18486  005216  6FAF               	movwf	_shortPacketStatus& (0+255),b
 18487  005218                     l235:
 18488  005218                     l10627:
 18489                           
 18490                           ; BSR set to: 0
 18491                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 18492  005218  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18493  00521A  5F6A               	subwf	(_inPipes+4)& (0+255),f,b
 18494  00521C  0E00               	movlw	0
 18495  00521E  5B6B               	subwfb	(_inPipes+5)& (0+255),f,b
 18496                           
 18497                           ; BSR set to: 0
 18498                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 18499  005220  EE20 F001          	lfsr	2,1
 18500  005224  516C               	movf	_pBDTEntryIn& (0+255),w,b
 18501  005226  26D9               	addwf	fsr2l,f,c
 18502  005228  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18503  00522A  22DA               	addwfc	fsr2h,f,c
 18504  00522C  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 18505                           
 18506                           ; BSR set to: 0
 18507                           ;usb_device.c: 1810: pDst = ( uint8_t*)CtrlTrfData;
 18508  005230  0E38               	movlw	56
 18509  005232  6F8E               	movwf	_pDst& (0+255),b
 18510  005234  0E0D               	movlw	13
 18511  005236  6F8F               	movwf	(_pDst+1)& (0+255),b
 18512                           
 18513                           ; BSR set to: 0
 18514                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 18515  005238  A169               	btfss	(_inPipes+3)& (0+255),0,b
 18516  00523A  D01C               	goto	l237
 18517  00523C  D03A               	goto	l241
 18518  00523E                     
 18519                           ; BSR set to: 0
 18520                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 18521                           
 18522                           ; BSR set to: 0
 18523  00523E  C066  FFF6         	movff	_inPipes,tblptrl
 18524  005242  C067  FFF7         	movff	_inPipes+1,tblptrh
 18525  005246  6AF8               	clrf	tblptru,c
 18526  005248  C08E  FFD9         	movff	_pDst,fsr2l
 18527  00524C  C08F  FFDA         	movff	_pDst+1,fsr2h
 18528  005250  0E0E               	movlw	(high __ramtop+-1)
 18529  005252  64F7               	cpfsgt	tblptrh,c
 18530  005254  D003               	bra	u7397
 18531  005256  0008               	tblrd		*
 18532  005258  50F5               	movf	tablat,w,c
 18533  00525A  D005               	bra	u7390
 18534  00525C                     u7397:
 18535  00525C  CFF6 FFE9          	movff	tblptrl,fsr0l
 18536  005260  CFF7 FFEA          	movff	tblptrh,fsr0h
 18537  005264  50EF               	movf	indf0,w,c
 18538  005266                     u7390:
 18539  005266  6EDF               	movwf	indf2,c
 18540  005268  0100               	movlb	0	; () banked
 18541  00526A  4B66               	infsnz	_inPipes& (0+255),f,b
 18542  00526C  2B67               	incf	(_inPipes+1)& (0+255),f,b
 18543                           
 18544                           ; BSR set to: 0
 18545  00526E  4B8E               	infsnz	_pDst& (0+255),f,b
 18546  005270  2B8F               	incf	(_pDst+1)& (0+255),f,b
 18547                           
 18548                           ; BSR set to: 0
 18549                           ;usb_device.c: 1816: byteToSend--;
 18550  005272  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 18551  005274                     l237:
 18552                           
 18553                           ; BSR set to: 0
 18554                           
 18555                           ; BSR set to: 0
 18556  005274  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18557  005276  B4D8               	btfsc	status,2,c
 18558  005278  0012               	return	
 18559  00527A  D7E1               	goto	l238
 18560  00527C                     
 18561                           ; BSR set to: 0
 18562                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 18563                           
 18564                           ; BSR set to: 0
 18565  00527C  C066  FFF6         	movff	_inPipes,tblptrl
 18566  005280  C067  FFF7         	movff	_inPipes+1,tblptrh
 18567  005284  6AF8               	clrf	tblptru,c
 18568  005286  C08E  FFD9         	movff	_pDst,fsr2l
 18569  00528A  C08F  FFDA         	movff	_pDst+1,fsr2h
 18570  00528E  0E0E               	movlw	(high __ramtop+-1)
 18571  005290  64F7               	cpfsgt	tblptrh,c
 18572  005292  D003               	bra	u7417
 18573  005294  0008               	tblrd		*
 18574  005296  50F5               	movf	tablat,w,c
 18575  005298  D005               	bra	u7410
 18576  00529A                     u7417:
 18577  00529A  CFF6 FFE9          	movff	tblptrl,fsr0l
 18578  00529E  CFF7 FFEA          	movff	tblptrh,fsr0h
 18579  0052A2  50EF               	movf	indf0,w,c
 18580  0052A4                     u7410:
 18581  0052A4  6EDF               	movwf	indf2,c
 18582  0052A6  0100               	movlb	0	; () banked
 18583  0052A8  4B66               	infsnz	_inPipes& (0+255),f,b
 18584  0052AA  2B67               	incf	(_inPipes+1)& (0+255),f,b
 18585                           
 18586                           ; BSR set to: 0
 18587  0052AC  4B8E               	infsnz	_pDst& (0+255),f,b
 18588  0052AE  2B8F               	incf	(_pDst+1)& (0+255),f,b
 18589                           
 18590                           ; BSR set to: 0
 18591                           ;usb_device.c: 1824: byteToSend--;
 18592  0052B0  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 18593  0052B2                     l241:
 18594                           
 18595                           ; BSR set to: 0
 18596                           
 18597                           ; BSR set to: 0
 18598  0052B2  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 18599  0052B4  B4D8               	btfsc	status,2,c
 18600  0052B6  0012               	return	
 18601  0052B8  D7E1               	goto	l242
 18602  0052BA                     __end_of_USBCtrlTrfTxService:
 18603                           	opt stack 0
 18604                           tosu	equ	0xFFF
 18605                           tosh	equ	0xFFE
 18606                           tosl	equ	0xFFD
 18607                           pclath	equ	0xFFA
 18608                           tblptru	equ	0xFF8
 18609                           tblptrh	equ	0xFF7
 18610                           tblptrl	equ	0xFF6
 18611                           tablat	equ	0xFF5
 18612                           prodh	equ	0xFF4
 18613                           prodl	equ	0xFF3
 18614                           intcon	equ	0xFF2
 18615                           intcon2	equ	0xFF1
 18616                           intcon3	equ	0xFF0
 18617                           indf0	equ	0xFEF
 18618                           postinc0	equ	0xFEE
 18619                           fsr0h	equ	0xFEA
 18620                           fsr0l	equ	0xFE9
 18621                           wreg	equ	0xFE8
 18622                           indf1	equ	0xFE7
 18623                           postdec1	equ	0xFE5
 18624                           plusw1	equ	0xFE3
 18625                           fsr1h	equ	0xFE2
 18626                           fsr1l	equ	0xFE1
 18627                           indf2	equ	0xFDF
 18628                           postinc2	equ	0xFDE
 18629                           postdec2	equ	0xFDD
 18630                           plusw2	equ	0xFDB
 18631                           fsr2h	equ	0xFDA
 18632                           fsr2l	equ	0xFD9
 18633                           status	equ	0xFD8
 18634                           
 18635 ;; *************** function _APP_DeviceMSDTasks *****************
 18636 ;; Defined at:
 18637 ;;		line 110 in file "app_device_msd.c"
 18638 ;; Parameters:    Size  Location     Type
 18639 ;;		None
 18640 ;; Auto vars:     Size  Location     Type
 18641 ;;		None
 18642 ;; Return value:  Size  Location     Type
 18643 ;;                  1    wreg      void 
 18644 ;; Registers used:
 18645 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18646 ;; Tracked objects:
 18647 ;;		On entry : 0/0
 18648 ;;		On exit  : 0/0
 18649 ;;		Unchanged: 0/0
 18650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18655 ;;Total ram usage:        0 bytes
 18656 ;; Hardware stack levels used:    1
 18657 ;; Hardware stack levels required when called:   11
 18658 ;; This function calls:
 18659 ;;		_MSDTasks
 18660 ;; This function is called by:
 18661 ;;		_main
 18662 ;; This function uses a non-reentrant model
 18663 ;;
 18664                           
 18665                           	psect	text88
 18666  007F68                     __ptext88:
 18667                           	opt stack 0
 18668  007F68                     _APP_DeviceMSDTasks:
 18669                           	opt stack 19
 18670                           
 18671                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 18672                           
 18673                           ; BSR set to: 0
 18674                           ;incstack = 0
 18675  007F68  0E20               	movlw	32
 18676  007F6A  0100               	movlb	0	; () banked
 18677  007F6C  61B0               	cpfslt	_USBDeviceState& (0+255),b
 18678  007F6E  D001               	goto	l1005
 18679  007F70  0012               	return	
 18680  007F72                     l1005:
 18681                           
 18682                           ; BSR set to: 0
 18683                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 18684  007F72  B265               	btfsc	3941,1,c	;volatile
 18685  007F74  0012               	return	
 18686                           
 18687                           ; BSR set to: 0
 18688                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 18689                           
 18690                           ; BSR set to: 0
 18691                           
 18692                           ; BSR set to: 0
 18693                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 18694  007F76  EC4E  F00E         	call	_MSDTasks	;wreg free
 18695  007F7A  0012               	return		;funcret
 18696  007F7C                     __end_of_APP_DeviceMSDTasks:
 18697                           	opt stack 0
 18698                           tosu	equ	0xFFF
 18699                           tosh	equ	0xFFE
 18700                           tosl	equ	0xFFD
 18701                           pclath	equ	0xFFA
 18702                           tblptru	equ	0xFF8
 18703                           tblptrh	equ	0xFF7
 18704                           tblptrl	equ	0xFF6
 18705                           tablat	equ	0xFF5
 18706                           prodh	equ	0xFF4
 18707                           prodl	equ	0xFF3
 18708                           intcon	equ	0xFF2
 18709                           intcon2	equ	0xFF1
 18710                           intcon3	equ	0xFF0
 18711                           indf0	equ	0xFEF
 18712                           postinc0	equ	0xFEE
 18713                           fsr0h	equ	0xFEA
 18714                           fsr0l	equ	0xFE9
 18715                           wreg	equ	0xFE8
 18716                           indf1	equ	0xFE7
 18717                           postdec1	equ	0xFE5
 18718                           plusw1	equ	0xFE3
 18719                           fsr1h	equ	0xFE2
 18720                           fsr1l	equ	0xFE1
 18721                           indf2	equ	0xFDF
 18722                           postinc2	equ	0xFDE
 18723                           postdec2	equ	0xFDD
 18724                           plusw2	equ	0xFDB
 18725                           fsr2h	equ	0xFDA
 18726                           fsr2l	equ	0xFD9
 18727                           status	equ	0xFD8
 18728                           
 18729 ;; *************** function _MSDTasks *****************
 18730 ;; Defined at:
 18731 ;;		line 335 in file "usb_device_msd.c"
 18732 ;; Parameters:    Size  Location     Type
 18733 ;;		None
 18734 ;; Auto vars:     Size  Location     Type
 18735 ;;  i               1   81[COMRAM] unsigned char 
 18736 ;; Return value:  Size  Location     Type
 18737 ;;                  1    wreg      unsigned char 
 18738 ;; Registers used:
 18739 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18740 ;; Tracked objects:
 18741 ;;		On entry : 0/0
 18742 ;;		On exit  : 0/0
 18743 ;;		Unchanged: 0/0
 18744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18746 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18747 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18748 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18749 ;;Total ram usage:        6 bytes
 18750 ;; Hardware stack levels used:    1
 18751 ;; Hardware stack levels required when called:   10
 18752 ;; This function calls:
 18753 ;;		_MSDProcessCommand
 18754 ;;		_USBStallEndpoint
 18755 ;;		_USBTransferOnePacket
 18756 ;; This function is called by:
 18757 ;;		_APP_DeviceMSDTasks
 18758 ;; This function uses a non-reentrant model
 18759 ;;
 18760                           
 18761                           	psect	text89
 18762  001C9C                     __ptext89:
 18763                           	opt stack 0
 18764  001C9C                     _MSDTasks:
 18765                           	opt stack 19
 18766                           
 18767                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 18768                           
 18769                           ;incstack = 0
 18770  001C9C  0E20               	movlw	32
 18771  001C9E  0100               	movlb	0	; () banked
 18772  001CA0  19B0               	xorwf	_USBDeviceState& (0+255),w,b
 18773  001CA2  A4D8               	btfss	status,2,c
 18774  001CA4  0012               	return	
 18775  001CA6  D117               	goto	l554
 18776  001CA8                     
 18777                           ; BSR set to: 0
 18778                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 18779                           
 18780                           ; BSR set to: 0
 18781  001CA8  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 18782  001CAA  118B               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 18783  001CAC  B4D8               	btfsc	status,2,c
 18784  001CAE  D006               	goto	u10670
 18785                           
 18786                           ; BSR set to: 0
 18787  001CB0  C08A  FFD9         	movff	_USBMSDOutHandle,fsr2l
 18788  001CB4  C08B  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 18789  001CB8  BEDF               	btfsc	indf2,7,c
 18790  001CBA  0012               	return	
 18791  001CBC                     u10670:
 18792                           
 18793                           ; BSR set to: 0
 18794                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 18795                           
 18796                           ; BSR set to: 0
 18797  001CBC  0E00               	movlw	0
 18798  001CBE  6E52               	movwf	MSDTasks@i,c
 18799  001CC0                     l13863:
 18800                           
 18801                           ; BSR set to: 0
 18802  001CC0  0E1E               	movlw	30
 18803  001CC2  6452               	cpfsgt	MSDTasks@i,c
 18804  001CC4  D001               	goto	l559
 18805  001CC6  D014               	goto	u10690
 18806  001CC8                     l559:
 18807                           
 18808                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 18809                           
 18810                           ; BSR set to: 0
 18811  001CC8  5052               	movf	MSDTasks@i,w,c
 18812  001CCA  0D01               	mullw	1
 18813  001CCC  0E40               	movlw	64
 18814  001CCE  24F3               	addwf	prodl,w,c
 18815  001CD0  6ED9               	movwf	fsr2l,c
 18816  001CD2  0E0D               	movlw	13
 18817  001CD4  20F4               	addwfc	prodh,w,c
 18818  001CD6  6EDA               	movwf	fsr2h,c
 18819  001CD8  5052               	movf	MSDTasks@i,w,c
 18820  001CDA  0D01               	mullw	1
 18821  001CDC  0E00               	movlw	low _gblCBW
 18822  001CDE  24F3               	addwf	prodl,w,c
 18823  001CE0  6EE1               	movwf	fsr1l,c
 18824  001CE2  0E01               	movlw	high _gblCBW
 18825  001CE4  20F4               	addwfc	prodh,w,c
 18826  001CE6  6EE2               	movwf	fsr1h,c
 18827  001CE8  CFDF FFE7          	movff	indf2,indf1
 18828  001CEC  2A52               	incf	MSDTasks@i,f,c
 18829  001CEE  D7E8               	goto	l13863
 18830  001CF0                     u10690:
 18831                           
 18832                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 18833  001CF0  0100               	movlb	0	; () banked
 18834  001CF2  EE20 F001          	lfsr	2,1
 18835  001CF6  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 18836  001CF8  26D9               	addwf	fsr2l,f,c
 18837  001CFA  518B               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 18838  001CFC  22DA               	addwfc	fsr2h,f,c
 18839  001CFE  0E1F               	movlw	31
 18840  001D00  18DE               	xorwf	postinc2,w,c
 18841  001D02  A4D8               	btfss	status,2,c
 18842  001D04  D072               	goto	l561
 18843                           
 18844                           ; BSR set to: 0
 18845  001D06  0E55               	movlw	85
 18846  001D08  0101               	movlb	1	; () banked
 18847  001D0A  1900               	xorwf	_gblCBW& (0+255),w,b
 18848  001D0C  E16E               	bnz	l561
 18849  001D0E  0E53               	movlw	83
 18850  001D10  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 18851  001D12  E16B               	bnz	l561
 18852  001D14  0E42               	movlw	66
 18853  001D16  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 18854  001D18  E168               	bnz	l561
 18855  001D1A  0E43               	movlw	67
 18856  001D1C  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 18857  001D1E  A4D8               	btfss	status,2,c
 18858  001D20  D064               	goto	l561
 18859                           
 18860                           ; BSR set to: 1
 18861                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 18862  001D22  0E01               	movlw	1
 18863  001D24  0100               	movlb	0	; () banked
 18864  001D26  6F9A               	movwf	_MSDCBWValid& (0+255),b
 18865                           
 18866                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 18867  001D28  0101               	movlb	1	; () banked
 18868  001D2A  510D               	movf	(_gblCBW+13)& (0+255),w,b
 18869  001D2C  A4D8               	btfss	status,2,c
 18870  001D2E  D052               	goto	l562
 18871                           
 18872                           ; BSR set to: 1
 18873  001D30  0E11               	movlw	17
 18874  001D32  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 18875  001D34  D04F               	goto	l562
 18876                           
 18877                           ; BSR set to: 1
 18878  001D36  510E               	movf	(_gblCBW+14)& (0+255),w,b
 18879  001D38  B4D8               	btfsc	status,2,c
 18880  001D3A  D04C               	goto	l562
 18881                           
 18882                           ; BSR set to: 1
 18883  001D3C  C10C  F04D         	movff	_gblCBW+12,??_MSDTasks
 18884  001D40  0E3F               	movlw	63
 18885  001D42  164D               	andwf	??_MSDTasks,f,c
 18886  001D44  A4D8               	btfss	status,2,c
 18887  001D46  D046               	goto	l562
 18888                           
 18889                           ; BSR set to: 1
 18890                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 18891  001D48  0E55               	movlw	85
 18892  001D4A  010D               	movlb	13	; () banked
 18893  001D4C  6F80               	movwf	128,b	;volatile
 18894  001D4E  0E53               	movlw	83
 18895  001D50  6F81               	movwf	129,b	;volatile
 18896  001D52  0E42               	movlw	66
 18897  001D54  6F82               	movwf	130,b	;volatile
 18898  001D56  0E53               	movlw	83
 18899  001D58  6F83               	movwf	131,b	;volatile
 18900                           
 18901                           ; BSR set to: 13
 18902                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 18903  001D5A  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 18904  001D5E  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 18905  001D62  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 18906  001D66  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 18907                           
 18908                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 18909  001D6A  0E00               	movlw	0
 18910  001D6C  6F88               	movwf	136,b	;volatile
 18911  001D6E  0E00               	movlw	0
 18912  001D70  6F89               	movwf	137,b	;volatile
 18913  001D72  0E00               	movlw	0
 18914  001D74  6F8A               	movwf	138,b	;volatile
 18915  001D76  0E00               	movlw	0
 18916  001D78  6F8B               	movwf	139,b	;volatile
 18917                           
 18918                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 18919  001D7A  0E00               	movlw	0
 18920  001D7C  6F8C               	movwf	140,b	;volatile
 18921                           
 18922                           ; BSR set to: 13
 18923                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 18924  001D7E  0100               	movlb	0	; () banked
 18925  001D80  69A1               	setf	_MSDCommandState& (0+255),b
 18926                           
 18927                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 18928  001D82  0E00               	movlw	0
 18929  001D84  6FA0               	movwf	_MSDReadState& (0+255),b
 18930                           
 18931                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 18932  001D86  0E00               	movlw	0
 18933  001D88  6F9F               	movwf	_MSDWriteState& (0+255),b
 18934                           
 18935                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 18936  001D8A  0E00               	movlw	0
 18937  001D8C  6F9E               	movwf	_MSDRetryAttempt& (0+255),b
 18938                           
 18939                           ; BSR set to: 0
 18940                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 18941  001D8E  0E03               	movlw	3
 18942  001D90  0101               	movlb	1	; () banked
 18943  001D92  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 18944  001D94  B4D8               	btfsc	status,2,c
 18945  001D96  D008               	goto	l563
 18946                           
 18947                           ; BSR set to: 1
 18948                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 18949  001D98  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 18950  001D9A  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 18951  001D9C  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 18952  001D9E  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 18953                           
 18954                           ; BSR set to: 1
 18955                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 18956  001DA0  0E00               	movlw	0
 18957  001DA2  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 18958                           
 18959                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 18960  001DA4  0E00               	movlw	0
 18961  001DA6  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18962  001DA8                     l563:
 18963                           
 18964                           ; BSR set to: 1
 18965                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 18966                           
 18967                           ; BSR set to: 1
 18968  001DA8  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 18969  001DAA  D002               	goto	l564
 18970                           
 18971                           ; BSR set to: 1
 18972                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 18973  001DAC  0E01               	movlw	1
 18974  001DAE  D001               	goto	L17
 18975  001DB0                     l564:
 18976                           
 18977                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 18978                           
 18979                           ; BSR set to: 0
 18980  001DB0  0E02               	movlw	2
 18981  001DB2                     L17:
 18982  001DB2  0100               	movlb	0	; () banked
 18983  001DB4  6FA2               	movwf	_MSD_State& (0+255),b
 18984                           
 18985                           ; BSR set to: 0
 18986                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 18987                           
 18988                           ; BSR set to: 0
 18989  001DB6  0101               	movlb	1	; () banked
 18990  001DB8  5108               	movf	(_gblCBW+8)& (0+255),w,b
 18991  001DBA  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 18992  001DBC  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 18993  001DBE  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 18994  001DC0  B4D8               	btfsc	status,2,c
 18995  001DC2  D002               	goto	l566
 18996                           
 18997                           ; BSR set to: 1
 18998                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 18999  001DC4  0E00               	movlw	0
 19000  001DC6  D001               	goto	L18
 19001  001DC8                     l566:
 19002                           
 19003                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 19004                           
 19005                           ; BSR set to: 0
 19006  001DC8  0E01               	movlw	1
 19007  001DCA                     L18:
 19008  001DCA  0100               	movlb	0	; () banked
 19009  001DCC  6F9B               	movwf	_MSDHostNoData& (0+255),b
 19010                           
 19011                           ; BSR set to: 0
 19012                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 19013                           
 19014                           ; BSR set to: 0
 19015  001DCE  C10F  F0A1         	movff	_gblCBW+15,_MSDCommandState
 19016                           
 19017                           ;usb_device_msd.c: 454: }
 19018  001DD2  0012               	return	
 19019  001DD4                     l562:
 19020                           
 19021                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 19022                           
 19023                           ; BSR set to: 0
 19024  001DD4  0E01               	movlw	1
 19025  001DD6  6E01               	movwf	USBStallEndpoint@dir,c
 19026  001DD8  0E02               	movlw	2
 19027  001DDA  EC1E  F021         	call	_USBStallEndpoint
 19028                           
 19029                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 19030  001DDE  0E00               	movlw	0
 19031  001DE0  6E01               	movwf	USBStallEndpoint@dir,c
 19032  001DE2  0E02               	movlw	2
 19033  001DE4  EC1E  F021         	call	_USBStallEndpoint
 19034                           
 19035                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 19036  001DE8  0012               	return	
 19037  001DEA                     l561:
 19038                           
 19039                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 19040  001DEA  0E01               	movlw	1
 19041  001DEC  6E01               	movwf	USBStallEndpoint@dir,c
 19042  001DEE  0E02               	movlw	2
 19043  001DF0  EC1E  F021         	call	_USBStallEndpoint
 19044                           
 19045                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 19046  001DF4  0E00               	movlw	0
 19047  001DF6  6E01               	movwf	USBStallEndpoint@dir,c
 19048  001DF8  0E02               	movlw	2
 19049  001DFA  EC1E  F021         	call	_USBStallEndpoint
 19050                           
 19051                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 19052  001DFE  0E00               	movlw	0
 19053  001E00  0100               	movlb	0	; () banked
 19054  001E02  6F9A               	movwf	_MSDCBWValid& (0+255),b
 19055                           
 19056                           ; BSR set to: 0
 19057                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 19058                           
 19059                           ; BSR set to: 0
 19060  001E04  0012               	return	
 19061  001E06                     
 19062                           ; BSR set to: 0
 19063                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 19064                           
 19065                           ; BSR set to: 0
 19066  001E06  EC95  F020         	call	_MSDProcessCommand	;wreg free
 19067  001E0A  0AFF               	xorlw	255
 19068  001E0C  A4D8               	btfss	status,2,c
 19069  001E0E  0012               	return	
 19070                           
 19071                           ;usb_device_msd.c: 480: {;usb_device_msd.c: 482: MSD_State = 0x03;
 19072  001E10  0E03               	movlw	3
 19073  001E12  0100               	movlb	0	; () banked
 19074  001E14  6FA2               	movwf	_MSD_State& (0+255),b
 19075                           
 19076                           ; BSR set to: 0
 19077                           ;usb_device_msd.c: 483: };usb_device_msd.c: 484: break;
 19078  001E16  0012               	return	
 19079  001E18                     
 19080                           ; BSR set to: 0
 19081                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 19082                           
 19083                           ; BSR set to: 0
 19084  001E18  EC95  F020         	call	_MSDProcessCommand	;wreg free
 19085  001E1C  0AFF               	xorlw	255
 19086  001E1E  A4D8               	btfss	status,2,c
 19087  001E20  0012               	return	
 19088                           
 19089                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 19090  001E22  010D               	movlb	13	; () banked
 19091  001E24  518C               	movf	140,w,b	;volatile
 19092  001E26  A4D8               	btfss	status,2,c
 19093  001E28  D008               	goto	l575
 19094                           
 19095                           ; BSR set to: 13
 19096  001E2A  5188               	movf	136,w,b	;volatile
 19097  001E2C  1189               	iorwf	137,w,b	;volatile
 19098  001E2E  118A               	iorwf	138,w,b	;volatile
 19099  001E30  118B               	iorwf	139,w,b	;volatile
 19100  001E32  B4D8               	btfsc	status,2,c
 19101  001E34  D002               	goto	l575
 19102                           
 19103                           ; BSR set to: 13
 19104                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 19105  001E36  0E02               	movlw	2
 19106  001E38  6F8C               	movwf	140,b	;volatile
 19107  001E3A                     l575:
 19108                           
 19109                           ; BSR set to: 13
 19110                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 19111  001E3A  0E03               	movlw	3
 19112  001E3C  0100               	movlb	0	; () banked
 19113  001E3E  6FA2               	movwf	_MSD_State& (0+255),b
 19114                           
 19115                           ; BSR set to: 0
 19116                           ;usb_device_msd.c: 494: };usb_device_msd.c: 495: break;
 19117  001E40  0012               	return	
 19118  001E42                     
 19119                           ; BSR set to: 0
 19120                           
 19121                           ; BSR set to: 0
 19122  001E42  C070  F04E         	movff	_pBDTEntryIn+4,_MSDTasks$2372
 19123  001E46  C071  F04F         	movff	_pBDTEntryIn+5,_MSDTasks$2372+1
 19124                           
 19125                           ; BSR set to: 0
 19126                           
 19127                           ; BSR set to: 0
 19128                           
 19129                           ; BSR set to: 0
 19130  001E4A  504E               	movf	_MSDTasks$2372,w,c
 19131  001E4C  104F               	iorwf	_MSDTasks$2372+1,w,c
 19132  001E4E  B4D8               	btfsc	status,2,c
 19133  001E50  D00A               	goto	l577
 19134                           
 19135                           ; BSR set to: 0
 19136  001E52  C070  F050         	movff	_pBDTEntryIn+4,_MSDTasks$2373
 19137  001E56  C071  F051         	movff	_pBDTEntryIn+5,_MSDTasks$2373+1
 19138                           
 19139                           ; BSR set to: 0
 19140                           
 19141                           ; BSR set to: 0
 19142                           
 19143                           ; BSR set to: 0
 19144                           
 19145                           ; BSR set to: 0
 19146  001E5A  C050  FFD9         	movff	_MSDTasks$2373,fsr2l
 19147  001E5E  C051  FFDA         	movff	_MSDTasks$2373+1,fsr2h
 19148  001E62  BEDF               	btfsc	indf2,7,c
 19149  001E64  0012               	return	
 19150  001E66                     l577:
 19151                           
 19152                           ; BSR set to: 0
 19153                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 19154                           
 19155                           ; BSR set to: 0
 19156  001E66  0E01               	movlw	1
 19157  001E68  6E01               	movwf	USBTransferOnePacket@dir,c
 19158  001E6A  0E80               	movlw	128
 19159  001E6C  6E02               	movwf	USBTransferOnePacket@data,c
 19160  001E6E  0E0D               	movlw	13
 19161  001E70  6E03               	movwf	USBTransferOnePacket@data+1,c
 19162  001E72  0E0D               	movlw	13
 19163  001E74  6E04               	movwf	USBTransferOnePacket@len,c
 19164  001E76  0E02               	movlw	2
 19165  001E78  EC2B  F023         	call	_USBTransferOnePacket
 19166  001E7C  C001  F088         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 19167  001E80  C002  F089         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 19168                           
 19169                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 19170  001E84  0100               	movlb	0	; () banked
 19171  001E86  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 19172  001E88  118B               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 19173  001E8A  B4D8               	btfsc	status,2,c
 19174  001E8C  D006               	goto	u10860
 19175                           
 19176                           ; BSR set to: 0
 19177  001E8E  C08A  FFD9         	movff	_USBMSDOutHandle,fsr2l
 19178  001E92  C08B  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 19179  001E96  BEDF               	btfsc	indf2,7,c
 19180  001E98  D00F               	goto	l586
 19181  001E9A                     u10860:
 19182                           
 19183                           ; BSR set to: 0
 19184                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 19185                           
 19186                           ; BSR set to: 0
 19187  001E9A  0E00               	movlw	0
 19188  001E9C  6E01               	movwf	USBTransferOnePacket@dir,c
 19189  001E9E  0E40               	movlw	64
 19190  001EA0  6E02               	movwf	USBTransferOnePacket@data,c
 19191  001EA2  0E0D               	movlw	13
 19192  001EA4  6E03               	movwf	USBTransferOnePacket@data+1,c
 19193  001EA6  0E40               	movlw	64
 19194  001EA8  6E04               	movwf	USBTransferOnePacket@len,c
 19195  001EAA  0E02               	movlw	2
 19196  001EAC  EC2B  F023         	call	_USBTransferOnePacket
 19197  001EB0  C001  F08A         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 19198  001EB4  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 19199  001EB8                     l586:
 19200                           
 19201                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 19202  001EB8  0E00               	movlw	0
 19203  001EBA  0100               	movlb	0	; () banked
 19204  001EBC  6FA2               	movwf	_MSD_State& (0+255),b
 19205                           
 19206                           ;usb_device_msd.c: 513: break;
 19207  001EBE  0012               	return	
 19208  001EC0                     
 19209                           ; BSR set to: 0
 19210                           ;usb_device_msd.c: 518: MSD_State=0x00;
 19211                           
 19212                           ; BSR set to: 0
 19213  001EC0  0E00               	movlw	0
 19214  001EC2  6FA2               	movwf	_MSD_State& (0+255),b
 19215                           
 19216                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 19217  001EC4  0E02               	movlw	2
 19218  001EC6  010D               	movlb	13	; () banked
 19219  001EC8  6F8C               	movwf	140,b	;volatile
 19220                           
 19221                           ; BSR set to: 13
 19222                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 19223  001ECA  0E00               	movlw	0
 19224  001ECC  6E01               	movwf	USBStallEndpoint@dir,c
 19225  001ECE  0E02               	movlw	2
 19226  001ED0  EC1E  F021         	call	_USBStallEndpoint
 19227                           
 19228                           ;usb_device_msd.c: 521: }
 19229  001ED4  0012               	return	
 19230  001ED6                     l554:
 19231  001ED6  0100               	movlb	0	; () banked
 19232  001ED8  51A2               	movf	_MSD_State& (0+255),w,b
 19233                           
 19234                           ; Switch size 1, requested type "space"
 19235                           ; Number of cases is 4, Range of values is 0 to 3
 19236                           ; switch strategies available:
 19237                           ; Name         Instructions Cycles
 19238                           ; simple_byte           13     7 (average)
 19239                           ;	Chosen strategy is simple_byte
 19240  001EDA  0A00               	xorlw	0	; case 0
 19241  001EDC  B4D8               	btfsc	status,2,c
 19242  001EDE  D6E4               	goto	l555
 19243  001EE0  0A01               	xorlw	1	; case 1
 19244  001EE2  B4D8               	btfsc	status,2,c
 19245  001EE4  D790               	goto	l571
 19246  001EE6  0A03               	xorlw	3	; case 2
 19247  001EE8  B4D8               	btfsc	status,2,c
 19248  001EEA  D796               	goto	l573
 19249  001EEC  0A01               	xorlw	1	; case 3
 19250  001EEE  B4D8               	btfsc	status,2,c
 19251  001EF0  D7A8               	goto	l576
 19252  001EF2  D7E6               	goto	l589
 19253  001EF4                     __end_of_MSDTasks:
 19254                           	opt stack 0
 19255                           tosu	equ	0xFFF
 19256                           tosh	equ	0xFFE
 19257                           tosl	equ	0xFFD
 19258                           pclath	equ	0xFFA
 19259                           tblptru	equ	0xFF8
 19260                           tblptrh	equ	0xFF7
 19261                           tblptrl	equ	0xFF6
 19262                           tablat	equ	0xFF5
 19263                           prodh	equ	0xFF4
 19264                           prodl	equ	0xFF3
 19265                           intcon	equ	0xFF2
 19266                           intcon2	equ	0xFF1
 19267                           intcon3	equ	0xFF0
 19268                           indf0	equ	0xFEF
 19269                           postinc0	equ	0xFEE
 19270                           fsr0h	equ	0xFEA
 19271                           fsr0l	equ	0xFE9
 19272                           wreg	equ	0xFE8
 19273                           indf1	equ	0xFE7
 19274                           postdec1	equ	0xFE5
 19275                           plusw1	equ	0xFE3
 19276                           fsr1h	equ	0xFE2
 19277                           fsr1l	equ	0xFE1
 19278                           indf2	equ	0xFDF
 19279                           postinc2	equ	0xFDE
 19280                           postdec2	equ	0xFDD
 19281                           plusw2	equ	0xFDB
 19282                           fsr2h	equ	0xFDA
 19283                           fsr2l	equ	0xFD9
 19284                           status	equ	0xFD8
 19285                           
 19286 ;; *************** function _MSDProcessCommand *****************
 19287 ;; Defined at:
 19288 ;;		line 553 in file "usb_device_msd.c"
 19289 ;; Parameters:    Size  Location     Type
 19290 ;;		None
 19291 ;; Auto vars:     Size  Location     Type
 19292 ;;		None
 19293 ;; Return value:  Size  Location     Type
 19294 ;;                  1    wreg      unsigned char 
 19295 ;; Registers used:
 19296 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19297 ;; Tracked objects:
 19298 ;;		On entry : 0/0
 19299 ;;		On exit  : 0/0
 19300 ;;		Unchanged: 0/0
 19301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19304 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19305 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19306 ;;Total ram usage:        5 bytes
 19307 ;; Hardware stack levels used:    1
 19308 ;; Hardware stack levels required when called:    9
 19309 ;; This function calls:
 19310 ;;		_ExternalFlash_MediaDetect
 19311 ;;		_ExternalFlash_MediaInitialize
 19312 ;;		_MSDProcessCommandMediaAbsent
 19313 ;;		_MSDProcessCommandMediaPresent
 19314 ;; This function is called by:
 19315 ;;		_MSDTasks
 19316 ;; This function uses a non-reentrant model
 19317 ;;
 19318                           
 19319                           	psect	text90
 19320  00412A                     __ptext90:
 19321                           	opt stack 0
 19322  00412A                     _MSDProcessCommand:
 19323                           	opt stack 19
 19324                           
 19325                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 19326                           
 19327                           ;incstack = 0
 19328  00412A  C1F2  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 19329  00412E  C1F3  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 19330  004132  D801               	call	u9818
 19331  004134  D00A               	goto	u9819
 19332  004136                     u9818:
 19333  004136  0005               	push	
 19334  004138  6EFA               	movwf	pclath,c
 19335  00413A  0101               	movlb	1	; () banked
 19336  00413C  51EA               	movf	(_LUN+6)& (0+255),w,b
 19337  00413E  6EFD               	movwf	tosl,c
 19338  004140  51EB               	movf	(_LUN+7)& (0+255),w,b
 19339  004142  6EFE               	movwf	tosh,c
 19340  004144  6AFF               	clrf	tosu,c
 19341  004146  50FA               	movf	pclath,w,c
 19342  004148  0012               	return		;indir
 19343  00414A                     u9819:
 19344  00414A  0900               	iorlw	0
 19345  00414C  B4D8               	btfsc	status,2,c
 19346  00414E  D00C               	goto	u9830
 19347  004150  0101               	movlb	1	; () banked
 19348  004152  510D               	movf	(_gblCBW+13)& (0+255),w,b
 19349  004154  0D01               	mullw	1
 19350  004156  0E9C               	movlw	low _SoftDetach
 19351  004158  24F3               	addwf	prodl,w,c
 19352  00415A  6ED9               	movwf	fsr2l,c
 19353  00415C  0E00               	movlw	high _SoftDetach
 19354  00415E  20F4               	addwfc	prodh,w,c
 19355  004160  6EDA               	movwf	fsr2h,c
 19356  004162  04DE               	decf	postinc2,w,c
 19357  004164  A4D8               	btfss	status,2,c
 19358  004166  D019               	goto	l592
 19359  004168                     u9830:
 19360                           
 19361                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 19362                           
 19363                           ; BSR set to: 1
 19364  004168  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 19365  00416C  0E01               	movlw	1
 19366  00416E  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 19367  004170  0E00               	movlw	0
 19368  004172  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 19369  004174  2A48               	incf	??_MSDProcessCommand,f,c
 19370  004176  D003               	goto	u9844
 19371  004178                     u9845:
 19372  004178  90D8               	bcf	status,0,c
 19373  00417A  3649               	rlcf	??_MSDProcessCommand+1,f,c
 19374  00417C  364A               	rlcf	??_MSDProcessCommand+2,f,c
 19375  00417E                     u9844:
 19376  00417E  2E48               	decfsz	??_MSDProcessCommand,f,c
 19377  004180  D7FB               	goto	u9845
 19378  004182  1C49               	comf	??_MSDProcessCommand+1,w,c
 19379  004184  6E4B               	movwf	(??_MSDProcessCommand+3)& (0+255),c
 19380  004186  1C4A               	comf	??_MSDProcessCommand+2,w,c
 19381  004188  6E4C               	movwf	(??_MSDProcessCommand+4)& (0+255),c
 19382  00418A  504B               	movf	??_MSDProcessCommand+3,w,c
 19383  00418C  0101               	movlb	1	; () banked
 19384  00418E  1772               	andwf	_gblMediaPresent& (0+255),f,b
 19385  004190  504C               	movf	??_MSDProcessCommand+4,w,c
 19386  004192  1773               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 19387                           
 19388                           ; BSR set to: 1
 19389                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 19390  004194  ECE1  F036         	call	_MSDProcessCommandMediaAbsent	;wreg free
 19391                           
 19392                           ;usb_device_msd.c: 563: }
 19393  004198  D04E               	goto	l599
 19394  00419A                     l592:
 19395                           
 19396                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 19397  00419A  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 19398  00419E  0E01               	movlw	1
 19399  0041A0  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 19400  0041A2  0E00               	movlw	0
 19401  0041A4  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 19402  0041A6  2A48               	incf	??_MSDProcessCommand,f,c
 19403  0041A8  D003               	goto	u9854
 19404  0041AA                     u9855:
 19405  0041AA  90D8               	bcf	status,0,c
 19406  0041AC  3649               	rlcf	??_MSDProcessCommand+1,f,c
 19407  0041AE  364A               	rlcf	??_MSDProcessCommand+2,f,c
 19408  0041B0                     u9854:
 19409  0041B0  2E48               	decfsz	??_MSDProcessCommand,f,c
 19410  0041B2  D7FB               	goto	u9855
 19411  0041B4  0101               	movlb	1	; () banked
 19412  0041B6  5172               	movf	_gblMediaPresent& (0+255),w,b
 19413  0041B8  1649               	andwf	??_MSDProcessCommand+1,f,c
 19414  0041BA  5173               	movf	(_gblMediaPresent+1)& (0+255),w,b
 19415  0041BC  164A               	andwf	??_MSDProcessCommand+2,f,c
 19416  0041BE  5049               	movf	??_MSDProcessCommand+1,w,c
 19417  0041C0  104A               	iorwf	??_MSDProcessCommand+2,w,c
 19418  0041C2  A4D8               	btfss	status,2,c
 19419  0041C4  D036               	goto	l596
 19420                           
 19421                           ; BSR set to: 1
 19422                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 19423  0041C6  C1F2  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 19424  0041CA  C1F3  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 19425  0041CE  D801               	call	u9878
 19426  0041D0  D009               	goto	u9879
 19427  0041D2                     u9878:
 19428  0041D2  0005               	push	
 19429  0041D4  6EFA               	movwf	pclath,c
 19430  0041D6  51E4               	movf	_LUN& (0+255),w,b
 19431  0041D8  6EFD               	movwf	tosl,c
 19432  0041DA  51E5               	movf	(_LUN+1)& (0+255),w,b
 19433  0041DC  6EFE               	movwf	tosh,c
 19434  0041DE  6AFF               	clrf	tosu,c
 19435  0041E0  50FA               	movf	pclath,w,c
 19436  0041E2  0012               	return		;indir
 19437  0041E4                     u9879:
 19438  0041E4  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 19439  0041E6  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 19440  0041E8  B4D8               	btfsc	status,2,c
 19441  0041EA  D020               	goto	l597
 19442                           
 19443                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 19444  0041EC  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 19445  0041F0  0E01               	movlw	1
 19446  0041F2  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 19447  0041F4  0E00               	movlw	0
 19448  0041F6  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 19449  0041F8  2A48               	incf	??_MSDProcessCommand,f,c
 19450  0041FA  D003               	goto	u9894
 19451  0041FC                     u9895:
 19452  0041FC  90D8               	bcf	status,0,c
 19453  0041FE  3649               	rlcf	??_MSDProcessCommand+1,f,c
 19454  004200  364A               	rlcf	??_MSDProcessCommand+2,f,c
 19455  004202                     u9894:
 19456  004202  2E48               	decfsz	??_MSDProcessCommand,f,c
 19457  004204  D7FB               	goto	u9895
 19458  004206  5049               	movf	??_MSDProcessCommand+1,w,c
 19459  004208  0101               	movlb	1	; () banked
 19460  00420A  1372               	iorwf	_gblMediaPresent& (0+255),f,b
 19461  00420C  504A               	movf	??_MSDProcessCommand+2,w,c
 19462  00420E  1373               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 19463                           
 19464                           ; BSR set to: 1
 19465                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 19466  004210  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19467  004212  0BF0               	andlw	-16
 19468  004214  0906               	iorlw	6
 19469  004216  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19470                           
 19471                           ; BSR set to: 1
 19472                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 19473  004218  0E28               	movlw	40
 19474  00421A  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19475                           
 19476                           ; BSR set to: 1
 19477                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 19478  00421C  0E00               	movlw	0
 19479  00421E  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19480                           
 19481                           ; BSR set to: 1
 19482                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 19483  004220  0E01               	movlw	1
 19484  004222  010D               	movlb	13	; () banked
 19485  004224  6F8C               	movwf	140,b	;volatile
 19486                           
 19487                           ; BSR set to: 13
 19488                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 19489  004226  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19490                           
 19491                           ;usb_device_msd.c: 589: }
 19492  00422A  D005               	goto	l599
 19493  00422C                     l597:
 19494                           
 19495                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 19496  00422C  ECE1  F036         	call	_MSDProcessCommandMediaAbsent	;wreg free
 19497                           
 19498                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 19499  004230  D002               	goto	l599
 19500  004232                     l596:
 19501                           
 19502                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 19503  004232  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19504  004236                     l599:
 19505                           
 19506                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 19507  004236  0100               	movlb	0	; () banked
 19508  004238  51A1               	movf	_MSDCommandState& (0+255),w,b
 19509  00423A  0012               	return	
 19510  00423C                     __end_of_MSDProcessCommand:
 19511                           	opt stack 0
 19512                           tosu	equ	0xFFF
 19513                           tosh	equ	0xFFE
 19514                           tosl	equ	0xFFD
 19515                           pclath	equ	0xFFA
 19516                           tblptru	equ	0xFF8
 19517                           tblptrh	equ	0xFF7
 19518                           tblptrl	equ	0xFF6
 19519                           tablat	equ	0xFF5
 19520                           prodh	equ	0xFF4
 19521                           prodl	equ	0xFF3
 19522                           intcon	equ	0xFF2
 19523                           intcon2	equ	0xFF1
 19524                           intcon3	equ	0xFF0
 19525                           indf0	equ	0xFEF
 19526                           postinc0	equ	0xFEE
 19527                           fsr0h	equ	0xFEA
 19528                           fsr0l	equ	0xFE9
 19529                           wreg	equ	0xFE8
 19530                           indf1	equ	0xFE7
 19531                           postdec1	equ	0xFE5
 19532                           plusw1	equ	0xFE3
 19533                           fsr1h	equ	0xFE2
 19534                           fsr1l	equ	0xFE1
 19535                           indf2	equ	0xFDF
 19536                           postinc2	equ	0xFDE
 19537                           postdec2	equ	0xFDD
 19538                           plusw2	equ	0xFDB
 19539                           fsr2h	equ	0xFDA
 19540                           fsr2l	equ	0xFD9
 19541                           status	equ	0xFD8
 19542                           
 19543 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 19544 ;; Defined at:
 19545 ;;		line 635 in file "usb_device_msd.c"
 19546 ;; Parameters:    Size  Location     Type
 19547 ;;		None
 19548 ;; Auto vars:     Size  Location     Type
 19549 ;;		None
 19550 ;; Return value:  Size  Location     Type
 19551 ;;                  1    wreg      void 
 19552 ;; Registers used:
 19553 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19554 ;; Tracked objects:
 19555 ;;		On entry : 0/0
 19556 ;;		On exit  : 0/0
 19557 ;;		Unchanged: 0/0
 19558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19563 ;;Total ram usage:        0 bytes
 19564 ;; Hardware stack levels used:    1
 19565 ;; Hardware stack levels required when called:    8
 19566 ;; This function calls:
 19567 ;;		_MSDErrorHandler
 19568 ;;		_MSDProcessCommandMediaPresent
 19569 ;;		_ResetSenseData
 19570 ;; This function is called by:
 19571 ;;		_MSDProcessCommand
 19572 ;; This function uses a non-reentrant model
 19573 ;;
 19574                           
 19575                           	psect	text91
 19576  006DC2                     __ptext91:
 19577                           	opt stack 0
 19578  006DC2                     _MSDProcessCommandMediaAbsent:
 19579                           	opt stack 19
 19580                           
 19581                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 19582                           
 19583                           ; BSR set to: 0
 19584                           ;incstack = 0
 19585  006DC2  D01E               	goto	l603
 19586  006DC4                     
 19587                           ;usb_device_msd.c: 646: ResetSenseData();
 19588  006DC4  EC12  F037         	call	_ResetSenseData	;wreg free
 19589                           
 19590                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 19591  006DC8  0101               	movlb	1	; () banked
 19592  006DCA  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19593  006DCC  0BF0               	andlw	-16
 19594  006DCE  0902               	iorlw	2
 19595  006DD0  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19596                           
 19597                           ; BSR set to: 1
 19598                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 19599  006DD2  0E3A               	movlw	58
 19600  006DD4  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19601                           
 19602                           ; BSR set to: 1
 19603                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 19604  006DD6  0E00               	movlw	0
 19605  006DD8  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19606                           
 19607                           ; BSR set to: 1
 19608                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 19609  006DDA  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19610                           
 19611                           ;usb_device_msd.c: 655: break;
 19612  006DDE  0012               	return	
 19613  006DE0                     
 19614                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 19615  006DE0  0E01               	movlw	1
 19616  006DE2  010D               	movlb	13	; () banked
 19617  006DE4  6F8C               	movwf	140,b	;volatile
 19618                           
 19619                           ; BSR set to: 13
 19620                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 19621  006DE6  0100               	movlb	0	; () banked
 19622  006DE8  69A1               	setf	_MSDCommandState& (0+255),b
 19623                           
 19624                           ;usb_device_msd.c: 665: break;
 19625  006DEA  0012               	return	
 19626  006DEC                     
 19627                           ; BSR set to: 0
 19628                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 19629                           
 19630                           ; BSR set to: 0
 19631  006DEC  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19632                           
 19633                           ;usb_device_msd.c: 671: break;
 19634  006DF0  0012               	return	
 19635  006DF2                     
 19636                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 19637  006DF2  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 19638                           
 19639                           ;usb_device_msd.c: 677: break;
 19640  006DF6  0012               	return	
 19641  006DF8                     
 19642                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 19643  006DF8  0E7F               	movlw	127
 19644  006DFA  ECA8  F022         	call	_MSDErrorHandler
 19645                           
 19646                           ;usb_device_msd.c: 685: }
 19647                           
 19648                           ;usb_device_msd.c: 684: break;
 19649  006DFE  0012               	return	
 19650  006E00                     l603:
 19651  006E00  0100               	movlb	0	; () banked
 19652  006E02  51A1               	movf	_MSDCommandState& (0+255),w,b
 19653                           
 19654                           ; Switch size 1, requested type "space"
 19655                           ; Number of cases is 5, Range of values is 0 to 253
 19656                           ; switch strategies available:
 19657                           ; Name         Instructions Cycles
 19658                           ; simple_byte           16     9 (average)
 19659                           ;	Chosen strategy is simple_byte
 19660  006E04  0A00               	xorlw	0	; case 0
 19661  006E06  B4D8               	btfsc	status,2,c
 19662  006E08  D7EB               	goto	l606
 19663  006E0A  0A03               	xorlw	3	; case 3
 19664  006E0C  B4D8               	btfsc	status,2,c
 19665  006E0E  D7DA               	goto	l604
 19666  006E10  0A11               	xorlw	17	; case 18
 19667  006E12  B4D8               	btfsc	status,2,c
 19668  006E14  D7EB               	goto	l608
 19669  006E16  0A0C               	xorlw	12	; case 30
 19670  006E18  B4D8               	btfsc	status,2,c
 19671  006E1A  D7E2               	goto	l606
 19672  006E1C  0AE3               	xorlw	227	; case 253
 19673  006E1E  B4D8               	btfsc	status,2,c
 19674  006E20  D7E8               	goto	l609
 19675  006E22  D7EA               	goto	l610
 19676  006E24                     __end_of_MSDProcessCommandMediaAbsent:
 19677                           	opt stack 0
 19678                           tosu	equ	0xFFF
 19679                           tosh	equ	0xFFE
 19680                           tosl	equ	0xFFD
 19681                           pclath	equ	0xFFA
 19682                           tblptru	equ	0xFF8
 19683                           tblptrh	equ	0xFF7
 19684                           tblptrl	equ	0xFF6
 19685                           tablat	equ	0xFF5
 19686                           prodh	equ	0xFF4
 19687                           prodl	equ	0xFF3
 19688                           intcon	equ	0xFF2
 19689                           intcon2	equ	0xFF1
 19690                           intcon3	equ	0xFF0
 19691                           indf0	equ	0xFEF
 19692                           postinc0	equ	0xFEE
 19693                           fsr0h	equ	0xFEA
 19694                           fsr0l	equ	0xFE9
 19695                           wreg	equ	0xFE8
 19696                           indf1	equ	0xFE7
 19697                           postdec1	equ	0xFE5
 19698                           plusw1	equ	0xFE3
 19699                           fsr1h	equ	0xFE2
 19700                           fsr1l	equ	0xFE1
 19701                           indf2	equ	0xFDF
 19702                           postinc2	equ	0xFDE
 19703                           postdec2	equ	0xFDD
 19704                           plusw2	equ	0xFDB
 19705                           fsr2h	equ	0xFDA
 19706                           fsr2l	equ	0xFD9
 19707                           status	equ	0xFD8
 19708                           
 19709 ;; *************** function _MSDProcessCommandMediaPresent *****************
 19710 ;; Defined at:
 19711 ;;		line 712 in file "usb_device_msd.c"
 19712 ;; Parameters:    Size  Location     Type
 19713 ;;		None
 19714 ;; Auto vars:     Size  Location     Type
 19715 ;;  capacity        4   66[COMRAM] struct .
 19716 ;;  sectorSize      4   62[COMRAM] struct .
 19717 ;;  i               1   70[COMRAM] unsigned char 
 19718 ;;  NumBytesInPa    1   61[COMRAM] unsigned char 
 19719 ;; Return value:  Size  Location     Type
 19720 ;;                  1    wreg      void 
 19721 ;; Registers used:
 19722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 19723 ;; Tracked objects:
 19724 ;;		On entry : 0/0
 19725 ;;		On exit  : 0/0
 19726 ;;		Unchanged: 0/0
 19727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19729 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19730 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19731 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19732 ;;Total ram usage:       14 bytes
 19733 ;; Hardware stack levels used:    1
 19734 ;; Hardware stack levels required when called:    7
 19735 ;; This function calls:
 19736 ;;		_ExternalFlash_CapacityRead
 19737 ;;		_ExternalFlash_SectorSizeRead
 19738 ;;		_ExternalFlash_WriteProtectStateGet
 19739 ;;		_MSDCheckForErrorCases
 19740 ;;		_MSDComputeDeviceInAndResidue
 19741 ;;		_MSDErrorHandler
 19742 ;;		_MSDReadHandler
 19743 ;;		_MSDWriteHandler
 19744 ;;		_ResetSenseData
 19745 ;;		_USBTransferOnePacket
 19746 ;;		_memcpy
 19747 ;; This function is called by:
 19748 ;;		_MSDProcessCommand
 19749 ;;		_MSDProcessCommandMediaAbsent
 19750 ;; This function uses a non-reentrant model
 19751 ;;
 19752                           
 19753                           	psect	text92
 19754  00049C                     __ptext92:
 19755                           	opt stack 0
 19756  00049C                     _MSDProcessCommandMediaPresent:
 19757                           	opt stack 20
 19758                           
 19759                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 19760                           
 19761                           ;incstack = 0
 19762  00049C  D1B9               	goto	l614
 19763  00049E                     
 19764                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 19765  00049E  EC85  F016         	call	_MSDReadHandler	;wreg free
 19766  0004A2  0900               	iorlw	0
 19767  0004A4  A4D8               	btfss	status,2,c
 19768  0004A6  0012               	return	
 19769                           
 19770                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 19771  0004A8  0100               	movlb	0	; () banked
 19772  0004AA  69A1               	setf	_MSDCommandState& (0+255),b
 19773                           
 19774                           ; BSR set to: 0
 19775                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 19776  0004AC  0012               	return	
 19777  0004AE                     
 19778                           ; BSR set to: 0
 19779                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 19780                           
 19781                           ; BSR set to: 0
 19782  0004AE  EC80  F00A         	call	_MSDWriteHandler	;wreg free
 19783  0004B2  0900               	iorlw	0
 19784  0004B4  A4D8               	btfss	status,2,c
 19785  0004B6  0012               	return	
 19786                           
 19787                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 19788  0004B8  0100               	movlb	0	; () banked
 19789  0004BA  69A1               	setf	_MSDCommandState& (0+255),b
 19790                           
 19791                           ; BSR set to: 0
 19792                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 19793  0004BC  0012               	return	
 19794  0004BE                     
 19795                           ; BSR set to: 0
 19796                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 19797                           
 19798                           ; BSR set to: 0
 19799  0004BE  059B               	decf	_MSDHostNoData& (0+255),w,b
 19800  0004C0  A4D8               	btfss	status,2,c
 19801  0004C2  D002               	goto	l621
 19802                           
 19803                           ; BSR set to: 0
 19804                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 19805  0004C4  69A1               	setf	_MSDCommandState& (0+255),b
 19806                           
 19807                           ;usb_device_msd.c: 751: break;
 19808  0004C6  0012               	return	
 19809  0004C8                     l621:
 19810                           
 19811                           ; BSR set to: 0
 19812                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 19813  0004C8  C112  F087         	movff	_gblCBW+18,_TransferLength+1
 19814                           
 19815                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 19816  0004CC  C113  F086         	movff	_gblCBW+19,_TransferLength
 19817                           
 19818                           ; BSR set to: 0
 19819                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 19820  0004D0  C086  F00B         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 19821  0004D4  C087  F00C         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 19822  0004D8  6A0D               	clrf	MSDCheckForErrorCases@DeviceBytes+2,c
 19823  0004DA  6A0E               	clrf	MSDCheckForErrorCases@DeviceBytes+3,c
 19824  0004DC  ECFF  F025         	call	_MSDCheckForErrorCases	;wreg free
 19825  0004E0  0900               	iorlw	0
 19826  0004E2  A4D8               	btfss	status,2,c
 19827  0004E4  0012               	return	
 19828                           
 19829                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 19830                           
 19831                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 19832  0004E6  0E00               	movlw	0
 19833  0004E8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 19834  0004EA  0E24               	movlw	36
 19835  0004EC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 19836  0004EE  EC99  F02F         	call	_MSDComputeDeviceInAndResidue	;wreg free
 19837                           
 19838                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 19839  0004F2  0E00               	movlw	0
 19840  0004F4  6E01               	movwf	memcpy@d1,c
 19841  0004F6  0E06               	movlw	6
 19842  0004F8  6E02               	movwf	memcpy@d1+1,c
 19843  0004FA  0E4A               	movlw	low _inq_resp
 19844  0004FC  6E03               	movwf	memcpy@s1,c
 19845  0004FE  0E8F               	movlw	high _inq_resp
 19846  000500  6E04               	movwf	memcpy@s1+1,c
 19847  000502  5003               	movf	memcpy@s1,w,c
 19848  000504  1004               	iorwf	memcpy@s1+1,w,c
 19849  000506  A4D8               	btfss	status,2,c
 19850  000508  0E00               	movlw	low (__mediumconst shr (0+16))
 19851  00050A  6E05               	movwf	memcpy@s1+2,c
 19852  00050C  0E00               	movlw	0
 19853  00050E  6E07               	movwf	memcpy@n+1,c
 19854  000510  0E24               	movlw	36
 19855  000512  6E06               	movwf	memcpy@n,c
 19856  000514  ECAE  F036         	call	_memcpy	;wreg free
 19857                           
 19858                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 19859  000518  0EFD               	movlw	253
 19860  00051A  0100               	movlb	0	; () banked
 19861  00051C  6FA1               	movwf	_MSDCommandState& (0+255),b
 19862                           
 19863                           ;usb_device_msd.c: 773: break;
 19864  00051E  0012               	return	
 19865  000520                     
 19866                           ; BSR set to: 0
 19867                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 19868                           
 19869                           ; BSR set to: 0
 19870  000520  C1F2  F001         	movff	_LUN+14,ExternalFlash_CapacityRead@config
 19871  000524  C1F3  F002         	movff	_LUN+15,ExternalFlash_CapacityRead@config+1
 19872  000528  D801               	call	u8848
 19873  00052A  D00A               	goto	u8849
 19874  00052C                     u8848:
 19875  00052C  0005               	push	
 19876  00052E  6EFA               	movwf	pclath,c
 19877  000530  0101               	movlb	1	; () banked
 19878  000532  51E6               	movf	(_LUN+2)& (0+255),w,b
 19879  000534  6EFD               	movwf	tosl,c
 19880  000536  51E7               	movf	(_LUN+3)& (0+255),w,b
 19881  000538  6EFE               	movwf	tosh,c
 19882  00053A  6AFF               	clrf	tosu,c
 19883  00053C  50FA               	movf	pclath,w,c
 19884  00053E  0012               	return		;indir
 19885  000540                     u8849:
 19886  000540  C001  F043         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 19887  000544  C002  F044         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 19888  000548  C003  F045         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 19889  00054C  C004  F046         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 19890                           
 19891                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 19892  000550  C1F2  F001         	movff	_LUN+14,ExternalFlash_SectorSizeRead@config
 19893  000554  C1F3  F002         	movff	_LUN+15,ExternalFlash_SectorSizeRead@config+1
 19894  000558  D801               	call	u8858
 19895  00055A  D00A               	goto	u8859
 19896  00055C                     u8858:
 19897  00055C  0005               	push	
 19898  00055E  6EFA               	movwf	pclath,c
 19899  000560  0101               	movlb	1	; () banked
 19900  000562  51E8               	movf	(_LUN+4)& (0+255),w,b
 19901  000564  6EFD               	movwf	tosl,c
 19902  000566  51E9               	movf	(_LUN+5)& (0+255),w,b
 19903  000568  6EFE               	movwf	tosh,c
 19904  00056A  6AFF               	clrf	tosu,c
 19905  00056C  50FA               	movf	pclath,w,c
 19906  00056E  0012               	return		;indir
 19907  000570                     u8859:
 19908  000570  C001  F03F         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 19909  000574  C002  F040         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 19910  000578  6A41               	clrf	MSDProcessCommandMediaPresent@sectorSize+2,c
 19911  00057A  6A42               	clrf	MSDProcessCommandMediaPresent@sectorSize+3,c
 19912                           
 19913                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 19914  00057C  EE26 F000          	lfsr	2,1536
 19915  000580  C046  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 19916                           
 19917                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 19918  000584  EE26 F001          	lfsr	2,1537	;volatile
 19919  000588  C045  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 19920                           
 19921                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 19922  00058C  EE26 F002          	lfsr	2,1538	;volatile
 19923  000590  C044  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 19924                           
 19925                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 19926  000594  EE26 F003          	lfsr	2,1539	;volatile
 19927  000598  C043  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 19928                           
 19929                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 19930  00059C  EE26 F004          	lfsr	2,1540	;volatile
 19931  0005A0  C042  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 19932                           
 19933                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 19934  0005A4  EE26 F005          	lfsr	2,1541	;volatile
 19935  0005A8  C041  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 19936                           
 19937                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 19938  0005AC  EE26 F006          	lfsr	2,1542	;volatile
 19939  0005B0  C040  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 19940                           
 19941                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 19942  0005B4  EE26 F007          	lfsr	2,1543	;volatile
 19943  0005B8  C03F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 19944                           
 19945                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 19946  0005BC  0E00               	movlw	0
 19947  0005BE  0100               	movlb	0	; () banked
 19948  0005C0  6F87               	movwf	(_TransferLength+1)& (0+255),b
 19949  0005C2  0E08               	movlw	8
 19950  0005C4  6F86               	movwf	_TransferLength& (0+255),b
 19951                           
 19952                           ; BSR set to: 0
 19953                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 19954  0005C6  0E00               	movlw	0
 19955  0005C8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 19956  0005CA  0E08               	movlw	8
 19957  0005CC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 19958  0005CE  EC99  F02F         	call	_MSDComputeDeviceInAndResidue	;wreg free
 19959                           
 19960                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 19961  0005D2  0EFD               	movlw	253
 19962  0005D4  0100               	movlb	0	; () banked
 19963  0005D6  6FA1               	movwf	_MSDCommandState& (0+255),b
 19964                           
 19965                           ;usb_device_msd.c: 802: break;
 19966  0005D8  0012               	return	
 19967  0005DA                     
 19968                           ; BSR set to: 0
 19969                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 19970                           
 19971                           ; BSR set to: 0
 19972  0005DA  059B               	decf	_MSDHostNoData& (0+255),w,b
 19973  0005DC  A4D8               	btfss	status,2,c
 19974  0005DE  D002               	goto	l625
 19975                           
 19976                           ; BSR set to: 0
 19977                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 19978  0005E0  69A1               	setf	_MSDCommandState& (0+255),b
 19979                           
 19980                           ;usb_device_msd.c: 814: break;
 19981  0005E2  0012               	return	
 19982  0005E4                     l625:
 19983                           
 19984                           ; BSR set to: 0
 19985                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 19986                           
 19987                           ; BSR set to: 0
 19988  0005E4  0E00               	movlw	0
 19989  0005E6  6F87               	movwf	(_TransferLength+1)& (0+255),b
 19990  0005E8  0E12               	movlw	18
 19991  0005EA  6F86               	movwf	_TransferLength& (0+255),b
 19992                           
 19993                           ; BSR set to: 0
 19994                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 19995  0005EC  0E00               	movlw	0
 19996  0005EE  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 19997  0005F0  0E12               	movlw	18
 19998  0005F2  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 19999  0005F4  EC99  F02F         	call	_MSDComputeDeviceInAndResidue	;wreg free
 20000                           
 20001                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 20002  0005F8  0E00               	movlw	0
 20003  0005FA  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 20004  0005FC                     l11725:
 20005  0005FC  0E11               	movlw	17
 20006  0005FE  6447               	cpfsgt	MSDProcessCommandMediaPresent@i,c
 20007  000600  D001               	goto	l626
 20008  000602  D014               	goto	u8880
 20009  000604                     l626:
 20010                           
 20011                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 20012  000604  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 20013  000606  0D01               	mullw	1
 20014  000608  0E1F               	movlw	low _gblSenseData
 20015  00060A  24F3               	addwf	prodl,w,c
 20016  00060C  6ED9               	movwf	fsr2l,c
 20017  00060E  0E01               	movlw	high _gblSenseData
 20018  000610  20F4               	addwfc	prodh,w,c
 20019  000612  6EDA               	movwf	fsr2h,c
 20020  000614  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 20021  000616  0D01               	mullw	1
 20022  000618  0E00               	movlw	0
 20023  00061A  24F3               	addwf	prodl,w,c
 20024  00061C  6EE1               	movwf	fsr1l,c
 20025  00061E  0E06               	movlw	6
 20026  000620  20F4               	addwfc	prodh,w,c
 20027  000622  6EE2               	movwf	fsr1h,c
 20028  000624  CFDF FFE7          	movff	indf2,indf1
 20029  000628  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 20030  00062A  D7E8               	goto	l11725
 20031  00062C                     u8880:
 20032                           
 20033                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 20034  00062C  0EFD               	movlw	253
 20035  00062E  0100               	movlb	0	; () banked
 20036  000630  6FA1               	movwf	_MSDCommandState& (0+255),b
 20037                           
 20038                           ;usb_device_msd.c: 827: break;
 20039  000632  0012               	return	
 20040  000634                     l628:
 20041                           
 20042                           ; BSR set to: 0
 20043                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 20044  000634  0E03               	movlw	3
 20045  000636  CFE8 F600          	movff	wreg,1536
 20046                           
 20047                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 20048  00063A  0E00               	movlw	0
 20049  00063C  CFE8 F601          	movff	wreg,1537	;volatile
 20050                           
 20051                           ; BSR set to: 0
 20052                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 20053  000640  C1F2  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 20054  000644  C1F3  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 20055  000648  D801               	call	u8898
 20056  00064A  D00A               	goto	u8899
 20057  00064C                     u8898:
 20058  00064C  0005               	push	
 20059  00064E  6EFA               	movwf	pclath,c
 20060  000650  0101               	movlb	1	; () banked
 20061  000652  51EE               	movf	(_LUN+10)& (0+255),w,b
 20062  000654  6EFD               	movwf	tosl,c
 20063  000656  51EF               	movf	(_LUN+11)& (0+255),w,b
 20064  000658  6EFE               	movwf	tosh,c
 20065  00065A  6AFF               	clrf	tosu,c
 20066  00065C  50FA               	movf	pclath,w,c
 20067  00065E  0012               	return		;indir
 20068  000660                     u8899:
 20069  000660  0900               	iorlw	0
 20070  000662  A4D8               	btfss	status,2,c
 20071  000664  D004               	goto	l630
 20072  000666  0E00               	movlw	0
 20073  000668  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 20074  00066A  0E00               	movlw	0
 20075  00066C  D003               	goto	L19
 20076  00066E                     l630:
 20077  00066E  0E00               	movlw	0
 20078  000670  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 20079  000672  0E80               	movlw	128
 20080  000674                     L19:
 20081  000674  6E3C               	movwf	_MSDProcessCommandMediaPresent$2390,c
 20082  000676  EE26 F002          	lfsr	2,1538	;volatile
 20083  00067A  C03C  FFDF         	movff	_MSDProcessCommandMediaPresent$2390,indf2
 20084                           
 20085                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 20086  00067E  0E00               	movlw	0
 20087  000680  CFE8 F603          	movff	wreg,1539	;volatile
 20088                           
 20089                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 20090  000684  0E00               	movlw	0
 20091  000686  0100               	movlb	0	; () banked
 20092  000688  6F87               	movwf	(_TransferLength+1)& (0+255),b
 20093  00068A  0E04               	movlw	4
 20094  00068C  6F86               	movwf	_TransferLength& (0+255),b
 20095                           
 20096                           ; BSR set to: 0
 20097                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 20098  00068E  0E00               	movlw	0
 20099  000690  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 20100  000692  0E04               	movlw	4
 20101  000694  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 20102  000696  EC99  F02F         	call	_MSDComputeDeviceInAndResidue	;wreg free
 20103                           
 20104                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 20105  00069A  0EFD               	movlw	253
 20106  00069C  0100               	movlb	0	; () banked
 20107  00069E  6FA1               	movwf	_MSDCommandState& (0+255),b
 20108                           
 20109                           ;usb_device_msd.c: 839: break;
 20110  0006A0  0012               	return	
 20111  0006A2                     
 20112                           ; BSR set to: 0
 20113                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 20114                           
 20115                           ; BSR set to: 0
 20116  0006A2  0101               	movlb	1	; () banked
 20117  0006A4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20118  0006A6  0BF0               	andlw	-16
 20119  0006A8  0905               	iorlw	5
 20120  0006AA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20121                           
 20122                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 20123  0006AC  0E20               	movlw	32
 20124  0006AE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20125                           
 20126                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 20127  0006B0  0E00               	movlw	0
 20128  0006B2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20129                           
 20130                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 20131  0006B4  0E01               	movlw	1
 20132  0006B6  010D               	movlb	13	; () banked
 20133  0006B8  6F8C               	movwf	140,b	;volatile
 20134                           
 20135                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 20136  0006BA  0E00               	movlw	0
 20137  0006BC  6F88               	movwf	136,b	;volatile
 20138  0006BE  0E00               	movlw	0
 20139  0006C0  6F89               	movwf	137,b	;volatile
 20140  0006C2  0E00               	movlw	0
 20141  0006C4  6F8A               	movwf	138,b	;volatile
 20142  0006C6  0E00               	movlw	0
 20143  0006C8  6F8B               	movwf	139,b	;volatile
 20144                           
 20145                           ; BSR set to: 13
 20146                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 20147  0006CA  0100               	movlb	0	; () banked
 20148  0006CC  69A1               	setf	_MSDCommandState& (0+255),b
 20149                           
 20150                           ;usb_device_msd.c: 848: break;
 20151  0006CE  0012               	return	
 20152  0006D0                     
 20153                           ; BSR set to: 0
 20154                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 20155                           
 20156                           ; BSR set to: 0
 20157  0006D0  0E00               	movlw	0
 20158  0006D2  6E0B               	movwf	MSDCheckForErrorCases@DeviceBytes,c
 20159  0006D4  0E00               	movlw	0
 20160  0006D6  6E0C               	movwf	MSDCheckForErrorCases@DeviceBytes+1,c
 20161  0006D8  0E00               	movlw	0
 20162  0006DA  6E0D               	movwf	MSDCheckForErrorCases@DeviceBytes+2,c
 20163  0006DC  0E00               	movlw	0
 20164  0006DE  6E0E               	movwf	MSDCheckForErrorCases@DeviceBytes+3,c
 20165  0006E0  ECFF  F025         	call	_MSDCheckForErrorCases	;wreg free
 20166  0006E4  0900               	iorlw	0
 20167  0006E6  A4D8               	btfss	status,2,c
 20168  0006E8  0012               	return	
 20169                           
 20170                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 20171                           
 20172                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 20173  0006EA  0101               	movlb	1	; () banked
 20174  0006EC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20175  0006EE  0B0F               	andlw	15
 20176  0006F0  0A06               	xorlw	6
 20177  0006F2  A4D8               	btfss	status,2,c
 20178  0006F4  D007               	goto	l636
 20179                           
 20180                           ; BSR set to: 1
 20181  0006F6  010D               	movlb	13	; () banked
 20182  0006F8  058C               	decf	140,w,b	;volatile
 20183  0006FA  A4D8               	btfss	status,2,c
 20184  0006FC  D003               	goto	l636
 20185                           
 20186                           ; BSR set to: 13
 20187                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 20188  0006FE  0100               	movlb	0	; () banked
 20189  000700  69A1               	setf	_MSDCommandState& (0+255),b
 20190                           
 20191                           ;usb_device_msd.c: 870: }
 20192  000702  0012               	return	
 20193  000704                     l636:
 20194                           
 20195                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 20196                           
 20197                           ; BSR set to: 0
 20198  000704  EC12  F037         	call	_ResetSenseData	;wreg free
 20199                           
 20200                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 20201  000708  0E00               	movlw	0
 20202  00070A  010D               	movlb	13	; () banked
 20203  00070C  6F88               	movwf	136,b	;volatile
 20204  00070E  0E00               	movlw	0
 20205  000710  6F89               	movwf	137,b	;volatile
 20206  000712  0E00               	movlw	0
 20207  000714  6F8A               	movwf	138,b	;volatile
 20208  000716  0E00               	movlw	0
 20209  000718  6F8B               	movwf	139,b	;volatile
 20210                           
 20211                           ; BSR set to: 13
 20212                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 20213  00071A  0100               	movlb	0	; () banked
 20214  00071C  69A1               	setf	_MSDCommandState& (0+255),b
 20215                           
 20216                           ; BSR set to: 0
 20217                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 20218  00071E  0012               	return	
 20219  000720                     
 20220                           ; BSR set to: 0
 20221                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 20222                           
 20223                           ; BSR set to: 0
 20224                           
 20225                           ; BSR set to: 0
 20226  000720  0E00               	movlw	0
 20227  000722  010D               	movlb	13	; () banked
 20228  000724  6F88               	movwf	136,b	;volatile
 20229  000726  0E00               	movlw	0
 20230  000728  6F89               	movwf	137,b	;volatile
 20231  00072A  0E00               	movlw	0
 20232  00072C  6F8A               	movwf	138,b	;volatile
 20233  00072E  0E00               	movlw	0
 20234  000730  6F8B               	movwf	139,b	;volatile
 20235                           
 20236                           ; BSR set to: 13
 20237                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 20238  000732  0100               	movlb	0	; () banked
 20239  000734  69A1               	setf	_MSDCommandState& (0+255),b
 20240                           
 20241                           ;usb_device_msd.c: 885: break;
 20242  000736  0012               	return	
 20243  000738                     
 20244                           ; BSR set to: 0
 20245                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 20246                           
 20247                           ; BSR set to: 0
 20248  000738  5188               	movf	_USBMSDInHandle& (0+255),w,b
 20249  00073A  1189               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 20250  00073C  B4D8               	btfsc	status,2,c
 20251  00073E  D006               	goto	u8950
 20252                           
 20253                           ; BSR set to: 0
 20254  000740  C088  FFD9         	movff	_USBMSDInHandle,fsr2l
 20255  000744  C089  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 20256  000748  BEDF               	btfsc	indf2,7,c
 20257  00074A  0012               	return	
 20258  00074C                     u8950:
 20259                           
 20260                           ; BSR set to: 0
 20261                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 20262                           
 20263                           ; BSR set to: 0
 20264  00074C  0101               	movlb	1	; () banked
 20265  00074E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 20266  000750  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 20267  000752  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 20268  000754  E104               	bnz	u8960
 20269  000756  0E40               	movlw	64
 20270  000758  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 20271  00075A  A0D8               	btfss	status,0,c
 20272  00075C  D009               	goto	l644
 20273  00075E                     u8960:
 20274                           
 20275                           ; BSR set to: 1
 20276                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 20277  00075E  0E40               	movlw	64
 20278  000760  6E3E               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket,c
 20279                           
 20280                           ; BSR set to: 1
 20281                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 20282  000762  0E40               	movlw	64
 20283  000764  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 20284  000766  0E00               	movlw	0
 20285  000768  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 20286  00076A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 20287  00076C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 20288                           
 20289                           ;usb_device_msd.c: 900: }
 20290  00076E  D00A               	goto	l645
 20291  000770                     l644:
 20292                           
 20293                           ; BSR set to: 1
 20294                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 20295  000770  C108  F03E         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 20296                           
 20297                           ; BSR set to: 1
 20298                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 20299  000774  0E00               	movlw	0
 20300  000776  6F08               	movwf	(_gblCBW+8)& (0+255),b
 20301  000778  0E00               	movlw	0
 20302  00077A  6F09               	movwf	(_gblCBW+9)& (0+255),b
 20303  00077C  0E00               	movlw	0
 20304  00077E  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 20305  000780  0E00               	movlw	0
 20306  000782  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 20307  000784                     l645:
 20308                           
 20309                           ; BSR set to: 1
 20310                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 20311                           
 20312                           ; BSR set to: 1
 20313  000784  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 20314  000786  6E3A               	movwf	??_MSDProcessCommandMediaPresent& (0+255),c
 20315  000788  6A3B               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),c
 20316  00078A  503A               	movf	??_MSDProcessCommandMediaPresent,w,c
 20317  00078C  0100               	movlb	0	; () banked
 20318  00078E  5D86               	subwf	_TransferLength& (0+255),w,b
 20319  000790  503B               	movf	??_MSDProcessCommandMediaPresent+1,w,c
 20320  000792  5987               	subwfb	(_TransferLength+1)& (0+255),w,b
 20321  000794  A0D8               	btfss	status,0,c
 20322  000796  D005               	goto	l646
 20323                           
 20324                           ; BSR set to: 0
 20325                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 20326  000798  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 20327  00079A  5F86               	subwf	_TransferLength& (0+255),f,b
 20328  00079C  0E00               	movlw	0
 20329  00079E  5B87               	subwfb	(_TransferLength+1)& (0+255),f,b
 20330                           
 20331                           ;usb_device_msd.c: 918: }
 20332  0007A0  D01A               	goto	u8990
 20333  0007A2                     l646:
 20334                           
 20335                           ; BSR set to: 0
 20336                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 20337                           
 20338                           ; BSR set to: 0
 20339  0007A2  0E00               	movlw	0
 20340  0007A4  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 20341  0007A6  D013               	goto	l648
 20342  0007A8                     
 20343                           ; BSR set to: 0
 20344                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 20345                           
 20346                           ; BSR set to: 0
 20347  0007A8  5186               	movf	_TransferLength& (0+255),w,b
 20348  0007AA  1187               	iorwf	(_TransferLength+1)& (0+255),w,b
 20349  0007AC  B4D8               	btfsc	status,2,c
 20350  0007AE  D004               	goto	l650
 20351                           
 20352                           ; BSR set to: 0
 20353                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 20354  0007B0  0786               	decf	_TransferLength& (0+255),f,b
 20355  0007B2  A0D8               	btfss	status,0,c
 20356  0007B4  0787               	decf	(_TransferLength+1)& (0+255),f,b
 20357                           
 20358                           ;usb_device_msd.c: 932: }
 20359  0007B6  D00A               	goto	l651
 20360  0007B8                     l650:
 20361                           
 20362                           ; BSR set to: 0
 20363                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 20364                           
 20365                           ; BSR set to: 0
 20366  0007B8  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 20367  0007BA  0D01               	mullw	1
 20368  0007BC  0E00               	movlw	0
 20369  0007BE  24F3               	addwf	prodl,w,c
 20370  0007C0  6ED9               	movwf	fsr2l,c
 20371  0007C2  0E06               	movlw	6
 20372  0007C4  20F4               	addwfc	prodh,w,c
 20373  0007C6  6EDA               	movwf	fsr2h,c
 20374  0007C8  0E00               	movlw	0
 20375  0007CA  6EDF               	movwf	indf2,c
 20376  0007CC                     l651:
 20377                           
 20378                           ; BSR set to: 0
 20379                           
 20380                           ; BSR set to: 0
 20381  0007CC  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 20382  0007CE                     l648:
 20383                           
 20384                           ; BSR set to: 0
 20385                           
 20386                           ; BSR set to: 0
 20387  0007CE  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 20388  0007D0  5C47               	subwf	MSDProcessCommandMediaPresent@i,w,c
 20389  0007D2  A0D8               	btfss	status,0,c
 20390  0007D4  D7E9               	goto	l649
 20391  0007D6                     u8990:
 20392                           
 20393                           ; BSR set to: 0
 20394                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 20395                           
 20396                           ; BSR set to: 0
 20397                           
 20398                           ; BSR set to: 0
 20399  0007D6  0E01               	movlw	1
 20400  0007D8  6E01               	movwf	USBTransferOnePacket@dir,c
 20401  0007DA  0E00               	movlw	0
 20402  0007DC  6E02               	movwf	USBTransferOnePacket@data,c
 20403  0007DE  0E06               	movlw	6
 20404  0007E0  6E03               	movwf	USBTransferOnePacket@data+1,c
 20405  0007E2  C03E  F004         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 20406  0007E6  0E02               	movlw	2
 20407  0007E8  EC2B  F023         	call	_USBTransferOnePacket
 20408  0007EC  C001  F088         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 20409  0007F0  C002  F089         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 20410                           
 20411                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 20412  0007F4  0101               	movlb	1	; () banked
 20413  0007F6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 20414  0007F8  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 20415  0007FA  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 20416  0007FC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 20417  0007FE  A4D8               	btfss	status,2,c
 20418  000800  0012               	return	
 20419                           
 20420                           ; BSR set to: 1
 20421                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 20422  000802  0100               	movlb	0	; () banked
 20423  000804  69A1               	setf	_MSDCommandState& (0+255),b
 20424                           
 20425                           ; BSR set to: 0
 20426                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 20427                           
 20428                           ; BSR set to: 0
 20429                           
 20430                           ;usb_device_msd.c: 949: break;
 20431  000806  0012               	return	
 20432  000808                     
 20433                           ; BSR set to: 0
 20434                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 20435                           
 20436                           ; BSR set to: 0
 20437                           
 20438                           ;usb_device_msd.c: 954: default:
 20439                           
 20440                           ; BSR set to: 0
 20441  000808  0E7F               	movlw	127
 20442  00080A  ECA8  F022         	call	_MSDErrorHandler
 20443                           
 20444                           ;usb_device_msd.c: 960: }
 20445                           
 20446                           ;usb_device_msd.c: 959: break;
 20447  00080E  0012               	return	
 20448  000810                     l614:
 20449  000810  0100               	movlb	0	; () banked
 20450  000812  51A1               	movf	_MSDCommandState& (0+255),w,b
 20451                           
 20452                           ; Switch size 1, requested type "space"
 20453                           ; Number of cases is 12, Range of values is 0 to 254
 20454                           ; switch strategies available:
 20455                           ; Name         Instructions Cycles
 20456                           ; simple_byte           37    19 (average)
 20457                           ;	Chosen strategy is simple_byte
 20458  000814  0A00               	xorlw	0	; case 0
 20459  000816  B4D8               	btfsc	status,2,c
 20460  000818  D75B               	goto	l634
 20461  00081A  0A03               	xorlw	3	; case 3
 20462  00081C  B4D8               	btfsc	status,2,c
 20463  00081E  D6DD               	goto	l624
 20464  000820  0A11               	xorlw	17	; case 18
 20465  000822  B4D8               	btfsc	status,2,c
 20466  000824  D64C               	goto	l620
 20467  000826  0A08               	xorlw	8	; case 26
 20468  000828  B4D8               	btfsc	status,2,c
 20469  00082A  D704               	goto	l628
 20470  00082C  0A01               	xorlw	1	; case 27
 20471  00082E  B4D8               	btfsc	status,2,c
 20472  000830  D777               	goto	l638
 20473  000832  0A05               	xorlw	5	; case 30
 20474  000834  B4D8               	btfsc	status,2,c
 20475  000836  D735               	goto	l633
 20476  000838  0A3B               	xorlw	59	; case 37
 20477  00083A  B4D8               	btfsc	status,2,c
 20478  00083C  D671               	goto	l623
 20479  00083E  0A0D               	xorlw	13	; case 40
 20480  000840  B4D8               	btfsc	status,2,c
 20481  000842  D62D               	goto	l615
 20482  000844  0A02               	xorlw	2	; case 42
 20483  000846  B4D8               	btfsc	status,2,c
 20484  000848  D632               	goto	l618
 20485  00084A  0A05               	xorlw	5	; case 47
 20486  00084C  B4D8               	btfsc	status,2,c
 20487  00084E  D768               	goto	l638
 20488  000850  0AD2               	xorlw	210	; case 253
 20489  000852  B4D8               	btfsc	status,2,c
 20490  000854  D771               	goto	l640
 20491  000856  0A03               	xorlw	3	; case 254
 20492  000858  D7D7               	goto	l654
 20493  00085A                     __end_of_MSDProcessCommandMediaPresent:
 20494                           	opt stack 0
 20495                           tosu	equ	0xFFF
 20496                           tosh	equ	0xFFE
 20497                           tosl	equ	0xFFD
 20498                           pclath	equ	0xFFA
 20499                           tblptru	equ	0xFF8
 20500                           tblptrh	equ	0xFF7
 20501                           tblptrl	equ	0xFF6
 20502                           tablat	equ	0xFF5
 20503                           prodh	equ	0xFF4
 20504                           prodl	equ	0xFF3
 20505                           intcon	equ	0xFF2
 20506                           intcon2	equ	0xFF1
 20507                           intcon3	equ	0xFF0
 20508                           indf0	equ	0xFEF
 20509                           postinc0	equ	0xFEE
 20510                           fsr0h	equ	0xFEA
 20511                           fsr0l	equ	0xFE9
 20512                           wreg	equ	0xFE8
 20513                           indf1	equ	0xFE7
 20514                           postdec1	equ	0xFE5
 20515                           plusw1	equ	0xFE3
 20516                           fsr1h	equ	0xFE2
 20517                           fsr1l	equ	0xFE1
 20518                           indf2	equ	0xFDF
 20519                           postinc2	equ	0xFDE
 20520                           postdec2	equ	0xFDD
 20521                           plusw2	equ	0xFDB
 20522                           fsr2h	equ	0xFDA
 20523                           fsr2l	equ	0xFD9
 20524                           status	equ	0xFD8
 20525                           
 20526 ;; *************** function _MSDWriteHandler *****************
 20527 ;; Defined at:
 20528 ;;		line 1188 in file "usb_device_msd.c"
 20529 ;; Parameters:    Size  Location     Type
 20530 ;;		None
 20531 ;; Auto vars:     Size  Location     Type
 20532 ;;		None
 20533 ;; Return value:  Size  Location     Type
 20534 ;;                  1    wreg      unsigned char 
 20535 ;; Registers used:
 20536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20537 ;; Tracked objects:
 20538 ;;		On entry : 0/0
 20539 ;;		On exit  : 0/0
 20540 ;;		Unchanged: 0/0
 20541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20544 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20545 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20546 ;;Total ram usage:        5 bytes
 20547 ;; Hardware stack levels used:    1
 20548 ;; Hardware stack levels required when called:    6
 20549 ;; This function calls:
 20550 ;;		_ExternalFlash_SectorWrite
 20551 ;;		_ExternalFlash_WriteProtectStateGet
 20552 ;;		_MSDCheckForErrorCases
 20553 ;;		_USBStallEndpoint
 20554 ;;		_USBTransferOnePacket
 20555 ;; This function is called by:
 20556 ;;		_MSDProcessCommandMediaPresent
 20557 ;; This function uses a non-reentrant model
 20558 ;;
 20559                           
 20560                           	psect	text93
 20561  001500                     __ptext93:
 20562                           	opt stack 0
 20563  001500                     _MSDWriteHandler:
 20564                           	opt stack 20
 20565                           
 20566                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 20567                           
 20568                           ;incstack = 0
 20569  001500  D144               	goto	l684
 20570  001502                     l685:
 20571                           
 20572                           ; BSR set to: 0
 20573                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 20574  001502  C111  F083         	movff	_gblCBW+17,_LBA+3
 20575                           
 20576                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 20577  001506  C112  F082         	movff	_gblCBW+18,_LBA+2
 20578                           
 20579                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 20580  00150A  C113  F081         	movff	_gblCBW+19,_LBA+1
 20581                           
 20582                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 20583  00150E  C114  F080         	movff	_gblCBW+20,_LBA
 20584                           
 20585                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 20586  001512  C116  F087         	movff	_gblCBW+22,_TransferLength+1
 20587                           
 20588                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 20589  001516  C117  F086         	movff	_gblCBW+23,_TransferLength
 20590                           
 20591                           ; BSR set to: 0
 20592                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 20593  00151A  5186               	movf	_TransferLength& (0+255),w,b
 20594  00151C  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 20595  00151E  5187               	movf	(_TransferLength+1)& (0+255),w,b
 20596  001520  6E31               	movwf	(??_MSDWriteHandler+1)& (0+255),c
 20597  001522  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 20598  001524  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 20599  001526  0E09               	movlw	9
 20600  001528                     u7565:
 20601  001528  90D8               	bcf	status,0,c
 20602  00152A  3630               	rlcf	??_MSDWriteHandler,f,c
 20603  00152C  3631               	rlcf	??_MSDWriteHandler+1,f,c
 20604  00152E  3632               	rlcf	??_MSDWriteHandler+2,f,c
 20605  001530  3633               	rlcf	??_MSDWriteHandler+3,f,c
 20606  001532  2EE8               	decfsz	wreg,f,c
 20607  001534  D7F9               	goto	u7565
 20608  001536  C030  F00B         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 20609  00153A  C031  F00C         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 20610  00153E  C032  F00D         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 20611  001542  C033  F00E         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 20612  001546  ECFF  F025         	call	_MSDCheckForErrorCases	;wreg free
 20613  00154A  0900               	iorlw	0
 20614  00154C  A4D8               	btfss	status,2,c
 20615  00154E  D12F               	goto	l687
 20616                           
 20617                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 20618                           
 20619                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 20620  001550  C1F2  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 20621  001554  C1F3  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 20622  001558  D801               	call	u7588
 20623  00155A  D00A               	goto	u7589
 20624  00155C                     u7588:
 20625  00155C  0005               	push	
 20626  00155E  6EFA               	movwf	pclath,c
 20627  001560  0101               	movlb	1	; () banked
 20628  001562  51EE               	movf	(_LUN+10)& (0+255),w,b
 20629  001564  6EFD               	movwf	tosl,c
 20630  001566  51EF               	movf	(_LUN+11)& (0+255),w,b
 20631  001568  6EFE               	movwf	tosh,c
 20632  00156A  6AFF               	clrf	tosu,c
 20633  00156C  50FA               	movf	pclath,w,c
 20634  00156E  0012               	return		;indir
 20635  001570                     u7589:
 20636  001570  0900               	iorlw	0
 20637  001572  B4D8               	btfsc	status,2,c
 20638  001574  D016               	goto	l688
 20639                           
 20640                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 20641  001576  0E01               	movlw	1
 20642  001578  010D               	movlb	13	; () banked
 20643  00157A  6F8C               	movwf	140,b	;volatile
 20644                           
 20645                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 20646  00157C  0101               	movlb	1	; () banked
 20647  00157E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20648  001580  0BF0               	andlw	-16
 20649  001582  0907               	iorlw	7
 20650  001584  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20651                           
 20652                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 20653  001586  0E27               	movlw	39
 20654  001588  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20655                           
 20656                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 20657  00158A  0E00               	movlw	0
 20658  00158C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20659                           
 20660                           ; BSR set to: 1
 20661                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 20662  00158E  0E00               	movlw	0
 20663  001590  6E01               	movwf	USBStallEndpoint@dir,c
 20664  001592  0E02               	movlw	2
 20665  001594  EC1E  F021         	call	_USBStallEndpoint
 20666                           
 20667                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 20668  001598  0E00               	movlw	0
 20669  00159A  0100               	movlb	0	; () banked
 20670  00159C  6F9F               	movwf	_MSDWriteState& (0+255),b
 20671                           
 20672                           ; BSR set to: 0
 20673                           ;usb_device_msd.c: 1228: return MSDWriteState;
 20674  00159E  519F               	movf	_MSDWriteState& (0+255),w,b
 20675                           
 20676                           ; BSR set to: 0
 20677  0015A0  0012               	return	
 20678  0015A2                     l688:
 20679                           
 20680                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 20681                           
 20682                           ; BSR set to: 0
 20683  0015A2  0E01               	movlw	1
 20684  0015A4  0100               	movlb	0	; () banked
 20685  0015A6  6FA2               	movwf	_MSD_State& (0+255),b
 20686  0015A8                     
 20687                           ; BSR set to: 0
 20688                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 20689                           
 20690                           ; BSR set to: 0
 20691  0015A8  5186               	movf	_TransferLength& (0+255),w,b
 20692  0015AA  1187               	iorwf	(_TransferLength+1)& (0+255),w,b
 20693  0015AC  A4D8               	btfss	status,2,c
 20694  0015AE  D002               	goto	l691
 20695                           
 20696                           ; BSR set to: 0
 20697                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 20698  0015B0  0E00               	movlw	0
 20699  0015B2  D0E9               	goto	L23
 20700  0015B4                     l691:
 20701                           
 20702                           ; BSR set to: 0
 20703                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 20704                           
 20705                           ; BSR set to: 0
 20706  0015B4  0E03               	movlw	3
 20707  0015B6  6F9F               	movwf	_MSDWriteState& (0+255),b
 20708                           
 20709                           ; BSR set to: 0
 20710                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 20711  0015B8  0E00               	movlw	0
 20712  0015BA  6F8C               	movwf	_ptrNextData& (0+255),b
 20713  0015BC  0E06               	movlw	6
 20714  0015BE  6F8D               	movwf	(_ptrNextData+1)& (0+255),b
 20715                           
 20716                           ; BSR set to: 0
 20717                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 20718  0015C0  0E00               	movlw	0
 20719  0015C2  010D               	movlb	13	; () banked
 20720  0015C4  6F88               	movwf	136,b	;volatile
 20721  0015C6  0E02               	movlw	2
 20722  0015C8  6F89               	movwf	137,b	;volatile
 20723  0015CA  0E00               	movlw	0
 20724  0015CC  6F8A               	movwf	138,b	;volatile
 20725  0015CE  0E00               	movlw	0
 20726  0015D0  6F8B               	movwf	139,b	;volatile
 20727  0015D2                     l692:
 20728                           
 20729                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 20730  0015D2  010D               	movlb	13	; () banked
 20731  0015D4  5188               	movf	136,w,b	;volatile
 20732  0015D6  1189               	iorwf	137,w,b	;volatile
 20733  0015D8  118A               	iorwf	138,w,b	;volatile
 20734  0015DA  118B               	iorwf	139,w,b	;volatile
 20735  0015DC  B4D8               	btfsc	status,2,c
 20736  0015DE  D01E               	goto	l693
 20737                           
 20738                           ; BSR set to: 13
 20739                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 20740  0015E0  0100               	movlb	0	; () banked
 20741  0015E2  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 20742  0015E4  118B               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 20743  0015E6  B4D8               	btfsc	status,2,c
 20744  0015E8  D006               	goto	l694
 20745                           
 20746                           ; BSR set to: 0
 20747  0015EA  C08A  FFD9         	movff	_USBMSDOutHandle,fsr2l
 20748  0015EE  C08B  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 20749  0015F2  BEDF               	btfsc	indf2,7,c
 20750  0015F4  D0DC               	goto	l687
 20751  0015F6                     l694:
 20752                           
 20753                           ; BSR set to: 0
 20754                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 20755                           
 20756                           ; BSR set to: 0
 20757  0015F6  0E00               	movlw	0
 20758  0015F8  6E01               	movwf	USBTransferOnePacket@dir,c
 20759  0015FA  C08C  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 20760  0015FE  C08D  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 20761  001602  0E40               	movlw	64
 20762  001604  6E04               	movwf	USBTransferOnePacket@len,c
 20763  001606  0E02               	movlw	2
 20764  001608  EC2B  F023         	call	_USBTransferOnePacket
 20765  00160C  C001  F08A         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 20766  001610  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 20767                           
 20768                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 20769  001614  0E04               	movlw	4
 20770  001616  0100               	movlb	0	; () banked
 20771  001618  6F9F               	movwf	_MSDWriteState& (0+255),b
 20772                           
 20773                           ;usb_device_msd.c: 1260: }
 20774  00161A  D021               	goto	l695
 20775  00161C                     l693:
 20776                           
 20777                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 20778                           
 20779                           ; BSR set to: 0
 20780  00161C  C1F2  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 20781  001620  C1F3  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 20782  001624  D801               	call	u7648
 20783  001626  D00A               	goto	u7649
 20784  001628                     u7648:
 20785  001628  0005               	push	
 20786  00162A  6EFA               	movwf	pclath,c
 20787  00162C  0101               	movlb	1	; () banked
 20788  00162E  51EE               	movf	(_LUN+10)& (0+255),w,b
 20789  001630  6EFD               	movwf	tosl,c
 20790  001632  51EF               	movf	(_LUN+11)& (0+255),w,b
 20791  001634  6EFE               	movwf	tosh,c
 20792  001636  6AFF               	clrf	tosu,c
 20793  001638  50FA               	movf	pclath,w,c
 20794  00163A  0012               	return		;indir
 20795  00163C                     u7649:
 20796  00163C  0900               	iorlw	0
 20797  00163E  B4D8               	btfsc	status,2,c
 20798  001640  D00C               	goto	l696
 20799                           
 20800                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 20801  001642  0E01               	movlw	1
 20802  001644  010D               	movlb	13	; () banked
 20803  001646  6F8C               	movwf	140,b	;volatile
 20804                           
 20805                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 20806  001648  0101               	movlb	1	; () banked
 20807  00164A  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20808  00164C  0BF0               	andlw	-16
 20809  00164E  0902               	iorlw	2
 20810  001650  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20811                           
 20812                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 20813  001652  0E27               	movlw	39
 20814  001654  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20815                           
 20816                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 20817  001656  0E00               	movlw	0
 20818  001658  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20819  00165A                     l696:
 20820                           
 20821                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 20822  00165A  0E02               	movlw	2
 20823  00165C  D093               	goto	L43
 20824  00165E                     l695:
 20825                           
 20826                           ; BSR set to: 0
 20827                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 20828                           
 20829                           ; BSR set to: 0
 20830                           
 20831                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 20832                           
 20833                           ; BSR set to: 0
 20834  00165E  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 20835  001660  118B               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 20836  001662  B4D8               	btfsc	status,2,c
 20837  001664  D006               	goto	l698
 20838                           
 20839                           ; BSR set to: 0
 20840  001666  C08A  FFD9         	movff	_USBMSDOutHandle,fsr2l
 20841  00166A  C08B  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 20842  00166E  BEDF               	btfsc	indf2,7,c
 20843  001670  D09E               	goto	l687
 20844  001672                     l698:
 20845                           
 20846                           ; BSR set to: 0
 20847                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 20848                           
 20849                           ; BSR set to: 0
 20850  001672  EE20 F001          	lfsr	2,1
 20851  001676  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 20852  001678  26D9               	addwf	fsr2l,f,c
 20853  00167A  518B               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 20854  00167C  22DA               	addwfc	fsr2h,f,c
 20855  00167E  50DF               	movf	indf2,w,c
 20856  001680  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 20857  001682  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 20858  001686  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 20859  001688  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 20860  00168A  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 20861  00168C  5031               	movf	??_MSDWriteHandler+1,w,c
 20862  00168E  0101               	movlb	1	; () banked
 20863  001690  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 20864  001692  5032               	movf	??_MSDWriteHandler+2,w,c
 20865  001694  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 20866  001696  5033               	movf	??_MSDWriteHandler+3,w,c
 20867  001698  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 20868  00169A  5034               	movf	??_MSDWriteHandler+4,w,c
 20869  00169C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 20870                           
 20871                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 20872  00169E  0100               	movlb	0	; () banked
 20873  0016A0  EE20 F001          	lfsr	2,1
 20874  0016A4  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 20875  0016A6  26D9               	addwf	fsr2l,f,c
 20876  0016A8  518B               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 20877  0016AA  22DA               	addwfc	fsr2h,f,c
 20878  0016AC  50DF               	movf	indf2,w,c
 20879  0016AE  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 20880  0016B0  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 20881  0016B4  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 20882  0016B6  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 20883  0016B8  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 20884  0016BA  5031               	movf	??_MSDWriteHandler+1,w,c
 20885  0016BC  010D               	movlb	13	; () banked
 20886  0016BE  5F88               	subwf	136,f,b	;volatile
 20887  0016C0  5032               	movf	??_MSDWriteHandler+2,w,c
 20888  0016C2  5B89               	subwfb	137,f,b	;volatile
 20889  0016C4  5033               	movf	??_MSDWriteHandler+3,w,c
 20890  0016C6  5B8A               	subwfb	138,f,b	;volatile
 20891  0016C8  5034               	movf	??_MSDWriteHandler+4,w,c
 20892  0016CA  5B8B               	subwfb	139,f,b	;volatile
 20893                           
 20894                           ; BSR set to: 13
 20895                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 20896  0016CC  0E40               	movlw	64
 20897  0016CE  0100               	movlb	0	; () banked
 20898  0016D0  278C               	addwf	_ptrNextData& (0+255),f,b
 20899  0016D2  0E00               	movlw	0
 20900  0016D4  238D               	addwfc	(_ptrNextData+1)& (0+255),f,b
 20901                           
 20902                           ; BSR set to: 0
 20903                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 20904  0016D6  0E03               	movlw	3
 20905  0016D8  D056               	goto	L23
 20906  0016DA                     
 20907                           ; BSR set to: 0
 20908                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 20909                           
 20910                           ; BSR set to: 0
 20911  0016DA  010D               	movlb	13	; () banked
 20912  0016DC  518C               	movf	140,w,b	;volatile
 20913  0016DE  A4D8               	btfss	status,2,c
 20914  0016E0  D03C               	goto	l703
 20915                           
 20916                           ; BSR set to: 13
 20917                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 20918  0016E2  C1F2  F025         	movff	_LUN+14,ExternalFlash_SectorWrite@config
 20919  0016E6  C1F3  F026         	movff	_LUN+15,ExternalFlash_SectorWrite@config+1
 20920  0016EA  C080  F027         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 20921  0016EE  C081  F028         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 20922  0016F2  C082  F029         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 20923  0016F6  C083  F02A         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 20924  0016FA  0E00               	movlw	0
 20925  0016FC  6E2B               	movwf	ExternalFlash_SectorWrite@buffer,c
 20926  0016FE  0E06               	movlw	6
 20927  001700  6E2C               	movwf	ExternalFlash_SectorWrite@buffer+1,c
 20928  001702  0100               	movlb	0	; () banked
 20929  001704  5180               	movf	_LBA& (0+255),w,b
 20930  001706  1181               	iorwf	(_LBA+1)& (0+255),w,b
 20931  001708  1182               	iorwf	(_LBA+2)& (0+255),w,b
 20932  00170A  1183               	iorwf	(_LBA+3)& (0+255),w,b
 20933  00170C  A4D8               	btfss	status,2,c
 20934  00170E  D002               	goto	u7690
 20935  001710  0E01               	movlw	1
 20936  001712  D001               	goto	u7700
 20937  001714                     u7690:
 20938  001714  0E00               	movlw	0
 20939  001716                     u7700:
 20940  001716  6E2D               	movwf	ExternalFlash_SectorWrite@allowWriteToZero,c
 20941  001718  D801               	call	u7718
 20942  00171A  D00A               	goto	u7719
 20943  00171C                     u7718:
 20944  00171C  0005               	push	
 20945  00171E  6EFA               	movwf	pclath,c
 20946  001720  0101               	movlb	1	; () banked
 20947  001722  51F0               	movf	(_LUN+12)& (0+255),w,b
 20948  001724  6EFD               	movwf	tosl,c
 20949  001726  51F1               	movf	(_LUN+13)& (0+255),w,b
 20950  001728  6EFE               	movwf	tosh,c
 20951  00172A  6AFF               	clrf	tosu,c
 20952  00172C  50FA               	movf	pclath,w,c
 20953  00172E  0012               	return		;indir
 20954  001730                     u7719:
 20955  001730  06E8               	decf	wreg,f,c
 20956  001732  B4D8               	btfsc	status,2,c
 20957  001734  D012               	goto	l703
 20958                           
 20959                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 20960  001736  0E64               	movlw	100
 20961  001738  0100               	movlb	0	; () banked
 20962  00173A  619E               	cpfslt	_MSDRetryAttempt& (0+255),b
 20963  00173C  D002               	goto	l702
 20964                           
 20965                           ; BSR set to: 0
 20966                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 20967  00173E  2B9E               	incf	_MSDRetryAttempt& (0+255),f,b
 20968                           
 20969                           ;usb_device_msd.c: 1314: break;
 20970  001740  D036               	goto	l687
 20971  001742                     l702:
 20972                           
 20973                           ; BSR set to: 0
 20974                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 20975                           
 20976                           ; BSR set to: 0
 20977  001742  0E01               	movlw	1
 20978  001744  010D               	movlb	13	; () banked
 20979  001746  6F8C               	movwf	140,b	;volatile
 20980                           
 20981                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 20982  001748  0101               	movlb	1	; () banked
 20983  00174A  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20984  00174C  0BF0               	andlw	-16
 20985  00174E  0903               	iorlw	3
 20986  001750  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20987                           
 20988                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 20989  001752  0E00               	movlw	0
 20990  001754  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20991                           
 20992                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 20993  001756  0E00               	movlw	0
 20994  001758  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20995  00175A                     l703:
 20996                           
 20997                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 20998                           
 20999                           ; BSR set to: 1
 21000                           
 21001                           ; BSR set to: 1
 21002                           
 21003                           ; BSR set to: 1
 21004  00175A  0E01               	movlw	1
 21005  00175C  0100               	movlb	0	; () banked
 21006  00175E  2780               	addwf	_LBA& (0+255),f,b
 21007  001760  0E00               	movlw	0
 21008  001762  2381               	addwfc	(_LBA+1)& (0+255),f,b
 21009  001764  2382               	addwfc	(_LBA+2)& (0+255),f,b
 21010  001766  2383               	addwfc	(_LBA+3)& (0+255),f,b
 21011                           
 21012                           ; BSR set to: 0
 21013                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 21014  001768  0786               	decf	_TransferLength& (0+255),f,b
 21015  00176A  A0D8               	btfss	status,0,c
 21016  00176C  0787               	decf	(_TransferLength+1)& (0+255),f,b
 21017                           
 21018                           ; BSR set to: 0
 21019                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 21020  00176E  0E01               	movlw	1
 21021  001770  D00A               	goto	L23
 21022  001772                     
 21023                           ; BSR set to: 0
 21024                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 21025                           
 21026                           ; BSR set to: 0
 21027  001772  0E02               	movlw	2
 21028  001774  010D               	movlb	13	; () banked
 21029  001776  6F8C               	movwf	140,b	;volatile
 21030                           
 21031                           ; BSR set to: 13
 21032                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 21033  001778  0E00               	movlw	0
 21034  00177A  6E01               	movwf	USBStallEndpoint@dir,c
 21035  00177C  0E02               	movlw	2
 21036  00177E  EC1E  F021         	call	_USBStallEndpoint
 21037                           
 21038                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 21039  001782  0E00               	movlw	0
 21040  001784                     L43:
 21041  001784  0100               	movlb	0	; () banked
 21042  001786                     L23:
 21043  001786  6F9F               	movwf	_MSDWriteState& (0+255),b
 21044                           
 21045                           ; BSR set to: 0
 21046                           ;usb_device_msd.c: 1345: }
 21047                           
 21048                           ;usb_device_msd.c: 1344: break;
 21049  001788  D012               	goto	l687
 21050  00178A                     l684:
 21051                           
 21052                           ; BSR set to: 0
 21053  00178A  0100               	movlb	0	; () banked
 21054  00178C  519F               	movf	_MSDWriteState& (0+255),w,b
 21055                           
 21056                           ; Switch size 1, requested type "space"
 21057                           ; Number of cases is 5, Range of values is 0 to 4
 21058                           ; switch strategies available:
 21059                           ; Name         Instructions Cycles
 21060                           ; simple_byte           16     9 (average)
 21061                           ;	Chosen strategy is simple_byte
 21062  00178E  0A00               	xorlw	0	; case 0
 21063  001790  B4D8               	btfsc	status,2,c
 21064  001792  D6B7               	goto	l685
 21065  001794  0A01               	xorlw	1	; case 1
 21066  001796  B4D8               	btfsc	status,2,c
 21067  001798  D707               	goto	l690
 21068  00179A  0A03               	xorlw	3	; case 2
 21069  00179C  B4D8               	btfsc	status,2,c
 21070  00179E  D79D               	goto	l699
 21071  0017A0  0A01               	xorlw	1	; case 3
 21072  0017A2  B4D8               	btfsc	status,2,c
 21073  0017A4  D716               	goto	l692
 21074  0017A6  0A07               	xorlw	7	; case 4
 21075  0017A8  B4D8               	btfsc	status,2,c
 21076  0017AA  D759               	goto	l695
 21077  0017AC  D7E2               	goto	l704
 21078  0017AE                     l687:
 21079                           
 21080                           ;usb_device_msd.c: 1347: return MSDWriteState;
 21081                           
 21082                           ; BSR set to: 0
 21083  0017AE  0100               	movlb	0	; () banked
 21084  0017B0  519F               	movf	_MSDWriteState& (0+255),w,b
 21085  0017B2  0012               	return	
 21086  0017B4                     __end_of_MSDWriteHandler:
 21087                           	opt stack 0
 21088                           tosu	equ	0xFFF
 21089                           tosh	equ	0xFFE
 21090                           tosl	equ	0xFFD
 21091                           pclath	equ	0xFFA
 21092                           tblptru	equ	0xFF8
 21093                           tblptrh	equ	0xFF7
 21094                           tblptrl	equ	0xFF6
 21095                           tablat	equ	0xFF5
 21096                           prodh	equ	0xFF4
 21097                           prodl	equ	0xFF3
 21098                           intcon	equ	0xFF2
 21099                           intcon2	equ	0xFF1
 21100                           intcon3	equ	0xFF0
 21101                           indf0	equ	0xFEF
 21102                           postinc0	equ	0xFEE
 21103                           fsr0h	equ	0xFEA
 21104                           fsr0l	equ	0xFE9
 21105                           wreg	equ	0xFE8
 21106                           indf1	equ	0xFE7
 21107                           postdec1	equ	0xFE5
 21108                           plusw1	equ	0xFE3
 21109                           fsr1h	equ	0xFE2
 21110                           fsr1l	equ	0xFE1
 21111                           indf2	equ	0xFDF
 21112                           postinc2	equ	0xFDE
 21113                           postdec2	equ	0xFDD
 21114                           plusw2	equ	0xFDB
 21115                           fsr2h	equ	0xFDA
 21116                           fsr2l	equ	0xFD9
 21117                           status	equ	0xFD8
 21118                           
 21119 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 21120 ;; Defined at:
 21121 ;;		line 34 in file "external_flash.c"
 21122 ;; Parameters:    Size  Location     Type
 21123 ;;  config          2    0[COMRAM] PTR void 
 21124 ;;		 -> NULL(0), 
 21125 ;; Auto vars:     Size  Location     Type
 21126 ;;		None
 21127 ;; Return value:  Size  Location     Type
 21128 ;;                  1    wreg      unsigned char 
 21129 ;; Registers used:
 21130 ;;		wreg
 21131 ;; Tracked objects:
 21132 ;;		On entry : 0/0
 21133 ;;		On exit  : 0/0
 21134 ;;		Unchanged: 0/0
 21135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21136 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21139 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21140 ;;Total ram usage:        2 bytes
 21141 ;; Hardware stack levels used:    1
 21142 ;; This function calls:
 21143 ;;		Nothing
 21144 ;; This function is called by:
 21145 ;;		_MSDWriteHandler
 21146 ;;		_MSDProcessCommandMediaPresent
 21147 ;; This function uses a non-reentrant model
 21148 ;;
 21149                           
 21150                           	psect	text94
 21151  0080EA                     __ptext94:
 21152                           	opt stack 0
 21153  0080EA                     _ExternalFlash_WriteProtectStateGet:
 21154                           	opt stack 25
 21155                           
 21156                           ;external_flash.c: 37: return 0;
 21157                           
 21158                           ; BSR set to: 0
 21159                           ;incstack = 0
 21160  0080EA  0E00               	movlw	0
 21161  0080EC  0012               	return	
 21162  0080EE                     __end_of_ExternalFlash_WriteProtectStateGet:
 21163                           	opt stack 0
 21164                           tosu	equ	0xFFF
 21165                           tosh	equ	0xFFE
 21166                           tosl	equ	0xFFD
 21167                           pclath	equ	0xFFA
 21168                           tblptru	equ	0xFF8
 21169                           tblptrh	equ	0xFF7
 21170                           tblptrl	equ	0xFF6
 21171                           tablat	equ	0xFF5
 21172                           prodh	equ	0xFF4
 21173                           prodl	equ	0xFF3
 21174                           intcon	equ	0xFF2
 21175                           intcon2	equ	0xFF1
 21176                           intcon3	equ	0xFF0
 21177                           indf0	equ	0xFEF
 21178                           postinc0	equ	0xFEE
 21179                           fsr0h	equ	0xFEA
 21180                           fsr0l	equ	0xFE9
 21181                           wreg	equ	0xFE8
 21182                           indf1	equ	0xFE7
 21183                           postdec1	equ	0xFE5
 21184                           plusw1	equ	0xFE3
 21185                           fsr1h	equ	0xFE2
 21186                           fsr1l	equ	0xFE1
 21187                           indf2	equ	0xFDF
 21188                           postinc2	equ	0xFDE
 21189                           postdec2	equ	0xFDD
 21190                           plusw2	equ	0xFDB
 21191                           fsr2h	equ	0xFDA
 21192                           fsr2l	equ	0xFD9
 21193                           status	equ	0xFD8
 21194                           
 21195 ;; *************** function _ExternalFlash_SectorWrite *****************
 21196 ;; Defined at:
 21197 ;;		line 56 in file "external_flash.c"
 21198 ;; Parameters:    Size  Location     Type
 21199 ;;  config          2   36[COMRAM] PTR void 
 21200 ;;		 -> NULL(0), 
 21201 ;;  sector_addr     4   38[COMRAM] unsigned long 
 21202 ;;  buffer          2   42[COMRAM] PTR unsigned char 
 21203 ;;		 -> msd_buffer(512), 
 21204 ;;  allowWriteTo    1   44[COMRAM] unsigned char 
 21205 ;; Auto vars:     Size  Location     Type
 21206 ;;  page            2   45[COMRAM] unsigned int 
 21207 ;; Return value:  Size  Location     Type
 21208 ;;                  1    wreg      unsigned char 
 21209 ;; Registers used:
 21210 ;;		wreg, status,2, status,0, cstack
 21211 ;; Tracked objects:
 21212 ;;		On entry : 0/0
 21213 ;;		On exit  : 0/0
 21214 ;;		Unchanged: 0/0
 21215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21216 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21217 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21219 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21220 ;;Total ram usage:       11 bytes
 21221 ;; Hardware stack levels used:    1
 21222 ;; Hardware stack levels required when called:    5
 21223 ;; This function calls:
 21224 ;;		_flash_page_write
 21225 ;; This function is called by:
 21226 ;;		_MSDWriteHandler
 21227 ;; This function uses a non-reentrant model
 21228 ;;
 21229                           
 21230                           	psect	text95
 21231  007A5A                     __ptext95:
 21232                           	opt stack 0
 21233  007A5A                     _ExternalFlash_SectorWrite:
 21234                           	opt stack 20
 21235                           
 21236                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 21237                           
 21238                           ;incstack = 0
 21239  007A5A  C027  F02E         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 21240  007A5E  C028  F02F         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 21241                           
 21242                           ;external_flash.c: 61: if(sector_addr >= 8192)
 21243  007A62  502A               	movf	ExternalFlash_SectorWrite@sector_addr+3,w,c
 21244  007A64  1029               	iorwf	ExternalFlash_SectorWrite@sector_addr+2,w,c
 21245  007A66  E104               	bnz	u7240
 21246  007A68  0E20               	movlw	32
 21247  007A6A  5C28               	subwf	ExternalFlash_SectorWrite@sector_addr+1,w,c
 21248  007A6C  A0D8               	btfss	status,0,c
 21249  007A6E  D002               	goto	l1877
 21250  007A70                     u7240:
 21251                           
 21252                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 21253  007A70  0E00               	movlw	0
 21254  007A72  0012               	return	
 21255  007A74                     l1877:
 21256                           
 21257                           ;external_flash.c: 64: };external_flash.c: 67: flash_page_write(page, buffer);
 21258  007A74  C02E  F020         	movff	ExternalFlash_SectorWrite@page,flash_page_write@page
 21259  007A78  C02F  F021         	movff	ExternalFlash_SectorWrite@page+1,flash_page_write@page+1
 21260  007A7C  C02B  F022         	movff	ExternalFlash_SectorWrite@buffer,flash_page_write@data
 21261  007A80  C02C  F023         	movff	ExternalFlash_SectorWrite@buffer+1,flash_page_write@data+1
 21262  007A84  EC8A  F039         	call	_flash_page_write	;wreg free
 21263                           
 21264                           ;external_flash.c: 69: return 1;
 21265  007A88  0E01               	movlw	1
 21266  007A8A  0012               	return	
 21267  007A8C                     __end_of_ExternalFlash_SectorWrite:
 21268                           	opt stack 0
 21269                           tosu	equ	0xFFF
 21270                           tosh	equ	0xFFE
 21271                           tosl	equ	0xFFD
 21272                           pclath	equ	0xFFA
 21273                           tblptru	equ	0xFF8
 21274                           tblptrh	equ	0xFF7
 21275                           tblptrl	equ	0xFF6
 21276                           tablat	equ	0xFF5
 21277                           prodh	equ	0xFF4
 21278                           prodl	equ	0xFF3
 21279                           intcon	equ	0xFF2
 21280                           intcon2	equ	0xFF1
 21281                           intcon3	equ	0xFF0
 21282                           indf0	equ	0xFEF
 21283                           postinc0	equ	0xFEE
 21284                           fsr0h	equ	0xFEA
 21285                           fsr0l	equ	0xFE9
 21286                           wreg	equ	0xFE8
 21287                           indf1	equ	0xFE7
 21288                           postdec1	equ	0xFE5
 21289                           plusw1	equ	0xFE3
 21290                           fsr1h	equ	0xFE2
 21291                           fsr1l	equ	0xFE1
 21292                           indf2	equ	0xFDF
 21293                           postinc2	equ	0xFDE
 21294                           postdec2	equ	0xFDD
 21295                           plusw2	equ	0xFDB
 21296                           fsr2h	equ	0xFDA
 21297                           fsr2l	equ	0xFD9
 21298                           status	equ	0xFD8
 21299                           
 21300 ;; *************** function _flash_page_write *****************
 21301 ;; Defined at:
 21302 ;;		line 433 in file "flash.c"
 21303 ;; Parameters:    Size  Location     Type
 21304 ;;  page            2   31[COMRAM] unsigned int 
 21305 ;;  data            2   33[COMRAM] PTR unsigned char 
 21306 ;;		 -> buffer(512), msd_buffer(512), 
 21307 ;; Auto vars:     Size  Location     Type
 21308 ;;  match           1   35[COMRAM] enum E6894
 21309 ;; Return value:  Size  Location     Type
 21310 ;;                  1    wreg      void 
 21311 ;; Registers used:
 21312 ;;		wreg, status,2, status,0, cstack
 21313 ;; Tracked objects:
 21314 ;;		On entry : 0/0
 21315 ;;		On exit  : 0/0
 21316 ;;		Unchanged: 0/0
 21317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21318 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21319 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21321 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21322 ;;Total ram usage:        5 bytes
 21323 ;; Hardware stack levels used:    1
 21324 ;; Hardware stack levels required when called:    4
 21325 ;; This function calls:
 21326 ;;		__flash_compare_page_to_buffer
 21327 ;;		__flash_write_page_from_buffer
 21328 ;;		__flash_write_to_buffer
 21329 ;;		_spi_set_configuration
 21330 ;; This function is called by:
 21331 ;;		_ExternalFlash_SectorWrite
 21332 ;;		_fat_format
 21333 ;; This function uses a non-reentrant model
 21334 ;;
 21335                           
 21336                           	psect	text96
 21337  007314                     __ptext96:
 21338                           	opt stack 0
 21339  007314                     _flash_page_write:
 21340                           	opt stack 23
 21341                           
 21342                           ;flash.c: 435: flashMatchResult_t match;;flash.c: 438: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 21343                           
 21344                           ;incstack = 0
 21345  007314  0E00               	movlw	0
 21346  007316  EC2C  F024         	call	_spi_set_configuration
 21347                           
 21348                           ;flash.c: 441: _flash_write_to_buffer(0, data, 512, FLASH_BUFFER_1);
 21349  00731A  0E00               	movlw	0
 21350  00731C  6E15               	movwf	__flash_write_to_buffer@start+1,c
 21351  00731E  0E00               	movlw	0
 21352  007320  6E14               	movwf	__flash_write_to_buffer@start,c
 21353  007322  C022  F016         	movff	flash_page_write@data,__flash_write_to_buffer@data
 21354  007326  C023  F017         	movff	flash_page_write@data+1,__flash_write_to_buffer@data+1
 21355  00732A  0E02               	movlw	2
 21356  00732C  6E19               	movwf	__flash_write_to_buffer@data_length+1,c
 21357  00732E  0E00               	movlw	0
 21358  007330  6E18               	movwf	__flash_write_to_buffer@data_length,c
 21359  007332  0E00               	movlw	0
 21360  007334  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 21361  007336  ECDA  F03A         	call	__flash_write_to_buffer	;wreg free
 21362                           
 21363                           ;flash.c: 444: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 21364  00733A  C020  F014         	movff	flash_page_write@page,__flash_compare_page_to_buffer@page
 21365  00733E  C021  F015         	movff	flash_page_write@page+1,__flash_compare_page_to_buffer@page+1
 21366  007342  0E00               	movlw	0
 21367  007344  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 21368  007346  EC6A  F033         	call	__flash_compare_page_to_buffer	;wreg free
 21369  00734A  6E24               	movwf	flash_page_write@match,c
 21370                           
 21371                           ;flash.c: 447: if(match==DATA_DOES_NOT_MATCH)
 21372  00734C  0424               	decf	flash_page_write@match,w,c
 21373  00734E  A4D8               	btfss	status,2,c
 21374  007350  D008               	goto	l1834
 21375                           
 21376                           ;flash.c: 448: {;flash.c: 449: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 21377  007352  C020  F014         	movff	flash_page_write@page,__flash_write_page_from_buffer@page
 21378  007356  C021  F015         	movff	flash_page_write@page+1,__flash_write_page_from_buffer@page+1
 21379  00735A  0E00               	movlw	0
 21380  00735C  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 21381  00735E  ECB0  F038         	call	__flash_write_page_from_buffer	;wreg free
 21382  007362                     l1834:
 21383                           
 21384                           ;flash.c: 450: };flash.c: 453: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 21385  007362  0E01               	movlw	1
 21386  007364  EC2C  F024         	call	_spi_set_configuration
 21387  007368  0012               	return		;funcret
 21388  00736A                     __end_of_flash_page_write:
 21389                           	opt stack 0
 21390                           tosu	equ	0xFFF
 21391                           tosh	equ	0xFFE
 21392                           tosl	equ	0xFFD
 21393                           pclath	equ	0xFFA
 21394                           tblptru	equ	0xFF8
 21395                           tblptrh	equ	0xFF7
 21396                           tblptrl	equ	0xFF6
 21397                           tablat	equ	0xFF5
 21398                           prodh	equ	0xFF4
 21399                           prodl	equ	0xFF3
 21400                           intcon	equ	0xFF2
 21401                           intcon2	equ	0xFF1
 21402                           intcon3	equ	0xFF0
 21403                           indf0	equ	0xFEF
 21404                           postinc0	equ	0xFEE
 21405                           fsr0h	equ	0xFEA
 21406                           fsr0l	equ	0xFE9
 21407                           wreg	equ	0xFE8
 21408                           indf1	equ	0xFE7
 21409                           postdec1	equ	0xFE5
 21410                           plusw1	equ	0xFE3
 21411                           fsr1h	equ	0xFE2
 21412                           fsr1l	equ	0xFE1
 21413                           indf2	equ	0xFDF
 21414                           postinc2	equ	0xFDE
 21415                           postdec2	equ	0xFDD
 21416                           plusw2	equ	0xFDB
 21417                           fsr2h	equ	0xFDA
 21418                           fsr2l	equ	0xFD9
 21419                           status	equ	0xFD8
 21420                           
 21421 ;; *************** function _MSDReadHandler *****************
 21422 ;; Defined at:
 21423 ;;		line 1038 in file "usb_device_msd.c"
 21424 ;; Parameters:    Size  Location     Type
 21425 ;;		None
 21426 ;; Auto vars:     Size  Location     Type
 21427 ;;		None
 21428 ;; Return value:  Size  Location     Type
 21429 ;;                  1    wreg      unsigned char 
 21430 ;; Registers used:
 21431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 21432 ;; Tracked objects:
 21433 ;;		On entry : 0/0
 21434 ;;		On exit  : 0/0
 21435 ;;		Unchanged: 0/0
 21436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21439 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21440 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21441 ;;Total ram usage:        4 bytes
 21442 ;; Hardware stack levels used:    1
 21443 ;; Hardware stack levels required when called:    6
 21444 ;; This function calls:
 21445 ;;		_ExternalFlash_SectorRead
 21446 ;;		_MSDCheckForErrorCases
 21447 ;;		_USBStallEndpoint
 21448 ;;		_USBTransferOnePacket
 21449 ;; This function is called by:
 21450 ;;		_MSDProcessCommandMediaPresent
 21451 ;; This function uses a non-reentrant model
 21452 ;;
 21453                           
 21454                           	psect	text97
 21455  002D0A                     __ptext97:
 21456                           	opt stack 0
 21457  002D0A                     _MSDReadHandler:
 21458                           	opt stack 20
 21459                           
 21460                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 21461                           
 21462                           ;incstack = 0
 21463  002D0A  D0D6               	goto	l665
 21464  002D0C                     l666:
 21465                           
 21466                           ; BSR set to: 0
 21467                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 21468  002D0C  C111  F083         	movff	_gblCBW+17,_LBA+3
 21469                           
 21470                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 21471  002D10  C112  F082         	movff	_gblCBW+18,_LBA+2
 21472                           
 21473                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 21474  002D14  C113  F081         	movff	_gblCBW+19,_LBA+1
 21475                           
 21476                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 21477  002D18  C114  F080         	movff	_gblCBW+20,_LBA
 21478                           
 21479                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 21480  002D1C  C116  F087         	movff	_gblCBW+22,_TransferLength+1
 21481                           
 21482                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 21483  002D20  C117  F086         	movff	_gblCBW+23,_TransferLength
 21484                           
 21485                           ; BSR set to: 0
 21486                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 21487  002D24  5186               	movf	_TransferLength& (0+255),w,b
 21488  002D26  6E36               	movwf	??_MSDReadHandler& (0+255),c
 21489  002D28  5187               	movf	(_TransferLength+1)& (0+255),w,b
 21490  002D2A  6E37               	movwf	(??_MSDReadHandler+1)& (0+255),c
 21491  002D2C  6A38               	clrf	(??_MSDReadHandler+2)& (0+255),c
 21492  002D2E  6A39               	clrf	(??_MSDReadHandler+3)& (0+255),c
 21493  002D30  0E09               	movlw	9
 21494  002D32                     u7455:
 21495  002D32  90D8               	bcf	status,0,c
 21496  002D34  3636               	rlcf	??_MSDReadHandler,f,c
 21497  002D36  3637               	rlcf	??_MSDReadHandler+1,f,c
 21498  002D38  3638               	rlcf	??_MSDReadHandler+2,f,c
 21499  002D3A  3639               	rlcf	??_MSDReadHandler+3,f,c
 21500  002D3C  2EE8               	decfsz	wreg,f,c
 21501  002D3E  D7F9               	goto	u7455
 21502  002D40  C036  F00B         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 21503  002D44  C037  F00C         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 21504  002D48  C038  F00D         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 21505  002D4C  C039  F00E         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 21506  002D50  ECFF  F025         	call	_MSDCheckForErrorCases	;wreg free
 21507  002D54  0900               	iorlw	0
 21508  002D56  A4D8               	btfss	status,2,c
 21509  002D58  D0C1               	goto	l668
 21510                           
 21511                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 21512                           
 21513                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 21514  002D5A  0E01               	movlw	1
 21515  002D5C  0100               	movlb	0	; () banked
 21516  002D5E  6FA0               	movwf	_MSDReadState& (0+255),b
 21517  002D60                     
 21518                           ; BSR set to: 0
 21519                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 21520                           
 21521                           ; BSR set to: 0
 21522  002D60  5186               	movf	_TransferLength& (0+255),w,b
 21523  002D62  1187               	iorwf	(_TransferLength+1)& (0+255),w,b
 21524  002D64  A4D8               	btfss	status,2,c
 21525  002D66  D002               	goto	l670
 21526                           
 21527                           ; BSR set to: 0
 21528                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 21529  002D68  0E00               	movlw	0
 21530  002D6A  D046               	goto	L24
 21531  002D6C                     l670:
 21532                           
 21533                           ; BSR set to: 0
 21534                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 21535                           
 21536                           ; BSR set to: 0
 21537  002D6C  0786               	decf	_TransferLength& (0+255),f,b
 21538  002D6E  A0D8               	btfss	status,0,c
 21539  002D70  0787               	decf	(_TransferLength+1)& (0+255),f,b
 21540                           
 21541                           ; BSR set to: 0
 21542                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 21543  002D72  0E02               	movlw	2
 21544  002D74  6FA0               	movwf	_MSDReadState& (0+255),b
 21545  002D76                     
 21546                           ; BSR set to: 0
 21547                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 21548                           
 21549                           ; BSR set to: 0
 21550  002D76  5188               	movf	_USBMSDInHandle& (0+255),w,b
 21551  002D78  1189               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 21552  002D7A  B4D8               	btfsc	status,2,c
 21553  002D7C  D006               	goto	l672
 21554                           
 21555                           ; BSR set to: 0
 21556  002D7E  C088  FFD9         	movff	_USBMSDInHandle,fsr2l
 21557  002D82  C089  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 21558  002D86  BEDF               	btfsc	indf2,7,c
 21559  002D88  D0A9               	goto	l668
 21560  002D8A                     l672:
 21561                           
 21562                           ; BSR set to: 0
 21563                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 21564                           
 21565                           ; BSR set to: 0
 21566  002D8A  C1F2  F02C         	movff	_LUN+14,ExternalFlash_SectorRead@config
 21567  002D8E  C1F3  F02D         	movff	_LUN+15,ExternalFlash_SectorRead@config+1
 21568  002D92  C080  F02E         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 21569  002D96  C081  F02F         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 21570  002D9A  C082  F030         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 21571  002D9E  C083  F031         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 21572  002DA2  0E00               	movlw	0
 21573  002DA4  6E32               	movwf	ExternalFlash_SectorRead@buffer,c
 21574  002DA6  0E06               	movlw	6
 21575  002DA8  6E33               	movwf	ExternalFlash_SectorRead@buffer+1,c
 21576  002DAA  D801               	call	u7508
 21577  002DAC  D00A               	goto	u7509
 21578  002DAE                     u7508:
 21579  002DAE  0005               	push	
 21580  002DB0  6EFA               	movwf	pclath,c
 21581  002DB2  0101               	movlb	1	; () banked
 21582  002DB4  51EC               	movf	(_LUN+8)& (0+255),w,b
 21583  002DB6  6EFD               	movwf	tosl,c
 21584  002DB8  51ED               	movf	(_LUN+9)& (0+255),w,b
 21585  002DBA  6EFE               	movwf	tosh,c
 21586  002DBC  6AFF               	clrf	tosu,c
 21587  002DBE  50FA               	movf	pclath,w,c
 21588  002DC0  0012               	return		;indir
 21589  002DC2                     u7509:
 21590  002DC2  06E8               	decf	wreg,f,c
 21591  002DC4  B4D8               	btfsc	status,2,c
 21592  002DC6  D01A               	goto	l675
 21593                           
 21594                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 21595  002DC8  0E64               	movlw	100
 21596  002DCA  0100               	movlb	0	; () banked
 21597  002DCC  619E               	cpfslt	_MSDRetryAttempt& (0+255),b
 21598  002DCE  D002               	goto	l674
 21599                           
 21600                           ; BSR set to: 0
 21601                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 21602  002DD0  2B9E               	incf	_MSDRetryAttempt& (0+255),f,b
 21603                           
 21604                           ;usb_device_msd.c: 1088: break;
 21605  002DD2  D084               	goto	l668
 21606  002DD4                     l674:
 21607                           
 21608                           ; BSR set to: 0
 21609                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 21610                           
 21611                           ; BSR set to: 0
 21612  002DD4  0E02               	movlw	2
 21613  002DD6  010D               	movlb	13	; () banked
 21614  002DD8  6F8C               	movwf	140,b	;volatile
 21615                           
 21616                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 21617  002DDA  0101               	movlb	1	; () banked
 21618  002DDC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 21619  002DDE  0BF0               	andlw	-16
 21620  002DE0  0903               	iorlw	3
 21621  002DE2  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 21622                           
 21623                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 21624  002DE4  0E00               	movlw	0
 21625  002DE6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21626                           
 21627                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 21628  002DE8  0E00               	movlw	0
 21629  002DEA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21630                           
 21631                           ; BSR set to: 1
 21632                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 21633  002DEC  0E01               	movlw	1
 21634  002DEE  6E01               	movwf	USBStallEndpoint@dir,c
 21635  002DF0  0E02               	movlw	2
 21636  002DF2  EC1E  F021         	call	_USBStallEndpoint
 21637  002DF6  D05D               	goto	l10737
 21638  002DF8                     L24:
 21639  002DF8  6FA0               	movwf	_MSDReadState& (0+255),b
 21640                           
 21641                           ;usb_device_msd.c: 1109: break;
 21642  002DFA  D070               	goto	l668
 21643  002DFC                     l675:
 21644                           
 21645                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 21646                           
 21647                           ; BSR set to: 0
 21648                           
 21649                           ; BSR set to: 0
 21650  002DFC  0E01               	movlw	1
 21651  002DFE  0100               	movlb	0	; () banked
 21652  002E00  2780               	addwf	_LBA& (0+255),f,b
 21653  002E02  0E00               	movlw	0
 21654  002E04  2381               	addwfc	(_LBA+1)& (0+255),f,b
 21655  002E06  2382               	addwfc	(_LBA+2)& (0+255),f,b
 21656  002E08  2383               	addwfc	(_LBA+3)& (0+255),f,b
 21657                           
 21658                           ; BSR set to: 0
 21659                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 21660  002E0A  0E00               	movlw	0
 21661  002E0C  010D               	movlb	13	; () banked
 21662  002E0E  6F88               	movwf	136,b	;volatile
 21663  002E10  0E02               	movlw	2
 21664  002E12  6F89               	movwf	137,b	;volatile
 21665  002E14  0E00               	movlw	0
 21666  002E16  6F8A               	movwf	138,b	;volatile
 21667  002E18  0E00               	movlw	0
 21668  002E1A  6F8B               	movwf	139,b	;volatile
 21669                           
 21670                           ; BSR set to: 13
 21671                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 21672  002E1C  0E00               	movlw	0
 21673  002E1E  0100               	movlb	0	; () banked
 21674  002E20  6F8C               	movwf	_ptrNextData& (0+255),b
 21675  002E22  0E06               	movlw	6
 21676  002E24  6F8D               	movwf	(_ptrNextData+1)& (0+255),b
 21677                           
 21678                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 21679  002E26  0E03               	movlw	3
 21680  002E28  6FA0               	movwf	_MSDReadState& (0+255),b
 21681  002E2A                     
 21682                           ; BSR set to: 0
 21683                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 21684                           
 21685                           ; BSR set to: 0
 21686  002E2A  010D               	movlb	13	; () banked
 21687  002E2C  5188               	movf	136,w,b	;volatile
 21688  002E2E  1189               	iorwf	137,w,b	;volatile
 21689  002E30  118A               	iorwf	138,w,b	;volatile
 21690  002E32  118B               	iorwf	139,w,b	;volatile
 21691  002E34  A4D8               	btfss	status,2,c
 21692  002E36  D002               	goto	l677
 21693                           
 21694                           ; BSR set to: 13
 21695                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 21696  002E38  0E01               	movlw	1
 21697  002E3A  D03C               	goto	L26
 21698  002E3C                     l677:
 21699                           
 21700                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 21701                           
 21702                           ; BSR set to: 0
 21703  002E3C  0E04               	movlw	4
 21704  002E3E  0100               	movlb	0	; () banked
 21705  002E40  6FA0               	movwf	_MSDReadState& (0+255),b
 21706  002E42                     
 21707                           ; BSR set to: 0
 21708                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 21709                           
 21710                           ; BSR set to: 0
 21711  002E42  5188               	movf	_USBMSDInHandle& (0+255),w,b
 21712  002E44  1189               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 21713  002E46  B4D8               	btfsc	status,2,c
 21714  002E48  D006               	goto	l679
 21715                           
 21716                           ; BSR set to: 0
 21717  002E4A  C088  FFD9         	movff	_USBMSDInHandle,fsr2l
 21718  002E4E  C089  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 21719  002E52  BEDF               	btfsc	indf2,7,c
 21720  002E54  D043               	goto	l668
 21721  002E56                     l679:
 21722                           
 21723                           ; BSR set to: 0
 21724                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 21725                           
 21726                           ; BSR set to: 0
 21727  002E56  0E01               	movlw	1
 21728  002E58  6E01               	movwf	USBTransferOnePacket@dir,c
 21729  002E5A  C08C  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 21730  002E5E  C08D  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 21731  002E62  0E40               	movlw	64
 21732  002E64  6E04               	movwf	USBTransferOnePacket@len,c
 21733  002E66  0E02               	movlw	2
 21734  002E68  EC2B  F023         	call	_USBTransferOnePacket
 21735  002E6C  C001  F088         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 21736  002E70  C002  F089         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 21737                           
 21738                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 21739  002E74  0E03               	movlw	3
 21740  002E76  0100               	movlb	0	; () banked
 21741  002E78  6FA0               	movwf	_MSDReadState& (0+255),b
 21742                           
 21743                           ; BSR set to: 0
 21744                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 21745  002E7A  0E40               	movlw	64
 21746  002E7C  0101               	movlb	1	; () banked
 21747  002E7E  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 21748  002E80  0E00               	movlw	0
 21749  002E82  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 21750  002E84  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 21751  002E86  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 21752                           
 21753                           ; BSR set to: 1
 21754                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 21755  002E88  0E40               	movlw	64
 21756  002E8A  010D               	movlb	13	; () banked
 21757  002E8C  5F88               	subwf	136,f,b	;volatile
 21758  002E8E  0E00               	movlw	0
 21759  002E90  5B89               	subwfb	137,f,b	;volatile
 21760  002E92  5B8A               	subwfb	138,f,b	;volatile
 21761  002E94  5B8B               	subwfb	139,f,b	;volatile
 21762                           
 21763                           ; BSR set to: 13
 21764                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 21765  002E96  0E40               	movlw	64
 21766  002E98  0100               	movlb	0	; () banked
 21767  002E9A  278C               	addwf	_ptrNextData& (0+255),f,b
 21768  002E9C  0E00               	movlw	0
 21769  002E9E  238D               	addwfc	(_ptrNextData+1)& (0+255),f,b
 21770                           
 21771                           ;usb_device_msd.c: 1149: break;
 21772  002EA0  D01D               	goto	l668
 21773  002EA2                     
 21774                           ; BSR set to: 0
 21775                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 21776                           
 21777                           ; BSR set to: 0
 21778  002EA2  0E02               	movlw	2
 21779  002EA4  010D               	movlb	13	; () banked
 21780  002EA6  6F8C               	movwf	140,b	;volatile
 21781                           
 21782                           ; BSR set to: 13
 21783                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 21784  002EA8  0E01               	movlw	1
 21785  002EAA  6E01               	movwf	USBStallEndpoint@dir,c
 21786  002EAC  0E02               	movlw	2
 21787  002EAE  EC1E  F021         	call	_USBStallEndpoint
 21788  002EB2                     l10737:
 21789                           
 21790                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 21791  002EB2  0E00               	movlw	0
 21792  002EB4                     L26:
 21793  002EB4  0100               	movlb	0	; () banked
 21794  002EB6  D7A0               	goto	L24
 21795  002EB8                     l665:
 21796                           
 21797                           ; BSR set to: 0
 21798  002EB8  0100               	movlb	0	; () banked
 21799  002EBA  51A0               	movf	_MSDReadState& (0+255),w,b
 21800                           
 21801                           ; Switch size 1, requested type "space"
 21802                           ; Number of cases is 5, Range of values is 0 to 4
 21803                           ; switch strategies available:
 21804                           ; Name         Instructions Cycles
 21805                           ; simple_byte           16     9 (average)
 21806                           ;	Chosen strategy is simple_byte
 21807  002EBC  0A00               	xorlw	0	; case 0
 21808  002EBE  B4D8               	btfsc	status,2,c
 21809  002EC0  D725               	goto	l666
 21810  002EC2  0A01               	xorlw	1	; case 1
 21811  002EC4  B4D8               	btfsc	status,2,c
 21812  002EC6  D74C               	goto	l669
 21813  002EC8  0A03               	xorlw	3	; case 2
 21814  002ECA  B4D8               	btfsc	status,2,c
 21815  002ECC  D754               	goto	l671
 21816  002ECE  0A01               	xorlw	1	; case 3
 21817  002ED0  B4D8               	btfsc	status,2,c
 21818  002ED2  D7AB               	goto	l676
 21819  002ED4  0A07               	xorlw	7	; case 4
 21820  002ED6  B4D8               	btfsc	status,2,c
 21821  002ED8  D7B4               	goto	l678
 21822  002EDA  D7E3               	goto	l680
 21823  002EDC                     l668:
 21824                           
 21825                           ;usb_device_msd.c: 1161: return MSDReadState;
 21826                           
 21827                           ; BSR set to: 0
 21828  002EDC  0100               	movlb	0	; () banked
 21829  002EDE  51A0               	movf	_MSDReadState& (0+255),w,b
 21830  002EE0  0012               	return	
 21831  002EE2                     __end_of_MSDReadHandler:
 21832                           	opt stack 0
 21833                           tosu	equ	0xFFF
 21834                           tosh	equ	0xFFE
 21835                           tosl	equ	0xFFD
 21836                           pclath	equ	0xFFA
 21837                           tblptru	equ	0xFF8
 21838                           tblptrh	equ	0xFF7
 21839                           tblptrl	equ	0xFF6
 21840                           tablat	equ	0xFF5
 21841                           prodh	equ	0xFF4
 21842                           prodl	equ	0xFF3
 21843                           intcon	equ	0xFF2
 21844                           intcon2	equ	0xFF1
 21845                           intcon3	equ	0xFF0
 21846                           indf0	equ	0xFEF
 21847                           postinc0	equ	0xFEE
 21848                           fsr0h	equ	0xFEA
 21849                           fsr0l	equ	0xFE9
 21850                           wreg	equ	0xFE8
 21851                           indf1	equ	0xFE7
 21852                           postdec1	equ	0xFE5
 21853                           plusw1	equ	0xFE3
 21854                           fsr1h	equ	0xFE2
 21855                           fsr1l	equ	0xFE1
 21856                           indf2	equ	0xFDF
 21857                           postinc2	equ	0xFDE
 21858                           postdec2	equ	0xFDD
 21859                           plusw2	equ	0xFDB
 21860                           fsr2h	equ	0xFDA
 21861                           fsr2l	equ	0xFD9
 21862                           status	equ	0xFD8
 21863                           
 21864 ;; *************** function _MSDCheckForErrorCases *****************
 21865 ;; Defined at:
 21866 ;;		line 1434 in file "usb_device_msd.c"
 21867 ;; Parameters:    Size  Location     Type
 21868 ;;  DeviceBytes     4   10[COMRAM] unsigned long 
 21869 ;; Auto vars:     Size  Location     Type
 21870 ;;  DeviceNoData    1   16[COMRAM] unsigned char 
 21871 ;;  MSDErrorCase    1   15[COMRAM] unsigned char 
 21872 ;;  HostMoreData    1   14[COMRAM] unsigned char 
 21873 ;; Return value:  Size  Location     Type
 21874 ;;                  1    wreg      unsigned char 
 21875 ;; Registers used:
 21876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21877 ;; Tracked objects:
 21878 ;;		On entry : 0/0
 21879 ;;		On exit  : 0/0
 21880 ;;		Unchanged: 0/0
 21881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21882 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21883 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21885 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21886 ;;Total ram usage:        7 bytes
 21887 ;; Hardware stack levels used:    1
 21888 ;; Hardware stack levels required when called:    2
 21889 ;; This function calls:
 21890 ;;		_MSDErrorHandler
 21891 ;; This function is called by:
 21892 ;;		_MSDProcessCommandMediaPresent
 21893 ;;		_MSDReadHandler
 21894 ;;		_MSDWriteHandler
 21895 ;; This function uses a non-reentrant model
 21896 ;;
 21897                           
 21898                           	psect	text98
 21899  004BFE                     __ptext98:
 21900                           	opt stack 0
 21901  004BFE                     _MSDCheckForErrorCases:
 21902                           	opt stack 23
 21903                           
 21904                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 21905                           
 21906                           ; BSR set to: 0
 21907                           ;incstack = 0
 21908  004BFE  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 21909  004C00  100C               	iorwf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 21910  004C02  100D               	iorwf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 21911  004C04  100E               	iorwf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 21912  004C06  A4D8               	btfss	status,2,c
 21913  004C08  D002               	goto	l710
 21914                           
 21915                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 21916  004C0A  0E01               	movlw	1
 21917  004C0C  D001               	goto	L27
 21918  004C0E                     l710:
 21919                           
 21920                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 21921  004C0E  0E00               	movlw	0
 21922  004C10                     L27:
 21923  004C10  6E11               	movwf	MSDCheckForErrorCases@DeviceNoData,c
 21924                           
 21925                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 21926  004C12  0100               	movlb	0	; () banked
 21927  004C14  059B               	decf	_MSDHostNoData& (0+255),w,b
 21928  004C16  A4D8               	btfss	status,2,c
 21929  004C18  D005               	goto	l712
 21930                           
 21931                           ; BSR set to: 0
 21932  004C1A  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 21933  004C1C  A4D8               	btfss	status,2,c
 21934  004C1E  D002               	goto	l712
 21935                           
 21936                           ; BSR set to: 0
 21937                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 21938  004C20  0E00               	movlw	0
 21939                           
 21940                           ; BSR set to: 0
 21941  004C22  0012               	return	
 21942  004C24                     l712:
 21943                           
 21944                           ; BSR set to: 0
 21945                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 21946                           
 21947                           ; BSR set to: 0
 21948  004C24  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 21949  004C26  0101               	movlb	1	; () banked
 21950  004C28  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 21951  004C2A  E11A               	bnz	l10317
 21952  004C2C  500C               	movf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 21953  004C2E  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 21954  004C30  E117               	bnz	l10317
 21955  004C32  500D               	movf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 21956  004C34  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 21957  004C36  E114               	bnz	l10317
 21958  004C38  500E               	movf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 21959  004C3A  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 21960  004C3C  A4D8               	btfss	status,2,c
 21961  004C3E  D010               	goto	l718
 21962                           
 21963                           ; BSR set to: 1
 21964                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 21965  004C40  0100               	movlb	0	; () banked
 21966  004C42  05A2               	decf	_MSD_State& (0+255),w,b
 21967  004C44  A4D8               	btfss	status,2,c
 21968  004C46  D006               	goto	l715
 21969                           
 21970                           ; BSR set to: 0
 21971                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 21972  004C48  0E2A               	movlw	42
 21973  004C4A  19A1               	xorwf	_MSDCommandState& (0+255),w,b
 21974  004C4C  B4D8               	btfsc	status,2,c
 21975  004C4E  D008               	goto	l718
 21976                           
 21977                           ; BSR set to: 0
 21978                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 21979  004C50  0E00               	movlw	0
 21980                           
 21981                           ; BSR set to: 0
 21982  004C52  0012               	return	
 21983  004C54                     l715:
 21984                           
 21985                           ; BSR set to: 0
 21986                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 21987                           
 21988                           ; BSR set to: 0
 21989  004C54  0E2A               	movlw	42
 21990  004C56  19A1               	xorwf	_MSDCommandState& (0+255),w,b
 21991  004C58  A4D8               	btfss	status,2,c
 21992  004C5A  D002               	goto	l718
 21993                           
 21994                           ; BSR set to: 0
 21995                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 21996  004C5C  0E00               	movlw	0
 21997                           
 21998                           ; BSR set to: 0
 21999  004C5E  0012               	return	
 22000  004C60                     l718:
 22001  004C60                     l10317:
 22002                           
 22003                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 22004  004C60  0101               	movlb	1	; () banked
 22005  004C62  5108               	movf	(_gblCBW+8)& (0+255),w,b
 22006  004C64  5C0B               	subwf	MSDCheckForErrorCases@DeviceBytes,w,c
 22007  004C66  5109               	movf	(_gblCBW+9)& (0+255),w,b
 22008  004C68  580C               	subwfb	MSDCheckForErrorCases@DeviceBytes+1,w,c
 22009  004C6A  510A               	movf	(_gblCBW+10)& (0+255),w,b
 22010  004C6C  580D               	subwfb	MSDCheckForErrorCases@DeviceBytes+2,w,c
 22011  004C6E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 22012  004C70  580E               	subwfb	MSDCheckForErrorCases@DeviceBytes+3,w,c
 22013  004C72  B0D8               	btfsc	status,0,c
 22014  004C74  D002               	goto	l719
 22015                           
 22016                           ; BSR set to: 1
 22017                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 22018  004C76  0E01               	movlw	1
 22019  004C78  D001               	goto	L28
 22020  004C7A                     l719:
 22021                           
 22022                           ; BSR set to: 1
 22023                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 22024                           
 22025                           ; BSR set to: 1
 22026  004C7A  0E00               	movlw	0
 22027  004C7C                     L28:
 22028  004C7C  6E0F               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice,c
 22029                           
 22030                           ; BSR set to: 1
 22031                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 22032                           
 22033                           ; BSR set to: 1
 22034  004C7E  0E02               	movlw	2
 22035  004C80  0100               	movlb	0	; () banked
 22036  004C82  19A2               	xorwf	_MSD_State& (0+255),w,b
 22037  004C84  A4D8               	btfss	status,2,c
 22038  004C86  D014               	goto	l721
 22039                           
 22040                           ; BSR set to: 0
 22041                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 22042  004C88  0E2A               	movlw	42
 22043  004C8A  19A1               	xorwf	_MSDCommandState& (0+255),w,b
 22044  004C8C  B4D8               	btfsc	status,2,c
 22045  004C8E  D005               	goto	l722
 22046                           
 22047                           ; BSR set to: 0
 22048  004C90  5011               	movf	MSDCheckForErrorCases@DeviceNoData,w,c
 22049  004C92  A4D8               	btfss	status,2,c
 22050  004C94  D002               	goto	l722
 22051  004C96                     u7040:
 22052                           
 22053                           ; BSR set to: 0
 22054                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 22055  004C96  0E05               	movlw	5
 22056  004C98  D01D               	goto	L31
 22057  004C9A                     l722:
 22058                           
 22059                           ; BSR set to: 0
 22060                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 22061                           
 22062                           ; BSR set to: 0
 22063  004C9A  059B               	decf	_MSDHostNoData& (0+255),w,b
 22064  004C9C  B4D8               	btfsc	status,2,c
 22065  004C9E  D00F               	goto	u7090
 22066                           
 22067                           ; BSR set to: 0
 22068                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 22069                           
 22070                           ; BSR set to: 0
 22071                           
 22072                           ; BSR set to: 0
 22073                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 22074  004CA0  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 22075  004CA2  B4D8               	btfsc	status,2,c
 22076  004CA4  D003               	goto	u7070
 22077                           
 22078                           ; BSR set to: 0
 22079                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 22080                           
 22081                           ; BSR set to: 0
 22082                           
 22083                           ; BSR set to: 0
 22084                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 22085  004CA6  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 22086  004CA8  A4D8               	btfss	status,2,c
 22087  004CAA  D7F5               	goto	u7040
 22088  004CAC                     u7070:
 22089                           
 22090                           ; BSR set to: 0
 22091                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 22092  004CAC  0E04               	movlw	4
 22093  004CAE  D012               	goto	L31
 22094  004CB0                     l721:
 22095                           
 22096                           ; BSR set to: 0
 22097                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 22098                           
 22099                           ; BSR set to: 0
 22100  004CB0  0E2A               	movlw	42
 22101  004CB2  19A1               	xorwf	_MSDCommandState& (0+255),w,b
 22102  004CB4  B4D8               	btfsc	status,2,c
 22103  004CB6  D00D               	goto	l737
 22104                           
 22105                           ; BSR set to: 0
 22106                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 22107                           
 22108                           ; BSR set to: 0
 22109                           
 22110                           ; BSR set to: 0
 22111                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 22112  004CB8  059B               	decf	_MSDHostNoData& (0+255),w,b
 22113  004CBA  A4D8               	btfss	status,2,c
 22114  004CBC  D002               	goto	l733
 22115  004CBE                     u7090:
 22116                           
 22117                           ; BSR set to: 0
 22118                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 22119  004CBE  0E01               	movlw	1
 22120  004CC0  D009               	goto	L31
 22121  004CC2                     l733:
 22122                           
 22123                           ; BSR set to: 0
 22124                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 22125                           
 22126                           ; BSR set to: 0
 22127  004CC2  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 22128  004CC4  B4D8               	btfsc	status,2,c
 22129  004CC6  D003               	goto	u7110
 22130                           
 22131                           ; BSR set to: 0
 22132                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 22133                           
 22134                           ; BSR set to: 0
 22135                           
 22136                           ; BSR set to: 0
 22137                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 22138  004CC8  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 22139  004CCA  A4D8               	btfss	status,2,c
 22140  004CCC  D002               	goto	l737
 22141  004CCE                     u7110:
 22142                           
 22143                           ; BSR set to: 0
 22144                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 22145  004CCE  0E02               	movlw	2
 22146  004CD0  D001               	goto	L31
 22147  004CD2                     l737:
 22148                           
 22149                           ; BSR set to: 0
 22150                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 22151                           
 22152                           ; BSR set to: 0
 22153  004CD2  0E03               	movlw	3
 22154  004CD4                     L31:
 22155  004CD4  6E10               	movwf	MSDCheckForErrorCases@MSDErrorCase,c
 22156                           
 22157                           ; BSR set to: 0
 22158                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 22159                           
 22160                           ; BSR set to: 0
 22161                           
 22162                           ; BSR set to: 0
 22163                           
 22164                           ; BSR set to: 0
 22165                           
 22166                           ; BSR set to: 0
 22167                           
 22168                           ; BSR set to: 0
 22169  004CD6  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 22170  004CD8  ECA8  F022         	call	_MSDErrorHandler
 22171                           
 22172                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 22173  004CDC  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 22174  004CDE  0012               	return	
 22175  004CE0                     __end_of_MSDCheckForErrorCases:
 22176                           	opt stack 0
 22177                           tosu	equ	0xFFF
 22178                           tosh	equ	0xFFE
 22179                           tosl	equ	0xFFD
 22180                           pclath	equ	0xFFA
 22181                           tblptru	equ	0xFF8
 22182                           tblptrh	equ	0xFF7
 22183                           tblptrl	equ	0xFF6
 22184                           tablat	equ	0xFF5
 22185                           prodh	equ	0xFF4
 22186                           prodl	equ	0xFF3
 22187                           intcon	equ	0xFF2
 22188                           intcon2	equ	0xFF1
 22189                           intcon3	equ	0xFF0
 22190                           indf0	equ	0xFEF
 22191                           postinc0	equ	0xFEE
 22192                           fsr0h	equ	0xFEA
 22193                           fsr0l	equ	0xFE9
 22194                           wreg	equ	0xFE8
 22195                           indf1	equ	0xFE7
 22196                           postdec1	equ	0xFE5
 22197                           plusw1	equ	0xFE3
 22198                           fsr1h	equ	0xFE2
 22199                           fsr1l	equ	0xFE1
 22200                           indf2	equ	0xFDF
 22201                           postinc2	equ	0xFDE
 22202                           postdec2	equ	0xFDD
 22203                           plusw2	equ	0xFDB
 22204                           fsr2h	equ	0xFDA
 22205                           fsr2l	equ	0xFD9
 22206                           status	equ	0xFD8
 22207                           
 22208 ;; *************** function _MSDErrorHandler *****************
 22209 ;; Defined at:
 22210 ;;		line 1577 in file "usb_device_msd.c"
 22211 ;; Parameters:    Size  Location     Type
 22212 ;;  ErrorCase       1    wreg     unsigned char 
 22213 ;; Auto vars:     Size  Location     Type
 22214 ;;  ErrorCase       1    8[COMRAM] unsigned char 
 22215 ;;  OldMSD_State    1    9[COMRAM] unsigned char 
 22216 ;; Return value:  Size  Location     Type
 22217 ;;                  1    wreg      void 
 22218 ;; Registers used:
 22219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22220 ;; Tracked objects:
 22221 ;;		On entry : 0/0
 22222 ;;		On exit  : 0/0
 22223 ;;		Unchanged: 0/0
 22224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22226 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22228 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22229 ;;Total ram usage:        2 bytes
 22230 ;; Hardware stack levels used:    1
 22231 ;; Hardware stack levels required when called:    1
 22232 ;; This function calls:
 22233 ;;		_ResetSenseData
 22234 ;;		_USBStallEndpoint
 22235 ;; This function is called by:
 22236 ;;		_MSDProcessCommandMediaAbsent
 22237 ;;		_MSDProcessCommandMediaPresent
 22238 ;;		_MSDCheckForErrorCases
 22239 ;; This function uses a non-reentrant model
 22240 ;;
 22241                           
 22242                           	psect	text99
 22243  004550                     __ptext99:
 22244                           	opt stack 0
 22245  004550                     _MSDErrorHandler:
 22246                           	opt stack 23
 22247                           
 22248                           ;incstack = 0
 22249                           ;MSDErrorHandler@ErrorCase stored from wreg
 22250  004550  6E09               	movwf	MSDErrorHandler@ErrorCase,c
 22251                           
 22252                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 22253  004552  0100               	movlb	0	; () banked
 22254  004554  5188               	movf	_USBMSDInHandle& (0+255),w,b
 22255  004556  1189               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 22256  004558  B4D8               	btfsc	status,2,c
 22257  00455A  D006               	goto	u6600
 22258                           
 22259                           ; BSR set to: 0
 22260  00455C  C088  FFD9         	movff	_USBMSDInHandle,fsr2l
 22261  004560  C089  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 22262  004564  BEDF               	btfsc	indf2,7,c
 22263  004566  0012               	return	
 22264  004568                     u6600:
 22265                           
 22266                           ; BSR set to: 0
 22267                           
 22268                           ; BSR set to: 0
 22269  004568  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 22270  00456A  118B               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 22271  00456C  B4D8               	btfsc	status,2,c
 22272  00456E  D006               	goto	l741
 22273                           
 22274                           ; BSR set to: 0
 22275  004570  C08A  FFD9         	movff	_USBMSDOutHandle,fsr2l
 22276  004574  C08B  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 22277  004578  BEDF               	btfsc	indf2,7,c
 22278  00457A  0012               	return	
 22279  00457C                     l741:
 22280                           
 22281                           ; BSR set to: 0
 22282                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 22283  00457C  C0A2  F00A         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 22284                           
 22285                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 22286  004580  69A1               	setf	_MSDCommandState& (0+255),b
 22287                           
 22288                           ; BSR set to: 0
 22289                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 22290  004582  0E00               	movlw	0
 22291  004584  6FA0               	movwf	_MSDReadState& (0+255),b
 22292                           
 22293                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 22294  004586  0E00               	movlw	0
 22295  004588  6F9F               	movwf	_MSDWriteState& (0+255),b
 22296                           
 22297                           ; BSR set to: 0
 22298                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 22299  00458A  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 22300  00458E  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 22301  004592  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 22302  004596  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 22303                           
 22304                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 22305  00459A  0E01               	movlw	1
 22306  00459C  010D               	movlb	13	; () banked
 22307  00459E  6F8C               	movwf	140,b	;volatile
 22308                           
 22309                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 22310  0045A0  0E03               	movlw	3
 22311  0045A2  0100               	movlb	0	; () banked
 22312  0045A4  6FA2               	movwf	_MSD_State& (0+255),b
 22313                           
 22314                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 22315  0045A6  D043               	goto	l747
 22316  0045A8                     
 22317                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 22318                           
 22319                           ; BSR set to: 0
 22320  0045A8  0E02               	movlw	2
 22321  0045AA  010D               	movlb	13	; () banked
 22322  0045AC  6F8C               	movwf	140,b	;volatile
 22323                           
 22324                           ;usb_device_msd.c: 1607: break;
 22325  0045AE  0012               	return	
 22326  0045B0                     
 22327                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 22328                           
 22329                           ; BSR set to: 13
 22330  0045B0  0E01               	movlw	1
 22331  0045B2  6E01               	movwf	USBStallEndpoint@dir,c
 22332  0045B4  0E02               	movlw	2
 22333  0045B6  EC1E  F021         	call	_USBStallEndpoint
 22334                           
 22335                           ;usb_device_msd.c: 1611: break;
 22336  0045BA  0012               	return	
 22337  0045BC                     
 22338                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 22339  0045BC  0E02               	movlw	2
 22340  0045BE  010D               	movlb	13	; () banked
 22341  0045C0  6F8C               	movwf	140,b	;volatile
 22342                           
 22343                           ; BSR set to: 13
 22344                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 22345  0045C2  0E01               	movlw	1
 22346  0045C4  6E01               	movwf	USBStallEndpoint@dir,c
 22347  0045C6  0E02               	movlw	2
 22348  0045C8  EC1E  F021         	call	_USBStallEndpoint
 22349                           
 22350                           ;usb_device_msd.c: 1616: break;
 22351  0045CC  0012               	return	
 22352  0045CE                     
 22353                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 22354  0045CE  0E00               	movlw	0
 22355  0045D0  6E01               	movwf	USBStallEndpoint@dir,c
 22356  0045D2  0E02               	movlw	2
 22357  0045D4  EC1E  F021         	call	_USBStallEndpoint
 22358                           
 22359                           ;usb_device_msd.c: 1620: break;
 22360  0045D8  0012               	return	
 22361  0045DA                     
 22362                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 22363  0045DA  0E02               	movlw	2
 22364  0045DC  010D               	movlb	13	; () banked
 22365  0045DE  6F8C               	movwf	140,b	;volatile
 22366                           
 22367                           ; BSR set to: 13
 22368                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 22369  0045E0  0E00               	movlw	0
 22370  0045E2  6E01               	movwf	USBStallEndpoint@dir,c
 22371  0045E4  0E02               	movlw	2
 22372  0045E6  EC1E  F021         	call	_USBStallEndpoint
 22373                           
 22374                           ;usb_device_msd.c: 1625: break;
 22375  0045EA  0012               	return	
 22376  0045EC                     
 22377                           ;usb_device_msd.c: 1628: ResetSenseData();
 22378  0045EC  EC12  F037         	call	_ResetSenseData	;wreg free
 22379                           
 22380                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 22381  0045F0  0101               	movlb	1	; () banked
 22382  0045F2  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 22383  0045F4  0BF0               	andlw	-16
 22384  0045F6  0905               	iorlw	5
 22385  0045F8  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 22386                           
 22387                           ; BSR set to: 1
 22388                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 22389  0045FA  0E20               	movlw	32
 22390  0045FC  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 22391                           
 22392                           ; BSR set to: 1
 22393                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 22394  0045FE  0E00               	movlw	0
 22395  004600  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 22396                           
 22397                           ; BSR set to: 1
 22398                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 22399  004602  0E02               	movlw	2
 22400  004604  180A               	xorwf	MSDErrorHandler@OldMSD_State,w,c
 22401  004606  A4D8               	btfss	status,2,c
 22402  004608  D00C               	goto	l755
 22403                           
 22404                           ; BSR set to: 1
 22405  00460A  5108               	movf	(_gblCBW+8)& (0+255),w,b
 22406  00460C  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 22407  00460E  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 22408  004610  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 22409  004612  B4D8               	btfsc	status,2,c
 22410  004614  D006               	goto	l755
 22411                           
 22412                           ; BSR set to: 1
 22413                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 22414  004616  0E00               	movlw	0
 22415  004618  6E01               	movwf	USBStallEndpoint@dir,c
 22416  00461A  0E02               	movlw	2
 22417  00461C  EC1E  F021         	call	_USBStallEndpoint
 22418                           
 22419                           ;usb_device_msd.c: 1636: }
 22420  004620  0012               	return	
 22421  004622                     l755:
 22422                           
 22423                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 22424  004622  0E01               	movlw	1
 22425  004624  6E01               	movwf	USBStallEndpoint@dir,c
 22426  004626  0E02               	movlw	2
 22427  004628  EC1E  F021         	call	_USBStallEndpoint
 22428                           
 22429                           ;usb_device_msd.c: 1644: }
 22430                           
 22431                           ;usb_device_msd.c: 1643: break;
 22432                           
 22433                           ;usb_device_msd.c: 1642: default:
 22434                           
 22435                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 22436  00462C  0012               	return	
 22437  00462E                     l747:
 22438  00462E  5009               	movf	MSDErrorHandler@ErrorCase,w,c
 22439                           
 22440                           ; Switch size 1, requested type "space"
 22441                           ; Number of cases is 6, Range of values is 1 to 127
 22442                           ; switch strategies available:
 22443                           ; Name         Instructions Cycles
 22444                           ; simple_byte           19    10 (average)
 22445                           ;	Chosen strategy is simple_byte
 22446  004630  0A01               	xorlw	1	; case 1
 22447  004632  B4D8               	btfsc	status,2,c
 22448  004634  D7B9               	goto	l748
 22449  004636  0A03               	xorlw	3	; case 2
 22450  004638  B4D8               	btfsc	status,2,c
 22451  00463A  D7BA               	goto	l750
 22452  00463C  0A01               	xorlw	1	; case 3
 22453  00463E  B4D8               	btfsc	status,2,c
 22454  004640  D7BD               	goto	l751
 22455  004642  0A07               	xorlw	7	; case 4
 22456  004644  B4D8               	btfsc	status,2,c
 22457  004646  D7C3               	goto	l752
 22458  004648  0A01               	xorlw	1	; case 5
 22459  00464A  B4D8               	btfsc	status,2,c
 22460  00464C  D7C6               	goto	l753
 22461  00464E  0A7A               	xorlw	122	; case 127
 22462  004650  A4D8               	btfss	status,2,c
 22463  004652  0012               	return	
 22464  004654  D7CB               	goto	l754
 22465  004656                     __end_of_MSDErrorHandler:
 22466                           	opt stack 0
 22467                           tosu	equ	0xFFF
 22468                           tosh	equ	0xFFE
 22469                           tosl	equ	0xFFD
 22470                           pclath	equ	0xFFA
 22471                           tblptru	equ	0xFF8
 22472                           tblptrh	equ	0xFF7
 22473                           tblptrl	equ	0xFF6
 22474                           tablat	equ	0xFF5
 22475                           prodh	equ	0xFF4
 22476                           prodl	equ	0xFF3
 22477                           intcon	equ	0xFF2
 22478                           intcon2	equ	0xFF1
 22479                           intcon3	equ	0xFF0
 22480                           indf0	equ	0xFEF
 22481                           postinc0	equ	0xFEE
 22482                           fsr0h	equ	0xFEA
 22483                           fsr0l	equ	0xFE9
 22484                           wreg	equ	0xFE8
 22485                           indf1	equ	0xFE7
 22486                           postdec1	equ	0xFE5
 22487                           plusw1	equ	0xFE3
 22488                           fsr1h	equ	0xFE2
 22489                           fsr1l	equ	0xFE1
 22490                           indf2	equ	0xFDF
 22491                           postinc2	equ	0xFDE
 22492                           postdec2	equ	0xFDD
 22493                           plusw2	equ	0xFDB
 22494                           fsr2h	equ	0xFDA
 22495                           fsr2l	equ	0xFD9
 22496                           status	equ	0xFD8
 22497                           
 22498 ;; *************** function _USBStallEndpoint *****************
 22499 ;; Defined at:
 22500 ;;		line 1073 in file "usb_device.c"
 22501 ;; Parameters:    Size  Location     Type
 22502 ;;  ep              1    wreg     unsigned char 
 22503 ;;  dir             1    0[COMRAM] unsigned char 
 22504 ;; Auto vars:     Size  Location     Type
 22505 ;;  ep              1    5[COMRAM] unsigned char 
 22506 ;;  p               2    6[COMRAM] PTR struct __BDT
 22507 ;;		 -> BDT(48), 
 22508 ;; Return value:  Size  Location     Type
 22509 ;;                  1    wreg      void 
 22510 ;; Registers used:
 22511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22512 ;; Tracked objects:
 22513 ;;		On entry : 0/0
 22514 ;;		On exit  : 0/0
 22515 ;;		Unchanged: 0/0
 22516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22517 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22518 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22519 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22520 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22521 ;;Total ram usage:        8 bytes
 22522 ;; Hardware stack levels used:    1
 22523 ;; This function calls:
 22524 ;;		Nothing
 22525 ;; This function is called by:
 22526 ;;		_MSDTasks
 22527 ;;		_MSDReadHandler
 22528 ;;		_MSDWriteHandler
 22529 ;;		_MSDErrorHandler
 22530 ;;		_MSDTransferTerminated
 22531 ;; This function uses a non-reentrant model
 22532 ;;
 22533                           
 22534                           	psect	text100
 22535  00423C                     __ptext100:
 22536                           	opt stack 0
 22537  00423C                     _USBStallEndpoint:
 22538                           	opt stack 27
 22539                           
 22540                           ;incstack = 0
 22541                           ;USBStallEndpoint@ep stored from wreg
 22542  00423C  6E06               	movwf	USBStallEndpoint@ep,c
 22543                           
 22544                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 22545  00423E  5006               	movf	USBStallEndpoint@ep,w,c
 22546  004240  A4D8               	btfss	status,2,c
 22547  004242  D02C               	goto	l191
 22548                           
 22549                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 22550  004244  0100               	movlb	0	; () banked
 22551  004246  EE20 F001          	lfsr	2,1
 22552  00424A  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 22553  00424C  26D9               	addwf	fsr2l,f,c
 22554  00424E  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 22555  004250  22DA               	addwfc	fsr2h,f,c
 22556  004252  0E08               	movlw	8
 22557  004254  6EDF               	movwf	indf2,c
 22558                           
 22559                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 22560  004256  EE20 F002          	lfsr	2,2
 22561  00425A  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 22562  00425C  26D9               	addwf	fsr2l,f,c
 22563  00425E  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 22564  004260  22DA               	addwfc	fsr2h,f,c
 22565  004262  0E30               	movlw	48
 22566  004264  6EDE               	movwf	postinc2,c
 22567  004266  0E0D               	movlw	13
 22568  004268  6EDD               	movwf	postdec2,c
 22569                           
 22570                           ; BSR set to: 0
 22571                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 22572  00426A  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22573  00426E  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22574  004272  0E0C               	movlw	12
 22575  004274  6EDF               	movwf	indf2,c
 22576                           
 22577                           ; BSR set to: 0
 22578                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22579  004276  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22580  00427A  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22581  00427E  0E00               	movlw	0
 22582  004280  8EDB               	bsf	plusw2,7,c
 22583                           
 22584                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 22585  004282  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 22586  004286  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22587  00428A  0E04               	movlw	4
 22588  00428C  6EDF               	movwf	indf2,c
 22589                           
 22590                           ; BSR set to: 0
 22591                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22592  00428E  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 22593  004292  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22594  004296  0E00               	movlw	0
 22595  004298  8EDB               	bsf	plusw2,7,c
 22596                           
 22597                           ;usb_device.c: 1089: }
 22598  00429A  0012               	return	
 22599  00429C                     l191:
 22600                           
 22601                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 22602                           
 22603                           ; BSR set to: 0
 22604  00429C  5001               	movf	USBStallEndpoint@dir,w,c
 22605  00429E  6E02               	movwf	??_USBStallEndpoint& (0+255),c
 22606  0042A0  6A03               	clrf	(??_USBStallEndpoint+1)& (0+255),c
 22607  0042A2  90D8               	bcf	status,0,c
 22608  0042A4  3602               	rlcf	??_USBStallEndpoint,f,c
 22609  0042A6  3603               	rlcf	??_USBStallEndpoint+1,f,c
 22610  0042A8  5006               	movf	USBStallEndpoint@ep,w,c
 22611  0042AA  6E04               	movwf	(??_USBStallEndpoint+2)& (0+255),c
 22612  0042AC  6A05               	clrf	(??_USBStallEndpoint+3)& (0+255),c
 22613  0042AE  90D8               	bcf	status,0,c
 22614  0042B0  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22615  0042B2  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22616  0042B4  90D8               	bcf	status,0,c
 22617  0042B6  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22618  0042B8  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22619  0042BA  5002               	movf	??_USBStallEndpoint,w,c
 22620  0042BC  2604               	addwf	??_USBStallEndpoint+2,f,c
 22621  0042BE  5003               	movf	??_USBStallEndpoint+1,w,c
 22622  0042C0  2205               	addwfc	??_USBStallEndpoint+3,f,c
 22623  0042C2  90D8               	bcf	status,0,c
 22624  0042C4  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22625  0042C6  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22626  0042C8  90D8               	bcf	status,0,c
 22627  0042CA  3604               	rlcf	??_USBStallEndpoint+2,f,c
 22628  0042CC  3605               	rlcf	??_USBStallEndpoint+3,f,c
 22629  0042CE  0E00               	movlw	0
 22630  0042D0  2404               	addwf	??_USBStallEndpoint+2,w,c
 22631  0042D2  6E07               	movwf	USBStallEndpoint@p,c
 22632  0042D4  0E0D               	movlw	13
 22633  0042D6  2005               	addwfc	??_USBStallEndpoint+3,w,c
 22634  0042D8  6E08               	movwf	USBStallEndpoint@p+1,c
 22635                           
 22636                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 22637  0042DA  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22638  0042DE  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22639  0042E2  0E00               	movlw	0
 22640  0042E4  84DB               	bsf	plusw2,2,c
 22641                           
 22642                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 22643  0042E6  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22644  0042EA  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22645  0042EE  0E00               	movlw	0
 22646  0042F0  8EDB               	bsf	plusw2,7,c
 22647                           
 22648                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 22649  0042F2  5006               	movf	USBStallEndpoint@ep,w,c
 22650  0042F4  0D04               	mullw	4
 22651  0042F6  CFF3 F002          	movff	prodl,??_USBStallEndpoint
 22652  0042FA  CFF4 F003          	movff	prodh,??_USBStallEndpoint+1
 22653  0042FE  5001               	movf	USBStallEndpoint@dir,w,c
 22654  004300  0D02               	mullw	2
 22655  004302  50F3               	movf	prodl,w,c
 22656  004304  2602               	addwf	??_USBStallEndpoint,f,c
 22657  004306  50F4               	movf	prodh,w,c
 22658  004308  2203               	addwfc	??_USBStallEndpoint+1,f,c
 22659  00430A  90D8               	bcf	status,0,c
 22660  00430C  3602               	rlcf	??_USBStallEndpoint,f,c
 22661  00430E  3603               	rlcf	??_USBStallEndpoint+1,f,c
 22662  004310  90D8               	bcf	status,0,c
 22663  004312  3602               	rlcf	??_USBStallEndpoint,f,c
 22664  004314  3603               	rlcf	??_USBStallEndpoint+1,f,c
 22665  004316  0E04               	movlw	4
 22666  004318  2602               	addwf	??_USBStallEndpoint,f,c
 22667  00431A  0E00               	movlw	0
 22668  00431C  2203               	addwfc	??_USBStallEndpoint+1,f,c
 22669  00431E  0E00               	movlw	0
 22670  004320  2402               	addwf	??_USBStallEndpoint,w,c
 22671  004322  6E07               	movwf	USBStallEndpoint@p,c
 22672  004324  0E0D               	movlw	13
 22673  004326  2003               	addwfc	??_USBStallEndpoint+1,w,c
 22674  004328  6E08               	movwf	USBStallEndpoint@p+1,c
 22675                           
 22676                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 22677  00432A  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22678  00432E  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22679  004332  0E00               	movlw	0
 22680  004334  84DB               	bsf	plusw2,2,c
 22681                           
 22682                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 22683  004336  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 22684  00433A  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 22685  00433E  0E00               	movlw	0
 22686  004340  8EDB               	bsf	plusw2,7,c
 22687  004342  0012               	return	
 22688  004344                     __end_of_USBStallEndpoint:
 22689                           	opt stack 0
 22690                           tosu	equ	0xFFF
 22691                           tosh	equ	0xFFE
 22692                           tosl	equ	0xFFD
 22693                           pclath	equ	0xFFA
 22694                           tblptru	equ	0xFF8
 22695                           tblptrh	equ	0xFF7
 22696                           tblptrl	equ	0xFF6
 22697                           tablat	equ	0xFF5
 22698                           prodh	equ	0xFF4
 22699                           prodl	equ	0xFF3
 22700                           intcon	equ	0xFF2
 22701                           intcon2	equ	0xFF1
 22702                           intcon3	equ	0xFF0
 22703                           indf0	equ	0xFEF
 22704                           postinc0	equ	0xFEE
 22705                           fsr0h	equ	0xFEA
 22706                           fsr0l	equ	0xFE9
 22707                           wreg	equ	0xFE8
 22708                           indf1	equ	0xFE7
 22709                           postdec1	equ	0xFE5
 22710                           plusw1	equ	0xFE3
 22711                           fsr1h	equ	0xFE2
 22712                           fsr1l	equ	0xFE1
 22713                           indf2	equ	0xFDF
 22714                           postinc2	equ	0xFDE
 22715                           postdec2	equ	0xFDD
 22716                           plusw2	equ	0xFDB
 22717                           fsr2h	equ	0xFDA
 22718                           fsr2l	equ	0xFD9
 22719                           status	equ	0xFD8
 22720                           
 22721 ;; *************** function _ResetSenseData *****************
 22722 ;; Defined at:
 22723 ;;		line 1373 in file "usb_device_msd.c"
 22724 ;; Parameters:    Size  Location     Type
 22725 ;;		None
 22726 ;; Auto vars:     Size  Location     Type
 22727 ;;		None
 22728 ;; Return value:  Size  Location     Type
 22729 ;;                  1    wreg      void 
 22730 ;; Registers used:
 22731 ;;		wreg, status,2
 22732 ;; Tracked objects:
 22733 ;;		On entry : 0/0
 22734 ;;		On exit  : 0/0
 22735 ;;		Unchanged: 0/0
 22736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22741 ;;Total ram usage:        0 bytes
 22742 ;; Hardware stack levels used:    1
 22743 ;; This function calls:
 22744 ;;		Nothing
 22745 ;; This function is called by:
 22746 ;;		_USBMSDInit
 22747 ;;		_MSDProcessCommandMediaAbsent
 22748 ;;		_MSDProcessCommandMediaPresent
 22749 ;;		_MSDErrorHandler
 22750 ;; This function uses a non-reentrant model
 22751 ;;
 22752                           
 22753                           	psect	text101
 22754  006E24                     __ptext101:
 22755                           	opt stack 0
 22756  006E24                     _ResetSenseData:
 22757                           	opt stack 26
 22758                           
 22759                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 22760                           
 22761                           ;incstack = 0
 22762  006E24  0101               	movlb	1	; () banked
 22763  006E26  911F               	bcf	_gblSenseData& (0+255),0,b
 22764  006E28  931F               	bcf	_gblSenseData& (0+255),1,b
 22765  006E2A  951F               	bcf	_gblSenseData& (0+255),2,b
 22766  006E2C  971F               	bcf	_gblSenseData& (0+255),3,b
 22767  006E2E  891F               	bsf	_gblSenseData& (0+255),4,b
 22768  006E30  8B1F               	bsf	_gblSenseData& (0+255),5,b
 22769  006E32  8D1F               	bsf	_gblSenseData& (0+255),6,b
 22770                           
 22771                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 22772  006E34  9F1F               	bcf	_gblSenseData& (0+255),7,b
 22773                           
 22774                           ; BSR set to: 1
 22775                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 22776  006E36  0E00               	movlw	0
 22777  006E38  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 22778                           
 22779                           ; BSR set to: 1
 22780                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 22781  006E3A  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 22782  006E3C  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 22783  006E3E  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 22784  006E40  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 22785                           
 22786                           ; BSR set to: 1
 22787                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 22788  006E42  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 22789                           
 22790                           ; BSR set to: 1
 22791                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 22792  006E44  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 22793                           
 22794                           ; BSR set to: 1
 22795                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 22796  006E46  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 22797                           
 22798                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 22799  006E48  0E00               	movlw	0
 22800  006E4A  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 22801                           
 22802                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 22803  006E4C  0E00               	movlw	0
 22804  006E4E  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 22805                           
 22806                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 22807  006E50  0E00               	movlw	0
 22808  006E52  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 22809                           
 22810                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 22811  006E54  0E00               	movlw	0
 22812  006E56  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 22813                           
 22814                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 22815  006E58  0E0A               	movlw	10
 22816  006E5A  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 22817                           
 22818                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 22819  006E5C  0E00               	movlw	0
 22820  006E5E  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 22821  006E60  0E00               	movlw	0
 22822  006E62  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 22823  006E64  0E00               	movlw	0
 22824  006E66  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 22825  006E68  0E00               	movlw	0
 22826  006E6A  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 22827                           
 22828                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 22829  006E6C  0E00               	movlw	0
 22830  006E6E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 22831                           
 22832                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 22833  006E70  0E00               	movlw	0
 22834  006E72  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 22835                           
 22836                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 22837  006E74  0E00               	movlw	0
 22838  006E76  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 22839                           
 22840                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 22841  006E78  0E00               	movlw	0
 22842  006E7A  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 22843                           
 22844                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 22845  006E7C  0E00               	movlw	0
 22846  006E7E  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 22847                           
 22848                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 22849  006E80  0E00               	movlw	0
 22850  006E82  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 22851                           
 22852                           ; BSR set to: 1
 22853  006E84  0012               	return		;funcret
 22854  006E86                     __end_of_ResetSenseData:
 22855                           	opt stack 0
 22856                           tosu	equ	0xFFF
 22857                           tosh	equ	0xFFE
 22858                           tosl	equ	0xFFD
 22859                           pclath	equ	0xFFA
 22860                           tblptru	equ	0xFF8
 22861                           tblptrh	equ	0xFF7
 22862                           tblptrl	equ	0xFF6
 22863                           tablat	equ	0xFF5
 22864                           prodh	equ	0xFF4
 22865                           prodl	equ	0xFF3
 22866                           intcon	equ	0xFF2
 22867                           intcon2	equ	0xFF1
 22868                           intcon3	equ	0xFF0
 22869                           indf0	equ	0xFEF
 22870                           postinc0	equ	0xFEE
 22871                           fsr0h	equ	0xFEA
 22872                           fsr0l	equ	0xFE9
 22873                           wreg	equ	0xFE8
 22874                           indf1	equ	0xFE7
 22875                           postdec1	equ	0xFE5
 22876                           plusw1	equ	0xFE3
 22877                           fsr1h	equ	0xFE2
 22878                           fsr1l	equ	0xFE1
 22879                           indf2	equ	0xFDF
 22880                           postinc2	equ	0xFDE
 22881                           postdec2	equ	0xFDD
 22882                           plusw2	equ	0xFDB
 22883                           fsr2h	equ	0xFDA
 22884                           fsr2l	equ	0xFD9
 22885                           status	equ	0xFD8
 22886                           
 22887 ;; *************** function _ExternalFlash_SectorRead *****************
 22888 ;; Defined at:
 22889 ;;		line 40 in file "external_flash.c"
 22890 ;; Parameters:    Size  Location     Type
 22891 ;;  config          2   43[COMRAM] PTR void 
 22892 ;;		 -> NULL(0), 
 22893 ;;  sector_addr     4   45[COMRAM] unsigned long 
 22894 ;;  buffer          2   49[COMRAM] PTR unsigned char 
 22895 ;;		 -> msd_buffer(512), 
 22896 ;; Auto vars:     Size  Location     Type
 22897 ;;  page            2   51[COMRAM] unsigned int 
 22898 ;; Return value:  Size  Location     Type
 22899 ;;                  1    wreg      unsigned char 
 22900 ;; Registers used:
 22901 ;;		wreg, status,2, status,0, cstack
 22902 ;; Tracked objects:
 22903 ;;		On entry : 0/0
 22904 ;;		On exit  : 0/0
 22905 ;;		Unchanged: 0/0
 22906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22907 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22908 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22910 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22911 ;;Total ram usage:       10 bytes
 22912 ;; Hardware stack levels used:    1
 22913 ;; Hardware stack levels required when called:    5
 22914 ;; This function calls:
 22915 ;;		_flash_page_read
 22916 ;; This function is called by:
 22917 ;;		_MSDReadHandler
 22918 ;; This function uses a non-reentrant model
 22919 ;;
 22920                           
 22921                           	psect	text102
 22922  007A8C                     __ptext102:
 22923                           	opt stack 0
 22924  007A8C                     _ExternalFlash_SectorRead:
 22925                           	opt stack 20
 22926                           
 22927                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 22928                           
 22929                           ; BSR set to: 1
 22930                           ;incstack = 0
 22931  007A8C  C02E  F034         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 22932  007A90  C02F  F035         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 22933                           
 22934                           ;external_flash.c: 45: if(sector_addr >= 8192)
 22935  007A94  5031               	movf	ExternalFlash_SectorRead@sector_addr+3,w,c
 22936  007A96  1030               	iorwf	ExternalFlash_SectorRead@sector_addr+2,w,c
 22937  007A98  E104               	bnz	u7230
 22938  007A9A  0E20               	movlw	32
 22939  007A9C  5C2F               	subwf	ExternalFlash_SectorRead@sector_addr+1,w,c
 22940  007A9E  A0D8               	btfss	status,0,c
 22941  007AA0  D002               	goto	l1873
 22942  007AA2                     u7230:
 22943                           
 22944                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 22945  007AA2  0E00               	movlw	0
 22946  007AA4  0012               	return	
 22947  007AA6                     l1873:
 22948                           
 22949                           ;external_flash.c: 48: };external_flash.c: 51: flash_page_read(page, buffer);
 22950  007AA6  C034  F028         	movff	ExternalFlash_SectorRead@page,flash_page_read@page
 22951  007AAA  C035  F029         	movff	ExternalFlash_SectorRead@page+1,flash_page_read@page+1
 22952  007AAE  C032  F02A         	movff	ExternalFlash_SectorRead@buffer,flash_page_read@data
 22953  007AB2  C033  F02B         	movff	ExternalFlash_SectorRead@buffer+1,flash_page_read@data+1
 22954  007AB6  EC5F  F03D         	call	_flash_page_read	;wreg free
 22955                           
 22956                           ;external_flash.c: 53: return 1;
 22957  007ABA  0E01               	movlw	1
 22958  007ABC  0012               	return	
 22959  007ABE                     __end_of_ExternalFlash_SectorRead:
 22960                           	opt stack 0
 22961                           tosu	equ	0xFFF
 22962                           tosh	equ	0xFFE
 22963                           tosl	equ	0xFFD
 22964                           pclath	equ	0xFFA
 22965                           tblptru	equ	0xFF8
 22966                           tblptrh	equ	0xFF7
 22967                           tblptrl	equ	0xFF6
 22968                           tablat	equ	0xFF5
 22969                           prodh	equ	0xFF4
 22970                           prodl	equ	0xFF3
 22971                           intcon	equ	0xFF2
 22972                           intcon2	equ	0xFF1
 22973                           intcon3	equ	0xFF0
 22974                           indf0	equ	0xFEF
 22975                           postinc0	equ	0xFEE
 22976                           fsr0h	equ	0xFEA
 22977                           fsr0l	equ	0xFE9
 22978                           wreg	equ	0xFE8
 22979                           indf1	equ	0xFE7
 22980                           postdec1	equ	0xFE5
 22981                           plusw1	equ	0xFE3
 22982                           fsr1h	equ	0xFE2
 22983                           fsr1l	equ	0xFE1
 22984                           indf2	equ	0xFDF
 22985                           postinc2	equ	0xFDE
 22986                           postdec2	equ	0xFDD
 22987                           plusw2	equ	0xFDB
 22988                           fsr2h	equ	0xFDA
 22989                           fsr2l	equ	0xFD9
 22990                           status	equ	0xFD8
 22991                           
 22992 ;; *************** function _flash_page_read *****************
 22993 ;; Defined at:
 22994 ;;		line 419 in file "flash.c"
 22995 ;; Parameters:    Size  Location     Type
 22996 ;;  page            2   39[COMRAM] unsigned int 
 22997 ;;  data            2   41[COMRAM] PTR unsigned char 
 22998 ;;		 -> buffer(512), msd_buffer(512), 
 22999 ;; Auto vars:     Size  Location     Type
 23000 ;;		None
 23001 ;; Return value:  Size  Location     Type
 23002 ;;                  1    wreg      void 
 23003 ;; Registers used:
 23004 ;;		wreg, status,2, status,0, cstack
 23005 ;; Tracked objects:
 23006 ;;		On entry : 0/0
 23007 ;;		On exit  : 0/0
 23008 ;;		Unchanged: 0/0
 23009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23010 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23013 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23014 ;;Total ram usage:        4 bytes
 23015 ;; Hardware stack levels used:    1
 23016 ;; Hardware stack levels required when called:    4
 23017 ;; This function calls:
 23018 ;;		__flash_partial_read
 23019 ;;		_spi_set_configuration
 23020 ;; This function is called by:
 23021 ;;		_ExternalFlash_SectorRead
 23022 ;;		_fat_get_format_status
 23023 ;; This function uses a non-reentrant model
 23024 ;;
 23025                           
 23026                           	psect	text103
 23027  007ABE                     __ptext103:
 23028                           	opt stack 0
 23029  007ABE                     _flash_page_read:
 23030                           	opt stack 23
 23031                           
 23032                           ;flash.c: 422: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 23033                           
 23034                           ;incstack = 0
 23035  007ABE  0E00               	movlw	0
 23036  007AC0  EC2C  F024         	call	_spi_set_configuration
 23037                           
 23038                           ;flash.c: 425: _flash_partial_read(page, 0, 512, data);
 23039  007AC4  C028  F014         	movff	flash_page_read@page,__flash_partial_read@page
 23040  007AC8  C029  F015         	movff	flash_page_read@page+1,__flash_partial_read@page+1
 23041  007ACC  0E00               	movlw	0
 23042  007ACE  6E17               	movwf	__flash_partial_read@start+1,c
 23043  007AD0  0E00               	movlw	0
 23044  007AD2  6E16               	movwf	__flash_partial_read@start,c
 23045  007AD4  0E02               	movlw	2
 23046  007AD6  6E19               	movwf	__flash_partial_read@length+1,c
 23047  007AD8  0E00               	movlw	0
 23048  007ADA  6E18               	movwf	__flash_partial_read@length,c
 23049  007ADC  C02A  F01A         	movff	flash_page_read@data,__flash_partial_read@data
 23050  007AE0  C02B  F01B         	movff	flash_page_read@data+1,__flash_partial_read@data+1
 23051  007AE4  ECA6  F033         	call	__flash_partial_read	;wreg free
 23052                           
 23053                           ;flash.c: 428: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 23054  007AE8  0E01               	movlw	1
 23055  007AEA  EC2C  F024         	call	_spi_set_configuration
 23056  007AEE  0012               	return		;funcret
 23057  007AF0                     __end_of_flash_page_read:
 23058                           	opt stack 0
 23059                           tosu	equ	0xFFF
 23060                           tosh	equ	0xFFE
 23061                           tosl	equ	0xFFD
 23062                           pclath	equ	0xFFA
 23063                           tblptru	equ	0xFF8
 23064                           tblptrh	equ	0xFF7
 23065                           tblptrl	equ	0xFF6
 23066                           tablat	equ	0xFF5
 23067                           prodh	equ	0xFF4
 23068                           prodl	equ	0xFF3
 23069                           intcon	equ	0xFF2
 23070                           intcon2	equ	0xFF1
 23071                           intcon3	equ	0xFF0
 23072                           indf0	equ	0xFEF
 23073                           postinc0	equ	0xFEE
 23074                           fsr0h	equ	0xFEA
 23075                           fsr0l	equ	0xFE9
 23076                           wreg	equ	0xFE8
 23077                           indf1	equ	0xFE7
 23078                           postdec1	equ	0xFE5
 23079                           plusw1	equ	0xFE3
 23080                           fsr1h	equ	0xFE2
 23081                           fsr1l	equ	0xFE1
 23082                           indf2	equ	0xFDF
 23083                           postinc2	equ	0xFDE
 23084                           postdec2	equ	0xFDD
 23085                           plusw2	equ	0xFDB
 23086                           fsr2h	equ	0xFDA
 23087                           fsr2l	equ	0xFD9
 23088                           status	equ	0xFD8
 23089                           
 23090 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 23091 ;; Defined at:
 23092 ;;		line 993 in file "usb_device_msd.c"
 23093 ;; Parameters:    Size  Location     Type
 23094 ;;  DiExpected      2    0[COMRAM] unsigned int 
 23095 ;; Auto vars:     Size  Location     Type
 23096 ;;		None
 23097 ;; Return value:  Size  Location     Type
 23098 ;;                  1    wreg      void 
 23099 ;; Registers used:
 23100 ;;		wreg, status,2, status,0
 23101 ;; Tracked objects:
 23102 ;;		On entry : 0/0
 23103 ;;		On exit  : 0/0
 23104 ;;		Unchanged: 0/0
 23105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23106 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23108 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23109 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23110 ;;Total ram usage:        6 bytes
 23111 ;; Hardware stack levels used:    1
 23112 ;; This function calls:
 23113 ;;		Nothing
 23114 ;; This function is called by:
 23115 ;;		_MSDProcessCommandMediaPresent
 23116 ;; This function uses a non-reentrant model
 23117 ;;
 23118                           
 23119                           	psect	text104
 23120  005F32                     __ptext104:
 23121                           	opt stack 0
 23122  005F32                     _MSDComputeDeviceInAndResidue:
 23123                           	opt stack 26
 23124                           
 23125                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 23126                           
 23127                           ;incstack = 0
 23128  005F32  5001               	movf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 23129  005F34  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 23130  005F36  5002               	movf	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 23131  005F38  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 23132  005F3A  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 23133  005F3C  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 23134  005F3E  5003               	movf	??_MSDComputeDeviceInAndResidue,w,c
 23135  005F40  0101               	movlb	1	; () banked
 23136  005F42  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 23137  005F44  5004               	movf	??_MSDComputeDeviceInAndResidue+1,w,c
 23138  005F46  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 23139  005F48  5005               	movf	??_MSDComputeDeviceInAndResidue+2,w,c
 23140  005F4A  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 23141  005F4C  5006               	movf	??_MSDComputeDeviceInAndResidue+3,w,c
 23142  005F4E  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 23143  005F50  B0D8               	btfsc	status,0,c
 23144  005F52  D00E               	goto	l659
 23145                           
 23146                           ; BSR set to: 1
 23147                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 23148  005F54  0E00               	movlw	0
 23149  005F56  010D               	movlb	13	; () banked
 23150  005F58  6F88               	movwf	136,b	;volatile
 23151  005F5A  0E00               	movlw	0
 23152  005F5C  6F89               	movwf	137,b	;volatile
 23153  005F5E  0E00               	movlw	0
 23154  005F60  6F8A               	movwf	138,b	;volatile
 23155  005F62  0E00               	movlw	0
 23156  005F64  6F8B               	movwf	139,b	;volatile
 23157                           
 23158                           ; BSR set to: 13
 23159                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 23160  005F66  C108  F086         	movff	_gblCBW+8,_TransferLength
 23161  005F6A  C109  F087         	movff	_gblCBW+9,_TransferLength+1
 23162                           
 23163                           ;usb_device_msd.c: 1002: }
 23164  005F6E  0012               	return	
 23165  005F70                     l659:
 23166                           
 23167                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 23168                           
 23169                           ; BSR set to: 13
 23170  005F70  0100               	movlb	0	; () banked
 23171  005F72  5186               	movf	_TransferLength& (0+255),w,b
 23172  005F74  5C01               	subwf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 23173  005F76  5187               	movf	(_TransferLength+1)& (0+255),w,b
 23174  005F78  5802               	subwfb	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 23175  005F7A  B0D8               	btfsc	status,0,c
 23176  005F7C  D004               	goto	l661
 23177                           
 23178                           ; BSR set to: 0
 23179                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 23180  005F7E  C001  F086         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 23181  005F82  C002  F087         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 23182  005F86                     l661:
 23183                           
 23184                           ; BSR set to: 0
 23185                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 23186                           
 23187                           ; BSR set to: 0
 23188  005F86  5186               	movf	_TransferLength& (0+255),w,b
 23189  005F88  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 23190  005F8A  5187               	movf	(_TransferLength+1)& (0+255),w,b
 23191  005F8C  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 23192  005F8E  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 23193  005F90  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 23194  005F92  1E03               	comf	??_MSDComputeDeviceInAndResidue,f,c
 23195  005F94  1E04               	comf	??_MSDComputeDeviceInAndResidue+1,f,c
 23196  005F96  1E05               	comf	??_MSDComputeDeviceInAndResidue+2,f,c
 23197  005F98  1E06               	comf	??_MSDComputeDeviceInAndResidue+3,f,c
 23198  005F9A  2A03               	incf	??_MSDComputeDeviceInAndResidue,f,c
 23199  005F9C  0E00               	movlw	0
 23200  005F9E  2204               	addwfc	??_MSDComputeDeviceInAndResidue+1,f,c
 23201  005FA0  2205               	addwfc	??_MSDComputeDeviceInAndResidue+2,f,c
 23202  005FA2  2206               	addwfc	??_MSDComputeDeviceInAndResidue+3,f,c
 23203  005FA4  0101               	movlb	1	; () banked
 23204  005FA6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 23205  005FA8  2403               	addwf	??_MSDComputeDeviceInAndResidue,w,c
 23206  005FAA  010D               	movlb	13	; () banked
 23207  005FAC  6F88               	movwf	136,b	;volatile
 23208  005FAE  0101               	movlb	1	; () banked
 23209  005FB0  5109               	movf	(_gblCBW+9)& (0+255),w,b
 23210  005FB2  2004               	addwfc	??_MSDComputeDeviceInAndResidue+1,w,c
 23211  005FB4  010D               	movlb	13	; () banked
 23212  005FB6  6F89               	movwf	137,b	;volatile
 23213  005FB8  0101               	movlb	1	; () banked
 23214  005FBA  510A               	movf	(_gblCBW+10)& (0+255),w,b
 23215  005FBC  2005               	addwfc	??_MSDComputeDeviceInAndResidue+2,w,c
 23216  005FBE  010D               	movlb	13	; () banked
 23217  005FC0  6F8A               	movwf	138,b	;volatile
 23218  005FC2  0101               	movlb	1	; () banked
 23219  005FC4  510B               	movf	(_gblCBW+11)& (0+255),w,b
 23220  005FC6  2006               	addwfc	??_MSDComputeDeviceInAndResidue+3,w,c
 23221  005FC8  010D               	movlb	13	; () banked
 23222  005FCA  6F8B               	movwf	139,b	;volatile
 23223  005FCC  0012               	return	
 23224  005FCE                     __end_of_MSDComputeDeviceInAndResidue:
 23225                           	opt stack 0
 23226                           tosu	equ	0xFFF
 23227                           tosh	equ	0xFFE
 23228                           tosl	equ	0xFFD
 23229                           pclath	equ	0xFFA
 23230                           tblptru	equ	0xFF8
 23231                           tblptrh	equ	0xFF7
 23232                           tblptrl	equ	0xFF6
 23233                           tablat	equ	0xFF5
 23234                           prodh	equ	0xFF4
 23235                           prodl	equ	0xFF3
 23236                           intcon	equ	0xFF2
 23237                           intcon2	equ	0xFF1
 23238                           intcon3	equ	0xFF0
 23239                           indf0	equ	0xFEF
 23240                           postinc0	equ	0xFEE
 23241                           fsr0h	equ	0xFEA
 23242                           fsr0l	equ	0xFE9
 23243                           wreg	equ	0xFE8
 23244                           indf1	equ	0xFE7
 23245                           postdec1	equ	0xFE5
 23246                           plusw1	equ	0xFE3
 23247                           fsr1h	equ	0xFE2
 23248                           fsr1l	equ	0xFE1
 23249                           indf2	equ	0xFDF
 23250                           postinc2	equ	0xFDE
 23251                           postdec2	equ	0xFDD
 23252                           plusw2	equ	0xFDB
 23253                           fsr2h	equ	0xFDA
 23254                           fsr2l	equ	0xFD9
 23255                           status	equ	0xFD8
 23256                           
 23257 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 23258 ;; Defined at:
 23259 ;;		line 18 in file "external_flash.c"
 23260 ;; Parameters:    Size  Location     Type
 23261 ;;  config          2    0[COMRAM] PTR void 
 23262 ;;		 -> NULL(0), 
 23263 ;; Auto vars:     Size  Location     Type
 23264 ;;		None
 23265 ;; Return value:  Size  Location     Type
 23266 ;;                  2    0[COMRAM] unsigned int 
 23267 ;; Registers used:
 23268 ;;		wreg, status,2
 23269 ;; Tracked objects:
 23270 ;;		On entry : 0/0
 23271 ;;		On exit  : 0/0
 23272 ;;		Unchanged: 0/0
 23273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23274 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23277 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23278 ;;Total ram usage:        2 bytes
 23279 ;; Hardware stack levels used:    1
 23280 ;; This function calls:
 23281 ;;		Nothing
 23282 ;; This function is called by:
 23283 ;;		_MSDProcessCommandMediaPresent
 23284 ;; This function uses a non-reentrant model
 23285 ;;
 23286                           
 23287                           	psect	text105
 23288  008054                     __ptext105:
 23289                           	opt stack 0
 23290  008054                     _ExternalFlash_SectorSizeRead:
 23291                           	opt stack 26
 23292                           
 23293                           ;external_flash.c: 20: return 512;
 23294                           
 23295                           ; BSR set to: 13
 23296                           ;incstack = 0
 23297  008054  0E02               	movlw	2
 23298  008056  6E02               	movwf	?_ExternalFlash_SectorSizeRead+1,c
 23299  008058  0E00               	movlw	0
 23300  00805A  6E01               	movwf	?_ExternalFlash_SectorSizeRead,c
 23301  00805C  0012               	return	
 23302  00805E                     __end_of_ExternalFlash_SectorSizeRead:
 23303                           	opt stack 0
 23304                           tosu	equ	0xFFF
 23305                           tosh	equ	0xFFE
 23306                           tosl	equ	0xFFD
 23307                           pclath	equ	0xFFA
 23308                           tblptru	equ	0xFF8
 23309                           tblptrh	equ	0xFF7
 23310                           tblptrl	equ	0xFF6
 23311                           tablat	equ	0xFF5
 23312                           prodh	equ	0xFF4
 23313                           prodl	equ	0xFF3
 23314                           intcon	equ	0xFF2
 23315                           intcon2	equ	0xFF1
 23316                           intcon3	equ	0xFF0
 23317                           indf0	equ	0xFEF
 23318                           postinc0	equ	0xFEE
 23319                           fsr0h	equ	0xFEA
 23320                           fsr0l	equ	0xFE9
 23321                           wreg	equ	0xFE8
 23322                           indf1	equ	0xFE7
 23323                           postdec1	equ	0xFE5
 23324                           plusw1	equ	0xFE3
 23325                           fsr1h	equ	0xFE2
 23326                           fsr1l	equ	0xFE1
 23327                           indf2	equ	0xFDF
 23328                           postinc2	equ	0xFDE
 23329                           postdec2	equ	0xFDD
 23330                           plusw2	equ	0xFDB
 23331                           fsr2h	equ	0xFDA
 23332                           fsr2l	equ	0xFD9
 23333                           status	equ	0xFD8
 23334                           
 23335 ;; *************** function _ExternalFlash_CapacityRead *****************
 23336 ;; Defined at:
 23337 ;;		line 23 in file "external_flash.c"
 23338 ;; Parameters:    Size  Location     Type
 23339 ;;  config          2    0[COMRAM] PTR void 
 23340 ;;		 -> NULL(0), 
 23341 ;; Auto vars:     Size  Location     Type
 23342 ;;		None
 23343 ;; Return value:  Size  Location     Type
 23344 ;;                  4    0[COMRAM] unsigned long 
 23345 ;; Registers used:
 23346 ;;		wreg, status,2
 23347 ;; Tracked objects:
 23348 ;;		On entry : 0/0
 23349 ;;		On exit  : 0/0
 23350 ;;		Unchanged: 0/0
 23351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23352 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23355 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23356 ;;Total ram usage:        4 bytes
 23357 ;; Hardware stack levels used:    1
 23358 ;; This function calls:
 23359 ;;		Nothing
 23360 ;; This function is called by:
 23361 ;;		_MSDProcessCommandMediaPresent
 23362 ;; This function uses a non-reentrant model
 23363 ;;
 23364                           
 23365                           	psect	text106
 23366  007F7C                     __ptext106:
 23367                           	opt stack 0
 23368  007F7C                     _ExternalFlash_CapacityRead:
 23369                           	opt stack 26
 23370                           
 23371                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 23372                           
 23373                           ;incstack = 0
 23374  007F7C  0EFF               	movlw	255
 23375  007F7E  6E01               	movwf	?_ExternalFlash_CapacityRead,c
 23376  007F80  0E1F               	movlw	31
 23377  007F82  6E02               	movwf	?_ExternalFlash_CapacityRead+1,c
 23378  007F84  0E00               	movlw	0
 23379  007F86  6E03               	movwf	?_ExternalFlash_CapacityRead+2,c
 23380  007F88  0E00               	movlw	0
 23381  007F8A  6E04               	movwf	?_ExternalFlash_CapacityRead+3,c
 23382  007F8C  0012               	return	
 23383  007F8E                     __end_of_ExternalFlash_CapacityRead:
 23384                           	opt stack 0
 23385                           tosu	equ	0xFFF
 23386                           tosh	equ	0xFFE
 23387                           tosl	equ	0xFFD
 23388                           pclath	equ	0xFFA
 23389                           tblptru	equ	0xFF8
 23390                           tblptrh	equ	0xFF7
 23391                           tblptrl	equ	0xFF6
 23392                           tablat	equ	0xFF5
 23393                           prodh	equ	0xFF4
 23394                           prodl	equ	0xFF3
 23395                           intcon	equ	0xFF2
 23396                           intcon2	equ	0xFF1
 23397                           intcon3	equ	0xFF0
 23398                           indf0	equ	0xFEF
 23399                           postinc0	equ	0xFEE
 23400                           fsr0h	equ	0xFEA
 23401                           fsr0l	equ	0xFE9
 23402                           wreg	equ	0xFE8
 23403                           indf1	equ	0xFE7
 23404                           postdec1	equ	0xFE5
 23405                           plusw1	equ	0xFE3
 23406                           fsr1h	equ	0xFE2
 23407                           fsr1l	equ	0xFE1
 23408                           indf2	equ	0xFDF
 23409                           postinc2	equ	0xFDE
 23410                           postdec2	equ	0xFDD
 23411                           plusw2	equ	0xFDB
 23412                           fsr2h	equ	0xFDA
 23413                           fsr2l	equ	0xFD9
 23414                           status	equ	0xFD8
 23415                           
 23416 ;; *************** function _ExternalFlash_MediaInitialize *****************
 23417 ;; Defined at:
 23418 ;;		line 10 in file "external_flash.c"
 23419 ;; Parameters:    Size  Location     Type
 23420 ;;  config          2    0[COMRAM] PTR void 
 23421 ;;		 -> NULL(0), 
 23422 ;; Auto vars:     Size  Location     Type
 23423 ;;		None
 23424 ;; Return value:  Size  Location     Type
 23425 ;;                  2    0[COMRAM] PTR struct .
 23426 ;; Registers used:
 23427 ;;		wreg, status,2, status,0
 23428 ;; Tracked objects:
 23429 ;;		On entry : 0/0
 23430 ;;		On exit  : 0/0
 23431 ;;		Unchanged: 0/0
 23432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23433 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23436 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23437 ;;Total ram usage:        2 bytes
 23438 ;; Hardware stack levels used:    1
 23439 ;; This function calls:
 23440 ;;		Nothing
 23441 ;; This function is called by:
 23442 ;;		_USBMSDInit
 23443 ;;		_MSDProcessCommand
 23444 ;; This function uses a non-reentrant model
 23445 ;;
 23446                           
 23447                           	psect	text107
 23448  007EDC                     __ptext107:
 23449                           	opt stack 0
 23450  007EDC                     _ExternalFlash_MediaInitialize:
 23451                           	opt stack 26
 23452                           
 23453                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 23454                           
 23455                           ;incstack = 0
 23456  007EDC  0101               	movlb	1	; () banked
 23457  007EDE  81DE               	bsf	(_mediaInformation+1)& (0+255),0,b
 23458                           
 23459                           ; BSR set to: 1
 23460                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 23461  007EE0  0E02               	movlw	2
 23462  007EE2  6FE0               	movwf	(_mediaInformation+3)& (0+255),b
 23463  007EE4  0E00               	movlw	0
 23464  007EE6  6FDF               	movwf	(_mediaInformation+2)& (0+255),b
 23465                           
 23466                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 23467  007EE8  0E00               	movlw	0
 23468  007EEA  6FDD               	movwf	_mediaInformation& (0+255),b
 23469                           
 23470                           ; BSR set to: 1
 23471                           ;external_flash.c: 15: return &mediaInformation;
 23472  007EEC  0EDD               	movlw	low _mediaInformation
 23473  007EEE  6E01               	movwf	?_ExternalFlash_MediaInitialize,c
 23474  007EF0  0E01               	movlw	high _mediaInformation
 23475  007EF2  6E02               	movwf	?_ExternalFlash_MediaInitialize+1,c
 23476  007EF4  0012               	return	
 23477  007EF6                     __end_of_ExternalFlash_MediaInitialize:
 23478                           	opt stack 0
 23479                           tosu	equ	0xFFF
 23480                           tosh	equ	0xFFE
 23481                           tosl	equ	0xFFD
 23482                           pclath	equ	0xFFA
 23483                           tblptru	equ	0xFF8
 23484                           tblptrh	equ	0xFF7
 23485                           tblptrl	equ	0xFF6
 23486                           tablat	equ	0xFF5
 23487                           prodh	equ	0xFF4
 23488                           prodl	equ	0xFF3
 23489                           intcon	equ	0xFF2
 23490                           intcon2	equ	0xFF1
 23491                           intcon3	equ	0xFF0
 23492                           indf0	equ	0xFEF
 23493                           postinc0	equ	0xFEE
 23494                           fsr0h	equ	0xFEA
 23495                           fsr0l	equ	0xFE9
 23496                           wreg	equ	0xFE8
 23497                           indf1	equ	0xFE7
 23498                           postdec1	equ	0xFE5
 23499                           plusw1	equ	0xFE3
 23500                           fsr1h	equ	0xFE2
 23501                           fsr1l	equ	0xFE1
 23502                           indf2	equ	0xFDF
 23503                           postinc2	equ	0xFDE
 23504                           postdec2	equ	0xFDD
 23505                           plusw2	equ	0xFDB
 23506                           fsr2h	equ	0xFDA
 23507                           fsr2l	equ	0xFD9
 23508                           status	equ	0xFD8
 23509                           
 23510 ;; *************** function _ExternalFlash_MediaDetect *****************
 23511 ;; Defined at:
 23512 ;;		line 29 in file "external_flash.c"
 23513 ;; Parameters:    Size  Location     Type
 23514 ;;  config          2    0[COMRAM] PTR void 
 23515 ;;		 -> NULL(0), 
 23516 ;; Auto vars:     Size  Location     Type
 23517 ;;		None
 23518 ;; Return value:  Size  Location     Type
 23519 ;;                  1    wreg      unsigned char 
 23520 ;; Registers used:
 23521 ;;		wreg
 23522 ;; Tracked objects:
 23523 ;;		On entry : 0/0
 23524 ;;		On exit  : 0/0
 23525 ;;		Unchanged: 0/0
 23526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23527 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23530 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23531 ;;Total ram usage:        2 bytes
 23532 ;; Hardware stack levels used:    1
 23533 ;; This function calls:
 23534 ;;		Nothing
 23535 ;; This function is called by:
 23536 ;;		_USBMSDInit
 23537 ;;		_MSDProcessCommand
 23538 ;; This function uses a non-reentrant model
 23539 ;;
 23540                           
 23541                           	psect	text108
 23542  0080EE                     __ptext108:
 23543                           	opt stack 0
 23544  0080EE                     _ExternalFlash_MediaDetect:
 23545                           	opt stack 26
 23546                           
 23547                           ;external_flash.c: 31: return 1;
 23548                           
 23549                           ; BSR set to: 1
 23550                           ;incstack = 0
 23551  0080EE  0E01               	movlw	1
 23552  0080F0  0012               	return	
 23553  0080F2                     __end_of_ExternalFlash_MediaDetect:
 23554                           	opt stack 0
 23555                           tosu	equ	0xFFF
 23556                           tosh	equ	0xFFE
 23557                           tosl	equ	0xFFD
 23558                           pclath	equ	0xFFA
 23559                           tblptru	equ	0xFF8
 23560                           tblptrh	equ	0xFF7
 23561                           tblptrl	equ	0xFF6
 23562                           tablat	equ	0xFF5
 23563                           prodh	equ	0xFF4
 23564                           prodl	equ	0xFF3
 23565                           intcon	equ	0xFF2
 23566                           intcon2	equ	0xFF1
 23567                           intcon3	equ	0xFF0
 23568                           indf0	equ	0xFEF
 23569                           postinc0	equ	0xFEE
 23570                           fsr0h	equ	0xFEA
 23571                           fsr0l	equ	0xFE9
 23572                           wreg	equ	0xFE8
 23573                           indf1	equ	0xFE7
 23574                           postdec1	equ	0xFE5
 23575                           plusw1	equ	0xFE3
 23576                           fsr1h	equ	0xFE2
 23577                           fsr1l	equ	0xFE1
 23578                           indf2	equ	0xFDF
 23579                           postinc2	equ	0xFDE
 23580                           postdec2	equ	0xFDD
 23581                           plusw2	equ	0xFDB
 23582                           fsr2h	equ	0xFDA
 23583                           fsr2l	equ	0xFD9
 23584                           status	equ	0xFD8
 23585                           
 23586 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 23587 ;; Defined at:
 23588 ;;		line 74 in file "app_device_custom_hid.c"
 23589 ;; Parameters:    Size  Location     Type
 23590 ;;		None
 23591 ;; Auto vars:     Size  Location     Type
 23592 ;;  idx             1    0        unsigned char 
 23593 ;; Return value:  Size  Location     Type
 23594 ;;                  1    wreg      void 
 23595 ;; Registers used:
 23596 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23597 ;; Tracked objects:
 23598 ;;		On entry : 0/0
 23599 ;;		On exit  : 0/0
 23600 ;;		Unchanged: 0/0
 23601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23604 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23605 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23606 ;;Total ram usage:        4 bytes
 23607 ;; Hardware stack levels used:    1
 23608 ;; Hardware stack levels required when called:   11
 23609 ;; This function calls:
 23610 ;;		_USBTransferOnePacket
 23611 ;;		_api_parse
 23612 ;;		_api_prepare
 23613 ;; This function is called by:
 23614 ;;		_main
 23615 ;; This function uses a non-reentrant model
 23616 ;;
 23617                           
 23618                           	psect	text109
 23619  005ABC                     __ptext109:
 23620                           	opt stack 0
 23621  005ABC                     _APP_DeviceCustomHIDTasks:
 23622                           	opt stack 19
 23623                           
 23624                           ;app_device_custom_hid.c: 76: uint8_t idx;;app_device_custom_hid.c: 81: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 23625                           
 23626                           ;incstack = 0
 23627  005ABC  0E20               	movlw	32
 23628  005ABE  0100               	movlb	0	; () banked
 23629  005AC0  61B0               	cpfslt	_USBDeviceState& (0+255),b
 23630  005AC2  D001               	goto	l963
 23631  005AC4  0012               	return	
 23632  005AC6                     l963:
 23633                           
 23634                           ; BSR set to: 0
 23635                           ;app_device_custom_hid.c: 84: };app_device_custom_hid.c: 90: if( UCONbits.SUSPND== 1 )
 23636  005AC6  B265               	btfsc	3941,1,c	;volatile
 23637  005AC8  0012               	return	
 23638                           
 23639                           ; BSR set to: 0
 23640                           ;app_device_custom_hid.c: 93: };app_device_custom_hid.c: 96: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 23641                           
 23642                           ; BSR set to: 0
 23643                           
 23644                           ; BSR set to: 0
 23645                           ;app_device_custom_hid.c: 91: {;app_device_custom_hid.c: 92: return;
 23646  005ACA  5184               	movf	_USBOutHandle& (0+255),w,b
 23647  005ACC  1185               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 23648  005ACE  B4D8               	btfsc	status,2,c
 23649  005AD0  D006               	goto	u11560
 23650                           
 23651                           ; BSR set to: 0
 23652  005AD2  C084  FFD9         	movff	_USBOutHandle,fsr2l
 23653  005AD6  C085  FFDA         	movff	_USBOutHandle+1,fsr2h
 23654  005ADA  BEDF               	btfsc	indf2,7,c
 23655  005ADC  0012               	return	
 23656  005ADE                     u11560:
 23657                           
 23658                           ; BSR set to: 0
 23659                           ;app_device_custom_hid.c: 97: {;app_device_custom_hid.c: 102: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 23660                           
 23661                           ; BSR set to: 0
 23662  005ADE  0101               	movlb	1	; () banked
 23663  005AE0  5170               	movf	_USBInHandle& (0+255),w,b
 23664  005AE2  1171               	iorwf	(_USBInHandle+1)& (0+255),w,b
 23665  005AE4  B4D8               	btfsc	status,2,c
 23666  005AE6  D006               	goto	u11580
 23667                           
 23668                           ; BSR set to: 1
 23669  005AE8  C170  FFD9         	movff	_USBInHandle,fsr2l
 23670  005AEC  C171  FFDA         	movff	_USBInHandle+1,fsr2h
 23671  005AF0  BEDF               	btfsc	indf2,7,c
 23672  005AF2  D020               	goto	l969
 23673  005AF4                     u11580:
 23674                           
 23675                           ; BSR set to: 1
 23676                           ;app_device_custom_hid.c: 103: {;app_device_custom_hid.c: 105: api_prepare((uint8_t) Rec
      +                          eivedDataBuffer, (uint8_t) ToSendDataBuffer);
 23677                           
 23678                           ; BSR set to: 1
 23679  005AF4  0E80               	movlw	_ReceivedDataBuffer& (0+255)
 23680  005AF6  0100               	movlb	0	; () banked
 23681  005AF8  6FF2               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 23682  005AFA  6BF3               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 23683  005AFC  C0F2  F0EE         	movff	??_APP_DeviceCustomHIDTasks,api_prepare@inBuffer
 23684  005B00  C0F3  F0EF         	movff	??_APP_DeviceCustomHIDTasks+1,api_prepare@inBuffer+1
 23685  005B04  0E00               	movlw	_ToSendDataBuffer& (0+255)
 23686  005B06  6FF4               	movwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),b
 23687  005B08  6BF5               	clrf	(??_APP_DeviceCustomHIDTasks+3)& (0+255),b
 23688  005B0A  C0F4  F0F0         	movff	??_APP_DeviceCustomHIDTasks+2,api_prepare@outBuffer
 23689  005B0E  C0F5  F0F1         	movff	??_APP_DeviceCustomHIDTasks+3,api_prepare@outBuffer+1
 23690  005B12  EC79  F01F         	call	_api_prepare	;wreg free
 23691                           
 23692                           ;app_device_custom_hid.c: 107: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 23693  005B16  0E01               	movlw	1
 23694  005B18  6E01               	movwf	USBTransferOnePacket@dir,c
 23695  005B1A  0E00               	movlw	low _ToSendDataBuffer
 23696  005B1C  6E02               	movwf	USBTransferOnePacket@data,c
 23697  005B1E  0E03               	movlw	high _ToSendDataBuffer
 23698  005B20  6E03               	movwf	USBTransferOnePacket@data+1,c
 23699  005B22  0E40               	movlw	64
 23700  005B24  6E04               	movwf	USBTransferOnePacket@len,c
 23701  005B26  0E01               	movlw	1
 23702  005B28  EC2B  F023         	call	_USBTransferOnePacket
 23703  005B2C  C001  F170         	movff	?_USBTransferOnePacket,_USBInHandle
 23704  005B30  C002  F171         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 23705  005B34                     l969:
 23706                           
 23707                           ;app_device_custom_hid.c: 108: };app_device_custom_hid.c: 111: api_parse(ReceivedDataBuf
      +                          fer, 64);
 23708  005B34  0E80               	movlw	low _ReceivedDataBuffer
 23709  005B36  0100               	movlb	0	; () banked
 23710  005B38  6FE8               	movwf	api_parse@inBuffer& (0+255),b
 23711  005B3A  0E02               	movlw	high _ReceivedDataBuffer
 23712  005B3C  6FE9               	movwf	(api_parse@inBuffer+1)& (0+255),b
 23713  005B3E  0E40               	movlw	64
 23714  005B40  6FEA               	movwf	api_parse@receivedDataLength& (0+255),b
 23715  005B42  ECBE  F027         	call	_api_parse	;wreg free
 23716                           
 23717                           ;app_device_custom_hid.c: 115: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 23718  005B46  0E00               	movlw	0
 23719  005B48  6E01               	movwf	USBTransferOnePacket@dir,c
 23720  005B4A  0E80               	movlw	low _ReceivedDataBuffer
 23721  005B4C  6E02               	movwf	USBTransferOnePacket@data,c
 23722  005B4E  0E02               	movlw	high _ReceivedDataBuffer
 23723  005B50  6E03               	movwf	USBTransferOnePacket@data+1,c
 23724  005B52  0E40               	movlw	64
 23725  005B54  6E04               	movwf	USBTransferOnePacket@len,c
 23726  005B56  0E01               	movlw	1
 23727  005B58  EC2B  F023         	call	_USBTransferOnePacket
 23728  005B5C  C001  F084         	movff	?_USBTransferOnePacket,_USBOutHandle
 23729  005B60  C002  F085         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 23730  005B64  0012               	return	
 23731  005B66                     __end_of_APP_DeviceCustomHIDTasks:
 23732                           	opt stack 0
 23733                           tosu	equ	0xFFF
 23734                           tosh	equ	0xFFE
 23735                           tosl	equ	0xFFD
 23736                           pclath	equ	0xFFA
 23737                           tblptru	equ	0xFF8
 23738                           tblptrh	equ	0xFF7
 23739                           tblptrl	equ	0xFF6
 23740                           tablat	equ	0xFF5
 23741                           prodh	equ	0xFF4
 23742                           prodl	equ	0xFF3
 23743                           intcon	equ	0xFF2
 23744                           intcon2	equ	0xFF1
 23745                           intcon3	equ	0xFF0
 23746                           indf0	equ	0xFEF
 23747                           postinc0	equ	0xFEE
 23748                           fsr0h	equ	0xFEA
 23749                           fsr0l	equ	0xFE9
 23750                           wreg	equ	0xFE8
 23751                           indf1	equ	0xFE7
 23752                           postdec1	equ	0xFE5
 23753                           plusw1	equ	0xFE3
 23754                           fsr1h	equ	0xFE2
 23755                           fsr1l	equ	0xFE1
 23756                           indf2	equ	0xFDF
 23757                           postinc2	equ	0xFDE
 23758                           postdec2	equ	0xFDD
 23759                           plusw2	equ	0xFDB
 23760                           fsr2h	equ	0xFDA
 23761                           fsr2l	equ	0xFD9
 23762                           status	equ	0xFD8
 23763                           
 23764 ;; *************** function _api_prepare *****************
 23765 ;; Defined at:
 23766 ;;		line 52 in file "api.c"
 23767 ;; Parameters:    Size  Location     Type
 23768 ;;  inBuffer        2   57[BANK0 ] PTR unsigned char 
 23769 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 23770 ;;  outBuffer       2   59[BANK0 ] PTR unsigned char 
 23771 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23772 ;; Auto vars:     Size  Location     Type
 23773 ;;  command         1   92[COMRAM] enum E6715
 23774 ;; Return value:  Size  Location     Type
 23775 ;;                  1    wreg      void 
 23776 ;; Registers used:
 23777 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23778 ;; Tracked objects:
 23779 ;;		On entry : 0/0
 23780 ;;		On exit  : 0/0
 23781 ;;		Unchanged: 0/0
 23782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23783 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23784 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23786 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23787 ;;Total ram usage:        5 bytes
 23788 ;; Hardware stack levels used:    1
 23789 ;; Hardware stack levels required when called:    9
 23790 ;; This function calls:
 23791 ;;		__fill_buffer_find_file
 23792 ;;		__fill_buffer_get_bootloader_details
 23793 ;;		__fill_buffer_get_configuration
 23794 ;;		__fill_buffer_get_display
 23795 ;;		__fill_buffer_get_file_details
 23796 ;;		__fill_buffer_get_status
 23797 ;;		__fill_buffer_read_file
 23798 ;;		_flash_is_busy
 23799 ;;		_memcpy
 23800 ;; This function is called by:
 23801 ;;		_main
 23802 ;;		_APP_DeviceCustomHIDTasks
 23803 ;; This function uses a non-reentrant model
 23804 ;;
 23805                           
 23806                           	psect	text110
 23807  003EF2                     __ptext110:
 23808                           	opt stack 0
 23809  003EF2                     _api_prepare:
 23810                           	opt stack 21
 23811                           
 23812                           ;api.c: 54: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 23813                           
 23814                           ;incstack = 0
 23815  003EF2  C0EE  FFD9         	movff	api_prepare@inBuffer,fsr2l
 23816  003EF6  C0EF  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 23817  003EFA  50DF               	movf	indf2,w,c
 23818  003EFC  6E5D               	movwf	api_prepare@command,c
 23819                           
 23820                           ;api.c: 56: if(command>0x7F)
 23821  003EFE  0E7F               	movlw	127
 23822  003F00  645D               	cpfsgt	api_prepare@command,c
 23823  003F02  D073               	goto	l2570
 23824                           
 23825                           ;api.c: 57: {;api.c: 61: if(flash_is_busy())
 23826  003F04  EC9F  F03F         	call	_flash_is_busy	;wreg free
 23827  003F08  0900               	iorlw	0
 23828  003F0A  B4D8               	btfsc	status,2,c
 23829  003F0C  D028               	goto	l2564
 23830                           
 23831                           ;api.c: 62: {;api.c: 63: _fill_buffer_get_status(outBuffer);
 23832  003F0E  C0F0  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 23833  003F12  C0F1  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 23834  003F16  EC70  F026         	call	__fill_buffer_get_status	;wreg free
 23835                           
 23836                           ;api.c: 64: return;
 23837  003F1A  0012               	return	
 23838  003F1C                     
 23839                           ;api.c: 72: _fill_buffer_get_file_details(inBuffer, outBuffer);
 23840  003F1C  C0EE  F03F         	movff	api_prepare@inBuffer,__fill_buffer_get_file_details@inBuffer
 23841  003F20  C0EF  F040         	movff	api_prepare@inBuffer+1,__fill_buffer_get_file_details@inBuffer+1
 23842  003F24  C0F0  F041         	movff	api_prepare@outBuffer,__fill_buffer_get_file_details@outBuffer
 23843  003F28  C0F1  F042         	movff	api_prepare@outBuffer+1,__fill_buffer_get_file_details@outBuffer+1
 23844  003F2C  EC3A  F035         	call	__fill_buffer_get_file_details	;wreg free
 23845                           
 23846                           ;api.c: 73: break;
 23847  003F30  0012               	return	
 23848  003F32                     
 23849                           ;api.c: 77: _fill_buffer_find_file(inBuffer, outBuffer);
 23850  003F32  C0EE  F044         	movff	api_prepare@inBuffer,__fill_buffer_find_file@inBuffer
 23851  003F36  C0EF  F045         	movff	api_prepare@inBuffer+1,__fill_buffer_find_file@inBuffer+1
 23852  003F3A  C0F0  F046         	movff	api_prepare@outBuffer,__fill_buffer_find_file@outBuffer
 23853  003F3E  C0F1  F047         	movff	api_prepare@outBuffer+1,__fill_buffer_find_file@outBuffer+1
 23854  003F42  ECAA  F02E         	call	__fill_buffer_find_file	;wreg free
 23855                           
 23856                           ;api.c: 78: break;
 23857  003F46  0012               	return	
 23858  003F48                     
 23859                           ;api.c: 82: _fill_buffer_read_file(inBuffer, outBuffer);
 23860  003F48  C0EE  F055         	movff	api_prepare@inBuffer,__fill_buffer_read_file@inBuffer
 23861  003F4C  C0EF  F056         	movff	api_prepare@inBuffer+1,__fill_buffer_read_file@inBuffer+1
 23862  003F50  C0F0  F057         	movff	api_prepare@outBuffer,__fill_buffer_read_file@outBuffer
 23863  003F54  C0F1  F058         	movff	api_prepare@outBuffer+1,__fill_buffer_read_file@outBuffer+1
 23864  003F58  EC9D  F011         	call	__fill_buffer_read_file	;wreg free
 23865                           
 23866                           ;api.c: 84: }
 23867                           
 23868                           ;api.c: 83: break;
 23869  003F5C  0012               	return	
 23870  003F5E                     l2564:
 23871  003F5E  505D               	movf	api_prepare@command,w,c
 23872                           
 23873                           ; Switch size 1, requested type "space"
 23874                           ; Number of cases is 3, Range of values is 128 to 130
 23875                           ; switch strategies available:
 23876                           ; Name         Instructions Cycles
 23877                           ; simple_byte           10     6 (average)
 23878                           ;	Chosen strategy is simple_byte
 23879  003F60  0A80               	xorlw	128	; case 128
 23880  003F62  B4D8               	btfsc	status,2,c
 23881  003F64  D7DB               	goto	l2565
 23882  003F66  0A01               	xorlw	1	; case 129
 23883  003F68  B4D8               	btfsc	status,2,c
 23884  003F6A  D7E3               	goto	l2567
 23885  003F6C  0A03               	xorlw	3	; case 130
 23886  003F6E  A4D8               	btfss	status,2,c
 23887                           
 23888                           ;api.c: 85: }
 23889  003F70  0012               	return	
 23890  003F72  D7EA               	goto	l2568
 23891  003F74                     
 23892                           ;api.c: 93: _fill_buffer_get_status(outBuffer);
 23893  003F74  C0F0  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 23894  003F78  C0F1  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 23895  003F7C  EC70  F026         	call	__fill_buffer_get_status	;wreg free
 23896                           
 23897                           ;api.c: 94: break;
 23898  003F80  0012               	return	
 23899  003F82                     
 23900                           ;api.c: 98: _fill_buffer_get_display(outBuffer, 0);
 23901  003F82  C0F0  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 23902  003F86  C0F1  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 23903  003F8A  0E00               	movlw	0
 23904  003F8C  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 23905  003F8E  ECA7  F02B         	call	__fill_buffer_get_display	;wreg free
 23906                           
 23907                           ;api.c: 99: break;
 23908  003F92  0012               	return	
 23909  003F94                     
 23910                           ;api.c: 103: _fill_buffer_get_display(outBuffer, 1);
 23911  003F94  C0F0  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 23912  003F98  C0F1  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 23913  003F9C  0E01               	movlw	1
 23914  003F9E  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 23915  003FA0  ECA7  F02B         	call	__fill_buffer_get_display	;wreg free
 23916                           
 23917                           ;api.c: 104: break;
 23918  003FA4  0012               	return	
 23919  003FA6                     
 23920                           ;api.c: 108: _fill_buffer_get_bootloader_details(outBuffer);
 23921  003FA6  C0F0  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_bootloader_details@outBuffer
 23922  003FAA  C0F1  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_bootloader_details@outBuffer+1
 23923  003FAE  EC9F  F014         	call	__fill_buffer_get_bootloader_details	;wreg free
 23924                           
 23925                           ;api.c: 109: break;
 23926  003FB2  0012               	return	
 23927  003FB4                     
 23928                           ;api.c: 113: _fill_buffer_get_configuration(outBuffer);
 23929  003FB4  C0F0  F001         	movff	api_prepare@outBuffer,__fill_buffer_get_configuration@outBuffer
 23930  003FB8  C0F1  F002         	movff	api_prepare@outBuffer+1,__fill_buffer_get_configuration@outBuffer+1
 23931  003FBC  EC4A  F02F         	call	__fill_buffer_get_configuration	;wreg free
 23932                           
 23933                           ;api.c: 114: break;
 23934  003FC0  0012               	return	
 23935  003FC2                     
 23936                           ;api.c: 118: memcpy(outBuffer, inBuffer, 64);
 23937  003FC2  C0F0  F001         	movff	api_prepare@outBuffer,memcpy@d1
 23938  003FC6  C0F1  F002         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 23939  003FCA  C0EE  F003         	movff	api_prepare@inBuffer,memcpy@s1
 23940  003FCE  C0EF  F004         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 23941  003FD2  5003               	movf	memcpy@s1,w,c
 23942  003FD4  1004               	iorwf	memcpy@s1+1,w,c
 23943  003FD6  A4D8               	btfss	status,2,c
 23944  003FD8  0E20               	movlw	32
 23945  003FDA  6E05               	movwf	memcpy@s1+2,c
 23946  003FDC  0E00               	movlw	0
 23947  003FDE  6E07               	movwf	memcpy@n+1,c
 23948  003FE0  0E40               	movlw	64
 23949  003FE2  6E06               	movwf	memcpy@n,c
 23950  003FE4  ECAE  F036         	call	_memcpy	;wreg free
 23951                           
 23952                           ;api.c: 120: }
 23953                           
 23954                           ;api.c: 119: break;
 23955  003FE8  0012               	return	
 23956  003FEA                     l2570:
 23957  003FEA  505D               	movf	api_prepare@command,w,c
 23958                           
 23959                           ; Switch size 1, requested type "space"
 23960                           ; Number of cases is 6, Range of values is 16 to 32
 23961                           ; switch strategies available:
 23962                           ; Name         Instructions Cycles
 23963                           ; simple_byte           19    10 (average)
 23964                           ;	Chosen strategy is simple_byte
 23965  003FEC  0A10               	xorlw	16	; case 16
 23966  003FEE  B4D8               	btfsc	status,2,c
 23967  003FF0  D7C1               	goto	l2571
 23968  003FF2  0A01               	xorlw	1	; case 17
 23969  003FF4  B4D8               	btfsc	status,2,c
 23970  003FF6  D7C5               	goto	l2573
 23971  003FF8  0A03               	xorlw	3	; case 18
 23972  003FFA  B4D8               	btfsc	status,2,c
 23973  003FFC  D7CB               	goto	l2574
 23974  003FFE  0A01               	xorlw	1	; case 19
 23975  004000  B4D8               	btfsc	status,2,c
 23976  004002  D7D1               	goto	l2575
 23977  004004  0A07               	xorlw	7	; case 20
 23978  004006  B4D8               	btfsc	status,2,c
 23979  004008  D7D5               	goto	l2576
 23980  00400A  0A34               	xorlw	52	; case 32
 23981  00400C  A4D8               	btfss	status,2,c
 23982  00400E  0012               	return	
 23983  004010  D7D8               	goto	l2577
 23984  004012                     __end_of_api_prepare:
 23985                           	opt stack 0
 23986                           tosu	equ	0xFFF
 23987                           tosh	equ	0xFFE
 23988                           tosl	equ	0xFFD
 23989                           pclath	equ	0xFFA
 23990                           tblptru	equ	0xFF8
 23991                           tblptrh	equ	0xFF7
 23992                           tblptrl	equ	0xFF6
 23993                           tablat	equ	0xFF5
 23994                           prodh	equ	0xFF4
 23995                           prodl	equ	0xFF3
 23996                           intcon	equ	0xFF2
 23997                           intcon2	equ	0xFF1
 23998                           intcon3	equ	0xFF0
 23999                           indf0	equ	0xFEF
 24000                           postinc0	equ	0xFEE
 24001                           fsr0h	equ	0xFEA
 24002                           fsr0l	equ	0xFE9
 24003                           wreg	equ	0xFE8
 24004                           indf1	equ	0xFE7
 24005                           postdec1	equ	0xFE5
 24006                           plusw1	equ	0xFE3
 24007                           fsr1h	equ	0xFE2
 24008                           fsr1l	equ	0xFE1
 24009                           indf2	equ	0xFDF
 24010                           postinc2	equ	0xFDE
 24011                           postdec2	equ	0xFDD
 24012                           plusw2	equ	0xFDB
 24013                           fsr2h	equ	0xFDA
 24014                           fsr2l	equ	0xFD9
 24015                           status	equ	0xFD8
 24016                           
 24017 ;; *************** function __fill_buffer_read_file *****************
 24018 ;; Defined at:
 24019 ;;		line 368 in file "api.c"
 24020 ;; Parameters:    Size  Location     Type
 24021 ;;  inBuffer        2   84[COMRAM] PTR unsigned char 
 24022 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 24023 ;;  outBuffer       2   86[COMRAM] PTR unsigned char 
 24024 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24025 ;; Auto vars:     Size  Location     Type
 24026 ;;  start           4   53[BANK0 ] unsigned long 
 24027 ;;  data_length     4   49[BANK0 ] unsigned long 
 24028 ;;  file_size       4   45[BANK0 ] unsigned long 
 24029 ;; Return value:  Size  Location     Type
 24030 ;;                  1    wreg      void 
 24031 ;; Registers used:
 24032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 24033 ;; Tracked objects:
 24034 ;;		On entry : 0/0
 24035 ;;		On exit  : 0/0
 24036 ;;		Unchanged: 0/0
 24037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24038 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24039 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24040 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24041 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24042 ;;Total ram usage:       20 bytes
 24043 ;; Hardware stack levels used:    1
 24044 ;; Hardware stack levels required when called:    8
 24045 ;; This function calls:
 24046 ;;		_fat_get_file_size
 24047 ;;		_fat_read_from_file
 24048 ;; This function is called by:
 24049 ;;		_api_prepare
 24050 ;; This function uses a non-reentrant model
 24051 ;;
 24052                           
 24053                           	psect	text111
 24054  00233A                     __ptext111:
 24055                           	opt stack 0
 24056  00233A                     __fill_buffer_read_file:
 24057                           	opt stack 21
 24058                           
 24059                           ;api.c: 370: uint32_t start;;api.c: 371: uint32_t file_size;;api.c: 372: uint32_t data_l
      +                          ength;;api.c: 375: outBuffer[0] = DATAREQUEST_FIND_FILE;
 24060                           
 24061                           ;incstack = 0
 24062  00233A  C057  FFD9         	movff	__fill_buffer_read_file@outBuffer,fsr2l
 24063  00233E  C058  FFDA         	movff	__fill_buffer_read_file@outBuffer+1,fsr2h
 24064  002342  0E81               	movlw	129
 24065  002344  6EDF               	movwf	indf2,c
 24066                           
 24067                           ;api.c: 378: outBuffer[1] = 0xC125 >> 8;
 24068  002346  EE20 F001          	lfsr	2,1
 24069  00234A  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 24070  00234C  26D9               	addwf	fsr2l,f,c
 24071  00234E  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 24072  002350  22DA               	addwfc	fsr2h,f,c
 24073  002352  0EC1               	movlw	193
 24074  002354  6EDF               	movwf	indf2,c
 24075                           
 24076                           ;api.c: 379: outBuffer[2] = (uint8_t) 0xC125;
 24077  002356  EE20 F002          	lfsr	2,2
 24078  00235A  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 24079  00235C  26D9               	addwf	fsr2l,f,c
 24080  00235E  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 24081  002360  22DA               	addwfc	fsr2h,f,c
 24082  002362  0E25               	movlw	37
 24083  002364  6EDF               	movwf	indf2,c
 24084                           
 24085                           ;api.c: 382: outBuffer[3] = inBuffer[1];
 24086  002366  EE20 F001          	lfsr	2,1
 24087  00236A  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 24088  00236C  26D9               	addwf	fsr2l,f,c
 24089  00236E  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 24090  002370  22DA               	addwfc	fsr2h,f,c
 24091  002372  EE10 F003          	lfsr	1,3
 24092  002376  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 24093  002378  26E1               	addwf	fsr1l,f,c
 24094  00237A  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 24095  00237C  22E2               	addwfc	fsr1h,f,c
 24096  00237E  CFDF FFE7          	movff	indf2,indf1
 24097                           
 24098                           ;api.c: 385: outBuffer[4] = inBuffer[1];
 24099  002382  EE20 F001          	lfsr	2,1
 24100  002386  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 24101  002388  26D9               	addwf	fsr2l,f,c
 24102  00238A  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 24103  00238C  22DA               	addwfc	fsr2h,f,c
 24104  00238E  EE10 F004          	lfsr	1,4
 24105  002392  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 24106  002394  26E1               	addwf	fsr1l,f,c
 24107  002396  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 24108  002398  22E2               	addwfc	fsr1h,f,c
 24109  00239A  CFDF FFE7          	movff	indf2,indf1
 24110                           
 24111                           ;api.c: 386: outBuffer[5] = inBuffer[2];
 24112  00239E  EE20 F002          	lfsr	2,2
 24113  0023A2  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 24114  0023A4  26D9               	addwf	fsr2l,f,c
 24115  0023A6  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 24116  0023A8  22DA               	addwfc	fsr2h,f,c
 24117  0023AA  EE10 F005          	lfsr	1,5
 24118  0023AE  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 24119  0023B0  26E1               	addwf	fsr1l,f,c
 24120  0023B2  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 24121  0023B4  22E2               	addwfc	fsr1h,f,c
 24122  0023B6  CFDF FFE7          	movff	indf2,indf1
 24123                           
 24124                           ;api.c: 387: outBuffer[6] = inBuffer[3];
 24125  0023BA  EE20 F003          	lfsr	2,3
 24126  0023BE  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 24127  0023C0  26D9               	addwf	fsr2l,f,c
 24128  0023C2  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 24129  0023C4  22DA               	addwfc	fsr2h,f,c
 24130  0023C6  EE10 F006          	lfsr	1,6
 24131  0023CA  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 24132  0023CC  26E1               	addwf	fsr1l,f,c
 24133  0023CE  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 24134  0023D0  22E2               	addwfc	fsr1h,f,c
 24135  0023D2  CFDF FFE7          	movff	indf2,indf1
 24136                           
 24137                           ;api.c: 388: outBuffer[7] = inBuffer[4];
 24138  0023D6  EE20 F004          	lfsr	2,4
 24139  0023DA  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 24140  0023DC  26D9               	addwf	fsr2l,f,c
 24141  0023DE  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 24142  0023E0  22DA               	addwfc	fsr2h,f,c
 24143  0023E2  EE10 F007          	lfsr	1,7
 24144  0023E6  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 24145  0023E8  26E1               	addwf	fsr1l,f,c
 24146  0023EA  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 24147  0023EC  22E2               	addwfc	fsr1h,f,c
 24148  0023EE  CFDF FFE7          	movff	indf2,indf1
 24149                           
 24150                           ;api.c: 391: start = inBuffer[4];
 24151  0023F2  EE20 F004          	lfsr	2,4
 24152  0023F6  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 24153  0023F8  26D9               	addwf	fsr2l,f,c
 24154  0023FA  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 24155  0023FC  22DA               	addwfc	fsr2h,f,c
 24156  0023FE  50DF               	movf	indf2,w,c
 24157  002400  6E59               	movwf	??__fill_buffer_read_file& (0+255),c
 24158  002402  5059               	movf	??__fill_buffer_read_file,w,c
 24159  002404  0100               	movlb	0	; () banked
 24160  002406  6FEA               	movwf	__fill_buffer_read_file@start& (0+255),b
 24161  002408  6BEB               	clrf	(__fill_buffer_read_file@start+1)& (0+255),b
 24162  00240A  6BEC               	clrf	(__fill_buffer_read_file@start+2)& (0+255),b
 24163  00240C  6BED               	clrf	(__fill_buffer_read_file@start+3)& (0+255),b
 24164                           
 24165                           ; BSR set to: 0
 24166                           ;api.c: 392: start <<= 8;
 24167  00240E  C0EC  F0ED         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 24168  002412  C0EB  F0EC         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 24169  002416  C0EA  F0EB         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 24170  00241A  6BEA               	clrf	__fill_buffer_read_file@start& (0+255),b
 24171                           
 24172                           ; BSR set to: 0
 24173                           ;api.c: 393: start |= inBuffer[3];
 24174  00241C  EE20 F003          	lfsr	2,3
 24175  002420  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 24176  002422  26D9               	addwf	fsr2l,f,c
 24177  002424  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 24178  002426  22DA               	addwfc	fsr2h,f,c
 24179  002428  50DF               	movf	indf2,w,c
 24180  00242A  6E59               	movwf	??__fill_buffer_read_file& (0+255),c
 24181  00242C  5059               	movf	??__fill_buffer_read_file,w,c
 24182  00242E  13EA               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 24183                           
 24184                           ; BSR set to: 0
 24185                           ;api.c: 394: start <<= 8;
 24186  002430  C0EC  F0ED         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 24187  002434  C0EB  F0EC         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 24188  002438  C0EA  F0EB         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 24189  00243C  6BEA               	clrf	__fill_buffer_read_file@start& (0+255),b
 24190                           
 24191                           ; BSR set to: 0
 24192                           ;api.c: 395: start |= inBuffer[2];
 24193  00243E  EE20 F002          	lfsr	2,2
 24194  002442  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 24195  002444  26D9               	addwf	fsr2l,f,c
 24196  002446  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 24197  002448  22DA               	addwfc	fsr2h,f,c
 24198  00244A  50DF               	movf	indf2,w,c
 24199  00244C  6E59               	movwf	??__fill_buffer_read_file& (0+255),c
 24200  00244E  5059               	movf	??__fill_buffer_read_file,w,c
 24201  002450  13EA               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 24202                           
 24203                           ; BSR set to: 0
 24204                           ;api.c: 396: start <<= 8;
 24205  002452  C0EC  F0ED         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 24206  002456  C0EB  F0EC         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 24207  00245A  C0EA  F0EB         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 24208  00245E  6BEA               	clrf	__fill_buffer_read_file@start& (0+255),b
 24209                           
 24210                           ; BSR set to: 0
 24211                           ;api.c: 397: start |= inBuffer[1];
 24212  002460  EE20 F001          	lfsr	2,1
 24213  002464  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 24214  002466  26D9               	addwf	fsr2l,f,c
 24215  002468  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 24216  00246A  22DA               	addwfc	fsr2h,f,c
 24217  00246C  50DF               	movf	indf2,w,c
 24218  00246E  6E59               	movwf	??__fill_buffer_read_file& (0+255),c
 24219  002470  5059               	movf	??__fill_buffer_read_file,w,c
 24220  002472  13EA               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 24221                           
 24222                           ; BSR set to: 0
 24223                           ;api.c: 400: file_size = fat_get_file_size(inBuffer[1]);
 24224  002474  EE20 F001          	lfsr	2,1
 24225  002478  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 24226  00247A  26D9               	addwf	fsr2l,f,c
 24227  00247C  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 24228  00247E  22DA               	addwfc	fsr2h,f,c
 24229  002480  50DF               	movf	indf2,w,c
 24230  002482  EC91  F034         	call	_fat_get_file_size
 24231  002486  C030  F0E2         	movff	?_fat_get_file_size,__fill_buffer_read_file@file_size
 24232  00248A  C031  F0E3         	movff	?_fat_get_file_size+1,__fill_buffer_read_file@file_size+1
 24233  00248E  C032  F0E4         	movff	?_fat_get_file_size+2,__fill_buffer_read_file@file_size+2
 24234  002492  C033  F0E5         	movff	?_fat_get_file_size+3,__fill_buffer_read_file@file_size+3
 24235                           
 24236                           ;api.c: 401: data_length = file_size - start;
 24237  002496  C0EA  F059         	movff	__fill_buffer_read_file@start,??__fill_buffer_read_file
 24238  00249A  C0EB  F05A         	movff	__fill_buffer_read_file@start+1,??__fill_buffer_read_file+1
 24239  00249E  C0EC  F05B         	movff	__fill_buffer_read_file@start+2,??__fill_buffer_read_file+2
 24240  0024A2  C0ED  F05C         	movff	__fill_buffer_read_file@start+3,??__fill_buffer_read_file+3
 24241  0024A6  1E59               	comf	??__fill_buffer_read_file,f,c
 24242  0024A8  1E5A               	comf	??__fill_buffer_read_file+1,f,c
 24243  0024AA  1E5B               	comf	??__fill_buffer_read_file+2,f,c
 24244  0024AC  1E5C               	comf	??__fill_buffer_read_file+3,f,c
 24245  0024AE  2A59               	incf	??__fill_buffer_read_file,f,c
 24246  0024B0  0E00               	movlw	0
 24247  0024B2  225A               	addwfc	??__fill_buffer_read_file+1,f,c
 24248  0024B4  225B               	addwfc	??__fill_buffer_read_file+2,f,c
 24249  0024B6  225C               	addwfc	??__fill_buffer_read_file+3,f,c
 24250  0024B8  0100               	movlb	0	; () banked
 24251  0024BA  51E2               	movf	__fill_buffer_read_file@file_size& (0+255),w,b
 24252  0024BC  2459               	addwf	??__fill_buffer_read_file,w,c
 24253  0024BE  6FE6               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 24254  0024C0  51E3               	movf	(__fill_buffer_read_file@file_size+1)& (0+255),w,b
 24255  0024C2  205A               	addwfc	??__fill_buffer_read_file+1,w,c
 24256  0024C4  6FE7               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 24257  0024C6  51E4               	movf	(__fill_buffer_read_file@file_size+2)& (0+255),w,b
 24258  0024C8  205B               	addwfc	??__fill_buffer_read_file+2,w,c
 24259  0024CA  6FE8               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 24260  0024CC  51E5               	movf	(__fill_buffer_read_file@file_size+3)& (0+255),w,b
 24261  0024CE  205C               	addwfc	??__fill_buffer_read_file+3,w,c
 24262  0024D0  6FE9               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 24263                           
 24264                           ; BSR set to: 0
 24265                           ;api.c: 402: if(data_length>54)
 24266  0024D2  51E9               	movf	(__fill_buffer_read_file@data_length+3)& (0+255),w,b
 24267  0024D4  11E8               	iorwf	(__fill_buffer_read_file@data_length+2)& (0+255),w,b
 24268  0024D6  11E7               	iorwf	(__fill_buffer_read_file@data_length+1)& (0+255),w,b
 24269  0024D8  E104               	bnz	u10430
 24270  0024DA  0E37               	movlw	55
 24271  0024DC  5DE6               	subwf	__fill_buffer_read_file@data_length& (0+255),w,b
 24272  0024DE  A0D8               	btfss	status,0,c
 24273  0024E0  D008               	goto	l2627
 24274  0024E2                     u10430:
 24275                           
 24276                           ; BSR set to: 0
 24277                           ;api.c: 403: {;api.c: 405: data_length = 54;
 24278  0024E2  0E36               	movlw	54
 24279  0024E4  6FE6               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 24280  0024E6  0E00               	movlw	0
 24281  0024E8  6FE7               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 24282  0024EA  0E00               	movlw	0
 24283  0024EC  6FE8               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 24284  0024EE  0E00               	movlw	0
 24285  0024F0  6FE9               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 24286  0024F2                     l2627:
 24287                           
 24288                           ; BSR set to: 0
 24289                           ;api.c: 406: };api.c: 409: outBuffer[8] = (uint8_t) data_length;
 24290                           
 24291                           ; BSR set to: 0
 24292  0024F2  EE20 F008          	lfsr	2,8
 24293  0024F6  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 24294  0024F8  26D9               	addwf	fsr2l,f,c
 24295  0024FA  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 24296  0024FC  22DA               	addwfc	fsr2h,f,c
 24297  0024FE  C0E6  FFDF         	movff	__fill_buffer_read_file@data_length,indf2
 24298                           
 24299                           ; BSR set to: 0
 24300                           ;api.c: 412: outBuffer[9] = fat_read_from_file(inBuffer[1], start, data_length, &outBuff
      +                          er[10]);
 24301  002502  EE20 F009          	lfsr	2,9
 24302  002506  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 24303  002508  26D9               	addwf	fsr2l,f,c
 24304  00250A  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 24305  00250C  22DA               	addwfc	fsr2h,f,c
 24306  00250E  C0EA  F03F         	movff	__fill_buffer_read_file@start,fat_read_from_file@start_byte
 24307  002512  C0EB  F040         	movff	__fill_buffer_read_file@start+1,fat_read_from_file@start_byte+1
 24308  002516  C0EC  F041         	movff	__fill_buffer_read_file@start+2,fat_read_from_file@start_byte+2
 24309  00251A  C0ED  F042         	movff	__fill_buffer_read_file@start+3,fat_read_from_file@start_byte+3
 24310  00251E  C0E6  F043         	movff	__fill_buffer_read_file@data_length,fat_read_from_file@length
 24311  002522  C0E7  F044         	movff	__fill_buffer_read_file@data_length+1,fat_read_from_file@length+1
 24312  002526  C0E8  F045         	movff	__fill_buffer_read_file@data_length+2,fat_read_from_file@length+2
 24313  00252A  C0E9  F046         	movff	__fill_buffer_read_file@data_length+3,fat_read_from_file@length+3
 24314  00252E  0E0A               	movlw	10
 24315  002530  2457               	addwf	__fill_buffer_read_file@outBuffer,w,c
 24316  002532  6E47               	movwf	fat_read_from_file@data,c
 24317  002534  0E00               	movlw	0
 24318  002536  2058               	addwfc	__fill_buffer_read_file@outBuffer+1,w,c
 24319  002538  6E48               	movwf	fat_read_from_file@data+1,c
 24320  00253A  EE10 F001          	lfsr	1,1
 24321  00253E  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 24322  002540  26E1               	addwf	fsr1l,f,c
 24323  002542  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 24324  002544  22E2               	addwfc	fsr1h,f,c
 24325  002546  50E7               	movf	indf1,w,c
 24326  002548  EC7A  F00F         	call	_fat_read_from_file
 24327  00254C  6EDF               	movwf	indf2,c
 24328  00254E  0012               	return		;funcret
 24329  002550                     __end_of__fill_buffer_read_file:
 24330                           	opt stack 0
 24331                           tosu	equ	0xFFF
 24332                           tosh	equ	0xFFE
 24333                           tosl	equ	0xFFD
 24334                           pclath	equ	0xFFA
 24335                           tblptru	equ	0xFF8
 24336                           tblptrh	equ	0xFF7
 24337                           tblptrl	equ	0xFF6
 24338                           tablat	equ	0xFF5
 24339                           prodh	equ	0xFF4
 24340                           prodl	equ	0xFF3
 24341                           intcon	equ	0xFF2
 24342                           intcon2	equ	0xFF1
 24343                           intcon3	equ	0xFF0
 24344                           indf0	equ	0xFEF
 24345                           postinc0	equ	0xFEE
 24346                           fsr0h	equ	0xFEA
 24347                           fsr0l	equ	0xFE9
 24348                           wreg	equ	0xFE8
 24349                           indf1	equ	0xFE7
 24350                           postdec1	equ	0xFE5
 24351                           plusw1	equ	0xFE3
 24352                           fsr1h	equ	0xFE2
 24353                           fsr1l	equ	0xFE1
 24354                           indf2	equ	0xFDF
 24355                           postinc2	equ	0xFDE
 24356                           postdec2	equ	0xFDD
 24357                           plusw2	equ	0xFDB
 24358                           fsr2h	equ	0xFDA
 24359                           fsr2l	equ	0xFD9
 24360                           status	equ	0xFD8
 24361                           
 24362 ;; *************** function _fat_read_from_file *****************
 24363 ;; Defined at:
 24364 ;;		line 559 in file "fat16.c"
 24365 ;; Parameters:    Size  Location     Type
 24366 ;;  file_number     1    wreg     unsigned char 
 24367 ;;  start_byte      4   62[COMRAM] unsigned long 
 24368 ;;  length          4   66[COMRAM] unsigned long 
 24369 ;;  data            2   70[COMRAM] PTR unsigned char 
 24370 ;;		 -> _spi_external_tx_buffer(64), file_buffer(50), RAM(3759), 
 24371 ;; Auto vars:     Size  Location     Type
 24372 ;;  file_number     1    2[BANK0 ] unsigned char 
 24373 ;;  root           32    3[BANK0 ] struct .
 24374 ;;  position        4   41[BANK0 ] unsigned long 
 24375 ;;  read_length     2   39[BANK0 ] unsigned int 
 24376 ;;  offset          2   37[BANK0 ] unsigned int 
 24377 ;;  cluster         2   35[BANK0 ] unsigned int 
 24378 ;;  sector          2    0[BANK0 ] unsigned int 
 24379 ;; Return value:  Size  Location     Type
 24380 ;;                  1    wreg      unsigned char 
 24381 ;; Registers used:
 24382 ;;		wreg, status,2, status,0, cstack
 24383 ;; Tracked objects:
 24384 ;;		On entry : 0/0
 24385 ;;		On exit  : 0/0
 24386 ;;		Unchanged: 0/0
 24387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24388 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24389 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24390 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24391 ;;      Totals:        22      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24392 ;;Total ram usage:       67 bytes
 24393 ;; Hardware stack levels used:    1
 24394 ;; Hardware stack levels required when called:    7
 24395 ;; This function calls:
 24396 ;;		__read_fat
 24397 ;;		__sector_from_cluster
 24398 ;;		_fat_get_file_information
 24399 ;;		_flash_partial_read
 24400 ;; This function is called by:
 24401 ;;		__bootloader_verify_file
 24402 ;;		__bootloader_program
 24403 ;;		__fill_buffer_read_file
 24404 ;; This function uses a non-reentrant model
 24405 ;;
 24406                           
 24407                           	psect	text112
 24408  001EF4                     __ptext112:
 24409                           	opt stack 0
 24410  001EF4                     _fat_read_from_file:
 24411                           	opt stack 21
 24412                           
 24413                           ;incstack = 0
 24414                           ;fat_read_from_file@file_number stored from wreg
 24415  001EF4  0100               	movlb	0	; () banked
 24416  001EF6  6FB7               	movwf	fat_read_from_file@file_number& (0+255),b
 24417                           
 24418                           ;fat16.c: 561: rootEntry_t root;;fat16.c: 562: uint32_t position;;fat16.c: 563: uint16_t
      +                           cluster;;fat16.c: 564: uint16_t offset;;fat16.c: 565: uint16_t sector;;fat16.c: 566: ui
      +                          nt16_t read_length;;fat16.c: 569: fat_get_file_information(file_number, &root);
 24419  001EF8  0EB8               	movlw	low fat_read_from_file@root
 24420  001EFA  6E37               	movwf	fat_get_file_information@data,c
 24421  001EFC  0E00               	movlw	high fat_read_from_file@root
 24422  001EFE  6E38               	movwf	fat_get_file_information@data+1,c
 24423  001F00  0100               	movlb	0	; () banked
 24424  001F02  51B7               	movf	fat_read_from_file@file_number& (0+255),w,b
 24425  001F04  EC1D  F034         	call	_fat_get_file_information
 24426                           
 24427                           ;fat16.c: 570: cluster = root.firstCluster;
 24428  001F08  C0D2  F0D8         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 24429  001F0C  C0D3  F0D9         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 24430                           
 24431                           ;fat16.c: 573: if(start_byte+length > root.fileSize)
 24432  001F10  5043               	movf	fat_read_from_file@length,w,c
 24433  001F12  243F               	addwf	fat_read_from_file@start_byte,w,c
 24434  001F14  6E49               	movwf	??_fat_read_from_file& (0+255),c
 24435  001F16  5044               	movf	fat_read_from_file@length+1,w,c
 24436  001F18  2040               	addwfc	fat_read_from_file@start_byte+1,w,c
 24437  001F1A  6E4A               	movwf	(??_fat_read_from_file+1)& (0+255),c
 24438  001F1C  5045               	movf	fat_read_from_file@length+2,w,c
 24439  001F1E  2041               	addwfc	fat_read_from_file@start_byte+2,w,c
 24440  001F20  6E4B               	movwf	(??_fat_read_from_file+2)& (0+255),c
 24441  001F22  5046               	movf	fat_read_from_file@length+3,w,c
 24442  001F24  2042               	addwfc	fat_read_from_file@start_byte+3,w,c
 24443  001F26  6E4C               	movwf	(??_fat_read_from_file+3)& (0+255),c
 24444  001F28  5049               	movf	??_fat_read_from_file,w,c
 24445  001F2A  0100               	movlb	0	; () banked
 24446  001F2C  5DD4               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 24447  001F2E  504A               	movf	??_fat_read_from_file+1,w,c
 24448  001F30  59D5               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 24449  001F32  504B               	movf	??_fat_read_from_file+2,w,c
 24450  001F34  59D6               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 24451  001F36  504C               	movf	??_fat_read_from_file+3,w,c
 24452  001F38  59D7               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 24453  001F3A  B0D8               	btfsc	status,0,c
 24454  001F3C  D002               	goto	l2018
 24455                           
 24456                           ; BSR set to: 0
 24457                           ;fat16.c: 574: {;fat16.c: 576: return 0xFF;
 24458  001F3E  0EFF               	movlw	255
 24459                           
 24460                           ; BSR set to: 0
 24461  001F40  0012               	return	
 24462  001F42                     l2018:
 24463                           
 24464                           ; BSR set to: 0
 24465                           ;fat16.c: 577: };fat16.c: 580: position = 0;
 24466                           
 24467                           ; BSR set to: 0
 24468  001F42  0E00               	movlw	0
 24469  001F44  6FDE               	movwf	fat_read_from_file@position& (0+255),b
 24470  001F46  0E00               	movlw	0
 24471  001F48  6FDF               	movwf	(fat_read_from_file@position+1)& (0+255),b
 24472  001F4A  0E00               	movlw	0
 24473  001F4C  6FE0               	movwf	(fat_read_from_file@position+2)& (0+255),b
 24474  001F4E  0E00               	movlw	0
 24475  001F50  6FE1               	movwf	(fat_read_from_file@position+3)& (0+255),b
 24476                           
 24477                           ;fat16.c: 581: while((start_byte-position) >= 512)
 24478  001F52  D013               	goto	l2020
 24479  001F54                     l12265:
 24480                           
 24481                           ; BSR set to: 0
 24482                           ;fat16.c: 582: {;fat16.c: 583: cluster = _read_fat(cluster);
 24483  001F54  C0D8  F030         	movff	fat_read_from_file@cluster,__read_fat@cluster
 24484  001F58  C0D9  F031         	movff	fat_read_from_file@cluster+1,__read_fat@cluster+1
 24485  001F5C  EC4A  F03B         	call	__read_fat	;wreg free
 24486  001F60  C030  F0D8         	movff	?__read_fat,fat_read_from_file@cluster
 24487  001F64  C031  F0D9         	movff	?__read_fat+1,fat_read_from_file@cluster+1
 24488                           
 24489                           ;fat16.c: 584: position += 512;
 24490  001F68  0E00               	movlw	0
 24491  001F6A  0100               	movlb	0	; () banked
 24492  001F6C  27DE               	addwf	fat_read_from_file@position& (0+255),f,b
 24493  001F6E  0E02               	movlw	2
 24494  001F70  23DF               	addwfc	(fat_read_from_file@position+1)& (0+255),f,b
 24495  001F72  0E00               	movlw	0
 24496  001F74  23E0               	addwfc	(fat_read_from_file@position+2)& (0+255),f,b
 24497  001F76  0E00               	movlw	0
 24498  001F78  23E1               	addwfc	(fat_read_from_file@position+3)& (0+255),f,b
 24499  001F7A                     l2020:
 24500                           
 24501                           ; BSR set to: 0
 24502                           
 24503                           ; BSR set to: 0
 24504  001F7A  C0DE  F049         	movff	fat_read_from_file@position,??_fat_read_from_file
 24505  001F7E  C0DF  F04A         	movff	fat_read_from_file@position+1,??_fat_read_from_file+1
 24506  001F82  C0E0  F04B         	movff	fat_read_from_file@position+2,??_fat_read_from_file+2
 24507  001F86  C0E1  F04C         	movff	fat_read_from_file@position+3,??_fat_read_from_file+3
 24508  001F8A  1E49               	comf	??_fat_read_from_file,f,c
 24509  001F8C  1E4A               	comf	??_fat_read_from_file+1,f,c
 24510  001F8E  1E4B               	comf	??_fat_read_from_file+2,f,c
 24511  001F90  1E4C               	comf	??_fat_read_from_file+3,f,c
 24512  001F92  2A49               	incf	??_fat_read_from_file,f,c
 24513  001F94  0E00               	movlw	0
 24514  001F96  224A               	addwfc	??_fat_read_from_file+1,f,c
 24515  001F98  224B               	addwfc	??_fat_read_from_file+2,f,c
 24516  001F9A  224C               	addwfc	??_fat_read_from_file+3,f,c
 24517  001F9C  503F               	movf	fat_read_from_file@start_byte,w,c
 24518  001F9E  2449               	addwf	??_fat_read_from_file,w,c
 24519  001FA0  6E4D               	movwf	(??_fat_read_from_file+4)& (0+255),c
 24520  001FA2  5040               	movf	fat_read_from_file@start_byte+1,w,c
 24521  001FA4  204A               	addwfc	??_fat_read_from_file+1,w,c
 24522  001FA6  6E4E               	movwf	(??_fat_read_from_file+5)& (0+255),c
 24523  001FA8  5041               	movf	fat_read_from_file@start_byte+2,w,c
 24524  001FAA  204B               	addwfc	??_fat_read_from_file+2,w,c
 24525  001FAC  6E4F               	movwf	(??_fat_read_from_file+6)& (0+255),c
 24526  001FAE  5042               	movf	fat_read_from_file@start_byte+3,w,c
 24527  001FB0  204C               	addwfc	??_fat_read_from_file+3,w,c
 24528  001FB2  6E50               	movwf	(??_fat_read_from_file+7)& (0+255),c
 24529  001FB4  5050               	movf	??_fat_read_from_file+7,w,c
 24530  001FB6  104F               	iorwf	??_fat_read_from_file+6,w,c
 24531  001FB8  E1CD               	bnz	l12265
 24532  001FBA  0E02               	movlw	2
 24533  001FBC  5C4E               	subwf	??_fat_read_from_file+5,w,c
 24534  001FBE  B0D8               	btfsc	status,0,c
 24535  001FC0  D7C9               	goto	l2021
 24536                           
 24537                           ; BSR set to: 0
 24538                           ;fat16.c: 585: };fat16.c: 588: offset = start_byte - position;
 24539                           
 24540                           ; BSR set to: 0
 24541  001FC2  C0DE  F049         	movff	fat_read_from_file@position,??_fat_read_from_file
 24542  001FC6  C0DF  F04A         	movff	fat_read_from_file@position+1,??_fat_read_from_file+1
 24543  001FCA  1E49               	comf	??_fat_read_from_file,f,c
 24544  001FCC  1E4A               	comf	??_fat_read_from_file+1,f,c
 24545  001FCE  4A49               	infsnz	??_fat_read_from_file,f,c
 24546  001FD0  2A4A               	incf	??_fat_read_from_file+1,f,c
 24547  001FD2  503F               	movf	fat_read_from_file@start_byte,w,c
 24548  001FD4  2449               	addwf	??_fat_read_from_file,w,c
 24549  001FD6  6FDA               	movwf	fat_read_from_file@offset& (0+255),b
 24550  001FD8  5040               	movf	fat_read_from_file@start_byte+1,w,c
 24551  001FDA  204A               	addwfc	??_fat_read_from_file+1,w,c
 24552  001FDC  6FDB               	movwf	(fat_read_from_file@offset+1)& (0+255),b
 24553                           
 24554                           ; BSR set to: 0
 24555                           ;fat16.c: 591: position = 0;
 24556  001FDE  0E00               	movlw	0
 24557  001FE0  6FDE               	movwf	fat_read_from_file@position& (0+255),b
 24558  001FE2  0E00               	movlw	0
 24559  001FE4  6FDF               	movwf	(fat_read_from_file@position+1)& (0+255),b
 24560  001FE6  0E00               	movlw	0
 24561  001FE8  6FE0               	movwf	(fat_read_from_file@position+2)& (0+255),b
 24562  001FEA  0E00               	movlw	0
 24563  001FEC  6FE1               	movwf	(fat_read_from_file@position+3)& (0+255),b
 24564                           
 24565                           ;fat16.c: 592: while(position < length)
 24566  001FEE  D089               	goto	l2023
 24567  001FF0                     
 24568                           ; BSR set to: 0
 24569                           ;fat16.c: 593: {;fat16.c: 595: if(offset==512)
 24570                           
 24571                           ; BSR set to: 0
 24572  001FF0  0E02               	movlw	2
 24573  001FF2  19DB               	xorwf	(fat_read_from_file@offset+1)& (0+255),w,b
 24574  001FF4  11DA               	iorwf	fat_read_from_file@offset& (0+255),w,b
 24575  001FF6  A4D8               	btfss	status,2,c
 24576  001FF8  D00F               	goto	l2025
 24577                           
 24578                           ; BSR set to: 0
 24579                           ;fat16.c: 596: {;fat16.c: 598: cluster = _read_fat(cluster);
 24580  001FFA  C0D8  F030         	movff	fat_read_from_file@cluster,__read_fat@cluster
 24581  001FFE  C0D9  F031         	movff	fat_read_from_file@cluster+1,__read_fat@cluster+1
 24582  002002  EC4A  F03B         	call	__read_fat	;wreg free
 24583  002006  C030  F0D8         	movff	?__read_fat,fat_read_from_file@cluster
 24584  00200A  C031  F0D9         	movff	?__read_fat+1,fat_read_from_file@cluster+1
 24585                           
 24586                           ;fat16.c: 599: offset = 0;
 24587  00200E  0E00               	movlw	0
 24588  002010  0100               	movlb	0	; () banked
 24589  002012  6FDB               	movwf	(fat_read_from_file@offset+1)& (0+255),b
 24590  002014  0E00               	movlw	0
 24591  002016  6FDA               	movwf	fat_read_from_file@offset& (0+255),b
 24592  002018                     l2025:
 24593                           
 24594                           ; BSR set to: 0
 24595                           ;fat16.c: 600: };fat16.c: 603: sector = _sector_from_cluster(cluster);
 24596                           
 24597                           ; BSR set to: 0
 24598  002018  C0D8  F001         	movff	fat_read_from_file@cluster,__sector_from_cluster@fat_cluster
 24599  00201C  C0D9  F002         	movff	fat_read_from_file@cluster+1,__sector_from_cluster@fat_cluster+1
 24600  002020  ECFF  F03F         	call	__sector_from_cluster	;wreg free
 24601  002024  C001  F0B5         	movff	?__sector_from_cluster,fat_read_from_file@sector
 24602  002028  C002  F0B6         	movff	?__sector_from_cluster+1,fat_read_from_file@sector+1
 24603                           
 24604                           ;fat16.c: 606: read_length = 512 - offset;
 24605  00202C  C0DA  F049         	movff	fat_read_from_file@offset,??_fat_read_from_file
 24606  002030  C0DB  F04A         	movff	fat_read_from_file@offset+1,??_fat_read_from_file+1
 24607  002034  1E49               	comf	??_fat_read_from_file,f,c
 24608  002036  1E4A               	comf	??_fat_read_from_file+1,f,c
 24609  002038  4A49               	infsnz	??_fat_read_from_file,f,c
 24610  00203A  2A4A               	incf	??_fat_read_from_file+1,f,c
 24611  00203C  0E00               	movlw	0
 24612  00203E  2449               	addwf	??_fat_read_from_file,w,c
 24613  002040  0100               	movlb	0	; () banked
 24614  002042  6FDC               	movwf	fat_read_from_file@read_length& (0+255),b
 24615  002044  0E02               	movlw	2
 24616  002046  204A               	addwfc	??_fat_read_from_file+1,w,c
 24617  002048  6FDD               	movwf	(fat_read_from_file@read_length+1)& (0+255),b
 24618                           
 24619                           ; BSR set to: 0
 24620                           ;fat16.c: 607: if(read_length > (length-position))
 24621  00204A  51DC               	movf	fat_read_from_file@read_length& (0+255),w,b
 24622  00204C  6E49               	movwf	??_fat_read_from_file& (0+255),c
 24623  00204E  51DD               	movf	(fat_read_from_file@read_length+1)& (0+255),w,b
 24624  002050  6E4A               	movwf	(??_fat_read_from_file+1)& (0+255),c
 24625  002052  6A4B               	clrf	(??_fat_read_from_file+2)& (0+255),c
 24626  002054  6A4C               	clrf	(??_fat_read_from_file+3)& (0+255),c
 24627  002056  C0DE  F04D         	movff	fat_read_from_file@position,??_fat_read_from_file+4
 24628  00205A  C0DF  F04E         	movff	fat_read_from_file@position+1,??_fat_read_from_file+5
 24629  00205E  C0E0  F04F         	movff	fat_read_from_file@position+2,??_fat_read_from_file+6
 24630  002062  C0E1  F050         	movff	fat_read_from_file@position+3,??_fat_read_from_file+7
 24631  002066  1E4D               	comf	??_fat_read_from_file+4,f,c
 24632  002068  1E4E               	comf	??_fat_read_from_file+5,f,c
 24633  00206A  1E4F               	comf	??_fat_read_from_file+6,f,c
 24634  00206C  1E50               	comf	??_fat_read_from_file+7,f,c
 24635  00206E  2A4D               	incf	??_fat_read_from_file+4,f,c
 24636  002070  0E00               	movlw	0
 24637  002072  224E               	addwfc	??_fat_read_from_file+5,f,c
 24638  002074  224F               	addwfc	??_fat_read_from_file+6,f,c
 24639  002076  2250               	addwfc	??_fat_read_from_file+7,f,c
 24640  002078  5043               	movf	fat_read_from_file@length,w,c
 24641  00207A  244D               	addwf	??_fat_read_from_file+4,w,c
 24642  00207C  6E51               	movwf	(??_fat_read_from_file+8)& (0+255),c
 24643  00207E  5044               	movf	fat_read_from_file@length+1,w,c
 24644  002080  204E               	addwfc	??_fat_read_from_file+5,w,c
 24645  002082  6E52               	movwf	(??_fat_read_from_file+9)& (0+255),c
 24646  002084  5045               	movf	fat_read_from_file@length+2,w,c
 24647  002086  204F               	addwfc	??_fat_read_from_file+6,w,c
 24648  002088  6E53               	movwf	(??_fat_read_from_file+10)& (0+255),c
 24649  00208A  5046               	movf	fat_read_from_file@length+3,w,c
 24650  00208C  2050               	addwfc	??_fat_read_from_file+7,w,c
 24651  00208E  6E54               	movwf	(??_fat_read_from_file+11)& (0+255),c
 24652  002090  5049               	movf	??_fat_read_from_file,w,c
 24653  002092  5C51               	subwf	??_fat_read_from_file+8,w,c
 24654  002094  504A               	movf	??_fat_read_from_file+1,w,c
 24655  002096  5852               	subwfb	??_fat_read_from_file+9,w,c
 24656  002098  504B               	movf	??_fat_read_from_file+2,w,c
 24657  00209A  5853               	subwfb	??_fat_read_from_file+10,w,c
 24658  00209C  504C               	movf	??_fat_read_from_file+3,w,c
 24659  00209E  5854               	subwfb	??_fat_read_from_file+11,w,c
 24660  0020A0  B0D8               	btfsc	status,0,c
 24661  0020A2  D00E               	goto	l2026
 24662                           
 24663                           ; BSR set to: 0
 24664                           ;fat16.c: 608: {;fat16.c: 610: read_length = length - position;
 24665  0020A4  C0DE  F049         	movff	fat_read_from_file@position,??_fat_read_from_file
 24666  0020A8  C0DF  F04A         	movff	fat_read_from_file@position+1,??_fat_read_from_file+1
 24667  0020AC  1E49               	comf	??_fat_read_from_file,f,c
 24668  0020AE  1E4A               	comf	??_fat_read_from_file+1,f,c
 24669  0020B0  4A49               	infsnz	??_fat_read_from_file,f,c
 24670  0020B2  2A4A               	incf	??_fat_read_from_file+1,f,c
 24671  0020B4  5043               	movf	fat_read_from_file@length,w,c
 24672  0020B6  2449               	addwf	??_fat_read_from_file,w,c
 24673  0020B8  6FDC               	movwf	fat_read_from_file@read_length& (0+255),b
 24674  0020BA  5044               	movf	fat_read_from_file@length+1,w,c
 24675  0020BC  204A               	addwfc	??_fat_read_from_file+1,w,c
 24676  0020BE  6FDD               	movwf	(fat_read_from_file@read_length+1)& (0+255),b
 24677  0020C0                     l2026:
 24678                           
 24679                           ; BSR set to: 0
 24680                           ;fat16.c: 611: };fat16.c: 614: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 24681                           
 24682                           ; BSR set to: 0
 24683  0020C0  C0B5  F028         	movff	fat_read_from_file@sector,flash_partial_read@page
 24684  0020C4  C0B6  F029         	movff	fat_read_from_file@sector+1,flash_partial_read@page+1
 24685  0020C8  C0DA  F02A         	movff	fat_read_from_file@offset,flash_partial_read@start
 24686  0020CC  C0DB  F02B         	movff	fat_read_from_file@offset+1,flash_partial_read@start+1
 24687  0020D0  C0DC  F02C         	movff	fat_read_from_file@read_length,flash_partial_read@length
 24688  0020D4  C0DD  F02D         	movff	fat_read_from_file@read_length+1,flash_partial_read@length+1
 24689  0020D8  51DE               	movf	fat_read_from_file@position& (0+255),w,b
 24690  0020DA  2447               	addwf	fat_read_from_file@data,w,c
 24691  0020DC  6E2E               	movwf	flash_partial_read@data,c
 24692  0020DE  51DF               	movf	(fat_read_from_file@position+1)& (0+255),w,b
 24693  0020E0  2048               	addwfc	fat_read_from_file@data+1,w,c
 24694  0020E2  6E2F               	movwf	flash_partial_read@data+1,c
 24695  0020E4  EC91  F03D         	call	_flash_partial_read	;wreg free
 24696                           
 24697                           ;fat16.c: 617: position += read_length;
 24698  0020E8  0100               	movlb	0	; () banked
 24699  0020EA  51DC               	movf	fat_read_from_file@read_length& (0+255),w,b
 24700  0020EC  27DE               	addwf	fat_read_from_file@position& (0+255),f,b
 24701  0020EE  51DD               	movf	(fat_read_from_file@read_length+1)& (0+255),w,b
 24702  0020F0  23DF               	addwfc	(fat_read_from_file@position+1)& (0+255),f,b
 24703  0020F2  0E00               	movlw	0
 24704  0020F4  23E0               	addwfc	(fat_read_from_file@position+2)& (0+255),f,b
 24705  0020F6  0E00               	movlw	0
 24706  0020F8  23E1               	addwfc	(fat_read_from_file@position+3)& (0+255),f,b
 24707                           
 24708                           ; BSR set to: 0
 24709                           ;fat16.c: 618: offset += read_length;
 24710  0020FA  51DC               	movf	fat_read_from_file@read_length& (0+255),w,b
 24711  0020FC  27DA               	addwf	fat_read_from_file@offset& (0+255),f,b
 24712  0020FE  51DD               	movf	(fat_read_from_file@read_length+1)& (0+255),w,b
 24713  002100  23DB               	addwfc	(fat_read_from_file@offset+1)& (0+255),f,b
 24714  002102                     l2023:
 24715                           
 24716                           ; BSR set to: 0
 24717                           
 24718                           ; BSR set to: 0
 24719  002102  5043               	movf	fat_read_from_file@length,w,c
 24720  002104  5DDE               	subwf	fat_read_from_file@position& (0+255),w,b
 24721  002106  5044               	movf	fat_read_from_file@length+1,w,c
 24722  002108  59DF               	subwfb	(fat_read_from_file@position+1)& (0+255),w,b
 24723  00210A  5045               	movf	fat_read_from_file@length+2,w,c
 24724  00210C  59E0               	subwfb	(fat_read_from_file@position+2)& (0+255),w,b
 24725  00210E  5046               	movf	fat_read_from_file@length+3,w,c
 24726  002110  59E1               	subwfb	(fat_read_from_file@position+3)& (0+255),w,b
 24727  002112  A0D8               	btfss	status,0,c
 24728  002114  D76D               	goto	l2024
 24729                           
 24730                           ; BSR set to: 0
 24731                           ;fat16.c: 619: };fat16.c: 622: return 0x00;
 24732                           
 24733                           ; BSR set to: 0
 24734  002116  0E00               	movlw	0
 24735  002118  0012               	return	
 24736  00211A                     __end_of_fat_read_from_file:
 24737                           	opt stack 0
 24738                           tosu	equ	0xFFF
 24739                           tosh	equ	0xFFE
 24740                           tosl	equ	0xFFD
 24741                           pclath	equ	0xFFA
 24742                           tblptru	equ	0xFF8
 24743                           tblptrh	equ	0xFF7
 24744                           tblptrl	equ	0xFF6
 24745                           tablat	equ	0xFF5
 24746                           prodh	equ	0xFF4
 24747                           prodl	equ	0xFF3
 24748                           intcon	equ	0xFF2
 24749                           intcon2	equ	0xFF1
 24750                           intcon3	equ	0xFF0
 24751                           indf0	equ	0xFEF
 24752                           postinc0	equ	0xFEE
 24753                           fsr0h	equ	0xFEA
 24754                           fsr0l	equ	0xFE9
 24755                           wreg	equ	0xFE8
 24756                           indf1	equ	0xFE7
 24757                           postdec1	equ	0xFE5
 24758                           plusw1	equ	0xFE3
 24759                           fsr1h	equ	0xFE2
 24760                           fsr1l	equ	0xFE1
 24761                           indf2	equ	0xFDF
 24762                           postinc2	equ	0xFDE
 24763                           postdec2	equ	0xFDD
 24764                           plusw2	equ	0xFDB
 24765                           fsr2h	equ	0xFDA
 24766                           fsr2l	equ	0xFD9
 24767                           status	equ	0xFD8
 24768                           
 24769 ;; *************** function _fat_get_file_size *****************
 24770 ;; Defined at:
 24771 ;;		line 294 in file "fat16.c"
 24772 ;; Parameters:    Size  Location     Type
 24773 ;;  file_number     1    wreg     unsigned char 
 24774 ;; Auto vars:     Size  Location     Type
 24775 ;;  file_number     1   60[COMRAM] unsigned char 
 24776 ;;  file_size       4   54[COMRAM] unsigned long 
 24777 ;;  offset          2   58[COMRAM] unsigned int 
 24778 ;;  sector          2   52[COMRAM] unsigned int 
 24779 ;; Return value:  Size  Location     Type
 24780 ;;                  4   47[COMRAM] unsigned long 
 24781 ;; Registers used:
 24782 ;;		wreg, status,2, status,0, cstack
 24783 ;; Tracked objects:
 24784 ;;		On entry : 0/0
 24785 ;;		On exit  : 0/0
 24786 ;;		Unchanged: 0/0
 24787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24788 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24789 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24790 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24791 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24792 ;;Total ram usage:       14 bytes
 24793 ;; Hardware stack levels used:    1
 24794 ;; Hardware stack levels required when called:    5
 24795 ;; This function calls:
 24796 ;;		_flash_partial_read
 24797 ;; This function is called by:
 24798 ;;		__bootloader_find_file
 24799 ;;		__bootloader_verify_file
 24800 ;;		__fill_buffer_read_file
 24801 ;; This function uses a non-reentrant model
 24802 ;;
 24803                           
 24804                           	psect	text113
 24805  006922                     __ptext113:
 24806                           	opt stack 0
 24807  006922                     _fat_get_file_size:
 24808                           	opt stack 23
 24809                           
 24810                           ; BSR set to: 0
 24811                           ;incstack = 0
 24812                           ;fat_get_file_size@file_number stored from wreg
 24813  006922  6E3D               	movwf	fat_get_file_size@file_number,c
 24814                           
 24815                           ;fat16.c: 296: uint16_t sector;;fat16.c: 297: uint16_t offset;;fat16.c: 298: uint32_t fi
      +                          le_size;;fat16.c: 299: sector = file_number >> 4;
 24816  006924  C03D  F034         	movff	fat_get_file_size@file_number,??_fat_get_file_size
 24817  006928  3A34               	swapf	??_fat_get_file_size,f,c
 24818  00692A  0E0F               	movlw	15
 24819  00692C  1634               	andwf	??_fat_get_file_size,f,c
 24820  00692E  5034               	movf	??_fat_get_file_size,w,c
 24821  006930  6E35               	movwf	fat_get_file_size@sector,c
 24822  006932  6A36               	clrf	fat_get_file_size@sector+1,c
 24823                           
 24824                           ;fat16.c: 300: sector += 34;
 24825  006934  0E22               	movlw	34
 24826  006936  2635               	addwf	fat_get_file_size@sector,f,c
 24827  006938  0E00               	movlw	0
 24828  00693A  2236               	addwfc	fat_get_file_size@sector+1,f,c
 24829                           
 24830                           ;fat16.c: 301: offset = file_number;
 24831  00693C  C03D  F03B         	movff	fat_get_file_size@file_number,fat_get_file_size@offset
 24832  006940  6A3C               	clrf	fat_get_file_size@offset+1,c
 24833                           
 24834                           ;fat16.c: 302: offset <<= 5;
 24835  006942  0E05               	movlw	5
 24836  006944                     u9435:
 24837  006944  90D8               	bcf	status,0,c
 24838  006946  363B               	rlcf	fat_get_file_size@offset,f,c
 24839  006948  363C               	rlcf	fat_get_file_size@offset+1,f,c
 24840  00694A  2EE8               	decfsz	wreg,f,c
 24841  00694C  D7FB               	goto	u9435
 24842                           
 24843                           ;fat16.c: 303: offset &= 0b111111111;
 24844  00694E  0EFF               	movlw	255
 24845  006950  163B               	andwf	fat_get_file_size@offset,f,c
 24846  006952  0E01               	movlw	1
 24847  006954  163C               	andwf	fat_get_file_size@offset+1,f,c
 24848                           
 24849                           ;fat16.c: 304: offset += 28;
 24850  006956  0E1C               	movlw	28
 24851  006958  263B               	addwf	fat_get_file_size@offset,f,c
 24852  00695A  0E00               	movlw	0
 24853  00695C  223C               	addwfc	fat_get_file_size@offset+1,f,c
 24854                           
 24855                           ;fat16.c: 305: flash_partial_read(sector, offset, 4, &file_size);
 24856  00695E  C035  F028         	movff	fat_get_file_size@sector,flash_partial_read@page
 24857  006962  C036  F029         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 24858  006966  C03B  F02A         	movff	fat_get_file_size@offset,flash_partial_read@start
 24859  00696A  C03C  F02B         	movff	fat_get_file_size@offset+1,flash_partial_read@start+1
 24860  00696E  0E00               	movlw	0
 24861  006970  6E2D               	movwf	flash_partial_read@length+1,c
 24862  006972  0E04               	movlw	4
 24863  006974  6E2C               	movwf	flash_partial_read@length,c
 24864  006976  0E37               	movlw	low fat_get_file_size@file_size
 24865  006978  6E2E               	movwf	flash_partial_read@data,c
 24866  00697A  0E00               	movlw	high fat_get_file_size@file_size
 24867  00697C  6E2F               	movwf	flash_partial_read@data+1,c
 24868  00697E  EC91  F03D         	call	_flash_partial_read	;wreg free
 24869                           
 24870                           ;fat16.c: 306: return file_size;
 24871  006982  C037  F030         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 24872  006986  C038  F031         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 24873  00698A  C039  F032         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 24874  00698E  C03A  F033         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 24875  006992  0012               	return	
 24876  006994                     __end_of_fat_get_file_size:
 24877                           	opt stack 0
 24878                           tosu	equ	0xFFF
 24879                           tosh	equ	0xFFE
 24880                           tosl	equ	0xFFD
 24881                           pclath	equ	0xFFA
 24882                           tblptru	equ	0xFF8
 24883                           tblptrh	equ	0xFF7
 24884                           tblptrl	equ	0xFF6
 24885                           tablat	equ	0xFF5
 24886                           prodh	equ	0xFF4
 24887                           prodl	equ	0xFF3
 24888                           intcon	equ	0xFF2
 24889                           intcon2	equ	0xFF1
 24890                           intcon3	equ	0xFF0
 24891                           indf0	equ	0xFEF
 24892                           postinc0	equ	0xFEE
 24893                           fsr0h	equ	0xFEA
 24894                           fsr0l	equ	0xFE9
 24895                           wreg	equ	0xFE8
 24896                           indf1	equ	0xFE7
 24897                           postdec1	equ	0xFE5
 24898                           plusw1	equ	0xFE3
 24899                           fsr1h	equ	0xFE2
 24900                           fsr1l	equ	0xFE1
 24901                           indf2	equ	0xFDF
 24902                           postinc2	equ	0xFDE
 24903                           postdec2	equ	0xFDD
 24904                           plusw2	equ	0xFDB
 24905                           fsr2h	equ	0xFDA
 24906                           fsr2l	equ	0xFD9
 24907                           status	equ	0xFD8
 24908                           
 24909 ;; *************** function __fill_buffer_get_status *****************
 24910 ;; Defined at:
 24911 ;;		line 176 in file "api.c"
 24912 ;; Parameters:    Size  Location     Type
 24913 ;;  outBuffer       2   20[COMRAM] PTR unsigned char 
 24914 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24915 ;; Auto vars:     Size  Location     Type
 24916 ;;		None
 24917 ;; Return value:  Size  Location     Type
 24918 ;;                  1    wreg      void 
 24919 ;; Registers used:
 24920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24921 ;; Tracked objects:
 24922 ;;		On entry : 0/0
 24923 ;;		On exit  : 0/0
 24924 ;;		Unchanged: 0/0
 24925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24926 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24929 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24930 ;;Total ram usage:        2 bytes
 24931 ;; Hardware stack levels used:    1
 24932 ;; Hardware stack levels required when called:    4
 24933 ;; This function calls:
 24934 ;;		_flash_is_busy
 24935 ;;		_ui_get_status
 24936 ;; This function is called by:
 24937 ;;		_api_prepare
 24938 ;; This function uses a non-reentrant model
 24939 ;;
 24940                           
 24941                           	psect	text114
 24942  004CE0                     __ptext114:
 24943                           	opt stack 0
 24944  004CE0                     __fill_buffer_get_status:
 24945                           	opt stack 25
 24946                           
 24947                           ;api.c: 179: outBuffer[0] = DATAREQUEST_GET_STATUS;
 24948                           
 24949                           ;incstack = 0
 24950  004CE0  C015  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 24951  004CE4  C016  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 24952  004CE8  0E10               	movlw	16
 24953  004CEA  6EDF               	movwf	indf2,c
 24954                           
 24955                           ;api.c: 182: outBuffer[1] = 0xC125 >> 8;
 24956  004CEC  EE20 F001          	lfsr	2,1
 24957  004CF0  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24958  004CF2  26D9               	addwf	fsr2l,f,c
 24959  004CF4  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24960  004CF6  22DA               	addwfc	fsr2h,f,c
 24961  004CF8  0EC1               	movlw	193
 24962  004CFA  6EDF               	movwf	indf2,c
 24963                           
 24964                           ;api.c: 183: outBuffer[2] = (uint8_t) 0xC125;
 24965  004CFC  EE20 F002          	lfsr	2,2
 24966  004D00  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24967  004D02  26D9               	addwf	fsr2l,f,c
 24968  004D04  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24969  004D06  22DA               	addwfc	fsr2h,f,c
 24970  004D08  0E25               	movlw	37
 24971  004D0A  6EDF               	movwf	indf2,c
 24972                           
 24973                           ;api.c: 187: outBuffer[3] = (uint8_t) flash_is_busy();
 24974  004D0C  EE20 F003          	lfsr	2,3
 24975  004D10  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24976  004D12  26D9               	addwf	fsr2l,f,c
 24977  004D14  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24978  004D16  22DA               	addwfc	fsr2h,f,c
 24979  004D18  EC9F  F03F         	call	_flash_is_busy	;wreg free
 24980  004D1C  6EDF               	movwf	indf2,c
 24981                           
 24982                           ;api.c: 190: outBuffer[4] = 0x00;
 24983  004D1E  EE20 F004          	lfsr	2,4
 24984  004D22  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24985  004D24  26D9               	addwf	fsr2l,f,c
 24986  004D26  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24987  004D28  22DA               	addwfc	fsr2h,f,c
 24988  004D2A  0E00               	movlw	0
 24989  004D2C  6EDF               	movwf	indf2,c
 24990                           
 24991                           ;api.c: 191: outBuffer[5] = 0x01;
 24992  004D2E  EE20 F005          	lfsr	2,5
 24993  004D32  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24994  004D34  26D9               	addwf	fsr2l,f,c
 24995  004D36  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24996  004D38  22DA               	addwfc	fsr2h,f,c
 24997  004D3A  0E01               	movlw	1
 24998  004D3C  6EDF               	movwf	indf2,c
 24999                           
 25000                           ;api.c: 192: outBuffer[6] = 0x00;
 25001  004D3E  EE20 F006          	lfsr	2,6
 25002  004D42  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25003  004D44  26D9               	addwf	fsr2l,f,c
 25004  004D46  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25005  004D48  22DA               	addwfc	fsr2h,f,c
 25006  004D4A  0E00               	movlw	0
 25007  004D4C  6EDF               	movwf	indf2,c
 25008                           
 25009                           ;api.c: 195: outBuffer[7] = ui_get_status();
 25010  004D4E  EE20 F007          	lfsr	2,7
 25011  004D52  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25012  004D54  26D9               	addwf	fsr2l,f,c
 25013  004D56  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25014  004D58  22DA               	addwfc	fsr2h,f,c
 25015  004D5A  EC6F  F040         	call	_ui_get_status	;wreg free
 25016  004D5E  6EDF               	movwf	indf2,c
 25017                           
 25018                           ;api.c: 198: outBuffer[8] = os.encoderCount;
 25019  004D60  EE20 F008          	lfsr	2,8
 25020  004D64  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25021  004D66  26D9               	addwf	fsr2l,f,c
 25022  004D68  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25023  004D6A  22DA               	addwfc	fsr2h,f,c
 25024  004D6C  C060  FFDF         	movff	_os,indf2	;volatile
 25025                           
 25026                           ;api.c: 199: outBuffer[9] = os.buttonCount;
 25027  004D70  EE20 F009          	lfsr	2,9
 25028  004D74  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25029  004D76  26D9               	addwf	fsr2l,f,c
 25030  004D78  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25031  004D7A  22DA               	addwfc	fsr2h,f,c
 25032  004D7C  C061  FFDF         	movff	_os+1,indf2	;volatile
 25033                           
 25034                           ;api.c: 200: outBuffer[10] = os.timeSlot;
 25035  004D80  EE20 F00A          	lfsr	2,10
 25036  004D84  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25037  004D86  26D9               	addwf	fsr2l,f,c
 25038  004D88  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25039  004D8A  22DA               	addwfc	fsr2h,f,c
 25040  004D8C  C062  FFDF         	movff	_os+2,indf2	;volatile
 25041                           
 25042                           ;api.c: 201: outBuffer[11] = os.done;
 25043  004D90  EE20 F00B          	lfsr	2,11
 25044  004D94  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25045  004D96  26D9               	addwf	fsr2l,f,c
 25046  004D98  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25047  004D9A  22DA               	addwfc	fsr2h,f,c
 25048  004D9C  C063  FFDF         	movff	_os+3,indf2	;volatile
 25049                           
 25050                           ;api.c: 202: outBuffer[12] = os.bootloader_mode;
 25051  004DA0  EE20 F00C          	lfsr	2,12
 25052  004DA4  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25053  004DA6  26D9               	addwf	fsr2l,f,c
 25054  004DA8  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25055  004DAA  22DA               	addwfc	fsr2h,f,c
 25056  004DAC  C064  FFDF         	movff	_os+4,indf2	;volatile
 25057                           
 25058                           ;api.c: 203: outBuffer[13] = os.display_mode;
 25059  004DB0  EE20 F00D          	lfsr	2,13
 25060  004DB4  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 25061  004DB6  26D9               	addwf	fsr2l,f,c
 25062  004DB8  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 25063  004DBA  22DA               	addwfc	fsr2h,f,c
 25064  004DBC  C065  FFDF         	movff	_os+5,indf2	;volatile
 25065  004DC0  0012               	return		;funcret
 25066  004DC2                     __end_of__fill_buffer_get_status:
 25067                           	opt stack 0
 25068                           tosu	equ	0xFFF
 25069                           tosh	equ	0xFFE
 25070                           tosl	equ	0xFFD
 25071                           pclath	equ	0xFFA
 25072                           tblptru	equ	0xFF8
 25073                           tblptrh	equ	0xFF7
 25074                           tblptrl	equ	0xFF6
 25075                           tablat	equ	0xFF5
 25076                           prodh	equ	0xFF4
 25077                           prodl	equ	0xFF3
 25078                           intcon	equ	0xFF2
 25079                           intcon2	equ	0xFF1
 25080                           intcon3	equ	0xFF0
 25081                           indf0	equ	0xFEF
 25082                           postinc0	equ	0xFEE
 25083                           fsr0h	equ	0xFEA
 25084                           fsr0l	equ	0xFE9
 25085                           wreg	equ	0xFE8
 25086                           indf1	equ	0xFE7
 25087                           postdec1	equ	0xFE5
 25088                           plusw1	equ	0xFE3
 25089                           fsr1h	equ	0xFE2
 25090                           fsr1l	equ	0xFE1
 25091                           indf2	equ	0xFDF
 25092                           postinc2	equ	0xFDE
 25093                           postdec2	equ	0xFDD
 25094                           plusw2	equ	0xFDB
 25095                           fsr2h	equ	0xFDA
 25096                           fsr2l	equ	0xFD9
 25097                           status	equ	0xFD8
 25098                           
 25099 ;; *************** function __fill_buffer_get_file_details *****************
 25100 ;; Defined at:
 25101 ;;		line 329 in file "api.c"
 25102 ;; Parameters:    Size  Location     Type
 25103 ;;  inBuffer        2   62[COMRAM] PTR unsigned char 
 25104 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 25105 ;;  outBuffer       2   64[COMRAM] PTR unsigned char 
 25106 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 25107 ;; Auto vars:     Size  Location     Type
 25108 ;;  file_number     1   66[COMRAM] unsigned char 
 25109 ;; Return value:  Size  Location     Type
 25110 ;;                  1    wreg      void 
 25111 ;; Registers used:
 25112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 25113 ;; Tracked objects:
 25114 ;;		On entry : 0/0
 25115 ;;		On exit  : 0/0
 25116 ;;		Unchanged: 0/0
 25117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25118 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25119 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25121 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25122 ;;Total ram usage:        5 bytes
 25123 ;; Hardware stack levels used:    1
 25124 ;; Hardware stack levels required when called:    7
 25125 ;; This function calls:
 25126 ;;		_fat_get_file_information
 25127 ;; This function is called by:
 25128 ;;		_api_prepare
 25129 ;; This function uses a non-reentrant model
 25130 ;;
 25131                           
 25132                           	psect	text115
 25133  006A74                     __ptext115:
 25134                           	opt stack 0
 25135  006A74                     __fill_buffer_get_file_details:
 25136                           	opt stack 22
 25137                           
 25138                           ;api.c: 331: uint8_t file_number = inBuffer[1];
 25139                           
 25140                           ;incstack = 0
 25141  006A74  EE20 F001          	lfsr	2,1
 25142  006A78  503F               	movf	__fill_buffer_get_file_details@inBuffer,w,c
 25143  006A7A  26D9               	addwf	fsr2l,f,c
 25144  006A7C  5040               	movf	__fill_buffer_get_file_details@inBuffer+1,w,c
 25145  006A7E  22DA               	addwfc	fsr2h,f,c
 25146  006A80  50DF               	movf	indf2,w,c
 25147  006A82  6E43               	movwf	__fill_buffer_get_file_details@file_number,c
 25148                           
 25149                           ;api.c: 334: outBuffer[0] = DATAREQUEST_GET_FILE_DETAILS;
 25150  006A84  C041  FFD9         	movff	__fill_buffer_get_file_details@outBuffer,fsr2l
 25151  006A88  C042  FFDA         	movff	__fill_buffer_get_file_details@outBuffer+1,fsr2h
 25152  006A8C  0E80               	movlw	128
 25153  006A8E  6EDF               	movwf	indf2,c
 25154                           
 25155                           ;api.c: 337: outBuffer[1] = 0xC125 >> 8;
 25156  006A90  EE20 F001          	lfsr	2,1
 25157  006A94  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 25158  006A96  26D9               	addwf	fsr2l,f,c
 25159  006A98  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 25160  006A9A  22DA               	addwfc	fsr2h,f,c
 25161  006A9C  0EC1               	movlw	193
 25162  006A9E  6EDF               	movwf	indf2,c
 25163                           
 25164                           ;api.c: 338: outBuffer[2] = (uint8_t) 0xC125;
 25165  006AA0  EE20 F002          	lfsr	2,2
 25166  006AA4  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 25167  006AA6  26D9               	addwf	fsr2l,f,c
 25168  006AA8  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 25169  006AAA  22DA               	addwfc	fsr2h,f,c
 25170  006AAC  0E25               	movlw	37
 25171  006AAE  6EDF               	movwf	indf2,c
 25172                           
 25173                           ;api.c: 341: outBuffer[3] = file_number;
 25174  006AB0  EE20 F003          	lfsr	2,3
 25175  006AB4  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 25176  006AB6  26D9               	addwf	fsr2l,f,c
 25177  006AB8  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 25178  006ABA  22DA               	addwfc	fsr2h,f,c
 25179  006ABC  C043  FFDF         	movff	__fill_buffer_get_file_details@file_number,indf2
 25180                           
 25181                           ;api.c: 344: outBuffer[4] = fat_get_file_information(file_number, (rootEntry_t*) &outBuf
      +                          fer[5]);
 25182  006AC0  EE20 F004          	lfsr	2,4
 25183  006AC4  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 25184  006AC6  26D9               	addwf	fsr2l,f,c
 25185  006AC8  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 25186  006ACA  22DA               	addwfc	fsr2h,f,c
 25187  006ACC  0E05               	movlw	5
 25188  006ACE  2441               	addwf	__fill_buffer_get_file_details@outBuffer,w,c
 25189  006AD0  6E37               	movwf	fat_get_file_information@data,c
 25190  006AD2  0E00               	movlw	0
 25191  006AD4  2042               	addwfc	__fill_buffer_get_file_details@outBuffer+1,w,c
 25192  006AD6  6E38               	movwf	fat_get_file_information@data+1,c
 25193  006AD8  5043               	movf	__fill_buffer_get_file_details@file_number,w,c
 25194  006ADA  EC1D  F034         	call	_fat_get_file_information
 25195  006ADE  6EDF               	movwf	indf2,c
 25196  006AE0  0012               	return		;funcret
 25197  006AE2                     __end_of__fill_buffer_get_file_details:
 25198                           	opt stack 0
 25199                           tosu	equ	0xFFF
 25200                           tosh	equ	0xFFE
 25201                           tosl	equ	0xFFD
 25202                           pclath	equ	0xFFA
 25203                           tblptru	equ	0xFF8
 25204                           tblptrh	equ	0xFF7
 25205                           tblptrl	equ	0xFF6
 25206                           tablat	equ	0xFF5
 25207                           prodh	equ	0xFF4
 25208                           prodl	equ	0xFF3
 25209                           intcon	equ	0xFF2
 25210                           intcon2	equ	0xFF1
 25211                           intcon3	equ	0xFF0
 25212                           indf0	equ	0xFEF
 25213                           postinc0	equ	0xFEE
 25214                           fsr0h	equ	0xFEA
 25215                           fsr0l	equ	0xFE9
 25216                           wreg	equ	0xFE8
 25217                           indf1	equ	0xFE7
 25218                           postdec1	equ	0xFE5
 25219                           plusw1	equ	0xFE3
 25220                           fsr1h	equ	0xFE2
 25221                           fsr1l	equ	0xFE1
 25222                           indf2	equ	0xFDF
 25223                           postinc2	equ	0xFDE
 25224                           postdec2	equ	0xFDD
 25225                           plusw2	equ	0xFDB
 25226                           fsr2h	equ	0xFDA
 25227                           fsr2l	equ	0xFD9
 25228                           status	equ	0xFD8
 25229                           
 25230 ;; *************** function __fill_buffer_get_display *****************
 25231 ;; Defined at:
 25232 ;;		line 207 in file "api.c"
 25233 ;; Parameters:    Size  Location     Type
 25234 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 25235 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 25236 ;;  secondHalf      1    6[COMRAM] unsigned char 
 25237 ;; Auto vars:     Size  Location     Type
 25238 ;;  position        1   15[COMRAM] unsigned char 
 25239 ;;  start_line      1   14[COMRAM] unsigned char 
 25240 ;;  line            1   13[COMRAM] unsigned char 
 25241 ;;  cntr            1   12[COMRAM] unsigned char 
 25242 ;; Return value:  Size  Location     Type
 25243 ;;                  1    wreg      void 
 25244 ;; Registers used:
 25245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25246 ;; Tracked objects:
 25247 ;;		On entry : 0/0
 25248 ;;		On exit  : 0/0
 25249 ;;		Unchanged: 0/0
 25250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25251 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25252 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25253 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25254 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25255 ;;Total ram usage:       12 bytes
 25256 ;; Hardware stack levels used:    1
 25257 ;; Hardware stack levels required when called:    1
 25258 ;; This function calls:
 25259 ;;		_display_get_character
 25260 ;; This function is called by:
 25261 ;;		_api_prepare
 25262 ;; This function uses a non-reentrant model
 25263 ;;
 25264                           
 25265                           	psect	text116
 25266  00574E                     __ptext116:
 25267                           	opt stack 0
 25268  00574E                     __fill_buffer_get_display:
 25269                           	opt stack 28
 25270                           
 25271                           ;api.c: 209: uint8_t cntr;;api.c: 210: uint8_t line;;api.c: 211: uint8_t start_line;;api
      +                          .c: 212: uint8_t position;;api.c: 215: if(secondHalf)
 25272                           
 25273                           ;incstack = 0
 25274  00574E  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 25275  005750  B4D8               	btfsc	status,2,c
 25276  005752  D006               	goto	l2597
 25277                           
 25278                           ;api.c: 216: {;api.c: 217: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 25279  005754  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 25280  005758  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 25281  00575C  0E12               	movlw	18
 25282  00575E  D005               	goto	L32
 25283  005760                     l2597:
 25284                           
 25285                           ;api.c: 219: else;api.c: 220: {;api.c: 221: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 25286  005760  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 25287  005764  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 25288  005768  0E11               	movlw	17
 25289  00576A                     L32:
 25290  00576A  6EDF               	movwf	indf2,c
 25291                           
 25292                           ;api.c: 222: };api.c: 225: outBuffer[1] = 0xC125 >> 8;
 25293  00576C  EE20 F001          	lfsr	2,1
 25294  005770  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 25295  005772  26D9               	addwf	fsr2l,f,c
 25296  005774  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 25297  005776  22DA               	addwfc	fsr2h,f,c
 25298  005778  0EC1               	movlw	193
 25299  00577A  6EDF               	movwf	indf2,c
 25300                           
 25301                           ;api.c: 226: outBuffer[2] = (uint8_t) 0xC125;
 25302  00577C  EE20 F002          	lfsr	2,2
 25303  005780  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 25304  005782  26D9               	addwf	fsr2l,f,c
 25305  005784  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 25306  005786  22DA               	addwfc	fsr2h,f,c
 25307  005788  0E25               	movlw	37
 25308  00578A  6EDF               	movwf	indf2,c
 25309                           
 25310                           ;api.c: 229: cntr = 3;
 25311  00578C  0E03               	movlw	3
 25312  00578E  6E0D               	movwf	__fill_buffer_get_display@cntr,c
 25313                           
 25314                           ;api.c: 230: if(secondHalf)
 25315  005790  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 25316  005792  B4D8               	btfsc	status,2,c
 25317  005794  D002               	goto	l2599
 25318                           
 25319                           ;api.c: 231: {;api.c: 232: start_line = 2;
 25320  005796  0E02               	movlw	2
 25321  005798  D001               	goto	L33
 25322  00579A                     l2599:
 25323                           
 25324                           ;api.c: 234: else;api.c: 235: {;api.c: 236: start_line = 0;
 25325  00579A  0E00               	movlw	0
 25326  00579C                     L33:
 25327  00579C  6E0F               	movwf	__fill_buffer_get_display@start_line,c
 25328                           
 25329                           ;api.c: 237: };api.c: 238: for(line=start_line; line<start_line+2; ++line)
 25330  00579E  C00F  F00E         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 25331  0057A2  D01A               	goto	l2601
 25332  0057A4                     
 25333                           ;api.c: 239: {;api.c: 240: for(position=0; position<20; ++position)
 25334  0057A4  0E00               	movlw	0
 25335  0057A6  6E10               	movwf	__fill_buffer_get_display@position,c
 25336  0057A8                     l13551:
 25337  0057A8  0E13               	movlw	19
 25338  0057AA  6410               	cpfsgt	__fill_buffer_get_display@position,c
 25339  0057AC  D001               	goto	l2603
 25340  0057AE  D013               	goto	u10470
 25341  0057B0                     l2603:
 25342                           
 25343                           ;api.c: 241: {;api.c: 242: outBuffer[cntr] = display_get_character(line, position);
 25344  0057B0  C010  F001         	movff	__fill_buffer_get_display@position,display_get_character@position
 25345  0057B4  500E               	movf	__fill_buffer_get_display@line,w,c
 25346  0057B6  EC4A  F03E         	call	_display_get_character
 25347  0057BA  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 25348  0057BC  500D               	movf	__fill_buffer_get_display@cntr,w,c
 25349  0057BE  0D01               	mullw	1
 25350  0057C0  50F3               	movf	prodl,w,c
 25351  0057C2  2405               	addwf	__fill_buffer_get_display@outBuffer,w,c
 25352  0057C4  6ED9               	movwf	fsr2l,c
 25353  0057C6  50F4               	movf	prodh,w,c
 25354  0057C8  2006               	addwfc	__fill_buffer_get_display@outBuffer+1,w,c
 25355  0057CA  6EDA               	movwf	fsr2h,c
 25356  0057CC  C008  FFDF         	movff	??__fill_buffer_get_display,indf2
 25357                           
 25358                           ;api.c: 243: ++cntr;
 25359  0057D0  2A0D               	incf	__fill_buffer_get_display@cntr,f,c
 25360  0057D2  2A10               	incf	__fill_buffer_get_display@position,f,c
 25361  0057D4  D7E9               	goto	l13551
 25362  0057D6                     u10470:
 25363  0057D6  2A0E               	incf	__fill_buffer_get_display@line,f,c
 25364  0057D8                     l2601:
 25365  0057D8  500F               	movf	__fill_buffer_get_display@start_line,w,c
 25366  0057DA  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 25367  0057DC  6A09               	clrf	(??__fill_buffer_get_display+1)& (0+255),c
 25368  0057DE  0E02               	movlw	2
 25369  0057E0  2608               	addwf	??__fill_buffer_get_display,f,c
 25370  0057E2  0E00               	movlw	0
 25371  0057E4  2209               	addwfc	??__fill_buffer_get_display+1,f,c
 25372  0057E6  500E               	movf	__fill_buffer_get_display@line,w,c
 25373  0057E8  6E0A               	movwf	(??__fill_buffer_get_display+2)& (0+255),c
 25374  0057EA  6A0B               	clrf	(??__fill_buffer_get_display+3)& (0+255),c
 25375  0057EC  5008               	movf	??__fill_buffer_get_display,w,c
 25376  0057EE  5C0A               	subwf	??__fill_buffer_get_display+2,w,c
 25377  0057F0  500B               	movf	??__fill_buffer_get_display+3,w,c
 25378  0057F2  0A80               	xorlw	128
 25379  0057F4  6E0C               	movwf	(??__fill_buffer_get_display+4)& (0+255),c
 25380  0057F6  5009               	movf	??__fill_buffer_get_display+1,w,c
 25381  0057F8  0A80               	xorlw	128
 25382  0057FA  580C               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,c
 25383  0057FC  B0D8               	btfsc	status,0,c
 25384  0057FE  0012               	return	
 25385  005800  D7D1               	goto	l2602
 25386  005802                     __end_of__fill_buffer_get_display:
 25387                           	opt stack 0
 25388                           tosu	equ	0xFFF
 25389                           tosh	equ	0xFFE
 25390                           tosl	equ	0xFFD
 25391                           pclath	equ	0xFFA
 25392                           tblptru	equ	0xFF8
 25393                           tblptrh	equ	0xFF7
 25394                           tblptrl	equ	0xFF6
 25395                           tablat	equ	0xFF5
 25396                           prodh	equ	0xFF4
 25397                           prodl	equ	0xFF3
 25398                           intcon	equ	0xFF2
 25399                           intcon2	equ	0xFF1
 25400                           intcon3	equ	0xFF0
 25401                           indf0	equ	0xFEF
 25402                           postinc0	equ	0xFEE
 25403                           fsr0h	equ	0xFEA
 25404                           fsr0l	equ	0xFE9
 25405                           wreg	equ	0xFE8
 25406                           indf1	equ	0xFE7
 25407                           postdec1	equ	0xFE5
 25408                           plusw1	equ	0xFE3
 25409                           fsr1h	equ	0xFE2
 25410                           fsr1l	equ	0xFE1
 25411                           indf2	equ	0xFDF
 25412                           postinc2	equ	0xFDE
 25413                           postdec2	equ	0xFDD
 25414                           plusw2	equ	0xFDB
 25415                           fsr2h	equ	0xFDA
 25416                           fsr2l	equ	0xFD9
 25417                           status	equ	0xFD8
 25418                           
 25419 ;; *************** function _display_get_character *****************
 25420 ;; Defined at:
 25421 ;;		line 70 in file "display.c"
 25422 ;; Parameters:    Size  Location     Type
 25423 ;;  line            1    wreg     unsigned char 
 25424 ;;  position        1    0[COMRAM] unsigned char 
 25425 ;; Auto vars:     Size  Location     Type
 25426 ;;  line            1    3[COMRAM] unsigned char 
 25427 ;; Return value:  Size  Location     Type
 25428 ;;                  1    wreg      unsigned char 
 25429 ;; Registers used:
 25430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25431 ;; Tracked objects:
 25432 ;;		On entry : 0/0
 25433 ;;		On exit  : 0/0
 25434 ;;		Unchanged: 0/0
 25435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25436 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25437 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25438 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25439 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25440 ;;Total ram usage:        4 bytes
 25441 ;; Hardware stack levels used:    1
 25442 ;; This function calls:
 25443 ;;		Nothing
 25444 ;; This function is called by:
 25445 ;;		__fill_buffer_get_display
 25446 ;; This function uses a non-reentrant model
 25447 ;;
 25448                           
 25449                           	psect	text117
 25450  007C94                     __ptext117:
 25451                           	opt stack 0
 25452  007C94                     _display_get_character:
 25453                           	opt stack 28
 25454                           
 25455                           ;incstack = 0
 25456                           ;display_get_character@line stored from wreg
 25457  007C94  6E04               	movwf	display_get_character@line,c
 25458                           
 25459                           ;display.c: 72: return display_content[line][position];
 25460  007C96  5004               	movf	display_get_character@line,w,c
 25461  007C98  0D14               	mullw	20
 25462  007C9A  0E76               	movlw	low _display_content
 25463  007C9C  6E02               	movwf	??_display_get_character& (0+255),c
 25464  007C9E  0E01               	movlw	high _display_content
 25465  007CA0  6E03               	movwf	(??_display_get_character+1)& (0+255),c
 25466  007CA2  50F3               	movf	prodl,w,c
 25467  007CA4  2602               	addwf	??_display_get_character,f,c
 25468  007CA6  50F4               	movf	prodh,w,c
 25469  007CA8  2203               	addwfc	??_display_get_character+1,f,c
 25470  007CAA  5001               	movf	display_get_character@position,w,c
 25471  007CAC  0D01               	mullw	1
 25472  007CAE  50F3               	movf	prodl,w,c
 25473  007CB0  2402               	addwf	??_display_get_character,w,c
 25474  007CB2  6ED9               	movwf	fsr2l,c
 25475  007CB4  50F4               	movf	prodh,w,c
 25476  007CB6  2003               	addwfc	??_display_get_character+1,w,c
 25477  007CB8  6EDA               	movwf	fsr2h,c
 25478  007CBA  50DF               	movf	indf2,w,c
 25479  007CBC  0012               	return	
 25480  007CBE                     __end_of_display_get_character:
 25481                           	opt stack 0
 25482                           tosu	equ	0xFFF
 25483                           tosh	equ	0xFFE
 25484                           tosl	equ	0xFFD
 25485                           pclath	equ	0xFFA
 25486                           tblptru	equ	0xFF8
 25487                           tblptrh	equ	0xFF7
 25488                           tblptrl	equ	0xFF6
 25489                           tablat	equ	0xFF5
 25490                           prodh	equ	0xFF4
 25491                           prodl	equ	0xFF3
 25492                           intcon	equ	0xFF2
 25493                           intcon2	equ	0xFF1
 25494                           intcon3	equ	0xFF0
 25495                           indf0	equ	0xFEF
 25496                           postinc0	equ	0xFEE
 25497                           fsr0h	equ	0xFEA
 25498                           fsr0l	equ	0xFE9
 25499                           wreg	equ	0xFE8
 25500                           indf1	equ	0xFE7
 25501                           postdec1	equ	0xFE5
 25502                           plusw1	equ	0xFE3
 25503                           fsr1h	equ	0xFE2
 25504                           fsr1l	equ	0xFE1
 25505                           indf2	equ	0xFDF
 25506                           postinc2	equ	0xFDE
 25507                           postdec2	equ	0xFDD
 25508                           plusw2	equ	0xFDB
 25509                           fsr2h	equ	0xFDA
 25510                           fsr2l	equ	0xFD9
 25511                           status	equ	0xFD8
 25512                           
 25513 ;; *************** function __fill_buffer_get_configuration *****************
 25514 ;; Defined at:
 25515 ;;		line 308 in file "api.c"
 25516 ;; Parameters:    Size  Location     Type
 25517 ;;  outBuffer       2    0[COMRAM] PTR unsigned char 
 25518 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 25519 ;; Auto vars:     Size  Location     Type
 25520 ;;		None
 25521 ;; Return value:  Size  Location     Type
 25522 ;;                  1    wreg      void 
 25523 ;; Registers used:
 25524 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25525 ;; Tracked objects:
 25526 ;;		On entry : 0/0
 25527 ;;		On exit  : 0/0
 25528 ;;		Unchanged: 0/0
 25529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25530 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25533 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25534 ;;Total ram usage:        2 bytes
 25535 ;; Hardware stack levels used:    1
 25536 ;; This function calls:
 25537 ;;		Nothing
 25538 ;; This function is called by:
 25539 ;;		_api_prepare
 25540 ;; This function uses a non-reentrant model
 25541 ;;
 25542                           
 25543                           	psect	text118
 25544  005E94                     __ptext118:
 25545                           	opt stack 0
 25546  005E94                     __fill_buffer_get_configuration:
 25547                           	opt stack 29
 25548                           
 25549                           ;api.c: 311: outBuffer[0] = DATAREQUEST_GET_STATUS;
 25550                           
 25551                           ;incstack = 0
 25552  005E94  C001  FFD9         	movff	__fill_buffer_get_configuration@outBuffer,fsr2l
 25553  005E98  C002  FFDA         	movff	__fill_buffer_get_configuration@outBuffer+1,fsr2h
 25554  005E9C  0E10               	movlw	16
 25555  005E9E  6EDF               	movwf	indf2,c
 25556                           
 25557                           ;api.c: 314: outBuffer[1] = 0xC125 >> 8;
 25558  005EA0  EE20 F001          	lfsr	2,1
 25559  005EA4  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25560  005EA6  26D9               	addwf	fsr2l,f,c
 25561  005EA8  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25562  005EAA  22DA               	addwfc	fsr2h,f,c
 25563  005EAC  0EC1               	movlw	193
 25564  005EAE  6EDF               	movwf	indf2,c
 25565                           
 25566                           ;api.c: 315: outBuffer[2] = (uint8_t) 0xC125;
 25567  005EB0  EE20 F002          	lfsr	2,2
 25568  005EB4  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25569  005EB6  26D9               	addwf	fsr2l,f,c
 25570  005EB8  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25571  005EBA  22DA               	addwfc	fsr2h,f,c
 25572  005EBC  0E25               	movlw	37
 25573  005EBE  6EDF               	movwf	indf2,c
 25574                           
 25575                           ;api.c: 318: outBuffer[3] = communicationSettings.spiMode;
 25576  005EC0  EE20 F003          	lfsr	2,3
 25577  005EC4  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25578  005EC6  26D9               	addwf	fsr2l,f,c
 25579  005EC8  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25580  005ECA  22DA               	addwfc	fsr2h,f,c
 25581  005ECC  C139  FFDF         	movff	_communicationSettings,indf2
 25582                           
 25583                           ;api.c: 319: outBuffer[4] = communicationSettings.spiFrequency;
 25584  005ED0  EE20 F004          	lfsr	2,4
 25585  005ED4  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25586  005ED6  26D9               	addwf	fsr2l,f,c
 25587  005ED8  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25588  005EDA  22DA               	addwfc	fsr2h,f,c
 25589  005EDC  C13A  FFDF         	movff	_communicationSettings+1,indf2
 25590                           
 25591                           ;api.c: 320: outBuffer[5] = communicationSettings.spiPolarity;
 25592  005EE0  EE20 F005          	lfsr	2,5
 25593  005EE4  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25594  005EE6  26D9               	addwf	fsr2l,f,c
 25595  005EE8  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25596  005EEA  22DA               	addwfc	fsr2h,f,c
 25597  005EEC  C13B  FFDF         	movff	_communicationSettings+2,indf2
 25598                           
 25599                           ;api.c: 323: outBuffer[6] = communicationSettings.i2cMode;
 25600  005EF0  EE20 F006          	lfsr	2,6
 25601  005EF4  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25602  005EF6  26D9               	addwf	fsr2l,f,c
 25603  005EF8  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25604  005EFA  22DA               	addwfc	fsr2h,f,c
 25605  005EFC  C13C  FFDF         	movff	_communicationSettings+3,indf2
 25606                           
 25607                           ;api.c: 324: outBuffer[7] = communicationSettings.i2cFrequency;
 25608  005F00  EE20 F007          	lfsr	2,7
 25609  005F04  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25610  005F06  26D9               	addwf	fsr2l,f,c
 25611  005F08  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25612  005F0A  22DA               	addwfc	fsr2h,f,c
 25613  005F0C  C13D  FFDF         	movff	_communicationSettings+4,indf2
 25614                           
 25615                           ;api.c: 325: outBuffer[8] = communicationSettings.i2cSlaveModeSlaveAddress;
 25616  005F10  EE20 F008          	lfsr	2,8
 25617  005F14  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25618  005F16  26D9               	addwf	fsr2l,f,c
 25619  005F18  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25620  005F1A  22DA               	addwfc	fsr2h,f,c
 25621  005F1C  C13E  FFDF         	movff	_communicationSettings+5,indf2
 25622                           
 25623                           ;api.c: 326: outBuffer[9] = communicationSettings.i2cMasterModeSlaveAddress;
 25624  005F20  EE20 F009          	lfsr	2,9
 25625  005F24  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 25626  005F26  26D9               	addwf	fsr2l,f,c
 25627  005F28  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 25628  005F2A  22DA               	addwfc	fsr2h,f,c
 25629  005F2C  C13F  FFDF         	movff	_communicationSettings+6,indf2
 25630  005F30  0012               	return		;funcret
 25631  005F32                     __end_of__fill_buffer_get_configuration:
 25632                           	opt stack 0
 25633                           tosu	equ	0xFFF
 25634                           tosh	equ	0xFFE
 25635                           tosl	equ	0xFFD
 25636                           pclath	equ	0xFFA
 25637                           tblptru	equ	0xFF8
 25638                           tblptrh	equ	0xFF7
 25639                           tblptrl	equ	0xFF6
 25640                           tablat	equ	0xFF5
 25641                           prodh	equ	0xFF4
 25642                           prodl	equ	0xFF3
 25643                           intcon	equ	0xFF2
 25644                           intcon2	equ	0xFF1
 25645                           intcon3	equ	0xFF0
 25646                           indf0	equ	0xFEF
 25647                           postinc0	equ	0xFEE
 25648                           fsr0h	equ	0xFEA
 25649                           fsr0l	equ	0xFE9
 25650                           wreg	equ	0xFE8
 25651                           indf1	equ	0xFE7
 25652                           postdec1	equ	0xFE5
 25653                           plusw1	equ	0xFE3
 25654                           fsr1h	equ	0xFE2
 25655                           fsr1l	equ	0xFE1
 25656                           indf2	equ	0xFDF
 25657                           postinc2	equ	0xFDE
 25658                           postdec2	equ	0xFDD
 25659                           plusw2	equ	0xFDB
 25660                           fsr2h	equ	0xFDA
 25661                           fsr2l	equ	0xFD9
 25662                           status	equ	0xFD8
 25663                           
 25664 ;; *************** function __fill_buffer_get_bootloader_details *****************
 25665 ;; Defined at:
 25666 ;;		line 248 in file "api.c"
 25667 ;; Parameters:    Size  Location     Type
 25668 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 25669 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 25670 ;; Auto vars:     Size  Location     Type
 25671 ;;  buffer_large    4   11[COMRAM] unsigned long 
 25672 ;;  buffer_small    2   15[COMRAM] unsigned int 
 25673 ;;  cntr            1   10[COMRAM] unsigned char 
 25674 ;;  data_length     1    9[COMRAM] unsigned char 
 25675 ;; Return value:  Size  Location     Type
 25676 ;;                  1    wreg      void 
 25677 ;; Registers used:
 25678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25679 ;; Tracked objects:
 25680 ;;		On entry : 0/0
 25681 ;;		On exit  : 0/0
 25682 ;;		Unchanged: 0/0
 25683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25684 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25685 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25686 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25687 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25688 ;;Total ram usage:       13 bytes
 25689 ;; Hardware stack levels used:    1
 25690 ;; Hardware stack levels required when called:    1
 25691 ;; This function calls:
 25692 ;;		_bootloader_get_entries
 25693 ;;		_bootloader_get_error
 25694 ;;		_bootloader_get_file_size
 25695 ;;		_bootloader_get_flashPagesWritten
 25696 ;;		_bootloader_get_rec_address
 25697 ;;		_bootloader_get_rec_checksum
 25698 ;;		_bootloader_get_rec_checksumCheck
 25699 ;;		_bootloader_get_rec_data
 25700 ;;		_bootloader_get_rec_dataLength
 25701 ;;		_bootloader_get_rec_recordType
 25702 ;;		_bootloader_get_total_entries
 25703 ;; This function is called by:
 25704 ;;		_api_prepare
 25705 ;; This function uses a non-reentrant model
 25706 ;;
 25707                           
 25708                           	psect	text119
 25709  00293E                     __ptext119:
 25710                           	opt stack 0
 25711  00293E                     __fill_buffer_get_bootloader_details:
 25712                           	opt stack 28
 25713                           
 25714                           ;api.c: 250: uint8_t cntr;;api.c: 251: uint8_t data_length;;api.c: 252: uint16_t buffer_
      +                          small;;api.c: 253: uint32_t buffer_large;;api.c: 256: outBuffer[0] = DATAREQUEST_GET_BOO
      +                          TLOADER_DETAILS;
 25715                           
 25716                           ;incstack = 0
 25717  00293E  C005  FFD9         	movff	__fill_buffer_get_bootloader_details@outBuffer,fsr2l
 25718  002942  C006  FFDA         	movff	__fill_buffer_get_bootloader_details@outBuffer+1,fsr2h
 25719  002946  0E13               	movlw	19
 25720  002948  6EDF               	movwf	indf2,c
 25721                           
 25722                           ;api.c: 259: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 25723  00294A  EE20 F001          	lfsr	2,1
 25724  00294E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25725  002950  26D9               	addwf	fsr2l,f,c
 25726  002952  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25727  002954  22DA               	addwfc	fsr2h,f,c
 25728  002956  0EC1               	movlw	193
 25729  002958  6EDF               	movwf	indf2,c
 25730                           
 25731                           ;api.c: 260: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 25732  00295A  EE20 F002          	lfsr	2,2
 25733  00295E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25734  002960  26D9               	addwf	fsr2l,f,c
 25735  002962  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25736  002964  22DA               	addwfc	fsr2h,f,c
 25737  002966  0E25               	movlw	37
 25738  002968  6EDF               	movwf	indf2,c
 25739                           
 25740                           ;api.c: 263: buffer_large = bootloader_get_file_size();
 25741  00296A  ECC7  F03F         	call	_bootloader_get_file_size	;wreg free
 25742  00296E  C001  F00C         	movff	?_bootloader_get_file_size,__fill_buffer_get_bootloader_details@buffer_large
 25743  002972  C002  F00D         	movff	?_bootloader_get_file_size+1,__fill_buffer_get_bootloader_details@buffer_large+1
 25744  002976  C003  F00E         	movff	?_bootloader_get_file_size+2,__fill_buffer_get_bootloader_details@buffer_large+2
 25745  00297A  C004  F00F         	movff	?_bootloader_get_file_size+3,__fill_buffer_get_bootloader_details@buffer_large+3
 25746                           
 25747                           ;api.c: 264: outBuffer[3] = ((unsigned char)(((((unsigned short)(((buffer_large)>>16)&0x
      +                          FFFF)))>>8)&0xFF));
 25748  00297E  EE20 F003          	lfsr	2,3
 25749  002982  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25750  002984  26D9               	addwf	fsr2l,f,c
 25751  002986  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25752  002988  22DA               	addwfc	fsr2h,f,c
 25753  00298A  500F               	movf	__fill_buffer_get_bootloader_details@buffer_large+3,w,c
 25754  00298C  6EDF               	movwf	indf2,c
 25755                           
 25756                           ;api.c: 265: outBuffer[4] = ((unsigned char)((((unsigned short)(((buffer_large)>>16)&0xF
      +                          FFF)))&0xFF));
 25757  00298E  EE20 F004          	lfsr	2,4
 25758  002992  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25759  002994  26D9               	addwf	fsr2l,f,c
 25760  002996  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25761  002998  22DA               	addwfc	fsr2h,f,c
 25762  00299A  C00E  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large+2,indf2
 25763                           
 25764                           ;api.c: 266: outBuffer[5] = ((unsigned char)(((((unsigned short)((buffer_large)&0xFFFF))
      +                          )>>8)&0xFF));
 25765  00299E  EE20 F005          	lfsr	2,5
 25766  0029A2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25767  0029A4  26D9               	addwf	fsr2l,f,c
 25768  0029A6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25769  0029A8  22DA               	addwfc	fsr2h,f,c
 25770  0029AA  500D               	movf	__fill_buffer_get_bootloader_details@buffer_large+1,w,c
 25771  0029AC  6EDF               	movwf	indf2,c
 25772                           
 25773                           ;api.c: 267: outBuffer[6] = ((unsigned char)((((unsigned short)((buffer_large)&0xFFFF)))
      +                          &0xFF));
 25774  0029AE  EE20 F006          	lfsr	2,6
 25775  0029B2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25776  0029B4  26D9               	addwf	fsr2l,f,c
 25777  0029B6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25778  0029B8  22DA               	addwfc	fsr2h,f,c
 25779  0029BA  C00C  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large,indf2
 25780                           
 25781                           ;api.c: 269: buffer_small = bootloader_get_entries();
 25782  0029BE  EC39  F040         	call	_bootloader_get_entries	;wreg free
 25783  0029C2  C001  F010         	movff	?_bootloader_get_entries,__fill_buffer_get_bootloader_details@buffer_small
 25784  0029C6  C002  F011         	movff	?_bootloader_get_entries+1,__fill_buffer_get_bootloader_details@buffer_small+1
 25785                           
 25786                           ;api.c: 270: outBuffer[7] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25787  0029CA  EE20 F007          	lfsr	2,7
 25788  0029CE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25789  0029D0  26D9               	addwf	fsr2l,f,c
 25790  0029D2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25791  0029D4  22DA               	addwfc	fsr2h,f,c
 25792  0029D6  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25793  0029D8  6EDF               	movwf	indf2,c
 25794                           
 25795                           ;api.c: 271: outBuffer[8] = ((unsigned char)((buffer_small)&0xFF));
 25796  0029DA  EE20 F008          	lfsr	2,8
 25797  0029DE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25798  0029E0  26D9               	addwf	fsr2l,f,c
 25799  0029E2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25800  0029E4  22DA               	addwfc	fsr2h,f,c
 25801  0029E6  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25802                           
 25803                           ;api.c: 273: buffer_small = bootloader_get_total_entries();
 25804  0029EA  EC43  F040         	call	_bootloader_get_total_entries	;wreg free
 25805  0029EE  C001  F010         	movff	?_bootloader_get_total_entries,__fill_buffer_get_bootloader_details@buffer_small
 25806  0029F2  C002  F011         	movff	?_bootloader_get_total_entries+1,__fill_buffer_get_bootloader_details@buffer_smal
      +                          l+1
 25807                           
 25808                           ;api.c: 274: outBuffer[9] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25809  0029F6  EE20 F009          	lfsr	2,9
 25810  0029FA  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25811  0029FC  26D9               	addwf	fsr2l,f,c
 25812  0029FE  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25813  002A00  22DA               	addwfc	fsr2h,f,c
 25814  002A02  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25815  002A04  6EDF               	movwf	indf2,c
 25816                           
 25817                           ;api.c: 275: outBuffer[10] = ((unsigned char)((buffer_small)&0xFF));
 25818  002A06  EE20 F00A          	lfsr	2,10
 25819  002A0A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25820  002A0C  26D9               	addwf	fsr2l,f,c
 25821  002A0E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25822  002A10  22DA               	addwfc	fsr2h,f,c
 25823  002A12  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25824                           
 25825                           ;api.c: 277: outBuffer[11] = (uint8_t) bootloader_get_error();
 25826  002A16  EE20 F00B          	lfsr	2,11
 25827  002A1A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25828  002A1C  26D9               	addwf	fsr2l,f,c
 25829  002A1E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25830  002A20  22DA               	addwfc	fsr2h,f,c
 25831  002A22  EC72  F040         	call	_bootloader_get_error	;wreg free
 25832  002A26  6EDF               	movwf	indf2,c
 25833                           
 25834                           ;api.c: 279: buffer_small = bootloader_get_flashPagesWritten();
 25835  002A28  EC3E  F040         	call	_bootloader_get_flashPagesWritten	;wreg free
 25836  002A2C  C001  F010         	movff	?_bootloader_get_flashPagesWritten,__fill_buffer_get_bootloader_details@buffer_sm
      +                          all
 25837  002A30  C002  F011         	movff	?_bootloader_get_flashPagesWritten+1,__fill_buffer_get_bootloader_details@buffer_
      +                          small+1
 25838                           
 25839                           ;api.c: 280: outBuffer[12] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25840  002A34  EE20 F00C          	lfsr	2,12
 25841  002A38  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25842  002A3A  26D9               	addwf	fsr2l,f,c
 25843  002A3C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25844  002A3E  22DA               	addwfc	fsr2h,f,c
 25845  002A40  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25846  002A42  6EDF               	movwf	indf2,c
 25847                           
 25848                           ;api.c: 281: outBuffer[13] = ((unsigned char)((buffer_small)&0xFF));
 25849  002A44  EE20 F00D          	lfsr	2,13
 25850  002A48  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25851  002A4A  26D9               	addwf	fsr2l,f,c
 25852  002A4C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25853  002A4E  22DA               	addwfc	fsr2h,f,c
 25854  002A50  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25855                           
 25856                           ;api.c: 284: buffer_small = bootloader_get_rec_dataLength();
 25857  002A54  EC2F  F040         	call	_bootloader_get_rec_dataLength	;wreg free
 25858  002A58  C001  F010         	movff	?_bootloader_get_rec_dataLength,__fill_buffer_get_bootloader_details@buffer_small
 25859  002A5C  C002  F011         	movff	?_bootloader_get_rec_dataLength+1,__fill_buffer_get_bootloader_details@buffer_sma
      +                          ll+1
 25860                           
 25861                           ;api.c: 285: outBuffer[14] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25862  002A60  EE20 F00E          	lfsr	2,14
 25863  002A64  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25864  002A66  26D9               	addwf	fsr2l,f,c
 25865  002A68  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25866  002A6A  22DA               	addwfc	fsr2h,f,c
 25867  002A6C  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25868  002A6E  6EDF               	movwf	indf2,c
 25869                           
 25870                           ;api.c: 286: outBuffer[15] = ((unsigned char)((buffer_small)&0xFF));
 25871  002A70  EE20 F00F          	lfsr	2,15
 25872  002A74  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25873  002A76  26D9               	addwf	fsr2l,f,c
 25874  002A78  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25875  002A7A  22DA               	addwfc	fsr2h,f,c
 25876  002A7C  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25877                           
 25878                           ;api.c: 288: buffer_small = bootloader_get_rec_address();
 25879  002A80  EC34  F040         	call	_bootloader_get_rec_address	;wreg free
 25880  002A84  C001  F010         	movff	?_bootloader_get_rec_address,__fill_buffer_get_bootloader_details@buffer_small
 25881  002A88  C002  F011         	movff	?_bootloader_get_rec_address+1,__fill_buffer_get_bootloader_details@buffer_small+
      +                          1
 25882                           
 25883                           ;api.c: 289: outBuffer[16] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25884  002A8C  EE20 F010          	lfsr	2,16
 25885  002A90  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25886  002A92  26D9               	addwf	fsr2l,f,c
 25887  002A94  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25888  002A96  22DA               	addwfc	fsr2h,f,c
 25889  002A98  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25890  002A9A  6EDF               	movwf	indf2,c
 25891                           
 25892                           ;api.c: 290: outBuffer[17] = ((unsigned char)((buffer_small)&0xFF));
 25893  002A9C  EE20 F011          	lfsr	2,17
 25894  002AA0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25895  002AA2  26D9               	addwf	fsr2l,f,c
 25896  002AA4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25897  002AA6  22DA               	addwfc	fsr2h,f,c
 25898  002AA8  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25899                           
 25900                           ;api.c: 292: outBuffer[18] = (uint8_t) bootloader_get_rec_recordType();
 25901  002AAC  EE20 F012          	lfsr	2,18
 25902  002AB0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25903  002AB2  26D9               	addwf	fsr2l,f,c
 25904  002AB4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25905  002AB6  22DA               	addwfc	fsr2h,f,c
 25906  002AB8  EC66  F040         	call	_bootloader_get_rec_recordType	;wreg free
 25907  002ABC  6EDF               	movwf	indf2,c
 25908                           
 25909                           ;api.c: 293: outBuffer[19] = bootloader_get_rec_checksum();
 25910  002ABE  EE20 F013          	lfsr	2,19
 25911  002AC2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25912  002AC4  26D9               	addwf	fsr2l,f,c
 25913  002AC6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25914  002AC8  22DA               	addwfc	fsr2h,f,c
 25915  002ACA  EC6C  F040         	call	_bootloader_get_rec_checksum	;wreg free
 25916  002ACE  6EDF               	movwf	indf2,c
 25917                           
 25918                           ;api.c: 294: outBuffer[20] = bootloader_get_rec_checksumCheck();
 25919  002AD0  EE20 F014          	lfsr	2,20
 25920  002AD4  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25921  002AD6  26D9               	addwf	fsr2l,f,c
 25922  002AD8  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25923  002ADA  22DA               	addwfc	fsr2h,f,c
 25924  002ADC  EC69  F040         	call	_bootloader_get_rec_checksumCheck	;wreg free
 25925  002AE0  6EDF               	movwf	indf2,c
 25926                           
 25927                           ;api.c: 296: data_length = (uint8_t) bootloader_get_rec_dataLength();
 25928  002AE2  EC2F  F040         	call	_bootloader_get_rec_dataLength	;wreg free
 25929  002AE6  5001               	movf	?_bootloader_get_rec_dataLength,w,c
 25930  002AE8  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 25931                           
 25932                           ;api.c: 297: if(data_length>43)
 25933  002AEA  0E2B               	movlw	43
 25934  002AEC  640A               	cpfsgt	__fill_buffer_get_bootloader_details@data_length,c
 25935  002AEE  D002               	goto	l2609
 25936                           
 25937                           ;api.c: 298: {;api.c: 300: data_length = 43;
 25938  002AF0  0E2B               	movlw	43
 25939  002AF2  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 25940  002AF4                     l2609:
 25941                           
 25942                           ;api.c: 301: };api.c: 302: for(cntr=0; cntr<data_length; ++cntr)
 25943  002AF4  0E00               	movlw	0
 25944  002AF6  6E0B               	movwf	__fill_buffer_get_bootloader_details@cntr,c
 25945  002AF8  D014               	goto	l2610
 25946  002AFA                     
 25947                           ;api.c: 303: {;api.c: 304: outBuffer[21+cntr] = bootloader_get_rec_data(cntr);
 25948  002AFA  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 25949  002AFC  EC94  F03F         	call	_bootloader_get_rec_data
 25950  002B00  6E07               	movwf	??__fill_buffer_get_bootloader_details& (0+255),c
 25951  002B02  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 25952  002B04  6E08               	movwf	(??__fill_buffer_get_bootloader_details+1)& (0+255),c
 25953  002B06  6A09               	clrf	(??__fill_buffer_get_bootloader_details+2)& (0+255),c
 25954  002B08  0E15               	movlw	21
 25955  002B0A  2608               	addwf	??__fill_buffer_get_bootloader_details+1,f,c
 25956  002B0C  0E00               	movlw	0
 25957  002B0E  2209               	addwfc	??__fill_buffer_get_bootloader_details+2,f,c
 25958  002B10  5008               	movf	??__fill_buffer_get_bootloader_details+1,w,c
 25959  002B12  2405               	addwf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25960  002B14  6ED9               	movwf	fsr2l,c
 25961  002B16  5009               	movf	??__fill_buffer_get_bootloader_details+2,w,c
 25962  002B18  2006               	addwfc	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25963  002B1A  6EDA               	movwf	fsr2h,c
 25964  002B1C  C007  FFDF         	movff	??__fill_buffer_get_bootloader_details,indf2
 25965  002B20  2A0B               	incf	__fill_buffer_get_bootloader_details@cntr,f,c
 25966  002B22                     l2610:
 25967  002B22  500A               	movf	__fill_buffer_get_bootloader_details@data_length,w,c
 25968  002B24  5C0B               	subwf	__fill_buffer_get_bootloader_details@cntr,w,c
 25969  002B26  B0D8               	btfsc	status,0,c
 25970  002B28  0012               	return	
 25971  002B2A  D7E7               	goto	l2611
 25972  002B2C                     __end_of__fill_buffer_get_bootloader_details:
 25973                           	opt stack 0
 25974                           tosu	equ	0xFFF
 25975                           tosh	equ	0xFFE
 25976                           tosl	equ	0xFFD
 25977                           pclath	equ	0xFFA
 25978                           tblptru	equ	0xFF8
 25979                           tblptrh	equ	0xFF7
 25980                           tblptrl	equ	0xFF6
 25981                           tablat	equ	0xFF5
 25982                           prodh	equ	0xFF4
 25983                           prodl	equ	0xFF3
 25984                           intcon	equ	0xFF2
 25985                           intcon2	equ	0xFF1
 25986                           intcon3	equ	0xFF0
 25987                           indf0	equ	0xFEF
 25988                           postinc0	equ	0xFEE
 25989                           fsr0h	equ	0xFEA
 25990                           fsr0l	equ	0xFE9
 25991                           wreg	equ	0xFE8
 25992                           indf1	equ	0xFE7
 25993                           postdec1	equ	0xFE5
 25994                           plusw1	equ	0xFE3
 25995                           fsr1h	equ	0xFE2
 25996                           fsr1l	equ	0xFE1
 25997                           indf2	equ	0xFDF
 25998                           postinc2	equ	0xFDE
 25999                           postdec2	equ	0xFDD
 26000                           plusw2	equ	0xFDB
 26001                           fsr2h	equ	0xFDA
 26002                           fsr2l	equ	0xFD9
 26003                           status	equ	0xFD8
 26004                           
 26005 ;; *************** function _bootloader_get_rec_recordType *****************
 26006 ;; Defined at:
 26007 ;;		line 458 in file "bootloader.c"
 26008 ;; Parameters:    Size  Location     Type
 26009 ;;		None
 26010 ;; Auto vars:     Size  Location     Type
 26011 ;;		None
 26012 ;; Return value:  Size  Location     Type
 26013 ;;                  1    wreg      enum E6772
 26014 ;; Registers used:
 26015 ;;		wreg, status,2
 26016 ;; Tracked objects:
 26017 ;;		On entry : 0/0
 26018 ;;		On exit  : 0/0
 26019 ;;		Unchanged: 0/0
 26020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26025 ;;Total ram usage:        0 bytes
 26026 ;; Hardware stack levels used:    1
 26027 ;; This function calls:
 26028 ;;		Nothing
 26029 ;; This function is called by:
 26030 ;;		__fill_buffer_get_bootloader_details
 26031 ;; This function uses a non-reentrant model
 26032 ;;
 26033                           
 26034                           	psect	text120
 26035  0080CC                     __ptext120:
 26036                           	opt stack 0
 26037  0080CC                     _bootloader_get_rec_recordType:
 26038                           	opt stack 28
 26039                           
 26040                           ;bootloader.c: 460: return hex_file_entry.recordType;
 26041                           
 26042                           ;incstack = 0
 26043  0080CC  0101               	movlb	1	; () banked
 26044  0080CE  51CA               	movf	(_hex_file_entry+4)& (0+255),w,b
 26045  0080D0  0012               	return	
 26046  0080D2                     __end_of_bootloader_get_rec_recordType:
 26047                           	opt stack 0
 26048                           tosu	equ	0xFFF
 26049                           tosh	equ	0xFFE
 26050                           tosl	equ	0xFFD
 26051                           pclath	equ	0xFFA
 26052                           tblptru	equ	0xFF8
 26053                           tblptrh	equ	0xFF7
 26054                           tblptrl	equ	0xFF6
 26055                           tablat	equ	0xFF5
 26056                           prodh	equ	0xFF4
 26057                           prodl	equ	0xFF3
 26058                           intcon	equ	0xFF2
 26059                           intcon2	equ	0xFF1
 26060                           intcon3	equ	0xFF0
 26061                           indf0	equ	0xFEF
 26062                           postinc0	equ	0xFEE
 26063                           fsr0h	equ	0xFEA
 26064                           fsr0l	equ	0xFE9
 26065                           wreg	equ	0xFE8
 26066                           indf1	equ	0xFE7
 26067                           postdec1	equ	0xFE5
 26068                           plusw1	equ	0xFE3
 26069                           fsr1h	equ	0xFE2
 26070                           fsr1l	equ	0xFE1
 26071                           indf2	equ	0xFDF
 26072                           postinc2	equ	0xFDE
 26073                           postdec2	equ	0xFDD
 26074                           plusw2	equ	0xFDB
 26075                           fsr2h	equ	0xFDA
 26076                           fsr2l	equ	0xFD9
 26077                           status	equ	0xFD8
 26078                           
 26079 ;; *************** function _bootloader_get_rec_dataLength *****************
 26080 ;; Defined at:
 26081 ;;		line 447 in file "bootloader.c"
 26082 ;; Parameters:    Size  Location     Type
 26083 ;;		None
 26084 ;; Auto vars:     Size  Location     Type
 26085 ;;		None
 26086 ;; Return value:  Size  Location     Type
 26087 ;;                  2    0[COMRAM] unsigned int 
 26088 ;; Registers used:
 26089 ;;		None
 26090 ;; Tracked objects:
 26091 ;;		On entry : 0/0
 26092 ;;		On exit  : 0/0
 26093 ;;		Unchanged: 0/0
 26094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26095 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26098 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26099 ;;Total ram usage:        2 bytes
 26100 ;; Hardware stack levels used:    1
 26101 ;; This function calls:
 26102 ;;		Nothing
 26103 ;; This function is called by:
 26104 ;;		__fill_buffer_get_bootloader_details
 26105 ;; This function uses a non-reentrant model
 26106 ;;
 26107                           
 26108                           	psect	text121
 26109  00805E                     __ptext121:
 26110                           	opt stack 0
 26111  00805E                     _bootloader_get_rec_dataLength:
 26112                           	opt stack 28
 26113                           
 26114                           ;bootloader.c: 449: return hex_file_entry.dataLength;
 26115                           
 26116                           ; BSR set to: 1
 26117                           ;incstack = 0
 26118  00805E  C1C6  F001         	movff	_hex_file_entry,?_bootloader_get_rec_dataLength
 26119  008062  C1C7  F002         	movff	_hex_file_entry+1,?_bootloader_get_rec_dataLength+1
 26120  008066  0012               	return		;funcret
 26121  008068                     __end_of_bootloader_get_rec_dataLength:
 26122                           	opt stack 0
 26123                           tosu	equ	0xFFF
 26124                           tosh	equ	0xFFE
 26125                           tosl	equ	0xFFD
 26126                           pclath	equ	0xFFA
 26127                           tblptru	equ	0xFF8
 26128                           tblptrh	equ	0xFF7
 26129                           tblptrl	equ	0xFF6
 26130                           tablat	equ	0xFF5
 26131                           prodh	equ	0xFF4
 26132                           prodl	equ	0xFF3
 26133                           intcon	equ	0xFF2
 26134                           intcon2	equ	0xFF1
 26135                           intcon3	equ	0xFF0
 26136                           indf0	equ	0xFEF
 26137                           postinc0	equ	0xFEE
 26138                           fsr0h	equ	0xFEA
 26139                           fsr0l	equ	0xFE9
 26140                           wreg	equ	0xFE8
 26141                           indf1	equ	0xFE7
 26142                           postdec1	equ	0xFE5
 26143                           plusw1	equ	0xFE3
 26144                           fsr1h	equ	0xFE2
 26145                           fsr1l	equ	0xFE1
 26146                           indf2	equ	0xFDF
 26147                           postinc2	equ	0xFDE
 26148                           postdec2	equ	0xFDD
 26149                           plusw2	equ	0xFDB
 26150                           fsr2h	equ	0xFDA
 26151                           fsr2l	equ	0xFD9
 26152                           status	equ	0xFD8
 26153                           
 26154 ;; *************** function _bootloader_get_rec_data *****************
 26155 ;; Defined at:
 26156 ;;		line 463 in file "bootloader.c"
 26157 ;; Parameters:    Size  Location     Type
 26158 ;;  index           1    wreg     unsigned char 
 26159 ;; Auto vars:     Size  Location     Type
 26160 ;;  index           1    0[COMRAM] unsigned char 
 26161 ;; Return value:  Size  Location     Type
 26162 ;;                  1    wreg      unsigned char 
 26163 ;; Registers used:
 26164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26165 ;; Tracked objects:
 26166 ;;		On entry : 0/0
 26167 ;;		On exit  : 0/0
 26168 ;;		Unchanged: 0/0
 26169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26171 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26173 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26174 ;;Total ram usage:        1 bytes
 26175 ;; Hardware stack levels used:    1
 26176 ;; This function calls:
 26177 ;;		Nothing
 26178 ;; This function is called by:
 26179 ;;		__fill_buffer_get_bootloader_details
 26180 ;; This function uses a non-reentrant model
 26181 ;;
 26182                           
 26183                           	psect	text122
 26184  007F28                     __ptext122:
 26185                           	opt stack 0
 26186  007F28                     _bootloader_get_rec_data:
 26187                           	opt stack 28
 26188                           
 26189                           ;incstack = 0
 26190                           ;bootloader_get_rec_data@index stored from wreg
 26191  007F28  6E01               	movwf	bootloader_get_rec_data@index,c
 26192                           
 26193                           ;bootloader.c: 465: return hex_file_entry.data[index];
 26194  007F2A  5001               	movf	bootloader_get_rec_data@index,w,c
 26195  007F2C  0D01               	mullw	1
 26196  007F2E  0ECB               	movlw	low (_hex_file_entry+5)
 26197  007F30  24F3               	addwf	prodl,w,c
 26198  007F32  6ED9               	movwf	fsr2l,c
 26199  007F34  0E01               	movlw	high (_hex_file_entry+5)
 26200  007F36  20F4               	addwfc	prodh,w,c
 26201  007F38  6EDA               	movwf	fsr2h,c
 26202  007F3A  50DF               	movf	indf2,w,c
 26203  007F3C  0012               	return	
 26204  007F3E                     __end_of_bootloader_get_rec_data:
 26205                           	opt stack 0
 26206                           tosu	equ	0xFFF
 26207                           tosh	equ	0xFFE
 26208                           tosl	equ	0xFFD
 26209                           pclath	equ	0xFFA
 26210                           tblptru	equ	0xFF8
 26211                           tblptrh	equ	0xFF7
 26212                           tblptrl	equ	0xFF6
 26213                           tablat	equ	0xFF5
 26214                           prodh	equ	0xFF4
 26215                           prodl	equ	0xFF3
 26216                           intcon	equ	0xFF2
 26217                           intcon2	equ	0xFF1
 26218                           intcon3	equ	0xFF0
 26219                           indf0	equ	0xFEF
 26220                           postinc0	equ	0xFEE
 26221                           fsr0h	equ	0xFEA
 26222                           fsr0l	equ	0xFE9
 26223                           wreg	equ	0xFE8
 26224                           indf1	equ	0xFE7
 26225                           postdec1	equ	0xFE5
 26226                           plusw1	equ	0xFE3
 26227                           fsr1h	equ	0xFE2
 26228                           fsr1l	equ	0xFE1
 26229                           indf2	equ	0xFDF
 26230                           postinc2	equ	0xFDE
 26231                           postdec2	equ	0xFDD
 26232                           plusw2	equ	0xFDB
 26233                           fsr2h	equ	0xFDA
 26234                           fsr2l	equ	0xFD9
 26235                           status	equ	0xFD8
 26236                           
 26237 ;; *************** function _bootloader_get_rec_checksumCheck *****************
 26238 ;; Defined at:
 26239 ;;		line 473 in file "bootloader.c"
 26240 ;; Parameters:    Size  Location     Type
 26241 ;;		None
 26242 ;; Auto vars:     Size  Location     Type
 26243 ;;		None
 26244 ;; Return value:  Size  Location     Type
 26245 ;;                  1    wreg      unsigned char 
 26246 ;; Registers used:
 26247 ;;		wreg, status,2
 26248 ;; Tracked objects:
 26249 ;;		On entry : 0/0
 26250 ;;		On exit  : 0/0
 26251 ;;		Unchanged: 0/0
 26252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26257 ;;Total ram usage:        0 bytes
 26258 ;; Hardware stack levels used:    1
 26259 ;; This function calls:
 26260 ;;		Nothing
 26261 ;; This function is called by:
 26262 ;;		__fill_buffer_get_bootloader_details
 26263 ;; This function uses a non-reentrant model
 26264 ;;
 26265                           
 26266                           	psect	text123
 26267  0080D2                     __ptext123:
 26268                           	opt stack 0
 26269  0080D2                     _bootloader_get_rec_checksumCheck:
 26270                           	opt stack 28
 26271                           
 26272                           ;bootloader.c: 475: return hex_file_entry.checksumCheck;
 26273                           
 26274                           ;incstack = 0
 26275  0080D2  0101               	movlb	1	; () banked
 26276  0080D4  51DC               	movf	(_hex_file_entry+22)& (0+255),w,b
 26277  0080D6  0012               	return	
 26278  0080D8                     __end_of_bootloader_get_rec_checksumCheck:
 26279                           	opt stack 0
 26280                           tosu	equ	0xFFF
 26281                           tosh	equ	0xFFE
 26282                           tosl	equ	0xFFD
 26283                           pclath	equ	0xFFA
 26284                           tblptru	equ	0xFF8
 26285                           tblptrh	equ	0xFF7
 26286                           tblptrl	equ	0xFF6
 26287                           tablat	equ	0xFF5
 26288                           prodh	equ	0xFF4
 26289                           prodl	equ	0xFF3
 26290                           intcon	equ	0xFF2
 26291                           intcon2	equ	0xFF1
 26292                           intcon3	equ	0xFF0
 26293                           indf0	equ	0xFEF
 26294                           postinc0	equ	0xFEE
 26295                           fsr0h	equ	0xFEA
 26296                           fsr0l	equ	0xFE9
 26297                           wreg	equ	0xFE8
 26298                           indf1	equ	0xFE7
 26299                           postdec1	equ	0xFE5
 26300                           plusw1	equ	0xFE3
 26301                           fsr1h	equ	0xFE2
 26302                           fsr1l	equ	0xFE1
 26303                           indf2	equ	0xFDF
 26304                           postinc2	equ	0xFDE
 26305                           postdec2	equ	0xFDD
 26306                           plusw2	equ	0xFDB
 26307                           fsr2h	equ	0xFDA
 26308                           fsr2l	equ	0xFD9
 26309                           status	equ	0xFD8
 26310                           
 26311 ;; *************** function _bootloader_get_rec_checksum *****************
 26312 ;; Defined at:
 26313 ;;		line 468 in file "bootloader.c"
 26314 ;; Parameters:    Size  Location     Type
 26315 ;;		None
 26316 ;; Auto vars:     Size  Location     Type
 26317 ;;		None
 26318 ;; Return value:  Size  Location     Type
 26319 ;;                  1    wreg      unsigned char 
 26320 ;; Registers used:
 26321 ;;		wreg, status,2
 26322 ;; Tracked objects:
 26323 ;;		On entry : 0/0
 26324 ;;		On exit  : 0/0
 26325 ;;		Unchanged: 0/0
 26326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26331 ;;Total ram usage:        0 bytes
 26332 ;; Hardware stack levels used:    1
 26333 ;; This function calls:
 26334 ;;		Nothing
 26335 ;; This function is called by:
 26336 ;;		__fill_buffer_get_bootloader_details
 26337 ;; This function uses a non-reentrant model
 26338 ;;
 26339                           
 26340                           	psect	text124
 26341  0080D8                     __ptext124:
 26342                           	opt stack 0
 26343  0080D8                     _bootloader_get_rec_checksum:
 26344                           	opt stack 28
 26345                           
 26346                           ;bootloader.c: 470: return hex_file_entry.checksum;
 26347                           
 26348                           ; BSR set to: 1
 26349                           ;incstack = 0
 26350  0080D8  0101               	movlb	1	; () banked
 26351  0080DA  51DB               	movf	(_hex_file_entry+21)& (0+255),w,b
 26352  0080DC  0012               	return	
 26353  0080DE                     __end_of_bootloader_get_rec_checksum:
 26354                           	opt stack 0
 26355                           tosu	equ	0xFFF
 26356                           tosh	equ	0xFFE
 26357                           tosl	equ	0xFFD
 26358                           pclath	equ	0xFFA
 26359                           tblptru	equ	0xFF8
 26360                           tblptrh	equ	0xFF7
 26361                           tblptrl	equ	0xFF6
 26362                           tablat	equ	0xFF5
 26363                           prodh	equ	0xFF4
 26364                           prodl	equ	0xFF3
 26365                           intcon	equ	0xFF2
 26366                           intcon2	equ	0xFF1
 26367                           intcon3	equ	0xFF0
 26368                           indf0	equ	0xFEF
 26369                           postinc0	equ	0xFEE
 26370                           fsr0h	equ	0xFEA
 26371                           fsr0l	equ	0xFE9
 26372                           wreg	equ	0xFE8
 26373                           indf1	equ	0xFE7
 26374                           postdec1	equ	0xFE5
 26375                           plusw1	equ	0xFE3
 26376                           fsr1h	equ	0xFE2
 26377                           fsr1l	equ	0xFE1
 26378                           indf2	equ	0xFDF
 26379                           postinc2	equ	0xFDE
 26380                           postdec2	equ	0xFDD
 26381                           plusw2	equ	0xFDB
 26382                           fsr2h	equ	0xFDA
 26383                           fsr2l	equ	0xFD9
 26384                           status	equ	0xFD8
 26385                           
 26386 ;; *************** function __fill_buffer_find_file *****************
 26387 ;; Defined at:
 26388 ;;		line 347 in file "api.c"
 26389 ;; Parameters:    Size  Location     Type
 26390 ;;  inBuffer        2   67[COMRAM] PTR unsigned char 
 26391 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 26392 ;;  outBuffer       2   69[COMRAM] PTR unsigned char 
 26393 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 26394 ;; Auto vars:     Size  Location     Type
 26395 ;;  cntr            1   75[COMRAM] unsigned char 
 26396 ;; Return value:  Size  Location     Type
 26397 ;;                  1    wreg      void 
 26398 ;; Registers used:
 26399 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26400 ;; Tracked objects:
 26401 ;;		On entry : 0/0
 26402 ;;		On exit  : 0/0
 26403 ;;		Unchanged: 0/0
 26404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26405 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26406 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26407 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26408 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26409 ;;Total ram usage:        9 bytes
 26410 ;; Hardware stack levels used:    1
 26411 ;; Hardware stack levels required when called:    6
 26412 ;; This function calls:
 26413 ;;		_fat_find_file
 26414 ;; This function is called by:
 26415 ;;		_api_prepare
 26416 ;; This function uses a non-reentrant model
 26417 ;;
 26418                           
 26419                           	psect	text125
 26420  005D54                     __ptext125:
 26421                           	opt stack 0
 26422  005D54                     __fill_buffer_find_file:
 26423                           	opt stack 23
 26424                           
 26425                           ;api.c: 349: uint8_t cntr;;api.c: 352: outBuffer[0] = DATAREQUEST_FIND_FILE;
 26426                           
 26427                           ; BSR set to: 1
 26428                           ;incstack = 0
 26429  005D54  C046  FFD9         	movff	__fill_buffer_find_file@outBuffer,fsr2l
 26430  005D58  C047  FFDA         	movff	__fill_buffer_find_file@outBuffer+1,fsr2h
 26431  005D5C  0E81               	movlw	129
 26432  005D5E  6EDF               	movwf	indf2,c
 26433                           
 26434                           ;api.c: 355: outBuffer[1] = 0xC125 >> 8;
 26435  005D60  EE20 F001          	lfsr	2,1
 26436  005D64  5046               	movf	__fill_buffer_find_file@outBuffer,w,c
 26437  005D66  26D9               	addwf	fsr2l,f,c
 26438  005D68  5047               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 26439  005D6A  22DA               	addwfc	fsr2h,f,c
 26440  005D6C  0EC1               	movlw	193
 26441  005D6E  6EDF               	movwf	indf2,c
 26442                           
 26443                           ;api.c: 356: outBuffer[2] = (uint8_t) 0xC125;
 26444  005D70  EE20 F002          	lfsr	2,2
 26445  005D74  5046               	movf	__fill_buffer_find_file@outBuffer,w,c
 26446  005D76  26D9               	addwf	fsr2l,f,c
 26447  005D78  5047               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 26448  005D7A  22DA               	addwfc	fsr2h,f,c
 26449  005D7C  0E25               	movlw	37
 26450  005D7E  6EDF               	movwf	indf2,c
 26451                           
 26452                           ;api.c: 359: outBuffer[3] = fat_find_file(&inBuffer[1], &inBuffer[9]);
 26453  005D80  0E01               	movlw	1
 26454  005D82  2444               	addwf	__fill_buffer_find_file@inBuffer,w,c
 26455  005D84  6E30               	movwf	fat_find_file@name,c
 26456  005D86  0E00               	movlw	0
 26457  005D88  2045               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 26458  005D8A  6E31               	movwf	fat_find_file@name+1,c
 26459  005D8C  0E09               	movlw	9
 26460  005D8E  2444               	addwf	__fill_buffer_find_file@inBuffer,w,c
 26461  005D90  6E32               	movwf	fat_find_file@extension,c
 26462  005D92  0E00               	movlw	0
 26463  005D94  2045               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 26464  005D96  6E33               	movwf	fat_find_file@extension+1,c
 26465  005D98  EC47  F02B         	call	_fat_find_file	;wreg free
 26466  005D9C  6E48               	movwf	??__fill_buffer_find_file& (0+255),c
 26467  005D9E  EE20 F003          	lfsr	2,3
 26468  005DA2  5046               	movf	__fill_buffer_find_file@outBuffer,w,c
 26469  005DA4  26D9               	addwf	fsr2l,f,c
 26470  005DA6  5047               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 26471  005DA8  22DA               	addwfc	fsr2h,f,c
 26472  005DAA  C048  FFDF         	movff	??__fill_buffer_find_file,indf2
 26473                           
 26474                           ;api.c: 362: for(cntr=0; cntr<11; ++cntr)
 26475  005DAE  0E00               	movlw	0
 26476  005DB0  6E4C               	movwf	__fill_buffer_find_file@cntr,c
 26477  005DB2                     l13477:
 26478  005DB2  0E0A               	movlw	10
 26479  005DB4  644C               	cpfsgt	__fill_buffer_find_file@cntr,c
 26480  005DB6  D001               	goto	l2622
 26481  005DB8  0012               	return	
 26482  005DBA                     l2622:
 26483                           
 26484                           ;api.c: 363: {;api.c: 364: outBuffer[cntr+12] = inBuffer[cntr+1];
 26485  005DBA  504C               	movf	__fill_buffer_find_file@cntr,w,c
 26486  005DBC  6E48               	movwf	??__fill_buffer_find_file& (0+255),c
 26487  005DBE  6A49               	clrf	(??__fill_buffer_find_file+1)& (0+255),c
 26488  005DC0  0E01               	movlw	1
 26489  005DC2  2648               	addwf	??__fill_buffer_find_file,f,c
 26490  005DC4  0E00               	movlw	0
 26491  005DC6  2249               	addwfc	??__fill_buffer_find_file+1,f,c
 26492  005DC8  5048               	movf	??__fill_buffer_find_file,w,c
 26493  005DCA  2444               	addwf	__fill_buffer_find_file@inBuffer,w,c
 26494  005DCC  6ED9               	movwf	fsr2l,c
 26495  005DCE  5049               	movf	??__fill_buffer_find_file+1,w,c
 26496  005DD0  2045               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 26497  005DD2  6EDA               	movwf	fsr2h,c
 26498  005DD4  504C               	movf	__fill_buffer_find_file@cntr,w,c
 26499  005DD6  6E4A               	movwf	(??__fill_buffer_find_file+2)& (0+255),c
 26500  005DD8  6A4B               	clrf	(??__fill_buffer_find_file+3)& (0+255),c
 26501  005DDA  0E0C               	movlw	12
 26502  005DDC  264A               	addwf	??__fill_buffer_find_file+2,f,c
 26503  005DDE  0E00               	movlw	0
 26504  005DE0  224B               	addwfc	??__fill_buffer_find_file+3,f,c
 26505  005DE2  504A               	movf	??__fill_buffer_find_file+2,w,c
 26506  005DE4  2446               	addwf	__fill_buffer_find_file@outBuffer,w,c
 26507  005DE6  6EE1               	movwf	fsr1l,c
 26508  005DE8  504B               	movf	??__fill_buffer_find_file+3,w,c
 26509  005DEA  2047               	addwfc	__fill_buffer_find_file@outBuffer+1,w,c
 26510  005DEC  6EE2               	movwf	fsr1h,c
 26511  005DEE  CFDF FFE7          	movff	indf2,indf1
 26512  005DF2  2A4C               	incf	__fill_buffer_find_file@cntr,f,c
 26513  005DF4  D7DE               	goto	l13477
 26514  005DF6                     __end_of__fill_buffer_find_file:
 26515                           	opt stack 0
 26516                           tosu	equ	0xFFF
 26517                           tosh	equ	0xFFE
 26518                           tosl	equ	0xFFD
 26519                           pclath	equ	0xFFA
 26520                           tblptru	equ	0xFF8
 26521                           tblptrh	equ	0xFF7
 26522                           tblptrl	equ	0xFF6
 26523                           tablat	equ	0xFF5
 26524                           prodh	equ	0xFF4
 26525                           prodl	equ	0xFF3
 26526                           intcon	equ	0xFF2
 26527                           intcon2	equ	0xFF1
 26528                           intcon3	equ	0xFF0
 26529                           indf0	equ	0xFEF
 26530                           postinc0	equ	0xFEE
 26531                           fsr0h	equ	0xFEA
 26532                           fsr0l	equ	0xFE9
 26533                           wreg	equ	0xFE8
 26534                           indf1	equ	0xFE7
 26535                           postdec1	equ	0xFE5
 26536                           plusw1	equ	0xFE3
 26537                           fsr1h	equ	0xFE2
 26538                           fsr1l	equ	0xFE1
 26539                           indf2	equ	0xFDF
 26540                           postinc2	equ	0xFDE
 26541                           postdec2	equ	0xFDD
 26542                           plusw2	equ	0xFDB
 26543                           fsr2h	equ	0xFDA
 26544                           fsr2l	equ	0xFD9
 26545                           status	equ	0xFD8
 26546                           
 26547 ;; *************** function _api_parse *****************
 26548 ;; Defined at:
 26549 ;;		line 124 in file "api.c"
 26550 ;; Parameters:    Size  Location     Type
 26551 ;;  inBuffer        2   51[BANK0 ] PTR unsigned char 
 26552 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 26553 ;;  receivedData    1   53[BANK0 ] unsigned char 
 26554 ;; Auto vars:     Size  Location     Type
 26555 ;;  idx             1   87[COMRAM] unsigned char 
 26556 ;; Return value:  Size  Location     Type
 26557 ;;                  1    wreg      void 
 26558 ;; Registers used:
 26559 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26560 ;; Tracked objects:
 26561 ;;		On entry : 0/0
 26562 ;;		On exit  : 0/0
 26563 ;;		Unchanged: 0/0
 26564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26565 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26566 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26567 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26568 ;;      Totals:         3       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26569 ;;Total ram usage:        6 bytes
 26570 ;; Hardware stack levels used:    1
 26571 ;; Hardware stack levels required when called:   10
 26572 ;; This function calls:
 26573 ;;		__parse_command_long
 26574 ;;		__parse_command_short
 26575 ;; This function is called by:
 26576 ;;		_main
 26577 ;;		_APP_DeviceCustomHIDTasks
 26578 ;; This function uses a non-reentrant model
 26579 ;;
 26580                           
 26581                           	psect	text126
 26582  004F7C                     __ptext126:
 26583                           	opt stack 0
 26584  004F7C                     _api_parse:
 26585                           	opt stack 20
 26586                           
 26587                           ;api.c: 128: uint8_t idx;;api.c: 130: if(inBuffer[0]>0x7F)
 26588                           
 26589                           ;incstack = 0
 26590  004F7C  C0E8  FFD9         	movff	api_parse@inBuffer,fsr2l
 26591  004F80  C0E9  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 26592  004F84  0E7F               	movlw	127
 26593  004F86  64DF               	cpfsgt	indf2,c
 26594  004F88  D001               	goto	l2580
 26595  004F8A  0012               	return	
 26596  004F8C                     l2580:
 26597                           
 26598                           ;api.c: 135: };api.c: 137: idx = 1;
 26599  004F8C  0E01               	movlw	1
 26600  004F8E  6E58               	movwf	api_parse@idx,c
 26601                           
 26602                           ;api.c: 138: while(idx<receivedDataLength)
 26603  004F90  D058               	goto	l2587
 26604  004F92                     
 26605                           ;api.c: 139: {;api.c: 141: if(inBuffer[idx]==COMMAND_STOP_PARSING)
 26606  004F92  5058               	movf	api_parse@idx,w,c
 26607  004F94  0D01               	mullw	1
 26608  004F96  50F3               	movf	prodl,w,c
 26609  004F98  0100               	movlb	0	; () banked
 26610  004F9A  25E8               	addwf	api_parse@inBuffer& (0+255),w,b
 26611  004F9C  6ED9               	movwf	fsr2l,c
 26612  004F9E  50F4               	movf	prodh,w,c
 26613  004FA0  21E9               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26614  004FA2  6EDA               	movwf	fsr2h,c
 26615  004FA4  0E99               	movlw	153
 26616  004FA6  18DE               	xorwf	postinc2,w,c
 26617  004FA8  B4D8               	btfsc	status,2,c
 26618  004FAA  0012               	return	
 26619  004FAC  D02E               	goto	l2585
 26620  004FAE                     
 26621                           ; BSR set to: 0
 26622                           ;api.c: 149: _parse_command_short(inBuffer[idx]);
 26623                           
 26624                           ; BSR set to: 0
 26625  004FAE  5058               	movf	api_parse@idx,w,c
 26626  004FB0  0D01               	mullw	1
 26627  004FB2  50F3               	movf	prodl,w,c
 26628  004FB4  25E8               	addwf	api_parse@inBuffer& (0+255),w,b
 26629  004FB6  6ED9               	movwf	fsr2l,c
 26630  004FB8  50F4               	movf	prodh,w,c
 26631  004FBA  21E9               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26632  004FBC  6EDA               	movwf	fsr2h,c
 26633  004FBE  50DF               	movf	indf2,w,c
 26634  004FC0  EC01  F02C         	call	__parse_command_short
 26635  004FC4  D00C               	goto	l14009
 26636  004FC6                     
 26637                           ;api.c: 154: _parse_command_short(inBuffer[idx]);
 26638  004FC6  5058               	movf	api_parse@idx,w,c
 26639  004FC8  0D01               	mullw	1
 26640  004FCA  50F3               	movf	prodl,w,c
 26641  004FCC  0100               	movlb	0	; () banked
 26642  004FCE  25E8               	addwf	api_parse@inBuffer& (0+255),w,b
 26643  004FD0  6ED9               	movwf	fsr2l,c
 26644  004FD2  50F4               	movf	prodh,w,c
 26645  004FD4  21E9               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26646  004FD6  6EDA               	movwf	fsr2h,c
 26647  004FD8  50DF               	movf	indf2,w,c
 26648  004FDA  EC01  F02C         	call	__parse_command_short
 26649  004FDE                     l14009:
 26650                           
 26651                           ;api.c: 155: ++idx;
 26652  004FDE  2A58               	incf	api_parse@idx,f,c
 26653                           
 26654                           ;api.c: 156: break;
 26655  004FE0  D030               	goto	l2587
 26656  004FE2                     
 26657                           ;api.c: 159: idx += _parse_command_long(inBuffer[idx]);
 26658  004FE2  5058               	movf	api_parse@idx,w,c
 26659  004FE4  0D01               	mullw	1
 26660  004FE6  50F3               	movf	prodl,w,c
 26661  004FE8  0100               	movlb	0	; () banked
 26662  004FEA  25E8               	addwf	api_parse@inBuffer& (0+255),w,b
 26663  004FEC  6ED9               	movwf	fsr2l,c
 26664  004FEE  50F4               	movf	prodh,w,c
 26665  004FF0  21E9               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26666  004FF2  6EDA               	movwf	fsr2h,c
 26667  004FF4  50DF               	movf	indf2,w,c
 26668  004FF6  6E56               	movwf	??_api_parse& (0+255),c
 26669  004FF8  6A57               	clrf	(??_api_parse+1)& (0+255),c
 26670  004FFA  C056  F053         	movff	??_api_parse,__parse_command_long@data
 26671  004FFE  C057  F054         	movff	??_api_parse+1,__parse_command_long@data+1
 26672  005002  EC0F  F031         	call	__parse_command_long	;wreg free
 26673  005006  2658               	addwf	api_parse@idx,f,c
 26674                           
 26675                           ;api.c: 160: break;
 26676  005008  D01C               	goto	l2587
 26677  00500A                     l2585:
 26678  00500A  5058               	movf	api_parse@idx,w,c
 26679  00500C  0D01               	mullw	1
 26680  00500E  50F3               	movf	prodl,w,c
 26681  005010  0100               	movlb	0	; () banked
 26682  005012  25E8               	addwf	api_parse@inBuffer& (0+255),w,b
 26683  005014  6ED9               	movwf	fsr2l,c
 26684  005016  50F4               	movf	prodh,w,c
 26685  005018  21E9               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 26686  00501A  6EDA               	movwf	fsr2h,c
 26687  00501C  50DF               	movf	indf2,w,c
 26688  00501E  0BF0               	andlw	240
 26689  005020  6E56               	movwf	??_api_parse& (0+255),c
 26690  005022  6A57               	clrf	(??_api_parse+1)& (0+255),c
 26691                           
 26692                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26693                           ; Switch size 1, requested type "space"
 26694                           ; Number of cases is 1, Range of values is 0 to 0
 26695                           ; switch strategies available:
 26696                           ; Name         Instructions Cycles
 26697                           ; simple_byte            4     3 (average)
 26698                           ;	Chosen strategy is simple_byte
 26699  005024  5057               	movf	??_api_parse+1,w,c
 26700  005026  0A00               	xorlw	0	; case 0
 26701  005028  A4D8               	btfss	status,2,c
 26702  00502A  0012               	return	
 26703                           
 26704                           ; BSR set to: 0
 26705                           ; Switch size 1, requested type "space"
 26706                           ; Number of cases is 3, Range of values is 32 to 80
 26707                           ; switch strategies available:
 26708                           ; Name         Instructions Cycles
 26709                           ; simple_byte           10     6 (average)
 26710                           ;	Chosen strategy is simple_byte
 26711  00502C  5056               	movf	??_api_parse,w,c
 26712  00502E  0A20               	xorlw	32	; case 32
 26713  005030  B4D8               	btfsc	status,2,c
 26714  005032  D7BD               	goto	l2586
 26715  005034  0A10               	xorlw	16	; case 48
 26716  005036  B4D8               	btfsc	status,2,c
 26717  005038  D7C6               	goto	l2588
 26718  00503A  0A60               	xorlw	96	; case 80
 26719  00503C  A4D8               	btfss	status,2,c
 26720  00503E  0012               	return	
 26721  005040  D7D0               	goto	l2589
 26722  005042                     l2587:
 26723                           
 26724                           ; BSR set to: 0
 26725                           
 26726                           ; BSR set to: 0
 26727  005042  0100               	movlb	0	; () banked
 26728  005044  51EA               	movf	api_parse@receivedDataLength& (0+255),w,b
 26729  005046  5C58               	subwf	api_parse@idx,w,c
 26730  005048  B0D8               	btfsc	status,0,c
 26731  00504A  0012               	return	
 26732  00504C  D7A2               	goto	l2583
 26733  00504E                     __end_of_api_parse:
 26734                           	opt stack 0
 26735                           tosu	equ	0xFFF
 26736                           tosh	equ	0xFFE
 26737                           tosl	equ	0xFFD
 26738                           pclath	equ	0xFFA
 26739                           tblptru	equ	0xFF8
 26740                           tblptrh	equ	0xFF7
 26741                           tblptrl	equ	0xFF6
 26742                           tablat	equ	0xFF5
 26743                           prodh	equ	0xFF4
 26744                           prodl	equ	0xFF3
 26745                           intcon	equ	0xFF2
 26746                           intcon2	equ	0xFF1
 26747                           intcon3	equ	0xFF0
 26748                           indf0	equ	0xFEF
 26749                           postinc0	equ	0xFEE
 26750                           fsr0h	equ	0xFEA
 26751                           fsr0l	equ	0xFE9
 26752                           wreg	equ	0xFE8
 26753                           indf1	equ	0xFE7
 26754                           postdec1	equ	0xFE5
 26755                           plusw1	equ	0xFE3
 26756                           fsr1h	equ	0xFE2
 26757                           fsr1l	equ	0xFE1
 26758                           indf2	equ	0xFDF
 26759                           postinc2	equ	0xFDE
 26760                           postdec2	equ	0xFDD
 26761                           plusw2	equ	0xFDB
 26762                           fsr2h	equ	0xFDA
 26763                           fsr2l	equ	0xFD9
 26764                           status	equ	0xFD8
 26765                           
 26766 ;; *************** function __parse_command_short *****************
 26767 ;; Defined at:
 26768 ;;		line 416 in file "api.c"
 26769 ;; Parameters:    Size  Location     Type
 26770 ;;  cmd             1    wreg     unsigned char 
 26771 ;; Auto vars:     Size  Location     Type
 26772 ;;  cmd             1   43[COMRAM] unsigned char 
 26773 ;; Return value:  Size  Location     Type
 26774 ;;                  1    wreg      void 
 26775 ;; Registers used:
 26776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26777 ;; Tracked objects:
 26778 ;;		On entry : 0/0
 26779 ;;		On exit  : 0/0
 26780 ;;		Unchanged: 0/0
 26781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26783 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26785 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26786 ;;Total ram usage:        1 bytes
 26787 ;; Hardware stack levels used:    1
 26788 ;; Hardware stack levels required when called:    8
 26789 ;; This function calls:
 26790 ;;		_i2c_eeprom_writeByte
 26791 ;;		_reboot
 26792 ;;		_system_delay_ms
 26793 ;; This function is called by:
 26794 ;;		_api_parse
 26795 ;; This function uses a non-reentrant model
 26796 ;;
 26797                           
 26798                           	psect	text127
 26799  005802                     __ptext127:
 26800                           	opt stack 0
 26801  005802                     __parse_command_short:
 26802                           	opt stack 21
 26803                           
 26804                           ;incstack = 0
 26805                           ;__parse_command_short@cmd stored from wreg
 26806  005802  6E2C               	movwf	__parse_command_short@cmd,c
 26807                           
 26808                           ;api.c: 418: switch(cmd)
 26809  005804  D041               	goto	l2631
 26810  005806                     
 26811                           ;api.c: 421: i2c_eeprom_writeByte(0x100, 0x00);
 26812  005806  0E01               	movlw	1
 26813  005808  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 26814  00580A  0E00               	movlw	0
 26815  00580C  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 26816  00580E  0E00               	movlw	0
 26817  005810  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 26818  005812  ECF3  F03B         	call	_i2c_eeprom_writeByte	;wreg free
 26819                           
 26820                           ;api.c: 422: system_delay_ms(10);
 26821  005816  0E0A               	movlw	10
 26822  005818  ECAD  F03E         	call	_system_delay_ms
 26823                           
 26824                           ;api.c: 423: reboot();
 26825  00581C  EC7B  F03F         	call	_reboot	;wreg free
 26826                           
 26827                           ;api.c: 424: break;
 26828  005820  0012               	return	
 26829  005822                     
 26830                           ;api.c: 427: i2c_eeprom_writeByte(0x100, 0x94);
 26831  005822  0E01               	movlw	1
 26832  005824  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 26833  005826  0E00               	movlw	0
 26834  005828  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 26835  00582A  0E94               	movlw	148
 26836  00582C  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 26837  00582E  ECF3  F03B         	call	_i2c_eeprom_writeByte	;wreg free
 26838                           
 26839                           ;api.c: 428: system_delay_ms(10);
 26840  005832  0E0A               	movlw	10
 26841  005834  ECAD  F03E         	call	_system_delay_ms
 26842                           
 26843                           ;api.c: 429: reboot();
 26844  005838  EC7B  F03F         	call	_reboot	;wreg free
 26845                           
 26846                           ;api.c: 430: break;
 26847  00583C  0012               	return	
 26848  00583E                     
 26849                           ;api.c: 433: i2c_eeprom_writeByte(0x100, 0x78);
 26850  00583E  0E01               	movlw	1
 26851  005840  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 26852  005842  0E00               	movlw	0
 26853  005844  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 26854  005846  0E78               	movlw	120
 26855  005848  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 26856  00584A  ECF3  F03B         	call	_i2c_eeprom_writeByte	;wreg free
 26857                           
 26858                           ;api.c: 434: system_delay_ms(10);
 26859  00584E  0E0A               	movlw	10
 26860  005850  ECAD  F03E         	call	_system_delay_ms
 26861                           
 26862                           ;api.c: 435: reboot();
 26863  005854  EC7B  F03F         	call	_reboot	;wreg free
 26864                           
 26865                           ;api.c: 436: break;
 26866  005858  0012               	return	
 26867  00585A                     
 26868                           ;api.c: 440: i2c_eeprom_writeByte(0x100, 0x78);
 26869  00585A  0E01               	movlw	1
 26870  00585C  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 26871  00585E  0E00               	movlw	0
 26872  005860  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 26873  005862  0E78               	movlw	120
 26874  005864  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 26875  005866  ECF3  F03B         	call	_i2c_eeprom_writeByte	;wreg free
 26876                           
 26877                           ;api.c: 441: system_delay_ms(10);
 26878  00586A  0E0A               	movlw	10
 26879  00586C  ECAD  F03E         	call	_system_delay_ms
 26880                           
 26881                           ;api.c: 442: reboot();
 26882  005870  EC7B  F03F         	call	_reboot	;wreg free
 26883                           
 26884                           ;api.c: 443: break;
 26885  005874  0012               	return	
 26886  005876                     
 26887                           ;api.c: 446: --os.encoderCount;
 26888  005876  0100               	movlb	0	; () banked
 26889  005878  0760               	decf	_os& (0+255),f,b	;volatile
 26890                           
 26891                           ;api.c: 447: break;
 26892  00587A  0012               	return	
 26893  00587C                     
 26894                           ;api.c: 450: ++os.encoderCount;
 26895                           
 26896                           ; BSR set to: 0
 26897  00587C  0100               	movlb	0	; () banked
 26898  00587E  2B60               	incf	_os& (0+255),f,b	;volatile
 26899                           
 26900                           ;api.c: 451: break;
 26901  005880  0012               	return	
 26902  005882                     
 26903                           ;api.c: 454: ++os.buttonCount;
 26904                           
 26905                           ; BSR set to: 0
 26906  005882  0100               	movlb	0	; () banked
 26907  005884  2B61               	incf	(_os+1)& (0+255),f,b	;volatile
 26908                           
 26909                           ; BSR set to: 0
 26910                           ;api.c: 456: }
 26911                           
 26912                           ;api.c: 455: break;
 26913  005886  0012               	return	
 26914  005888                     l2631:
 26915                           
 26916                           ; BSR set to: 0
 26917  005888  502C               	movf	__parse_command_short@cmd,w,c
 26918                           
 26919                           ; Switch size 1, requested type "space"
 26920                           ; Number of cases is 7, Range of values is 32 to 62
 26921                           ; switch strategies available:
 26922                           ; Name         Instructions Cycles
 26923                           ; simple_byte           22    12 (average)
 26924                           ;	Chosen strategy is simple_byte
 26925  00588A  0A20               	xorlw	32	; case 32
 26926  00588C  B4D8               	btfsc	status,2,c
 26927  00588E  D7BB               	goto	l2632
 26928  005890  0A01               	xorlw	1	; case 33
 26929  005892  B4D8               	btfsc	status,2,c
 26930  005894  D7C6               	goto	l2634
 26931  005896  0A03               	xorlw	3	; case 34
 26932  005898  B4D8               	btfsc	status,2,c
 26933  00589A  D7D1               	goto	l2635
 26934  00589C  0A01               	xorlw	1	; case 35
 26935  00589E  B4D8               	btfsc	status,2,c
 26936  0058A0  D7DC               	goto	l2636
 26937  0058A2  0A1F               	xorlw	31	; case 60
 26938  0058A4  B4D8               	btfsc	status,2,c
 26939  0058A6  D7E7               	goto	l2637
 26940  0058A8  0A01               	xorlw	1	; case 61
 26941  0058AA  B4D8               	btfsc	status,2,c
 26942  0058AC  D7E7               	goto	l2638
 26943  0058AE  0A03               	xorlw	3	; case 62
 26944  0058B0  A4D8               	btfss	status,2,c
 26945  0058B2  0012               	return	
 26946  0058B4  D7E6               	goto	l2639
 26947  0058B6                     __end_of__parse_command_short:
 26948                           	opt stack 0
 26949                           tosu	equ	0xFFF
 26950                           tosh	equ	0xFFE
 26951                           tosl	equ	0xFFD
 26952                           pclath	equ	0xFFA
 26953                           tblptru	equ	0xFF8
 26954                           tblptrh	equ	0xFF7
 26955                           tblptrl	equ	0xFF6
 26956                           tablat	equ	0xFF5
 26957                           prodh	equ	0xFF4
 26958                           prodl	equ	0xFF3
 26959                           intcon	equ	0xFF2
 26960                           intcon2	equ	0xFF1
 26961                           intcon3	equ	0xFF0
 26962                           indf0	equ	0xFEF
 26963                           postinc0	equ	0xFEE
 26964                           fsr0h	equ	0xFEA
 26965                           fsr0l	equ	0xFE9
 26966                           wreg	equ	0xFE8
 26967                           indf1	equ	0xFE7
 26968                           postdec1	equ	0xFE5
 26969                           plusw1	equ	0xFE3
 26970                           fsr1h	equ	0xFE2
 26971                           fsr1l	equ	0xFE1
 26972                           indf2	equ	0xFDF
 26973                           postinc2	equ	0xFDE
 26974                           postdec2	equ	0xFDD
 26975                           plusw2	equ	0xFDB
 26976                           fsr2h	equ	0xFDA
 26977                           fsr2l	equ	0xFD9
 26978                           status	equ	0xFD8
 26979                           
 26980 ;; *************** function _system_delay_ms *****************
 26981 ;; Defined at:
 26982 ;;		line 63 in file "os.c"
 26983 ;; Parameters:    Size  Location     Type
 26984 ;;  ms              1    wreg     unsigned char 
 26985 ;; Auto vars:     Size  Location     Type
 26986 ;;  ms              1    1[COMRAM] unsigned char 
 26987 ;;  cntr            1    2[COMRAM] unsigned char 
 26988 ;; Return value:  Size  Location     Type
 26989 ;;                  1    wreg      void 
 26990 ;; Registers used:
 26991 ;;		wreg, status,2, status,0, cstack
 26992 ;; Tracked objects:
 26993 ;;		On entry : 0/0
 26994 ;;		On exit  : 0/0
 26995 ;;		Unchanged: 0/0
 26996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26998 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26999 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27000 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27001 ;;Total ram usage:        3 bytes
 27002 ;; Hardware stack levels used:    1
 27003 ;; This function calls:
 27004 ;;		Nothing
 27005 ;; This function is called by:
 27006 ;;		__ui_encoder
 27007 ;;		__parse_command_short
 27008 ;; This function uses a non-reentrant model
 27009 ;;
 27010                           
 27011                           	psect	text128
 27012  007D5A                     __ptext128:
 27013                           	opt stack 0
 27014  007D5A                     _system_delay_ms:
 27015                           	opt stack 28
 27016                           
 27017                           ;incstack = 0
 27018                           ;system_delay_ms@ms stored from wreg
 27019  007D5A  6E02               	movwf	system_delay_ms@ms,c
 27020                           
 27021                           ;os.c: 65: uint8_t cntr;;os.c: 66: for(cntr=0; cntr<ms; ++cntr)
 27022  007D5C  0E00               	movlw	0
 27023  007D5E  6E03               	movwf	system_delay_ms@cntr,c
 27024  007D60  D009               	goto	l1087
 27025  007D62                     
 27026                           ;os.c: 67: {;os.c: 68: _delay((unsigned long)((6)*(8000000/4000.0)));
 27027  007D62  0E10               	movlw	16
 27028  007D64  6E01               	movwf	??_system_delay_ms& (0+255),c
 27029  007D66  0E94               	movlw	148
 27030  007D68                     u12077:
 27031  007D68  2EE8               	decfsz	wreg,f,c
 27032  007D6A  D7FE               	bra	u12077
 27033  007D6C  2E01               	decfsz	??_system_delay_ms& (0+255),f,c
 27034  007D6E  D7FC               	bra	u12077
 27035  007D70  D000               	nop2	
 27036  007D72  2A03               	incf	system_delay_ms@cntr,f,c
 27037  007D74                     l1087:
 27038  007D74  5002               	movf	system_delay_ms@ms,w,c
 27039  007D76  5C03               	subwf	system_delay_ms@cntr,w,c
 27040  007D78  B0D8               	btfsc	status,0,c
 27041  007D7A  0012               	return	
 27042  007D7C  D7F2               	goto	l1088
 27043  007D7E                     __end_of_system_delay_ms:
 27044                           	opt stack 0
 27045                           tosu	equ	0xFFF
 27046                           tosh	equ	0xFFE
 27047                           tosl	equ	0xFFD
 27048                           pclath	equ	0xFFA
 27049                           tblptru	equ	0xFF8
 27050                           tblptrh	equ	0xFF7
 27051                           tblptrl	equ	0xFF6
 27052                           tablat	equ	0xFF5
 27053                           prodh	equ	0xFF4
 27054                           prodl	equ	0xFF3
 27055                           intcon	equ	0xFF2
 27056                           intcon2	equ	0xFF1
 27057                           intcon3	equ	0xFF0
 27058                           indf0	equ	0xFEF
 27059                           postinc0	equ	0xFEE
 27060                           fsr0h	equ	0xFEA
 27061                           fsr0l	equ	0xFE9
 27062                           wreg	equ	0xFE8
 27063                           indf1	equ	0xFE7
 27064                           postdec1	equ	0xFE5
 27065                           plusw1	equ	0xFE3
 27066                           fsr1h	equ	0xFE2
 27067                           fsr1l	equ	0xFE1
 27068                           indf2	equ	0xFDF
 27069                           postinc2	equ	0xFDE
 27070                           postdec2	equ	0xFDD
 27071                           plusw2	equ	0xFDB
 27072                           fsr2h	equ	0xFDA
 27073                           fsr2l	equ	0xFD9
 27074                           status	equ	0xFD8
 27075                           
 27076 ;; *************** function _reboot *****************
 27077 ;; Defined at:
 27078 ;;		line 256 in file "os.c"
 27079 ;; Parameters:    Size  Location     Type
 27080 ;;		None
 27081 ;; Auto vars:     Size  Location     Type
 27082 ;;		None
 27083 ;; Return value:  Size  Location     Type
 27084 ;;                  1    wreg      void 
 27085 ;; Registers used:
 27086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27087 ;; Tracked objects:
 27088 ;;		On entry : 0/0
 27089 ;;		On exit  : 0/0
 27090 ;;		Unchanged: 0/0
 27091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27096 ;;Total ram usage:        0 bytes
 27097 ;; Hardware stack levels used:    1
 27098 ;; Hardware stack levels required when called:    7
 27099 ;; This function calls:
 27100 ;;		_display_prepare
 27101 ;;		_display_update
 27102 ;;		_ui_get_status
 27103 ;; This function is called by:
 27104 ;;		__ui_encoder
 27105 ;;		__parse_command_short
 27106 ;; This function uses a non-reentrant model
 27107 ;;
 27108                           
 27109                           	psect	text129
 27110  007EF6                     __ptext129:
 27111                           	opt stack 0
 27112  007EF6                     _reboot:
 27113                           	opt stack 21
 27114                           
 27115                           ;os.c: 259: os.display_mode = DISPLAY_MODE_BOOTLOADER_REBOOTING;
 27116                           
 27117                           ;incstack = 0
 27118  007EF6  0E80               	movlw	128
 27119  007EF8  0100               	movlb	0	; () banked
 27120  007EFA  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 27121                           
 27122                           ; BSR set to: 0
 27123                           ;os.c: 260: display_prepare(os.display_mode);
 27124  007EFC  5165               	movf	(_os+5)& (0+255),w,b	;volatile
 27125  007EFE  EC27  F028         	call	_display_prepare
 27126                           
 27127                           ;os.c: 261: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
 27128  007F02  EC6F  F040         	call	_ui_get_status	;wreg free
 27129  007F06  0A05               	xorlw	5
 27130  007F08  B4D8               	btfsc	status,2,c
 27131                           
 27132                           ;os.c: 262: {;os.c: 263: display_update();
 27133  007F0A  ECA7  F035         	call	_display_update	;wreg free
 27134  007F0E                     
 27135                           ;os.c: 264: };os.c: 267: while(1);
 27136  007F0E  D7FF               	goto	l1114
 27137  007F10                     __end_of_reboot:
 27138                           	opt stack 0
 27139                           tosu	equ	0xFFF
 27140                           tosh	equ	0xFFE
 27141                           tosl	equ	0xFFD
 27142                           pclath	equ	0xFFA
 27143                           tblptru	equ	0xFF8
 27144                           tblptrh	equ	0xFF7
 27145                           tblptrl	equ	0xFF6
 27146                           tablat	equ	0xFF5
 27147                           prodh	equ	0xFF4
 27148                           prodl	equ	0xFF3
 27149                           intcon	equ	0xFF2
 27150                           intcon2	equ	0xFF1
 27151                           intcon3	equ	0xFF0
 27152                           indf0	equ	0xFEF
 27153                           postinc0	equ	0xFEE
 27154                           fsr0h	equ	0xFEA
 27155                           fsr0l	equ	0xFE9
 27156                           wreg	equ	0xFE8
 27157                           indf1	equ	0xFE7
 27158                           postdec1	equ	0xFE5
 27159                           plusw1	equ	0xFE3
 27160                           fsr1h	equ	0xFE2
 27161                           fsr1l	equ	0xFE1
 27162                           indf2	equ	0xFDF
 27163                           postinc2	equ	0xFDE
 27164                           postdec2	equ	0xFDD
 27165                           plusw2	equ	0xFDB
 27166                           fsr2h	equ	0xFDA
 27167                           fsr2l	equ	0xFD9
 27168                           status	equ	0xFD8
 27169                           
 27170 ;; *************** function _ui_get_status *****************
 27171 ;; Defined at:
 27172 ;;		line 95 in file "ui.c"
 27173 ;; Parameters:    Size  Location     Type
 27174 ;;		None
 27175 ;; Auto vars:     Size  Location     Type
 27176 ;;		None
 27177 ;; Return value:  Size  Location     Type
 27178 ;;                  1    wreg      enum E7928
 27179 ;; Registers used:
 27180 ;;		wreg, status,2
 27181 ;; Tracked objects:
 27182 ;;		On entry : 0/0
 27183 ;;		On exit  : 0/0
 27184 ;;		Unchanged: 0/0
 27185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27190 ;;Total ram usage:        0 bytes
 27191 ;; Hardware stack levels used:    1
 27192 ;; This function calls:
 27193 ;;		Nothing
 27194 ;; This function is called by:
 27195 ;;		_main
 27196 ;;		_reboot
 27197 ;;		__fill_buffer_get_status
 27198 ;; This function uses a non-reentrant model
 27199 ;;
 27200                           
 27201                           	psect	text130
 27202  0080DE                     __ptext130:
 27203                           	opt stack 0
 27204  0080DE                     _ui_get_status:
 27205                           	opt stack 27
 27206                           
 27207                           ;ui.c: 97: return userInterfaceStatus;
 27208                           
 27209                           ;incstack = 0
 27210  0080DE  0100               	movlb	0	; () banked
 27211  0080E0  5198               	movf	_userInterfaceStatus& (0+255),w,b
 27212  0080E2  0012               	return	
 27213  0080E4                     __end_of_ui_get_status:
 27214                           	opt stack 0
 27215                           tosu	equ	0xFFF
 27216                           tosh	equ	0xFFE
 27217                           tosl	equ	0xFFD
 27218                           pclath	equ	0xFFA
 27219                           tblptru	equ	0xFF8
 27220                           tblptrh	equ	0xFF7
 27221                           tblptrl	equ	0xFF6
 27222                           tablat	equ	0xFF5
 27223                           prodh	equ	0xFF4
 27224                           prodl	equ	0xFF3
 27225                           intcon	equ	0xFF2
 27226                           intcon2	equ	0xFF1
 27227                           intcon3	equ	0xFF0
 27228                           indf0	equ	0xFEF
 27229                           postinc0	equ	0xFEE
 27230                           fsr0h	equ	0xFEA
 27231                           fsr0l	equ	0xFE9
 27232                           wreg	equ	0xFE8
 27233                           indf1	equ	0xFE7
 27234                           postdec1	equ	0xFE5
 27235                           plusw1	equ	0xFE3
 27236                           fsr1h	equ	0xFE2
 27237                           fsr1l	equ	0xFE1
 27238                           indf2	equ	0xFDF
 27239                           postinc2	equ	0xFDE
 27240                           postdec2	equ	0xFDD
 27241                           plusw2	equ	0xFDB
 27242                           fsr2h	equ	0xFDA
 27243                           fsr2l	equ	0xFD9
 27244                           status	equ	0xFD8
 27245                           
 27246 ;; *************** function _display_update *****************
 27247 ;; Defined at:
 27248 ;;		line 555 in file "display.c"
 27249 ;; Parameters:    Size  Location     Type
 27250 ;;		None
 27251 ;; Auto vars:     Size  Location     Type
 27252 ;;		None
 27253 ;; Return value:  Size  Location     Type
 27254 ;;                  1    wreg      void 
 27255 ;; Registers used:
 27256 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27257 ;; Tracked objects:
 27258 ;;		On entry : 0/0
 27259 ;;		On exit  : 0/0
 27260 ;;		Unchanged: 0/0
 27261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27265 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27266 ;;Total ram usage:        0 bytes
 27267 ;; Hardware stack levels used:    1
 27268 ;; Hardware stack levels required when called:    4
 27269 ;; This function calls:
 27270 ;;		_i2c_display_cursor
 27271 ;;		_i2c_display_write_fixed
 27272 ;; This function is called by:
 27273 ;;		_main
 27274 ;;		_reboot
 27275 ;; This function uses a non-reentrant model
 27276 ;;
 27277                           
 27278                           	psect	text131
 27279  006B4E                     __ptext131:
 27280                           	opt stack 0
 27281  006B4E                     _display_update:
 27282                           	opt stack 23
 27283                           
 27284                           ;display.c: 557: i2c_display_cursor(0, 0);
 27285                           
 27286                           ; BSR set to: 0
 27287                           ;incstack = 0
 27288  006B4E  0E00               	movlw	0
 27289  006B50  6E0E               	movwf	i2c_display_cursor@position,c
 27290  006B52  0E00               	movlw	0
 27291  006B54  ECBF  F03E         	call	_i2c_display_cursor
 27292                           
 27293                           ;display.c: 558: i2c_display_write_fixed(&display_content[0][0], 20);
 27294  006B58  0E76               	movlw	low _display_content
 27295  006B5A  6E06               	movwf	i2c_display_write_fixed@data,c
 27296  006B5C  0E01               	movlw	high _display_content
 27297  006B5E  6E07               	movwf	i2c_display_write_fixed@data+1,c
 27298  006B60  0E14               	movlw	20
 27299  006B62  6E08               	movwf	i2c_display_write_fixed@length,c
 27300  006B64  ECB5  F039         	call	_i2c_display_write_fixed	;wreg free
 27301                           
 27302                           ;display.c: 559: i2c_display_cursor(1, 0);
 27303  006B68  0E00               	movlw	0
 27304  006B6A  6E0E               	movwf	i2c_display_cursor@position,c
 27305  006B6C  0E01               	movlw	1
 27306  006B6E  ECBF  F03E         	call	_i2c_display_cursor
 27307                           
 27308                           ;display.c: 560: i2c_display_write_fixed(&display_content[1][0], 20);
 27309  006B72  0E8A               	movlw	low (_display_content+20)
 27310  006B74  6E06               	movwf	i2c_display_write_fixed@data,c
 27311  006B76  0E01               	movlw	high (_display_content+20)
 27312  006B78  6E07               	movwf	i2c_display_write_fixed@data+1,c
 27313  006B7A  0E14               	movlw	20
 27314  006B7C  6E08               	movwf	i2c_display_write_fixed@length,c
 27315  006B7E  ECB5  F039         	call	_i2c_display_write_fixed	;wreg free
 27316                           
 27317                           ;display.c: 561: i2c_display_cursor(2, 0);
 27318  006B82  0E00               	movlw	0
 27319  006B84  6E0E               	movwf	i2c_display_cursor@position,c
 27320  006B86  0E02               	movlw	2
 27321  006B88  ECBF  F03E         	call	_i2c_display_cursor
 27322                           
 27323                           ;display.c: 562: i2c_display_write_fixed(&display_content[2][0], 20);
 27324  006B8C  0E9E               	movlw	low (_display_content+40)
 27325  006B8E  6E06               	movwf	i2c_display_write_fixed@data,c
 27326  006B90  0E01               	movlw	high (_display_content+40)
 27327  006B92  6E07               	movwf	i2c_display_write_fixed@data+1,c
 27328  006B94  0E14               	movlw	20
 27329  006B96  6E08               	movwf	i2c_display_write_fixed@length,c
 27330  006B98  ECB5  F039         	call	_i2c_display_write_fixed	;wreg free
 27331                           
 27332                           ;display.c: 563: i2c_display_cursor(3, 0);
 27333  006B9C  0E00               	movlw	0
 27334  006B9E  6E0E               	movwf	i2c_display_cursor@position,c
 27335  006BA0  0E03               	movlw	3
 27336  006BA2  ECBF  F03E         	call	_i2c_display_cursor
 27337                           
 27338                           ;display.c: 564: i2c_display_write_fixed(&display_content[3][0], 20);
 27339  006BA6  0EB2               	movlw	low (_display_content+60)
 27340  006BA8  6E06               	movwf	i2c_display_write_fixed@data,c
 27341  006BAA  0E01               	movlw	high (_display_content+60)
 27342  006BAC  6E07               	movwf	i2c_display_write_fixed@data+1,c
 27343  006BAE  0E14               	movlw	20
 27344  006BB0  6E08               	movwf	i2c_display_write_fixed@length,c
 27345  006BB2  ECB5  F039         	call	_i2c_display_write_fixed	;wreg free
 27346  006BB6  0012               	return		;funcret
 27347  006BB8                     __end_of_display_update:
 27348                           	opt stack 0
 27349                           tosu	equ	0xFFF
 27350                           tosh	equ	0xFFE
 27351                           tosl	equ	0xFFD
 27352                           pclath	equ	0xFFA
 27353                           tblptru	equ	0xFF8
 27354                           tblptrh	equ	0xFF7
 27355                           tblptrl	equ	0xFF6
 27356                           tablat	equ	0xFF5
 27357                           prodh	equ	0xFF4
 27358                           prodl	equ	0xFF3
 27359                           intcon	equ	0xFF2
 27360                           intcon2	equ	0xFF1
 27361                           intcon3	equ	0xFF0
 27362                           indf0	equ	0xFEF
 27363                           postinc0	equ	0xFEE
 27364                           fsr0h	equ	0xFEA
 27365                           fsr0l	equ	0xFE9
 27366                           wreg	equ	0xFE8
 27367                           indf1	equ	0xFE7
 27368                           postdec1	equ	0xFE5
 27369                           plusw1	equ	0xFE3
 27370                           fsr1h	equ	0xFE2
 27371                           fsr1l	equ	0xFE1
 27372                           indf2	equ	0xFDF
 27373                           postinc2	equ	0xFDE
 27374                           postdec2	equ	0xFDD
 27375                           plusw2	equ	0xFDB
 27376                           fsr2h	equ	0xFDA
 27377                           fsr2l	equ	0xFD9
 27378                           status	equ	0xFD8
 27379                           
 27380 ;; *************** function _i2c_display_write_fixed *****************
 27381 ;; Defined at:
 27382 ;;		line 270 in file "i2c.c"
 27383 ;; Parameters:    Size  Location     Type
 27384 ;;  data            2    5[COMRAM] PTR unsigned char 
 27385 ;;		 -> display_content(80), 
 27386 ;;  length          1    7[COMRAM] unsigned char 
 27387 ;; Auto vars:     Size  Location     Type
 27388 ;;  pos             1    8[COMRAM] unsigned char 
 27389 ;; Return value:  Size  Location     Type
 27390 ;;                  1    wreg      void 
 27391 ;; Registers used:
 27392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27393 ;; Tracked objects:
 27394 ;;		On entry : 0/0
 27395 ;;		On exit  : 0/0
 27396 ;;		Unchanged: 0/0
 27397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27398 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27399 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27401 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27402 ;;Total ram usage:        4 bytes
 27403 ;; Hardware stack levels used:    1
 27404 ;; Hardware stack levels required when called:    1
 27405 ;; This function calls:
 27406 ;;		__i2c_send
 27407 ;;		__i2c_start
 27408 ;;		__i2c_stop
 27409 ;;		__i2c_wait_idle
 27410 ;;		_i2c_set_frequency
 27411 ;; This function is called by:
 27412 ;;		_display_update
 27413 ;; This function uses a non-reentrant model
 27414 ;;
 27415                           
 27416                           	psect	text132
 27417  00736A                     __ptext132:
 27418                           	opt stack 0
 27419  00736A                     _i2c_display_write_fixed:
 27420                           	opt stack 25
 27421                           
 27422                           ;i2c.c: 272: uint8_t pos;;i2c.c: 275: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 27423                           
 27424                           ;incstack = 0
 27425  00736A  0E02               	movlw	2
 27426  00736C  EC34  F03E         	call	_i2c_set_frequency
 27427                           
 27428                           ;i2c.c: 277: _i2c_wait_idle();
 27429  007370  EC58  F038         	call	__i2c_wait_idle	;wreg free
 27430                           
 27431                           ;i2c.c: 278: _i2c_start();
 27432  007374  EC5B  F040         	call	__i2c_start	;wreg free
 27433                           
 27434                           ;i2c.c: 279: _i2c_wait_idle();
 27435  007378  EC58  F038         	call	__i2c_wait_idle	;wreg free
 27436                           
 27437                           ;i2c.c: 280: _i2c_send(0b01111000);
 27438  00737C  0E78               	movlw	120
 27439  00737E  EC5F  F040         	call	__i2c_send
 27440                           
 27441                           ;i2c.c: 281: _i2c_wait_idle();
 27442  007382  EC58  F038         	call	__i2c_wait_idle	;wreg free
 27443                           
 27444                           ;i2c.c: 282: _i2c_send(0b01000000);
 27445  007386  0E40               	movlw	64
 27446  007388  EC5F  F040         	call	__i2c_send
 27447                           
 27448                           ;i2c.c: 283: _i2c_wait_idle();
 27449  00738C  EC58  F038         	call	__i2c_wait_idle	;wreg free
 27450                           
 27451                           ;i2c.c: 286: for(pos=0; pos<length; ++pos)
 27452  007390  0E00               	movlw	0
 27453  007392  6E09               	movwf	i2c_display_write_fixed@pos,c
 27454  007394  D00E               	goto	l1229
 27455  007396                     
 27456                           ;i2c.c: 287: {;i2c.c: 288: _i2c_send(data[pos]);
 27457  007396  5009               	movf	i2c_display_write_fixed@pos,w,c
 27458  007398  0D01               	mullw	1
 27459  00739A  50F3               	movf	prodl,w,c
 27460  00739C  2406               	addwf	i2c_display_write_fixed@data,w,c
 27461  00739E  6ED9               	movwf	fsr2l,c
 27462  0073A0  50F4               	movf	prodh,w,c
 27463  0073A2  2007               	addwfc	i2c_display_write_fixed@data+1,w,c
 27464  0073A4  6EDA               	movwf	fsr2h,c
 27465  0073A6  50DF               	movf	indf2,w,c
 27466  0073A8  EC5F  F040         	call	__i2c_send
 27467                           
 27468                           ;i2c.c: 289: _i2c_wait_idle();
 27469  0073AC  EC58  F038         	call	__i2c_wait_idle	;wreg free
 27470  0073B0  2A09               	incf	i2c_display_write_fixed@pos,f,c
 27471  0073B2                     l1229:
 27472  0073B2  5008               	movf	i2c_display_write_fixed@length,w,c
 27473  0073B4  5C09               	subwf	i2c_display_write_fixed@pos,w,c
 27474  0073B6  A0D8               	btfss	status,0,c
 27475  0073B8  D7EE               	goto	l1230
 27476                           
 27477                           ;i2c.c: 290: };i2c.c: 292: _i2c_stop();
 27478  0073BA  EC57  F040         	call	__i2c_stop	;wreg free
 27479  0073BE  0012               	return		;funcret
 27480  0073C0                     __end_of_i2c_display_write_fixed:
 27481                           	opt stack 0
 27482                           tosu	equ	0xFFF
 27483                           tosh	equ	0xFFE
 27484                           tosl	equ	0xFFD
 27485                           pclath	equ	0xFFA
 27486                           tblptru	equ	0xFF8
 27487                           tblptrh	equ	0xFF7
 27488                           tblptrl	equ	0xFF6
 27489                           tablat	equ	0xFF5
 27490                           prodh	equ	0xFF4
 27491                           prodl	equ	0xFF3
 27492                           intcon	equ	0xFF2
 27493                           intcon2	equ	0xFF1
 27494                           intcon3	equ	0xFF0
 27495                           indf0	equ	0xFEF
 27496                           postinc0	equ	0xFEE
 27497                           fsr0h	equ	0xFEA
 27498                           fsr0l	equ	0xFE9
 27499                           wreg	equ	0xFE8
 27500                           indf1	equ	0xFE7
 27501                           postdec1	equ	0xFE5
 27502                           plusw1	equ	0xFE3
 27503                           fsr1h	equ	0xFE2
 27504                           fsr1l	equ	0xFE1
 27505                           indf2	equ	0xFDF
 27506                           postinc2	equ	0xFDE
 27507                           postdec2	equ	0xFDD
 27508                           plusw2	equ	0xFDB
 27509                           fsr2h	equ	0xFDA
 27510                           fsr2l	equ	0xFD9
 27511                           status	equ	0xFD8
 27512                           
 27513 ;; *************** function _i2c_display_cursor *****************
 27514 ;; Defined at:
 27515 ;;		line 230 in file "i2c.c"
 27516 ;; Parameters:    Size  Location     Type
 27517 ;;  line            1    wreg     unsigned char 
 27518 ;;  position        1   13[COMRAM] unsigned char 
 27519 ;; Auto vars:     Size  Location     Type
 27520 ;;  line            1   14[COMRAM] unsigned char 
 27521 ;;  address         1   15[COMRAM] unsigned char 
 27522 ;; Return value:  Size  Location     Type
 27523 ;;                  1    wreg      void 
 27524 ;; Registers used:
 27525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27526 ;; Tracked objects:
 27527 ;;		On entry : 0/0
 27528 ;;		On exit  : 0/0
 27529 ;;		Unchanged: 0/0
 27530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27531 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27532 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27534 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27535 ;;Total ram usage:        3 bytes
 27536 ;; Hardware stack levels used:    1
 27537 ;; Hardware stack levels required when called:    3
 27538 ;; This function calls:
 27539 ;;		__ic2_display_set_address
 27540 ;;		_i2c_set_frequency
 27541 ;; This function is called by:
 27542 ;;		_display_update
 27543 ;; This function uses a non-reentrant model
 27544 ;;
 27545                           
 27546                           	psect	text133
 27547  007D7E                     __ptext133:
 27548                           	opt stack 0
 27549  007D7E                     _i2c_display_cursor:
 27550                           	opt stack 23
 27551                           
 27552                           ;incstack = 0
 27553                           ;i2c_display_cursor@line stored from wreg
 27554  007D7E  6E0F               	movwf	i2c_display_cursor@line,c
 27555                           
 27556                           ;i2c.c: 232: uint8_t address;;i2c.c: 235: line &= 0b11;
 27557  007D80  0E03               	movlw	3
 27558  007D82  160F               	andwf	i2c_display_cursor@line,f,c
 27559                           
 27560                           ;i2c.c: 236: address = line<<5;
 27561  007D84  380F               	swapf	i2c_display_cursor@line,w,c
 27562  007D86  46E8               	rlncf	wreg,f,c
 27563  007D88  0BE0               	andlw	224
 27564  007D8A  6E10               	movwf	i2c_display_cursor@address,c
 27565                           
 27566                           ;i2c.c: 237: position &= 0b11111;
 27567  007D8C  0E1F               	movlw	31
 27568  007D8E  160E               	andwf	i2c_display_cursor@position,f,c
 27569                           
 27570                           ;i2c.c: 238: address |= position;
 27571  007D90  500E               	movf	i2c_display_cursor@position,w,c
 27572  007D92  1210               	iorwf	i2c_display_cursor@address,f,c
 27573                           
 27574                           ;i2c.c: 241: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 27575  007D94  0E02               	movlw	2
 27576  007D96  EC34  F03E         	call	_i2c_set_frequency
 27577                           
 27578                           ;i2c.c: 244: _ic2_display_set_address(address);
 27579  007D9A  5010               	movf	i2c_display_cursor@address,w,c
 27580  007D9C  EC9A  F03E         	call	__ic2_display_set_address
 27581  007DA0  0012               	return		;funcret
 27582  007DA2                     __end_of_i2c_display_cursor:
 27583                           	opt stack 0
 27584                           tosu	equ	0xFFF
 27585                           tosh	equ	0xFFE
 27586                           tosl	equ	0xFFD
 27587                           pclath	equ	0xFFA
 27588                           tblptru	equ	0xFF8
 27589                           tblptrh	equ	0xFF7
 27590                           tblptrl	equ	0xFF6
 27591                           tablat	equ	0xFF5
 27592                           prodh	equ	0xFF4
 27593                           prodl	equ	0xFF3
 27594                           intcon	equ	0xFF2
 27595                           intcon2	equ	0xFF1
 27596                           intcon3	equ	0xFF0
 27597                           indf0	equ	0xFEF
 27598                           postinc0	equ	0xFEE
 27599                           fsr0h	equ	0xFEA
 27600                           fsr0l	equ	0xFE9
 27601                           wreg	equ	0xFE8
 27602                           indf1	equ	0xFE7
 27603                           postdec1	equ	0xFE5
 27604                           plusw1	equ	0xFE3
 27605                           fsr1h	equ	0xFE2
 27606                           fsr1l	equ	0xFE1
 27607                           indf2	equ	0xFDF
 27608                           postinc2	equ	0xFDE
 27609                           postdec2	equ	0xFDD
 27610                           plusw2	equ	0xFDB
 27611                           fsr2h	equ	0xFDA
 27612                           fsr2l	equ	0xFD9
 27613                           status	equ	0xFD8
 27614                           
 27615 ;; *************** function __ic2_display_set_address *****************
 27616 ;; Defined at:
 27617 ;;		line 194 in file "i2c.c"
 27618 ;; Parameters:    Size  Location     Type
 27619 ;;  address         1    wreg     unsigned char 
 27620 ;; Auto vars:     Size  Location     Type
 27621 ;;  address         1   10[COMRAM] unsigned char 
 27622 ;;  data_array      2   11[COMRAM] unsigned char [2]
 27623 ;; Return value:  Size  Location     Type
 27624 ;;                  1    wreg      void 
 27625 ;; Registers used:
 27626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27627 ;; Tracked objects:
 27628 ;;		On entry : 0/0
 27629 ;;		On exit  : 0/0
 27630 ;;		Unchanged: 0/0
 27631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27633 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27635 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27636 ;;Total ram usage:        3 bytes
 27637 ;; Hardware stack levels used:    1
 27638 ;; Hardware stack levels required when called:    2
 27639 ;; This function calls:
 27640 ;;		__i2c_write
 27641 ;;		_i2c_set_frequency
 27642 ;; This function is called by:
 27643 ;;		_i2c_display_cursor
 27644 ;; This function uses a non-reentrant model
 27645 ;;
 27646                           
 27647                           	psect	text134
 27648  007D34                     __ptext134:
 27649                           	opt stack 0
 27650  007D34                     __ic2_display_set_address:
 27651                           	opt stack 23
 27652                           
 27653                           ;incstack = 0
 27654                           ;__ic2_display_set_address@address stored from wreg
 27655  007D34  6E0B               	movwf	__ic2_display_set_address@address,c
 27656                           
 27657                           ;i2c.c: 196: uint8_t data_array[2];;i2c.c: 197: data_array[0] = 0b00000000;
 27658  007D36  0E00               	movlw	0
 27659  007D38  6E0C               	movwf	__ic2_display_set_address@data_array,c
 27660                           
 27661                           ;i2c.c: 198: data_array[1] = 0b10000000 | address;
 27662  007D3A  500B               	movf	__ic2_display_set_address@address,w,c
 27663  007D3C  0980               	iorlw	128
 27664  007D3E  6E0D               	movwf	__ic2_display_set_address@data_array+1,c
 27665                           
 27666                           ;i2c.c: 201: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 27667  007D40  0E02               	movlw	2
 27668  007D42  EC34  F03E         	call	_i2c_set_frequency
 27669                           
 27670                           ;i2c.c: 204: _i2c_write(0b01111000, &data_array[0], 2);
 27671  007D46  0E0C               	movlw	low __ic2_display_set_address@data_array
 27672  007D48  6E06               	movwf	__i2c_write@data,c
 27673  007D4A  0E00               	movlw	high __ic2_display_set_address@data_array
 27674  007D4C  6E07               	movwf	__i2c_write@data+1,c
 27675  007D4E  0E02               	movlw	2
 27676  007D50  6E08               	movwf	__i2c_write@length,c
 27677  007D52  0E78               	movlw	120
 27678  007D54  EC26  F03B         	call	__i2c_write
 27679  007D58  0012               	return		;funcret
 27680  007D5A                     __end_of__ic2_display_set_address:
 27681                           	opt stack 0
 27682                           tosu	equ	0xFFF
 27683                           tosh	equ	0xFFE
 27684                           tosl	equ	0xFFD
 27685                           pclath	equ	0xFFA
 27686                           tblptru	equ	0xFF8
 27687                           tblptrh	equ	0xFF7
 27688                           tblptrl	equ	0xFF6
 27689                           tablat	equ	0xFF5
 27690                           prodh	equ	0xFF4
 27691                           prodl	equ	0xFF3
 27692                           intcon	equ	0xFF2
 27693                           intcon2	equ	0xFF1
 27694                           intcon3	equ	0xFF0
 27695                           indf0	equ	0xFEF
 27696                           postinc0	equ	0xFEE
 27697                           fsr0h	equ	0xFEA
 27698                           fsr0l	equ	0xFE9
 27699                           wreg	equ	0xFE8
 27700                           indf1	equ	0xFE7
 27701                           postdec1	equ	0xFE5
 27702                           plusw1	equ	0xFE3
 27703                           fsr1h	equ	0xFE2
 27704                           fsr1l	equ	0xFE1
 27705                           indf2	equ	0xFDF
 27706                           postinc2	equ	0xFDE
 27707                           postdec2	equ	0xFDD
 27708                           plusw2	equ	0xFDB
 27709                           fsr2h	equ	0xFDA
 27710                           fsr2l	equ	0xFD9
 27711                           status	equ	0xFD8
 27712                           
 27713 ;; *************** function _display_prepare *****************
 27714 ;; Defined at:
 27715 ;;		line 286 in file "display.c"
 27716 ;; Parameters:    Size  Location     Type
 27717 ;;  mode            1    wreg     unsigned char 
 27718 ;; Auto vars:     Size  Location     Type
 27719 ;;  mode            1   42[COMRAM] unsigned char 
 27720 ;; Return value:  Size  Location     Type
 27721 ;;                  1    wreg      void 
 27722 ;; Registers used:
 27723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27724 ;; Tracked objects:
 27725 ;;		On entry : 0/0
 27726 ;;		On exit  : 0/0
 27727 ;;		Unchanged: 0/0
 27728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27730 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27731 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27732 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27733 ;;Total ram usage:        3 bytes
 27734 ;; Hardware stack levels used:    1
 27735 ;; Hardware stack levels required when called:    6
 27736 ;; This function calls:
 27737 ;;		__display_checked
 27738 ;;		__display_clear
 27739 ;;		__display_done
 27740 ;;		__display_failed
 27741 ;;		__display_found
 27742 ;;		__display_programming
 27743 ;;		__display_rebooting
 27744 ;;		__display_search
 27745 ;;		__display_start
 27746 ;;		__display_verify
 27747 ;; This function is called by:
 27748 ;;		_main
 27749 ;;		_reboot
 27750 ;; This function uses a non-reentrant model
 27751 ;;
 27752                           
 27753                           	psect	text135
 27754  00504E                     __ptext135:
 27755                           	opt stack 0
 27756  00504E                     _display_prepare:
 27757                           	opt stack 21
 27758                           
 27759                           ;incstack = 0
 27760                           ;display_prepare@mode stored from wreg
 27761  00504E  6E2B               	movwf	display_prepare@mode,c
 27762                           
 27763                           ;display.c: 288: _display_clear();
 27764  005050  EC02  F03B         	call	__display_clear	;wreg free
 27765                           
 27766                           ;display.c: 290: switch(mode&0xF0)
 27767  005054  D01B               	goto	l1539
 27768  005056                     
 27769                           ;display.c: 293: _display_start();
 27770  005056  ECA7  F013         	call	__display_start	;wreg free
 27771                           
 27772                           ;display.c: 294: break;
 27773  00505A  D047               	goto	l1550
 27774  00505C                     
 27775                           ;display.c: 297: _display_search();
 27776  00505C  ECF6  F01C         	call	__display_search	;wreg free
 27777                           
 27778                           ;display.c: 298: break;
 27779  005060  D044               	goto	l1550
 27780  005062                     
 27781                           ;display.c: 301: _display_found();
 27782  005062  EC96  F015         	call	__display_found	;wreg free
 27783                           
 27784                           ;display.c: 302: break;
 27785  005066  D041               	goto	l1550
 27786  005068                     
 27787                           ;display.c: 305: _display_verify();
 27788  005068  ECE3  F01E         	call	__display_verify	;wreg free
 27789                           
 27790                           ;display.c: 306: break;
 27791  00506C  D03E               	goto	l1550
 27792  00506E                     
 27793                           ;display.c: 309: _display_checked();
 27794  00506E  ECC5  F01A         	call	__display_checked	;wreg free
 27795                           
 27796                           ;display.c: 310: break;
 27797  005072  D03B               	goto	l1550
 27798  005074                     
 27799                           ;display.c: 313: _display_failed();
 27800  005074  EC9B  F007         	call	__display_failed	;wreg free
 27801                           
 27802                           ;display.c: 314: break;
 27803  005078  D038               	goto	l1550
 27804  00507A                     
 27805                           ;display.c: 317: _display_programming();
 27806  00507A  EC71  F017         	call	__display_programming	;wreg free
 27807                           
 27808                           ;display.c: 318: break;
 27809  00507E  D035               	goto	l1550
 27810  005080                     
 27811                           ;display.c: 321: _display_done();
 27812  005080  EC83  F01B         	call	__display_done	;wreg free
 27813                           
 27814                           ;display.c: 322: break;
 27815  005084  D032               	goto	l1550
 27816  005086                     
 27817                           ;display.c: 325: _display_rebooting();
 27818  005086  ECE0  F039         	call	__display_rebooting	;wreg free
 27819                           
 27820                           ;display.c: 327: }
 27821                           
 27822                           ;display.c: 326: break;
 27823  00508A  D02F               	goto	l1550
 27824  00508C                     l1539:
 27825  00508C  502B               	movf	display_prepare@mode,w,c
 27826  00508E  0BF0               	andlw	240
 27827  005090  6E29               	movwf	??_display_prepare& (0+255),c
 27828  005092  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
 27829                           
 27830                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27831                           ; Switch size 1, requested type "space"
 27832                           ; Number of cases is 1, Range of values is 0 to 0
 27833                           ; switch strategies available:
 27834                           ; Name         Instructions Cycles
 27835                           ; simple_byte            4     3 (average)
 27836                           ;	Chosen strategy is simple_byte
 27837  005094  502A               	movf	??_display_prepare+1,w,c
 27838  005096  0A00               	xorlw	0	; case 0
 27839  005098  A4D8               	btfss	status,2,c
 27840  00509A  D027               	goto	l1550
 27841                           
 27842                           ; Switch size 1, requested type "space"
 27843                           ; Number of cases is 9, Range of values is 0 to 128
 27844                           ; switch strategies available:
 27845                           ; Name         Instructions Cycles
 27846                           ; simple_byte           28    15 (average)
 27847                           ;	Chosen strategy is simple_byte
 27848  00509C  5029               	movf	??_display_prepare,w,c
 27849  00509E  0A00               	xorlw	0	; case 0
 27850  0050A0  B4D8               	btfsc	status,2,c
 27851  0050A2  D7D9               	goto	l1540
 27852  0050A4  0A10               	xorlw	16	; case 16
 27853  0050A6  B4D8               	btfsc	status,2,c
 27854  0050A8  D7D9               	goto	l1542
 27855  0050AA  0A30               	xorlw	48	; case 32
 27856  0050AC  B4D8               	btfsc	status,2,c
 27857  0050AE  D7D9               	goto	l1543
 27858  0050B0  0A10               	xorlw	16	; case 48
 27859  0050B2  B4D8               	btfsc	status,2,c
 27860  0050B4  D7D9               	goto	l1544
 27861  0050B6  0A70               	xorlw	112	; case 64
 27862  0050B8  B4D8               	btfsc	status,2,c
 27863  0050BA  D7D9               	goto	l1545
 27864  0050BC  0A10               	xorlw	16	; case 80
 27865  0050BE  B4D8               	btfsc	status,2,c
 27866  0050C0  D7D9               	goto	l1546
 27867  0050C2  0A30               	xorlw	48	; case 96
 27868  0050C4  B4D8               	btfsc	status,2,c
 27869  0050C6  D7D9               	goto	l1547
 27870  0050C8  0A10               	xorlw	16	; case 112
 27871  0050CA  B4D8               	btfsc	status,2,c
 27872  0050CC  D7D9               	goto	l1548
 27873  0050CE  0AF0               	xorlw	240	; case 128
 27874  0050D0  B4D8               	btfsc	status,2,c
 27875  0050D2  D7D9               	goto	l1549
 27876                           
 27877                           ;display.c: 330: switch((os.timeSlot>>5)&0b11)
 27878  0050D4  D00A               	goto	l1550
 27879  0050D6                     
 27880                           ;display.c: 333: display_content[0][17] = '.';
 27881  0050D6  0E2E               	movlw	46
 27882  0050D8  0101               	movlb	1	; () banked
 27883  0050DA  6F87               	movwf	(_display_content+17)& (0+255),b
 27884  0050DC                     l1552:
 27885                           
 27886                           ;display.c: 336: display_content[0][16] = '.';
 27887  0050DC  0E2E               	movlw	46
 27888  0050DE  0101               	movlb	1	; () banked
 27889  0050E0  6F86               	movwf	(_display_content+16)& (0+255),b
 27890  0050E2                     l1553:
 27891                           
 27892                           ;display.c: 339: display_content[0][15] = '.';
 27893  0050E2  0E2E               	movlw	46
 27894  0050E4  0101               	movlb	1	; () banked
 27895  0050E6  6F85               	movwf	(_display_content+15)& (0+255),b
 27896                           
 27897                           ;display.c: 341: }
 27898  0050E8  D015               	goto	l1554
 27899  0050EA                     l1550:
 27900                           
 27901                           ; BSR set to: 1
 27902  0050EA  0100               	movlb	0	; () banked
 27903  0050EC  3962               	swapf	(_os+2)& (0+255),w,b	;volatile
 27904  0050EE  42E8               	rrncf	wreg,f,c
 27905  0050F0  0B07               	andlw	7
 27906  0050F2  0B03               	andlw	3
 27907  0050F4  6E29               	movwf	??_display_prepare& (0+255),c
 27908  0050F6  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
 27909                           
 27910                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27911                           ; Switch size 1, requested type "space"
 27912                           ; Number of cases is 1, Range of values is 0 to 0
 27913                           ; switch strategies available:
 27914                           ; Name         Instructions Cycles
 27915                           ; simple_byte            4     3 (average)
 27916                           ;	Chosen strategy is simple_byte
 27917  0050F8  502A               	movf	??_display_prepare+1,w,c
 27918  0050FA  0A00               	xorlw	0	; case 0
 27919  0050FC  A4D8               	btfss	status,2,c
 27920  0050FE  D00A               	goto	l1554
 27921                           
 27922                           ; BSR set to: 0
 27923                           ; Switch size 1, requested type "space"
 27924                           ; Number of cases is 3, Range of values is 1 to 3
 27925                           ; switch strategies available:
 27926                           ; Name         Instructions Cycles
 27927                           ; simple_byte           10     6 (average)
 27928                           ;	Chosen strategy is simple_byte
 27929  005100  5029               	movf	??_display_prepare,w,c
 27930  005102  0A01               	xorlw	1	; case 1
 27931  005104  B4D8               	btfsc	status,2,c
 27932  005106  D7ED               	goto	l1553
 27933  005108  0A03               	xorlw	3	; case 2
 27934  00510A  B4D8               	btfsc	status,2,c
 27935  00510C  D7E7               	goto	l1552
 27936  00510E  0A01               	xorlw	1	; case 3
 27937  005110  B4D8               	btfsc	status,2,c
 27938  005112  D7E1               	goto	l1551
 27939  005114                     l1554:
 27940                           
 27941                           ;display.c: 345: if(INTCONbits.GIE)
 27942  005114  AEF2               	btfss	intcon,7,c	;volatile
 27943  005116  0012               	return	
 27944                           
 27945                           ;display.c: 346: {;display.c: 347: display_content[0][18] = 'I';
 27946  005118  0E49               	movlw	73
 27947  00511A  0101               	movlb	1	; () banked
 27948  00511C  6F88               	movwf	(_display_content+18)& (0+255),b
 27949  00511E  0012               	return	
 27950  005120                     __end_of_display_prepare:
 27951                           	opt stack 0
 27952                           tosu	equ	0xFFF
 27953                           tosh	equ	0xFFE
 27954                           tosl	equ	0xFFD
 27955                           pclath	equ	0xFFA
 27956                           tblptru	equ	0xFF8
 27957                           tblptrh	equ	0xFF7
 27958                           tblptrl	equ	0xFF6
 27959                           tablat	equ	0xFF5
 27960                           prodh	equ	0xFF4
 27961                           prodl	equ	0xFF3
 27962                           intcon	equ	0xFF2
 27963                           intcon2	equ	0xFF1
 27964                           intcon3	equ	0xFF0
 27965                           indf0	equ	0xFEF
 27966                           postinc0	equ	0xFEE
 27967                           fsr0h	equ	0xFEA
 27968                           fsr0l	equ	0xFE9
 27969                           wreg	equ	0xFE8
 27970                           indf1	equ	0xFE7
 27971                           postdec1	equ	0xFE5
 27972                           plusw1	equ	0xFE3
 27973                           fsr1h	equ	0xFE2
 27974                           fsr1l	equ	0xFE1
 27975                           indf2	equ	0xFDF
 27976                           postinc2	equ	0xFDE
 27977                           postdec2	equ	0xFDD
 27978                           plusw2	equ	0xFDB
 27979                           fsr2h	equ	0xFDA
 27980                           fsr2l	equ	0xFD9
 27981                           status	equ	0xFD8
 27982                           
 27983 ;; *************** function __display_verify *****************
 27984 ;; Defined at:
 27985 ;;		line 417 in file "display.c"
 27986 ;; Parameters:    Size  Location     Type
 27987 ;;		None
 27988 ;; Auto vars:     Size  Location     Type
 27989 ;;  cntr            1   32[COMRAM] unsigned char 
 27990 ;;  start           1    0        unsigned char 
 27991 ;; Return value:  Size  Location     Type
 27992 ;;                  1    wreg      void 
 27993 ;; Registers used:
 27994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27995 ;; Tracked objects:
 27996 ;;		On entry : 0/0
 27997 ;;		On exit  : 0/0
 27998 ;;		Unchanged: 0/0
 27999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28002 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28003 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28004 ;;Total ram usage:        3 bytes
 28005 ;; Hardware stack levels used:    1
 28006 ;; Hardware stack levels required when called:    4
 28007 ;; This function calls:
 28008 ;;		__display_itoa_u16
 28009 ;;		_bootloader_get_entries
 28010 ;; This function is called by:
 28011 ;;		_display_prepare
 28012 ;; This function uses a non-reentrant model
 28013 ;;
 28014                           
 28015                           	psect	text136
 28016  003DC6                     __ptext136:
 28017                           	opt stack 0
 28018  003DC6                     __display_verify:
 28019                           	opt stack 22
 28020                           
 28021                           ;display.c: 419: uint8_t cntr;;display.c: 420: uint8_t start;;display.c: 421: cntr = 0;
 28022                           
 28023                           ;incstack = 0
 28024  003DC6  0E00               	movlw	0
 28025  003DC8  6E21               	movwf	__display_verify@cntr,c
 28026                           
 28027                           ;display.c: 422: while(verify_line1[cntr])
 28028  003DCA  D017               	goto	l1607
 28029  003DCC                     
 28030                           ;display.c: 423: display_content[0][cntr] = verify_line1[cntr++];
 28031  003DCC  5021               	movf	__display_verify@cntr,w,c
 28032  003DCE  0D01               	mullw	1
 28033  003DD0  0EC4               	movlw	low _verify_line1
 28034  003DD2  24F3               	addwf	prodl,w,c
 28035  003DD4  6EF6               	movwf	tblptrl,c
 28036  003DD6  0E8D               	movlw	high _verify_line1
 28037  003DD8  20F4               	addwfc	prodh,w,c
 28038  003DDA  6EF7               	movwf	tblptrh,c
 28039  003DDC                     	if	1	;There are 3 active tblptr bytes
 28040  003DDC  6AF8               	clrf	tblptru,c
 28041  003DDE  0E00               	movlw	low (__mediumconst shr (0+16))
 28042  003DE0  22F8               	addwfc	tblptru,f,c
 28043  003DE2                     	endif
 28044  003DE2  5021               	movf	__display_verify@cntr,w,c
 28045  003DE4  0D01               	mullw	1
 28046  003DE6  0E76               	movlw	low _display_content
 28047  003DE8  24F3               	addwf	prodl,w,c
 28048  003DEA  6ED9               	movwf	fsr2l,c
 28049  003DEC  0E01               	movlw	high _display_content
 28050  003DEE  20F4               	addwfc	prodh,w,c
 28051  003DF0  6EDA               	movwf	fsr2h,c
 28052  003DF2  0008               	tblrd		*
 28053  003DF4  CFF5 FFDF          	movff	tablat,indf2
 28054  003DF8  2A21               	incf	__display_verify@cntr,f,c
 28055  003DFA                     l1607:
 28056  003DFA  5021               	movf	__display_verify@cntr,w,c
 28057  003DFC  0D01               	mullw	1
 28058  003DFE  0EC4               	movlw	low _verify_line1
 28059  003E00  24F3               	addwf	prodl,w,c
 28060  003E02  6EF6               	movwf	tblptrl,c
 28061  003E04  0E8D               	movlw	high _verify_line1
 28062  003E06  20F4               	addwfc	prodh,w,c
 28063  003E08  6EF7               	movwf	tblptrh,c
 28064  003E0A                     	if	1	;There are 3 active tblptr bytes
 28065  003E0A  6AF8               	clrf	tblptru,c
 28066  003E0C  0E00               	movlw	low (__mediumconst shr (0+16))
 28067  003E0E  22F8               	addwfc	tblptru,f,c
 28068  003E10                     	endif
 28069  003E10  0008               	tblrd		*
 28070  003E12  50F5               	movf	tablat,w,c
 28071  003E14  0900               	iorlw	0
 28072  003E16  A4D8               	btfss	status,2,c
 28073  003E18  D7D9               	goto	l1608
 28074                           
 28075                           ;display.c: 424: cntr = 0;
 28076  003E1A  0E00               	movlw	0
 28077  003E1C  6E21               	movwf	__display_verify@cntr,c
 28078                           
 28079                           ;display.c: 425: while(verify_line2[cntr])
 28080  003E1E  D017               	goto	l1610
 28081  003E20                     
 28082                           ;display.c: 426: display_content[1][cntr] = verify_line2[cntr++];
 28083  003E20  5021               	movf	__display_verify@cntr,w,c
 28084  003E22  0D01               	mullw	1
 28085  003E24  0E4C               	movlw	low _verify_line2
 28086  003E26  24F3               	addwf	prodl,w,c
 28087  003E28  6EF6               	movwf	tblptrl,c
 28088  003E2A  0E8E               	movlw	high _verify_line2
 28089  003E2C  20F4               	addwfc	prodh,w,c
 28090  003E2E  6EF7               	movwf	tblptrh,c
 28091  003E30                     	if	1	;There are 3 active tblptr bytes
 28092  003E30  6AF8               	clrf	tblptru,c
 28093  003E32  0E00               	movlw	low (__mediumconst shr (0+16))
 28094  003E34  22F8               	addwfc	tblptru,f,c
 28095  003E36                     	endif
 28096  003E36  5021               	movf	__display_verify@cntr,w,c
 28097  003E38  0D01               	mullw	1
 28098  003E3A  0E8A               	movlw	low (_display_content+20)
 28099  003E3C  24F3               	addwf	prodl,w,c
 28100  003E3E  6ED9               	movwf	fsr2l,c
 28101  003E40  0E01               	movlw	high (_display_content+20)
 28102  003E42  20F4               	addwfc	prodh,w,c
 28103  003E44  6EDA               	movwf	fsr2h,c
 28104  003E46  0008               	tblrd		*
 28105  003E48  CFF5 FFDF          	movff	tablat,indf2
 28106  003E4C  2A21               	incf	__display_verify@cntr,f,c
 28107  003E4E                     l1610:
 28108  003E4E  5021               	movf	__display_verify@cntr,w,c
 28109  003E50  0D01               	mullw	1
 28110  003E52  0E4C               	movlw	low _verify_line2
 28111  003E54  24F3               	addwf	prodl,w,c
 28112  003E56  6EF6               	movwf	tblptrl,c
 28113  003E58  0E8E               	movlw	high _verify_line2
 28114  003E5A  20F4               	addwfc	prodh,w,c
 28115  003E5C  6EF7               	movwf	tblptrh,c
 28116  003E5E                     	if	1	;There are 3 active tblptr bytes
 28117  003E5E  6AF8               	clrf	tblptru,c
 28118  003E60  0E00               	movlw	low (__mediumconst shr (0+16))
 28119  003E62  22F8               	addwfc	tblptru,f,c
 28120  003E64                     	endif
 28121  003E64  0008               	tblrd		*
 28122  003E66  50F5               	movf	tablat,w,c
 28123  003E68  0900               	iorlw	0
 28124  003E6A  A4D8               	btfss	status,2,c
 28125  003E6C  D7D9               	goto	l1611
 28126                           
 28127                           ;display.c: 427: cntr = 0;
 28128  003E6E  0E00               	movlw	0
 28129  003E70  6E21               	movwf	__display_verify@cntr,c
 28130                           
 28131                           ;display.c: 428: while(verify_line3[cntr])
 28132  003E72  D017               	goto	l1613
 28133  003E74                     
 28134                           ;display.c: 429: display_content[2][cntr] = verify_line3[cntr++];
 28135  003E74  5021               	movf	__display_verify@cntr,w,c
 28136  003E76  0D01               	mullw	1
 28137  003E78  0E8A               	movlw	low _verify_line3
 28138  003E7A  24F3               	addwf	prodl,w,c
 28139  003E7C  6EF6               	movwf	tblptrl,c
 28140  003E7E  0E8E               	movlw	high _verify_line3
 28141  003E80  20F4               	addwfc	prodh,w,c
 28142  003E82  6EF7               	movwf	tblptrh,c
 28143  003E84                     	if	1	;There are 3 active tblptr bytes
 28144  003E84  6AF8               	clrf	tblptru,c
 28145  003E86  0E00               	movlw	low (__mediumconst shr (0+16))
 28146  003E88  22F8               	addwfc	tblptru,f,c
 28147  003E8A                     	endif
 28148  003E8A  5021               	movf	__display_verify@cntr,w,c
 28149  003E8C  0D01               	mullw	1
 28150  003E8E  0E9E               	movlw	low (_display_content+40)
 28151  003E90  24F3               	addwf	prodl,w,c
 28152  003E92  6ED9               	movwf	fsr2l,c
 28153  003E94  0E01               	movlw	high (_display_content+40)
 28154  003E96  20F4               	addwfc	prodh,w,c
 28155  003E98  6EDA               	movwf	fsr2h,c
 28156  003E9A  0008               	tblrd		*
 28157  003E9C  CFF5 FFDF          	movff	tablat,indf2
 28158  003EA0  2A21               	incf	__display_verify@cntr,f,c
 28159  003EA2                     l1613:
 28160  003EA2  5021               	movf	__display_verify@cntr,w,c
 28161  003EA4  0D01               	mullw	1
 28162  003EA6  0E8A               	movlw	low _verify_line3
 28163  003EA8  24F3               	addwf	prodl,w,c
 28164  003EAA  6EF6               	movwf	tblptrl,c
 28165  003EAC  0E8E               	movlw	high _verify_line3
 28166  003EAE  20F4               	addwfc	prodh,w,c
 28167  003EB0  6EF7               	movwf	tblptrh,c
 28168  003EB2                     	if	1	;There are 3 active tblptr bytes
 28169  003EB2  6AF8               	clrf	tblptru,c
 28170  003EB4  0E00               	movlw	low (__mediumconst shr (0+16))
 28171  003EB6  22F8               	addwfc	tblptru,f,c
 28172  003EB8                     	endif
 28173  003EB8  0008               	tblrd		*
 28174  003EBA  50F5               	movf	tablat,w,c
 28175  003EBC  0900               	iorlw	0
 28176  003EBE  A4D8               	btfss	status,2,c
 28177  003EC0  D7D9               	goto	l1614
 28178                           
 28179                           ;display.c: 430: _display_itoa_u16(bootloader_get_entries(), &display_content[2][cntr+1]
      +                          );
 28180  003EC2  EC39  F040         	call	_bootloader_get_entries	;wreg free
 28181  003EC6  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 28182  003ECA  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 28183  003ECE  6A1B               	clrf	__display_itoa_u16@value+2,c
 28184  003ED0  6A1C               	clrf	__display_itoa_u16@value+3,c
 28185  003ED2  5021               	movf	__display_verify@cntr,w,c
 28186  003ED4  6E1F               	movwf	??__display_verify& (0+255),c
 28187  003ED6  6A20               	clrf	(??__display_verify+1)& (0+255),c
 28188  003ED8  0E01               	movlw	1
 28189  003EDA  261F               	addwf	??__display_verify,f,c
 28190  003EDC  0E00               	movlw	0
 28191  003EDE  2220               	addwfc	??__display_verify+1,f,c
 28192  003EE0  0E9E               	movlw	low (_display_content+40)
 28193  003EE2  241F               	addwf	??__display_verify,w,c
 28194  003EE4  6E1D               	movwf	__display_itoa_u16@text,c
 28195  003EE6  0E01               	movlw	high (_display_content+40)
 28196  003EE8  2020               	addwfc	??__display_verify+1,w,c
 28197  003EEA  6E1E               	movwf	__display_itoa_u16@text+1,c
 28198  003EEC  EC23  F02A         	call	__display_itoa_u16	;wreg free
 28199  003EF0  0012               	return		;funcret
 28200  003EF2                     __end_of__display_verify:
 28201                           	opt stack 0
 28202                           tosu	equ	0xFFF
 28203                           tosh	equ	0xFFE
 28204                           tosl	equ	0xFFD
 28205                           pclath	equ	0xFFA
 28206                           tblptru	equ	0xFF8
 28207                           tblptrh	equ	0xFF7
 28208                           tblptrl	equ	0xFF6
 28209                           tablat	equ	0xFF5
 28210                           prodh	equ	0xFF4
 28211                           prodl	equ	0xFF3
 28212                           intcon	equ	0xFF2
 28213                           intcon2	equ	0xFF1
 28214                           intcon3	equ	0xFF0
 28215                           indf0	equ	0xFEF
 28216                           postinc0	equ	0xFEE
 28217                           fsr0h	equ	0xFEA
 28218                           fsr0l	equ	0xFE9
 28219                           wreg	equ	0xFE8
 28220                           indf1	equ	0xFE7
 28221                           postdec1	equ	0xFE5
 28222                           plusw1	equ	0xFE3
 28223                           fsr1h	equ	0xFE2
 28224                           fsr1l	equ	0xFE1
 28225                           indf2	equ	0xFDF
 28226                           postinc2	equ	0xFDE
 28227                           postdec2	equ	0xFDD
 28228                           plusw2	equ	0xFDB
 28229                           fsr2h	equ	0xFDA
 28230                           fsr2l	equ	0xFD9
 28231                           status	equ	0xFD8
 28232                           
 28233 ;; *************** function __display_start *****************
 28234 ;; Defined at:
 28235 ;;		line 351 in file "display.c"
 28236 ;; Parameters:    Size  Location     Type
 28237 ;;		None
 28238 ;; Auto vars:     Size  Location     Type
 28239 ;;  cntr            1   36[COMRAM] unsigned char 
 28240 ;; Return value:  Size  Location     Type
 28241 ;;                  1    wreg      void 
 28242 ;; Registers used:
 28243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28244 ;; Tracked objects:
 28245 ;;		On entry : 0/0
 28246 ;;		On exit  : 0/0
 28247 ;;		Unchanged: 0/0
 28248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28250 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28252 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28253 ;;Total ram usage:        1 bytes
 28254 ;; Hardware stack levels used:    1
 28255 ;; Hardware stack levels required when called:    5
 28256 ;; This function calls:
 28257 ;;		__display_itoa_u32
 28258 ;; This function is called by:
 28259 ;;		_display_prepare
 28260 ;; This function uses a non-reentrant model
 28261 ;;
 28262                           
 28263                           	psect	text137
 28264  00274E                     __ptext137:
 28265                           	opt stack 0
 28266  00274E                     __display_start:
 28267                           	opt stack 21
 28268                           
 28269                           ;display.c: 353: uint8_t cntr;;display.c: 354: cntr = 0;
 28270                           
 28271                           ;incstack = 0
 28272  00274E  0E00               	movlw	0
 28273  002750  6E25               	movwf	__display_start@cntr,c
 28274                           
 28275                           ;display.c: 355: while(start_line1[cntr])
 28276  002752  D017               	goto	l1559
 28277  002754                     
 28278                           ;display.c: 356: display_content[0][cntr] = start_line1[cntr++];
 28279  002754  5025               	movf	__display_start@cntr,w,c
 28280  002756  0D01               	mullw	1
 28281  002758  0EF4               	movlw	low _start_line1
 28282  00275A  24F3               	addwf	prodl,w,c
 28283  00275C  6EF6               	movwf	tblptrl,c
 28284  00275E  0E8D               	movlw	high _start_line1
 28285  002760  20F4               	addwfc	prodh,w,c
 28286  002762  6EF7               	movwf	tblptrh,c
 28287  002764                     	if	1	;There are 3 active tblptr bytes
 28288  002764  6AF8               	clrf	tblptru,c
 28289  002766  0E00               	movlw	low (__mediumconst shr (0+16))
 28290  002768  22F8               	addwfc	tblptru,f,c
 28291  00276A                     	endif
 28292  00276A  5025               	movf	__display_start@cntr,w,c
 28293  00276C  0D01               	mullw	1
 28294  00276E  0E76               	movlw	low _display_content
 28295  002770  24F3               	addwf	prodl,w,c
 28296  002772  6ED9               	movwf	fsr2l,c
 28297  002774  0E01               	movlw	high _display_content
 28298  002776  20F4               	addwfc	prodh,w,c
 28299  002778  6EDA               	movwf	fsr2h,c
 28300  00277A  0008               	tblrd		*
 28301  00277C  CFF5 FFDF          	movff	tablat,indf2
 28302  002780  2A25               	incf	__display_start@cntr,f,c
 28303  002782                     l1559:
 28304  002782  5025               	movf	__display_start@cntr,w,c
 28305  002784  0D01               	mullw	1
 28306  002786  0EF4               	movlw	low _start_line1
 28307  002788  24F3               	addwf	prodl,w,c
 28308  00278A  6EF6               	movwf	tblptrl,c
 28309  00278C  0E8D               	movlw	high _start_line1
 28310  00278E  20F4               	addwfc	prodh,w,c
 28311  002790  6EF7               	movwf	tblptrh,c
 28312  002792                     	if	1	;There are 3 active tblptr bytes
 28313  002792  6AF8               	clrf	tblptru,c
 28314  002794  0E00               	movlw	low (__mediumconst shr (0+16))
 28315  002796  22F8               	addwfc	tblptru,f,c
 28316  002798                     	endif
 28317  002798  0008               	tblrd		*
 28318  00279A  50F5               	movf	tablat,w,c
 28319  00279C  0900               	iorlw	0
 28320  00279E  A4D8               	btfss	status,2,c
 28321  0027A0  D7D9               	goto	l1560
 28322                           
 28323                           ;display.c: 357: cntr = 0;
 28324  0027A2  0E00               	movlw	0
 28325  0027A4  6E25               	movwf	__display_start@cntr,c
 28326                           
 28327                           ;display.c: 358: while(start_line2[cntr])
 28328  0027A6  D017               	goto	l1562
 28329  0027A8                     
 28330                           ;display.c: 359: display_content[1][cntr] = start_line2[cntr++];
 28331  0027A8  5025               	movf	__display_start@cntr,w,c
 28332  0027AA  0D01               	mullw	1
 28333  0027AC  0E62               	movlw	low _start_line2
 28334  0027AE  24F3               	addwf	prodl,w,c
 28335  0027B0  6EF6               	movwf	tblptrl,c
 28336  0027B2  0E8E               	movlw	high _start_line2
 28337  0027B4  20F4               	addwfc	prodh,w,c
 28338  0027B6  6EF7               	movwf	tblptrh,c
 28339  0027B8                     	if	1	;There are 3 active tblptr bytes
 28340  0027B8  6AF8               	clrf	tblptru,c
 28341  0027BA  0E00               	movlw	low (__mediumconst shr (0+16))
 28342  0027BC  22F8               	addwfc	tblptru,f,c
 28343  0027BE                     	endif
 28344  0027BE  5025               	movf	__display_start@cntr,w,c
 28345  0027C0  0D01               	mullw	1
 28346  0027C2  0E8A               	movlw	low (_display_content+20)
 28347  0027C4  24F3               	addwf	prodl,w,c
 28348  0027C6  6ED9               	movwf	fsr2l,c
 28349  0027C8  0E01               	movlw	high (_display_content+20)
 28350  0027CA  20F4               	addwfc	prodh,w,c
 28351  0027CC  6EDA               	movwf	fsr2h,c
 28352  0027CE  0008               	tblrd		*
 28353  0027D0  CFF5 FFDF          	movff	tablat,indf2
 28354  0027D4  2A25               	incf	__display_start@cntr,f,c
 28355  0027D6                     l1562:
 28356  0027D6  5025               	movf	__display_start@cntr,w,c
 28357  0027D8  0D01               	mullw	1
 28358  0027DA  0E62               	movlw	low _start_line2
 28359  0027DC  24F3               	addwf	prodl,w,c
 28360  0027DE  6EF6               	movwf	tblptrl,c
 28361  0027E0  0E8E               	movlw	high _start_line2
 28362  0027E2  20F4               	addwfc	prodh,w,c
 28363  0027E4  6EF7               	movwf	tblptrh,c
 28364  0027E6                     	if	1	;There are 3 active tblptr bytes
 28365  0027E6  6AF8               	clrf	tblptru,c
 28366  0027E8  0E00               	movlw	low (__mediumconst shr (0+16))
 28367  0027EA  22F8               	addwfc	tblptru,f,c
 28368  0027EC                     	endif
 28369  0027EC  0008               	tblrd		*
 28370  0027EE  50F5               	movf	tablat,w,c
 28371  0027F0  0900               	iorlw	0
 28372  0027F2  A4D8               	btfss	status,2,c
 28373  0027F4  D7D9               	goto	l1563
 28374                           
 28375                           ;display.c: 360: cntr += _display_itoa_u32(0x00, &display_content[1][cntr]);
 28376  0027F6  0E00               	movlw	0
 28377  0027F8  6E1F               	movwf	__display_itoa_u32@value,c
 28378  0027FA  0E00               	movlw	0
 28379  0027FC  6E20               	movwf	__display_itoa_u32@value+1,c
 28380  0027FE  0E00               	movlw	0
 28381  002800  6E21               	movwf	__display_itoa_u32@value+2,c
 28382  002802  0E00               	movlw	0
 28383  002804  6E22               	movwf	__display_itoa_u32@value+3,c
 28384  002806  5025               	movf	__display_start@cntr,w,c
 28385  002808  0D01               	mullw	1
 28386  00280A  0E8A               	movlw	low (_display_content+20)
 28387  00280C  24F3               	addwf	prodl,w,c
 28388  00280E  6E23               	movwf	__display_itoa_u32@text,c
 28389  002810  0E01               	movlw	high (_display_content+20)
 28390  002812  20F4               	addwfc	prodh,w,c
 28391  002814  6E24               	movwf	__display_itoa_u32@text+1,c
 28392  002816  ECE4  F005         	call	__display_itoa_u32	;wreg free
 28393  00281A  2625               	addwf	__display_start@cntr,f,c
 28394                           
 28395                           ;display.c: 361: display_content[1][cntr++] = '.';
 28396  00281C  5025               	movf	__display_start@cntr,w,c
 28397  00281E  0D01               	mullw	1
 28398  002820  0E8A               	movlw	low (_display_content+20)
 28399  002822  24F3               	addwf	prodl,w,c
 28400  002824  6ED9               	movwf	fsr2l,c
 28401  002826  0E01               	movlw	high (_display_content+20)
 28402  002828  20F4               	addwfc	prodh,w,c
 28403  00282A  6EDA               	movwf	fsr2h,c
 28404  00282C  0E2E               	movlw	46
 28405  00282E  6EDF               	movwf	indf2,c
 28406  002830  2A25               	incf	__display_start@cntr,f,c
 28407                           
 28408                           ;display.c: 362: cntr += _display_itoa_u32(0x01, &display_content[1][cntr]);
 28409  002832  0E01               	movlw	1
 28410  002834  6E1F               	movwf	__display_itoa_u32@value,c
 28411  002836  0E00               	movlw	0
 28412  002838  6E20               	movwf	__display_itoa_u32@value+1,c
 28413  00283A  0E00               	movlw	0
 28414  00283C  6E21               	movwf	__display_itoa_u32@value+2,c
 28415  00283E  0E00               	movlw	0
 28416  002840  6E22               	movwf	__display_itoa_u32@value+3,c
 28417  002842  5025               	movf	__display_start@cntr,w,c
 28418  002844  0D01               	mullw	1
 28419  002846  0E8A               	movlw	low (_display_content+20)
 28420  002848  24F3               	addwf	prodl,w,c
 28421  00284A  6E23               	movwf	__display_itoa_u32@text,c
 28422  00284C  0E01               	movlw	high (_display_content+20)
 28423  00284E  20F4               	addwfc	prodh,w,c
 28424  002850  6E24               	movwf	__display_itoa_u32@text+1,c
 28425  002852  ECE4  F005         	call	__display_itoa_u32	;wreg free
 28426  002856  2625               	addwf	__display_start@cntr,f,c
 28427                           
 28428                           ;display.c: 363: display_content[1][cntr++] = '.';
 28429  002858  5025               	movf	__display_start@cntr,w,c
 28430  00285A  0D01               	mullw	1
 28431  00285C  0E8A               	movlw	low (_display_content+20)
 28432  00285E  24F3               	addwf	prodl,w,c
 28433  002860  6ED9               	movwf	fsr2l,c
 28434  002862  0E01               	movlw	high (_display_content+20)
 28435  002864  20F4               	addwfc	prodh,w,c
 28436  002866  6EDA               	movwf	fsr2h,c
 28437  002868  0E2E               	movlw	46
 28438  00286A  6EDF               	movwf	indf2,c
 28439  00286C  2A25               	incf	__display_start@cntr,f,c
 28440                           
 28441                           ;display.c: 364: cntr += _display_itoa_u32(0x00, &display_content[1][cntr]);
 28442  00286E  0E00               	movlw	0
 28443  002870  6E1F               	movwf	__display_itoa_u32@value,c
 28444  002872  0E00               	movlw	0
 28445  002874  6E20               	movwf	__display_itoa_u32@value+1,c
 28446  002876  0E00               	movlw	0
 28447  002878  6E21               	movwf	__display_itoa_u32@value+2,c
 28448  00287A  0E00               	movlw	0
 28449  00287C  6E22               	movwf	__display_itoa_u32@value+3,c
 28450  00287E  5025               	movf	__display_start@cntr,w,c
 28451  002880  0D01               	mullw	1
 28452  002882  0E8A               	movlw	low (_display_content+20)
 28453  002884  24F3               	addwf	prodl,w,c
 28454  002886  6E23               	movwf	__display_itoa_u32@text,c
 28455  002888  0E01               	movlw	high (_display_content+20)
 28456  00288A  20F4               	addwfc	prodh,w,c
 28457  00288C  6E24               	movwf	__display_itoa_u32@text+1,c
 28458  00288E  ECE4  F005         	call	__display_itoa_u32	;wreg free
 28459  002892  2625               	addwf	__display_start@cntr,f,c
 28460                           
 28461                           ;display.c: 365: cntr = 0;
 28462  002894  0E00               	movlw	0
 28463  002896  6E25               	movwf	__display_start@cntr,c
 28464                           
 28465                           ;display.c: 366: while(start_line3[cntr])
 28466  002898  D017               	goto	l1565
 28467  00289A                     
 28468                           ;display.c: 367: display_content[2][cntr] = start_line3[cntr++];
 28469  00289A  5025               	movf	__display_start@cntr,w,c
 28470  00289C  0D01               	mullw	1
 28471  00289E  0EA7               	movlw	low _start_line3
 28472  0028A0  24F3               	addwf	prodl,w,c
 28473  0028A2  6EF6               	movwf	tblptrl,c
 28474  0028A4  0E8E               	movlw	high _start_line3
 28475  0028A6  20F4               	addwfc	prodh,w,c
 28476  0028A8  6EF7               	movwf	tblptrh,c
 28477  0028AA                     	if	1	;There are 3 active tblptr bytes
 28478  0028AA  6AF8               	clrf	tblptru,c
 28479  0028AC  0E00               	movlw	low (__mediumconst shr (0+16))
 28480  0028AE  22F8               	addwfc	tblptru,f,c
 28481  0028B0                     	endif
 28482  0028B0  5025               	movf	__display_start@cntr,w,c
 28483  0028B2  0D01               	mullw	1
 28484  0028B4  0E9E               	movlw	low (_display_content+40)
 28485  0028B6  24F3               	addwf	prodl,w,c
 28486  0028B8  6ED9               	movwf	fsr2l,c
 28487  0028BA  0E01               	movlw	high (_display_content+40)
 28488  0028BC  20F4               	addwfc	prodh,w,c
 28489  0028BE  6EDA               	movwf	fsr2h,c
 28490  0028C0  0008               	tblrd		*
 28491  0028C2  CFF5 FFDF          	movff	tablat,indf2
 28492  0028C6  2A25               	incf	__display_start@cntr,f,c
 28493  0028C8                     l1565:
 28494  0028C8  5025               	movf	__display_start@cntr,w,c
 28495  0028CA  0D01               	mullw	1
 28496  0028CC  0EA7               	movlw	low _start_line3
 28497  0028CE  24F3               	addwf	prodl,w,c
 28498  0028D0  6EF6               	movwf	tblptrl,c
 28499  0028D2  0E8E               	movlw	high _start_line3
 28500  0028D4  20F4               	addwfc	prodh,w,c
 28501  0028D6  6EF7               	movwf	tblptrh,c
 28502  0028D8                     	if	1	;There are 3 active tblptr bytes
 28503  0028D8  6AF8               	clrf	tblptru,c
 28504  0028DA  0E00               	movlw	low (__mediumconst shr (0+16))
 28505  0028DC  22F8               	addwfc	tblptru,f,c
 28506  0028DE                     	endif
 28507  0028DE  0008               	tblrd		*
 28508  0028E0  50F5               	movf	tablat,w,c
 28509  0028E2  0900               	iorlw	0
 28510  0028E4  A4D8               	btfss	status,2,c
 28511  0028E6  D7D9               	goto	l1566
 28512                           
 28513                           ;display.c: 368: cntr = 0;
 28514  0028E8  0E00               	movlw	0
 28515  0028EA  6E25               	movwf	__display_start@cntr,c
 28516                           
 28517                           ;display.c: 369: while(start_line4[cntr])
 28518  0028EC  D017               	goto	l1568
 28519  0028EE                     
 28520                           ;display.c: 370: display_content[3][cntr] = start_line4[cntr++];
 28521  0028EE  5025               	movf	__display_start@cntr,w,c
 28522  0028F0  0D01               	mullw	1
 28523  0028F2  0E22               	movlw	low _start_line4
 28524  0028F4  24F3               	addwf	prodl,w,c
 28525  0028F6  6EF6               	movwf	tblptrl,c
 28526  0028F8  0E8E               	movlw	high _start_line4
 28527  0028FA  20F4               	addwfc	prodh,w,c
 28528  0028FC  6EF7               	movwf	tblptrh,c
 28529  0028FE                     	if	1	;There are 3 active tblptr bytes
 28530  0028FE  6AF8               	clrf	tblptru,c
 28531  002900  0E00               	movlw	low (__mediumconst shr (0+16))
 28532  002902  22F8               	addwfc	tblptru,f,c
 28533  002904                     	endif
 28534  002904  5025               	movf	__display_start@cntr,w,c
 28535  002906  0D01               	mullw	1
 28536  002908  0EB2               	movlw	low (_display_content+60)
 28537  00290A  24F3               	addwf	prodl,w,c
 28538  00290C  6ED9               	movwf	fsr2l,c
 28539  00290E  0E01               	movlw	high (_display_content+60)
 28540  002910  20F4               	addwfc	prodh,w,c
 28541  002912  6EDA               	movwf	fsr2h,c
 28542  002914  0008               	tblrd		*
 28543  002916  CFF5 FFDF          	movff	tablat,indf2
 28544  00291A  2A25               	incf	__display_start@cntr,f,c
 28545  00291C                     l1568:
 28546  00291C  5025               	movf	__display_start@cntr,w,c
 28547  00291E  0D01               	mullw	1
 28548  002920  0E22               	movlw	low _start_line4
 28549  002922  24F3               	addwf	prodl,w,c
 28550  002924  6EF6               	movwf	tblptrl,c
 28551  002926  0E8E               	movlw	high _start_line4
 28552  002928  20F4               	addwfc	prodh,w,c
 28553  00292A  6EF7               	movwf	tblptrh,c
 28554  00292C                     	if	1	;There are 3 active tblptr bytes
 28555  00292C  6AF8               	clrf	tblptru,c
 28556  00292E  0E00               	movlw	low (__mediumconst shr (0+16))
 28557  002930  22F8               	addwfc	tblptru,f,c
 28558  002932                     	endif
 28559  002932  0008               	tblrd		*
 28560  002934  50F5               	movf	tablat,w,c
 28561  002936  0900               	iorlw	0
 28562  002938  B4D8               	btfsc	status,2,c
 28563  00293A  0012               	return	
 28564  00293C  D7D8               	goto	l1569
 28565  00293E                     __end_of__display_start:
 28566                           	opt stack 0
 28567                           tosu	equ	0xFFF
 28568                           tosh	equ	0xFFE
 28569                           tosl	equ	0xFFD
 28570                           pclath	equ	0xFFA
 28571                           tblptru	equ	0xFF8
 28572                           tblptrh	equ	0xFF7
 28573                           tblptrl	equ	0xFF6
 28574                           tablat	equ	0xFF5
 28575                           prodh	equ	0xFF4
 28576                           prodl	equ	0xFF3
 28577                           intcon	equ	0xFF2
 28578                           intcon2	equ	0xFF1
 28579                           intcon3	equ	0xFF0
 28580                           indf0	equ	0xFEF
 28581                           postinc0	equ	0xFEE
 28582                           fsr0h	equ	0xFEA
 28583                           fsr0l	equ	0xFE9
 28584                           wreg	equ	0xFE8
 28585                           indf1	equ	0xFE7
 28586                           postdec1	equ	0xFE5
 28587                           plusw1	equ	0xFE3
 28588                           fsr1h	equ	0xFE2
 28589                           fsr1l	equ	0xFE1
 28590                           indf2	equ	0xFDF
 28591                           postinc2	equ	0xFDE
 28592                           postdec2	equ	0xFDD
 28593                           plusw2	equ	0xFDB
 28594                           fsr2h	equ	0xFDA
 28595                           fsr2l	equ	0xFD9
 28596                           status	equ	0xFD8
 28597                           
 28598 ;; *************** function __display_search *****************
 28599 ;; Defined at:
 28600 ;;		line 373 in file "display.c"
 28601 ;; Parameters:    Size  Location     Type
 28602 ;;		None
 28603 ;; Auto vars:     Size  Location     Type
 28604 ;;  cntr            1    0[COMRAM] unsigned char 
 28605 ;; Return value:  Size  Location     Type
 28606 ;;                  1    wreg      void 
 28607 ;; Registers used:
 28608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 28609 ;; Tracked objects:
 28610 ;;		On entry : 0/0
 28611 ;;		On exit  : 0/0
 28612 ;;		Unchanged: 0/0
 28613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28615 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28617 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28618 ;;Total ram usage:        1 bytes
 28619 ;; Hardware stack levels used:    1
 28620 ;; This function calls:
 28621 ;;		Nothing
 28622 ;; This function is called by:
 28623 ;;		_display_prepare
 28624 ;; This function uses a non-reentrant model
 28625 ;;
 28626                           
 28627                           	psect	text138
 28628  0039EC                     __ptext138:
 28629                           	opt stack 0
 28630  0039EC                     __display_search:
 28631                           	opt stack 26
 28632                           
 28633                           ;display.c: 375: uint8_t cntr;;display.c: 376: cntr = 0;
 28634                           
 28635                           ;incstack = 0
 28636  0039EC  0E00               	movlw	0
 28637  0039EE  6E01               	movwf	__display_search@cntr,c
 28638                           
 28639                           ;display.c: 377: while(search_line1[cntr])
 28640  0039F0  D017               	goto	l1574
 28641  0039F2                     
 28642                           ;display.c: 378: display_content[0][cntr] = search_line1[cntr++];
 28643  0039F2  5001               	movf	__display_search@cntr,w,c
 28644  0039F4  0D01               	mullw	1
 28645  0039F6  0EE4               	movlw	low _search_line1
 28646  0039F8  24F3               	addwf	prodl,w,c
 28647  0039FA  6EF6               	movwf	tblptrl,c
 28648  0039FC  0E8D               	movlw	high _search_line1
 28649  0039FE  20F4               	addwfc	prodh,w,c
 28650  003A00  6EF7               	movwf	tblptrh,c
 28651  003A02                     	if	1	;There are 3 active tblptr bytes
 28652  003A02  6AF8               	clrf	tblptru,c
 28653  003A04  0E00               	movlw	low (__mediumconst shr (0+16))
 28654  003A06  22F8               	addwfc	tblptru,f,c
 28655  003A08                     	endif
 28656  003A08  5001               	movf	__display_search@cntr,w,c
 28657  003A0A  0D01               	mullw	1
 28658  003A0C  0E76               	movlw	low _display_content
 28659  003A0E  24F3               	addwf	prodl,w,c
 28660  003A10  6ED9               	movwf	fsr2l,c
 28661  003A12  0E01               	movlw	high _display_content
 28662  003A14  20F4               	addwfc	prodh,w,c
 28663  003A16  6EDA               	movwf	fsr2h,c
 28664  003A18  0008               	tblrd		*
 28665  003A1A  CFF5 FFDF          	movff	tablat,indf2
 28666  003A1E  2A01               	incf	__display_search@cntr,f,c
 28667  003A20                     l1574:
 28668  003A20  5001               	movf	__display_search@cntr,w,c
 28669  003A22  0D01               	mullw	1
 28670  003A24  0EE4               	movlw	low _search_line1
 28671  003A26  24F3               	addwf	prodl,w,c
 28672  003A28  6EF6               	movwf	tblptrl,c
 28673  003A2A  0E8D               	movlw	high _search_line1
 28674  003A2C  20F4               	addwfc	prodh,w,c
 28675  003A2E  6EF7               	movwf	tblptrh,c
 28676  003A30                     	if	1	;There are 3 active tblptr bytes
 28677  003A30  6AF8               	clrf	tblptru,c
 28678  003A32  0E00               	movlw	low (__mediumconst shr (0+16))
 28679  003A34  22F8               	addwfc	tblptru,f,c
 28680  003A36                     	endif
 28681  003A36  0008               	tblrd		*
 28682  003A38  50F5               	movf	tablat,w,c
 28683  003A3A  0900               	iorlw	0
 28684  003A3C  A4D8               	btfss	status,2,c
 28685  003A3E  D7D9               	goto	l1575
 28686                           
 28687                           ;display.c: 379: cntr = 0;
 28688  003A40  0E00               	movlw	0
 28689  003A42  6E01               	movwf	__display_search@cntr,c
 28690                           
 28691                           ;display.c: 380: while(search_line2[cntr])
 28692  003A44  D017               	goto	l1577
 28693  003A46                     
 28694                           ;display.c: 381: display_content[1][cntr] = search_line2[cntr++];
 28695  003A46  5001               	movf	__display_search@cntr,w,c
 28696  003A48  0D01               	mullw	1
 28697  003A4A  0E43               	movlw	low _search_line2
 28698  003A4C  24F3               	addwf	prodl,w,c
 28699  003A4E  6EF6               	movwf	tblptrl,c
 28700  003A50  0E8D               	movlw	high _search_line2
 28701  003A52  20F4               	addwfc	prodh,w,c
 28702  003A54  6EF7               	movwf	tblptrh,c
 28703  003A56                     	if	1	;There are 3 active tblptr bytes
 28704  003A56  6AF8               	clrf	tblptru,c
 28705  003A58  0E00               	movlw	low (__mediumconst shr (0+16))
 28706  003A5A  22F8               	addwfc	tblptru,f,c
 28707  003A5C                     	endif
 28708  003A5C  5001               	movf	__display_search@cntr,w,c
 28709  003A5E  0D01               	mullw	1
 28710  003A60  0E8A               	movlw	low (_display_content+20)
 28711  003A62  24F3               	addwf	prodl,w,c
 28712  003A64  6ED9               	movwf	fsr2l,c
 28713  003A66  0E01               	movlw	high (_display_content+20)
 28714  003A68  20F4               	addwfc	prodh,w,c
 28715  003A6A  6EDA               	movwf	fsr2h,c
 28716  003A6C  0008               	tblrd		*
 28717  003A6E  CFF5 FFDF          	movff	tablat,indf2
 28718  003A72  2A01               	incf	__display_search@cntr,f,c
 28719  003A74                     l1577:
 28720  003A74  5001               	movf	__display_search@cntr,w,c
 28721  003A76  0D01               	mullw	1
 28722  003A78  0E43               	movlw	low _search_line2
 28723  003A7A  24F3               	addwf	prodl,w,c
 28724  003A7C  6EF6               	movwf	tblptrl,c
 28725  003A7E  0E8D               	movlw	high _search_line2
 28726  003A80  20F4               	addwfc	prodh,w,c
 28727  003A82  6EF7               	movwf	tblptrh,c
 28728  003A84                     	if	1	;There are 3 active tblptr bytes
 28729  003A84  6AF8               	clrf	tblptru,c
 28730  003A86  0E00               	movlw	low (__mediumconst shr (0+16))
 28731  003A88  22F8               	addwfc	tblptru,f,c
 28732  003A8A                     	endif
 28733  003A8A  0008               	tblrd		*
 28734  003A8C  50F5               	movf	tablat,w,c
 28735  003A8E  0900               	iorlw	0
 28736  003A90  A4D8               	btfss	status,2,c
 28737  003A92  D7D9               	goto	l1578
 28738                           
 28739                           ;display.c: 382: cntr = 0;
 28740  003A94  0E00               	movlw	0
 28741  003A96  6E01               	movwf	__display_search@cntr,c
 28742                           
 28743                           ;display.c: 383: while(search_line3[cntr])
 28744  003A98  D017               	goto	l1580
 28745  003A9A                     
 28746                           ;display.c: 384: display_content[2][cntr] = search_line3[cntr++];
 28747  003A9A  5001               	movf	__display_search@cntr,w,c
 28748  003A9C  0D01               	mullw	1
 28749  003A9E  0EC2               	movlw	low _search_line3
 28750  003AA0  24F3               	addwf	prodl,w,c
 28751  003AA2  6EF6               	movwf	tblptrl,c
 28752  003AA4  0E8C               	movlw	high _search_line3
 28753  003AA6  20F4               	addwfc	prodh,w,c
 28754  003AA8  6EF7               	movwf	tblptrh,c
 28755  003AAA                     	if	1	;There are 3 active tblptr bytes
 28756  003AAA  6AF8               	clrf	tblptru,c
 28757  003AAC  0E00               	movlw	low (__mediumconst shr (0+16))
 28758  003AAE  22F8               	addwfc	tblptru,f,c
 28759  003AB0                     	endif
 28760  003AB0  5001               	movf	__display_search@cntr,w,c
 28761  003AB2  0D01               	mullw	1
 28762  003AB4  0E9E               	movlw	low (_display_content+40)
 28763  003AB6  24F3               	addwf	prodl,w,c
 28764  003AB8  6ED9               	movwf	fsr2l,c
 28765  003ABA  0E01               	movlw	high (_display_content+40)
 28766  003ABC  20F4               	addwfc	prodh,w,c
 28767  003ABE  6EDA               	movwf	fsr2h,c
 28768  003AC0  0008               	tblrd		*
 28769  003AC2  CFF5 FFDF          	movff	tablat,indf2
 28770  003AC6  2A01               	incf	__display_search@cntr,f,c
 28771  003AC8                     l1580:
 28772  003AC8  5001               	movf	__display_search@cntr,w,c
 28773  003ACA  0D01               	mullw	1
 28774  003ACC  0EC2               	movlw	low _search_line3
 28775  003ACE  24F3               	addwf	prodl,w,c
 28776  003AD0  6EF6               	movwf	tblptrl,c
 28777  003AD2  0E8C               	movlw	high _search_line3
 28778  003AD4  20F4               	addwfc	prodh,w,c
 28779  003AD6  6EF7               	movwf	tblptrh,c
 28780  003AD8                     	if	1	;There are 3 active tblptr bytes
 28781  003AD8  6AF8               	clrf	tblptru,c
 28782  003ADA  0E00               	movlw	low (__mediumconst shr (0+16))
 28783  003ADC  22F8               	addwfc	tblptru,f,c
 28784  003ADE                     	endif
 28785  003ADE  0008               	tblrd		*
 28786  003AE0  50F5               	movf	tablat,w,c
 28787  003AE2  0900               	iorlw	0
 28788  003AE4  A4D8               	btfss	status,2,c
 28789  003AE6  D7D9               	goto	l1581
 28790                           
 28791                           ;display.c: 385: cntr = 0;
 28792  003AE8  0E00               	movlw	0
 28793  003AEA  6E01               	movwf	__display_search@cntr,c
 28794                           
 28795                           ;display.c: 386: while(search_line4[cntr])
 28796  003AEC  D017               	goto	l1583
 28797  003AEE                     
 28798                           ;display.c: 387: display_content[3][cntr] = search_line4[cntr++];
 28799  003AEE  5001               	movf	__display_search@cntr,w,c
 28800  003AF0  0D01               	mullw	1
 28801  003AF2  0E59               	movlw	low _search_line4
 28802  003AF4  24F3               	addwf	prodl,w,c
 28803  003AF6  6EF6               	movwf	tblptrl,c
 28804  003AF8  0E8E               	movlw	high _search_line4
 28805  003AFA  20F4               	addwfc	prodh,w,c
 28806  003AFC  6EF7               	movwf	tblptrh,c
 28807  003AFE                     	if	1	;There are 3 active tblptr bytes
 28808  003AFE  6AF8               	clrf	tblptru,c
 28809  003B00  0E00               	movlw	low (__mediumconst shr (0+16))
 28810  003B02  22F8               	addwfc	tblptru,f,c
 28811  003B04                     	endif
 28812  003B04  5001               	movf	__display_search@cntr,w,c
 28813  003B06  0D01               	mullw	1
 28814  003B08  0EB2               	movlw	low (_display_content+60)
 28815  003B0A  24F3               	addwf	prodl,w,c
 28816  003B0C  6ED9               	movwf	fsr2l,c
 28817  003B0E  0E01               	movlw	high (_display_content+60)
 28818  003B10  20F4               	addwfc	prodh,w,c
 28819  003B12  6EDA               	movwf	fsr2h,c
 28820  003B14  0008               	tblrd		*
 28821  003B16  CFF5 FFDF          	movff	tablat,indf2
 28822  003B1A  2A01               	incf	__display_search@cntr,f,c
 28823  003B1C                     l1583:
 28824  003B1C  5001               	movf	__display_search@cntr,w,c
 28825  003B1E  0D01               	mullw	1
 28826  003B20  0E59               	movlw	low _search_line4
 28827  003B22  24F3               	addwf	prodl,w,c
 28828  003B24  6EF6               	movwf	tblptrl,c
 28829  003B26  0E8E               	movlw	high _search_line4
 28830  003B28  20F4               	addwfc	prodh,w,c
 28831  003B2A  6EF7               	movwf	tblptrh,c
 28832  003B2C                     	if	1	;There are 3 active tblptr bytes
 28833  003B2C  6AF8               	clrf	tblptru,c
 28834  003B2E  0E00               	movlw	low (__mediumconst shr (0+16))
 28835  003B30  22F8               	addwfc	tblptru,f,c
 28836  003B32                     	endif
 28837  003B32  0008               	tblrd		*
 28838  003B34  50F5               	movf	tablat,w,c
 28839  003B36  0900               	iorlw	0
 28840  003B38  B4D8               	btfsc	status,2,c
 28841  003B3A  0012               	return	
 28842  003B3C  D7D8               	goto	l1584
 28843  003B3E                     __end_of__display_search:
 28844                           	opt stack 0
 28845                           tosu	equ	0xFFF
 28846                           tosh	equ	0xFFE
 28847                           tosl	equ	0xFFD
 28848                           pclath	equ	0xFFA
 28849                           tblptru	equ	0xFF8
 28850                           tblptrh	equ	0xFF7
 28851                           tblptrl	equ	0xFF6
 28852                           tablat	equ	0xFF5
 28853                           prodh	equ	0xFF4
 28854                           prodl	equ	0xFF3
 28855                           intcon	equ	0xFF2
 28856                           intcon2	equ	0xFF1
 28857                           intcon3	equ	0xFF0
 28858                           indf0	equ	0xFEF
 28859                           postinc0	equ	0xFEE
 28860                           fsr0h	equ	0xFEA
 28861                           fsr0l	equ	0xFE9
 28862                           wreg	equ	0xFE8
 28863                           indf1	equ	0xFE7
 28864                           postdec1	equ	0xFE5
 28865                           plusw1	equ	0xFE3
 28866                           fsr1h	equ	0xFE2
 28867                           fsr1l	equ	0xFE1
 28868                           indf2	equ	0xFDF
 28869                           postinc2	equ	0xFDE
 28870                           postdec2	equ	0xFDD
 28871                           plusw2	equ	0xFDB
 28872                           fsr2h	equ	0xFDA
 28873                           fsr2l	equ	0xFD9
 28874                           status	equ	0xFD8
 28875                           
 28876 ;; *************** function __display_rebooting *****************
 28877 ;; Defined at:
 28878 ;;		line 547 in file "display.c"
 28879 ;; Parameters:    Size  Location     Type
 28880 ;;		None
 28881 ;; Auto vars:     Size  Location     Type
 28882 ;;  cntr            1    0[COMRAM] unsigned char 
 28883 ;; Return value:  Size  Location     Type
 28884 ;;                  1    wreg      void 
 28885 ;; Registers used:
 28886 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 28887 ;; Tracked objects:
 28888 ;;		On entry : 0/0
 28889 ;;		On exit  : 0/0
 28890 ;;		Unchanged: 0/0
 28891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28893 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28895 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28896 ;;Total ram usage:        1 bytes
 28897 ;; Hardware stack levels used:    1
 28898 ;; This function calls:
 28899 ;;		Nothing
 28900 ;; This function is called by:
 28901 ;;		_display_prepare
 28902 ;; This function uses a non-reentrant model
 28903 ;;
 28904                           
 28905                           	psect	text139
 28906  0073C0                     __ptext139:
 28907                           	opt stack 0
 28908  0073C0                     __display_rebooting:
 28909                           	opt stack 26
 28910                           
 28911                           ;display.c: 549: uint8_t cntr;;display.c: 550: cntr = 0;
 28912                           
 28913                           ;incstack = 0
 28914  0073C0  0E00               	movlw	0
 28915  0073C2  6E01               	movwf	__display_rebooting@cntr,c
 28916                           
 28917                           ;display.c: 551: while(reboot_line1[cntr])
 28918  0073C4  D017               	goto	l1698
 28919  0073C6                     
 28920                           ;display.c: 552: display_content[0][cntr] = reboot_line1[cntr++];
 28921  0073C6  5001               	movf	__display_rebooting@cntr,w,c
 28922  0073C8  0D01               	mullw	1
 28923  0073CA  0E3F               	movlw	low _reboot_line1
 28924  0073CC  24F3               	addwf	prodl,w,c
 28925  0073CE  6EF6               	movwf	tblptrl,c
 28926  0073D0  0E8E               	movlw	high _reboot_line1
 28927  0073D2  20F4               	addwfc	prodh,w,c
 28928  0073D4  6EF7               	movwf	tblptrh,c
 28929  0073D6                     	if	1	;There are 3 active tblptr bytes
 28930  0073D6  6AF8               	clrf	tblptru,c
 28931  0073D8  0E00               	movlw	low (__mediumconst shr (0+16))
 28932  0073DA  22F8               	addwfc	tblptru,f,c
 28933  0073DC                     	endif
 28934  0073DC  5001               	movf	__display_rebooting@cntr,w,c
 28935  0073DE  0D01               	mullw	1
 28936  0073E0  0E76               	movlw	low _display_content
 28937  0073E2  24F3               	addwf	prodl,w,c
 28938  0073E4  6ED9               	movwf	fsr2l,c
 28939  0073E6  0E01               	movlw	high _display_content
 28940  0073E8  20F4               	addwfc	prodh,w,c
 28941  0073EA  6EDA               	movwf	fsr2h,c
 28942  0073EC  0008               	tblrd		*
 28943  0073EE  CFF5 FFDF          	movff	tablat,indf2
 28944  0073F2  2A01               	incf	__display_rebooting@cntr,f,c
 28945  0073F4                     l1698:
 28946  0073F4  5001               	movf	__display_rebooting@cntr,w,c
 28947  0073F6  0D01               	mullw	1
 28948  0073F8  0E3F               	movlw	low _reboot_line1
 28949  0073FA  24F3               	addwf	prodl,w,c
 28950  0073FC  6EF6               	movwf	tblptrl,c
 28951  0073FE  0E8E               	movlw	high _reboot_line1
 28952  007400  20F4               	addwfc	prodh,w,c
 28953  007402  6EF7               	movwf	tblptrh,c
 28954  007404                     	if	1	;There are 3 active tblptr bytes
 28955  007404  6AF8               	clrf	tblptru,c
 28956  007406  0E00               	movlw	low (__mediumconst shr (0+16))
 28957  007408  22F8               	addwfc	tblptru,f,c
 28958  00740A                     	endif
 28959  00740A  0008               	tblrd		*
 28960  00740C  50F5               	movf	tablat,w,c
 28961  00740E  0900               	iorlw	0
 28962  007410  B4D8               	btfsc	status,2,c
 28963  007412  0012               	return	
 28964  007414  D7D8               	goto	l1699
 28965  007416                     __end_of__display_rebooting:
 28966                           	opt stack 0
 28967                           tosu	equ	0xFFF
 28968                           tosh	equ	0xFFE
 28969                           tosl	equ	0xFFD
 28970                           pclath	equ	0xFFA
 28971                           tblptru	equ	0xFF8
 28972                           tblptrh	equ	0xFF7
 28973                           tblptrl	equ	0xFF6
 28974                           tablat	equ	0xFF5
 28975                           prodh	equ	0xFF4
 28976                           prodl	equ	0xFF3
 28977                           intcon	equ	0xFF2
 28978                           intcon2	equ	0xFF1
 28979                           intcon3	equ	0xFF0
 28980                           indf0	equ	0xFEF
 28981                           postinc0	equ	0xFEE
 28982                           fsr0h	equ	0xFEA
 28983                           fsr0l	equ	0xFE9
 28984                           wreg	equ	0xFE8
 28985                           indf1	equ	0xFE7
 28986                           postdec1	equ	0xFE5
 28987                           plusw1	equ	0xFE3
 28988                           fsr1h	equ	0xFE2
 28989                           fsr1l	equ	0xFE1
 28990                           indf2	equ	0xFDF
 28991                           postinc2	equ	0xFDE
 28992                           postdec2	equ	0xFDD
 28993                           plusw2	equ	0xFDB
 28994                           fsr2h	equ	0xFDA
 28995                           fsr2l	equ	0xFD9
 28996                           status	equ	0xFD8
 28997                           
 28998 ;; *************** function __display_programming *****************
 28999 ;; Defined at:
 29000 ;;		line 505 in file "display.c"
 29001 ;; Parameters:    Size  Location     Type
 29002 ;;		None
 29003 ;; Auto vars:     Size  Location     Type
 29004 ;;  cntr            1   30[COMRAM] unsigned char 
 29005 ;; Return value:  Size  Location     Type
 29006 ;;                  1    wreg      void 
 29007 ;; Registers used:
 29008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29009 ;; Tracked objects:
 29010 ;;		On entry : 0/0
 29011 ;;		On exit  : 0/0
 29012 ;;		Unchanged: 0/0
 29013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29015 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29017 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29018 ;;Total ram usage:        1 bytes
 29019 ;; Hardware stack levels used:    1
 29020 ;; Hardware stack levels required when called:    4
 29021 ;; This function calls:
 29022 ;;		__display_itoa_u16
 29023 ;;		_bootloader_get_entries
 29024 ;;		_bootloader_get_flashPagesWritten
 29025 ;;		_bootloader_get_total_entries
 29026 ;; This function is called by:
 29027 ;;		_display_prepare
 29028 ;; This function uses a non-reentrant model
 29029 ;;
 29030                           
 29031                           	psect	text140
 29032  002EE2                     __ptext140:
 29033                           	opt stack 0
 29034  002EE2                     __display_programming:
 29035                           	opt stack 22
 29036                           
 29037                           ;display.c: 507: uint8_t cntr;;display.c: 508: cntr = 0;
 29038                           
 29039                           ;incstack = 0
 29040  002EE2  0E00               	movlw	0
 29041  002EE4  6E1F               	movwf	__display_programming@cntr,c
 29042                           
 29043                           ;display.c: 509: while(programming_line1[cntr])
 29044  002EE6  D017               	goto	l1668
 29045  002EE8                     
 29046                           ;display.c: 510: display_content[0][cntr] = programming_line1[cntr++];
 29047  002EE8  501F               	movf	__display_programming@cntr,w,c
 29048  002EEA  0D01               	mullw	1
 29049  002EEC  0E94               	movlw	low _programming_line1
 29050  002EEE  24F3               	addwf	prodl,w,c
 29051  002EF0  6EF6               	movwf	tblptrl,c
 29052  002EF2  0E8D               	movlw	high _programming_line1
 29053  002EF4  20F4               	addwfc	prodh,w,c
 29054  002EF6  6EF7               	movwf	tblptrh,c
 29055  002EF8                     	if	1	;There are 3 active tblptr bytes
 29056  002EF8  6AF8               	clrf	tblptru,c
 29057  002EFA  0E00               	movlw	low (__mediumconst shr (0+16))
 29058  002EFC  22F8               	addwfc	tblptru,f,c
 29059  002EFE                     	endif
 29060  002EFE  501F               	movf	__display_programming@cntr,w,c
 29061  002F00  0D01               	mullw	1
 29062  002F02  0E76               	movlw	low _display_content
 29063  002F04  24F3               	addwf	prodl,w,c
 29064  002F06  6ED9               	movwf	fsr2l,c
 29065  002F08  0E01               	movlw	high _display_content
 29066  002F0A  20F4               	addwfc	prodh,w,c
 29067  002F0C  6EDA               	movwf	fsr2h,c
 29068  002F0E  0008               	tblrd		*
 29069  002F10  CFF5 FFDF          	movff	tablat,indf2
 29070  002F14  2A1F               	incf	__display_programming@cntr,f,c
 29071  002F16                     l1668:
 29072  002F16  501F               	movf	__display_programming@cntr,w,c
 29073  002F18  0D01               	mullw	1
 29074  002F1A  0E94               	movlw	low _programming_line1
 29075  002F1C  24F3               	addwf	prodl,w,c
 29076  002F1E  6EF6               	movwf	tblptrl,c
 29077  002F20  0E8D               	movlw	high _programming_line1
 29078  002F22  20F4               	addwfc	prodh,w,c
 29079  002F24  6EF7               	movwf	tblptrh,c
 29080  002F26                     	if	1	;There are 3 active tblptr bytes
 29081  002F26  6AF8               	clrf	tblptru,c
 29082  002F28  0E00               	movlw	low (__mediumconst shr (0+16))
 29083  002F2A  22F8               	addwfc	tblptru,f,c
 29084  002F2C                     	endif
 29085  002F2C  0008               	tblrd		*
 29086  002F2E  50F5               	movf	tablat,w,c
 29087  002F30  0900               	iorlw	0
 29088  002F32  A4D8               	btfss	status,2,c
 29089  002F34  D7D9               	goto	l1669
 29090                           
 29091                           ;display.c: 512: cntr = 0;
 29092  002F36  0E00               	movlw	0
 29093  002F38  6E1F               	movwf	__display_programming@cntr,c
 29094                           
 29095                           ;display.c: 513: while(programming_line2[cntr])
 29096  002F3A  D017               	goto	l1671
 29097  002F3C                     
 29098                           ;display.c: 514: display_content[1][cntr] = programming_line2[cntr++];
 29099  002F3C  501F               	movf	__display_programming@cntr,w,c
 29100  002F3E  0D01               	mullw	1
 29101  002F40  0EFC               	movlw	low _programming_line2
 29102  002F42  24F3               	addwf	prodl,w,c
 29103  002F44  6EF6               	movwf	tblptrl,c
 29104  002F46  0E8C               	movlw	high _programming_line2
 29105  002F48  20F4               	addwfc	prodh,w,c
 29106  002F4A  6EF7               	movwf	tblptrh,c
 29107  002F4C                     	if	1	;There are 3 active tblptr bytes
 29108  002F4C  6AF8               	clrf	tblptru,c
 29109  002F4E  0E00               	movlw	low (__mediumconst shr (0+16))
 29110  002F50  22F8               	addwfc	tblptru,f,c
 29111  002F52                     	endif
 29112  002F52  501F               	movf	__display_programming@cntr,w,c
 29113  002F54  0D01               	mullw	1
 29114  002F56  0E8A               	movlw	low (_display_content+20)
 29115  002F58  24F3               	addwf	prodl,w,c
 29116  002F5A  6ED9               	movwf	fsr2l,c
 29117  002F5C  0E01               	movlw	high (_display_content+20)
 29118  002F5E  20F4               	addwfc	prodh,w,c
 29119  002F60  6EDA               	movwf	fsr2h,c
 29120  002F62  0008               	tblrd		*
 29121  002F64  CFF5 FFDF          	movff	tablat,indf2
 29122  002F68  2A1F               	incf	__display_programming@cntr,f,c
 29123  002F6A                     l1671:
 29124  002F6A  501F               	movf	__display_programming@cntr,w,c
 29125  002F6C  0D01               	mullw	1
 29126  002F6E  0EFC               	movlw	low _programming_line2
 29127  002F70  24F3               	addwf	prodl,w,c
 29128  002F72  6EF6               	movwf	tblptrl,c
 29129  002F74  0E8C               	movlw	high _programming_line2
 29130  002F76  20F4               	addwfc	prodh,w,c
 29131  002F78  6EF7               	movwf	tblptrh,c
 29132  002F7A                     	if	1	;There are 3 active tblptr bytes
 29133  002F7A  6AF8               	clrf	tblptru,c
 29134  002F7C  0E00               	movlw	low (__mediumconst shr (0+16))
 29135  002F7E  22F8               	addwfc	tblptru,f,c
 29136  002F80                     	endif
 29137  002F80  0008               	tblrd		*
 29138  002F82  50F5               	movf	tablat,w,c
 29139  002F84  0900               	iorlw	0
 29140  002F86  A4D8               	btfss	status,2,c
 29141  002F88  D7D9               	goto	l1672
 29142                           
 29143                           ;display.c: 516: cntr = 0;
 29144  002F8A  0E00               	movlw	0
 29145  002F8C  6E1F               	movwf	__display_programming@cntr,c
 29146                           
 29147                           ;display.c: 517: while(programming_line3[cntr])
 29148  002F8E  D017               	goto	l1674
 29149  002F90                     
 29150                           ;display.c: 518: display_content[2][cntr] = programming_line3[cntr++];
 29151  002F90  501F               	movf	__display_programming@cntr,w,c
 29152  002F92  0D01               	mullw	1
 29153  002F94  0E83               	movlw	low _programming_line3
 29154  002F96  24F3               	addwf	prodl,w,c
 29155  002F98  6EF6               	movwf	tblptrl,c
 29156  002F9A  0E8E               	movlw	high _programming_line3
 29157  002F9C  20F4               	addwfc	prodh,w,c
 29158  002F9E  6EF7               	movwf	tblptrh,c
 29159  002FA0                     	if	1	;There are 3 active tblptr bytes
 29160  002FA0  6AF8               	clrf	tblptru,c
 29161  002FA2  0E00               	movlw	low (__mediumconst shr (0+16))
 29162  002FA4  22F8               	addwfc	tblptru,f,c
 29163  002FA6                     	endif
 29164  002FA6  501F               	movf	__display_programming@cntr,w,c
 29165  002FA8  0D01               	mullw	1
 29166  002FAA  0E9E               	movlw	low (_display_content+40)
 29167  002FAC  24F3               	addwf	prodl,w,c
 29168  002FAE  6ED9               	movwf	fsr2l,c
 29169  002FB0  0E01               	movlw	high (_display_content+40)
 29170  002FB2  20F4               	addwfc	prodh,w,c
 29171  002FB4  6EDA               	movwf	fsr2h,c
 29172  002FB6  0008               	tblrd		*
 29173  002FB8  CFF5 FFDF          	movff	tablat,indf2
 29174  002FBC  2A1F               	incf	__display_programming@cntr,f,c
 29175  002FBE                     l1674:
 29176  002FBE  501F               	movf	__display_programming@cntr,w,c
 29177  002FC0  0D01               	mullw	1
 29178  002FC2  0E83               	movlw	low _programming_line3
 29179  002FC4  24F3               	addwf	prodl,w,c
 29180  002FC6  6EF6               	movwf	tblptrl,c
 29181  002FC8  0E8E               	movlw	high _programming_line3
 29182  002FCA  20F4               	addwfc	prodh,w,c
 29183  002FCC  6EF7               	movwf	tblptrh,c
 29184  002FCE                     	if	1	;There are 3 active tblptr bytes
 29185  002FCE  6AF8               	clrf	tblptru,c
 29186  002FD0  0E00               	movlw	low (__mediumconst shr (0+16))
 29187  002FD2  22F8               	addwfc	tblptru,f,c
 29188  002FD4                     	endif
 29189  002FD4  0008               	tblrd		*
 29190  002FD6  50F5               	movf	tablat,w,c
 29191  002FD8  0900               	iorlw	0
 29192  002FDA  A4D8               	btfss	status,2,c
 29193  002FDC  D7D9               	goto	l1675
 29194                           
 29195                           ;display.c: 519: cntr += _display_itoa_u16(bootloader_get_entries(), &display_content[2]
      +                          [cntr]);
 29196  002FDE  EC39  F040         	call	_bootloader_get_entries	;wreg free
 29197  002FE2  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 29198  002FE6  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 29199  002FEA  6A1B               	clrf	__display_itoa_u16@value+2,c
 29200  002FEC  6A1C               	clrf	__display_itoa_u16@value+3,c
 29201  002FEE  501F               	movf	__display_programming@cntr,w,c
 29202  002FF0  0D01               	mullw	1
 29203  002FF2  0E9E               	movlw	low (_display_content+40)
 29204  002FF4  24F3               	addwf	prodl,w,c
 29205  002FF6  6E1D               	movwf	__display_itoa_u16@text,c
 29206  002FF8  0E01               	movlw	high (_display_content+40)
 29207  002FFA  20F4               	addwfc	prodh,w,c
 29208  002FFC  6E1E               	movwf	__display_itoa_u16@text+1,c
 29209  002FFE  EC23  F02A         	call	__display_itoa_u16	;wreg free
 29210  003002  261F               	addwf	__display_programming@cntr,f,c
 29211                           
 29212                           ;display.c: 520: display_content[2][cntr++] = '/';
 29213  003004  501F               	movf	__display_programming@cntr,w,c
 29214  003006  0D01               	mullw	1
 29215  003008  0E9E               	movlw	low (_display_content+40)
 29216  00300A  24F3               	addwf	prodl,w,c
 29217  00300C  6ED9               	movwf	fsr2l,c
 29218  00300E  0E01               	movlw	high (_display_content+40)
 29219  003010  20F4               	addwfc	prodh,w,c
 29220  003012  6EDA               	movwf	fsr2h,c
 29221  003014  0E2F               	movlw	47
 29222  003016  6EDF               	movwf	indf2,c
 29223  003018  2A1F               	incf	__display_programming@cntr,f,c
 29224                           
 29225                           ;display.c: 521: _display_itoa_u16(bootloader_get_total_entries(), &display_content[2][c
      +                          ntr]);
 29226  00301A  EC43  F040         	call	_bootloader_get_total_entries	;wreg free
 29227  00301E  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 29228  003022  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 29229  003026  6A1B               	clrf	__display_itoa_u16@value+2,c
 29230  003028  6A1C               	clrf	__display_itoa_u16@value+3,c
 29231  00302A  501F               	movf	__display_programming@cntr,w,c
 29232  00302C  0D01               	mullw	1
 29233  00302E  0E9E               	movlw	low (_display_content+40)
 29234  003030  24F3               	addwf	prodl,w,c
 29235  003032  6E1D               	movwf	__display_itoa_u16@text,c
 29236  003034  0E01               	movlw	high (_display_content+40)
 29237  003036  20F4               	addwfc	prodh,w,c
 29238  003038  6E1E               	movwf	__display_itoa_u16@text+1,c
 29239  00303A  EC23  F02A         	call	__display_itoa_u16	;wreg free
 29240                           
 29241                           ;display.c: 523: cntr = 0;
 29242  00303E  0E00               	movlw	0
 29243  003040  6E1F               	movwf	__display_programming@cntr,c
 29244                           
 29245                           ;display.c: 524: while(programming_line4[cntr])
 29246  003042  D017               	goto	l1677
 29247  003044                     
 29248                           ;display.c: 525: display_content[3][cntr] = programming_line4[cntr++];
 29249  003044  501F               	movf	__display_programming@cntr,w,c
 29250  003046  0D01               	mullw	1
 29251  003048  0E84               	movlw	low _programming_line4
 29252  00304A  24F3               	addwf	prodl,w,c
 29253  00304C  6EF6               	movwf	tblptrl,c
 29254  00304E  0E8D               	movlw	high _programming_line4
 29255  003050  20F4               	addwfc	prodh,w,c
 29256  003052  6EF7               	movwf	tblptrh,c
 29257  003054                     	if	1	;There are 3 active tblptr bytes
 29258  003054  6AF8               	clrf	tblptru,c
 29259  003056  0E00               	movlw	low (__mediumconst shr (0+16))
 29260  003058  22F8               	addwfc	tblptru,f,c
 29261  00305A                     	endif
 29262  00305A  501F               	movf	__display_programming@cntr,w,c
 29263  00305C  0D01               	mullw	1
 29264  00305E  0EB2               	movlw	low (_display_content+60)
 29265  003060  24F3               	addwf	prodl,w,c
 29266  003062  6ED9               	movwf	fsr2l,c
 29267  003064  0E01               	movlw	high (_display_content+60)
 29268  003066  20F4               	addwfc	prodh,w,c
 29269  003068  6EDA               	movwf	fsr2h,c
 29270  00306A  0008               	tblrd		*
 29271  00306C  CFF5 FFDF          	movff	tablat,indf2
 29272  003070  2A1F               	incf	__display_programming@cntr,f,c
 29273  003072                     l1677:
 29274  003072  501F               	movf	__display_programming@cntr,w,c
 29275  003074  0D01               	mullw	1
 29276  003076  0E84               	movlw	low _programming_line4
 29277  003078  24F3               	addwf	prodl,w,c
 29278  00307A  6EF6               	movwf	tblptrl,c
 29279  00307C  0E8D               	movlw	high _programming_line4
 29280  00307E  20F4               	addwfc	prodh,w,c
 29281  003080  6EF7               	movwf	tblptrh,c
 29282  003082                     	if	1	;There are 3 active tblptr bytes
 29283  003082  6AF8               	clrf	tblptru,c
 29284  003084  0E00               	movlw	low (__mediumconst shr (0+16))
 29285  003086  22F8               	addwfc	tblptru,f,c
 29286  003088                     	endif
 29287  003088  0008               	tblrd		*
 29288  00308A  50F5               	movf	tablat,w,c
 29289  00308C  0900               	iorlw	0
 29290  00308E  A4D8               	btfss	status,2,c
 29291  003090  D7D9               	goto	l1678
 29292                           
 29293                           ;display.c: 526: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          3][cntr]);
 29294  003092  EC3E  F040         	call	_bootloader_get_flashPagesWritten	;wreg free
 29295  003096  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 29296  00309A  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 29297  00309E  6A1B               	clrf	__display_itoa_u16@value+2,c
 29298  0030A0  6A1C               	clrf	__display_itoa_u16@value+3,c
 29299  0030A2  501F               	movf	__display_programming@cntr,w,c
 29300  0030A4  0D01               	mullw	1
 29301  0030A6  0EB2               	movlw	low (_display_content+60)
 29302  0030A8  24F3               	addwf	prodl,w,c
 29303  0030AA  6E1D               	movwf	__display_itoa_u16@text,c
 29304  0030AC  0E01               	movlw	high (_display_content+60)
 29305  0030AE  20F4               	addwfc	prodh,w,c
 29306  0030B0  6E1E               	movwf	__display_itoa_u16@text+1,c
 29307  0030B2  EC23  F02A         	call	__display_itoa_u16	;wreg free
 29308  0030B6  0012               	return		;funcret
 29309  0030B8                     __end_of__display_programming:
 29310                           	opt stack 0
 29311                           tosu	equ	0xFFF
 29312                           tosh	equ	0xFFE
 29313                           tosl	equ	0xFFD
 29314                           pclath	equ	0xFFA
 29315                           tblptru	equ	0xFF8
 29316                           tblptrh	equ	0xFF7
 29317                           tblptrl	equ	0xFF6
 29318                           tablat	equ	0xFF5
 29319                           prodh	equ	0xFF4
 29320                           prodl	equ	0xFF3
 29321                           intcon	equ	0xFF2
 29322                           intcon2	equ	0xFF1
 29323                           intcon3	equ	0xFF0
 29324                           indf0	equ	0xFEF
 29325                           postinc0	equ	0xFEE
 29326                           fsr0h	equ	0xFEA
 29327                           fsr0l	equ	0xFE9
 29328                           wreg	equ	0xFE8
 29329                           indf1	equ	0xFE7
 29330                           postdec1	equ	0xFE5
 29331                           plusw1	equ	0xFE3
 29332                           fsr1h	equ	0xFE2
 29333                           fsr1l	equ	0xFE1
 29334                           indf2	equ	0xFDF
 29335                           postinc2	equ	0xFDE
 29336                           postdec2	equ	0xFDD
 29337                           plusw2	equ	0xFDB
 29338                           fsr2h	equ	0xFDA
 29339                           fsr2l	equ	0xFD9
 29340                           status	equ	0xFD8
 29341                           
 29342 ;; *************** function __display_found *****************
 29343 ;; Defined at:
 29344 ;;		line 390 in file "display.c"
 29345 ;; Parameters:    Size  Location     Type
 29346 ;;		None
 29347 ;; Auto vars:     Size  Location     Type
 29348 ;;  cntr            1   39[COMRAM] unsigned char 
 29349 ;;  start           1   38[COMRAM] unsigned char 
 29350 ;; Return value:  Size  Location     Type
 29351 ;;                  1    wreg      void 
 29352 ;; Registers used:
 29353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29354 ;; Tracked objects:
 29355 ;;		On entry : 0/0
 29356 ;;		On exit  : 0/0
 29357 ;;		Unchanged: 0/0
 29358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29360 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29361 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29362 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29363 ;;Total ram usage:        4 bytes
 29364 ;; Hardware stack levels used:    1
 29365 ;; Hardware stack levels required when called:    5
 29366 ;; This function calls:
 29367 ;;		__display_itoa_u32
 29368 ;;		_bootloader_get_file_size
 29369 ;; This function is called by:
 29370 ;;		_display_prepare
 29371 ;; This function uses a non-reentrant model
 29372 ;;
 29373                           
 29374                           	psect	text141
 29375  002B2C                     __ptext141:
 29376                           	opt stack 0
 29377  002B2C                     __display_found:
 29378                           	opt stack 21
 29379                           
 29380                           ;display.c: 392: uint8_t cntr;;display.c: 393: uint8_t start;;display.c: 395: cntr = 0;
 29381                           
 29382                           ;incstack = 0
 29383  002B2C  0E00               	movlw	0
 29384  002B2E  6E28               	movwf	__display_found@cntr,c
 29385                           
 29386                           ;display.c: 396: while(found_line1[cntr])
 29387  002B30  D017               	goto	l1589
 29388  002B32                     
 29389                           ;display.c: 397: display_content[0][cntr] = found_line1[cntr++];
 29390  002B32  5028               	movf	__display_found@cntr,w,c
 29391  002B34  0D01               	mullw	1
 29392  002B36  0ED4               	movlw	low _found_line1
 29393  002B38  24F3               	addwf	prodl,w,c
 29394  002B3A  6EF6               	movwf	tblptrl,c
 29395  002B3C  0E8D               	movlw	high _found_line1
 29396  002B3E  20F4               	addwfc	prodh,w,c
 29397  002B40  6EF7               	movwf	tblptrh,c
 29398  002B42                     	if	1	;There are 3 active tblptr bytes
 29399  002B42  6AF8               	clrf	tblptru,c
 29400  002B44  0E00               	movlw	low (__mediumconst shr (0+16))
 29401  002B46  22F8               	addwfc	tblptru,f,c
 29402  002B48                     	endif
 29403  002B48  5028               	movf	__display_found@cntr,w,c
 29404  002B4A  0D01               	mullw	1
 29405  002B4C  0E76               	movlw	low _display_content
 29406  002B4E  24F3               	addwf	prodl,w,c
 29407  002B50  6ED9               	movwf	fsr2l,c
 29408  002B52  0E01               	movlw	high _display_content
 29409  002B54  20F4               	addwfc	prodh,w,c
 29410  002B56  6EDA               	movwf	fsr2h,c
 29411  002B58  0008               	tblrd		*
 29412  002B5A  CFF5 FFDF          	movff	tablat,indf2
 29413  002B5E  2A28               	incf	__display_found@cntr,f,c
 29414  002B60                     l1589:
 29415  002B60  5028               	movf	__display_found@cntr,w,c
 29416  002B62  0D01               	mullw	1
 29417  002B64  0ED4               	movlw	low _found_line1
 29418  002B66  24F3               	addwf	prodl,w,c
 29419  002B68  6EF6               	movwf	tblptrl,c
 29420  002B6A  0E8D               	movlw	high _found_line1
 29421  002B6C  20F4               	addwfc	prodh,w,c
 29422  002B6E  6EF7               	movwf	tblptrh,c
 29423  002B70                     	if	1	;There are 3 active tblptr bytes
 29424  002B70  6AF8               	clrf	tblptru,c
 29425  002B72  0E00               	movlw	low (__mediumconst shr (0+16))
 29426  002B74  22F8               	addwfc	tblptru,f,c
 29427  002B76                     	endif
 29428  002B76  0008               	tblrd		*
 29429  002B78  50F5               	movf	tablat,w,c
 29430  002B7A  0900               	iorlw	0
 29431  002B7C  A4D8               	btfss	status,2,c
 29432  002B7E  D7D9               	goto	l1590
 29433                           
 29434                           ;display.c: 399: cntr = 0;
 29435  002B80  0E00               	movlw	0
 29436  002B82  6E28               	movwf	__display_found@cntr,c
 29437                           
 29438                           ;display.c: 400: while(found_line2[cntr])
 29439  002B84  D017               	goto	l1592
 29440  002B86                     
 29441                           ;display.c: 401: display_content[1][cntr] = found_line2[cntr++];
 29442  002B86  5028               	movf	__display_found@cntr,w,c
 29443  002B88  0D01               	mullw	1
 29444  002B8A  0EE9               	movlw	low _found_line2
 29445  002B8C  24F3               	addwf	prodl,w,c
 29446  002B8E  6EF6               	movwf	tblptrl,c
 29447  002B90  0E8C               	movlw	high _found_line2
 29448  002B92  20F4               	addwfc	prodh,w,c
 29449  002B94  6EF7               	movwf	tblptrh,c
 29450  002B96                     	if	1	;There are 3 active tblptr bytes
 29451  002B96  6AF8               	clrf	tblptru,c
 29452  002B98  0E00               	movlw	low (__mediumconst shr (0+16))
 29453  002B9A  22F8               	addwfc	tblptru,f,c
 29454  002B9C                     	endif
 29455  002B9C  5028               	movf	__display_found@cntr,w,c
 29456  002B9E  0D01               	mullw	1
 29457  002BA0  0E8A               	movlw	low (_display_content+20)
 29458  002BA2  24F3               	addwf	prodl,w,c
 29459  002BA4  6ED9               	movwf	fsr2l,c
 29460  002BA6  0E01               	movlw	high (_display_content+20)
 29461  002BA8  20F4               	addwfc	prodh,w,c
 29462  002BAA  6EDA               	movwf	fsr2h,c
 29463  002BAC  0008               	tblrd		*
 29464  002BAE  CFF5 FFDF          	movff	tablat,indf2
 29465  002BB2  2A28               	incf	__display_found@cntr,f,c
 29466  002BB4                     l1592:
 29467  002BB4  5028               	movf	__display_found@cntr,w,c
 29468  002BB6  0D01               	mullw	1
 29469  002BB8  0EE9               	movlw	low _found_line2
 29470  002BBA  24F3               	addwf	prodl,w,c
 29471  002BBC  6EF6               	movwf	tblptrl,c
 29472  002BBE  0E8C               	movlw	high _found_line2
 29473  002BC0  20F4               	addwfc	prodh,w,c
 29474  002BC2  6EF7               	movwf	tblptrh,c
 29475  002BC4                     	if	1	;There are 3 active tblptr bytes
 29476  002BC4  6AF8               	clrf	tblptru,c
 29477  002BC6  0E00               	movlw	low (__mediumconst shr (0+16))
 29478  002BC8  22F8               	addwfc	tblptru,f,c
 29479  002BCA                     	endif
 29480  002BCA  0008               	tblrd		*
 29481  002BCC  50F5               	movf	tablat,w,c
 29482  002BCE  0900               	iorlw	0
 29483  002BD0  A4D8               	btfss	status,2,c
 29484  002BD2  D7D9               	goto	l1593
 29485                           
 29486                           ;display.c: 403: cntr = 0;
 29487  002BD4  0E00               	movlw	0
 29488  002BD6  6E28               	movwf	__display_found@cntr,c
 29489                           
 29490                           ;display.c: 404: while(found_line3[cntr])
 29491  002BD8  D017               	goto	l1595
 29492  002BDA                     
 29493                           ;display.c: 405: display_content[2][cntr] = found_line3[cntr++];
 29494  002BDA  5028               	movf	__display_found@cntr,w,c
 29495  002BDC  0D01               	mullw	1
 29496  002BDE  0E98               	movlw	low _found_line3
 29497  002BE0  24F3               	addwf	prodl,w,c
 29498  002BE2  6EF6               	movwf	tblptrl,c
 29499  002BE4  0E8E               	movlw	high _found_line3
 29500  002BE6  20F4               	addwfc	prodh,w,c
 29501  002BE8  6EF7               	movwf	tblptrh,c
 29502  002BEA                     	if	1	;There are 3 active tblptr bytes
 29503  002BEA  6AF8               	clrf	tblptru,c
 29504  002BEC  0E00               	movlw	low (__mediumconst shr (0+16))
 29505  002BEE  22F8               	addwfc	tblptru,f,c
 29506  002BF0                     	endif
 29507  002BF0  5028               	movf	__display_found@cntr,w,c
 29508  002BF2  0D01               	mullw	1
 29509  002BF4  0E9E               	movlw	low (_display_content+40)
 29510  002BF6  24F3               	addwf	prodl,w,c
 29511  002BF8  6ED9               	movwf	fsr2l,c
 29512  002BFA  0E01               	movlw	high (_display_content+40)
 29513  002BFC  20F4               	addwfc	prodh,w,c
 29514  002BFE  6EDA               	movwf	fsr2h,c
 29515  002C00  0008               	tblrd		*
 29516  002C02  CFF5 FFDF          	movff	tablat,indf2
 29517  002C06  2A28               	incf	__display_found@cntr,f,c
 29518  002C08                     l1595:
 29519  002C08  5028               	movf	__display_found@cntr,w,c
 29520  002C0A  0D01               	mullw	1
 29521  002C0C  0E98               	movlw	low _found_line3
 29522  002C0E  24F3               	addwf	prodl,w,c
 29523  002C10  6EF6               	movwf	tblptrl,c
 29524  002C12  0E8E               	movlw	high _found_line3
 29525  002C14  20F4               	addwfc	prodh,w,c
 29526  002C16  6EF7               	movwf	tblptrh,c
 29527  002C18                     	if	1	;There are 3 active tblptr bytes
 29528  002C18  6AF8               	clrf	tblptru,c
 29529  002C1A  0E00               	movlw	low (__mediumconst shr (0+16))
 29530  002C1C  22F8               	addwfc	tblptru,f,c
 29531  002C1E                     	endif
 29532  002C1E  0008               	tblrd		*
 29533  002C20  50F5               	movf	tablat,w,c
 29534  002C22  0900               	iorlw	0
 29535  002C24  A4D8               	btfss	status,2,c
 29536  002C26  D7D9               	goto	l1596
 29537                           
 29538                           ;display.c: 406: start = cntr;
 29539  002C28  C028  F027         	movff	__display_found@cntr,__display_found@start
 29540                           
 29541                           ;display.c: 407: start += _display_itoa_u32(bootloader_get_file_size(), &display_content
      +                          [2][cntr]);
 29542  002C2C  ECC7  F03F         	call	_bootloader_get_file_size	;wreg free
 29543  002C30  C001  F01F         	movff	?_bootloader_get_file_size,__display_itoa_u32@value
 29544  002C34  C002  F020         	movff	?_bootloader_get_file_size+1,__display_itoa_u32@value+1
 29545  002C38  C003  F021         	movff	?_bootloader_get_file_size+2,__display_itoa_u32@value+2
 29546  002C3C  C004  F022         	movff	?_bootloader_get_file_size+3,__display_itoa_u32@value+3
 29547  002C40  5028               	movf	__display_found@cntr,w,c
 29548  002C42  0D01               	mullw	1
 29549  002C44  0E9E               	movlw	low (_display_content+40)
 29550  002C46  24F3               	addwf	prodl,w,c
 29551  002C48  6E23               	movwf	__display_itoa_u32@text,c
 29552  002C4A  0E01               	movlw	high (_display_content+40)
 29553  002C4C  20F4               	addwfc	prodh,w,c
 29554  002C4E  6E24               	movwf	__display_itoa_u32@text+1,c
 29555  002C50  ECE4  F005         	call	__display_itoa_u32	;wreg free
 29556  002C54  2627               	addwf	__display_found@start,f,c
 29557                           
 29558                           ;display.c: 408: cntr = 0;
 29559  002C56  0E00               	movlw	0
 29560  002C58  6E28               	movwf	__display_found@cntr,c
 29561                           
 29562                           ;display.c: 409: while(found_line3b[cntr])
 29563  002C5A  D01C               	goto	l1598
 29564  002C5C                     
 29565                           ;display.c: 410: display_content[2][start+cntr] = found_line3b[cntr++];
 29566  002C5C  5028               	movf	__display_found@cntr,w,c
 29567  002C5E  0D01               	mullw	1
 29568  002C60  0E91               	movlw	low _found_line3b
 29569  002C62  24F3               	addwf	prodl,w,c
 29570  002C64  6EF6               	movwf	tblptrl,c
 29571  002C66  0E8E               	movlw	high _found_line3b
 29572  002C68  20F4               	addwfc	prodh,w,c
 29573  002C6A  6EF7               	movwf	tblptrh,c
 29574  002C6C                     	if	1	;There are 3 active tblptr bytes
 29575  002C6C  6AF8               	clrf	tblptru,c
 29576  002C6E  0E00               	movlw	low (__mediumconst shr (0+16))
 29577  002C70  22F8               	addwfc	tblptru,f,c
 29578  002C72                     	endif
 29579  002C72  5028               	movf	__display_found@cntr,w,c
 29580  002C74  C027  F025         	movff	__display_found@start,??__display_found
 29581  002C78  6A26               	clrf	(??__display_found+1)& (0+255),c
 29582  002C7A  2625               	addwf	??__display_found,f,c
 29583  002C7C  0E00               	movlw	0
 29584  002C7E  2226               	addwfc	??__display_found+1,f,c
 29585  002C80  0E9E               	movlw	low (_display_content+40)
 29586  002C82  2425               	addwf	??__display_found,w,c
 29587  002C84  6ED9               	movwf	fsr2l,c
 29588  002C86  0E01               	movlw	high (_display_content+40)
 29589  002C88  2026               	addwfc	??__display_found+1,w,c
 29590  002C8A  6EDA               	movwf	fsr2h,c
 29591  002C8C  0008               	tblrd		*
 29592  002C8E  CFF5 FFDF          	movff	tablat,indf2
 29593  002C92  2A28               	incf	__display_found@cntr,f,c
 29594  002C94                     l1598:
 29595  002C94  5028               	movf	__display_found@cntr,w,c
 29596  002C96  0D01               	mullw	1
 29597  002C98  0E91               	movlw	low _found_line3b
 29598  002C9A  24F3               	addwf	prodl,w,c
 29599  002C9C  6EF6               	movwf	tblptrl,c
 29600  002C9E  0E8E               	movlw	high _found_line3b
 29601  002CA0  20F4               	addwfc	prodh,w,c
 29602  002CA2  6EF7               	movwf	tblptrh,c
 29603  002CA4                     	if	1	;There are 3 active tblptr bytes
 29604  002CA4  6AF8               	clrf	tblptru,c
 29605  002CA6  0E00               	movlw	low (__mediumconst shr (0+16))
 29606  002CA8  22F8               	addwfc	tblptru,f,c
 29607  002CAA                     	endif
 29608  002CAA  0008               	tblrd		*
 29609  002CAC  50F5               	movf	tablat,w,c
 29610  002CAE  0900               	iorlw	0
 29611  002CB0  A4D8               	btfss	status,2,c
 29612  002CB2  D7D4               	goto	l1599
 29613                           
 29614                           ;display.c: 412: cntr = 0;
 29615  002CB4  0E00               	movlw	0
 29616  002CB6  6E28               	movwf	__display_found@cntr,c
 29617                           
 29618                           ;display.c: 413: while(found_line4[cntr])
 29619  002CB8  D017               	goto	l1601
 29620  002CBA                     
 29621                           ;display.c: 414: display_content[3][cntr] = found_line4[cntr++];
 29622  002CBA  5028               	movf	__display_found@cntr,w,c
 29623  002CBC  0D01               	mullw	1
 29624  002CBE  0E20               	movlw	low _found_line4
 29625  002CC0  24F3               	addwf	prodl,w,c
 29626  002CC2  6EF6               	movwf	tblptrl,c
 29627  002CC4  0E8D               	movlw	high _found_line4
 29628  002CC6  20F4               	addwfc	prodh,w,c
 29629  002CC8  6EF7               	movwf	tblptrh,c
 29630  002CCA                     	if	1	;There are 3 active tblptr bytes
 29631  002CCA  6AF8               	clrf	tblptru,c
 29632  002CCC  0E00               	movlw	low (__mediumconst shr (0+16))
 29633  002CCE  22F8               	addwfc	tblptru,f,c
 29634  002CD0                     	endif
 29635  002CD0  5028               	movf	__display_found@cntr,w,c
 29636  002CD2  0D01               	mullw	1
 29637  002CD4  0EB2               	movlw	low (_display_content+60)
 29638  002CD6  24F3               	addwf	prodl,w,c
 29639  002CD8  6ED9               	movwf	fsr2l,c
 29640  002CDA  0E01               	movlw	high (_display_content+60)
 29641  002CDC  20F4               	addwfc	prodh,w,c
 29642  002CDE  6EDA               	movwf	fsr2h,c
 29643  002CE0  0008               	tblrd		*
 29644  002CE2  CFF5 FFDF          	movff	tablat,indf2
 29645  002CE6  2A28               	incf	__display_found@cntr,f,c
 29646  002CE8                     l1601:
 29647  002CE8  5028               	movf	__display_found@cntr,w,c
 29648  002CEA  0D01               	mullw	1
 29649  002CEC  0E20               	movlw	low _found_line4
 29650  002CEE  24F3               	addwf	prodl,w,c
 29651  002CF0  6EF6               	movwf	tblptrl,c
 29652  002CF2  0E8D               	movlw	high _found_line4
 29653  002CF4  20F4               	addwfc	prodh,w,c
 29654  002CF6  6EF7               	movwf	tblptrh,c
 29655  002CF8                     	if	1	;There are 3 active tblptr bytes
 29656  002CF8  6AF8               	clrf	tblptru,c
 29657  002CFA  0E00               	movlw	low (__mediumconst shr (0+16))
 29658  002CFC  22F8               	addwfc	tblptru,f,c
 29659  002CFE                     	endif
 29660  002CFE  0008               	tblrd		*
 29661  002D00  50F5               	movf	tablat,w,c
 29662  002D02  0900               	iorlw	0
 29663  002D04  B4D8               	btfsc	status,2,c
 29664  002D06  0012               	return	
 29665  002D08  D7D8               	goto	l1602
 29666  002D0A                     __end_of__display_found:
 29667                           	opt stack 0
 29668                           tosu	equ	0xFFF
 29669                           tosh	equ	0xFFE
 29670                           tosl	equ	0xFFD
 29671                           pclath	equ	0xFFA
 29672                           tblptru	equ	0xFF8
 29673                           tblptrh	equ	0xFF7
 29674                           tblptrl	equ	0xFF6
 29675                           tablat	equ	0xFF5
 29676                           prodh	equ	0xFF4
 29677                           prodl	equ	0xFF3
 29678                           intcon	equ	0xFF2
 29679                           intcon2	equ	0xFF1
 29680                           intcon3	equ	0xFF0
 29681                           indf0	equ	0xFEF
 29682                           postinc0	equ	0xFEE
 29683                           fsr0h	equ	0xFEA
 29684                           fsr0l	equ	0xFE9
 29685                           wreg	equ	0xFE8
 29686                           indf1	equ	0xFE7
 29687                           postdec1	equ	0xFE5
 29688                           plusw1	equ	0xFE3
 29689                           fsr1h	equ	0xFE2
 29690                           fsr1l	equ	0xFE1
 29691                           indf2	equ	0xFDF
 29692                           postinc2	equ	0xFDE
 29693                           postdec2	equ	0xFDD
 29694                           plusw2	equ	0xFDB
 29695                           fsr2h	equ	0xFDA
 29696                           fsr2l	equ	0xFD9
 29697                           status	equ	0xFD8
 29698                           
 29699 ;; *************** function _bootloader_get_file_size *****************
 29700 ;; Defined at:
 29701 ;;		line 427 in file "bootloader.c"
 29702 ;; Parameters:    Size  Location     Type
 29703 ;;		None
 29704 ;; Auto vars:     Size  Location     Type
 29705 ;;		None
 29706 ;; Return value:  Size  Location     Type
 29707 ;;                  4    0[COMRAM] unsigned long 
 29708 ;; Registers used:
 29709 ;;		None
 29710 ;; Tracked objects:
 29711 ;;		On entry : 0/0
 29712 ;;		On exit  : 0/0
 29713 ;;		Unchanged: 0/0
 29714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29715 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29718 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29719 ;;Total ram usage:        4 bytes
 29720 ;; Hardware stack levels used:    1
 29721 ;; This function calls:
 29722 ;;		Nothing
 29723 ;; This function is called by:
 29724 ;;		__display_found
 29725 ;;		__fill_buffer_get_bootloader_details
 29726 ;; This function uses a non-reentrant model
 29727 ;;
 29728                           
 29729                           	psect	text142
 29730  007F8E                     __ptext142:
 29731                           	opt stack 0
 29732  007F8E                     _bootloader_get_file_size:
 29733                           	opt stack 25
 29734                           
 29735                           ;bootloader.c: 429: return hex_file_size;
 29736                           
 29737                           ;incstack = 0
 29738  007F8E  C078  F001         	movff	_hex_file_size,?_bootloader_get_file_size
 29739  007F92  C079  F002         	movff	_hex_file_size+1,?_bootloader_get_file_size+1
 29740  007F96  C07A  F003         	movff	_hex_file_size+2,?_bootloader_get_file_size+2
 29741  007F9A  C07B  F004         	movff	_hex_file_size+3,?_bootloader_get_file_size+3
 29742  007F9E  0012               	return		;funcret
 29743  007FA0                     __end_of_bootloader_get_file_size:
 29744                           	opt stack 0
 29745                           tosu	equ	0xFFF
 29746                           tosh	equ	0xFFE
 29747                           tosl	equ	0xFFD
 29748                           pclath	equ	0xFFA
 29749                           tblptru	equ	0xFF8
 29750                           tblptrh	equ	0xFF7
 29751                           tblptrl	equ	0xFF6
 29752                           tablat	equ	0xFF5
 29753                           prodh	equ	0xFF4
 29754                           prodl	equ	0xFF3
 29755                           intcon	equ	0xFF2
 29756                           intcon2	equ	0xFF1
 29757                           intcon3	equ	0xFF0
 29758                           indf0	equ	0xFEF
 29759                           postinc0	equ	0xFEE
 29760                           fsr0h	equ	0xFEA
 29761                           fsr0l	equ	0xFE9
 29762                           wreg	equ	0xFE8
 29763                           indf1	equ	0xFE7
 29764                           postdec1	equ	0xFE5
 29765                           plusw1	equ	0xFE3
 29766                           fsr1h	equ	0xFE2
 29767                           fsr1l	equ	0xFE1
 29768                           indf2	equ	0xFDF
 29769                           postinc2	equ	0xFDE
 29770                           postdec2	equ	0xFDD
 29771                           plusw2	equ	0xFDB
 29772                           fsr2h	equ	0xFDA
 29773                           fsr2l	equ	0xFD9
 29774                           status	equ	0xFD8
 29775                           
 29776 ;; *************** function __display_failed *****************
 29777 ;; Defined at:
 29778 ;;		line 455 in file "display.c"
 29779 ;; Parameters:    Size  Location     Type
 29780 ;;		None
 29781 ;; Auto vars:     Size  Location     Type
 29782 ;;  cntr            1   36[COMRAM] unsigned char 
 29783 ;;  start           1    0        unsigned char 
 29784 ;; Return value:  Size  Location     Type
 29785 ;;                  1    wreg      void 
 29786 ;; Registers used:
 29787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29788 ;; Tracked objects:
 29789 ;;		On entry : 0/0
 29790 ;;		On exit  : 0/0
 29791 ;;		Unchanged: 0/0
 29792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29794 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29796 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29797 ;;Total ram usage:        1 bytes
 29798 ;; Hardware stack levels used:    1
 29799 ;; Hardware stack levels required when called:    5
 29800 ;; This function calls:
 29801 ;;		__display_itoa_u16
 29802 ;;		__display_itoa_u32
 29803 ;;		_bootloader_get_entries
 29804 ;;		_bootloader_get_error
 29805 ;;		_bootloader_get_rec_address
 29806 ;; This function is called by:
 29807 ;;		_display_prepare
 29808 ;; This function uses a non-reentrant model
 29809 ;;
 29810                           
 29811                           	psect	text143
 29812  000F36                     __ptext143:
 29813                           	opt stack 0
 29814  000F36                     __display_failed:
 29815                           	opt stack 21
 29816                           
 29817                           ;display.c: 457: uint8_t cntr;;display.c: 458: uint8_t start;;display.c: 459: cntr = 0;
 29818                           
 29819                           ;incstack = 0
 29820  000F36  0E00               	movlw	0
 29821  000F38  6E25               	movwf	__display_failed@cntr,c
 29822                           
 29823                           ;display.c: 460: while(failed_line1[cntr])
 29824  000F3A  D017               	goto	l1634
 29825  000F3C                     
 29826                           ;display.c: 461: display_content[0][cntr] = failed_line1[cntr++];
 29827  000F3C  5025               	movf	__display_failed@cntr,w,c
 29828  000F3E  0D01               	mullw	1
 29829  000F40  0EA4               	movlw	low _failed_line1
 29830  000F42  24F3               	addwf	prodl,w,c
 29831  000F44  6EF6               	movwf	tblptrl,c
 29832  000F46  0E8D               	movlw	high _failed_line1
 29833  000F48  20F4               	addwfc	prodh,w,c
 29834  000F4A  6EF7               	movwf	tblptrh,c
 29835  000F4C                     	if	1	;There are 3 active tblptr bytes
 29836  000F4C  6AF8               	clrf	tblptru,c
 29837  000F4E  0E00               	movlw	low (__mediumconst shr (0+16))
 29838  000F50  22F8               	addwfc	tblptru,f,c
 29839  000F52                     	endif
 29840  000F52  5025               	movf	__display_failed@cntr,w,c
 29841  000F54  0D01               	mullw	1
 29842  000F56  0E76               	movlw	low _display_content
 29843  000F58  24F3               	addwf	prodl,w,c
 29844  000F5A  6ED9               	movwf	fsr2l,c
 29845  000F5C  0E01               	movlw	high _display_content
 29846  000F5E  20F4               	addwfc	prodh,w,c
 29847  000F60  6EDA               	movwf	fsr2h,c
 29848  000F62  0008               	tblrd		*
 29849  000F64  CFF5 FFDF          	movff	tablat,indf2
 29850  000F68  2A25               	incf	__display_failed@cntr,f,c
 29851  000F6A                     l1634:
 29852  000F6A  5025               	movf	__display_failed@cntr,w,c
 29853  000F6C  0D01               	mullw	1
 29854  000F6E  0EA4               	movlw	low _failed_line1
 29855  000F70  24F3               	addwf	prodl,w,c
 29856  000F72  6EF6               	movwf	tblptrl,c
 29857  000F74  0E8D               	movlw	high _failed_line1
 29858  000F76  20F4               	addwfc	prodh,w,c
 29859  000F78  6EF7               	movwf	tblptrh,c
 29860  000F7A                     	if	1	;There are 3 active tblptr bytes
 29861  000F7A  6AF8               	clrf	tblptru,c
 29862  000F7C  0E00               	movlw	low (__mediumconst shr (0+16))
 29863  000F7E  22F8               	addwfc	tblptru,f,c
 29864  000F80                     	endif
 29865  000F80  0008               	tblrd		*
 29866  000F82  50F5               	movf	tablat,w,c
 29867  000F84  0900               	iorlw	0
 29868  000F86  A4D8               	btfss	status,2,c
 29869  000F88  D7D9               	goto	l1635
 29870                           
 29871                           ;display.c: 462: cntr = 0;
 29872  000F8A  0E00               	movlw	0
 29873  000F8C  6E25               	movwf	__display_failed@cntr,c
 29874                           
 29875                           ;display.c: 463: while(failed_line2[cntr])
 29876  000F8E  D017               	goto	l1637
 29877  000F90                     
 29878                           ;display.c: 464: display_content[1][cntr] = failed_line2[cntr++];
 29879  000F90  5025               	movf	__display_failed@cntr,w,c
 29880  000F92  0D01               	mullw	1
 29881  000F94  0E0E               	movlw	low _failed_line2
 29882  000F96  24F3               	addwf	prodl,w,c
 29883  000F98  6EF6               	movwf	tblptrl,c
 29884  000F9A  0E8D               	movlw	high _failed_line2
 29885  000F9C  20F4               	addwfc	prodh,w,c
 29886  000F9E  6EF7               	movwf	tblptrh,c
 29887  000FA0                     	if	1	;There are 3 active tblptr bytes
 29888  000FA0  6AF8               	clrf	tblptru,c
 29889  000FA2  0E00               	movlw	low (__mediumconst shr (0+16))
 29890  000FA4  22F8               	addwfc	tblptru,f,c
 29891  000FA6                     	endif
 29892  000FA6  5025               	movf	__display_failed@cntr,w,c
 29893  000FA8  0D01               	mullw	1
 29894  000FAA  0E8A               	movlw	low (_display_content+20)
 29895  000FAC  24F3               	addwf	prodl,w,c
 29896  000FAE  6ED9               	movwf	fsr2l,c
 29897  000FB0  0E01               	movlw	high (_display_content+20)
 29898  000FB2  20F4               	addwfc	prodh,w,c
 29899  000FB4  6EDA               	movwf	fsr2h,c
 29900  000FB6  0008               	tblrd		*
 29901  000FB8  CFF5 FFDF          	movff	tablat,indf2
 29902  000FBC  2A25               	incf	__display_failed@cntr,f,c
 29903  000FBE                     l1637:
 29904  000FBE  5025               	movf	__display_failed@cntr,w,c
 29905  000FC0  0D01               	mullw	1
 29906  000FC2  0E0E               	movlw	low _failed_line2
 29907  000FC4  24F3               	addwf	prodl,w,c
 29908  000FC6  6EF6               	movwf	tblptrl,c
 29909  000FC8  0E8D               	movlw	high _failed_line2
 29910  000FCA  20F4               	addwfc	prodh,w,c
 29911  000FCC  6EF7               	movwf	tblptrh,c
 29912  000FCE                     	if	1	;There are 3 active tblptr bytes
 29913  000FCE  6AF8               	clrf	tblptru,c
 29914  000FD0  0E00               	movlw	low (__mediumconst shr (0+16))
 29915  000FD2  22F8               	addwfc	tblptru,f,c
 29916  000FD4                     	endif
 29917  000FD4  0008               	tblrd		*
 29918  000FD6  50F5               	movf	tablat,w,c
 29919  000FD8  0900               	iorlw	0
 29920  000FDA  A4D8               	btfss	status,2,c
 29921  000FDC  D7D9               	goto	l1638
 29922                           
 29923                           ;display.c: 466: cntr = 0;
 29924  000FDE  0E00               	movlw	0
 29925  000FE0  6E25               	movwf	__display_failed@cntr,c
 29926                           
 29927                           ;display.c: 467: switch(bootloader_get_error())
 29928  000FE2  D0D6               	goto	l1640
 29929  000FE4                     
 29930                           ;display.c: 471: display_content[2][cntr] = failed_line3_startCode[cntr++];
 29931  000FE4  5025               	movf	__display_failed@cntr,w,c
 29932  000FE6  0D01               	mullw	1
 29933  000FE8  0ED6               	movlw	low _failed_line3_startCode
 29934  000FEA  24F3               	addwf	prodl,w,c
 29935  000FEC  6EF6               	movwf	tblptrl,c
 29936  000FEE  0E8C               	movlw	high _failed_line3_startCode
 29937  000FF0  20F4               	addwfc	prodh,w,c
 29938  000FF2  6EF7               	movwf	tblptrh,c
 29939  000FF4                     	if	1	;There are 3 active tblptr bytes
 29940  000FF4  6AF8               	clrf	tblptru,c
 29941  000FF6  0E00               	movlw	low (__mediumconst shr (0+16))
 29942  000FF8  22F8               	addwfc	tblptru,f,c
 29943  000FFA                     	endif
 29944  000FFA  5025               	movf	__display_failed@cntr,w,c
 29945  000FFC  0D01               	mullw	1
 29946  000FFE  0E9E               	movlw	low (_display_content+40)
 29947  001000  24F3               	addwf	prodl,w,c
 29948  001002  6ED9               	movwf	fsr2l,c
 29949  001004  0E01               	movlw	high (_display_content+40)
 29950  001006  20F4               	addwfc	prodh,w,c
 29951  001008  6EDA               	movwf	fsr2h,c
 29952  00100A  0008               	tblrd		*
 29953  00100C  CFF5 FFDF          	movff	tablat,indf2
 29954  001010  2A25               	incf	__display_failed@cntr,f,c
 29955  001012  5025               	movf	__display_failed@cntr,w,c
 29956  001014  0D01               	mullw	1
 29957  001016  0ED6               	movlw	low _failed_line3_startCode
 29958  001018  24F3               	addwf	prodl,w,c
 29959  00101A  6EF6               	movwf	tblptrl,c
 29960  00101C  0E8C               	movlw	high _failed_line3_startCode
 29961  00101E  20F4               	addwfc	prodh,w,c
 29962  001020  6EF7               	movwf	tblptrh,c
 29963  001022                     	if	1	;There are 3 active tblptr bytes
 29964  001022  6AF8               	clrf	tblptru,c
 29965  001024  0E00               	movlw	low (__mediumconst shr (0+16))
 29966  001026  22F8               	addwfc	tblptru,f,c
 29967  001028                     	endif
 29968  001028  0008               	tblrd		*
 29969  00102A  50F5               	movf	tablat,w,c
 29970  00102C  0900               	iorlw	0
 29971  00102E  B4D8               	btfsc	status,2,c
 29972  001030  D0C0               	goto	l1645
 29973  001032  D7D8               	goto	l1643
 29974  001034                     
 29975                           ;display.c: 476: display_content[2][cntr] = failed_line3_checksum[cntr++];
 29976  001034  5025               	movf	__display_failed@cntr,w,c
 29977  001036  0D01               	mullw	1
 29978  001038  0E04               	movlw	low _failed_line3_checksum
 29979  00103A  24F3               	addwf	prodl,w,c
 29980  00103C  6EF6               	movwf	tblptrl,c
 29981  00103E  0E8E               	movlw	high _failed_line3_checksum
 29982  001040  20F4               	addwfc	prodh,w,c
 29983  001042  6EF7               	movwf	tblptrh,c
 29984  001044                     	if	1	;There are 3 active tblptr bytes
 29985  001044  6AF8               	clrf	tblptru,c
 29986  001046  0E00               	movlw	low (__mediumconst shr (0+16))
 29987  001048  22F8               	addwfc	tblptru,f,c
 29988  00104A                     	endif
 29989  00104A  5025               	movf	__display_failed@cntr,w,c
 29990  00104C  0D01               	mullw	1
 29991  00104E  0E9E               	movlw	low (_display_content+40)
 29992  001050  24F3               	addwf	prodl,w,c
 29993  001052  6ED9               	movwf	fsr2l,c
 29994  001054  0E01               	movlw	high (_display_content+40)
 29995  001056  20F4               	addwfc	prodh,w,c
 29996  001058  6EDA               	movwf	fsr2h,c
 29997  00105A  0008               	tblrd		*
 29998  00105C  CFF5 FFDF          	movff	tablat,indf2
 29999  001060  2A25               	incf	__display_failed@cntr,f,c
 30000  001062  5025               	movf	__display_failed@cntr,w,c
 30001  001064  0D01               	mullw	1
 30002  001066  0E04               	movlw	low _failed_line3_checksum
 30003  001068  24F3               	addwf	prodl,w,c
 30004  00106A  6EF6               	movwf	tblptrl,c
 30005  00106C  0E8E               	movlw	high _failed_line3_checksum
 30006  00106E  20F4               	addwfc	prodh,w,c
 30007  001070  6EF7               	movwf	tblptrh,c
 30008  001072                     	if	1	;There are 3 active tblptr bytes
 30009  001072  6AF8               	clrf	tblptru,c
 30010  001074  0E00               	movlw	low (__mediumconst shr (0+16))
 30011  001076  22F8               	addwfc	tblptru,f,c
 30012  001078                     	endif
 30013  001078  0008               	tblrd		*
 30014  00107A  50F5               	movf	tablat,w,c
 30015  00107C  0900               	iorlw	0
 30016  00107E  B4D8               	btfsc	status,2,c
 30017  001080  D098               	goto	l1645
 30018  001082  D7D8               	goto	l1648
 30019  001084                     
 30020                           ;display.c: 483: display_content[2][cntr] = failed_line3_noNextRecord[cntr++];
 30021  001084  5025               	movf	__display_failed@cntr,w,c
 30022  001086  0D01               	mullw	1
 30023  001088  0E13               	movlw	low _failed_line3_noNextRecord
 30024  00108A  24F3               	addwf	prodl,w,c
 30025  00108C  6EF6               	movwf	tblptrl,c
 30026  00108E  0E8E               	movlw	high _failed_line3_noNextRecord
 30027  001090  20F4               	addwfc	prodh,w,c
 30028  001092  6EF7               	movwf	tblptrh,c
 30029  001094                     	if	1	;There are 3 active tblptr bytes
 30030  001094  6AF8               	clrf	tblptru,c
 30031  001096  0E00               	movlw	low (__mediumconst shr (0+16))
 30032  001098  22F8               	addwfc	tblptru,f,c
 30033  00109A                     	endif
 30034  00109A  5025               	movf	__display_failed@cntr,w,c
 30035  00109C  0D01               	mullw	1
 30036  00109E  0E9E               	movlw	low (_display_content+40)
 30037  0010A0  24F3               	addwf	prodl,w,c
 30038  0010A2  6ED9               	movwf	fsr2l,c
 30039  0010A4  0E01               	movlw	high (_display_content+40)
 30040  0010A6  20F4               	addwfc	prodh,w,c
 30041  0010A8  6EDA               	movwf	fsr2h,c
 30042  0010AA  0008               	tblrd		*
 30043  0010AC  CFF5 FFDF          	movff	tablat,indf2
 30044  0010B0  2A25               	incf	__display_failed@cntr,f,c
 30045  0010B2  5025               	movf	__display_failed@cntr,w,c
 30046  0010B4  0D01               	mullw	1
 30047  0010B6  0E13               	movlw	low _failed_line3_noNextRecord
 30048  0010B8  24F3               	addwf	prodl,w,c
 30049  0010BA  6EF6               	movwf	tblptrl,c
 30050  0010BC  0E8E               	movlw	high _failed_line3_noNextRecord
 30051  0010BE  20F4               	addwfc	prodh,w,c
 30052  0010C0  6EF7               	movwf	tblptrh,c
 30053  0010C2                     	if	1	;There are 3 active tblptr bytes
 30054  0010C2  6AF8               	clrf	tblptru,c
 30055  0010C4  0E00               	movlw	low (__mediumconst shr (0+16))
 30056  0010C6  22F8               	addwfc	tblptru,f,c
 30057  0010C8                     	endif
 30058  0010C8  0008               	tblrd		*
 30059  0010CA  50F5               	movf	tablat,w,c
 30060  0010CC  0900               	iorlw	0
 30061  0010CE  B4D8               	btfsc	status,2,c
 30062  0010D0  D070               	goto	l1645
 30063  0010D2  D7D8               	goto	l1652
 30064  0010D4                     
 30065                           ;display.c: 488: display_content[2][cntr] = failed_line3_dataTooLong[cntr++];
 30066  0010D4  5025               	movf	__display_failed@cntr,w,c
 30067  0010D6  0D01               	mullw	1
 30068  0010D8  0E31               	movlw	low _failed_line3_dataTooLong
 30069  0010DA  24F3               	addwf	prodl,w,c
 30070  0010DC  6EF6               	movwf	tblptrl,c
 30071  0010DE  0E8E               	movlw	high _failed_line3_dataTooLong
 30072  0010E0  20F4               	addwfc	prodh,w,c
 30073  0010E2  6EF7               	movwf	tblptrh,c
 30074  0010E4                     	if	1	;There are 3 active tblptr bytes
 30075  0010E4  6AF8               	clrf	tblptru,c
 30076  0010E6  0E00               	movlw	low (__mediumconst shr (0+16))
 30077  0010E8  22F8               	addwfc	tblptru,f,c
 30078  0010EA                     	endif
 30079  0010EA  5025               	movf	__display_failed@cntr,w,c
 30080  0010EC  0D01               	mullw	1
 30081  0010EE  0E9E               	movlw	low (_display_content+40)
 30082  0010F0  24F3               	addwf	prodl,w,c
 30083  0010F2  6ED9               	movwf	fsr2l,c
 30084  0010F4  0E01               	movlw	high (_display_content+40)
 30085  0010F6  20F4               	addwfc	prodh,w,c
 30086  0010F8  6EDA               	movwf	fsr2h,c
 30087  0010FA  0008               	tblrd		*
 30088  0010FC  CFF5 FFDF          	movff	tablat,indf2
 30089  001100  2A25               	incf	__display_failed@cntr,f,c
 30090  001102  5025               	movf	__display_failed@cntr,w,c
 30091  001104  0D01               	mullw	1
 30092  001106  0E31               	movlw	low _failed_line3_dataTooLong
 30093  001108  24F3               	addwf	prodl,w,c
 30094  00110A  6EF6               	movwf	tblptrl,c
 30095  00110C  0E8E               	movlw	high _failed_line3_dataTooLong
 30096  00110E  20F4               	addwfc	prodh,w,c
 30097  001110  6EF7               	movwf	tblptrh,c
 30098  001112                     	if	1	;There are 3 active tblptr bytes
 30099  001112  6AF8               	clrf	tblptru,c
 30100  001114  0E00               	movlw	low (__mediumconst shr (0+16))
 30101  001116  22F8               	addwfc	tblptru,f,c
 30102  001118                     	endif
 30103  001118  0008               	tblrd		*
 30104  00111A  50F5               	movf	tablat,w,c
 30105  00111C  0900               	iorlw	0
 30106  00111E  B4D8               	btfsc	status,2,c
 30107  001120  D048               	goto	l1645
 30108  001122  D7D8               	goto	l1656
 30109  001124                     
 30110                           ;display.c: 493: display_content[2][cntr] = failed_line3_addressRange[cntr++];
 30111  001124  5025               	movf	__display_failed@cntr,w,c
 30112  001126  0D01               	mullw	1
 30113  001128  0EAE               	movlw	low _failed_line3_addressRange
 30114  00112A  24F3               	addwf	prodl,w,c
 30115  00112C  6EF6               	movwf	tblptrl,c
 30116  00112E  0E8C               	movlw	high _failed_line3_addressRange
 30117  001130  20F4               	addwfc	prodh,w,c
 30118  001132  6EF7               	movwf	tblptrh,c
 30119  001134                     	if	1	;There are 3 active tblptr bytes
 30120  001134  6AF8               	clrf	tblptru,c
 30121  001136  0E00               	movlw	low (__mediumconst shr (0+16))
 30122  001138  22F8               	addwfc	tblptru,f,c
 30123  00113A                     	endif
 30124  00113A  5025               	movf	__display_failed@cntr,w,c
 30125  00113C  0D01               	mullw	1
 30126  00113E  0E9E               	movlw	low (_display_content+40)
 30127  001140  24F3               	addwf	prodl,w,c
 30128  001142  6ED9               	movwf	fsr2l,c
 30129  001144  0E01               	movlw	high (_display_content+40)
 30130  001146  20F4               	addwfc	prodh,w,c
 30131  001148  6EDA               	movwf	fsr2h,c
 30132  00114A  0008               	tblrd		*
 30133  00114C  CFF5 FFDF          	movff	tablat,indf2
 30134  001150  2A25               	incf	__display_failed@cntr,f,c
 30135  001152  5025               	movf	__display_failed@cntr,w,c
 30136  001154  0D01               	mullw	1
 30137  001156  0EAE               	movlw	low _failed_line3_addressRange
 30138  001158  24F3               	addwf	prodl,w,c
 30139  00115A  6EF6               	movwf	tblptrl,c
 30140  00115C  0E8C               	movlw	high _failed_line3_addressRange
 30141  00115E  20F4               	addwfc	prodh,w,c
 30142  001160  6EF7               	movwf	tblptrh,c
 30143  001162                     	if	1	;There are 3 active tblptr bytes
 30144  001162  6AF8               	clrf	tblptru,c
 30145  001164  0E00               	movlw	low (__mediumconst shr (0+16))
 30146  001166  22F8               	addwfc	tblptru,f,c
 30147  001168                     	endif
 30148  001168  0008               	tblrd		*
 30149  00116A  50F5               	movf	tablat,w,c
 30150  00116C  0900               	iorlw	0
 30151  00116E  A4D8               	btfss	status,2,c
 30152  001170  D7D9               	goto	l1660
 30153                           
 30154                           ;display.c: 494: _display_itoa_u32(bootloader_get_rec_address(), &display_content[3][14]
      +                          );
 30155  001172  EC34  F040         	call	_bootloader_get_rec_address	;wreg free
 30156  001176  C001  F01F         	movff	?_bootloader_get_rec_address,__display_itoa_u32@value
 30157  00117A  C002  F020         	movff	?_bootloader_get_rec_address+1,__display_itoa_u32@value+1
 30158  00117E  6A21               	clrf	__display_itoa_u32@value+2,c
 30159  001180  6A22               	clrf	__display_itoa_u32@value+3,c
 30160  001182  0EC0               	movlw	low (_display_content+74)
 30161  001184  6E23               	movwf	__display_itoa_u32@text,c
 30162  001186  0E01               	movlw	high (_display_content+74)
 30163  001188  6E24               	movwf	__display_itoa_u32@text+1,c
 30164  00118A  ECE4  F005         	call	__display_itoa_u32	;wreg free
 30165                           
 30166                           ;display.c: 497: }
 30167                           
 30168                           ;display.c: 495: break;
 30169  00118E  D011               	goto	l1645
 30170  001190                     l1640:
 30171  001190  EC72  F040         	call	_bootloader_get_error	;wreg free
 30172                           
 30173                           ; Switch size 1, requested type "space"
 30174                           ; Number of cases is 5, Range of values is 11 to 15
 30175                           ; switch strategies available:
 30176                           ; Name         Instructions Cycles
 30177                           ; simple_byte           16     9 (average)
 30178                           ;	Chosen strategy is simple_byte
 30179  001194  0A0B               	xorlw	11	; case 11
 30180  001196  B4D8               	btfsc	status,2,c
 30181  001198  D7DC               	goto	l1659
 30182  00119A  0A07               	xorlw	7	; case 12
 30183  00119C  B4D8               	btfsc	status,2,c
 30184  00119E  D7B1               	goto	l1655
 30185  0011A0  0A01               	xorlw	1	; case 13
 30186  0011A2  B4D8               	btfsc	status,2,c
 30187  0011A4  D786               	goto	l1651
 30188  0011A6  0A03               	xorlw	3	; case 14
 30189  0011A8  B4D8               	btfsc	status,2,c
 30190  0011AA  D75B               	goto	l1647
 30191  0011AC  0A01               	xorlw	1	; case 15
 30192  0011AE  B4D8               	btfsc	status,2,c
 30193  0011B0  D730               	goto	l1642
 30194  0011B2                     l1645:
 30195                           
 30196                           ;display.c: 499: cntr = 0;
 30197  0011B2  0E00               	movlw	0
 30198  0011B4  6E25               	movwf	__display_failed@cntr,c
 30199                           
 30200                           ;display.c: 500: while(failed_line4[cntr])
 30201  0011B6  D017               	goto	l1662
 30202  0011B8                     
 30203                           ;display.c: 501: display_content[3][cntr] = failed_line4[cntr++];
 30204  0011B8  5025               	movf	__display_failed@cntr,w,c
 30205  0011BA  0D01               	mullw	1
 30206  0011BC  0E6B               	movlw	low _failed_line4
 30207  0011BE  24F3               	addwf	prodl,w,c
 30208  0011C0  6EF6               	movwf	tblptrl,c
 30209  0011C2  0E8E               	movlw	high _failed_line4
 30210  0011C4  20F4               	addwfc	prodh,w,c
 30211  0011C6  6EF7               	movwf	tblptrh,c
 30212  0011C8                     	if	1	;There are 3 active tblptr bytes
 30213  0011C8  6AF8               	clrf	tblptru,c
 30214  0011CA  0E00               	movlw	low (__mediumconst shr (0+16))
 30215  0011CC  22F8               	addwfc	tblptru,f,c
 30216  0011CE                     	endif
 30217  0011CE  5025               	movf	__display_failed@cntr,w,c
 30218  0011D0  0D01               	mullw	1
 30219  0011D2  0EB2               	movlw	low (_display_content+60)
 30220  0011D4  24F3               	addwf	prodl,w,c
 30221  0011D6  6ED9               	movwf	fsr2l,c
 30222  0011D8  0E01               	movlw	high (_display_content+60)
 30223  0011DA  20F4               	addwfc	prodh,w,c
 30224  0011DC  6EDA               	movwf	fsr2h,c
 30225  0011DE  0008               	tblrd		*
 30226  0011E0  CFF5 FFDF          	movff	tablat,indf2
 30227  0011E4  2A25               	incf	__display_failed@cntr,f,c
 30228  0011E6                     l1662:
 30229  0011E6  5025               	movf	__display_failed@cntr,w,c
 30230  0011E8  0D01               	mullw	1
 30231  0011EA  0E6B               	movlw	low _failed_line4
 30232  0011EC  24F3               	addwf	prodl,w,c
 30233  0011EE  6EF6               	movwf	tblptrl,c
 30234  0011F0  0E8E               	movlw	high _failed_line4
 30235  0011F2  20F4               	addwfc	prodh,w,c
 30236  0011F4  6EF7               	movwf	tblptrh,c
 30237  0011F6                     	if	1	;There are 3 active tblptr bytes
 30238  0011F6  6AF8               	clrf	tblptru,c
 30239  0011F8  0E00               	movlw	low (__mediumconst shr (0+16))
 30240  0011FA  22F8               	addwfc	tblptru,f,c
 30241  0011FC                     	endif
 30242  0011FC  0008               	tblrd		*
 30243  0011FE  50F5               	movf	tablat,w,c
 30244  001200  0900               	iorlw	0
 30245  001202  A4D8               	btfss	status,2,c
 30246  001204  D7D9               	goto	l1663
 30247                           
 30248                           ;display.c: 502: _display_itoa_u16(bootloader_get_entries(), &display_content[3][cntr]);
 30249  001206  EC39  F040         	call	_bootloader_get_entries	;wreg free
 30250  00120A  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 30251  00120E  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 30252  001212  6A1B               	clrf	__display_itoa_u16@value+2,c
 30253  001214  6A1C               	clrf	__display_itoa_u16@value+3,c
 30254  001216  5025               	movf	__display_failed@cntr,w,c
 30255  001218  0D01               	mullw	1
 30256  00121A  0EB2               	movlw	low (_display_content+60)
 30257  00121C  24F3               	addwf	prodl,w,c
 30258  00121E  6E1D               	movwf	__display_itoa_u16@text,c
 30259  001220  0E01               	movlw	high (_display_content+60)
 30260  001222  20F4               	addwfc	prodh,w,c
 30261  001224  6E1E               	movwf	__display_itoa_u16@text+1,c
 30262  001226  EC23  F02A         	call	__display_itoa_u16	;wreg free
 30263  00122A  0012               	return		;funcret
 30264  00122C                     __end_of__display_failed:
 30265                           	opt stack 0
 30266                           tosu	equ	0xFFF
 30267                           tosh	equ	0xFFE
 30268                           tosl	equ	0xFFD
 30269                           pclath	equ	0xFFA
 30270                           tblptru	equ	0xFF8
 30271                           tblptrh	equ	0xFF7
 30272                           tblptrl	equ	0xFF6
 30273                           tablat	equ	0xFF5
 30274                           prodh	equ	0xFF4
 30275                           prodl	equ	0xFF3
 30276                           intcon	equ	0xFF2
 30277                           intcon2	equ	0xFF1
 30278                           intcon3	equ	0xFF0
 30279                           indf0	equ	0xFEF
 30280                           postinc0	equ	0xFEE
 30281                           fsr0h	equ	0xFEA
 30282                           fsr0l	equ	0xFE9
 30283                           wreg	equ	0xFE8
 30284                           indf1	equ	0xFE7
 30285                           postdec1	equ	0xFE5
 30286                           plusw1	equ	0xFE3
 30287                           fsr1h	equ	0xFE2
 30288                           fsr1l	equ	0xFE1
 30289                           indf2	equ	0xFDF
 30290                           postinc2	equ	0xFDE
 30291                           postdec2	equ	0xFDD
 30292                           plusw2	equ	0xFDB
 30293                           fsr2h	equ	0xFDA
 30294                           fsr2l	equ	0xFD9
 30295                           status	equ	0xFD8
 30296                           
 30297 ;; *************** function _bootloader_get_rec_address *****************
 30298 ;; Defined at:
 30299 ;;		line 452 in file "bootloader.c"
 30300 ;; Parameters:    Size  Location     Type
 30301 ;;		None
 30302 ;; Auto vars:     Size  Location     Type
 30303 ;;		None
 30304 ;; Return value:  Size  Location     Type
 30305 ;;                  2    0[COMRAM] unsigned int 
 30306 ;; Registers used:
 30307 ;;		None
 30308 ;; Tracked objects:
 30309 ;;		On entry : 0/0
 30310 ;;		On exit  : 0/0
 30311 ;;		Unchanged: 0/0
 30312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30316 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30317 ;;Total ram usage:        2 bytes
 30318 ;; Hardware stack levels used:    1
 30319 ;; This function calls:
 30320 ;;		Nothing
 30321 ;; This function is called by:
 30322 ;;		__display_failed
 30323 ;;		__fill_buffer_get_bootloader_details
 30324 ;; This function uses a non-reentrant model
 30325 ;;
 30326                           
 30327                           	psect	text144
 30328  008068                     __ptext144:
 30329                           	opt stack 0
 30330  008068                     _bootloader_get_rec_address:
 30331                           	opt stack 25
 30332                           
 30333                           ;bootloader.c: 455: return hex_file_entry.address;
 30334                           
 30335                           ;incstack = 0
 30336  008068  C1C8  F001         	movff	_hex_file_entry+2,?_bootloader_get_rec_address
 30337  00806C  C1C9  F002         	movff	_hex_file_entry+3,?_bootloader_get_rec_address+1
 30338  008070  0012               	return		;funcret
 30339  008072                     __end_of_bootloader_get_rec_address:
 30340                           	opt stack 0
 30341                           tosu	equ	0xFFF
 30342                           tosh	equ	0xFFE
 30343                           tosl	equ	0xFFD
 30344                           pclath	equ	0xFFA
 30345                           tblptru	equ	0xFF8
 30346                           tblptrh	equ	0xFF7
 30347                           tblptrl	equ	0xFF6
 30348                           tablat	equ	0xFF5
 30349                           prodh	equ	0xFF4
 30350                           prodl	equ	0xFF3
 30351                           intcon	equ	0xFF2
 30352                           intcon2	equ	0xFF1
 30353                           intcon3	equ	0xFF0
 30354                           indf0	equ	0xFEF
 30355                           postinc0	equ	0xFEE
 30356                           fsr0h	equ	0xFEA
 30357                           fsr0l	equ	0xFE9
 30358                           wreg	equ	0xFE8
 30359                           indf1	equ	0xFE7
 30360                           postdec1	equ	0xFE5
 30361                           plusw1	equ	0xFE3
 30362                           fsr1h	equ	0xFE2
 30363                           fsr1l	equ	0xFE1
 30364                           indf2	equ	0xFDF
 30365                           postinc2	equ	0xFDE
 30366                           postdec2	equ	0xFDD
 30367                           plusw2	equ	0xFDB
 30368                           fsr2h	equ	0xFDA
 30369                           fsr2l	equ	0xFD9
 30370                           status	equ	0xFD8
 30371                           
 30372 ;; *************** function _bootloader_get_error *****************
 30373 ;; Defined at:
 30374 ;;		line 442 in file "bootloader.c"
 30375 ;; Parameters:    Size  Location     Type
 30376 ;;		None
 30377 ;; Auto vars:     Size  Location     Type
 30378 ;;		None
 30379 ;; Return value:  Size  Location     Type
 30380 ;;                  1    wreg      enum E7014
 30381 ;; Registers used:
 30382 ;;		wreg, status,2
 30383 ;; Tracked objects:
 30384 ;;		On entry : 0/0
 30385 ;;		On exit  : 0/0
 30386 ;;		Unchanged: 0/0
 30387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30392 ;;Total ram usage:        0 bytes
 30393 ;; Hardware stack levels used:    1
 30394 ;; This function calls:
 30395 ;;		Nothing
 30396 ;; This function is called by:
 30397 ;;		__display_failed
 30398 ;;		__fill_buffer_get_bootloader_details
 30399 ;; This function uses a non-reentrant model
 30400 ;;
 30401                           
 30402                           	psect	text145
 30403  0080E4                     __ptext145:
 30404                           	opt stack 0
 30405  0080E4                     _bootloader_get_error:
 30406                           	opt stack 25
 30407                           
 30408                           ;bootloader.c: 444: return last_error;
 30409                           
 30410                           ;incstack = 0
 30411  0080E4  0100               	movlb	0	; () banked
 30412  0080E6  5196               	movf	_last_error& (0+255),w,b
 30413  0080E8  0012               	return	
 30414  0080EA                     __end_of_bootloader_get_error:
 30415                           	opt stack 0
 30416                           tosu	equ	0xFFF
 30417                           tosh	equ	0xFFE
 30418                           tosl	equ	0xFFD
 30419                           pclath	equ	0xFFA
 30420                           tblptru	equ	0xFF8
 30421                           tblptrh	equ	0xFF7
 30422                           tblptrl	equ	0xFF6
 30423                           tablat	equ	0xFF5
 30424                           prodh	equ	0xFF4
 30425                           prodl	equ	0xFF3
 30426                           intcon	equ	0xFF2
 30427                           intcon2	equ	0xFF1
 30428                           intcon3	equ	0xFF0
 30429                           indf0	equ	0xFEF
 30430                           postinc0	equ	0xFEE
 30431                           fsr0h	equ	0xFEA
 30432                           fsr0l	equ	0xFE9
 30433                           wreg	equ	0xFE8
 30434                           indf1	equ	0xFE7
 30435                           postdec1	equ	0xFE5
 30436                           plusw1	equ	0xFE3
 30437                           fsr1h	equ	0xFE2
 30438                           fsr1l	equ	0xFE1
 30439                           indf2	equ	0xFDF
 30440                           postinc2	equ	0xFDE
 30441                           postdec2	equ	0xFDD
 30442                           plusw2	equ	0xFDB
 30443                           fsr2h	equ	0xFDA
 30444                           fsr2l	equ	0xFD9
 30445                           status	equ	0xFD8
 30446                           
 30447 ;; *************** function _bootloader_get_entries *****************
 30448 ;; Defined at:
 30449 ;;		line 432 in file "bootloader.c"
 30450 ;; Parameters:    Size  Location     Type
 30451 ;;		None
 30452 ;; Auto vars:     Size  Location     Type
 30453 ;;		None
 30454 ;; Return value:  Size  Location     Type
 30455 ;;                  2    0[COMRAM] unsigned int 
 30456 ;; Registers used:
 30457 ;;		None
 30458 ;; Tracked objects:
 30459 ;;		On entry : 0/0
 30460 ;;		On exit  : 0/0
 30461 ;;		Unchanged: 0/0
 30462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30463 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30466 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30467 ;;Total ram usage:        2 bytes
 30468 ;; Hardware stack levels used:    1
 30469 ;; This function calls:
 30470 ;;		Nothing
 30471 ;; This function is called by:
 30472 ;;		__display_verify
 30473 ;;		__display_failed
 30474 ;;		__display_programming
 30475 ;;		__fill_buffer_get_bootloader_details
 30476 ;; This function uses a non-reentrant model
 30477 ;;
 30478                           
 30479                           	psect	text146
 30480  008072                     __ptext146:
 30481                           	opt stack 0
 30482  008072                     _bootloader_get_entries:
 30483                           	opt stack 25
 30484                           
 30485                           ;bootloader.c: 434: return hex_file_entries;
 30486                           
 30487                           ; BSR set to: 0
 30488                           ;incstack = 0
 30489  008072  C16A  F001         	movff	_hex_file_entries,?_bootloader_get_entries
 30490  008076  C16B  F002         	movff	_hex_file_entries+1,?_bootloader_get_entries+1
 30491  00807A  0012               	return		;funcret
 30492  00807C                     __end_of_bootloader_get_entries:
 30493                           	opt stack 0
 30494                           tosu	equ	0xFFF
 30495                           tosh	equ	0xFFE
 30496                           tosl	equ	0xFFD
 30497                           pclath	equ	0xFFA
 30498                           tblptru	equ	0xFF8
 30499                           tblptrh	equ	0xFF7
 30500                           tblptrl	equ	0xFF6
 30501                           tablat	equ	0xFF5
 30502                           prodh	equ	0xFF4
 30503                           prodl	equ	0xFF3
 30504                           intcon	equ	0xFF2
 30505                           intcon2	equ	0xFF1
 30506                           intcon3	equ	0xFF0
 30507                           indf0	equ	0xFEF
 30508                           postinc0	equ	0xFEE
 30509                           fsr0h	equ	0xFEA
 30510                           fsr0l	equ	0xFE9
 30511                           wreg	equ	0xFE8
 30512                           indf1	equ	0xFE7
 30513                           postdec1	equ	0xFE5
 30514                           plusw1	equ	0xFE3
 30515                           fsr1h	equ	0xFE2
 30516                           fsr1l	equ	0xFE1
 30517                           indf2	equ	0xFDF
 30518                           postinc2	equ	0xFDE
 30519                           postdec2	equ	0xFDD
 30520                           plusw2	equ	0xFDB
 30521                           fsr2h	equ	0xFDA
 30522                           fsr2l	equ	0xFD9
 30523                           status	equ	0xFD8
 30524                           
 30525 ;; *************** function __display_itoa_u32 *****************
 30526 ;; Defined at:
 30527 ;;		line 172 in file "display.c"
 30528 ;; Parameters:    Size  Location     Type
 30529 ;;  value           4   30[COMRAM] unsigned long 
 30530 ;;  text            2   34[COMRAM] PTR unsigned char 
 30531 ;;		 -> display_content(80), 
 30532 ;; Auto vars:     Size  Location     Type
 30533 ;;		None
 30534 ;; Return value:  Size  Location     Type
 30535 ;;                  1    wreg      unsigned char 
 30536 ;; Registers used:
 30537 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 30538 ;; Tracked objects:
 30539 ;;		On entry : 0/0
 30540 ;;		On exit  : 0/0
 30541 ;;		Unchanged: 0/0
 30542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30543 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30546 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30547 ;;Total ram usage:        6 bytes
 30548 ;; Hardware stack levels used:    1
 30549 ;; Hardware stack levels required when called:    4
 30550 ;; This function calls:
 30551 ;;		___lldiv
 30552 ;;		___llmod
 30553 ;;		__display_itoa_u16
 30554 ;;		_itoa
 30555 ;; This function is called by:
 30556 ;;		__display_start
 30557 ;;		__display_found
 30558 ;;		__display_failed
 30559 ;; This function uses a non-reentrant model
 30560 ;;
 30561                           
 30562                           	psect	text147
 30563  000BC8                     __ptext147:
 30564                           	opt stack 0
 30565  000BC8                     __display_itoa_u32:
 30566                           	opt stack 21
 30567                           
 30568                           ;display.c: 175: if(value<=0x7FFF)
 30569                           
 30570                           ;incstack = 0
 30571  000BC8  5022               	movf	__display_itoa_u32@value+3,w,c
 30572  000BCA  1021               	iorwf	__display_itoa_u32@value+2,w,c
 30573  000BCC  E111               	bnz	l10419
 30574  000BCE  0E80               	movlw	128
 30575  000BD0  5C20               	subwf	__display_itoa_u32@value+1,w,c
 30576  000BD2  B0D8               	btfsc	status,0,c
 30577  000BD4  D00D               	goto	l1505
 30578                           
 30579                           ;display.c: 176: {;display.c: 177: return _display_itoa_u16((uint16_t) value, text);
 30580  000BD6  C01F  F019         	movff	__display_itoa_u32@value,__display_itoa_u16@value
 30581  000BDA  C020  F01A         	movff	__display_itoa_u32@value+1,__display_itoa_u16@value+1
 30582  000BDE  6A1B               	clrf	__display_itoa_u16@value+2,c
 30583  000BE0  6A1C               	clrf	__display_itoa_u16@value+3,c
 30584  000BE2  C023  F01D         	movff	__display_itoa_u32@text,__display_itoa_u16@text
 30585  000BE6  C024  F01E         	movff	__display_itoa_u32@text+1,__display_itoa_u16@text+1
 30586  000BEA  EC23  F02A         	call	__display_itoa_u16	;wreg free
 30587  000BEE  0012               	return	
 30588  000BF0                     l1505:
 30589  000BF0                     l10419:
 30590                           
 30591                           ;display.c: 178: };display.c: 181: if(value>100000000)
 30592  000BF0  041F               	decf	__display_itoa_u32@value,w,c
 30593  000BF2  0EE1               	movlw	225
 30594  000BF4  5820               	subwfb	__display_itoa_u32@value+1,w,c
 30595  000BF6  0EF5               	movlw	245
 30596  000BF8  5821               	subwfb	__display_itoa_u32@value+2,w,c
 30597  000BFA  0E05               	movlw	5
 30598  000BFC  5822               	subwfb	__display_itoa_u32@value+3,w,c
 30599  000BFE  A0D8               	btfss	status,0,c
 30600  000C00  D04C               	goto	l1507
 30601                           
 30602                           ;display.c: 182: {;display.c: 183: itoa(text, (uint16_t)(value/10000), 10);
 30603  000C02  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 30604  000C06  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 30605  000C0A  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 30606  000C0E  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 30607  000C12  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 30608  000C16  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 30609  000C1A  0E10               	movlw	16
 30610  000C1C  6E05               	movwf	___lldiv@divisor,c
 30611  000C1E  0E27               	movlw	39
 30612  000C20  6E06               	movwf	___lldiv@divisor+1,c
 30613  000C22  0E00               	movlw	0
 30614  000C24  6E07               	movwf	___lldiv@divisor+2,c
 30615  000C26  0E00               	movlw	0
 30616  000C28  6E08               	movwf	___lldiv@divisor+3,c
 30617  000C2A  EC6C  F032         	call	___lldiv	;wreg free
 30618  000C2E  C001  F013         	movff	?___lldiv,itoa@val
 30619  000C32  C002  F014         	movff	?___lldiv+1,itoa@val+1
 30620  000C36  0E00               	movlw	0
 30621  000C38  6E16               	movwf	itoa@base+1,c
 30622  000C3A  0E0A               	movlw	10
 30623  000C3C  6E15               	movwf	itoa@base,c
 30624  000C3E  ECB1  F03B         	call	_itoa	;wreg free
 30625                           
 30626                           ;display.c: 184: itoa(text+5, (uint16_t)(value%10000), 10);
 30627  000C42  0E05               	movlw	5
 30628  000C44  2423               	addwf	__display_itoa_u32@text,w,c
 30629  000C46  6E11               	movwf	itoa@buf,c
 30630  000C48  0E00               	movlw	0
 30631  000C4A  2024               	addwfc	__display_itoa_u32@text+1,w,c
 30632  000C4C  6E12               	movwf	itoa@buf+1,c
 30633  000C4E  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30634  000C52  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30635  000C56  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30636  000C5A  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30637  000C5E  0E10               	movlw	16
 30638  000C60  6E05               	movwf	___llmod@divisor,c
 30639  000C62  0E27               	movlw	39
 30640  000C64  6E06               	movwf	___llmod@divisor+1,c
 30641  000C66  0E00               	movlw	0
 30642  000C68  6E07               	movwf	___llmod@divisor+2,c
 30643  000C6A  0E00               	movlw	0
 30644  000C6C  6E08               	movwf	___llmod@divisor+3,c
 30645  000C6E  EC7B  F036         	call	___llmod	;wreg free
 30646  000C72  C001  F013         	movff	?___llmod,itoa@val
 30647  000C76  C002  F014         	movff	?___llmod+1,itoa@val+1
 30648  000C7A  0E00               	movlw	0
 30649  000C7C  6E16               	movwf	itoa@base+1,c
 30650  000C7E  0E0A               	movlw	10
 30651  000C80  6E15               	movwf	itoa@base,c
 30652  000C82  ECB1  F03B         	call	_itoa	;wreg free
 30653                           
 30654                           ;display.c: 185: *(text+9) = ' ';
 30655  000C86  EE20 F009          	lfsr	2,9
 30656  000C8A  5023               	movf	__display_itoa_u32@text,w,c
 30657  000C8C  26D9               	addwf	fsr2l,f,c
 30658  000C8E  5024               	movf	__display_itoa_u32@text+1,w,c
 30659  000C90  22DA               	addwfc	fsr2h,f,c
 30660  000C92  0E20               	movlw	32
 30661  000C94  6EDF               	movwf	indf2,c
 30662                           
 30663                           ;display.c: 186: return 9;
 30664  000C96  0E09               	movlw	9
 30665                           
 30666                           ;display.c: 187: }
 30667  000C98  0012               	return	
 30668  000C9A                     l1507:
 30669                           
 30670                           ;display.c: 188: else if(value>10000000)
 30671  000C9A  5022               	movf	__display_itoa_u32@value+3,w,c
 30672  000C9C  E108               	bnz	u7180
 30673  000C9E  0E81               	movlw	129
 30674  000CA0  5C1F               	subwf	__display_itoa_u32@value,w,c
 30675  000CA2  0E96               	movlw	150
 30676  000CA4  5820               	subwfb	__display_itoa_u32@value+1,w,c
 30677  000CA6  0E98               	movlw	152
 30678  000CA8  5821               	subwfb	__display_itoa_u32@value+2,w,c
 30679  000CAA  A0D8               	btfss	status,0,c
 30680  000CAC  D04C               	goto	l1509
 30681  000CAE                     u7180:
 30682                           
 30683                           ;display.c: 189: {;display.c: 190: itoa(text, (uint16_t)(value/10000), 10);
 30684  000CAE  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 30685  000CB2  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 30686  000CB6  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 30687  000CBA  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 30688  000CBE  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 30689  000CC2  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 30690  000CC6  0E10               	movlw	16
 30691  000CC8  6E05               	movwf	___lldiv@divisor,c
 30692  000CCA  0E27               	movlw	39
 30693  000CCC  6E06               	movwf	___lldiv@divisor+1,c
 30694  000CCE  0E00               	movlw	0
 30695  000CD0  6E07               	movwf	___lldiv@divisor+2,c
 30696  000CD2  0E00               	movlw	0
 30697  000CD4  6E08               	movwf	___lldiv@divisor+3,c
 30698  000CD6  EC6C  F032         	call	___lldiv	;wreg free
 30699  000CDA  C001  F013         	movff	?___lldiv,itoa@val
 30700  000CDE  C002  F014         	movff	?___lldiv+1,itoa@val+1
 30701  000CE2  0E00               	movlw	0
 30702  000CE4  6E16               	movwf	itoa@base+1,c
 30703  000CE6  0E0A               	movlw	10
 30704  000CE8  6E15               	movwf	itoa@base,c
 30705  000CEA  ECB1  F03B         	call	_itoa	;wreg free
 30706                           
 30707                           ;display.c: 191: itoa(text+4, (uint16_t)(value%10000), 10);
 30708  000CEE  0E04               	movlw	4
 30709  000CF0  2423               	addwf	__display_itoa_u32@text,w,c
 30710  000CF2  6E11               	movwf	itoa@buf,c
 30711  000CF4  0E00               	movlw	0
 30712  000CF6  2024               	addwfc	__display_itoa_u32@text+1,w,c
 30713  000CF8  6E12               	movwf	itoa@buf+1,c
 30714  000CFA  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30715  000CFE  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30716  000D02  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30717  000D06  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30718  000D0A  0E10               	movlw	16
 30719  000D0C  6E05               	movwf	___llmod@divisor,c
 30720  000D0E  0E27               	movlw	39
 30721  000D10  6E06               	movwf	___llmod@divisor+1,c
 30722  000D12  0E00               	movlw	0
 30723  000D14  6E07               	movwf	___llmod@divisor+2,c
 30724  000D16  0E00               	movlw	0
 30725  000D18  6E08               	movwf	___llmod@divisor+3,c
 30726  000D1A  EC7B  F036         	call	___llmod	;wreg free
 30727  000D1E  C001  F013         	movff	?___llmod,itoa@val
 30728  000D22  C002  F014         	movff	?___llmod+1,itoa@val+1
 30729  000D26  0E00               	movlw	0
 30730  000D28  6E16               	movwf	itoa@base+1,c
 30731  000D2A  0E0A               	movlw	10
 30732  000D2C  6E15               	movwf	itoa@base,c
 30733  000D2E  ECB1  F03B         	call	_itoa	;wreg free
 30734                           
 30735                           ;display.c: 192: *(text+8) = ' ';
 30736  000D32  EE20 F008          	lfsr	2,8
 30737  000D36  5023               	movf	__display_itoa_u32@text,w,c
 30738  000D38  26D9               	addwf	fsr2l,f,c
 30739  000D3A  5024               	movf	__display_itoa_u32@text+1,w,c
 30740  000D3C  22DA               	addwfc	fsr2h,f,c
 30741  000D3E  0E20               	movlw	32
 30742  000D40  6EDF               	movwf	indf2,c
 30743                           
 30744                           ;display.c: 193: return 8;
 30745  000D42  0E08               	movlw	8
 30746                           
 30747                           ;display.c: 194: }
 30748  000D44  0012               	return	
 30749  000D46                     l1509:
 30750                           
 30751                           ;display.c: 195: else if(value>1000000)
 30752  000D46  5022               	movf	__display_itoa_u32@value+3,w,c
 30753  000D48  E108               	bnz	u7190
 30754  000D4A  0E41               	movlw	65
 30755  000D4C  5C1F               	subwf	__display_itoa_u32@value,w,c
 30756  000D4E  0E42               	movlw	66
 30757  000D50  5820               	subwfb	__display_itoa_u32@value+1,w,c
 30758  000D52  0E0F               	movlw	15
 30759  000D54  5821               	subwfb	__display_itoa_u32@value+2,w,c
 30760  000D56  A0D8               	btfss	status,0,c
 30761  000D58  D04C               	goto	l1511
 30762  000D5A                     u7190:
 30763                           
 30764                           ;display.c: 196: {;display.c: 197: itoa(text, (uint16_t)(value/10000), 10);
 30765  000D5A  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 30766  000D5E  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 30767  000D62  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 30768  000D66  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 30769  000D6A  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 30770  000D6E  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 30771  000D72  0E10               	movlw	16
 30772  000D74  6E05               	movwf	___lldiv@divisor,c
 30773  000D76  0E27               	movlw	39
 30774  000D78  6E06               	movwf	___lldiv@divisor+1,c
 30775  000D7A  0E00               	movlw	0
 30776  000D7C  6E07               	movwf	___lldiv@divisor+2,c
 30777  000D7E  0E00               	movlw	0
 30778  000D80  6E08               	movwf	___lldiv@divisor+3,c
 30779  000D82  EC6C  F032         	call	___lldiv	;wreg free
 30780  000D86  C001  F013         	movff	?___lldiv,itoa@val
 30781  000D8A  C002  F014         	movff	?___lldiv+1,itoa@val+1
 30782  000D8E  0E00               	movlw	0
 30783  000D90  6E16               	movwf	itoa@base+1,c
 30784  000D92  0E0A               	movlw	10
 30785  000D94  6E15               	movwf	itoa@base,c
 30786  000D96  ECB1  F03B         	call	_itoa	;wreg free
 30787                           
 30788                           ;display.c: 198: itoa(text+3, (uint16_t)(value%10000), 10);
 30789  000D9A  0E03               	movlw	3
 30790  000D9C  2423               	addwf	__display_itoa_u32@text,w,c
 30791  000D9E  6E11               	movwf	itoa@buf,c
 30792  000DA0  0E00               	movlw	0
 30793  000DA2  2024               	addwfc	__display_itoa_u32@text+1,w,c
 30794  000DA4  6E12               	movwf	itoa@buf+1,c
 30795  000DA6  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30796  000DAA  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30797  000DAE  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30798  000DB2  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30799  000DB6  0E10               	movlw	16
 30800  000DB8  6E05               	movwf	___llmod@divisor,c
 30801  000DBA  0E27               	movlw	39
 30802  000DBC  6E06               	movwf	___llmod@divisor+1,c
 30803  000DBE  0E00               	movlw	0
 30804  000DC0  6E07               	movwf	___llmod@divisor+2,c
 30805  000DC2  0E00               	movlw	0
 30806  000DC4  6E08               	movwf	___llmod@divisor+3,c
 30807  000DC6  EC7B  F036         	call	___llmod	;wreg free
 30808  000DCA  C001  F013         	movff	?___llmod,itoa@val
 30809  000DCE  C002  F014         	movff	?___llmod+1,itoa@val+1
 30810  000DD2  0E00               	movlw	0
 30811  000DD4  6E16               	movwf	itoa@base+1,c
 30812  000DD6  0E0A               	movlw	10
 30813  000DD8  6E15               	movwf	itoa@base,c
 30814  000DDA  ECB1  F03B         	call	_itoa	;wreg free
 30815                           
 30816                           ;display.c: 199: *(text+7) = ' ';
 30817  000DDE  EE20 F007          	lfsr	2,7
 30818  000DE2  5023               	movf	__display_itoa_u32@text,w,c
 30819  000DE4  26D9               	addwf	fsr2l,f,c
 30820  000DE6  5024               	movf	__display_itoa_u32@text+1,w,c
 30821  000DE8  22DA               	addwfc	fsr2h,f,c
 30822  000DEA  0E20               	movlw	32
 30823  000DEC  6EDF               	movwf	indf2,c
 30824                           
 30825                           ;display.c: 200: return 7;
 30826  000DEE  0E07               	movlw	7
 30827                           
 30828                           ;display.c: 201: }
 30829  000DF0  0012               	return	
 30830  000DF2                     l1511:
 30831                           
 30832                           ;display.c: 202: else if(value>100000)
 30833  000DF2  5022               	movf	__display_itoa_u32@value+3,w,c
 30834  000DF4  E108               	bnz	u7200
 30835  000DF6  0EA1               	movlw	161
 30836  000DF8  5C1F               	subwf	__display_itoa_u32@value,w,c
 30837  000DFA  0E86               	movlw	134
 30838  000DFC  5820               	subwfb	__display_itoa_u32@value+1,w,c
 30839  000DFE  0E01               	movlw	1
 30840  000E00  5821               	subwfb	__display_itoa_u32@value+2,w,c
 30841  000E02  A0D8               	btfss	status,0,c
 30842  000E04  D04C               	goto	l1513
 30843  000E06                     u7200:
 30844                           
 30845                           ;display.c: 203: {;display.c: 204: itoa(text, (uint16_t)(value/10000), 10);
 30846  000E06  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 30847  000E0A  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 30848  000E0E  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 30849  000E12  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 30850  000E16  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 30851  000E1A  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 30852  000E1E  0E10               	movlw	16
 30853  000E20  6E05               	movwf	___lldiv@divisor,c
 30854  000E22  0E27               	movlw	39
 30855  000E24  6E06               	movwf	___lldiv@divisor+1,c
 30856  000E26  0E00               	movlw	0
 30857  000E28  6E07               	movwf	___lldiv@divisor+2,c
 30858  000E2A  0E00               	movlw	0
 30859  000E2C  6E08               	movwf	___lldiv@divisor+3,c
 30860  000E2E  EC6C  F032         	call	___lldiv	;wreg free
 30861  000E32  C001  F013         	movff	?___lldiv,itoa@val
 30862  000E36  C002  F014         	movff	?___lldiv+1,itoa@val+1
 30863  000E3A  0E00               	movlw	0
 30864  000E3C  6E16               	movwf	itoa@base+1,c
 30865  000E3E  0E0A               	movlw	10
 30866  000E40  6E15               	movwf	itoa@base,c
 30867  000E42  ECB1  F03B         	call	_itoa	;wreg free
 30868                           
 30869                           ;display.c: 205: itoa(text+2, (uint16_t)(value%10000), 10);
 30870  000E46  0E02               	movlw	2
 30871  000E48  2423               	addwf	__display_itoa_u32@text,w,c
 30872  000E4A  6E11               	movwf	itoa@buf,c
 30873  000E4C  0E00               	movlw	0
 30874  000E4E  2024               	addwfc	__display_itoa_u32@text+1,w,c
 30875  000E50  6E12               	movwf	itoa@buf+1,c
 30876  000E52  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30877  000E56  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30878  000E5A  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30879  000E5E  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30880  000E62  0E10               	movlw	16
 30881  000E64  6E05               	movwf	___llmod@divisor,c
 30882  000E66  0E27               	movlw	39
 30883  000E68  6E06               	movwf	___llmod@divisor+1,c
 30884  000E6A  0E00               	movlw	0
 30885  000E6C  6E07               	movwf	___llmod@divisor+2,c
 30886  000E6E  0E00               	movlw	0
 30887  000E70  6E08               	movwf	___llmod@divisor+3,c
 30888  000E72  EC7B  F036         	call	___llmod	;wreg free
 30889  000E76  C001  F013         	movff	?___llmod,itoa@val
 30890  000E7A  C002  F014         	movff	?___llmod+1,itoa@val+1
 30891  000E7E  0E00               	movlw	0
 30892  000E80  6E16               	movwf	itoa@base+1,c
 30893  000E82  0E0A               	movlw	10
 30894  000E84  6E15               	movwf	itoa@base,c
 30895  000E86  ECB1  F03B         	call	_itoa	;wreg free
 30896                           
 30897                           ;display.c: 206: *(text+6) = ' ';
 30898  000E8A  EE20 F006          	lfsr	2,6
 30899  000E8E  5023               	movf	__display_itoa_u32@text,w,c
 30900  000E90  26D9               	addwf	fsr2l,f,c
 30901  000E92  5024               	movf	__display_itoa_u32@text+1,w,c
 30902  000E94  22DA               	addwfc	fsr2h,f,c
 30903  000E96  0E20               	movlw	32
 30904  000E98  6EDF               	movwf	indf2,c
 30905                           
 30906                           ;display.c: 207: return 6;
 30907  000E9A  0E06               	movlw	6
 30908                           
 30909                           ;display.c: 208: }
 30910  000E9C  0012               	return	
 30911  000E9E                     l1513:
 30912                           
 30913                           ;display.c: 209: else;display.c: 210: {;display.c: 211: itoa(text, (uint16_t)(value/1000
      +                          0), 10);
 30914  000E9E  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 30915  000EA2  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 30916  000EA6  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 30917  000EAA  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 30918  000EAE  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 30919  000EB2  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 30920  000EB6  0E10               	movlw	16
 30921  000EB8  6E05               	movwf	___lldiv@divisor,c
 30922  000EBA  0E27               	movlw	39
 30923  000EBC  6E06               	movwf	___lldiv@divisor+1,c
 30924  000EBE  0E00               	movlw	0
 30925  000EC0  6E07               	movwf	___lldiv@divisor+2,c
 30926  000EC2  0E00               	movlw	0
 30927  000EC4  6E08               	movwf	___lldiv@divisor+3,c
 30928  000EC6  EC6C  F032         	call	___lldiv	;wreg free
 30929  000ECA  C001  F013         	movff	?___lldiv,itoa@val
 30930  000ECE  C002  F014         	movff	?___lldiv+1,itoa@val+1
 30931  000ED2  0E00               	movlw	0
 30932  000ED4  6E16               	movwf	itoa@base+1,c
 30933  000ED6  0E0A               	movlw	10
 30934  000ED8  6E15               	movwf	itoa@base,c
 30935  000EDA  ECB1  F03B         	call	_itoa	;wreg free
 30936                           
 30937                           ;display.c: 212: itoa(text+1, (uint16_t)(value%10000), 10);
 30938  000EDE  0E01               	movlw	1
 30939  000EE0  2423               	addwf	__display_itoa_u32@text,w,c
 30940  000EE2  6E11               	movwf	itoa@buf,c
 30941  000EE4  0E00               	movlw	0
 30942  000EE6  2024               	addwfc	__display_itoa_u32@text+1,w,c
 30943  000EE8  6E12               	movwf	itoa@buf+1,c
 30944  000EEA  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30945  000EEE  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30946  000EF2  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30947  000EF6  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30948  000EFA  0E10               	movlw	16
 30949  000EFC  6E05               	movwf	___llmod@divisor,c
 30950  000EFE  0E27               	movlw	39
 30951  000F00  6E06               	movwf	___llmod@divisor+1,c
 30952  000F02  0E00               	movlw	0
 30953  000F04  6E07               	movwf	___llmod@divisor+2,c
 30954  000F06  0E00               	movlw	0
 30955  000F08  6E08               	movwf	___llmod@divisor+3,c
 30956  000F0A  EC7B  F036         	call	___llmod	;wreg free
 30957  000F0E  C001  F013         	movff	?___llmod,itoa@val
 30958  000F12  C002  F014         	movff	?___llmod+1,itoa@val+1
 30959  000F16  0E00               	movlw	0
 30960  000F18  6E16               	movwf	itoa@base+1,c
 30961  000F1A  0E0A               	movlw	10
 30962  000F1C  6E15               	movwf	itoa@base,c
 30963  000F1E  ECB1  F03B         	call	_itoa	;wreg free
 30964                           
 30965                           ;display.c: 213: *(text+5) = ' ';
 30966  000F22  EE20 F005          	lfsr	2,5
 30967  000F26  5023               	movf	__display_itoa_u32@text,w,c
 30968  000F28  26D9               	addwf	fsr2l,f,c
 30969  000F2A  5024               	movf	__display_itoa_u32@text+1,w,c
 30970  000F2C  22DA               	addwfc	fsr2h,f,c
 30971  000F2E  0E20               	movlw	32
 30972  000F30  6EDF               	movwf	indf2,c
 30973                           
 30974                           ;display.c: 214: return 5;
 30975  000F32  0E05               	movlw	5
 30976  000F34  0012               	return	
 30977  000F36                     __end_of__display_itoa_u32:
 30978                           	opt stack 0
 30979                           tosu	equ	0xFFF
 30980                           tosh	equ	0xFFE
 30981                           tosl	equ	0xFFD
 30982                           pclath	equ	0xFFA
 30983                           tblptru	equ	0xFF8
 30984                           tblptrh	equ	0xFF7
 30985                           tblptrl	equ	0xFF6
 30986                           tablat	equ	0xFF5
 30987                           prodh	equ	0xFF4
 30988                           prodl	equ	0xFF3
 30989                           intcon	equ	0xFF2
 30990                           intcon2	equ	0xFF1
 30991                           intcon3	equ	0xFF0
 30992                           indf0	equ	0xFEF
 30993                           postinc0	equ	0xFEE
 30994                           fsr0h	equ	0xFEA
 30995                           fsr0l	equ	0xFE9
 30996                           wreg	equ	0xFE8
 30997                           indf1	equ	0xFE7
 30998                           postdec1	equ	0xFE5
 30999                           plusw1	equ	0xFE3
 31000                           fsr1h	equ	0xFE2
 31001                           fsr1l	equ	0xFE1
 31002                           indf2	equ	0xFDF
 31003                           postinc2	equ	0xFDE
 31004                           postdec2	equ	0xFDD
 31005                           plusw2	equ	0xFDB
 31006                           fsr2h	equ	0xFDA
 31007                           fsr2l	equ	0xFD9
 31008                           status	equ	0xFD8
 31009                           
 31010 ;; *************** function ___llmod *****************
 31011 ;; Defined at:
 31012 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 31013 ;; Parameters:    Size  Location     Type
 31014 ;;  dividend        4    0[COMRAM] unsigned long 
 31015 ;;  divisor         4    4[COMRAM] unsigned long 
 31016 ;; Auto vars:     Size  Location     Type
 31017 ;;  counter         1    8[COMRAM] unsigned char 
 31018 ;; Return value:  Size  Location     Type
 31019 ;;                  4    0[COMRAM] unsigned long 
 31020 ;; Registers used:
 31021 ;;		wreg, status,2, status,0
 31022 ;; Tracked objects:
 31023 ;;		On entry : 0/0
 31024 ;;		On exit  : 0/0
 31025 ;;		Unchanged: 0/0
 31026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31027 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31030 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31031 ;;Total ram usage:        9 bytes
 31032 ;; Hardware stack levels used:    1
 31033 ;; This function calls:
 31034 ;;		Nothing
 31035 ;; This function is called by:
 31036 ;;		__display_itoa_u32
 31037 ;; This function uses a non-reentrant model
 31038 ;;
 31039                           
 31040                           	psect	text148
 31041  006CF6                     __ptext148:
 31042                           	opt stack 0
 31043  006CF6                     ___llmod:
 31044                           	opt stack 24
 31045                           
 31046                           ;incstack = 0
 31047  006CF6  5005               	movf	___llmod@divisor,w,c
 31048  006CF8  1006               	iorwf	___llmod@divisor+1,w,c
 31049  006CFA  1007               	iorwf	___llmod@divisor+2,w,c
 31050  006CFC  1008               	iorwf	___llmod@divisor+3,w,c
 31051  006CFE  B4D8               	btfsc	status,2,c
 31052  006D00  D024               	goto	l3243
 31053  006D02  0E01               	movlw	1
 31054  006D04  6E09               	movwf	___llmod@counter,c
 31055  006D06  D006               	goto	l3238
 31056  006D08  90D8               	bcf	status,0,c
 31057  006D0A  3605               	rlcf	___llmod@divisor,f,c
 31058  006D0C  3606               	rlcf	___llmod@divisor+1,f,c
 31059  006D0E  3607               	rlcf	___llmod@divisor+2,f,c
 31060  006D10  3608               	rlcf	___llmod@divisor+3,f,c
 31061  006D12  2A09               	incf	___llmod@counter,f,c
 31062  006D14                     l3238:
 31063  006D14  AE08               	btfss	___llmod@divisor+3,7,c
 31064  006D16  D7F8               	goto	l3239
 31065  006D18                     u6790:
 31066  006D18  5005               	movf	___llmod@divisor,w,c
 31067  006D1A  5C01               	subwf	___llmod@dividend,w,c
 31068  006D1C  5006               	movf	___llmod@divisor+1,w,c
 31069  006D1E  5802               	subwfb	___llmod@dividend+1,w,c
 31070  006D20  5007               	movf	___llmod@divisor+2,w,c
 31071  006D22  5803               	subwfb	___llmod@dividend+2,w,c
 31072  006D24  5008               	movf	___llmod@divisor+3,w,c
 31073  006D26  5804               	subwfb	___llmod@dividend+3,w,c
 31074  006D28  A0D8               	btfss	status,0,c
 31075  006D2A  D008               	goto	l3242
 31076  006D2C  5005               	movf	___llmod@divisor,w,c
 31077  006D2E  5E01               	subwf	___llmod@dividend,f,c
 31078  006D30  5006               	movf	___llmod@divisor+1,w,c
 31079  006D32  5A02               	subwfb	___llmod@dividend+1,f,c
 31080  006D34  5007               	movf	___llmod@divisor+2,w,c
 31081  006D36  5A03               	subwfb	___llmod@dividend+2,f,c
 31082  006D38  5008               	movf	___llmod@divisor+3,w,c
 31083  006D3A  5A04               	subwfb	___llmod@dividend+3,f,c
 31084  006D3C                     l3242:
 31085  006D3C  90D8               	bcf	status,0,c
 31086  006D3E  3208               	rrcf	___llmod@divisor+3,f,c
 31087  006D40  3207               	rrcf	___llmod@divisor+2,f,c
 31088  006D42  3206               	rrcf	___llmod@divisor+1,f,c
 31089  006D44  3205               	rrcf	___llmod@divisor,f,c
 31090  006D46  2E09               	decfsz	___llmod@counter,f,c
 31091  006D48  D7E7               	goto	u6790
 31092  006D4A                     l3243:
 31093  006D4A  C001  F001         	movff	___llmod@dividend,?___llmod
 31094  006D4E  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 31095  006D52  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 31096  006D56  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 31097  006D5A  0012               	return		;funcret
 31098  006D5C                     __end_of___llmod:
 31099                           	opt stack 0
 31100                           tosu	equ	0xFFF
 31101                           tosh	equ	0xFFE
 31102                           tosl	equ	0xFFD
 31103                           pclath	equ	0xFFA
 31104                           tblptru	equ	0xFF8
 31105                           tblptrh	equ	0xFF7
 31106                           tblptrl	equ	0xFF6
 31107                           tablat	equ	0xFF5
 31108                           prodh	equ	0xFF4
 31109                           prodl	equ	0xFF3
 31110                           intcon	equ	0xFF2
 31111                           intcon2	equ	0xFF1
 31112                           intcon3	equ	0xFF0
 31113                           indf0	equ	0xFEF
 31114                           postinc0	equ	0xFEE
 31115                           fsr0h	equ	0xFEA
 31116                           fsr0l	equ	0xFE9
 31117                           wreg	equ	0xFE8
 31118                           indf1	equ	0xFE7
 31119                           postdec1	equ	0xFE5
 31120                           plusw1	equ	0xFE3
 31121                           fsr1h	equ	0xFE2
 31122                           fsr1l	equ	0xFE1
 31123                           indf2	equ	0xFDF
 31124                           postinc2	equ	0xFDE
 31125                           postdec2	equ	0xFDD
 31126                           plusw2	equ	0xFDB
 31127                           fsr2h	equ	0xFDA
 31128                           fsr2l	equ	0xFD9
 31129                           status	equ	0xFD8
 31130                           
 31131 ;; *************** function ___lldiv *****************
 31132 ;; Defined at:
 31133 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 31134 ;; Parameters:    Size  Location     Type
 31135 ;;  dividend        4    0[COMRAM] unsigned long 
 31136 ;;  divisor         4    4[COMRAM] unsigned long 
 31137 ;; Auto vars:     Size  Location     Type
 31138 ;;  quotient        4    8[COMRAM] unsigned long 
 31139 ;;  counter         1   12[COMRAM] unsigned char 
 31140 ;; Return value:  Size  Location     Type
 31141 ;;                  4    0[COMRAM] unsigned long 
 31142 ;; Registers used:
 31143 ;;		wreg, status,2, status,0
 31144 ;; Tracked objects:
 31145 ;;		On entry : 0/0
 31146 ;;		On exit  : 0/0
 31147 ;;		Unchanged: 0/0
 31148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31149 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31150 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31152 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31153 ;;Total ram usage:       13 bytes
 31154 ;; Hardware stack levels used:    1
 31155 ;; This function calls:
 31156 ;;		Nothing
 31157 ;; This function is called by:
 31158 ;;		__display_itoa_u32
 31159 ;; This function uses a non-reentrant model
 31160 ;;
 31161                           
 31162                           	psect	text149
 31163  0064D8                     __ptext149:
 31164                           	opt stack 0
 31165  0064D8                     ___lldiv:
 31166                           	opt stack 24
 31167                           
 31168                           ;incstack = 0
 31169  0064D8  0E00               	movlw	0
 31170  0064DA  6E09               	movwf	___lldiv@quotient,c
 31171  0064DC  0E00               	movlw	0
 31172  0064DE  6E0A               	movwf	___lldiv@quotient+1,c
 31173  0064E0  0E00               	movlw	0
 31174  0064E2  6E0B               	movwf	___lldiv@quotient+2,c
 31175  0064E4  0E00               	movlw	0
 31176  0064E6  6E0C               	movwf	___lldiv@quotient+3,c
 31177  0064E8  5005               	movf	___lldiv@divisor,w,c
 31178  0064EA  1006               	iorwf	___lldiv@divisor+1,w,c
 31179  0064EC  1007               	iorwf	___lldiv@divisor+2,w,c
 31180  0064EE  1008               	iorwf	___lldiv@divisor+3,w,c
 31181  0064F0  B4D8               	btfsc	status,2,c
 31182  0064F2  D02A               	goto	l2862
 31183  0064F4  0E01               	movlw	1
 31184  0064F6  6E0D               	movwf	___lldiv@counter,c
 31185  0064F8  D006               	goto	l2857
 31186  0064FA  90D8               	bcf	status,0,c
 31187  0064FC  3605               	rlcf	___lldiv@divisor,f,c
 31188  0064FE  3606               	rlcf	___lldiv@divisor+1,f,c
 31189  006500  3607               	rlcf	___lldiv@divisor+2,f,c
 31190  006502  3608               	rlcf	___lldiv@divisor+3,f,c
 31191  006504  2A0D               	incf	___lldiv@counter,f,c
 31192  006506                     l2857:
 31193  006506  AE08               	btfss	___lldiv@divisor+3,7,c
 31194  006508  D7F8               	goto	l2858
 31195  00650A                     u6760:
 31196  00650A  90D8               	bcf	status,0,c
 31197  00650C  3609               	rlcf	___lldiv@quotient,f,c
 31198  00650E  360A               	rlcf	___lldiv@quotient+1,f,c
 31199  006510  360B               	rlcf	___lldiv@quotient+2,f,c
 31200  006512  360C               	rlcf	___lldiv@quotient+3,f,c
 31201  006514  5005               	movf	___lldiv@divisor,w,c
 31202  006516  5C01               	subwf	___lldiv@dividend,w,c
 31203  006518  5006               	movf	___lldiv@divisor+1,w,c
 31204  00651A  5802               	subwfb	___lldiv@dividend+1,w,c
 31205  00651C  5007               	movf	___lldiv@divisor+2,w,c
 31206  00651E  5803               	subwfb	___lldiv@dividend+2,w,c
 31207  006520  5008               	movf	___lldiv@divisor+3,w,c
 31208  006522  5804               	subwfb	___lldiv@dividend+3,w,c
 31209  006524  A0D8               	btfss	status,0,c
 31210  006526  D009               	goto	l2861
 31211  006528  5005               	movf	___lldiv@divisor,w,c
 31212  00652A  5E01               	subwf	___lldiv@dividend,f,c
 31213  00652C  5006               	movf	___lldiv@divisor+1,w,c
 31214  00652E  5A02               	subwfb	___lldiv@dividend+1,f,c
 31215  006530  5007               	movf	___lldiv@divisor+2,w,c
 31216  006532  5A03               	subwfb	___lldiv@dividend+2,f,c
 31217  006534  5008               	movf	___lldiv@divisor+3,w,c
 31218  006536  5A04               	subwfb	___lldiv@dividend+3,f,c
 31219  006538  8009               	bsf	___lldiv@quotient,0,c
 31220  00653A                     l2861:
 31221  00653A  90D8               	bcf	status,0,c
 31222  00653C  3208               	rrcf	___lldiv@divisor+3,f,c
 31223  00653E  3207               	rrcf	___lldiv@divisor+2,f,c
 31224  006540  3206               	rrcf	___lldiv@divisor+1,f,c
 31225  006542  3205               	rrcf	___lldiv@divisor,f,c
 31226  006544  2E0D               	decfsz	___lldiv@counter,f,c
 31227  006546  D7E1               	goto	u6760
 31228  006548                     l2862:
 31229  006548  C009  F001         	movff	___lldiv@quotient,?___lldiv
 31230  00654C  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 31231  006550  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 31232  006554  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 31233  006558  0012               	return		;funcret
 31234  00655A                     __end_of___lldiv:
 31235                           	opt stack 0
 31236                           tosu	equ	0xFFF
 31237                           tosh	equ	0xFFE
 31238                           tosl	equ	0xFFD
 31239                           pclath	equ	0xFFA
 31240                           tblptru	equ	0xFF8
 31241                           tblptrh	equ	0xFF7
 31242                           tblptrl	equ	0xFF6
 31243                           tablat	equ	0xFF5
 31244                           prodh	equ	0xFF4
 31245                           prodl	equ	0xFF3
 31246                           intcon	equ	0xFF2
 31247                           intcon2	equ	0xFF1
 31248                           intcon3	equ	0xFF0
 31249                           indf0	equ	0xFEF
 31250                           postinc0	equ	0xFEE
 31251                           fsr0h	equ	0xFEA
 31252                           fsr0l	equ	0xFE9
 31253                           wreg	equ	0xFE8
 31254                           indf1	equ	0xFE7
 31255                           postdec1	equ	0xFE5
 31256                           plusw1	equ	0xFE3
 31257                           fsr1h	equ	0xFE2
 31258                           fsr1l	equ	0xFE1
 31259                           indf2	equ	0xFDF
 31260                           postinc2	equ	0xFDE
 31261                           postdec2	equ	0xFDD
 31262                           plusw2	equ	0xFDB
 31263                           fsr2h	equ	0xFDA
 31264                           fsr2l	equ	0xFD9
 31265                           status	equ	0xFD8
 31266                           
 31267 ;; *************** function __display_done *****************
 31268 ;; Defined at:
 31269 ;;		line 529 in file "display.c"
 31270 ;; Parameters:    Size  Location     Type
 31271 ;;		None
 31272 ;; Auto vars:     Size  Location     Type
 31273 ;;  cntr            1   30[COMRAM] unsigned char 
 31274 ;; Return value:  Size  Location     Type
 31275 ;;                  1    wreg      void 
 31276 ;; Registers used:
 31277 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31278 ;; Tracked objects:
 31279 ;;		On entry : 0/0
 31280 ;;		On exit  : 0/0
 31281 ;;		Unchanged: 0/0
 31282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31284 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31286 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31287 ;;Total ram usage:        1 bytes
 31288 ;; Hardware stack levels used:    1
 31289 ;; Hardware stack levels required when called:    4
 31290 ;; This function calls:
 31291 ;;		__display_itoa_u16
 31292 ;;		_bootloader_get_flashPagesWritten
 31293 ;; This function is called by:
 31294 ;;		_display_prepare
 31295 ;; This function uses a non-reentrant model
 31296 ;;
 31297                           
 31298                           	psect	text150
 31299  003706                     __ptext150:
 31300                           	opt stack 0
 31301  003706                     __display_done:
 31302                           	opt stack 22
 31303                           
 31304                           ;display.c: 531: uint8_t cntr;;display.c: 532: cntr = 0;
 31305                           
 31306                           ;incstack = 0
 31307  003706  0E00               	movlw	0
 31308  003708  6E1F               	movwf	__display_done@cntr,c
 31309                           
 31310                           ;display.c: 533: while(done_line1[cntr])
 31311  00370A  D017               	goto	l1683
 31312  00370C                     
 31313                           ;display.c: 534: display_content[0][cntr] = done_line1[cntr++];
 31314  00370C  501F               	movf	__display_done@cntr,w,c
 31315  00370E  0D01               	mullw	1
 31316  003710  0E74               	movlw	low _done_line1
 31317  003712  24F3               	addwf	prodl,w,c
 31318  003714  6EF6               	movwf	tblptrl,c
 31319  003716  0E8D               	movlw	high _done_line1
 31320  003718  20F4               	addwfc	prodh,w,c
 31321  00371A  6EF7               	movwf	tblptrh,c
 31322  00371C                     	if	1	;There are 3 active tblptr bytes
 31323  00371C  6AF8               	clrf	tblptru,c
 31324  00371E  0E00               	movlw	low (__mediumconst shr (0+16))
 31325  003720  22F8               	addwfc	tblptru,f,c
 31326  003722                     	endif
 31327  003722  501F               	movf	__display_done@cntr,w,c
 31328  003724  0D01               	mullw	1
 31329  003726  0E76               	movlw	low _display_content
 31330  003728  24F3               	addwf	prodl,w,c
 31331  00372A  6ED9               	movwf	fsr2l,c
 31332  00372C  0E01               	movlw	high _display_content
 31333  00372E  20F4               	addwfc	prodh,w,c
 31334  003730  6EDA               	movwf	fsr2h,c
 31335  003732  0008               	tblrd		*
 31336  003734  CFF5 FFDF          	movff	tablat,indf2
 31337  003738  2A1F               	incf	__display_done@cntr,f,c
 31338  00373A                     l1683:
 31339  00373A  501F               	movf	__display_done@cntr,w,c
 31340  00373C  0D01               	mullw	1
 31341  00373E  0E74               	movlw	low _done_line1
 31342  003740  24F3               	addwf	prodl,w,c
 31343  003742  6EF6               	movwf	tblptrl,c
 31344  003744  0E8D               	movlw	high _done_line1
 31345  003746  20F4               	addwfc	prodh,w,c
 31346  003748  6EF7               	movwf	tblptrh,c
 31347  00374A                     	if	1	;There are 3 active tblptr bytes
 31348  00374A  6AF8               	clrf	tblptru,c
 31349  00374C  0E00               	movlw	low (__mediumconst shr (0+16))
 31350  00374E  22F8               	addwfc	tblptru,f,c
 31351  003750                     	endif
 31352  003750  0008               	tblrd		*
 31353  003752  50F5               	movf	tablat,w,c
 31354  003754  0900               	iorlw	0
 31355  003756  A4D8               	btfss	status,2,c
 31356  003758  D7D9               	goto	l1684
 31357                           
 31358                           ;display.c: 535: cntr = 0;
 31359  00375A  0E00               	movlw	0
 31360  00375C  6E1F               	movwf	__display_done@cntr,c
 31361                           
 31362                           ;display.c: 536: while(done_line2[cntr])
 31363  00375E  D017               	goto	l1686
 31364  003760                     
 31365                           ;display.c: 537: display_content[1][cntr] = done_line2[cntr++];
 31366  003760  501F               	movf	__display_done@cntr,w,c
 31367  003762  0D01               	mullw	1
 31368  003764  0E9F               	movlw	low _done_line2
 31369  003766  24F3               	addwf	prodl,w,c
 31370  003768  6EF6               	movwf	tblptrl,c
 31371  00376A  0E8E               	movlw	high _done_line2
 31372  00376C  20F4               	addwfc	prodh,w,c
 31373  00376E  6EF7               	movwf	tblptrh,c
 31374  003770                     	if	1	;There are 3 active tblptr bytes
 31375  003770  6AF8               	clrf	tblptru,c
 31376  003772  0E00               	movlw	low (__mediumconst shr (0+16))
 31377  003774  22F8               	addwfc	tblptru,f,c
 31378  003776                     	endif
 31379  003776  501F               	movf	__display_done@cntr,w,c
 31380  003778  0D01               	mullw	1
 31381  00377A  0E8A               	movlw	low (_display_content+20)
 31382  00377C  24F3               	addwf	prodl,w,c
 31383  00377E  6ED9               	movwf	fsr2l,c
 31384  003780  0E01               	movlw	high (_display_content+20)
 31385  003782  20F4               	addwfc	prodh,w,c
 31386  003784  6EDA               	movwf	fsr2h,c
 31387  003786  0008               	tblrd		*
 31388  003788  CFF5 FFDF          	movff	tablat,indf2
 31389  00378C  2A1F               	incf	__display_done@cntr,f,c
 31390  00378E                     l1686:
 31391  00378E  501F               	movf	__display_done@cntr,w,c
 31392  003790  0D01               	mullw	1
 31393  003792  0E9F               	movlw	low _done_line2
 31394  003794  24F3               	addwf	prodl,w,c
 31395  003796  6EF6               	movwf	tblptrl,c
 31396  003798  0E8E               	movlw	high _done_line2
 31397  00379A  20F4               	addwfc	prodh,w,c
 31398  00379C  6EF7               	movwf	tblptrh,c
 31399  00379E                     	if	1	;There are 3 active tblptr bytes
 31400  00379E  6AF8               	clrf	tblptru,c
 31401  0037A0  0E00               	movlw	low (__mediumconst shr (0+16))
 31402  0037A2  22F8               	addwfc	tblptru,f,c
 31403  0037A4                     	endif
 31404  0037A4  0008               	tblrd		*
 31405  0037A6  50F5               	movf	tablat,w,c
 31406  0037A8  0900               	iorlw	0
 31407  0037AA  A4D8               	btfss	status,2,c
 31408  0037AC  D7D9               	goto	l1687
 31409                           
 31410                           ;display.c: 538: cntr = 0;
 31411  0037AE  0E00               	movlw	0
 31412  0037B0  6E1F               	movwf	__display_done@cntr,c
 31413                           
 31414                           ;display.c: 539: while(done_line3[cntr])
 31415  0037B2  D017               	goto	l1689
 31416  0037B4                     
 31417                           ;display.c: 540: display_content[2][cntr] = done_line3[cntr++];
 31418  0037B4  501F               	movf	__display_done@cntr,w,c
 31419  0037B6  0D01               	mullw	1
 31420  0037B8  0E64               	movlw	low _done_line3
 31421  0037BA  24F3               	addwf	prodl,w,c
 31422  0037BC  6EF6               	movwf	tblptrl,c
 31423  0037BE  0E8D               	movlw	high _done_line3
 31424  0037C0  20F4               	addwfc	prodh,w,c
 31425  0037C2  6EF7               	movwf	tblptrh,c
 31426  0037C4                     	if	1	;There are 3 active tblptr bytes
 31427  0037C4  6AF8               	clrf	tblptru,c
 31428  0037C6  0E00               	movlw	low (__mediumconst shr (0+16))
 31429  0037C8  22F8               	addwfc	tblptru,f,c
 31430  0037CA                     	endif
 31431  0037CA  501F               	movf	__display_done@cntr,w,c
 31432  0037CC  0D01               	mullw	1
 31433  0037CE  0E9E               	movlw	low (_display_content+40)
 31434  0037D0  24F3               	addwf	prodl,w,c
 31435  0037D2  6ED9               	movwf	fsr2l,c
 31436  0037D4  0E01               	movlw	high (_display_content+40)
 31437  0037D6  20F4               	addwfc	prodh,w,c
 31438  0037D8  6EDA               	movwf	fsr2h,c
 31439  0037DA  0008               	tblrd		*
 31440  0037DC  CFF5 FFDF          	movff	tablat,indf2
 31441  0037E0  2A1F               	incf	__display_done@cntr,f,c
 31442  0037E2                     l1689:
 31443  0037E2  501F               	movf	__display_done@cntr,w,c
 31444  0037E4  0D01               	mullw	1
 31445  0037E6  0E64               	movlw	low _done_line3
 31446  0037E8  24F3               	addwf	prodl,w,c
 31447  0037EA  6EF6               	movwf	tblptrl,c
 31448  0037EC  0E8D               	movlw	high _done_line3
 31449  0037EE  20F4               	addwfc	prodh,w,c
 31450  0037F0  6EF7               	movwf	tblptrh,c
 31451  0037F2                     	if	1	;There are 3 active tblptr bytes
 31452  0037F2  6AF8               	clrf	tblptru,c
 31453  0037F4  0E00               	movlw	low (__mediumconst shr (0+16))
 31454  0037F6  22F8               	addwfc	tblptru,f,c
 31455  0037F8                     	endif
 31456  0037F8  0008               	tblrd		*
 31457  0037FA  50F5               	movf	tablat,w,c
 31458  0037FC  0900               	iorlw	0
 31459  0037FE  A4D8               	btfss	status,2,c
 31460  003800  D7D9               	goto	l1690
 31461                           
 31462                           ;display.c: 541: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          2][cntr]);
 31463  003802  EC3E  F040         	call	_bootloader_get_flashPagesWritten	;wreg free
 31464  003806  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 31465  00380A  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 31466  00380E  6A1B               	clrf	__display_itoa_u16@value+2,c
 31467  003810  6A1C               	clrf	__display_itoa_u16@value+3,c
 31468  003812  501F               	movf	__display_done@cntr,w,c
 31469  003814  0D01               	mullw	1
 31470  003816  0E9E               	movlw	low (_display_content+40)
 31471  003818  24F3               	addwf	prodl,w,c
 31472  00381A  6E1D               	movwf	__display_itoa_u16@text,c
 31473  00381C  0E01               	movlw	high (_display_content+40)
 31474  00381E  20F4               	addwfc	prodh,w,c
 31475  003820  6E1E               	movwf	__display_itoa_u16@text+1,c
 31476  003822  EC23  F02A         	call	__display_itoa_u16	;wreg free
 31477                           
 31478                           ;display.c: 542: cntr = 0;
 31479  003826  0E00               	movlw	0
 31480  003828  6E1F               	movwf	__display_done@cntr,c
 31481                           
 31482                           ;display.c: 543: while(done_line4[cntr])
 31483  00382A  D017               	goto	l1692
 31484  00382C                     
 31485                           ;display.c: 544: display_content[3][cntr] = done_line4[cntr++];
 31486  00382C  501F               	movf	__display_done@cntr,w,c
 31487  00382E  0D01               	mullw	1
 31488  003830  0E54               	movlw	low _done_line4
 31489  003832  24F3               	addwf	prodl,w,c
 31490  003834  6EF6               	movwf	tblptrl,c
 31491  003836  0E8D               	movlw	high _done_line4
 31492  003838  20F4               	addwfc	prodh,w,c
 31493  00383A  6EF7               	movwf	tblptrh,c
 31494  00383C                     	if	1	;There are 3 active tblptr bytes
 31495  00383C  6AF8               	clrf	tblptru,c
 31496  00383E  0E00               	movlw	low (__mediumconst shr (0+16))
 31497  003840  22F8               	addwfc	tblptru,f,c
 31498  003842                     	endif
 31499  003842  501F               	movf	__display_done@cntr,w,c
 31500  003844  0D01               	mullw	1
 31501  003846  0EB2               	movlw	low (_display_content+60)
 31502  003848  24F3               	addwf	prodl,w,c
 31503  00384A  6ED9               	movwf	fsr2l,c
 31504  00384C  0E01               	movlw	high (_display_content+60)
 31505  00384E  20F4               	addwfc	prodh,w,c
 31506  003850  6EDA               	movwf	fsr2h,c
 31507  003852  0008               	tblrd		*
 31508  003854  CFF5 FFDF          	movff	tablat,indf2
 31509  003858  2A1F               	incf	__display_done@cntr,f,c
 31510  00385A                     l1692:
 31511  00385A  501F               	movf	__display_done@cntr,w,c
 31512  00385C  0D01               	mullw	1
 31513  00385E  0E54               	movlw	low _done_line4
 31514  003860  24F3               	addwf	prodl,w,c
 31515  003862  6EF6               	movwf	tblptrl,c
 31516  003864  0E8D               	movlw	high _done_line4
 31517  003866  20F4               	addwfc	prodh,w,c
 31518  003868  6EF7               	movwf	tblptrh,c
 31519  00386A                     	if	1	;There are 3 active tblptr bytes
 31520  00386A  6AF8               	clrf	tblptru,c
 31521  00386C  0E00               	movlw	low (__mediumconst shr (0+16))
 31522  00386E  22F8               	addwfc	tblptru,f,c
 31523  003870                     	endif
 31524  003870  0008               	tblrd		*
 31525  003872  50F5               	movf	tablat,w,c
 31526  003874  0900               	iorlw	0
 31527  003876  B4D8               	btfsc	status,2,c
 31528  003878  0012               	return	
 31529  00387A  D7D8               	goto	l1693
 31530  00387C                     __end_of__display_done:
 31531                           	opt stack 0
 31532                           tosu	equ	0xFFF
 31533                           tosh	equ	0xFFE
 31534                           tosl	equ	0xFFD
 31535                           pclath	equ	0xFFA
 31536                           tblptru	equ	0xFF8
 31537                           tblptrh	equ	0xFF7
 31538                           tblptrl	equ	0xFF6
 31539                           tablat	equ	0xFF5
 31540                           prodh	equ	0xFF4
 31541                           prodl	equ	0xFF3
 31542                           intcon	equ	0xFF2
 31543                           intcon2	equ	0xFF1
 31544                           intcon3	equ	0xFF0
 31545                           indf0	equ	0xFEF
 31546                           postinc0	equ	0xFEE
 31547                           fsr0h	equ	0xFEA
 31548                           fsr0l	equ	0xFE9
 31549                           wreg	equ	0xFE8
 31550                           indf1	equ	0xFE7
 31551                           postdec1	equ	0xFE5
 31552                           plusw1	equ	0xFE3
 31553                           fsr1h	equ	0xFE2
 31554                           fsr1l	equ	0xFE1
 31555                           indf2	equ	0xFDF
 31556                           postinc2	equ	0xFDE
 31557                           postdec2	equ	0xFDD
 31558                           plusw2	equ	0xFDB
 31559                           fsr2h	equ	0xFDA
 31560                           fsr2l	equ	0xFD9
 31561                           status	equ	0xFD8
 31562                           
 31563 ;; *************** function _bootloader_get_flashPagesWritten *****************
 31564 ;; Defined at:
 31565 ;;		line 478 in file "bootloader.c"
 31566 ;; Parameters:    Size  Location     Type
 31567 ;;		None
 31568 ;; Auto vars:     Size  Location     Type
 31569 ;;		None
 31570 ;; Return value:  Size  Location     Type
 31571 ;;                  2    0[COMRAM] unsigned int 
 31572 ;; Registers used:
 31573 ;;		None
 31574 ;; Tracked objects:
 31575 ;;		On entry : 0/0
 31576 ;;		On exit  : 0/0
 31577 ;;		Unchanged: 0/0
 31578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31579 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31582 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31583 ;;Total ram usage:        2 bytes
 31584 ;; Hardware stack levels used:    1
 31585 ;; This function calls:
 31586 ;;		Nothing
 31587 ;; This function is called by:
 31588 ;;		__display_programming
 31589 ;;		__display_done
 31590 ;;		__fill_buffer_get_bootloader_details
 31591 ;; This function uses a non-reentrant model
 31592 ;;
 31593                           
 31594                           	psect	text151
 31595  00807C                     __ptext151:
 31596                           	opt stack 0
 31597  00807C                     _bootloader_get_flashPagesWritten:
 31598                           	opt stack 25
 31599                           
 31600                           ;bootloader.c: 480: return flash_pages_written;
 31601                           
 31602                           ;incstack = 0
 31603  00807C  C166  F001         	movff	_flash_pages_written,?_bootloader_get_flashPagesWritten
 31604  008080  C167  F002         	movff	_flash_pages_written+1,?_bootloader_get_flashPagesWritten+1
 31605  008084  0012               	return		;funcret
 31606  008086                     __end_of_bootloader_get_flashPagesWritten:
 31607                           	opt stack 0
 31608                           tosu	equ	0xFFF
 31609                           tosh	equ	0xFFE
 31610                           tosl	equ	0xFFD
 31611                           pclath	equ	0xFFA
 31612                           tblptru	equ	0xFF8
 31613                           tblptrh	equ	0xFF7
 31614                           tblptrl	equ	0xFF6
 31615                           tablat	equ	0xFF5
 31616                           prodh	equ	0xFF4
 31617                           prodl	equ	0xFF3
 31618                           intcon	equ	0xFF2
 31619                           intcon2	equ	0xFF1
 31620                           intcon3	equ	0xFF0
 31621                           indf0	equ	0xFEF
 31622                           postinc0	equ	0xFEE
 31623                           fsr0h	equ	0xFEA
 31624                           fsr0l	equ	0xFE9
 31625                           wreg	equ	0xFE8
 31626                           indf1	equ	0xFE7
 31627                           postdec1	equ	0xFE5
 31628                           plusw1	equ	0xFE3
 31629                           fsr1h	equ	0xFE2
 31630                           fsr1l	equ	0xFE1
 31631                           indf2	equ	0xFDF
 31632                           postinc2	equ	0xFDE
 31633                           postdec2	equ	0xFDD
 31634                           plusw2	equ	0xFDB
 31635                           fsr2h	equ	0xFDA
 31636                           fsr2l	equ	0xFD9
 31637                           status	equ	0xFD8
 31638                           
 31639 ;; *************** function __display_clear *****************
 31640 ;; Defined at:
 31641 ;;		line 75 in file "display.c"
 31642 ;; Parameters:    Size  Location     Type
 31643 ;;		None
 31644 ;; Auto vars:     Size  Location     Type
 31645 ;;  col             1    3[COMRAM] unsigned char 
 31646 ;;  row             1    2[COMRAM] unsigned char 
 31647 ;; Return value:  Size  Location     Type
 31648 ;;                  1    wreg      void 
 31649 ;; Registers used:
 31650 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 31651 ;; Tracked objects:
 31652 ;;		On entry : 0/0
 31653 ;;		On exit  : 0/0
 31654 ;;		Unchanged: 0/0
 31655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31657 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31658 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31659 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31660 ;;Total ram usage:        4 bytes
 31661 ;; Hardware stack levels used:    1
 31662 ;; This function calls:
 31663 ;;		Nothing
 31664 ;; This function is called by:
 31665 ;;		_display_prepare
 31666 ;; This function uses a non-reentrant model
 31667 ;;
 31668                           
 31669                           	psect	text152
 31670  007604                     __ptext152:
 31671                           	opt stack 0
 31672  007604                     __display_clear:
 31673                           	opt stack 26
 31674                           
 31675                           ;display.c: 77: uint8_t row;;display.c: 78: uint8_t col;;display.c: 79: for(row=0;row<4;
      +                          ++row)
 31676                           
 31677                           ;incstack = 0
 31678  007604  0E00               	movlw	0
 31679  007606  6E03               	movwf	__display_clear@row,c
 31680  007608                     l10881:
 31681  007608  0E03               	movlw	3
 31682  00760A  6403               	cpfsgt	__display_clear@row,c
 31683  00760C  D001               	goto	l1461
 31684  00760E  0012               	return	
 31685  007610                     l1461:
 31686                           
 31687                           ;display.c: 80: {;display.c: 81: for(col=0;col<20;++col)
 31688  007610  0E00               	movlw	0
 31689  007612  6E04               	movwf	__display_clear@col,c
 31690  007614                     l10887:
 31691  007614  0E13               	movlw	19
 31692  007616  6404               	cpfsgt	__display_clear@col,c
 31693  007618  D001               	goto	l1463
 31694  00761A  D016               	goto	u7790
 31695  00761C                     l1463:
 31696                           
 31697                           ;display.c: 82: {;display.c: 83: display_content[row][col] = ' ';
 31698  00761C  5003               	movf	__display_clear@row,w,c
 31699  00761E  0D14               	mullw	20
 31700  007620  0E76               	movlw	low _display_content
 31701  007622  6E01               	movwf	??__display_clear& (0+255),c
 31702  007624  0E01               	movlw	high _display_content
 31703  007626  6E02               	movwf	(??__display_clear+1)& (0+255),c
 31704  007628  50F3               	movf	prodl,w,c
 31705  00762A  2601               	addwf	??__display_clear,f,c
 31706  00762C  50F4               	movf	prodh,w,c
 31707  00762E  2202               	addwfc	??__display_clear+1,f,c
 31708  007630  5004               	movf	__display_clear@col,w,c
 31709  007632  0D01               	mullw	1
 31710  007634  50F3               	movf	prodl,w,c
 31711  007636  2401               	addwf	??__display_clear,w,c
 31712  007638  6ED9               	movwf	fsr2l,c
 31713  00763A  50F4               	movf	prodh,w,c
 31714  00763C  2002               	addwfc	??__display_clear+1,w,c
 31715  00763E  6EDA               	movwf	fsr2h,c
 31716  007640  0E20               	movlw	32
 31717  007642  6EDF               	movwf	indf2,c
 31718  007644  2A04               	incf	__display_clear@col,f,c
 31719  007646  D7E6               	goto	l10887
 31720  007648                     u7790:
 31721  007648  2A03               	incf	__display_clear@row,f,c
 31722  00764A  D7DE               	goto	l10881
 31723  00764C                     __end_of__display_clear:
 31724                           	opt stack 0
 31725                           tosu	equ	0xFFF
 31726                           tosh	equ	0xFFE
 31727                           tosl	equ	0xFFD
 31728                           pclath	equ	0xFFA
 31729                           tblptru	equ	0xFF8
 31730                           tblptrh	equ	0xFF7
 31731                           tblptrl	equ	0xFF6
 31732                           tablat	equ	0xFF5
 31733                           prodh	equ	0xFF4
 31734                           prodl	equ	0xFF3
 31735                           intcon	equ	0xFF2
 31736                           intcon2	equ	0xFF1
 31737                           intcon3	equ	0xFF0
 31738                           indf0	equ	0xFEF
 31739                           postinc0	equ	0xFEE
 31740                           fsr0h	equ	0xFEA
 31741                           fsr0l	equ	0xFE9
 31742                           wreg	equ	0xFE8
 31743                           indf1	equ	0xFE7
 31744                           postdec1	equ	0xFE5
 31745                           plusw1	equ	0xFE3
 31746                           fsr1h	equ	0xFE2
 31747                           fsr1l	equ	0xFE1
 31748                           indf2	equ	0xFDF
 31749                           postinc2	equ	0xFDE
 31750                           postdec2	equ	0xFDD
 31751                           plusw2	equ	0xFDB
 31752                           fsr2h	equ	0xFDA
 31753                           fsr2l	equ	0xFD9
 31754                           status	equ	0xFD8
 31755                           
 31756 ;; *************** function __display_checked *****************
 31757 ;; Defined at:
 31758 ;;		line 433 in file "display.c"
 31759 ;; Parameters:    Size  Location     Type
 31760 ;;		None
 31761 ;; Auto vars:     Size  Location     Type
 31762 ;;  cntr            1   33[COMRAM] unsigned char 
 31763 ;;  start           1   32[COMRAM] unsigned char 
 31764 ;; Return value:  Size  Location     Type
 31765 ;;                  1    wreg      void 
 31766 ;; Registers used:
 31767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31768 ;; Tracked objects:
 31769 ;;		On entry : 0/0
 31770 ;;		On exit  : 0/0
 31771 ;;		Unchanged: 0/0
 31772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31774 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31775 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31776 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31777 ;;Total ram usage:        4 bytes
 31778 ;; Hardware stack levels used:    1
 31779 ;; Hardware stack levels required when called:    4
 31780 ;; This function calls:
 31781 ;;		__display_itoa_u16
 31782 ;;		_bootloader_get_total_entries
 31783 ;; This function is called by:
 31784 ;;		_display_prepare
 31785 ;; This function uses a non-reentrant model
 31786 ;;
 31787                           
 31788                           	psect	text153
 31789  00358A                     __ptext153:
 31790                           	opt stack 0
 31791  00358A                     __display_checked:
 31792                           	opt stack 22
 31793                           
 31794                           ;display.c: 435: uint8_t cntr;;display.c: 436: uint8_t start;;display.c: 437: cntr = 0;
 31795                           
 31796                           ;incstack = 0
 31797  00358A  0E00               	movlw	0
 31798  00358C  6E22               	movwf	__display_checked@cntr,c
 31799                           
 31800                           ;display.c: 438: while(checked_line1[cntr])
 31801  00358E  D017               	goto	l1619
 31802  003590                     
 31803                           ;display.c: 439: display_content[0][cntr] = checked_line1[cntr++];
 31804  003590  5022               	movf	__display_checked@cntr,w,c
 31805  003592  0D01               	mullw	1
 31806  003594  0EB4               	movlw	low _checked_line1
 31807  003596  24F3               	addwf	prodl,w,c
 31808  003598  6EF6               	movwf	tblptrl,c
 31809  00359A  0E8D               	movlw	high _checked_line1
 31810  00359C  20F4               	addwfc	prodh,w,c
 31811  00359E  6EF7               	movwf	tblptrh,c
 31812  0035A0                     	if	1	;There are 3 active tblptr bytes
 31813  0035A0  6AF8               	clrf	tblptru,c
 31814  0035A2  0E00               	movlw	low (__mediumconst shr (0+16))
 31815  0035A4  22F8               	addwfc	tblptru,f,c
 31816  0035A6                     	endif
 31817  0035A6  5022               	movf	__display_checked@cntr,w,c
 31818  0035A8  0D01               	mullw	1
 31819  0035AA  0E76               	movlw	low _display_content
 31820  0035AC  24F3               	addwf	prodl,w,c
 31821  0035AE  6ED9               	movwf	fsr2l,c
 31822  0035B0  0E01               	movlw	high _display_content
 31823  0035B2  20F4               	addwfc	prodh,w,c
 31824  0035B4  6EDA               	movwf	fsr2h,c
 31825  0035B6  0008               	tblrd		*
 31826  0035B8  CFF5 FFDF          	movff	tablat,indf2
 31827  0035BC  2A22               	incf	__display_checked@cntr,f,c
 31828  0035BE                     l1619:
 31829  0035BE  5022               	movf	__display_checked@cntr,w,c
 31830  0035C0  0D01               	mullw	1
 31831  0035C2  0EB4               	movlw	low _checked_line1
 31832  0035C4  24F3               	addwf	prodl,w,c
 31833  0035C6  6EF6               	movwf	tblptrl,c
 31834  0035C8  0E8D               	movlw	high _checked_line1
 31835  0035CA  20F4               	addwfc	prodh,w,c
 31836  0035CC  6EF7               	movwf	tblptrh,c
 31837  0035CE                     	if	1	;There are 3 active tblptr bytes
 31838  0035CE  6AF8               	clrf	tblptru,c
 31839  0035D0  0E00               	movlw	low (__mediumconst shr (0+16))
 31840  0035D2  22F8               	addwfc	tblptru,f,c
 31841  0035D4                     	endif
 31842  0035D4  0008               	tblrd		*
 31843  0035D6  50F5               	movf	tablat,w,c
 31844  0035D8  0900               	iorlw	0
 31845  0035DA  A4D8               	btfss	status,2,c
 31846  0035DC  D7D9               	goto	l1620
 31847                           
 31848                           ;display.c: 440: cntr = 0;
 31849  0035DE  0E00               	movlw	0
 31850  0035E0  6E22               	movwf	__display_checked@cntr,c
 31851                           
 31852                           ;display.c: 441: while(checked_line2[cntr])
 31853  0035E2  D017               	goto	l1622
 31854  0035E4                     
 31855                           ;display.c: 442: display_content[1][cntr] = checked_line2[cntr++];
 31856  0035E4  5022               	movf	__display_checked@cntr,w,c
 31857  0035E6  0D01               	mullw	1
 31858  0035E8  0E99               	movlw	low _checked_line2
 31859  0035EA  24F3               	addwf	prodl,w,c
 31860  0035EC  6EF6               	movwf	tblptrl,c
 31861  0035EE  0E8C               	movlw	high _checked_line2
 31862  0035F0  20F4               	addwfc	prodh,w,c
 31863  0035F2  6EF7               	movwf	tblptrh,c
 31864  0035F4                     	if	1	;There are 3 active tblptr bytes
 31865  0035F4  6AF8               	clrf	tblptru,c
 31866  0035F6  0E00               	movlw	low (__mediumconst shr (0+16))
 31867  0035F8  22F8               	addwfc	tblptru,f,c
 31868  0035FA                     	endif
 31869  0035FA  5022               	movf	__display_checked@cntr,w,c
 31870  0035FC  0D01               	mullw	1
 31871  0035FE  0E8A               	movlw	low (_display_content+20)
 31872  003600  24F3               	addwf	prodl,w,c
 31873  003602  6ED9               	movwf	fsr2l,c
 31874  003604  0E01               	movlw	high (_display_content+20)
 31875  003606  20F4               	addwfc	prodh,w,c
 31876  003608  6EDA               	movwf	fsr2h,c
 31877  00360A  0008               	tblrd		*
 31878  00360C  CFF5 FFDF          	movff	tablat,indf2
 31879  003610  2A22               	incf	__display_checked@cntr,f,c
 31880  003612                     l1622:
 31881  003612  5022               	movf	__display_checked@cntr,w,c
 31882  003614  0D01               	mullw	1
 31883  003616  0E99               	movlw	low _checked_line2
 31884  003618  24F3               	addwf	prodl,w,c
 31885  00361A  6EF6               	movwf	tblptrl,c
 31886  00361C  0E8C               	movlw	high _checked_line2
 31887  00361E  20F4               	addwfc	prodh,w,c
 31888  003620  6EF7               	movwf	tblptrh,c
 31889  003622                     	if	1	;There are 3 active tblptr bytes
 31890  003622  6AF8               	clrf	tblptru,c
 31891  003624  0E00               	movlw	low (__mediumconst shr (0+16))
 31892  003626  22F8               	addwfc	tblptru,f,c
 31893  003628                     	endif
 31894  003628  0008               	tblrd		*
 31895  00362A  50F5               	movf	tablat,w,c
 31896  00362C  0900               	iorlw	0
 31897  00362E  A4D8               	btfss	status,2,c
 31898  003630  D7D9               	goto	l1623
 31899                           
 31900                           ;display.c: 444: start = _display_itoa_u16(bootloader_get_total_entries(), &display_cont
      +                          ent[2][0]);
 31901  003632  EC43  F040         	call	_bootloader_get_total_entries	;wreg free
 31902  003636  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 31903  00363A  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 31904  00363E  6A1B               	clrf	__display_itoa_u16@value+2,c
 31905  003640  6A1C               	clrf	__display_itoa_u16@value+3,c
 31906  003642  0E9E               	movlw	low (_display_content+40)
 31907  003644  6E1D               	movwf	__display_itoa_u16@text,c
 31908  003646  0E01               	movlw	high (_display_content+40)
 31909  003648  6E1E               	movwf	__display_itoa_u16@text+1,c
 31910  00364A  EC23  F02A         	call	__display_itoa_u16	;wreg free
 31911  00364E  6E21               	movwf	__display_checked@start,c
 31912                           
 31913                           ;display.c: 445: start++;
 31914  003650  2A21               	incf	__display_checked@start,f,c
 31915                           
 31916                           ;display.c: 446: cntr = 0;
 31917  003652  0E00               	movlw	0
 31918  003654  6E22               	movwf	__display_checked@cntr,c
 31919                           
 31920                           ;display.c: 447: while(checked_line3[cntr])
 31921  003656  D01C               	goto	l1625
 31922  003658                     
 31923                           ;display.c: 448: display_content[2][start+cntr] = checked_line3[cntr++];
 31924  003658  5022               	movf	__display_checked@cntr,w,c
 31925  00365A  0D01               	mullw	1
 31926  00365C  0E73               	movlw	low _checked_line3
 31927  00365E  24F3               	addwf	prodl,w,c
 31928  003660  6EF6               	movwf	tblptrl,c
 31929  003662  0E8E               	movlw	high _checked_line3
 31930  003664  20F4               	addwfc	prodh,w,c
 31931  003666  6EF7               	movwf	tblptrh,c
 31932  003668                     	if	1	;There are 3 active tblptr bytes
 31933  003668  6AF8               	clrf	tblptru,c
 31934  00366A  0E00               	movlw	low (__mediumconst shr (0+16))
 31935  00366C  22F8               	addwfc	tblptru,f,c
 31936  00366E                     	endif
 31937  00366E  5022               	movf	__display_checked@cntr,w,c
 31938  003670  C021  F01F         	movff	__display_checked@start,??__display_checked
 31939  003674  6A20               	clrf	(??__display_checked+1)& (0+255),c
 31940  003676  261F               	addwf	??__display_checked,f,c
 31941  003678  0E00               	movlw	0
 31942  00367A  2220               	addwfc	??__display_checked+1,f,c
 31943  00367C  0E9E               	movlw	low (_display_content+40)
 31944  00367E  241F               	addwf	??__display_checked,w,c
 31945  003680  6ED9               	movwf	fsr2l,c
 31946  003682  0E01               	movlw	high (_display_content+40)
 31947  003684  2020               	addwfc	??__display_checked+1,w,c
 31948  003686  6EDA               	movwf	fsr2h,c
 31949  003688  0008               	tblrd		*
 31950  00368A  CFF5 FFDF          	movff	tablat,indf2
 31951  00368E  2A22               	incf	__display_checked@cntr,f,c
 31952  003690                     l1625:
 31953  003690  5022               	movf	__display_checked@cntr,w,c
 31954  003692  0D01               	mullw	1
 31955  003694  0E73               	movlw	low _checked_line3
 31956  003696  24F3               	addwf	prodl,w,c
 31957  003698  6EF6               	movwf	tblptrl,c
 31958  00369A  0E8E               	movlw	high _checked_line3
 31959  00369C  20F4               	addwfc	prodh,w,c
 31960  00369E  6EF7               	movwf	tblptrh,c
 31961  0036A0                     	if	1	;There are 3 active tblptr bytes
 31962  0036A0  6AF8               	clrf	tblptru,c
 31963  0036A2  0E00               	movlw	low (__mediumconst shr (0+16))
 31964  0036A4  22F8               	addwfc	tblptru,f,c
 31965  0036A6                     	endif
 31966  0036A6  0008               	tblrd		*
 31967  0036A8  50F5               	movf	tablat,w,c
 31968  0036AA  0900               	iorlw	0
 31969  0036AC  A4D8               	btfss	status,2,c
 31970  0036AE  D7D4               	goto	l1626
 31971                           
 31972                           ;display.c: 450: cntr = 0;
 31973  0036B0  0E00               	movlw	0
 31974  0036B2  6E22               	movwf	__display_checked@cntr,c
 31975                           
 31976                           ;display.c: 451: while(checked_line4[cntr])
 31977  0036B4  D017               	goto	l1628
 31978  0036B6                     
 31979                           ;display.c: 452: display_content[3][cntr] = checked_line4[cntr++];
 31980  0036B6  5022               	movf	__display_checked@cntr,w,c
 31981  0036B8  0D01               	mullw	1
 31982  0036BA  0E32               	movlw	low _checked_line4
 31983  0036BC  24F3               	addwf	prodl,w,c
 31984  0036BE  6EF6               	movwf	tblptrl,c
 31985  0036C0  0E8D               	movlw	high _checked_line4
 31986  0036C2  20F4               	addwfc	prodh,w,c
 31987  0036C4  6EF7               	movwf	tblptrh,c
 31988  0036C6                     	if	1	;There are 3 active tblptr bytes
 31989  0036C6  6AF8               	clrf	tblptru,c
 31990  0036C8  0E00               	movlw	low (__mediumconst shr (0+16))
 31991  0036CA  22F8               	addwfc	tblptru,f,c
 31992  0036CC                     	endif
 31993  0036CC  5022               	movf	__display_checked@cntr,w,c
 31994  0036CE  0D01               	mullw	1
 31995  0036D0  0EB2               	movlw	low (_display_content+60)
 31996  0036D2  24F3               	addwf	prodl,w,c
 31997  0036D4  6ED9               	movwf	fsr2l,c
 31998  0036D6  0E01               	movlw	high (_display_content+60)
 31999  0036D8  20F4               	addwfc	prodh,w,c
 32000  0036DA  6EDA               	movwf	fsr2h,c
 32001  0036DC  0008               	tblrd		*
 32002  0036DE  CFF5 FFDF          	movff	tablat,indf2
 32003  0036E2  2A22               	incf	__display_checked@cntr,f,c
 32004  0036E4                     l1628:
 32005  0036E4  5022               	movf	__display_checked@cntr,w,c
 32006  0036E6  0D01               	mullw	1
 32007  0036E8  0E32               	movlw	low _checked_line4
 32008  0036EA  24F3               	addwf	prodl,w,c
 32009  0036EC  6EF6               	movwf	tblptrl,c
 32010  0036EE  0E8D               	movlw	high _checked_line4
 32011  0036F0  20F4               	addwfc	prodh,w,c
 32012  0036F2  6EF7               	movwf	tblptrh,c
 32013  0036F4                     	if	1	;There are 3 active tblptr bytes
 32014  0036F4  6AF8               	clrf	tblptru,c
 32015  0036F6  0E00               	movlw	low (__mediumconst shr (0+16))
 32016  0036F8  22F8               	addwfc	tblptru,f,c
 32017  0036FA                     	endif
 32018  0036FA  0008               	tblrd		*
 32019  0036FC  50F5               	movf	tablat,w,c
 32020  0036FE  0900               	iorlw	0
 32021  003700  B4D8               	btfsc	status,2,c
 32022  003702  0012               	return	
 32023  003704  D7D8               	goto	l1629
 32024  003706                     __end_of__display_checked:
 32025                           	opt stack 0
 32026                           tosu	equ	0xFFF
 32027                           tosh	equ	0xFFE
 32028                           tosl	equ	0xFFD
 32029                           pclath	equ	0xFFA
 32030                           tblptru	equ	0xFF8
 32031                           tblptrh	equ	0xFF7
 32032                           tblptrl	equ	0xFF6
 32033                           tablat	equ	0xFF5
 32034                           prodh	equ	0xFF4
 32035                           prodl	equ	0xFF3
 32036                           intcon	equ	0xFF2
 32037                           intcon2	equ	0xFF1
 32038                           intcon3	equ	0xFF0
 32039                           indf0	equ	0xFEF
 32040                           postinc0	equ	0xFEE
 32041                           fsr0h	equ	0xFEA
 32042                           fsr0l	equ	0xFE9
 32043                           wreg	equ	0xFE8
 32044                           indf1	equ	0xFE7
 32045                           postdec1	equ	0xFE5
 32046                           plusw1	equ	0xFE3
 32047                           fsr1h	equ	0xFE2
 32048                           fsr1l	equ	0xFE1
 32049                           indf2	equ	0xFDF
 32050                           postinc2	equ	0xFDE
 32051                           postdec2	equ	0xFDD
 32052                           plusw2	equ	0xFDB
 32053                           fsr2h	equ	0xFDA
 32054                           fsr2l	equ	0xFD9
 32055                           status	equ	0xFD8
 32056                           
 32057 ;; *************** function _bootloader_get_total_entries *****************
 32058 ;; Defined at:
 32059 ;;		line 437 in file "bootloader.c"
 32060 ;; Parameters:    Size  Location     Type
 32061 ;;		None
 32062 ;; Auto vars:     Size  Location     Type
 32063 ;;		None
 32064 ;; Return value:  Size  Location     Type
 32065 ;;                  2    0[COMRAM] unsigned int 
 32066 ;; Registers used:
 32067 ;;		None
 32068 ;; Tracked objects:
 32069 ;;		On entry : 0/0
 32070 ;;		On exit  : 0/0
 32071 ;;		Unchanged: 0/0
 32072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32073 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32076 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32077 ;;Total ram usage:        2 bytes
 32078 ;; Hardware stack levels used:    1
 32079 ;; This function calls:
 32080 ;;		Nothing
 32081 ;; This function is called by:
 32082 ;;		__display_checked
 32083 ;;		__display_programming
 32084 ;;		__fill_buffer_get_bootloader_details
 32085 ;; This function uses a non-reentrant model
 32086 ;;
 32087                           
 32088                           	psect	text154
 32089  008086                     __ptext154:
 32090                           	opt stack 0
 32091  008086                     _bootloader_get_total_entries:
 32092                           	opt stack 25
 32093                           
 32094                           ;bootloader.c: 439: return total_hex_file_entries;
 32095                           
 32096                           ;incstack = 0
 32097  008086  C168  F001         	movff	_total_hex_file_entries,?_bootloader_get_total_entries
 32098  00808A  C169  F002         	movff	_total_hex_file_entries+1,?_bootloader_get_total_entries+1
 32099  00808E  0012               	return		;funcret
 32100  008090                     __end_of_bootloader_get_total_entries:
 32101                           	opt stack 0
 32102                           tosu	equ	0xFFF
 32103                           tosh	equ	0xFFE
 32104                           tosl	equ	0xFFD
 32105                           pclath	equ	0xFFA
 32106                           tblptru	equ	0xFF8
 32107                           tblptrh	equ	0xFF7
 32108                           tblptrl	equ	0xFF6
 32109                           tablat	equ	0xFF5
 32110                           prodh	equ	0xFF4
 32111                           prodl	equ	0xFF3
 32112                           intcon	equ	0xFF2
 32113                           intcon2	equ	0xFF1
 32114                           intcon3	equ	0xFF0
 32115                           indf0	equ	0xFEF
 32116                           postinc0	equ	0xFEE
 32117                           fsr0h	equ	0xFEA
 32118                           fsr0l	equ	0xFE9
 32119                           wreg	equ	0xFE8
 32120                           indf1	equ	0xFE7
 32121                           postdec1	equ	0xFE5
 32122                           plusw1	equ	0xFE3
 32123                           fsr1h	equ	0xFE2
 32124                           fsr1l	equ	0xFE1
 32125                           indf2	equ	0xFDF
 32126                           postinc2	equ	0xFDE
 32127                           postdec2	equ	0xFDD
 32128                           plusw2	equ	0xFDB
 32129                           fsr2h	equ	0xFDA
 32130                           fsr2l	equ	0xFD9
 32131                           status	equ	0xFD8
 32132                           
 32133 ;; *************** function __display_itoa_u16 *****************
 32134 ;; Defined at:
 32135 ;;		line 88 in file "display.c"
 32136 ;; Parameters:    Size  Location     Type
 32137 ;;  value           4   24[COMRAM] unsigned long 
 32138 ;;  text            2   28[COMRAM] PTR unsigned char 
 32139 ;;		 -> display_content(80), 
 32140 ;; Auto vars:     Size  Location     Type
 32141 ;;		None
 32142 ;; Return value:  Size  Location     Type
 32143 ;;                  1    wreg      unsigned char 
 32144 ;; Registers used:
 32145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32146 ;; Tracked objects:
 32147 ;;		On entry : 0/0
 32148 ;;		On exit  : 0/0
 32149 ;;		Unchanged: 0/0
 32150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32151 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32154 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32155 ;;Total ram usage:        6 bytes
 32156 ;; Hardware stack levels used:    1
 32157 ;; Hardware stack levels required when called:    3
 32158 ;; This function calls:
 32159 ;;		_itoa
 32160 ;; This function is called by:
 32161 ;;		__display_itoa_u32
 32162 ;;		__display_verify
 32163 ;;		__display_checked
 32164 ;;		__display_failed
 32165 ;;		__display_programming
 32166 ;;		__display_done
 32167 ;; This function uses a non-reentrant model
 32168 ;;
 32169                           
 32170                           	psect	text155
 32171  005446                     __ptext155:
 32172                           	opt stack 0
 32173  005446                     __display_itoa_u16:
 32174                           	opt stack 22
 32175                           
 32176                           ;display.c: 90: itoa(text, value, 10);
 32177                           
 32178                           ;incstack = 0
 32179  005446  C01D  F011         	movff	__display_itoa_u16@text,itoa@buf
 32180  00544A  C01E  F012         	movff	__display_itoa_u16@text+1,itoa@buf+1
 32181  00544E  C019  F013         	movff	__display_itoa_u16@value,itoa@val
 32182  005452  C01A  F014         	movff	__display_itoa_u16@value+1,itoa@val+1
 32183  005456  0E00               	movlw	0
 32184  005458  6E16               	movwf	itoa@base+1,c
 32185  00545A  0E0A               	movlw	10
 32186  00545C  6E15               	movwf	itoa@base,c
 32187  00545E  ECB1  F03B         	call	_itoa	;wreg free
 32188                           
 32189                           ;display.c: 91: if(value>9999)
 32190  005462  501C               	movf	__display_itoa_u16@value+3,w,c
 32191  005464  101B               	iorwf	__display_itoa_u16@value+2,w,c
 32192  005466  E106               	bnz	u6660
 32193  005468  0E10               	movlw	16
 32194  00546A  5C19               	subwf	__display_itoa_u16@value,w,c
 32195  00546C  0E27               	movlw	39
 32196  00546E  581A               	subwfb	__display_itoa_u16@value+1,w,c
 32197  005470  A0D8               	btfss	status,0,c
 32198  005472  D00A               	goto	l1468
 32199  005474                     u6660:
 32200                           
 32201                           ;display.c: 92: {;display.c: 93: *(text+5) = ' ';
 32202  005474  EE20 F005          	lfsr	2,5
 32203  005478  501D               	movf	__display_itoa_u16@text,w,c
 32204  00547A  26D9               	addwf	fsr2l,f,c
 32205  00547C  501E               	movf	__display_itoa_u16@text+1,w,c
 32206  00547E  22DA               	addwfc	fsr2h,f,c
 32207  005480  0E20               	movlw	32
 32208  005482  6EDF               	movwf	indf2,c
 32209                           
 32210                           ;display.c: 94: return 5;
 32211  005484  0E05               	movlw	5
 32212                           
 32213                           ;display.c: 95: }
 32214  005486  0012               	return	
 32215  005488                     l1468:
 32216                           
 32217                           ;display.c: 96: else if (value>999)
 32218  005488  501C               	movf	__display_itoa_u16@value+3,w,c
 32219  00548A  101B               	iorwf	__display_itoa_u16@value+2,w,c
 32220  00548C  E106               	bnz	u6670
 32221  00548E  0EE8               	movlw	232
 32222  005490  5C19               	subwf	__display_itoa_u16@value,w,c
 32223  005492  0E03               	movlw	3
 32224  005494  581A               	subwfb	__display_itoa_u16@value+1,w,c
 32225  005496  A0D8               	btfss	status,0,c
 32226  005498  D00A               	goto	l1471
 32227  00549A                     u6670:
 32228                           
 32229                           ;display.c: 97: {;display.c: 98: *(text+4) = ' ';
 32230  00549A  EE20 F004          	lfsr	2,4
 32231  00549E  501D               	movf	__display_itoa_u16@text,w,c
 32232  0054A0  26D9               	addwf	fsr2l,f,c
 32233  0054A2  501E               	movf	__display_itoa_u16@text+1,w,c
 32234  0054A4  22DA               	addwfc	fsr2h,f,c
 32235  0054A6  0E20               	movlw	32
 32236  0054A8  6EDF               	movwf	indf2,c
 32237                           
 32238                           ;display.c: 99: return 4;
 32239  0054AA  0E04               	movlw	4
 32240                           
 32241                           ;display.c: 100: }
 32242  0054AC  0012               	return	
 32243  0054AE                     l1471:
 32244                           
 32245                           ;display.c: 101: else if (value>99)
 32246  0054AE  501C               	movf	__display_itoa_u16@value+3,w,c
 32247  0054B0  101B               	iorwf	__display_itoa_u16@value+2,w,c
 32248  0054B2  101A               	iorwf	__display_itoa_u16@value+1,w,c
 32249  0054B4  E104               	bnz	u6680
 32250  0054B6  0E64               	movlw	100
 32251  0054B8  5C19               	subwf	__display_itoa_u16@value,w,c
 32252  0054BA  A0D8               	btfss	status,0,c
 32253  0054BC  D00A               	goto	l1473
 32254  0054BE                     u6680:
 32255                           
 32256                           ;display.c: 102: {;display.c: 103: *(text+3) = ' ';
 32257  0054BE  EE20 F003          	lfsr	2,3
 32258  0054C2  501D               	movf	__display_itoa_u16@text,w,c
 32259  0054C4  26D9               	addwf	fsr2l,f,c
 32260  0054C6  501E               	movf	__display_itoa_u16@text+1,w,c
 32261  0054C8  22DA               	addwfc	fsr2h,f,c
 32262  0054CA  0E20               	movlw	32
 32263  0054CC  6EDF               	movwf	indf2,c
 32264                           
 32265                           ;display.c: 104: return 3;
 32266  0054CE  0E03               	movlw	3
 32267                           
 32268                           ;display.c: 105: }
 32269  0054D0  0012               	return	
 32270  0054D2                     l1473:
 32271                           
 32272                           ;display.c: 106: else if (value>9)
 32273  0054D2  501C               	movf	__display_itoa_u16@value+3,w,c
 32274  0054D4  101B               	iorwf	__display_itoa_u16@value+2,w,c
 32275  0054D6  101A               	iorwf	__display_itoa_u16@value+1,w,c
 32276  0054D8  E104               	bnz	u6690
 32277  0054DA  0E0A               	movlw	10
 32278  0054DC  5C19               	subwf	__display_itoa_u16@value,w,c
 32279  0054DE  A0D8               	btfss	status,0,c
 32280  0054E0  D00A               	goto	l1475
 32281  0054E2                     u6690:
 32282                           
 32283                           ;display.c: 107: {;display.c: 108: *(text+2) = ' ';
 32284  0054E2  EE20 F002          	lfsr	2,2
 32285  0054E6  501D               	movf	__display_itoa_u16@text,w,c
 32286  0054E8  26D9               	addwf	fsr2l,f,c
 32287  0054EA  501E               	movf	__display_itoa_u16@text+1,w,c
 32288  0054EC  22DA               	addwfc	fsr2h,f,c
 32289  0054EE  0E20               	movlw	32
 32290  0054F0  6EDF               	movwf	indf2,c
 32291                           
 32292                           ;display.c: 109: return 2;
 32293  0054F2  0E02               	movlw	2
 32294                           
 32295                           ;display.c: 110: }
 32296  0054F4  0012               	return	
 32297  0054F6                     l1475:
 32298                           
 32299                           ;display.c: 111: else;display.c: 112: {;display.c: 113: *(text+1) = ' ';
 32300  0054F6  EE20 F001          	lfsr	2,1
 32301  0054FA  501D               	movf	__display_itoa_u16@text,w,c
 32302  0054FC  26D9               	addwf	fsr2l,f,c
 32303  0054FE  501E               	movf	__display_itoa_u16@text+1,w,c
 32304  005500  22DA               	addwfc	fsr2h,f,c
 32305  005502  0E20               	movlw	32
 32306  005504  6EDF               	movwf	indf2,c
 32307                           
 32308                           ;display.c: 114: return 1;
 32309  005506  0E01               	movlw	1
 32310  005508  0012               	return	
 32311  00550A                     __end_of__display_itoa_u16:
 32312                           	opt stack 0
 32313                           tosu	equ	0xFFF
 32314                           tosh	equ	0xFFE
 32315                           tosl	equ	0xFFD
 32316                           pclath	equ	0xFFA
 32317                           tblptru	equ	0xFF8
 32318                           tblptrh	equ	0xFF7
 32319                           tblptrl	equ	0xFF6
 32320                           tablat	equ	0xFF5
 32321                           prodh	equ	0xFF4
 32322                           prodl	equ	0xFF3
 32323                           intcon	equ	0xFF2
 32324                           intcon2	equ	0xFF1
 32325                           intcon3	equ	0xFF0
 32326                           indf0	equ	0xFEF
 32327                           postinc0	equ	0xFEE
 32328                           fsr0h	equ	0xFEA
 32329                           fsr0l	equ	0xFE9
 32330                           wreg	equ	0xFE8
 32331                           indf1	equ	0xFE7
 32332                           postdec1	equ	0xFE5
 32333                           plusw1	equ	0xFE3
 32334                           fsr1h	equ	0xFE2
 32335                           fsr1l	equ	0xFE1
 32336                           indf2	equ	0xFDF
 32337                           postinc2	equ	0xFDE
 32338                           postdec2	equ	0xFDD
 32339                           plusw2	equ	0xFDB
 32340                           fsr2h	equ	0xFDA
 32341                           fsr2l	equ	0xFD9
 32342                           status	equ	0xFD8
 32343                           
 32344 ;; *************** function _itoa *****************
 32345 ;; Defined at:
 32346 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 32347 ;; Parameters:    Size  Location     Type
 32348 ;;  buf             2   16[COMRAM] PTR unsigned char 
 32349 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 32350 ;;  val             2   18[COMRAM] int 
 32351 ;;  base            2   20[COMRAM] int 
 32352 ;; Auto vars:     Size  Location     Type
 32353 ;;  cp              2   22[COMRAM] PTR unsigned char 
 32354 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 32355 ;; Return value:  Size  Location     Type
 32356 ;;                  2   16[COMRAM] PTR unsigned char 
 32357 ;; Registers used:
 32358 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32359 ;; Tracked objects:
 32360 ;;		On entry : 0/0
 32361 ;;		On exit  : 0/0
 32362 ;;		Unchanged: 0/0
 32363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32364 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32365 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32367 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32368 ;;Total ram usage:        8 bytes
 32369 ;; Hardware stack levels used:    1
 32370 ;; Hardware stack levels required when called:    2
 32371 ;; This function calls:
 32372 ;;		_utoa
 32373 ;; This function is called by:
 32374 ;;		__display_itoa_u16
 32375 ;;		__display_itoa_u32
 32376 ;;		__display_itoa
 32377 ;; This function uses a non-reentrant model
 32378 ;;
 32379                           
 32380                           	psect	text156
 32381  007762                     __ptext156:
 32382                           	opt stack 0
 32383  007762                     _itoa:
 32384                           	opt stack 22
 32385                           
 32386                           ;incstack = 0
 32387  007762  C011  F017         	movff	itoa@buf,itoa@cp
 32388  007766  C012  F018         	movff	itoa@buf+1,itoa@cp+1
 32389  00776A  AE14               	btfss	itoa@val+1,7,c
 32390  00776C  D00C               	goto	l3493
 32391  00776E  C011  FFD9         	movff	itoa@buf,fsr2l
 32392  007772  C012  FFDA         	movff	itoa@buf+1,fsr2h
 32393  007776  0E2D               	movlw	45
 32394  007778  6EDF               	movwf	indf2,c
 32395  00777A  4A11               	infsnz	itoa@buf,f,c
 32396  00777C  2A12               	incf	itoa@buf+1,f,c
 32397  00777E  6C13               	negf	itoa@val,c
 32398  007780  1E14               	comf	itoa@val+1,f,c
 32399  007782  B0D8               	btfsc	status,0,c
 32400  007784  2A14               	incf	itoa@val+1,f,c
 32401  007786                     l3493:
 32402  007786  C011  F008         	movff	itoa@buf,utoa@buf
 32403  00778A  C012  F009         	movff	itoa@buf+1,utoa@buf+1
 32404  00778E  C013  F00A         	movff	itoa@val,utoa@val
 32405  007792  C014  F00B         	movff	itoa@val+1,utoa@val+1
 32406  007796  C015  F00C         	movff	itoa@base,utoa@base
 32407  00779A  C016  F00D         	movff	itoa@base+1,utoa@base+1
 32408  00779E  EC58  F02E         	call	_utoa	;wreg free
 32409  0077A2  0012               	return	
 32410  0077A4                     __end_of_itoa:
 32411                           	opt stack 0
 32412                           tosu	equ	0xFFF
 32413                           tosh	equ	0xFFE
 32414                           tosl	equ	0xFFD
 32415                           pclath	equ	0xFFA
 32416                           tblptru	equ	0xFF8
 32417                           tblptrh	equ	0xFF7
 32418                           tblptrl	equ	0xFF6
 32419                           tablat	equ	0xFF5
 32420                           prodh	equ	0xFF4
 32421                           prodl	equ	0xFF3
 32422                           intcon	equ	0xFF2
 32423                           intcon2	equ	0xFF1
 32424                           intcon3	equ	0xFF0
 32425                           indf0	equ	0xFEF
 32426                           postinc0	equ	0xFEE
 32427                           fsr0h	equ	0xFEA
 32428                           fsr0l	equ	0xFE9
 32429                           wreg	equ	0xFE8
 32430                           indf1	equ	0xFE7
 32431                           postdec1	equ	0xFE5
 32432                           plusw1	equ	0xFE3
 32433                           fsr1h	equ	0xFE2
 32434                           fsr1l	equ	0xFE1
 32435                           indf2	equ	0xFDF
 32436                           postinc2	equ	0xFDE
 32437                           postdec2	equ	0xFDD
 32438                           plusw2	equ	0xFDB
 32439                           fsr2h	equ	0xFDA
 32440                           fsr2l	equ	0xFD9
 32441                           status	equ	0xFD8
 32442                           
 32443 ;; *************** function _utoa *****************
 32444 ;; Defined at:
 32445 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 32446 ;; Parameters:    Size  Location     Type
 32447 ;;  buf             2    7[COMRAM] PTR unsigned char 
 32448 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 32449 ;;  val             2    9[COMRAM] unsigned int 
 32450 ;;  base            2   11[COMRAM] int 
 32451 ;; Auto vars:     Size  Location     Type
 32452 ;;  v               2   13[COMRAM] unsigned int 
 32453 ;;  c               1   15[COMRAM] unsigned char 
 32454 ;; Return value:  Size  Location     Type
 32455 ;;                  2    7[COMRAM] PTR unsigned char 
 32456 ;; Registers used:
 32457 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32458 ;; Tracked objects:
 32459 ;;		On entry : 0/0
 32460 ;;		On exit  : 0/0
 32461 ;;		Unchanged: 0/0
 32462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32463 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32464 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32466 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32467 ;;Total ram usage:        9 bytes
 32468 ;; Hardware stack levels used:    1
 32469 ;; Hardware stack levels required when called:    1
 32470 ;; This function calls:
 32471 ;;		___lwdiv
 32472 ;;		___lwmod
 32473 ;; This function is called by:
 32474 ;;		_itoa
 32475 ;; This function uses a non-reentrant model
 32476 ;;
 32477                           
 32478                           	psect	text157
 32479  005CB0                     __ptext157:
 32480                           	opt stack 0
 32481  005CB0                     _utoa:
 32482                           	opt stack 22
 32483                           
 32484                           ;incstack = 0
 32485  005CB0  C00A  F00E         	movff	utoa@val,utoa@v
 32486  005CB4  C00B  F00F         	movff	utoa@val+1,utoa@v+1
 32487  005CB8  C00E  F001         	movff	utoa@v,___lwdiv@dividend
 32488  005CBC  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
 32489  005CC0  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 32490  005CC4  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 32491  005CC8  EC60  F03A         	call	___lwdiv	;wreg free
 32492  005CCC  C001  F00E         	movff	?___lwdiv,utoa@v
 32493  005CD0  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
 32494  005CD4  4A08               	infsnz	utoa@buf,f,c
 32495  005CD6  2A09               	incf	utoa@buf+1,f,c
 32496  005CD8  500E               	movf	utoa@v,w,c
 32497  005CDA  100F               	iorwf	utoa@v+1,w,c
 32498  005CDC  A4D8               	btfss	status,2,c
 32499  005CDE  D7EC               	goto	l3497
 32500  005CE0  C008  FFD9         	movff	utoa@buf,fsr2l
 32501  005CE4  C009  FFDA         	movff	utoa@buf+1,fsr2h
 32502  005CE8  0E00               	movlw	0
 32503  005CEA  6EDF               	movwf	indf2,c
 32504  005CEC  0608               	decf	utoa@buf,f,c
 32505  005CEE  A0D8               	btfss	status,0,c
 32506  005CF0  0609               	decf	utoa@buf+1,f,c
 32507  005CF2  C00A  F001         	movff	utoa@val,___lwmod@dividend
 32508  005CF6  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
 32509  005CFA  C00C  F003         	movff	utoa@base,___lwmod@divisor
 32510  005CFE  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
 32511  005D02  ECD2  F03B         	call	___lwmod	;wreg free
 32512  005D06  5001               	movf	?___lwmod,w,c
 32513  005D08  6E10               	movwf	utoa@c,c
 32514  005D0A  C00A  F001         	movff	utoa@val,___lwdiv@dividend
 32515  005D0E  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
 32516  005D12  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 32517  005D16  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 32518  005D1A  EC60  F03A         	call	___lwdiv	;wreg free
 32519  005D1E  C001  F00A         	movff	?___lwdiv,utoa@val
 32520  005D22  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
 32521  005D26  0E09               	movlw	9
 32522  005D28  6410               	cpfsgt	utoa@c,c
 32523  005D2A  D002               	goto	l3500
 32524  005D2C  0E07               	movlw	7
 32525  005D2E  2610               	addwf	utoa@c,f,c
 32526  005D30                     l3500:
 32527  005D30  0E30               	movlw	48
 32528  005D32  2610               	addwf	utoa@c,f,c
 32529  005D34  C008  FFD9         	movff	utoa@buf,fsr2l
 32530  005D38  C009  FFDA         	movff	utoa@buf+1,fsr2h
 32531  005D3C  C010  FFDF         	movff	utoa@c,indf2
 32532  005D40  0608               	decf	utoa@buf,f,c
 32533  005D42  A0D8               	btfss	status,0,c
 32534  005D44  0609               	decf	utoa@buf+1,f,c
 32535  005D46  500A               	movf	utoa@val,w,c
 32536  005D48  100B               	iorwf	utoa@val+1,w,c
 32537  005D4A  A4D8               	btfss	status,2,c
 32538  005D4C  D7D2               	goto	l3499
 32539                           
 32540                           ;	Return value of _utoa is never used
 32541  005D4E  4A08               	infsnz	utoa@buf,f,c
 32542  005D50  2A09               	incf	utoa@buf+1,f,c
 32543  005D52  0012               	return	
 32544  005D54                     __end_of_utoa:
 32545                           	opt stack 0
 32546                           tosu	equ	0xFFF
 32547                           tosh	equ	0xFFE
 32548                           tosl	equ	0xFFD
 32549                           pclath	equ	0xFFA
 32550                           tblptru	equ	0xFF8
 32551                           tblptrh	equ	0xFF7
 32552                           tblptrl	equ	0xFF6
 32553                           tablat	equ	0xFF5
 32554                           prodh	equ	0xFF4
 32555                           prodl	equ	0xFF3
 32556                           intcon	equ	0xFF2
 32557                           intcon2	equ	0xFF1
 32558                           intcon3	equ	0xFF0
 32559                           indf0	equ	0xFEF
 32560                           postinc0	equ	0xFEE
 32561                           fsr0h	equ	0xFEA
 32562                           fsr0l	equ	0xFE9
 32563                           wreg	equ	0xFE8
 32564                           indf1	equ	0xFE7
 32565                           postdec1	equ	0xFE5
 32566                           plusw1	equ	0xFE3
 32567                           fsr1h	equ	0xFE2
 32568                           fsr1l	equ	0xFE1
 32569                           indf2	equ	0xFDF
 32570                           postinc2	equ	0xFDE
 32571                           postdec2	equ	0xFDD
 32572                           plusw2	equ	0xFDB
 32573                           fsr2h	equ	0xFDA
 32574                           fsr2l	equ	0xFD9
 32575                           status	equ	0xFD8
 32576                           
 32577 ;; *************** function ___lwmod *****************
 32578 ;; Defined at:
 32579 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 32580 ;; Parameters:    Size  Location     Type
 32581 ;;  dividend        2    0[COMRAM] unsigned int 
 32582 ;;  divisor         2    2[COMRAM] unsigned int 
 32583 ;; Auto vars:     Size  Location     Type
 32584 ;;  counter         1    4[COMRAM] unsigned char 
 32585 ;; Return value:  Size  Location     Type
 32586 ;;                  2    0[COMRAM] unsigned int 
 32587 ;; Registers used:
 32588 ;;		wreg, status,2, status,0
 32589 ;; Tracked objects:
 32590 ;;		On entry : 0/0
 32591 ;;		On exit  : 0/0
 32592 ;;		Unchanged: 0/0
 32593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32594 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32595 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32597 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32598 ;;Total ram usage:        5 bytes
 32599 ;; Hardware stack levels used:    1
 32600 ;; This function calls:
 32601 ;;		Nothing
 32602 ;; This function is called by:
 32603 ;;		_utoa
 32604 ;; This function uses a non-reentrant model
 32605 ;;
 32606                           
 32607                           	psect	text158
 32608  0077A4                     __ptext158:
 32609                           	opt stack 0
 32610  0077A4                     ___lwmod:
 32611                           	opt stack 22
 32612                           
 32613                           ;incstack = 0
 32614  0077A4  5003               	movf	___lwmod@divisor,w,c
 32615  0077A6  1004               	iorwf	___lwmod@divisor+1,w,c
 32616  0077A8  B4D8               	btfsc	status,2,c
 32617  0077AA  D018               	goto	l3324
 32618  0077AC  0E01               	movlw	1
 32619  0077AE  6E05               	movwf	___lwmod@counter,c
 32620  0077B0  D004               	goto	l3319
 32621  0077B2  90D8               	bcf	status,0,c
 32622  0077B4  3603               	rlcf	___lwmod@divisor,f,c
 32623  0077B6  3604               	rlcf	___lwmod@divisor+1,f,c
 32624  0077B8  2A05               	incf	___lwmod@counter,f,c
 32625  0077BA                     l3319:
 32626  0077BA  AE04               	btfss	___lwmod@divisor+1,7,c
 32627  0077BC  D7FA               	goto	l3320
 32628  0077BE                     u6120:
 32629  0077BE  5003               	movf	___lwmod@divisor,w,c
 32630  0077C0  5C01               	subwf	___lwmod@dividend,w,c
 32631  0077C2  5004               	movf	___lwmod@divisor+1,w,c
 32632  0077C4  5802               	subwfb	___lwmod@dividend+1,w,c
 32633  0077C6  A0D8               	btfss	status,0,c
 32634  0077C8  D004               	goto	l3323
 32635  0077CA  5003               	movf	___lwmod@divisor,w,c
 32636  0077CC  5E01               	subwf	___lwmod@dividend,f,c
 32637  0077CE  5004               	movf	___lwmod@divisor+1,w,c
 32638  0077D0  5A02               	subwfb	___lwmod@dividend+1,f,c
 32639  0077D2                     l3323:
 32640  0077D2  90D8               	bcf	status,0,c
 32641  0077D4  3204               	rrcf	___lwmod@divisor+1,f,c
 32642  0077D6  3203               	rrcf	___lwmod@divisor,f,c
 32643  0077D8  2E05               	decfsz	___lwmod@counter,f,c
 32644  0077DA  D7F1               	goto	u6120
 32645  0077DC                     l3324:
 32646  0077DC  C001  F001         	movff	___lwmod@dividend,?___lwmod
 32647  0077E0  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 32648  0077E4  0012               	return		;funcret
 32649  0077E6                     __end_of___lwmod:
 32650                           	opt stack 0
 32651                           tosu	equ	0xFFF
 32652                           tosh	equ	0xFFE
 32653                           tosl	equ	0xFFD
 32654                           pclath	equ	0xFFA
 32655                           tblptru	equ	0xFF8
 32656                           tblptrh	equ	0xFF7
 32657                           tblptrl	equ	0xFF6
 32658                           tablat	equ	0xFF5
 32659                           prodh	equ	0xFF4
 32660                           prodl	equ	0xFF3
 32661                           intcon	equ	0xFF2
 32662                           intcon2	equ	0xFF1
 32663                           intcon3	equ	0xFF0
 32664                           indf0	equ	0xFEF
 32665                           postinc0	equ	0xFEE
 32666                           fsr0h	equ	0xFEA
 32667                           fsr0l	equ	0xFE9
 32668                           wreg	equ	0xFE8
 32669                           indf1	equ	0xFE7
 32670                           postdec1	equ	0xFE5
 32671                           plusw1	equ	0xFE3
 32672                           fsr1h	equ	0xFE2
 32673                           fsr1l	equ	0xFE1
 32674                           indf2	equ	0xFDF
 32675                           postinc2	equ	0xFDE
 32676                           postdec2	equ	0xFDD
 32677                           plusw2	equ	0xFDB
 32678                           fsr2h	equ	0xFDA
 32679                           fsr2l	equ	0xFD9
 32680                           status	equ	0xFD8
 32681                           
 32682 ;; *************** function ___lwdiv *****************
 32683 ;; Defined at:
 32684 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 32685 ;; Parameters:    Size  Location     Type
 32686 ;;  dividend        2    0[COMRAM] unsigned int 
 32687 ;;  divisor         2    2[COMRAM] unsigned int 
 32688 ;; Auto vars:     Size  Location     Type
 32689 ;;  quotient        2    4[COMRAM] unsigned int 
 32690 ;;  counter         1    6[COMRAM] unsigned char 
 32691 ;; Return value:  Size  Location     Type
 32692 ;;                  2    0[COMRAM] unsigned int 
 32693 ;; Registers used:
 32694 ;;		wreg, status,2, status,0
 32695 ;; Tracked objects:
 32696 ;;		On entry : 0/0
 32697 ;;		On exit  : 0/0
 32698 ;;		Unchanged: 0/0
 32699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32700 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32701 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32703 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32704 ;;Total ram usage:        7 bytes
 32705 ;; Hardware stack levels used:    1
 32706 ;; This function calls:
 32707 ;;		Nothing
 32708 ;; This function is called by:
 32709 ;;		_utoa
 32710 ;; This function uses a non-reentrant model
 32711 ;;
 32712                           
 32713                           	psect	text159
 32714  0074C0                     __ptext159:
 32715                           	opt stack 0
 32716  0074C0                     ___lwdiv:
 32717                           	opt stack 22
 32718                           
 32719                           ;incstack = 0
 32720  0074C0  0E00               	movlw	0
 32721  0074C2  6E06               	movwf	___lwdiv@quotient+1,c
 32722  0074C4  0E00               	movlw	0
 32723  0074C6  6E05               	movwf	___lwdiv@quotient,c
 32724  0074C8  5003               	movf	___lwdiv@divisor,w,c
 32725  0074CA  1004               	iorwf	___lwdiv@divisor+1,w,c
 32726  0074CC  B4D8               	btfsc	status,2,c
 32727  0074CE  D01C               	goto	l3314
 32728  0074D0  0E01               	movlw	1
 32729  0074D2  6E07               	movwf	___lwdiv@counter,c
 32730  0074D4  D004               	goto	l3309
 32731  0074D6  90D8               	bcf	status,0,c
 32732  0074D8  3603               	rlcf	___lwdiv@divisor,f,c
 32733  0074DA  3604               	rlcf	___lwdiv@divisor+1,f,c
 32734  0074DC  2A07               	incf	___lwdiv@counter,f,c
 32735  0074DE                     l3309:
 32736  0074DE  AE04               	btfss	___lwdiv@divisor+1,7,c
 32737  0074E0  D7FA               	goto	l3310
 32738  0074E2                     u6090:
 32739  0074E2  90D8               	bcf	status,0,c
 32740  0074E4  3605               	rlcf	___lwdiv@quotient,f,c
 32741  0074E6  3606               	rlcf	___lwdiv@quotient+1,f,c
 32742  0074E8  5003               	movf	___lwdiv@divisor,w,c
 32743  0074EA  5C01               	subwf	___lwdiv@dividend,w,c
 32744  0074EC  5004               	movf	___lwdiv@divisor+1,w,c
 32745  0074EE  5802               	subwfb	___lwdiv@dividend+1,w,c
 32746  0074F0  A0D8               	btfss	status,0,c
 32747  0074F2  D005               	goto	l3313
 32748  0074F4  5003               	movf	___lwdiv@divisor,w,c
 32749  0074F6  5E01               	subwf	___lwdiv@dividend,f,c
 32750  0074F8  5004               	movf	___lwdiv@divisor+1,w,c
 32751  0074FA  5A02               	subwfb	___lwdiv@dividend+1,f,c
 32752  0074FC  8005               	bsf	___lwdiv@quotient,0,c
 32753  0074FE                     l3313:
 32754  0074FE  90D8               	bcf	status,0,c
 32755  007500  3204               	rrcf	___lwdiv@divisor+1,f,c
 32756  007502  3203               	rrcf	___lwdiv@divisor,f,c
 32757  007504  2E07               	decfsz	___lwdiv@counter,f,c
 32758  007506  D7ED               	goto	u6090
 32759  007508                     l3314:
 32760  007508  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 32761  00750C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 32762  007510  0012               	return		;funcret
 32763  007512                     __end_of___lwdiv:
 32764                           	opt stack 0
 32765                           tosu	equ	0xFFF
 32766                           tosh	equ	0xFFE
 32767                           tosl	equ	0xFFD
 32768                           pclath	equ	0xFFA
 32769                           tblptru	equ	0xFF8
 32770                           tblptrh	equ	0xFF7
 32771                           tblptrl	equ	0xFF6
 32772                           tablat	equ	0xFF5
 32773                           prodh	equ	0xFF4
 32774                           prodl	equ	0xFF3
 32775                           intcon	equ	0xFF2
 32776                           intcon2	equ	0xFF1
 32777                           intcon3	equ	0xFF0
 32778                           indf0	equ	0xFEF
 32779                           postinc0	equ	0xFEE
 32780                           fsr0h	equ	0xFEA
 32781                           fsr0l	equ	0xFE9
 32782                           wreg	equ	0xFE8
 32783                           indf1	equ	0xFE7
 32784                           postdec1	equ	0xFE5
 32785                           plusw1	equ	0xFE3
 32786                           fsr1h	equ	0xFE2
 32787                           fsr1l	equ	0xFE1
 32788                           indf2	equ	0xFDF
 32789                           postinc2	equ	0xFDE
 32790                           postdec2	equ	0xFDD
 32791                           plusw2	equ	0xFDB
 32792                           fsr2h	equ	0xFDA
 32793                           fsr2l	equ	0xFD9
 32794                           status	equ	0xFD8
 32795                           
 32796 ;; *************** function _i2c_eeprom_writeByte *****************
 32797 ;; Defined at:
 32798 ;;		line 352 in file "i2c.c"
 32799 ;; Parameters:    Size  Location     Type
 32800 ;;  address         2   10[COMRAM] unsigned int 
 32801 ;;  data            1   12[COMRAM] unsigned char 
 32802 ;; Auto vars:     Size  Location     Type
 32803 ;;  dat             2   16[COMRAM] unsigned char [2]
 32804 ;;  slave_addres    1   18[COMRAM] unsigned char 
 32805 ;; Return value:  Size  Location     Type
 32806 ;;                  1    wreg      void 
 32807 ;; Registers used:
 32808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32809 ;; Tracked objects:
 32810 ;;		On entry : 0/0
 32811 ;;		On exit  : 0/0
 32812 ;;		Unchanged: 0/0
 32813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32814 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32815 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32816 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32817 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32818 ;;Total ram usage:        9 bytes
 32819 ;; Hardware stack levels used:    1
 32820 ;; Hardware stack levels required when called:    2
 32821 ;; This function calls:
 32822 ;;		__i2c_write
 32823 ;;		_i2c_set_frequency
 32824 ;; This function is called by:
 32825 ;;		__normal_mode
 32826 ;;		__ui_encoder
 32827 ;;		__parse_command_short
 32828 ;; This function uses a non-reentrant model
 32829 ;;
 32830                           
 32831                           	psect	text160
 32832  0077E6                     __ptext160:
 32833                           	opt stack 0
 32834  0077E6                     _i2c_eeprom_writeByte:
 32835                           	opt stack 26
 32836                           
 32837                           ;i2c.c: 354: uint8_t slave_address;;i2c.c: 355: uint8_t dat[2];;i2c.c: 357: slave_addres
      +                          s = 0b10100000 | ((address&0b0000011100000000)>>7);
 32838                           
 32839                           ;incstack = 0
 32840  0077E6  C00B  F00E         	movff	i2c_eeprom_writeByte@address,??_i2c_eeprom_writeByte
 32841  0077EA  C00C  F00F         	movff	i2c_eeprom_writeByte@address+1,??_i2c_eeprom_writeByte+1
 32842  0077EE  0E07               	movlw	7
 32843  0077F0  6E10               	movwf	(??_i2c_eeprom_writeByte+2)& (0+255),c
 32844  0077F2                     u9375:
 32845  0077F2  90D8               	bcf	status,0,c
 32846  0077F4  320F               	rrcf	??_i2c_eeprom_writeByte+1,f,c
 32847  0077F6  320E               	rrcf	??_i2c_eeprom_writeByte,f,c
 32848  0077F8  2E10               	decfsz	(??_i2c_eeprom_writeByte+2)& (0+255),f,c
 32849  0077FA  D7FB               	goto	u9375
 32850  0077FC  500E               	movf	??_i2c_eeprom_writeByte,w,c
 32851  0077FE  0B0E               	andlw	14
 32852  007800  09A0               	iorlw	160
 32853  007802  6E13               	movwf	i2c_eeprom_writeByte@slave_address,c
 32854                           
 32855                           ;i2c.c: 358: dat[0] = address & 0xFF;
 32856  007804  C00B  F011         	movff	i2c_eeprom_writeByte@address,i2c_eeprom_writeByte@dat
 32857                           
 32858                           ;i2c.c: 359: dat[1] = data;
 32859  007808  C00D  F012         	movff	i2c_eeprom_writeByte@data,i2c_eeprom_writeByte@dat+1
 32860                           
 32861                           ;i2c.c: 362: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 32862  00780C  0E02               	movlw	2
 32863  00780E  EC34  F03E         	call	_i2c_set_frequency
 32864                           
 32865                           ;i2c.c: 364: _i2c_write(slave_address, &dat[0], 2);
 32866  007812  0E11               	movlw	low i2c_eeprom_writeByte@dat
 32867  007814  6E06               	movwf	__i2c_write@data,c
 32868  007816  0E00               	movlw	high i2c_eeprom_writeByte@dat
 32869  007818  6E07               	movwf	__i2c_write@data+1,c
 32870  00781A  0E02               	movlw	2
 32871  00781C  6E08               	movwf	__i2c_write@length,c
 32872  00781E  5013               	movf	i2c_eeprom_writeByte@slave_address,w,c
 32873  007820  EC26  F03B         	call	__i2c_write
 32874  007824  0012               	return		;funcret
 32875  007826                     __end_of_i2c_eeprom_writeByte:
 32876                           	opt stack 0
 32877                           tosu	equ	0xFFF
 32878                           tosh	equ	0xFFE
 32879                           tosl	equ	0xFFD
 32880                           pclath	equ	0xFFA
 32881                           tblptru	equ	0xFF8
 32882                           tblptrh	equ	0xFF7
 32883                           tblptrl	equ	0xFF6
 32884                           tablat	equ	0xFF5
 32885                           prodh	equ	0xFF4
 32886                           prodl	equ	0xFF3
 32887                           intcon	equ	0xFF2
 32888                           intcon2	equ	0xFF1
 32889                           intcon3	equ	0xFF0
 32890                           indf0	equ	0xFEF
 32891                           postinc0	equ	0xFEE
 32892                           fsr0h	equ	0xFEA
 32893                           fsr0l	equ	0xFE9
 32894                           wreg	equ	0xFE8
 32895                           indf1	equ	0xFE7
 32896                           postdec1	equ	0xFE5
 32897                           plusw1	equ	0xFE3
 32898                           fsr1h	equ	0xFE2
 32899                           fsr1l	equ	0xFE1
 32900                           indf2	equ	0xFDF
 32901                           postinc2	equ	0xFDE
 32902                           postdec2	equ	0xFDD
 32903                           plusw2	equ	0xFDB
 32904                           fsr2h	equ	0xFDA
 32905                           fsr2l	equ	0xFD9
 32906                           status	equ	0xFD8
 32907                           
 32908 ;; *************** function _i2c_set_frequency *****************
 32909 ;; Defined at:
 32910 ;;		line 123 in file "i2c.c"
 32911 ;; Parameters:    Size  Location     Type
 32912 ;;  frequency       1    wreg     enum E6622
 32913 ;; Auto vars:     Size  Location     Type
 32914 ;;  frequency       1    0[COMRAM] enum E6622
 32915 ;; Return value:  Size  Location     Type
 32916 ;;                  1    wreg      void 
 32917 ;; Registers used:
 32918 ;;		wreg, status,2, status,0
 32919 ;; Tracked objects:
 32920 ;;		On entry : 0/0
 32921 ;;		On exit  : 0/0
 32922 ;;		Unchanged: 0/0
 32923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32925 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32927 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32928 ;;Total ram usage:        1 bytes
 32929 ;; Hardware stack levels used:    1
 32930 ;; This function calls:
 32931 ;;		Nothing
 32932 ;; This function is called by:
 32933 ;;		_i2c_init
 32934 ;;		__ic2_display_set_address
 32935 ;;		_i2c_display_send_init_sequence
 32936 ;;		_i2c_display_cursor
 32937 ;;		_i2c_display_write_fixed
 32938 ;;		_i2c_digipot_reset_on
 32939 ;;		_i2c_digipot_reset_off
 32940 ;;		_i2c_digipot_backlight
 32941 ;;		_i2c_eeprom_writeByte
 32942 ;;		_i2c_eeprom_readByte
 32943 ;;		_i2c_display_write
 32944 ;;		_i2c_eeprom_write
 32945 ;;		_i2c_eeprom_read
 32946 ;; This function uses a non-reentrant model
 32947 ;;
 32948                           
 32949                           	psect	text161
 32950  007C68                     __ptext161:
 32951                           	opt stack 0
 32952  007C68                     _i2c_set_frequency:
 32953                           	opt stack 28
 32954                           
 32955                           ;incstack = 0
 32956                           ;i2c_set_frequency@frequency stored from wreg
 32957  007C68  6E01               	movwf	i2c_set_frequency@frequency,c
 32958                           
 32959                           ;i2c.c: 125: switch(frequency)
 32960  007C6A  D007               	goto	l1192
 32961  007C6C                     
 32962                           ;i2c.c: 128: SSP1ADD = 119;
 32963  007C6C  0E77               	movlw	119
 32964  007C6E  D003               	goto	L35
 32965  007C70                     
 32966                           ;i2c.c: 131: SSP1ADD = 59;
 32967  007C70  0E3B               	movlw	59
 32968  007C72  D001               	goto	L35
 32969  007C74                     
 32970                           ;i2c.c: 134: SSP1ADD = 29;
 32971  007C74  0E1D               	movlw	29
 32972  007C76                     L35:
 32973  007C76  6EC8               	movwf	4040,c	;volatile
 32974                           
 32975                           ;i2c.c: 136: }
 32976                           
 32977                           ;i2c.c: 135: break;
 32978  007C78  D00A               	goto	l1194
 32979  007C7A                     l1192:
 32980  007C7A  5001               	movf	i2c_set_frequency@frequency,w,c
 32981                           
 32982                           ; Switch size 1, requested type "space"
 32983                           ; Number of cases is 3, Range of values is 0 to 2
 32984                           ; switch strategies available:
 32985                           ; Name         Instructions Cycles
 32986                           ; simple_byte           10     6 (average)
 32987                           ;	Chosen strategy is simple_byte
 32988  007C7C  0A00               	xorlw	0	; case 0
 32989  007C7E  B4D8               	btfsc	status,2,c
 32990  007C80  D7F5               	goto	l1193
 32991  007C82  0A01               	xorlw	1	; case 1
 32992  007C84  B4D8               	btfsc	status,2,c
 32993  007C86  D7F4               	goto	l1195
 32994  007C88  0A03               	xorlw	3	; case 2
 32995  007C8A  B4D8               	btfsc	status,2,c
 32996  007C8C  D7F3               	goto	l1196
 32997  007C8E                     l1194:
 32998                           
 32999                           ;i2c.c: 138: i2c_frequency = frequency;
 33000  007C8E  C001  F099         	movff	i2c_set_frequency@frequency,_i2c_frequency
 33001  007C92  0012               	return		;funcret
 33002  007C94                     __end_of_i2c_set_frequency:
 33003                           	opt stack 0
 33004                           tosu	equ	0xFFF
 33005                           tosh	equ	0xFFE
 33006                           tosl	equ	0xFFD
 33007                           pclath	equ	0xFFA
 33008                           tblptru	equ	0xFF8
 33009                           tblptrh	equ	0xFF7
 33010                           tblptrl	equ	0xFF6
 33011                           tablat	equ	0xFF5
 33012                           prodh	equ	0xFF4
 33013                           prodl	equ	0xFF3
 33014                           intcon	equ	0xFF2
 33015                           intcon2	equ	0xFF1
 33016                           intcon3	equ	0xFF0
 33017                           indf0	equ	0xFEF
 33018                           postinc0	equ	0xFEE
 33019                           fsr0h	equ	0xFEA
 33020                           fsr0l	equ	0xFE9
 33021                           wreg	equ	0xFE8
 33022                           indf1	equ	0xFE7
 33023                           postdec1	equ	0xFE5
 33024                           plusw1	equ	0xFE3
 33025                           fsr1h	equ	0xFE2
 33026                           fsr1l	equ	0xFE1
 33027                           indf2	equ	0xFDF
 33028                           postinc2	equ	0xFDE
 33029                           postdec2	equ	0xFDD
 33030                           plusw2	equ	0xFDB
 33031                           fsr2h	equ	0xFDA
 33032                           fsr2l	equ	0xFD9
 33033                           status	equ	0xFD8
 33034                           
 33035 ;; *************** function __i2c_write *****************
 33036 ;; Defined at:
 33037 ;;		line 142 in file "i2c.c"
 33038 ;; Parameters:    Size  Location     Type
 33039 ;;  slave_addres    1    wreg     unsigned char 
 33040 ;;  data            2    5[COMRAM] PTR unsigned char 
 33041 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 33042 ;;		 -> i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2), i2c_digipot_reset_on@data_array(2), i2
      +c_display_send_init_sequence@init_sequence(9), 
 33043 ;;		 -> _ic2_display_set_address@data_array(2), 
 33044 ;;  length          1    7[COMRAM] unsigned char 
 33045 ;; Auto vars:     Size  Location     Type
 33046 ;;  slave_addres    1    8[COMRAM] unsigned char 
 33047 ;;  cntr            1    9[COMRAM] unsigned char 
 33048 ;; Return value:  Size  Location     Type
 33049 ;;                  1    wreg      void 
 33050 ;; Registers used:
 33051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33052 ;; Tracked objects:
 33053 ;;		On entry : 0/0
 33054 ;;		On exit  : 0/0
 33055 ;;		Unchanged: 0/0
 33056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33057 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33058 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33060 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33061 ;;Total ram usage:        5 bytes
 33062 ;; Hardware stack levels used:    1
 33063 ;; Hardware stack levels required when called:    1
 33064 ;; This function calls:
 33065 ;;		__i2c_send
 33066 ;;		__i2c_start
 33067 ;;		__i2c_stop
 33068 ;;		__i2c_wait_idle
 33069 ;; This function is called by:
 33070 ;;		__ic2_display_set_address
 33071 ;;		_i2c_display_send_init_sequence
 33072 ;;		_i2c_digipot_reset_on
 33073 ;;		_i2c_digipot_reset_off
 33074 ;;		_i2c_digipot_backlight
 33075 ;;		_i2c_eeprom_writeByte
 33076 ;;		_i2c_eeprom_readByte
 33077 ;;		_i2c_eeprom_write
 33078 ;;		_i2c_eeprom_read
 33079 ;; This function uses a non-reentrant model
 33080 ;;
 33081                           
 33082                           	psect	text162
 33083  00764C                     __ptext162:
 33084                           	opt stack 0
 33085  00764C                     __i2c_write:
 33086                           	opt stack 27
 33087                           
 33088                           ;incstack = 0
 33089                           ;__i2c_write@slave_address stored from wreg
 33090  00764C  6E09               	movwf	__i2c_write@slave_address,c
 33091                           
 33092                           ;i2c.c: 144: uint8_t cntr;;i2c.c: 146: _i2c_wait_idle();
 33093  00764E  EC58  F038         	call	__i2c_wait_idle	;wreg free
 33094                           
 33095                           ;i2c.c: 147: _i2c_start();
 33096  007652  EC5B  F040         	call	__i2c_start	;wreg free
 33097                           
 33098                           ;i2c.c: 148: _i2c_wait_idle();
 33099  007656  EC58  F038         	call	__i2c_wait_idle	;wreg free
 33100                           
 33101                           ;i2c.c: 149: _i2c_send(slave_address);
 33102  00765A  5009               	movf	__i2c_write@slave_address,w,c
 33103  00765C  EC5F  F040         	call	__i2c_send
 33104                           
 33105                           ;i2c.c: 150: _i2c_wait_idle();
 33106  007660  EC58  F038         	call	__i2c_wait_idle	;wreg free
 33107                           
 33108                           ;i2c.c: 152: for(cntr=0; cntr<length; ++cntr)
 33109  007664  0E00               	movlw	0
 33110  007666  6E0A               	movwf	__i2c_write@cntr,c
 33111  007668  D00E               	goto	l1200
 33112  00766A                     
 33113                           ;i2c.c: 153: {;i2c.c: 154: _i2c_send(data[cntr]);
 33114  00766A  500A               	movf	__i2c_write@cntr,w,c
 33115  00766C  0D01               	mullw	1
 33116  00766E  50F3               	movf	prodl,w,c
 33117  007670  2406               	addwf	__i2c_write@data,w,c
 33118  007672  6ED9               	movwf	fsr2l,c
 33119  007674  50F4               	movf	prodh,w,c
 33120  007676  2007               	addwfc	__i2c_write@data+1,w,c
 33121  007678  6EDA               	movwf	fsr2h,c
 33122  00767A  50DF               	movf	indf2,w,c
 33123  00767C  EC5F  F040         	call	__i2c_send
 33124                           
 33125                           ;i2c.c: 155: _i2c_wait_idle();
 33126  007680  EC58  F038         	call	__i2c_wait_idle	;wreg free
 33127  007684  2A0A               	incf	__i2c_write@cntr,f,c
 33128  007686                     l1200:
 33129  007686  5008               	movf	__i2c_write@length,w,c
 33130  007688  5C0A               	subwf	__i2c_write@cntr,w,c
 33131  00768A  A0D8               	btfss	status,0,c
 33132  00768C  D7EE               	goto	l1201
 33133                           
 33134                           ;i2c.c: 156: };i2c.c: 158: _i2c_stop();
 33135  00768E  EC57  F040         	call	__i2c_stop	;wreg free
 33136  007692  0012               	return		;funcret
 33137  007694                     __end_of__i2c_write:
 33138                           	opt stack 0
 33139                           tosu	equ	0xFFF
 33140                           tosh	equ	0xFFE
 33141                           tosl	equ	0xFFD
 33142                           pclath	equ	0xFFA
 33143                           tblptru	equ	0xFF8
 33144                           tblptrh	equ	0xFF7
 33145                           tblptrl	equ	0xFF6
 33146                           tablat	equ	0xFF5
 33147                           prodh	equ	0xFF4
 33148                           prodl	equ	0xFF3
 33149                           intcon	equ	0xFF2
 33150                           intcon2	equ	0xFF1
 33151                           intcon3	equ	0xFF0
 33152                           indf0	equ	0xFEF
 33153                           postinc0	equ	0xFEE
 33154                           fsr0h	equ	0xFEA
 33155                           fsr0l	equ	0xFE9
 33156                           wreg	equ	0xFE8
 33157                           indf1	equ	0xFE7
 33158                           postdec1	equ	0xFE5
 33159                           plusw1	equ	0xFE3
 33160                           fsr1h	equ	0xFE2
 33161                           fsr1l	equ	0xFE1
 33162                           indf2	equ	0xFDF
 33163                           postinc2	equ	0xFDE
 33164                           postdec2	equ	0xFDD
 33165                           plusw2	equ	0xFDB
 33166                           fsr2h	equ	0xFDA
 33167                           fsr2l	equ	0xFD9
 33168                           status	equ	0xFD8
 33169                           
 33170 ;; *************** function __i2c_wait_idle *****************
 33171 ;; Defined at:
 33172 ;;		line 48 in file "i2c.c"
 33173 ;; Parameters:    Size  Location     Type
 33174 ;;		None
 33175 ;; Auto vars:     Size  Location     Type
 33176 ;;		None
 33177 ;; Return value:  Size  Location     Type
 33178 ;;                  1    wreg      void 
 33179 ;; Registers used:
 33180 ;;		wreg, status,2, status,0
 33181 ;; Tracked objects:
 33182 ;;		On entry : 0/0
 33183 ;;		On exit  : 0/0
 33184 ;;		Unchanged: 0/0
 33185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33188 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33189 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33190 ;;Total ram usage:        5 bytes
 33191 ;; Hardware stack levels used:    1
 33192 ;; This function calls:
 33193 ;;		Nothing
 33194 ;; This function is called by:
 33195 ;;		__i2c_write
 33196 ;;		__i2c_read
 33197 ;;		_i2c_display_write_fixed
 33198 ;;		_i2c_display_write
 33199 ;; This function uses a non-reentrant model
 33200 ;;
 33201                           
 33202                           	psect	text163
 33203  0070B0                     __ptext163:
 33204                           	opt stack 0
 33205  0070B0                     __i2c_wait_idle:
 33206                           	opt stack 27
 33207                           
 33208                           ;i2c.c: 50: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 33209                           
 33210                           ;incstack = 0
 33211  0070B0  A4C7               	btfss	4039,2,c	;volatile
 33212  0070B2  D003               	goto	u6260
 33213  0070B4  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 33214  0070B6  2A01               	incf	??__i2c_wait_idle& (0+255),f,c
 33215  0070B8  D001               	goto	u6268
 33216  0070BA                     u6260:
 33217  0070BA  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 33218  0070BC                     u6268:
 33219  0070BC  A0C5               	btfss	4037,0,c	;volatile
 33220  0070BE  D003               	goto	u6270
 33221  0070C0  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 33222  0070C2  2A02               	incf	(??__i2c_wait_idle+1)& (0+255),f,c
 33223  0070C4  D001               	goto	u6278
 33224  0070C6                     u6270:
 33225  0070C6  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 33226  0070C8                     u6278:
 33227  0070C8  A2C5               	btfss	4037,1,c	;volatile
 33228  0070CA  D003               	goto	u6280
 33229  0070CC  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 33230  0070CE  2A03               	incf	(??__i2c_wait_idle+2)& (0+255),f,c
 33231  0070D0  D001               	goto	u6288
 33232  0070D2                     u6280:
 33233  0070D2  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 33234  0070D4                     u6288:
 33235  0070D4  A4C5               	btfss	4037,2,c	;volatile
 33236  0070D6  D003               	goto	u6290
 33237  0070D8  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 33238  0070DA  2A04               	incf	(??__i2c_wait_idle+3)& (0+255),f,c
 33239  0070DC  D001               	goto	u6298
 33240  0070DE                     u6290:
 33241  0070DE  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 33242  0070E0                     u6298:
 33243  0070E0  A6C5               	btfss	4037,3,c	;volatile
 33244  0070E2  D003               	goto	u6300
 33245  0070E4  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 33246  0070E6  2A05               	incf	(??__i2c_wait_idle+4)& (0+255),f,c
 33247  0070E8  D001               	goto	u6308
 33248  0070EA                     u6300:
 33249  0070EA  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 33250  0070EC                     u6308:
 33251  0070EC  A8C5               	btfss	4037,4,c	;volatile
 33252  0070EE  D002               	goto	u6310
 33253  0070F0  0E01               	movlw	1
 33254  0070F2  D001               	goto	u6316
 33255  0070F4                     u6310:
 33256  0070F4  0E00               	movlw	0
 33257  0070F6                     u6316:
 33258  0070F6  1005               	iorwf	??__i2c_wait_idle+4,w,c
 33259  0070F8  1004               	iorwf	??__i2c_wait_idle+3,w,c
 33260  0070FA  1003               	iorwf	??__i2c_wait_idle+2,w,c
 33261  0070FC  1002               	iorwf	??__i2c_wait_idle+1,w,c
 33262  0070FE  1001               	iorwf	??__i2c_wait_idle,w,c
 33263  007100  0900               	iorlw	0
 33264  007102  B4D8               	btfsc	status,2,c
 33265  007104  0012               	return	
 33266  007106  D7D4               	goto	__i2c_wait_idle
 33267  007108                     __end_of__i2c_wait_idle:
 33268                           	opt stack 0
 33269                           tosu	equ	0xFFF
 33270                           tosh	equ	0xFFE
 33271                           tosl	equ	0xFFD
 33272                           pclath	equ	0xFFA
 33273                           tblptru	equ	0xFF8
 33274                           tblptrh	equ	0xFF7
 33275                           tblptrl	equ	0xFF6
 33276                           tablat	equ	0xFF5
 33277                           prodh	equ	0xFF4
 33278                           prodl	equ	0xFF3
 33279                           intcon	equ	0xFF2
 33280                           intcon2	equ	0xFF1
 33281                           intcon3	equ	0xFF0
 33282                           indf0	equ	0xFEF
 33283                           postinc0	equ	0xFEE
 33284                           fsr0h	equ	0xFEA
 33285                           fsr0l	equ	0xFE9
 33286                           wreg	equ	0xFE8
 33287                           indf1	equ	0xFE7
 33288                           postdec1	equ	0xFE5
 33289                           plusw1	equ	0xFE3
 33290                           fsr1h	equ	0xFE2
 33291                           fsr1l	equ	0xFE1
 33292                           indf2	equ	0xFDF
 33293                           postinc2	equ	0xFDE
 33294                           postdec2	equ	0xFDD
 33295                           plusw2	equ	0xFDB
 33296                           fsr2h	equ	0xFDA
 33297                           fsr2l	equ	0xFD9
 33298                           status	equ	0xFD8
 33299                           
 33300 ;; *************** function __i2c_stop *****************
 33301 ;; Defined at:
 33302 ;;		line 75 in file "i2c.c"
 33303 ;; Parameters:    Size  Location     Type
 33304 ;;		None
 33305 ;; Auto vars:     Size  Location     Type
 33306 ;;		None
 33307 ;; Return value:  Size  Location     Type
 33308 ;;                  1    wreg      void 
 33309 ;; Registers used:
 33310 ;;		None
 33311 ;; Tracked objects:
 33312 ;;		On entry : 0/0
 33313 ;;		On exit  : 0/0
 33314 ;;		Unchanged: 0/0
 33315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33320 ;;Total ram usage:        0 bytes
 33321 ;; Hardware stack levels used:    1
 33322 ;; This function calls:
 33323 ;;		Nothing
 33324 ;; This function is called by:
 33325 ;;		__i2c_write
 33326 ;;		__i2c_read
 33327 ;;		_i2c_display_write_fixed
 33328 ;;		_i2c_display_write
 33329 ;; This function uses a non-reentrant model
 33330 ;;
 33331                           
 33332                           	psect	text164
 33333  0080AE                     __ptext164:
 33334                           	opt stack 0
 33335  0080AE                     __i2c_stop:
 33336                           	opt stack 27
 33337                           
 33338                           ;i2c.c: 77: SSP1CON2bits.PEN = 1;
 33339                           
 33340                           ;incstack = 0
 33341  0080AE  84C5               	bsf	4037,2,c	;volatile
 33342  0080B0  A4C5               	btfss	4037,2,c	;volatile
 33343  0080B2  0012               	return	
 33344  0080B4  D7FD               	goto	l1166
 33345  0080B6                     __end_of__i2c_stop:
 33346                           	opt stack 0
 33347                           tosu	equ	0xFFF
 33348                           tosh	equ	0xFFE
 33349                           tosl	equ	0xFFD
 33350                           pclath	equ	0xFFA
 33351                           tblptru	equ	0xFF8
 33352                           tblptrh	equ	0xFF7
 33353                           tblptrl	equ	0xFF6
 33354                           tablat	equ	0xFF5
 33355                           prodh	equ	0xFF4
 33356                           prodl	equ	0xFF3
 33357                           intcon	equ	0xFF2
 33358                           intcon2	equ	0xFF1
 33359                           intcon3	equ	0xFF0
 33360                           indf0	equ	0xFEF
 33361                           postinc0	equ	0xFEE
 33362                           fsr0h	equ	0xFEA
 33363                           fsr0l	equ	0xFE9
 33364                           wreg	equ	0xFE8
 33365                           indf1	equ	0xFE7
 33366                           postdec1	equ	0xFE5
 33367                           plusw1	equ	0xFE3
 33368                           fsr1h	equ	0xFE2
 33369                           fsr1l	equ	0xFE1
 33370                           indf2	equ	0xFDF
 33371                           postinc2	equ	0xFDE
 33372                           postdec2	equ	0xFDD
 33373                           plusw2	equ	0xFDB
 33374                           fsr2h	equ	0xFDA
 33375                           fsr2l	equ	0xFD9
 33376                           status	equ	0xFD8
 33377                           
 33378 ;; *************** function __i2c_start *****************
 33379 ;; Defined at:
 33380 ;;		line 54 in file "i2c.c"
 33381 ;; Parameters:    Size  Location     Type
 33382 ;;		None
 33383 ;; Auto vars:     Size  Location     Type
 33384 ;;		None
 33385 ;; Return value:  Size  Location     Type
 33386 ;;                  1    wreg      void 
 33387 ;; Registers used:
 33388 ;;		None
 33389 ;; Tracked objects:
 33390 ;;		On entry : 0/0
 33391 ;;		On exit  : 0/0
 33392 ;;		Unchanged: 0/0
 33393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33398 ;;Total ram usage:        0 bytes
 33399 ;; Hardware stack levels used:    1
 33400 ;; This function calls:
 33401 ;;		Nothing
 33402 ;; This function is called by:
 33403 ;;		__i2c_write
 33404 ;;		__i2c_read
 33405 ;;		_i2c_display_write_fixed
 33406 ;;		_i2c_display_write
 33407 ;; This function uses a non-reentrant model
 33408 ;;
 33409                           
 33410                           	psect	text165
 33411  0080B6                     __ptext165:
 33412                           	opt stack 0
 33413  0080B6                     __i2c_start:
 33414                           	opt stack 27
 33415                           
 33416                           ;i2c.c: 56: SSP1CON2bits.SEN=1;
 33417                           
 33418                           ;incstack = 0
 33419  0080B6  80C5               	bsf	4037,0,c	;volatile
 33420  0080B8  A0C5               	btfss	4037,0,c	;volatile
 33421  0080BA  0012               	return	
 33422  0080BC  D7FD               	goto	l1151
 33423  0080BE                     __end_of__i2c_start:
 33424                           	opt stack 0
 33425                           tosu	equ	0xFFF
 33426                           tosh	equ	0xFFE
 33427                           tosl	equ	0xFFD
 33428                           pclath	equ	0xFFA
 33429                           tblptru	equ	0xFF8
 33430                           tblptrh	equ	0xFF7
 33431                           tblptrl	equ	0xFF6
 33432                           tablat	equ	0xFF5
 33433                           prodh	equ	0xFF4
 33434                           prodl	equ	0xFF3
 33435                           intcon	equ	0xFF2
 33436                           intcon2	equ	0xFF1
 33437                           intcon3	equ	0xFF0
 33438                           indf0	equ	0xFEF
 33439                           postinc0	equ	0xFEE
 33440                           fsr0h	equ	0xFEA
 33441                           fsr0l	equ	0xFE9
 33442                           wreg	equ	0xFE8
 33443                           indf1	equ	0xFE7
 33444                           postdec1	equ	0xFE5
 33445                           plusw1	equ	0xFE3
 33446                           fsr1h	equ	0xFE2
 33447                           fsr1l	equ	0xFE1
 33448                           indf2	equ	0xFDF
 33449                           postinc2	equ	0xFDE
 33450                           postdec2	equ	0xFDD
 33451                           plusw2	equ	0xFDB
 33452                           fsr2h	equ	0xFDA
 33453                           fsr2l	equ	0xFD9
 33454                           status	equ	0xFD8
 33455                           
 33456 ;; *************** function __i2c_send *****************
 33457 ;; Defined at:
 33458 ;;		line 61 in file "i2c.c"
 33459 ;; Parameters:    Size  Location     Type
 33460 ;;  dat             1    wreg     unsigned char 
 33461 ;; Auto vars:     Size  Location     Type
 33462 ;;  dat             1    0[COMRAM] unsigned char 
 33463 ;; Return value:  Size  Location     Type
 33464 ;;                  1    wreg      void 
 33465 ;; Registers used:
 33466 ;;		wreg
 33467 ;; Tracked objects:
 33468 ;;		On entry : 0/0
 33469 ;;		On exit  : 0/0
 33470 ;;		Unchanged: 0/0
 33471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33473 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33475 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33476 ;;Total ram usage:        1 bytes
 33477 ;; Hardware stack levels used:    1
 33478 ;; This function calls:
 33479 ;;		Nothing
 33480 ;; This function is called by:
 33481 ;;		__i2c_write
 33482 ;;		__i2c_read
 33483 ;;		_i2c_display_write_fixed
 33484 ;;		_i2c_display_write
 33485 ;; This function uses a non-reentrant model
 33486 ;;
 33487                           
 33488                           	psect	text166
 33489  0080BE                     __ptext166:
 33490                           	opt stack 0
 33491  0080BE                     __i2c_send:
 33492                           	opt stack 27
 33493                           
 33494                           ;incstack = 0
 33495                           ;__i2c_send@dat stored from wreg
 33496  0080BE  6E01               	movwf	__i2c_send@dat,c
 33497                           
 33498                           ;i2c.c: 63: SSP1BUF = dat;
 33499  0080C0  C001  FFC9         	movff	__i2c_send@dat,4041	;volatile
 33500  0080C4  0012               	return		;funcret
 33501  0080C6                     __end_of__i2c_send:
 33502                           	opt stack 0
 33503                           tosu	equ	0xFFF
 33504                           tosh	equ	0xFFE
 33505                           tosl	equ	0xFFD
 33506                           pclath	equ	0xFFA
 33507                           tblptru	equ	0xFF8
 33508                           tblptrh	equ	0xFF7
 33509                           tblptrl	equ	0xFF6
 33510                           tablat	equ	0xFF5
 33511                           prodh	equ	0xFF4
 33512                           prodl	equ	0xFF3
 33513                           intcon	equ	0xFF2
 33514                           intcon2	equ	0xFF1
 33515                           intcon3	equ	0xFF0
 33516                           indf0	equ	0xFEF
 33517                           postinc0	equ	0xFEE
 33518                           fsr0h	equ	0xFEA
 33519                           fsr0l	equ	0xFE9
 33520                           wreg	equ	0xFE8
 33521                           indf1	equ	0xFE7
 33522                           postdec1	equ	0xFE5
 33523                           plusw1	equ	0xFE3
 33524                           fsr1h	equ	0xFE2
 33525                           fsr1l	equ	0xFE1
 33526                           indf2	equ	0xFDF
 33527                           postinc2	equ	0xFDE
 33528                           postdec2	equ	0xFDD
 33529                           plusw2	equ	0xFDB
 33530                           fsr2h	equ	0xFDA
 33531                           fsr2l	equ	0xFD9
 33532                           status	equ	0xFD8
 33533                           
 33534 ;; *************** function __parse_command_long *****************
 33535 ;; Defined at:
 33536 ;;		line 459 in file "api.c"
 33537 ;; Parameters:    Size  Location     Type
 33538 ;;  data            2   82[COMRAM] PTR unsigned char 
 33539 ;;		 -> RAM(3759), 
 33540 ;; Auto vars:     Size  Location     Type
 33541 ;;  length          1   84[COMRAM] unsigned char 
 33542 ;; Return value:  Size  Location     Type
 33543 ;;                  1    wreg      unsigned char 
 33544 ;; Registers used:
 33545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33546 ;; Tracked objects:
 33547 ;;		On entry : 0/0
 33548 ;;		On exit  : 0/0
 33549 ;;		Unchanged: 0/0
 33550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33551 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33552 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33554 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33555 ;;Total ram usage:        3 bytes
 33556 ;; Hardware stack levels used:    1
 33557 ;; Hardware stack levels required when called:    9
 33558 ;; This function calls:
 33559 ;;		__parse_file_append
 33560 ;;		__parse_file_create
 33561 ;;		__parse_file_delete
 33562 ;;		__parse_file_modify
 33563 ;;		__parse_file_rename
 33564 ;;		__parse_file_truncate
 33565 ;; This function is called by:
 33566 ;;		_api_parse
 33567 ;; This function uses a non-reentrant model
 33568 ;;
 33569                           
 33570                           	psect	text167
 33571  00621E                     __ptext167:
 33572                           	opt stack 0
 33573  00621E                     __parse_command_long:
 33574                           	opt stack 20
 33575                           
 33576                           ;api.c: 461: uint8_t length = 65;
 33577                           
 33578                           ;incstack = 0
 33579  00621E  0E41               	movlw	65
 33580  006220  6E55               	movwf	__parse_command_long@length,c
 33581                           
 33582                           ;api.c: 463: switch(data[0])
 33583  006222  D02B               	goto	l2643
 33584  006224                     
 33585                           ;api.c: 466: length = _parse_file_truncate(data);
 33586  006224  C053  F001         	movff	__parse_command_long@data,__parse_file_truncate@data
 33587  006228  C054  F002         	movff	__parse_command_long@data+1,__parse_file_truncate@data+1
 33588  00622C  EC79  F040         	call	__parse_file_truncate	;wreg free
 33589  006230  D022               	goto	L40
 33590  006232                     
 33591                           ;api.c: 470: length = _parse_file_delete(data);
 33592  006232  C053  F03F         	movff	__parse_command_long@data,__parse_file_delete@data
 33593  006236  C054  F040         	movff	__parse_command_long@data+1,__parse_file_delete@data+1
 33594  00623A  EC89  F03A         	call	__parse_file_delete	;wreg free
 33595  00623E  D01B               	goto	L40
 33596  006240                     
 33597                           ;api.c: 474: length = _parse_file_create(data);
 33598  006240  C053  F050         	movff	__parse_command_long@data,__parse_file_create@data
 33599  006244  C054  F051         	movff	__parse_command_long@data+1,__parse_file_create@data+1
 33600  006248  EC71  F035         	call	__parse_file_create	;wreg free
 33601  00624C  D014               	goto	L40
 33602  00624E                     
 33603                           ;api.c: 478: length = _parse_file_rename(data);
 33604  00624E  C053  F043         	movff	__parse_command_long@data,__parse_file_rename@data
 33605  006252  C054  F044         	movff	__parse_command_long@data+1,__parse_file_rename@data+1
 33606  006256  ECDC  F035         	call	__parse_file_rename	;wreg free
 33607  00625A  D00D               	goto	L40
 33608  00625C                     
 33609                           ;api.c: 482: length = _parse_file_append(data);
 33610  00625C  C053  F04B         	movff	__parse_command_long@data,__parse_file_append@data
 33611  006260  C054  F04C         	movff	__parse_command_long@data+1,__parse_file_append@data+1
 33612  006264  ECAD  F032         	call	__parse_file_append	;wreg free
 33613  006268  D006               	goto	L40
 33614  00626A                     
 33615                           ;api.c: 486: length = _parse_file_modify(data);
 33616  00626A  C053  F001         	movff	__parse_command_long@data,__parse_file_modify@data
 33617  00626E  C054  F002         	movff	__parse_command_long@data+1,__parse_file_modify@data+1
 33618  006272  EC7B  F040         	call	__parse_file_modify	;wreg free
 33619  006276                     L40:
 33620  006276  6E55               	movwf	__parse_command_long@length,c
 33621                           
 33622                           ;api.c: 488: }
 33623                           
 33624                           ;api.c: 487: break;
 33625  006278  D017               	goto	l2645
 33626  00627A                     l2643:
 33627  00627A  C053  FFD9         	movff	__parse_command_long@data,fsr2l
 33628  00627E  C054  FFDA         	movff	__parse_command_long@data+1,fsr2h
 33629  006282  50DF               	movf	indf2,w,c
 33630                           
 33631                           ; Switch size 1, requested type "space"
 33632                           ; Number of cases is 6, Range of values is 80 to 85
 33633                           ; switch strategies available:
 33634                           ; Name         Instructions Cycles
 33635                           ; simple_byte           19    10 (average)
 33636                           ;	Chosen strategy is simple_byte
 33637  006284  0A50               	xorlw	80	; case 80
 33638  006286  B4D8               	btfsc	status,2,c
 33639  006288  D7CD               	goto	l2644
 33640  00628A  0A01               	xorlw	1	; case 81
 33641  00628C  B4D8               	btfsc	status,2,c
 33642  00628E  D7D1               	goto	l2646
 33643  006290  0A03               	xorlw	3	; case 82
 33644  006292  B4D8               	btfsc	status,2,c
 33645  006294  D7D5               	goto	l2647
 33646  006296  0A01               	xorlw	1	; case 83
 33647  006298  B4D8               	btfsc	status,2,c
 33648  00629A  D7D9               	goto	l2648
 33649  00629C  0A07               	xorlw	7	; case 84
 33650  00629E  B4D8               	btfsc	status,2,c
 33651  0062A0  D7DD               	goto	l2649
 33652  0062A2  0A01               	xorlw	1	; case 85
 33653  0062A4  B4D8               	btfsc	status,2,c
 33654  0062A6  D7E1               	goto	l2650
 33655  0062A8                     l2645:
 33656                           
 33657                           ;api.c: 490: return length;
 33658  0062A8  5055               	movf	__parse_command_long@length,w,c
 33659  0062AA  0012               	return	
 33660  0062AC                     __end_of__parse_command_long:
 33661                           	opt stack 0
 33662                           tosu	equ	0xFFF
 33663                           tosh	equ	0xFFE
 33664                           tosl	equ	0xFFD
 33665                           pclath	equ	0xFFA
 33666                           tblptru	equ	0xFF8
 33667                           tblptrh	equ	0xFF7
 33668                           tblptrl	equ	0xFF6
 33669                           tablat	equ	0xFF5
 33670                           prodh	equ	0xFF4
 33671                           prodl	equ	0xFF3
 33672                           intcon	equ	0xFF2
 33673                           intcon2	equ	0xFF1
 33674                           intcon3	equ	0xFF0
 33675                           indf0	equ	0xFEF
 33676                           postinc0	equ	0xFEE
 33677                           fsr0h	equ	0xFEA
 33678                           fsr0l	equ	0xFE9
 33679                           wreg	equ	0xFE8
 33680                           indf1	equ	0xFE7
 33681                           postdec1	equ	0xFE5
 33682                           plusw1	equ	0xFE3
 33683                           fsr1h	equ	0xFE2
 33684                           fsr1l	equ	0xFE1
 33685                           indf2	equ	0xFDF
 33686                           postinc2	equ	0xFDE
 33687                           postdec2	equ	0xFDD
 33688                           plusw2	equ	0xFDB
 33689                           fsr2h	equ	0xFDA
 33690                           fsr2l	equ	0xFD9
 33691                           status	equ	0xFD8
 33692                           
 33693 ;; *************** function __parse_file_truncate *****************
 33694 ;; Defined at:
 33695 ;;		line 493 in file "api.c"
 33696 ;; Parameters:    Size  Location     Type
 33697 ;;  data            2    0[COMRAM] PTR unsigned char 
 33698 ;;		 -> RAM(3759), 
 33699 ;; Auto vars:     Size  Location     Type
 33700 ;;		None
 33701 ;; Return value:  Size  Location     Type
 33702 ;;                  1    wreg      unsigned char 
 33703 ;; Registers used:
 33704 ;;		wreg
 33705 ;; Tracked objects:
 33706 ;;		On entry : 0/0
 33707 ;;		On exit  : 0/0
 33708 ;;		Unchanged: 0/0
 33709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33710 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33713 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33714 ;;Total ram usage:        2 bytes
 33715 ;; Hardware stack levels used:    1
 33716 ;; This function calls:
 33717 ;;		Nothing
 33718 ;; This function is called by:
 33719 ;;		__parse_command_long
 33720 ;; This function uses a non-reentrant model
 33721 ;;
 33722                           
 33723                           	psect	text168
 33724  0080F2                     __ptext168:
 33725                           	opt stack 0
 33726  0080F2                     __parse_file_truncate:
 33727                           	opt stack 28
 33728                           
 33729                           ;api.c: 497: return 65;
 33730                           
 33731                           ;incstack = 0
 33732  0080F2  0E41               	movlw	65
 33733  0080F4  0012               	return	
 33734  0080F6                     __end_of__parse_file_truncate:
 33735                           	opt stack 0
 33736                           tosu	equ	0xFFF
 33737                           tosh	equ	0xFFE
 33738                           tosl	equ	0xFFD
 33739                           pclath	equ	0xFFA
 33740                           tblptru	equ	0xFF8
 33741                           tblptrh	equ	0xFF7
 33742                           tblptrl	equ	0xFF6
 33743                           tablat	equ	0xFF5
 33744                           prodh	equ	0xFF4
 33745                           prodl	equ	0xFF3
 33746                           intcon	equ	0xFF2
 33747                           intcon2	equ	0xFF1
 33748                           intcon3	equ	0xFF0
 33749                           indf0	equ	0xFEF
 33750                           postinc0	equ	0xFEE
 33751                           fsr0h	equ	0xFEA
 33752                           fsr0l	equ	0xFE9
 33753                           wreg	equ	0xFE8
 33754                           indf1	equ	0xFE7
 33755                           postdec1	equ	0xFE5
 33756                           plusw1	equ	0xFE3
 33757                           fsr1h	equ	0xFE2
 33758                           fsr1l	equ	0xFE1
 33759                           indf2	equ	0xFDF
 33760                           postinc2	equ	0xFDE
 33761                           postdec2	equ	0xFDD
 33762                           plusw2	equ	0xFDB
 33763                           fsr2h	equ	0xFDA
 33764                           fsr2l	equ	0xFD9
 33765                           status	equ	0xFD8
 33766                           
 33767 ;; *************** function __parse_file_rename *****************
 33768 ;; Defined at:
 33769 ;;		line 526 in file "api.c"
 33770 ;; Parameters:    Size  Location     Type
 33771 ;;  data            2   66[COMRAM] PTR unsigned char 
 33772 ;;		 -> RAM(3759), 
 33773 ;; Auto vars:     Size  Location     Type
 33774 ;;		None
 33775 ;; Return value:  Size  Location     Type
 33776 ;;                  1    wreg      unsigned char 
 33777 ;; Registers used:
 33778 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33779 ;; Tracked objects:
 33780 ;;		On entry : 0/0
 33781 ;;		On exit  : 0/0
 33782 ;;		Unchanged: 0/0
 33783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33784 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33786 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33787 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33788 ;;Total ram usage:        3 bytes
 33789 ;; Hardware stack levels used:    1
 33790 ;; Hardware stack levels required when called:    8
 33791 ;; This function calls:
 33792 ;;		_fat_rename_file
 33793 ;; This function is called by:
 33794 ;;		__parse_command_long
 33795 ;; This function uses a non-reentrant model
 33796 ;;
 33797                           
 33798                           	psect	text169
 33799  006BB8                     __ptext169:
 33800                           	opt stack 0
 33801  006BB8                     __parse_file_rename:
 33802                           	opt stack 20
 33803                           
 33804                           ;api.c: 529: if((data[0]!=COMMAND_FILE_RENAME) || (data[13]!=0x7E) || (data[14]!=0x18))
 33805                           
 33806                           ;incstack = 0
 33807  006BB8  C043  FFD9         	movff	__parse_file_rename@data,fsr2l
 33808  006BBC  C044  FFDA         	movff	__parse_file_rename@data+1,fsr2h
 33809  006BC0  0E53               	movlw	83
 33810  006BC2  18DE               	xorwf	postinc2,w,c
 33811  006BC4  A4D8               	btfss	status,2,c
 33812  006BC6  D014               	goto	u9690
 33813  006BC8  EE20 F00D          	lfsr	2,13
 33814  006BCC  5043               	movf	__parse_file_rename@data,w,c
 33815  006BCE  26D9               	addwf	fsr2l,f,c
 33816  006BD0  5044               	movf	__parse_file_rename@data+1,w,c
 33817  006BD2  22DA               	addwfc	fsr2h,f,c
 33818  006BD4  0E7E               	movlw	126
 33819  006BD6  18DE               	xorwf	postinc2,w,c
 33820  006BD8  A4D8               	btfss	status,2,c
 33821  006BDA  D00A               	goto	u9690
 33822  006BDC  EE20 F00E          	lfsr	2,14
 33823  006BE0  5043               	movf	__parse_file_rename@data,w,c
 33824  006BE2  26D9               	addwf	fsr2l,f,c
 33825  006BE4  5044               	movf	__parse_file_rename@data+1,w,c
 33826  006BE6  22DA               	addwfc	fsr2h,f,c
 33827  006BE8  0E18               	movlw	24
 33828  006BEA  18DE               	xorwf	postinc2,w,c
 33829  006BEC  B4D8               	btfsc	status,2,c
 33830  006BEE  D002               	goto	l2669
 33831  006BF0                     u9690:
 33832                           
 33833                           ;api.c: 530: {;api.c: 531: return 15;
 33834  006BF0  0E0F               	movlw	15
 33835  006BF2  0012               	return	
 33836  006BF4                     l2669:
 33837                           
 33838                           ;api.c: 532: };api.c: 535: fat_rename_file(data[1], &data[2], &data[10]);
 33839  006BF4  0E02               	movlw	2
 33840  006BF6  2443               	addwf	__parse_file_rename@data,w,c
 33841  006BF8  6E3F               	movwf	fat_rename_file@name,c
 33842  006BFA  0E00               	movlw	0
 33843  006BFC  2044               	addwfc	__parse_file_rename@data+1,w,c
 33844  006BFE  6E40               	movwf	fat_rename_file@name+1,c
 33845  006C00  0E0A               	movlw	10
 33846  006C02  2443               	addwf	__parse_file_rename@data,w,c
 33847  006C04  6E41               	movwf	fat_rename_file@extension,c
 33848  006C06  0E00               	movlw	0
 33849  006C08  2044               	addwfc	__parse_file_rename@data+1,w,c
 33850  006C0A  6E42               	movwf	fat_rename_file@extension+1,c
 33851  006C0C  EE20 F001          	lfsr	2,1
 33852  006C10  5043               	movf	__parse_file_rename@data,w,c
 33853  006C12  26D9               	addwf	fsr2l,f,c
 33854  006C14  5044               	movf	__parse_file_rename@data+1,w,c
 33855  006C16  22DA               	addwfc	fsr2h,f,c
 33856  006C18  50DF               	movf	indf2,w,c
 33857  006C1A  ECE7  F02F         	call	_fat_rename_file
 33858                           
 33859                           ;api.c: 536: return 15;
 33860  006C1E  0E0F               	movlw	15
 33861  006C20  0012               	return	
 33862  006C22                     __end_of__parse_file_rename:
 33863                           	opt stack 0
 33864                           tosu	equ	0xFFF
 33865                           tosh	equ	0xFFE
 33866                           tosl	equ	0xFFD
 33867                           pclath	equ	0xFFA
 33868                           tblptru	equ	0xFF8
 33869                           tblptrh	equ	0xFF7
 33870                           tblptrl	equ	0xFF6
 33871                           tablat	equ	0xFF5
 33872                           prodh	equ	0xFF4
 33873                           prodl	equ	0xFF3
 33874                           intcon	equ	0xFF2
 33875                           intcon2	equ	0xFF1
 33876                           intcon3	equ	0xFF0
 33877                           indf0	equ	0xFEF
 33878                           postinc0	equ	0xFEE
 33879                           fsr0h	equ	0xFEA
 33880                           fsr0l	equ	0xFE9
 33881                           wreg	equ	0xFE8
 33882                           indf1	equ	0xFE7
 33883                           postdec1	equ	0xFE5
 33884                           plusw1	equ	0xFE3
 33885                           fsr1h	equ	0xFE2
 33886                           fsr1l	equ	0xFE1
 33887                           indf2	equ	0xFDF
 33888                           postinc2	equ	0xFDE
 33889                           postdec2	equ	0xFDD
 33890                           plusw2	equ	0xFDB
 33891                           fsr2h	equ	0xFDA
 33892                           fsr2l	equ	0xFD9
 33893                           status	equ	0xFD8
 33894                           
 33895 ;; *************** function _fat_rename_file *****************
 33896 ;; Defined at:
 33897 ;;		line 536 in file "fat16.c"
 33898 ;; Parameters:    Size  Location     Type
 33899 ;;  file_number     1    wreg     unsigned char 
 33900 ;;  name            2   62[COMRAM] PTR unsigned char 
 33901 ;;		 -> RAM(3759), 
 33902 ;;  extension       2   64[COMRAM] PTR unsigned char 
 33903 ;;		 -> RAM(3759), 
 33904 ;; Auto vars:     Size  Location     Type
 33905 ;;  file_number     1    0[BANK0 ] unsigned char 
 33906 ;;  root           32    1[BANK0 ] struct .
 33907 ;;  cntr            1   33[BANK0 ] unsigned char 
 33908 ;; Return value:  Size  Location     Type
 33909 ;;                  1    wreg      void 
 33910 ;; Registers used:
 33911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33912 ;; Tracked objects:
 33913 ;;		On entry : 0/0
 33914 ;;		On exit  : 0/0
 33915 ;;		Unchanged: 0/0
 33916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33917 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33918 ;;      Locals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33920 ;;      Totals:         4      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33921 ;;Total ram usage:       38 bytes
 33922 ;; Hardware stack levels used:    1
 33923 ;; Hardware stack levels required when called:    7
 33924 ;; This function calls:
 33925 ;;		__write_root
 33926 ;;		_fat_get_file_information
 33927 ;; This function is called by:
 33928 ;;		__parse_file_rename
 33929 ;; This function uses a non-reentrant model
 33930 ;;
 33931                           
 33932                           	psect	text170
 33933  005FCE                     __ptext170:
 33934                           	opt stack 0
 33935  005FCE                     _fat_rename_file:
 33936                           	opt stack 20
 33937                           
 33938                           ;incstack = 0
 33939                           ;fat_rename_file@file_number stored from wreg
 33940  005FCE  0100               	movlb	0	; () banked
 33941  005FD0  6FB5               	movwf	fat_rename_file@file_number& (0+255),b
 33942                           
 33943                           ;fat16.c: 538: rootEntry_t root;;fat16.c: 539: uint8_t cntr;;fat16.c: 542: fat_get_file_
      +                          information(file_number, &root);
 33944  005FD2  0EB6               	movlw	low fat_rename_file@root
 33945  005FD4  6E37               	movwf	fat_get_file_information@data,c
 33946  005FD6  0E00               	movlw	high fat_rename_file@root
 33947  005FD8  6E38               	movwf	fat_get_file_information@data+1,c
 33948  005FDA  0100               	movlb	0	; () banked
 33949  005FDC  51B5               	movf	fat_rename_file@file_number& (0+255),w,b
 33950  005FDE  EC1D  F034         	call	_fat_get_file_information
 33951                           
 33952                           ;fat16.c: 545: for(cntr=0; cntr<8; ++cntr)
 33953  005FE2  0E00               	movlw	0
 33954  005FE4  0100               	movlb	0	; () banked
 33955  005FE6  6FD6               	movwf	fat_rename_file@cntr& (0+255),b
 33956  005FE8                     l11999:
 33957                           
 33958                           ; BSR set to: 0
 33959  005FE8  0E07               	movlw	7
 33960  005FEA  65D6               	cpfsgt	fat_rename_file@cntr& (0+255),b
 33961  005FEC  D001               	goto	l2011
 33962  005FEE  D014               	goto	u9180
 33963  005FF0                     l2011:
 33964                           
 33965                           ; BSR set to: 0
 33966                           ;fat16.c: 546: {;fat16.c: 547: root.fileName[cntr] = name[cntr];
 33967                           
 33968                           ; BSR set to: 0
 33969  005FF0  51D6               	movf	fat_rename_file@cntr& (0+255),w,b
 33970  005FF2  0D01               	mullw	1
 33971  005FF4  50F3               	movf	prodl,w,c
 33972  005FF6  243F               	addwf	fat_rename_file@name,w,c
 33973  005FF8  6ED9               	movwf	fsr2l,c
 33974  005FFA  50F4               	movf	prodh,w,c
 33975  005FFC  2040               	addwfc	fat_rename_file@name+1,w,c
 33976  005FFE  6EDA               	movwf	fsr2h,c
 33977  006000  51D6               	movf	fat_rename_file@cntr& (0+255),w,b
 33978  006002  0D01               	mullw	1
 33979  006004  0EB6               	movlw	low fat_rename_file@root
 33980  006006  24F3               	addwf	prodl,w,c
 33981  006008  6EE1               	movwf	fsr1l,c
 33982  00600A  0E00               	movlw	high fat_rename_file@root
 33983  00600C  20F4               	addwfc	prodh,w,c
 33984  00600E  6EE2               	movwf	fsr1h,c
 33985  006010  CFDF FFE7          	movff	indf2,indf1
 33986                           
 33987                           ; BSR set to: 0
 33988  006014  2BD6               	incf	fat_rename_file@cntr& (0+255),f,b
 33989  006016  D7E8               	goto	l11999
 33990  006018                     u9180:
 33991                           
 33992                           ; BSR set to: 0
 33993                           ;fat16.c: 548: };fat16.c: 551: for(cntr=0; cntr<3; ++cntr)
 33994                           
 33995                           ; BSR set to: 0
 33996  006018  0E00               	movlw	0
 33997  00601A  6FD6               	movwf	fat_rename_file@cntr& (0+255),b
 33998  00601C                     l12011:
 33999                           
 34000                           ; BSR set to: 0
 34001  00601C  0E02               	movlw	2
 34002  00601E  65D6               	cpfsgt	fat_rename_file@cntr& (0+255),b
 34003  006020  D001               	goto	l2013
 34004  006022  D018               	goto	u9200
 34005  006024                     l2013:
 34006                           
 34007                           ; BSR set to: 0
 34008                           ;fat16.c: 552: {;fat16.c: 553: root.fileExtension[cntr] = extension[cntr];
 34009                           
 34010                           ; BSR set to: 0
 34011  006024  51D6               	movf	fat_rename_file@cntr& (0+255),w,b
 34012  006026  0D01               	mullw	1
 34013  006028  50F3               	movf	prodl,w,c
 34014  00602A  2441               	addwf	fat_rename_file@extension,w,c
 34015  00602C  6ED9               	movwf	fsr2l,c
 34016  00602E  50F4               	movf	prodh,w,c
 34017  006030  2042               	addwfc	fat_rename_file@extension+1,w,c
 34018  006032  6EDA               	movwf	fsr2h,c
 34019  006034  51D6               	movf	fat_rename_file@cntr& (0+255),w,b
 34020  006036  0D01               	mullw	1
 34021  006038  0E08               	movlw	8
 34022  00603A  26F3               	addwf	prodl,f,c
 34023  00603C  0E00               	movlw	0
 34024  00603E  22F4               	addwfc	prodh,f,c
 34025  006040  0EB6               	movlw	low fat_rename_file@root
 34026  006042  24F3               	addwf	prodl,w,c
 34027  006044  6EE1               	movwf	fsr1l,c
 34028  006046  0E00               	movlw	high fat_rename_file@root
 34029  006048  20F4               	addwfc	prodh,w,c
 34030  00604A  6EE2               	movwf	fsr1h,c
 34031  00604C  CFDF FFE7          	movff	indf2,indf1
 34032                           
 34033                           ; BSR set to: 0
 34034  006050  2BD6               	incf	fat_rename_file@cntr& (0+255),f,b
 34035  006052  D7E4               	goto	l12011
 34036  006054                     u9200:
 34037                           
 34038                           ; BSR set to: 0
 34039                           ;fat16.c: 554: };fat16.c: 556: _write_root(file_number, &root);
 34040                           
 34041                           ; BSR set to: 0
 34042  006054  0EB6               	movlw	low fat_rename_file@root
 34043  006056  6E29               	movwf	__write_root@data,c
 34044  006058  0E00               	movlw	high fat_rename_file@root
 34045  00605A  6E2A               	movwf	__write_root@data+1,c
 34046  00605C  51B5               	movf	fat_rename_file@file_number& (0+255),w,b
 34047  00605E  EC84  F038         	call	__write_root
 34048  006062  0012               	return		;funcret
 34049  006064                     __end_of_fat_rename_file:
 34050                           	opt stack 0
 34051                           tosu	equ	0xFFF
 34052                           tosh	equ	0xFFE
 34053                           tosl	equ	0xFFD
 34054                           pclath	equ	0xFFA
 34055                           tblptru	equ	0xFF8
 34056                           tblptrh	equ	0xFF7
 34057                           tblptrl	equ	0xFF6
 34058                           tablat	equ	0xFF5
 34059                           prodh	equ	0xFF4
 34060                           prodl	equ	0xFF3
 34061                           intcon	equ	0xFF2
 34062                           intcon2	equ	0xFF1
 34063                           intcon3	equ	0xFF0
 34064                           indf0	equ	0xFEF
 34065                           postinc0	equ	0xFEE
 34066                           fsr0h	equ	0xFEA
 34067                           fsr0l	equ	0xFE9
 34068                           wreg	equ	0xFE8
 34069                           indf1	equ	0xFE7
 34070                           postdec1	equ	0xFE5
 34071                           plusw1	equ	0xFE3
 34072                           fsr1h	equ	0xFE2
 34073                           fsr1l	equ	0xFE1
 34074                           indf2	equ	0xFDF
 34075                           postinc2	equ	0xFDE
 34076                           postdec2	equ	0xFDD
 34077                           plusw2	equ	0xFDB
 34078                           fsr2h	equ	0xFDA
 34079                           fsr2l	equ	0xFD9
 34080                           status	equ	0xFD8
 34081                           
 34082 ;; *************** function __parse_file_modify *****************
 34083 ;; Defined at:
 34084 ;;		line 552 in file "api.c"
 34085 ;; Parameters:    Size  Location     Type
 34086 ;;  data            2    0[COMRAM] PTR unsigned char 
 34087 ;;		 -> RAM(3759), 
 34088 ;; Auto vars:     Size  Location     Type
 34089 ;;		None
 34090 ;; Return value:  Size  Location     Type
 34091 ;;                  1    wreg      unsigned char 
 34092 ;; Registers used:
 34093 ;;		wreg
 34094 ;; Tracked objects:
 34095 ;;		On entry : 0/0
 34096 ;;		On exit  : 0/0
 34097 ;;		Unchanged: 0/0
 34098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34099 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34102 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34103 ;;Total ram usage:        2 bytes
 34104 ;; Hardware stack levels used:    1
 34105 ;; This function calls:
 34106 ;;		Nothing
 34107 ;; This function is called by:
 34108 ;;		__parse_command_long
 34109 ;; This function uses a non-reentrant model
 34110 ;;
 34111                           
 34112                           	psect	text171
 34113  0080F6                     __ptext171:
 34114                           	opt stack 0
 34115  0080F6                     __parse_file_modify:
 34116                           	opt stack 28
 34117                           
 34118                           ;api.c: 556: return 65;
 34119                           
 34120                           ;incstack = 0
 34121  0080F6  0E41               	movlw	65
 34122  0080F8  0012               	return	
 34123  0080FA                     __end_of__parse_file_modify:
 34124                           	opt stack 0
 34125                           tosu	equ	0xFFF
 34126                           tosh	equ	0xFFE
 34127                           tosl	equ	0xFFD
 34128                           pclath	equ	0xFFA
 34129                           tblptru	equ	0xFF8
 34130                           tblptrh	equ	0xFF7
 34131                           tblptrl	equ	0xFF6
 34132                           tablat	equ	0xFF5
 34133                           prodh	equ	0xFF4
 34134                           prodl	equ	0xFF3
 34135                           intcon	equ	0xFF2
 34136                           intcon2	equ	0xFF1
 34137                           intcon3	equ	0xFF0
 34138                           indf0	equ	0xFEF
 34139                           postinc0	equ	0xFEE
 34140                           fsr0h	equ	0xFEA
 34141                           fsr0l	equ	0xFE9
 34142                           wreg	equ	0xFE8
 34143                           indf1	equ	0xFE7
 34144                           postdec1	equ	0xFE5
 34145                           plusw1	equ	0xFE3
 34146                           fsr1h	equ	0xFE2
 34147                           fsr1l	equ	0xFE1
 34148                           indf2	equ	0xFDF
 34149                           postinc2	equ	0xFDE
 34150                           postdec2	equ	0xFDD
 34151                           plusw2	equ	0xFDB
 34152                           fsr2h	equ	0xFDA
 34153                           fsr2l	equ	0xFD9
 34154                           status	equ	0xFD8
 34155                           
 34156 ;; *************** function __parse_file_delete *****************
 34157 ;; Defined at:
 34158 ;;		line 500 in file "api.c"
 34159 ;; Parameters:    Size  Location     Type
 34160 ;;  data            2   62[COMRAM] PTR unsigned char 
 34161 ;;		 -> RAM(3759), 
 34162 ;; Auto vars:     Size  Location     Type
 34163 ;;		None
 34164 ;; Return value:  Size  Location     Type
 34165 ;;                  1    wreg      unsigned char 
 34166 ;; Registers used:
 34167 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34168 ;; Tracked objects:
 34169 ;;		On entry : 0/0
 34170 ;;		On exit  : 0/0
 34171 ;;		Unchanged: 0/0
 34172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34173 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34175 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34176 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34177 ;;Total ram usage:        3 bytes
 34178 ;; Hardware stack levels used:    1
 34179 ;; Hardware stack levels required when called:    7
 34180 ;; This function calls:
 34181 ;;		_fat_delete_file
 34182 ;; This function is called by:
 34183 ;;		__parse_command_long
 34184 ;; This function uses a non-reentrant model
 34185 ;;
 34186                           
 34187                           	psect	text172
 34188  007512                     __ptext172:
 34189                           	opt stack 0
 34190  007512                     __parse_file_delete:
 34191                           	opt stack 21
 34192                           
 34193                           ;api.c: 503: if((data[0]!=COMMAND_FILE_DELETE) || (data[2]!=0x66) || (data[3]!=0xA0))
 34194                           
 34195                           ;incstack = 0
 34196  007512  C03F  FFD9         	movff	__parse_file_delete@data,fsr2l
 34197  007516  C040  FFDA         	movff	__parse_file_delete@data+1,fsr2h
 34198  00751A  0E51               	movlw	81
 34199  00751C  18DE               	xorwf	postinc2,w,c
 34200  00751E  A4D8               	btfss	status,2,c
 34201  007520  D014               	goto	u9630
 34202  007522  EE20 F002          	lfsr	2,2
 34203  007526  503F               	movf	__parse_file_delete@data,w,c
 34204  007528  26D9               	addwf	fsr2l,f,c
 34205  00752A  5040               	movf	__parse_file_delete@data+1,w,c
 34206  00752C  22DA               	addwfc	fsr2h,f,c
 34207  00752E  0E66               	movlw	102
 34208  007530  18DE               	xorwf	postinc2,w,c
 34209  007532  A4D8               	btfss	status,2,c
 34210  007534  D00A               	goto	u9630
 34211  007536  EE20 F003          	lfsr	2,3
 34212  00753A  503F               	movf	__parse_file_delete@data,w,c
 34213  00753C  26D9               	addwf	fsr2l,f,c
 34214  00753E  5040               	movf	__parse_file_delete@data+1,w,c
 34215  007540  22DA               	addwfc	fsr2h,f,c
 34216  007542  0EA0               	movlw	160
 34217  007544  18DE               	xorwf	postinc2,w,c
 34218  007546  B4D8               	btfsc	status,2,c
 34219  007548  D002               	goto	l2657
 34220  00754A                     u9630:
 34221                           
 34222                           ;api.c: 504: {;api.c: 505: return 4;
 34223  00754A  0E04               	movlw	4
 34224  00754C  0012               	return	
 34225  00754E                     l2657:
 34226                           
 34227                           ;api.c: 506: };api.c: 509: fat_delete_file(data[1]);
 34228  00754E  EE20 F001          	lfsr	2,1
 34229  007552  503F               	movf	__parse_file_delete@data,w,c
 34230  007554  26D9               	addwf	fsr2l,f,c
 34231  007556  5040               	movf	__parse_file_delete@data+1,w,c
 34232  007558  22DA               	addwfc	fsr2h,f,c
 34233  00755A  50DF               	movf	indf2,w,c
 34234  00755C  EC11  F036         	call	_fat_delete_file
 34235                           
 34236                           ;api.c: 510: return 4;
 34237  007560  0E04               	movlw	4
 34238  007562  0012               	return	
 34239  007564                     __end_of__parse_file_delete:
 34240                           	opt stack 0
 34241                           tosu	equ	0xFFF
 34242                           tosh	equ	0xFFE
 34243                           tosl	equ	0xFFD
 34244                           pclath	equ	0xFFA
 34245                           tblptru	equ	0xFF8
 34246                           tblptrh	equ	0xFF7
 34247                           tblptrl	equ	0xFF6
 34248                           tablat	equ	0xFF5
 34249                           prodh	equ	0xFF4
 34250                           prodl	equ	0xFF3
 34251                           intcon	equ	0xFF2
 34252                           intcon2	equ	0xFF1
 34253                           intcon3	equ	0xFF0
 34254                           indf0	equ	0xFEF
 34255                           postinc0	equ	0xFEE
 34256                           fsr0h	equ	0xFEA
 34257                           fsr0l	equ	0xFE9
 34258                           wreg	equ	0xFE8
 34259                           indf1	equ	0xFE7
 34260                           postdec1	equ	0xFE5
 34261                           plusw1	equ	0xFE3
 34262                           fsr1h	equ	0xFE2
 34263                           fsr1l	equ	0xFE1
 34264                           indf2	equ	0xFDF
 34265                           postinc2	equ	0xFDE
 34266                           postdec2	equ	0xFDD
 34267                           plusw2	equ	0xFDB
 34268                           fsr2h	equ	0xFDA
 34269                           fsr2l	equ	0xFD9
 34270                           status	equ	0xFD8
 34271                           
 34272 ;; *************** function _fat_delete_file *****************
 34273 ;; Defined at:
 34274 ;;		line 391 in file "fat16.c"
 34275 ;; Parameters:    Size  Location     Type
 34276 ;;  file_number     1    wreg     unsigned char 
 34277 ;; Auto vars:     Size  Location     Type
 34278 ;;  file_number     1   61[COMRAM] unsigned char 
 34279 ;;  first_cluste    2   59[COMRAM] unsigned int 
 34280 ;;  next_cluster    2   57[COMRAM] unsigned int 
 34281 ;; Return value:  Size  Location     Type
 34282 ;;                  1    wreg      void 
 34283 ;; Registers used:
 34284 ;;		wreg, status,2, status,0, cstack
 34285 ;; Tracked objects:
 34286 ;;		On entry : 0/0
 34287 ;;		On exit  : 0/0
 34288 ;;		Unchanged: 0/0
 34289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34291 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34293 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34294 ;;Total ram usage:        5 bytes
 34295 ;; Hardware stack levels used:    1
 34296 ;; Hardware stack levels required when called:    6
 34297 ;; This function calls:
 34298 ;;		__delete_root
 34299 ;;		__get_first_cluster
 34300 ;;		__read_fat
 34301 ;;		__root_is_available
 34302 ;;		__write_fat
 34303 ;; This function is called by:
 34304 ;;		__parse_file_delete
 34305 ;; This function uses a non-reentrant model
 34306 ;;
 34307                           
 34308                           	psect	text173
 34309  006C22                     __ptext173:
 34310                           	opt stack 0
 34311  006C22                     _fat_delete_file:
 34312                           	opt stack 21
 34313                           
 34314                           ;incstack = 0
 34315                           ;fat_delete_file@file_number stored from wreg
 34316  006C22  6E3E               	movwf	fat_delete_file@file_number,c
 34317                           
 34318                           ;fat16.c: 393: uint16_t first_cluster;;fat16.c: 394: uint16_t next_cluster;;fat16.c: 397
      +                          : if(file_number>=64)
 34319  006C24  0E3F               	movlw	63
 34320  006C26  643E               	cpfsgt	fat_delete_file@file_number,c
 34321  006C28  D001               	goto	l1985
 34322  006C2A  0012               	return	
 34323  006C2C                     l1985:
 34324                           
 34325                           ;fat16.c: 401: };fat16.c: 404: if(_root_is_available(file_number))
 34326  006C2C  503E               	movf	fat_delete_file@file_number,w,c
 34327  006C2E  ECE2  F033         	call	__root_is_available
 34328  006C32  0900               	iorlw	0
 34329  006C34  A4D8               	btfss	status,2,c
 34330  006C36  0012               	return	
 34331                           
 34332                           ;fat16.c: 408: };fat16.c: 411: first_cluster = _get_first_cluster(file_number);
 34333                           
 34334                           ;fat16.c: 405: {;fat16.c: 407: return;
 34335  006C38  503E               	movf	fat_delete_file@file_number,w,c
 34336  006C3A  EC46  F036         	call	__get_first_cluster
 34337  006C3E  C030  F03C         	movff	?__get_first_cluster,fat_delete_file@first_cluster
 34338  006C42  C031  F03D         	movff	?__get_first_cluster+1,fat_delete_file@first_cluster+1
 34339  006C46                     l1988:
 34340                           
 34341                           ;fat16.c: 415: {;fat16.c: 418: next_cluster = _read_fat(first_cluster);
 34342  006C46  C03C  F030         	movff	fat_delete_file@first_cluster,__read_fat@cluster
 34343  006C4A  C03D  F031         	movff	fat_delete_file@first_cluster+1,__read_fat@cluster+1
 34344  006C4E  EC4A  F03B         	call	__read_fat	;wreg free
 34345  006C52  C030  F03A         	movff	?__read_fat,fat_delete_file@next_cluster
 34346  006C56  C031  F03B         	movff	?__read_fat+1,fat_delete_file@next_cluster+1
 34347                           
 34348                           ;fat16.c: 425: _write_fat(first_cluster, 0x0000);
 34349  006C5A  C03C  F029         	movff	fat_delete_file@first_cluster,__write_fat@cluster
 34350  006C5E  C03D  F02A         	movff	fat_delete_file@first_cluster+1,__write_fat@cluster+1
 34351  006C62  0E00               	movlw	0
 34352  006C64  6E2C               	movwf	__write_fat@value+1,c
 34353  006C66  0E00               	movlw	0
 34354  006C68  6E2B               	movwf	__write_fat@value,c
 34355  006C6A  EC13  F03C         	call	__write_fat	;wreg free
 34356                           
 34357                           ;fat16.c: 427: if(next_cluster>0xFFF0)
 34358  006C6E  0EF1               	movlw	241
 34359  006C70  5C3A               	subwf	fat_delete_file@next_cluster,w,c
 34360  006C72  0EFF               	movlw	255
 34361  006C74  583B               	subwfb	fat_delete_file@next_cluster+1,w,c
 34362  006C76  B0D8               	btfsc	status,0,c
 34363  006C78  D005               	goto	l1990
 34364                           
 34365                           ;fat16.c: 432: else;fat16.c: 433: {;fat16.c: 434: first_cluster = next_cluster;
 34366                           
 34367                           ;fat16.c: 430: }
 34368                           
 34369                           ;fat16.c: 428: {;fat16.c: 429: break;
 34370  006C7A  C03A  F03C         	movff	fat_delete_file@next_cluster,fat_delete_file@first_cluster
 34371  006C7E  C03B  F03D         	movff	fat_delete_file@next_cluster+1,fat_delete_file@first_cluster+1
 34372  006C82  D7E1               	goto	l1988
 34373  006C84                     l1990:
 34374                           
 34375                           ;fat16.c: 435: };fat16.c: 436: };fat16.c: 440: _delete_root(file_number);
 34376  006C84  503E               	movf	fat_delete_file@file_number,w,c
 34377  006C86  ECD1  F037         	call	__delete_root
 34378  006C8A  0012               	return		;funcret
 34379  006C8C                     __end_of_fat_delete_file:
 34380                           	opt stack 0
 34381                           tosu	equ	0xFFF
 34382                           tosh	equ	0xFFE
 34383                           tosl	equ	0xFFD
 34384                           pclath	equ	0xFFA
 34385                           tblptru	equ	0xFF8
 34386                           tblptrh	equ	0xFF7
 34387                           tblptrl	equ	0xFF6
 34388                           tablat	equ	0xFF5
 34389                           prodh	equ	0xFF4
 34390                           prodl	equ	0xFF3
 34391                           intcon	equ	0xFF2
 34392                           intcon2	equ	0xFF1
 34393                           intcon3	equ	0xFF0
 34394                           indf0	equ	0xFEF
 34395                           postinc0	equ	0xFEE
 34396                           fsr0h	equ	0xFEA
 34397                           fsr0l	equ	0xFE9
 34398                           wreg	equ	0xFE8
 34399                           indf1	equ	0xFE7
 34400                           postdec1	equ	0xFE5
 34401                           plusw1	equ	0xFE3
 34402                           fsr1h	equ	0xFE2
 34403                           fsr1l	equ	0xFE1
 34404                           indf2	equ	0xFDF
 34405                           postinc2	equ	0xFDE
 34406                           postdec2	equ	0xFDD
 34407                           plusw2	equ	0xFDB
 34408                           fsr2h	equ	0xFDA
 34409                           fsr2l	equ	0xFD9
 34410                           status	equ	0xFD8
 34411                           
 34412 ;; *************** function __get_first_cluster *****************
 34413 ;; Defined at:
 34414 ;;		line 205 in file "fat16.c"
 34415 ;; Parameters:    Size  Location     Type
 34416 ;;  slot            1    wreg     unsigned char 
 34417 ;; Auto vars:     Size  Location     Type
 34418 ;;  slot            1   56[COMRAM] unsigned char 
 34419 ;;  first_cluste    2   54[COMRAM] unsigned int 
 34420 ;;  offset          2   52[COMRAM] unsigned int 
 34421 ;;  sector          2   50[COMRAM] unsigned int 
 34422 ;; Return value:  Size  Location     Type
 34423 ;;                  2   47[COMRAM] unsigned int 
 34424 ;; Registers used:
 34425 ;;		wreg, status,2, status,0, cstack
 34426 ;; Tracked objects:
 34427 ;;		On entry : 0/0
 34428 ;;		On exit  : 0/0
 34429 ;;		Unchanged: 0/0
 34430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34431 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34432 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34433 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34434 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34435 ;;Total ram usage:       10 bytes
 34436 ;; Hardware stack levels used:    1
 34437 ;; Hardware stack levels required when called:    5
 34438 ;; This function calls:
 34439 ;;		_flash_partial_read
 34440 ;; This function is called by:
 34441 ;;		_fat_delete_file
 34442 ;; This function uses a non-reentrant model
 34443 ;;
 34444                           
 34445                           	psect	text174
 34446  006C8C                     __ptext174:
 34447                           	opt stack 0
 34448  006C8C                     __get_first_cluster:
 34449                           	opt stack 21
 34450                           
 34451                           ;incstack = 0
 34452                           ;__get_first_cluster@slot stored from wreg
 34453  006C8C  6E39               	movwf	__get_first_cluster@slot,c
 34454                           
 34455                           ;fat16.c: 207: uint16_t sector;;fat16.c: 208: uint16_t offset;;fat16.c: 209: uint16_t fi
      +                          rst_cluster;;fat16.c: 210: sector = slot >> 4;
 34456  006C8E  C039  F032         	movff	__get_first_cluster@slot,??__get_first_cluster
 34457  006C92  3A32               	swapf	??__get_first_cluster,f,c
 34458  006C94  0E0F               	movlw	15
 34459  006C96  1632               	andwf	??__get_first_cluster,f,c
 34460  006C98  5032               	movf	??__get_first_cluster,w,c
 34461  006C9A  6E33               	movwf	__get_first_cluster@sector,c
 34462  006C9C  6A34               	clrf	__get_first_cluster@sector+1,c
 34463                           
 34464                           ;fat16.c: 211: sector += 34;
 34465  006C9E  0E22               	movlw	34
 34466  006CA0  2633               	addwf	__get_first_cluster@sector,f,c
 34467  006CA2  0E00               	movlw	0
 34468  006CA4  2234               	addwfc	__get_first_cluster@sector+1,f,c
 34469                           
 34470                           ;fat16.c: 212: offset = slot & 0b1111;
 34471  006CA6  C039  F032         	movff	__get_first_cluster@slot,??__get_first_cluster
 34472  006CAA  0E0F               	movlw	15
 34473  006CAC  1632               	andwf	??__get_first_cluster,f,c
 34474  006CAE  5032               	movf	??__get_first_cluster,w,c
 34475  006CB0  6E35               	movwf	__get_first_cluster@offset,c
 34476  006CB2  6A36               	clrf	__get_first_cluster@offset+1,c
 34477                           
 34478                           ;fat16.c: 213: offset <<= 5;
 34479  006CB4  0E05               	movlw	5
 34480  006CB6                     u8305:
 34481  006CB6  90D8               	bcf	status,0,c
 34482  006CB8  3635               	rlcf	__get_first_cluster@offset,f,c
 34483  006CBA  3636               	rlcf	__get_first_cluster@offset+1,f,c
 34484  006CBC  2EE8               	decfsz	wreg,f,c
 34485  006CBE  D7FB               	goto	u8305
 34486                           
 34487                           ;fat16.c: 214: offset += 26;
 34488  006CC0  0E1A               	movlw	26
 34489  006CC2  2635               	addwf	__get_first_cluster@offset,f,c
 34490  006CC4  0E00               	movlw	0
 34491  006CC6  2236               	addwfc	__get_first_cluster@offset+1,f,c
 34492                           
 34493                           ;fat16.c: 215: flash_partial_read(sector, offset, 2, &first_cluster);
 34494  006CC8  C033  F028         	movff	__get_first_cluster@sector,flash_partial_read@page
 34495  006CCC  C034  F029         	movff	__get_first_cluster@sector+1,flash_partial_read@page+1
 34496  006CD0  C035  F02A         	movff	__get_first_cluster@offset,flash_partial_read@start
 34497  006CD4  C036  F02B         	movff	__get_first_cluster@offset+1,flash_partial_read@start+1
 34498  006CD8  0E00               	movlw	0
 34499  006CDA  6E2D               	movwf	flash_partial_read@length+1,c
 34500  006CDC  0E02               	movlw	2
 34501  006CDE  6E2C               	movwf	flash_partial_read@length,c
 34502  006CE0  0E37               	movlw	low __get_first_cluster@first_cluster
 34503  006CE2  6E2E               	movwf	flash_partial_read@data,c
 34504  006CE4  0E00               	movlw	high __get_first_cluster@first_cluster
 34505  006CE6  6E2F               	movwf	flash_partial_read@data+1,c
 34506  006CE8  EC91  F03D         	call	_flash_partial_read	;wreg free
 34507                           
 34508                           ;fat16.c: 216: return first_cluster;
 34509  006CEC  C037  F030         	movff	__get_first_cluster@first_cluster,?__get_first_cluster
 34510  006CF0  C038  F031         	movff	__get_first_cluster@first_cluster+1,?__get_first_cluster+1
 34511  006CF4  0012               	return	
 34512  006CF6                     __end_of__get_first_cluster:
 34513                           	opt stack 0
 34514                           tosu	equ	0xFFF
 34515                           tosh	equ	0xFFE
 34516                           tosl	equ	0xFFD
 34517                           pclath	equ	0xFFA
 34518                           tblptru	equ	0xFF8
 34519                           tblptrh	equ	0xFF7
 34520                           tblptrl	equ	0xFF6
 34521                           tablat	equ	0xFF5
 34522                           prodh	equ	0xFF4
 34523                           prodl	equ	0xFF3
 34524                           intcon	equ	0xFF2
 34525                           intcon2	equ	0xFF1
 34526                           intcon3	equ	0xFF0
 34527                           indf0	equ	0xFEF
 34528                           postinc0	equ	0xFEE
 34529                           fsr0h	equ	0xFEA
 34530                           fsr0l	equ	0xFE9
 34531                           wreg	equ	0xFE8
 34532                           indf1	equ	0xFE7
 34533                           postdec1	equ	0xFE5
 34534                           plusw1	equ	0xFE3
 34535                           fsr1h	equ	0xFE2
 34536                           fsr1l	equ	0xFE1
 34537                           indf2	equ	0xFDF
 34538                           postinc2	equ	0xFDE
 34539                           postdec2	equ	0xFDD
 34540                           plusw2	equ	0xFDB
 34541                           fsr2h	equ	0xFDA
 34542                           fsr2l	equ	0xFD9
 34543                           status	equ	0xFD8
 34544                           
 34545 ;; *************** function __delete_root *****************
 34546 ;; Defined at:
 34547 ;;		line 192 in file "fat16.c"
 34548 ;; Parameters:    Size  Location     Type
 34549 ;;  slot            1    wreg     unsigned char 
 34550 ;; Auto vars:     Size  Location     Type
 34551 ;;  slot            1   46[COMRAM] unsigned char 
 34552 ;;  offset          2   43[COMRAM] unsigned int 
 34553 ;;  root_sector     2   41[COMRAM] unsigned int 
 34554 ;;  deleted_valu    1   45[COMRAM] unsigned char 
 34555 ;; Return value:  Size  Location     Type
 34556 ;;                  1    wreg      void 
 34557 ;; Registers used:
 34558 ;;		wreg, status,2, status,0, cstack
 34559 ;; Tracked objects:
 34560 ;;		On entry : 0/0
 34561 ;;		On exit  : 0/0
 34562 ;;		Unchanged: 0/0
 34563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34565 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34566 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34567 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34568 ;;Total ram usage:        7 bytes
 34569 ;; Hardware stack levels used:    1
 34570 ;; Hardware stack levels required when called:    5
 34571 ;; This function calls:
 34572 ;;		_flash_partial_write
 34573 ;; This function is called by:
 34574 ;;		_fat_delete_file
 34575 ;; This function uses a non-reentrant model
 34576 ;;
 34577                           
 34578                           	psect	text175
 34579  006FA2                     __ptext175:
 34580                           	opt stack 0
 34581  006FA2                     __delete_root:
 34582                           	opt stack 21
 34583                           
 34584                           ;incstack = 0
 34585                           ;__delete_root@slot stored from wreg
 34586  006FA2  6E2F               	movwf	__delete_root@slot,c
 34587                           
 34588                           ;fat16.c: 194: uint16_t root_sector;;fat16.c: 195: uint16_t offset;;fat16.c: 196: uint8_
      +                          t deleted_value;;fat16.c: 198: root_sector = (slot >> 4) + 34;
 34589  006FA4  C02F  F029         	movff	__delete_root@slot,??__delete_root
 34590  006FA8  3A29               	swapf	??__delete_root,f,c
 34591  006FAA  0E0F               	movlw	15
 34592  006FAC  1629               	andwf	??__delete_root,f,c
 34593  006FAE  0E22               	movlw	34
 34594  006FB0  2429               	addwf	??__delete_root,w,c
 34595  006FB2  6E2A               	movwf	__delete_root@root_sector,c
 34596  006FB4  6A2B               	clrf	__delete_root@root_sector+1,c
 34597  006FB6  0E00               	movlw	0
 34598  006FB8  222B               	addwfc	__delete_root@root_sector+1,f,c
 34599                           
 34600                           ;fat16.c: 199: offset = (slot & 0b1111);
 34601  006FBA  C02F  F029         	movff	__delete_root@slot,??__delete_root
 34602  006FBE  0E0F               	movlw	15
 34603  006FC0  1629               	andwf	??__delete_root,f,c
 34604  006FC2  5029               	movf	??__delete_root,w,c
 34605  006FC4  6E2C               	movwf	__delete_root@offset,c
 34606  006FC6  6A2D               	clrf	__delete_root@offset+1,c
 34607                           
 34608                           ;fat16.c: 200: offset <<= 5;
 34609  006FC8  0E05               	movlw	5
 34610  006FCA                     u8295:
 34611  006FCA  90D8               	bcf	status,0,c
 34612  006FCC  362C               	rlcf	__delete_root@offset,f,c
 34613  006FCE  362D               	rlcf	__delete_root@offset+1,f,c
 34614  006FD0  2EE8               	decfsz	wreg,f,c
 34615  006FD2  D7FB               	goto	u8295
 34616                           
 34617                           ;fat16.c: 201: deleted_value = 0xE5;
 34618  006FD4  0EE5               	movlw	229
 34619  006FD6  6E2E               	movwf	__delete_root@deleted_value,c
 34620                           
 34621                           ;fat16.c: 202: flash_partial_write(root_sector, offset, 1, &deleted_value);
 34622  006FD8  C02A  F020         	movff	__delete_root@root_sector,flash_partial_write@page
 34623  006FDC  C02B  F021         	movff	__delete_root@root_sector+1,flash_partial_write@page+1
 34624  006FE0  C02C  F022         	movff	__delete_root@offset,flash_partial_write@start
 34625  006FE4  C02D  F023         	movff	__delete_root@offset+1,flash_partial_write@start+1
 34626  006FE8  0E00               	movlw	0
 34627  006FEA  6E25               	movwf	flash_partial_write@length+1,c
 34628  006FEC  0E01               	movlw	1
 34629  006FEE  6E24               	movwf	flash_partial_write@length,c
 34630  006FF0  0E2E               	movlw	low __delete_root@deleted_value
 34631  006FF2  6E26               	movwf	flash_partial_write@data,c
 34632  006FF4  0E00               	movlw	high __delete_root@deleted_value
 34633  006FF6  6E27               	movwf	flash_partial_write@data+1,c
 34634  006FF8  EC02  F035         	call	_flash_partial_write	;wreg free
 34635  006FFC  0012               	return		;funcret
 34636  006FFE                     __end_of__delete_root:
 34637                           	opt stack 0
 34638                           tosu	equ	0xFFF
 34639                           tosh	equ	0xFFE
 34640                           tosl	equ	0xFFD
 34641                           pclath	equ	0xFFA
 34642                           tblptru	equ	0xFF8
 34643                           tblptrh	equ	0xFF7
 34644                           tblptrl	equ	0xFF6
 34645                           tablat	equ	0xFF5
 34646                           prodh	equ	0xFF4
 34647                           prodl	equ	0xFF3
 34648                           intcon	equ	0xFF2
 34649                           intcon2	equ	0xFF1
 34650                           intcon3	equ	0xFF0
 34651                           indf0	equ	0xFEF
 34652                           postinc0	equ	0xFEE
 34653                           fsr0h	equ	0xFEA
 34654                           fsr0l	equ	0xFE9
 34655                           wreg	equ	0xFE8
 34656                           indf1	equ	0xFE7
 34657                           postdec1	equ	0xFE5
 34658                           plusw1	equ	0xFE3
 34659                           fsr1h	equ	0xFE2
 34660                           fsr1l	equ	0xFE1
 34661                           indf2	equ	0xFDF
 34662                           postinc2	equ	0xFDE
 34663                           postdec2	equ	0xFDD
 34664                           plusw2	equ	0xFDB
 34665                           fsr2h	equ	0xFDA
 34666                           fsr2l	equ	0xFD9
 34667                           status	equ	0xFD8
 34668                           
 34669 ;; *************** function __parse_file_create *****************
 34670 ;; Defined at:
 34671 ;;		line 513 in file "api.c"
 34672 ;; Parameters:    Size  Location     Type
 34673 ;;  data            2   79[COMRAM] PTR unsigned char 
 34674 ;;		 -> RAM(3759), 
 34675 ;; Auto vars:     Size  Location     Type
 34676 ;;		None
 34677 ;; Return value:  Size  Location     Type
 34678 ;;                  1    wreg      unsigned char 
 34679 ;; Registers used:
 34680 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 34681 ;; Tracked objects:
 34682 ;;		On entry : 0/0
 34683 ;;		On exit  : 0/0
 34684 ;;		Unchanged: 0/0
 34685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34688 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34689 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34690 ;;Total ram usage:        3 bytes
 34691 ;; Hardware stack levels used:    1
 34692 ;; Hardware stack levels required when called:    8
 34693 ;; This function calls:
 34694 ;;		_fat_create_file
 34695 ;; This function is called by:
 34696 ;;		__parse_command_long
 34697 ;; This function uses a non-reentrant model
 34698 ;;
 34699                           
 34700                           	psect	text176
 34701  006AE2                     __ptext176:
 34702                           	opt stack 0
 34703  006AE2                     __parse_file_create:
 34704                           	opt stack 20
 34705                           
 34706                           ;api.c: 516: if((data[0]!=COMMAND_FILE_CREATE) || (data[12]!=0xBD) || (data[13]!=0x4F))
 34707                           
 34708                           ;incstack = 0
 34709  006AE2  C050  FFD9         	movff	__parse_file_create@data,fsr2l
 34710  006AE6  C051  FFDA         	movff	__parse_file_create@data+1,fsr2h
 34711  006AEA  0E52               	movlw	82
 34712  006AEC  18DE               	xorwf	postinc2,w,c
 34713  006AEE  A4D8               	btfss	status,2,c
 34714  006AF0  D014               	goto	u9660
 34715  006AF2  EE20 F00C          	lfsr	2,12
 34716  006AF6  5050               	movf	__parse_file_create@data,w,c
 34717  006AF8  26D9               	addwf	fsr2l,f,c
 34718  006AFA  5051               	movf	__parse_file_create@data+1,w,c
 34719  006AFC  22DA               	addwfc	fsr2h,f,c
 34720  006AFE  0EBD               	movlw	189
 34721  006B00  18DE               	xorwf	postinc2,w,c
 34722  006B02  A4D8               	btfss	status,2,c
 34723  006B04  D00A               	goto	u9660
 34724  006B06  EE20 F00D          	lfsr	2,13
 34725  006B0A  5050               	movf	__parse_file_create@data,w,c
 34726  006B0C  26D9               	addwf	fsr2l,f,c
 34727  006B0E  5051               	movf	__parse_file_create@data+1,w,c
 34728  006B10  22DA               	addwfc	fsr2h,f,c
 34729  006B12  0E4F               	movlw	79
 34730  006B14  18DE               	xorwf	postinc2,w,c
 34731  006B16  B4D8               	btfsc	status,2,c
 34732  006B18  D002               	goto	l2663
 34733  006B1A                     u9660:
 34734                           
 34735                           ;api.c: 517: {;api.c: 518: return 14;
 34736  006B1A  0E0E               	movlw	14
 34737  006B1C  0012               	return	
 34738  006B1E                     l2663:
 34739                           
 34740                           ;api.c: 519: };api.c: 522: fat_create_file(&data[1], &data[9], 0);
 34741  006B1E  0E01               	movlw	1
 34742  006B20  2450               	addwf	__parse_file_create@data,w,c
 34743  006B22  6E44               	movwf	fat_create_file@name,c
 34744  006B24  0E00               	movlw	0
 34745  006B26  2051               	addwfc	__parse_file_create@data+1,w,c
 34746  006B28  6E45               	movwf	fat_create_file@name+1,c
 34747  006B2A  0E09               	movlw	9
 34748  006B2C  2450               	addwf	__parse_file_create@data,w,c
 34749  006B2E  6E46               	movwf	fat_create_file@extension,c
 34750  006B30  0E00               	movlw	0
 34751  006B32  2051               	addwfc	__parse_file_create@data+1,w,c
 34752  006B34  6E47               	movwf	fat_create_file@extension+1,c
 34753  006B36  0E00               	movlw	0
 34754  006B38  6E48               	movwf	fat_create_file@size,c
 34755  006B3A  0E00               	movlw	0
 34756  006B3C  6E49               	movwf	fat_create_file@size+1,c
 34757  006B3E  0E00               	movlw	0
 34758  006B40  6E4A               	movwf	fat_create_file@size+2,c
 34759  006B42  0E00               	movlw	0
 34760  006B44  6E4B               	movwf	fat_create_file@size+3,c
 34761  006B46  EC5C  F018         	call	_fat_create_file	;wreg free
 34762                           
 34763                           ;api.c: 523: return 14;
 34764  006B4A  0E0E               	movlw	14
 34765  006B4C  0012               	return	
 34766  006B4E                     __end_of__parse_file_create:
 34767                           	opt stack 0
 34768                           tosu	equ	0xFFF
 34769                           tosh	equ	0xFFE
 34770                           tosl	equ	0xFFD
 34771                           pclath	equ	0xFFA
 34772                           tblptru	equ	0xFF8
 34773                           tblptrh	equ	0xFF7
 34774                           tblptrl	equ	0xFF6
 34775                           tablat	equ	0xFF5
 34776                           prodh	equ	0xFF4
 34777                           prodl	equ	0xFF3
 34778                           intcon	equ	0xFF2
 34779                           intcon2	equ	0xFF1
 34780                           intcon3	equ	0xFF0
 34781                           indf0	equ	0xFEF
 34782                           postinc0	equ	0xFEE
 34783                           fsr0h	equ	0xFEA
 34784                           fsr0l	equ	0xFE9
 34785                           wreg	equ	0xFE8
 34786                           indf1	equ	0xFE7
 34787                           postdec1	equ	0xFE5
 34788                           plusw1	equ	0xFE3
 34789                           fsr1h	equ	0xFE2
 34790                           fsr1l	equ	0xFE1
 34791                           indf2	equ	0xFDF
 34792                           postinc2	equ	0xFDE
 34793                           postdec2	equ	0xFDD
 34794                           plusw2	equ	0xFDB
 34795                           fsr2h	equ	0xFDA
 34796                           fsr2l	equ	0xFD9
 34797                           status	equ	0xFD8
 34798                           
 34799 ;; *************** function _fat_create_file *****************
 34800 ;; Defined at:
 34801 ;;		line 309 in file "fat16.c"
 34802 ;; Parameters:    Size  Location     Type
 34803 ;;  name            2   67[COMRAM] PTR unsigned char 
 34804 ;;		 -> RAM(3759), 
 34805 ;;  extension       2   69[COMRAM] PTR unsigned char 
 34806 ;;		 -> RAM(3759), 
 34807 ;;  size            4   71[COMRAM] unsigned long 
 34808 ;; Auto vars:     Size  Location     Type
 34809 ;;  root_entry     32    9[BANK0 ] struct .
 34810 ;;  cluster         2    7[BANK0 ] unsigned int 
 34811 ;;  number_of_cl    2    5[BANK0 ] unsigned int 
 34812 ;;  cluster_coun    2    2[BANK0 ] unsigned int 
 34813 ;;  next_cluster    2    0[BANK0 ] unsigned int 
 34814 ;;  root_slot       1    4[BANK0 ] unsigned char 
 34815 ;; Return value:  Size  Location     Type
 34816 ;;                  1    wreg      unsigned char 
 34817 ;; Registers used:
 34818 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 34819 ;; Tracked objects:
 34820 ;;		On entry : 0/0
 34821 ;;		On exit  : 0/0
 34822 ;;		Unchanged: 0/0
 34823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34824 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34825 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34826 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34827 ;;      Totals:        12      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34828 ;;Total ram usage:       53 bytes
 34829 ;; Hardware stack levels used:    1
 34830 ;; Hardware stack levels required when called:    7
 34831 ;; This function calls:
 34832 ;;		__get_available_root_entry
 34833 ;;		__get_date
 34834 ;;		__get_empty_cluster
 34835 ;;		__get_time
 34836 ;;		__write_fat
 34837 ;;		__write_root
 34838 ;;		_fat_find_file
 34839 ;;		_fat_get_empty_clusters
 34840 ;;		_memcpy
 34841 ;; This function is called by:
 34842 ;;		__parse_file_create
 34843 ;; This function uses a non-reentrant model
 34844 ;;
 34845                           
 34846                           	psect	text177
 34847  0030B8                     __ptext177:
 34848                           	opt stack 0
 34849  0030B8                     _fat_create_file:
 34850                           	opt stack 20
 34851                           
 34852                           ;fat16.c: 311: uint8_t root_slot;;fat16.c: 312: rootEntry_t root_entry;;fat16.c: 313: ui
      +                          nt16_t cluster;;fat16.c: 314: uint16_t next_cluster;;fat16.c: 315: uint16_t number_of_cl
      +                          usters;;fat16.c: 316: uint16_t cluster_count;;fat16.c: 320: if(fat_find_file(name, exten
      +                          sion) != 0xFF)
 34853                           
 34854                           ;incstack = 0
 34855  0030B8  C044  F030         	movff	fat_create_file@name,fat_find_file@name
 34856  0030BC  C045  F031         	movff	fat_create_file@name+1,fat_find_file@name+1
 34857  0030C0  C046  F032         	movff	fat_create_file@extension,fat_find_file@extension
 34858  0030C4  C047  F033         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 34859  0030C8  EC47  F02B         	call	_fat_find_file	;wreg free
 34860  0030CC  0AFF               	xorlw	255
 34861  0030CE  A4D8               	btfss	status,2,c
 34862  0030D0  0012               	return	
 34863                           
 34864                           ;fat16.c: 325: };fat16.c: 329: root_slot = _get_available_root_entry();
 34865                           
 34866                           ;fat16.c: 321: {;fat16.c: 324: return 0xFF;;	Return value of _fat_create_file is never u
      +                          sed
 34867  0030D2  ECD1  F03E         	call	__get_available_root_entry	;wreg free
 34868  0030D6  0100               	movlb	0	; () banked
 34869  0030D8  6FB9               	movwf	fat_create_file@root_slot& (0+255),b
 34870                           
 34871                           ; BSR set to: 0
 34872                           ;fat16.c: 330: if(root_slot == 0xFF)
 34873  0030DA  29B9               	incf	fat_create_file@root_slot& (0+255),w,b
 34874  0030DC  B4D8               	btfsc	status,2,c
 34875  0030DE  0012               	return	
 34876                           
 34877                           ; BSR set to: 0
 34878                           ;fat16.c: 335: };fat16.c: 338: number_of_clusters = (size>>9) + 1;
 34879                           
 34880                           ; BSR set to: 0
 34881                           
 34882                           ; BSR set to: 0
 34883                           ;fat16.c: 331: {;fat16.c: 334: return 0xFE;;	Return value of _fat_create_file is never u
      +                          sed
 34884  0030E0  C048  F04C         	movff	fat_create_file@size,??_fat_create_file
 34885  0030E4  C049  F04D         	movff	fat_create_file@size+1,??_fat_create_file+1
 34886  0030E8  C04A  F04E         	movff	fat_create_file@size+2,??_fat_create_file+2
 34887  0030EC  C04B  F04F         	movff	fat_create_file@size+3,??_fat_create_file+3
 34888  0030F0  0E0A               	movlw	10
 34889  0030F2  D005               	goto	u9040
 34890  0030F4                     u9045:
 34891  0030F4  90D8               	bcf	status,0,c
 34892  0030F6  324F               	rrcf	??_fat_create_file+3,f,c
 34893  0030F8  324E               	rrcf	??_fat_create_file+2,f,c
 34894  0030FA  324D               	rrcf	??_fat_create_file+1,f,c
 34895  0030FC  324C               	rrcf	??_fat_create_file,f,c
 34896  0030FE                     u9040:
 34897  0030FE  2EE8               	decfsz	wreg,f,c
 34898  003100  D7F9               	goto	u9045
 34899  003102  0E01               	movlw	1
 34900  003104  244C               	addwf	??_fat_create_file,w,c
 34901  003106  6FBA               	movwf	fat_create_file@number_of_clusters& (0+255),b
 34902  003108  0E00               	movlw	0
 34903  00310A  204D               	addwfc	??_fat_create_file+1,w,c
 34904  00310C  6FBB               	movwf	(fat_create_file@number_of_clusters+1)& (0+255),b
 34905                           
 34906                           ; BSR set to: 0
 34907                           ;fat16.c: 339: if(fat_get_empty_clusters(number_of_clusters) != number_of_clusters)
 34908  00310E  C0BA  F030         	movff	fat_create_file@number_of_clusters,fat_get_empty_clusters@maximum
 34909  003112  C0BB  F031         	movff	fat_create_file@number_of_clusters+1,fat_get_empty_clusters@maximum+1
 34910  003116  EC56  F031         	call	_fat_get_empty_clusters	;wreg free
 34911  00311A  0100               	movlb	0	; () banked
 34912  00311C  51BA               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 34913  00311E  1830               	xorwf	?_fat_get_empty_clusters,w,c
 34914  003120  E105               	bnz	u9050
 34915  003122  51BB               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 34916  003124  1831               	xorwf	?_fat_get_empty_clusters+1,w,c
 34917  003126  A4D8               	btfss	status,2,c
 34918  003128  0012               	return	
 34919  00312A  D001               	goto	l1977
 34920  00312C                     u9050:
 34921                           
 34922                           ; BSR set to: 0
 34923                           ;fat16.c: 340: {;fat16.c: 343: return 0xFD;;	Return value of _fat_create_file is never u
      +                          sed
 34924  00312C  0012               	return	
 34925  00312E                     l1977:
 34926                           
 34927                           ; BSR set to: 0
 34928                           ;fat16.c: 344: };fat16.c: 347: cluster = _get_empty_cluster(2);
 34929                           
 34930                           ; BSR set to: 0
 34931  00312E  0E00               	movlw	0
 34932  003130  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 34933  003132  0E02               	movlw	2
 34934  003134  6E30               	movwf	__get_empty_cluster@first_cluster,c
 34935  003136  EC57  F034         	call	__get_empty_cluster	;wreg free
 34936  00313A  C030  F0BC         	movff	?__get_empty_cluster,fat_create_file@cluster
 34937  00313E  C031  F0BD         	movff	?__get_empty_cluster+1,fat_create_file@cluster+1
 34938                           
 34939                           ;fat16.c: 350: memcpy(root_entry.fileName, name, 8);
 34940  003142  0EBE               	movlw	low fat_create_file@root_entry
 34941  003144  6E01               	movwf	memcpy@d1,c
 34942  003146  0E00               	movlw	high fat_create_file@root_entry
 34943  003148  6E02               	movwf	memcpy@d1+1,c
 34944  00314A  C044  F003         	movff	fat_create_file@name,memcpy@s1
 34945  00314E  C045  F004         	movff	fat_create_file@name+1,memcpy@s1+1
 34946  003152  5003               	movf	memcpy@s1,w,c
 34947  003154  1004               	iorwf	memcpy@s1+1,w,c
 34948  003156  A4D8               	btfss	status,2,c
 34949  003158  0E20               	movlw	32
 34950  00315A  6E05               	movwf	memcpy@s1+2,c
 34951  00315C  0E00               	movlw	0
 34952  00315E  6E07               	movwf	memcpy@n+1,c
 34953  003160  0E08               	movlw	8
 34954  003162  6E06               	movwf	memcpy@n,c
 34955  003164  ECAE  F036         	call	_memcpy	;wreg free
 34956                           
 34957                           ;fat16.c: 351: memcpy(root_entry.fileExtension, extension, 3);
 34958  003168  0EC6               	movlw	low (fat_create_file@root_entry+8)
 34959  00316A  6E01               	movwf	memcpy@d1,c
 34960  00316C  0E00               	movlw	high (fat_create_file@root_entry+8)
 34961  00316E  6E02               	movwf	memcpy@d1+1,c
 34962  003170  C046  F003         	movff	fat_create_file@extension,memcpy@s1
 34963  003174  C047  F004         	movff	fat_create_file@extension+1,memcpy@s1+1
 34964  003178  5003               	movf	memcpy@s1,w,c
 34965  00317A  1004               	iorwf	memcpy@s1+1,w,c
 34966  00317C  A4D8               	btfss	status,2,c
 34967  00317E  0E20               	movlw	32
 34968  003180  6E05               	movwf	memcpy@s1+2,c
 34969  003182  0E00               	movlw	0
 34970  003184  6E07               	movwf	memcpy@n+1,c
 34971  003186  0E03               	movlw	3
 34972  003188  6E06               	movwf	memcpy@n,c
 34973  00318A  ECAE  F036         	call	_memcpy	;wreg free
 34974                           
 34975                           ;fat16.c: 352: root_entry.attributes = 0x00;
 34976  00318E  0E00               	movlw	0
 34977  003190  0100               	movlb	0	; () banked
 34978  003192  6FC9               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 34979                           
 34980                           ; BSR set to: 0
 34981                           ;fat16.c: 353: root_entry.reserved1 = 0x00;
 34982  003194  0E00               	movlw	0
 34983  003196  6FCA               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 34984                           
 34985                           ; BSR set to: 0
 34986                           ;fat16.c: 354: root_entry.secondFractions = 0x00;
 34987  003198  0E00               	movlw	0
 34988  00319A  6FCB               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 34989                           
 34990                           ; BSR set to: 0
 34991                           ;fat16.c: 355: root_entry.createdTime = _get_time();
 34992  00319C  EC48  F040         	call	__get_time	;wreg free
 34993  0031A0  C001  F0CC         	movff	?__get_time,fat_create_file@root_entry+14
 34994  0031A4  C002  F0CD         	movff	?__get_time+1,fat_create_file@root_entry+15
 34995                           
 34996                           ;fat16.c: 356: root_entry.createdDate = _get_date();
 34997  0031A8  EC4D  F040         	call	__get_date	;wreg free
 34998  0031AC  C001  F0CE         	movff	?__get_date,fat_create_file@root_entry+16
 34999  0031B0  C002  F0CF         	movff	?__get_date+1,fat_create_file@root_entry+17
 35000                           
 35001                           ;fat16.c: 357: root_entry.lastAccessDate = root_entry.createdDate;
 35002  0031B4  C0CE  F0D0         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 35003  0031B8  C0CF  F0D1         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 35004                           
 35005                           ;fat16.c: 358: root_entry.reserved2 = 0x00;
 35006  0031BC  0E00               	movlw	0
 35007  0031BE  0100               	movlb	0	; () banked
 35008  0031C0  6FD3               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 35009  0031C2  0E00               	movlw	0
 35010  0031C4  6FD2               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 35011                           
 35012                           ; BSR set to: 0
 35013                           ;fat16.c: 359: root_entry.modifiedTime = root_entry.createdTime;
 35014  0031C6  C0CC  F0D4         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 35015  0031CA  C0CD  F0D5         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 35016                           
 35017                           ; BSR set to: 0
 35018                           ;fat16.c: 360: root_entry.modifiedDate = root_entry.createdDate;
 35019  0031CE  C0CE  F0D6         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 35020  0031D2  C0CF  F0D7         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 35021                           
 35022                           ; BSR set to: 0
 35023                           ;fat16.c: 361: root_entry.firstCluster = cluster;
 35024  0031D6  C0BC  F0D8         	movff	fat_create_file@cluster,fat_create_file@root_entry+26
 35025  0031DA  C0BD  F0D9         	movff	fat_create_file@cluster+1,fat_create_file@root_entry+27
 35026                           
 35027                           ; BSR set to: 0
 35028                           ;fat16.c: 362: root_entry.fileSize = size;
 35029  0031DE  C048  F0DA         	movff	fat_create_file@size,fat_create_file@root_entry+28
 35030  0031E2  C049  F0DB         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 35031  0031E6  C04A  F0DC         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 35032  0031EA  C04B  F0DD         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 35033                           
 35034                           ;fat16.c: 365: _write_root(root_slot, &root_entry);
 35035  0031EE  0EBE               	movlw	low fat_create_file@root_entry
 35036  0031F0  6E29               	movwf	__write_root@data,c
 35037  0031F2  0E00               	movlw	high fat_create_file@root_entry
 35038  0031F4  6E2A               	movwf	__write_root@data+1,c
 35039  0031F6  51B9               	movf	fat_create_file@root_slot& (0+255),w,b
 35040  0031F8  EC84  F038         	call	__write_root
 35041                           
 35042                           ;fat16.c: 370: for(cluster_count=1; cluster_count<=number_of_clusters; ++cluster_count)
 35043  0031FC  0E00               	movlw	0
 35044  0031FE  0100               	movlb	0	; () banked
 35045  003200  6FB8               	movwf	(fat_create_file@cluster_count+1)& (0+255),b
 35046  003202  0E01               	movlw	1
 35047  003204  6FB7               	movwf	fat_create_file@cluster_count& (0+255),b
 35048  003206  D02F               	goto	l1978
 35049  003208                     
 35050                           ; BSR set to: 0
 35051                           ;fat16.c: 371: {;fat16.c: 373: if(cluster_count==number_of_clusters)
 35052                           
 35053                           ; BSR set to: 0
 35054  003208  51BA               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 35055  00320A  19B7               	xorwf	fat_create_file@cluster_count& (0+255),w,b
 35056  00320C  E10E               	bnz	l11911
 35057  00320E  51BB               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 35058  003210  19B8               	xorwf	(fat_create_file@cluster_count+1)& (0+255),w,b
 35059  003212  A4D8               	btfss	status,2,c
 35060  003214  D00A               	goto	l1980
 35061                           
 35062                           ; BSR set to: 0
 35063                           ;fat16.c: 374: {;fat16.c: 376: _write_fat(cluster, 0xFFFF);
 35064  003216  C0BC  F029         	movff	fat_create_file@cluster,__write_fat@cluster
 35065  00321A  C0BD  F02A         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 35066  00321E  0EFF               	movlw	255
 35067  003220  6E2C               	movwf	__write_fat@value+1,c
 35068  003222  682B               	setf	__write_fat@value,c
 35069  003224  EC13  F03C         	call	__write_fat	;wreg free
 35070                           
 35071                           ;fat16.c: 377: }
 35072  003228  D01B               	goto	l1981
 35073  00322A                     l1980:
 35074  00322A                     l11911:
 35075                           
 35076                           ;fat16.c: 378: else;fat16.c: 379: {;fat16.c: 381: next_cluster = _get_empty_cluster(clus
      +                          ter+1);
 35077  00322A  0E01               	movlw	1
 35078  00322C  0100               	movlb	0	; () banked
 35079  00322E  25BC               	addwf	fat_create_file@cluster& (0+255),w,b
 35080  003230  6E30               	movwf	__get_empty_cluster@first_cluster,c
 35081  003232  0E00               	movlw	0
 35082  003234  21BD               	addwfc	(fat_create_file@cluster+1)& (0+255),w,b
 35083  003236  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 35084  003238  EC57  F034         	call	__get_empty_cluster	;wreg free
 35085  00323C  C030  F0B5         	movff	?__get_empty_cluster,fat_create_file@next_cluster
 35086  003240  C031  F0B6         	movff	?__get_empty_cluster+1,fat_create_file@next_cluster+1
 35087                           
 35088                           ;fat16.c: 383: _write_fat(cluster, next_cluster);
 35089  003244  C0BC  F029         	movff	fat_create_file@cluster,__write_fat@cluster
 35090  003248  C0BD  F02A         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 35091  00324C  C0B5  F02B         	movff	fat_create_file@next_cluster,__write_fat@value
 35092  003250  C0B6  F02C         	movff	fat_create_file@next_cluster+1,__write_fat@value+1
 35093  003254  EC13  F03C         	call	__write_fat	;wreg free
 35094                           
 35095                           ;fat16.c: 385: cluster = next_cluster;
 35096  003258  C0B5  F0BC         	movff	fat_create_file@next_cluster,fat_create_file@cluster
 35097  00325C  C0B6  F0BD         	movff	fat_create_file@next_cluster+1,fat_create_file@cluster+1
 35098  003260                     l1981:
 35099  003260  0100               	movlb	0	; () banked
 35100  003262  4BB7               	infsnz	fat_create_file@cluster_count& (0+255),f,b
 35101  003264  2BB8               	incf	(fat_create_file@cluster_count+1)& (0+255),f,b
 35102  003266                     l1978:
 35103                           
 35104                           ; BSR set to: 0
 35105                           
 35106                           ; BSR set to: 0
 35107  003266  51B7               	movf	fat_create_file@cluster_count& (0+255),w,b
 35108  003268  5DBA               	subwf	fat_create_file@number_of_clusters& (0+255),w,b
 35109  00326A  51B8               	movf	(fat_create_file@cluster_count+1)& (0+255),w,b
 35110  00326C  59BB               	subwfb	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 35111  00326E  A0D8               	btfss	status,0,c
 35112  003270  0012               	return	
 35113  003272  D7CA               	goto	l1979
 35114  003274                     __end_of_fat_create_file:
 35115                           	opt stack 0
 35116                           tosu	equ	0xFFF
 35117                           tosh	equ	0xFFE
 35118                           tosl	equ	0xFFD
 35119                           pclath	equ	0xFFA
 35120                           tblptru	equ	0xFF8
 35121                           tblptrh	equ	0xFF7
 35122                           tblptrl	equ	0xFF6
 35123                           tablat	equ	0xFF5
 35124                           prodh	equ	0xFF4
 35125                           prodl	equ	0xFF3
 35126                           intcon	equ	0xFF2
 35127                           intcon2	equ	0xFF1
 35128                           intcon3	equ	0xFF0
 35129                           indf0	equ	0xFEF
 35130                           postinc0	equ	0xFEE
 35131                           fsr0h	equ	0xFEA
 35132                           fsr0l	equ	0xFE9
 35133                           wreg	equ	0xFE8
 35134                           indf1	equ	0xFE7
 35135                           postdec1	equ	0xFE5
 35136                           plusw1	equ	0xFE3
 35137                           fsr1h	equ	0xFE2
 35138                           fsr1l	equ	0xFE1
 35139                           indf2	equ	0xFDF
 35140                           postinc2	equ	0xFDE
 35141                           postdec2	equ	0xFDD
 35142                           plusw2	equ	0xFDB
 35143                           fsr2h	equ	0xFDA
 35144                           fsr2l	equ	0xFD9
 35145                           status	equ	0xFD8
 35146                           
 35147 ;; *************** function _memcpy *****************
 35148 ;; Defined at:
 35149 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 35150 ;; Parameters:    Size  Location     Type
 35151 ;;  d1              2    0[COMRAM] PTR void 
 35152 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 35153 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 35154 ;;  s1              3    2[COMRAM] PTR const void 
 35155 ;;		 -> _spi_external_rx_buffer(64), ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 35156 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 35157 ;;  n               2    5[COMRAM] unsigned int 
 35158 ;; Auto vars:     Size  Location     Type
 35159 ;;  s               3    7[COMRAM] PTR const unsigned char 
 35160 ;;		 -> _spi_external_rx_buffer(64), ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 35161 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 35162 ;;  d               2   10[COMRAM] PTR unsigned char 
 35163 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 35164 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 35165 ;;  tmp             1   12[COMRAM] unsigned char 
 35166 ;; Return value:  Size  Location     Type
 35167 ;;                  2    0[COMRAM] PTR void 
 35168 ;; Registers used:
 35169 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 35170 ;; Tracked objects:
 35171 ;;		On entry : 0/0
 35172 ;;		On exit  : 0/0
 35173 ;;		Unchanged: 0/0
 35174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35175 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35176 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35178 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35179 ;;Total ram usage:       13 bytes
 35180 ;; Hardware stack levels used:    1
 35181 ;; This function calls:
 35182 ;;		Nothing
 35183 ;; This function is called by:
 35184 ;;		_USBCtrlEPService
 35185 ;;		_MSDProcessCommandMediaPresent
 35186 ;;		__flash_set_page_size
 35187 ;;		_fat_create_file
 35188 ;;		_internalFlash_read
 35189 ;;		_api_prepare
 35190 ;; This function uses a non-reentrant model
 35191 ;;
 35192                           
 35193                           	psect	text178
 35194  006D5C                     __ptext178:
 35195                           	opt stack 0
 35196  006D5C                     _memcpy:
 35197                           	opt stack 27
 35198                           
 35199                           ;incstack = 0
 35200  006D5C  C003  F008         	movff	memcpy@s1,memcpy@s
 35201  006D60  C004  F009         	movff	memcpy@s1+1,memcpy@s+1
 35202  006D64  C005  F00A         	movff	memcpy@s1+2,memcpy@s+2
 35203  006D68  C001  F00B         	movff	memcpy@d1,memcpy@d
 35204  006D6C  C002  F00C         	movff	memcpy@d1+1,memcpy@d+1
 35205  006D70  D01F               	goto	l3505
 35206  006D72                     l10659:
 35207  006D72  C008  FFF6         	movff	memcpy@s,tblptrl
 35208  006D76  C009  FFF7         	movff	memcpy@s+1,tblptrh
 35209  006D7A  C00A  FFF8         	movff	memcpy@s+2,tblptru
 35210  006D7E  BAF8               	btfsc	tblptru,5,c
 35211  006D80  D003               	bra	u7437
 35212  006D82  0008               	tblrd		*
 35213  006D84  50F5               	movf	tablat,w,c
 35214  006D86  D005               	bra	u7430
 35215  006D88                     u7437:
 35216  006D88  CFF6 FFE9          	movff	tblptrl,fsr0l
 35217  006D8C  CFF7 FFEA          	movff	tblptrh,fsr0h
 35218  006D90  50EF               	movf	indf0,w,c
 35219  006D92                     u7430:
 35220  006D92  6E0D               	movwf	memcpy@tmp,c
 35221  006D94  0E01               	movlw	1
 35222  006D96  2608               	addwf	memcpy@s,f,c
 35223  006D98  0E00               	movlw	0
 35224  006D9A  2209               	addwfc	memcpy@s+1,f,c
 35225  006D9C  0E00               	movlw	0
 35226  006D9E  220A               	addwfc	memcpy@s+2,f,c
 35227  006DA0  C00B  FFD9         	movff	memcpy@d,fsr2l
 35228  006DA4  C00C  FFDA         	movff	memcpy@d+1,fsr2h
 35229  006DA8  C00D  FFDF         	movff	memcpy@tmp,indf2
 35230  006DAC  4A0B               	infsnz	memcpy@d,f,c
 35231  006DAE  2A0C               	incf	memcpy@d+1,f,c
 35232  006DB0                     l3505:
 35233  006DB0  0606               	decf	memcpy@n,f,c
 35234  006DB2  A0D8               	btfss	status,0,c
 35235  006DB4  0607               	decf	memcpy@n+1,f,c
 35236  006DB6  2806               	incf	memcpy@n,w,c
 35237  006DB8  E1DC               	bnz	l10659
 35238  006DBA  2807               	incf	memcpy@n+1,w,c
 35239  006DBC  B4D8               	btfsc	status,2,c
 35240  006DBE  0012               	return	
 35241  006DC0  D7D8               	goto	l3506
 35242  006DC2                     __end_of_memcpy:
 35243                           	opt stack 0
 35244                           tosu	equ	0xFFF
 35245                           tosh	equ	0xFFE
 35246                           tosl	equ	0xFFD
 35247                           pclath	equ	0xFFA
 35248                           tblptru	equ	0xFF8
 35249                           tblptrh	equ	0xFF7
 35250                           tblptrl	equ	0xFF6
 35251                           tablat	equ	0xFF5
 35252                           prodh	equ	0xFF4
 35253                           prodl	equ	0xFF3
 35254                           intcon	equ	0xFF2
 35255                           intcon2	equ	0xFF1
 35256                           intcon3	equ	0xFF0
 35257                           indf0	equ	0xFEF
 35258                           postinc0	equ	0xFEE
 35259                           fsr0h	equ	0xFEA
 35260                           fsr0l	equ	0xFE9
 35261                           wreg	equ	0xFE8
 35262                           indf1	equ	0xFE7
 35263                           postdec1	equ	0xFE5
 35264                           plusw1	equ	0xFE3
 35265                           fsr1h	equ	0xFE2
 35266                           fsr1l	equ	0xFE1
 35267                           indf2	equ	0xFDF
 35268                           postinc2	equ	0xFDE
 35269                           postdec2	equ	0xFDD
 35270                           plusw2	equ	0xFDB
 35271                           fsr2h	equ	0xFDA
 35272                           fsr2l	equ	0xFD9
 35273                           status	equ	0xFD8
 35274                           
 35275 ;; *************** function _fat_get_empty_clusters *****************
 35276 ;; Defined at:
 35277 ;;		line 130 in file "fat16.c"
 35278 ;; Parameters:    Size  Location     Type
 35279 ;;  maximum         2   47[COMRAM] unsigned int 
 35280 ;; Auto vars:     Size  Location     Type
 35281 ;;  cluster         2   57[COMRAM] unsigned int 
 35282 ;;  empty_cluste    2   55[COMRAM] unsigned int 
 35283 ;;  value           2   53[COMRAM] unsigned int 
 35284 ;;  offset          2   51[COMRAM] unsigned int 
 35285 ;;  fat_sector      2   49[COMRAM] unsigned int 
 35286 ;; Return value:  Size  Location     Type
 35287 ;;                  2   47[COMRAM] unsigned int 
 35288 ;; Registers used:
 35289 ;;		wreg, status,2, status,0, cstack
 35290 ;; Tracked objects:
 35291 ;;		On entry : 0/0
 35292 ;;		On exit  : 0/0
 35293 ;;		Unchanged: 0/0
 35294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35295 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35296 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35298 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35299 ;;Total ram usage:       12 bytes
 35300 ;; Hardware stack levels used:    1
 35301 ;; Hardware stack levels required when called:    5
 35302 ;; This function calls:
 35303 ;;		_flash_partial_read
 35304 ;; This function is called by:
 35305 ;;		_fat_create_file
 35306 ;; This function uses a non-reentrant model
 35307 ;;
 35308                           
 35309                           	psect	text179
 35310  0062AC                     __ptext179:
 35311                           	opt stack 0
 35312  0062AC                     _fat_get_empty_clusters:
 35313                           	opt stack 21
 35314                           
 35315                           ;fat16.c: 132: uint16_t empty_clusters = 0;
 35316                           
 35317                           ;incstack = 0
 35318  0062AC  0E00               	movlw	0
 35319  0062AE  6E39               	movwf	fat_get_empty_clusters@empty_clusters+1,c
 35320  0062B0  0E00               	movlw	0
 35321  0062B2  6E38               	movwf	fat_get_empty_clusters@empty_clusters,c
 35322                           
 35323                           ;fat16.c: 133: uint16_t cluster;;fat16.c: 134: uint16_t fat_sector;;fat16.c: 135: uint16
      +                          _t offset;;fat16.c: 136: uint16_t value;;fat16.c: 139: for(cluster=2; cluster<(8154+2); 
      +                          ++cluster)
 35324  0062B4  0E00               	movlw	0
 35325  0062B6  6E3B               	movwf	fat_get_empty_clusters@cluster+1,c
 35326  0062B8  0E02               	movlw	2
 35327  0062BA  6E3A               	movwf	fat_get_empty_clusters@cluster,c
 35328  0062BC  D033               	goto	l11313
 35329  0062BE                     
 35330                           ;fat16.c: 140: {;fat16.c: 141: fat_sector = cluster>>8;
 35331  0062BE  503B               	movf	fat_get_empty_clusters@cluster+1,w,c
 35332  0062C0  6E32               	movwf	fat_get_empty_clusters@fat_sector,c
 35333  0062C2  6A33               	clrf	fat_get_empty_clusters@fat_sector+1,c
 35334                           
 35335                           ;fat16.c: 142: fat_sector += 2;
 35336  0062C4  0E02               	movlw	2
 35337  0062C6  2632               	addwf	fat_get_empty_clusters@fat_sector,f,c
 35338  0062C8  0E00               	movlw	0
 35339  0062CA  2233               	addwfc	fat_get_empty_clusters@fat_sector+1,f,c
 35340                           
 35341                           ;fat16.c: 143: offset = cluster & 0xFF;
 35342  0062CC  503A               	movf	fat_get_empty_clusters@cluster,w,c
 35343  0062CE  6E34               	movwf	fat_get_empty_clusters@offset,c
 35344  0062D0  6A35               	clrf	fat_get_empty_clusters@offset+1,c
 35345                           
 35346                           ;fat16.c: 144: offset <<= 1;
 35347  0062D2  90D8               	bcf	status,0,c
 35348  0062D4  3634               	rlcf	fat_get_empty_clusters@offset,f,c
 35349  0062D6  3635               	rlcf	fat_get_empty_clusters@offset+1,f,c
 35350                           
 35351                           ;fat16.c: 145: flash_partial_read(fat_sector, offset, 2, &value);
 35352  0062D8  C032  F028         	movff	fat_get_empty_clusters@fat_sector,flash_partial_read@page
 35353  0062DC  C033  F029         	movff	fat_get_empty_clusters@fat_sector+1,flash_partial_read@page+1
 35354  0062E0  C034  F02A         	movff	fat_get_empty_clusters@offset,flash_partial_read@start
 35355  0062E4  C035  F02B         	movff	fat_get_empty_clusters@offset+1,flash_partial_read@start+1
 35356  0062E8  0E00               	movlw	0
 35357  0062EA  6E2D               	movwf	flash_partial_read@length+1,c
 35358  0062EC  0E02               	movlw	2
 35359  0062EE  6E2C               	movwf	flash_partial_read@length,c
 35360  0062F0  0E36               	movlw	low fat_get_empty_clusters@value
 35361  0062F2  6E2E               	movwf	flash_partial_read@data,c
 35362  0062F4  0E00               	movlw	high fat_get_empty_clusters@value
 35363  0062F6  6E2F               	movwf	flash_partial_read@data+1,c
 35364  0062F8  EC91  F03D         	call	_flash_partial_read	;wreg free
 35365                           
 35366                           ;fat16.c: 146: if(value==0x0000)
 35367  0062FC  5036               	movf	fat_get_empty_clusters@value,w,c
 35368  0062FE  1037               	iorwf	fat_get_empty_clusters@value+1,w,c
 35369  006300  A4D8               	btfss	status,2,c
 35370  006302  D00E               	goto	l1933
 35371                           
 35372                           ;fat16.c: 147: {;fat16.c: 148: ++empty_clusters;
 35373  006304  4A38               	infsnz	fat_get_empty_clusters@empty_clusters,f,c
 35374  006306  2A39               	incf	fat_get_empty_clusters@empty_clusters+1,f,c
 35375                           
 35376                           ;fat16.c: 149: if(empty_clusters==maximum)
 35377  006308  5030               	movf	fat_get_empty_clusters@maximum,w,c
 35378  00630A  1838               	xorwf	fat_get_empty_clusters@empty_clusters,w,c
 35379  00630C  E109               	bnz	l11311
 35380  00630E  5031               	movf	fat_get_empty_clusters@maximum+1,w,c
 35381  006310  1839               	xorwf	fat_get_empty_clusters@empty_clusters+1,w,c
 35382  006312  A4D8               	btfss	status,2,c
 35383  006314  D005               	goto	l1933
 35384                           
 35385                           ;fat16.c: 150: {;fat16.c: 151: return empty_clusters;
 35386  006316  C038  F030         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 35387  00631A  C039  F031         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 35388  00631E  0012               	return	
 35389  006320                     l1933:
 35390  006320                     l11311:
 35391  006320  4A3A               	infsnz	fat_get_empty_clusters@cluster,f,c
 35392  006322  2A3B               	incf	fat_get_empty_clusters@cluster+1,f,c
 35393  006324                     l11313:
 35394  006324  0EDC               	movlw	220
 35395  006326  5C3A               	subwf	fat_get_empty_clusters@cluster,w,c
 35396  006328  0E1F               	movlw	31
 35397  00632A  583B               	subwfb	fat_get_empty_clusters@cluster+1,w,c
 35398  00632C  A0D8               	btfss	status,0,c
 35399  00632E  D7C7               	goto	l1930
 35400                           
 35401                           ;fat16.c: 152: };fat16.c: 153: };fat16.c: 154: };fat16.c: 155: return empty_clusters;
 35402  006330  C038  F030         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 35403  006334  C039  F031         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 35404  006338  0012               	return		;funcret
 35405  00633A                     __end_of_fat_get_empty_clusters:
 35406                           	opt stack 0
 35407                           tosu	equ	0xFFF
 35408                           tosh	equ	0xFFE
 35409                           tosl	equ	0xFFD
 35410                           pclath	equ	0xFFA
 35411                           tblptru	equ	0xFF8
 35412                           tblptrh	equ	0xFF7
 35413                           tblptrl	equ	0xFF6
 35414                           tablat	equ	0xFF5
 35415                           prodh	equ	0xFF4
 35416                           prodl	equ	0xFF3
 35417                           intcon	equ	0xFF2
 35418                           intcon2	equ	0xFF1
 35419                           intcon3	equ	0xFF0
 35420                           indf0	equ	0xFEF
 35421                           postinc0	equ	0xFEE
 35422                           fsr0h	equ	0xFEA
 35423                           fsr0l	equ	0xFE9
 35424                           wreg	equ	0xFE8
 35425                           indf1	equ	0xFE7
 35426                           postdec1	equ	0xFE5
 35427                           plusw1	equ	0xFE3
 35428                           fsr1h	equ	0xFE2
 35429                           fsr1l	equ	0xFE1
 35430                           indf2	equ	0xFDF
 35431                           postinc2	equ	0xFDE
 35432                           postdec2	equ	0xFDD
 35433                           plusw2	equ	0xFDB
 35434                           fsr2h	equ	0xFDA
 35435                           fsr2l	equ	0xFD9
 35436                           status	equ	0xFD8
 35437                           
 35438 ;; *************** function _fat_find_file *****************
 35439 ;; Defined at:
 35440 ;;		line 250 in file "fat16.c"
 35441 ;; Parameters:    Size  Location     Type
 35442 ;;  name            2   47[COMRAM] PTR unsigned char 
 35443 ;;		 -> _spi_external_rx_buffer(64), bootloader_filename(9), RAM(3759), 
 35444 ;;  extension       2   49[COMRAM] PTR unsigned char 
 35445 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), RAM(3759), 
 35446 ;; Auto vars:     Size  Location     Type
 35447 ;;  buffer         11   51[COMRAM] unsigned char [11]
 35448 ;;  offset          2   65[COMRAM] unsigned int 
 35449 ;;  sector          2   63[COMRAM] unsigned int 
 35450 ;;  slot            1   62[COMRAM] unsigned char 
 35451 ;; Return value:  Size  Location     Type
 35452 ;;                  1    wreg      unsigned char 
 35453 ;; Registers used:
 35454 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 35455 ;; Tracked objects:
 35456 ;;		On entry : 0/0
 35457 ;;		On exit  : 0/0
 35458 ;;		Unchanged: 0/0
 35459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35460 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35461 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35463 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35464 ;;Total ram usage:       20 bytes
 35465 ;; Hardware stack levels used:    1
 35466 ;; Hardware stack levels required when called:    5
 35467 ;; This function calls:
 35468 ;;		_flash_partial_read
 35469 ;;		_strncmp
 35470 ;; This function is called by:
 35471 ;;		_fat_create_file
 35472 ;;		__bootloader_find_file
 35473 ;;		__fill_buffer_find_file
 35474 ;; This function uses a non-reentrant model
 35475 ;;
 35476                           
 35477                           	psect	text180
 35478  00568E                     __ptext180:
 35479                           	opt stack 0
 35480  00568E                     _fat_find_file:
 35481                           	opt stack 23
 35482                           
 35483                           ;fat16.c: 252: uint8_t slot;;fat16.c: 253: uint16_t sector;;fat16.c: 254: uint16_t offse
      +                          t;;fat16.c: 255: uint8_t buffer[11];;fat16.c: 256: slot = 0;
 35484                           
 35485                           ;incstack = 0
 35486  00568E  0E00               	movlw	0
 35487  005690  6E3F               	movwf	fat_find_file@slot,c
 35488                           
 35489                           ;fat16.c: 257: for(sector = 34; sector <= 37; ++sector)
 35490  005692  0E00               	movlw	0
 35491  005694  6E41               	movwf	fat_find_file@sector+1,c
 35492  005696  0E22               	movlw	34
 35493  005698  6E40               	movwf	fat_find_file@sector,c
 35494  00569A                     l11359:
 35495  00569A  5041               	movf	fat_find_file@sector+1,w,c
 35496  00569C  E156               	bnz	l11401
 35497  00569E  0E26               	movlw	38
 35498  0056A0  5C40               	subwf	fat_find_file@sector,w,c
 35499  0056A2  B0D8               	btfsc	status,0,c
 35500  0056A4  D052               	goto	u8380
 35501                           
 35502                           ;fat16.c: 258: {;fat16.c: 259: for(offset = 0; offset<512; offset += 32)
 35503  0056A6  0E00               	movlw	0
 35504  0056A8  6E43               	movwf	fat_find_file@offset+1,c
 35505  0056AA  0E00               	movlw	0
 35506  0056AC  6E42               	movwf	fat_find_file@offset,c
 35507  0056AE                     l11365:
 35508  0056AE  0E02               	movlw	2
 35509  0056B0  5C43               	subwf	fat_find_file@offset+1,w,c
 35510  0056B2  B0D8               	btfsc	status,0,c
 35511  0056B4  D047               	goto	u8370
 35512                           
 35513                           ;fat16.c: 260: {;fat16.c: 261: flash_partial_read(sector, offset, 11, &buffer);
 35514  0056B6  C040  F028         	movff	fat_find_file@sector,flash_partial_read@page
 35515  0056BA  C041  F029         	movff	fat_find_file@sector+1,flash_partial_read@page+1
 35516  0056BE  C042  F02A         	movff	fat_find_file@offset,flash_partial_read@start
 35517  0056C2  C043  F02B         	movff	fat_find_file@offset+1,flash_partial_read@start+1
 35518  0056C6  0E00               	movlw	0
 35519  0056C8  6E2D               	movwf	flash_partial_read@length+1,c
 35520  0056CA  0E0B               	movlw	11
 35521  0056CC  6E2C               	movwf	flash_partial_read@length,c
 35522  0056CE  0E34               	movlw	low fat_find_file@buffer
 35523  0056D0  6E2E               	movwf	flash_partial_read@data,c
 35524  0056D2  0E00               	movlw	high fat_find_file@buffer
 35525  0056D4  6E2F               	movwf	flash_partial_read@data+1,c
 35526  0056D6  EC91  F03D         	call	_flash_partial_read	;wreg free
 35527                           
 35528                           ;fat16.c: 262: if(buffer[0]==0x00)
 35529  0056DA  5034               	movf	fat_find_file@buffer,w,c
 35530  0056DC  A4D8               	btfss	status,2,c
 35531  0056DE  D002               	goto	l1962
 35532                           
 35533                           ;fat16.c: 263: {;fat16.c: 266: return 0xFF;
 35534  0056E0  0EFF               	movlw	255
 35535  0056E2  0012               	return	
 35536  0056E4                     l1962:
 35537                           
 35538                           ;fat16.c: 268: else if(buffer[0]==0xE5)
 35539  0056E4  0EE5               	movlw	229
 35540  0056E6  1834               	xorwf	fat_find_file@buffer,w,c
 35541  0056E8  B4D8               	btfsc	status,2,c
 35542  0056EA  D026               	goto	l1968
 35543                           
 35544                           ;fat16.c: 274: else;fat16.c: 275: {;fat16.c: 277: if(strncmp(name, &buffer[0], 8) == 0)
 35545                           
 35546                           ;fat16.c: 269: {;fat16.c: 273: }
 35547  0056EC  C030  F001         	movff	fat_find_file@name,strncmp@s1
 35548  0056F0  C031  F002         	movff	fat_find_file@name+1,strncmp@s1+1
 35549  0056F4  0E34               	movlw	low fat_find_file@buffer
 35550  0056F6  6E03               	movwf	strncmp@s2,c
 35551  0056F8  0E00               	movlw	high fat_find_file@buffer
 35552  0056FA  6E04               	movwf	strncmp@s2+1,c
 35553  0056FC  0E00               	movlw	0
 35554  0056FE  6E06               	movwf	strncmp@len+1,c
 35555  005700  0E08               	movlw	8
 35556  005702  6E05               	movwf	strncmp@len,c
 35557  005704  ECE6  F02A         	call	_strncmp	;wreg free
 35558  005708  5001               	movf	?_strncmp,w,c
 35559  00570A  1002               	iorwf	?_strncmp+1,w,c
 35560  00570C  A4D8               	btfss	status,2,c
 35561  00570E  D014               	goto	l1968
 35562                           
 35563                           ;fat16.c: 278: {;fat16.c: 280: if(strncmp(extension, &buffer[8], 3) == 0)
 35564  005710  C032  F001         	movff	fat_find_file@extension,strncmp@s1
 35565  005714  C033  F002         	movff	fat_find_file@extension+1,strncmp@s1+1
 35566  005718  0E3C               	movlw	low (fat_find_file@buffer+8)
 35567  00571A  6E03               	movwf	strncmp@s2,c
 35568  00571C  0E00               	movlw	high (fat_find_file@buffer+8)
 35569  00571E  6E04               	movwf	strncmp@s2+1,c
 35570  005720  0E00               	movlw	0
 35571  005722  6E06               	movwf	strncmp@len+1,c
 35572  005724  0E03               	movlw	3
 35573  005726  6E05               	movwf	strncmp@len,c
 35574  005728  ECE6  F02A         	call	_strncmp	;wreg free
 35575  00572C  5001               	movf	?_strncmp,w,c
 35576  00572E  1002               	iorwf	?_strncmp+1,w,c
 35577  005730  A4D8               	btfss	status,2,c
 35578  005732  D002               	goto	l1968
 35579                           
 35580                           ;fat16.c: 281: {;fat16.c: 284: return slot;
 35581  005734  503F               	movf	fat_find_file@slot,w,c
 35582  005736  0012               	return	
 35583  005738                     l1968:
 35584                           
 35585                           ;fat16.c: 285: };fat16.c: 286: };fat16.c: 287: };fat16.c: 288: ++slot;
 35586  005738  2A3F               	incf	fat_find_file@slot,f,c
 35587  00573A  0E20               	movlw	32
 35588  00573C  2642               	addwf	fat_find_file@offset,f,c
 35589  00573E  0E00               	movlw	0
 35590  005740  2243               	addwfc	fat_find_file@offset+1,f,c
 35591  005742  D7B5               	goto	l11365
 35592  005744                     u8370:
 35593  005744  4A40               	infsnz	fat_find_file@sector,f,c
 35594  005746  2A41               	incf	fat_find_file@sector+1,f,c
 35595  005748  D7A8               	goto	l11359
 35596  00574A                     u8380:
 35597  00574A                     l11401:
 35598                           
 35599                           ;fat16.c: 289: };fat16.c: 290: };fat16.c: 291: return 0xFF;
 35600  00574A  0EFF               	movlw	255
 35601  00574C  0012               	return	
 35602  00574E                     __end_of_fat_find_file:
 35603                           	opt stack 0
 35604                           tosu	equ	0xFFF
 35605                           tosh	equ	0xFFE
 35606                           tosl	equ	0xFFD
 35607                           pclath	equ	0xFFA
 35608                           tblptru	equ	0xFF8
 35609                           tblptrh	equ	0xFF7
 35610                           tblptrl	equ	0xFF6
 35611                           tablat	equ	0xFF5
 35612                           prodh	equ	0xFF4
 35613                           prodl	equ	0xFF3
 35614                           intcon	equ	0xFF2
 35615                           intcon2	equ	0xFF1
 35616                           intcon3	equ	0xFF0
 35617                           indf0	equ	0xFEF
 35618                           postinc0	equ	0xFEE
 35619                           fsr0h	equ	0xFEA
 35620                           fsr0l	equ	0xFE9
 35621                           wreg	equ	0xFE8
 35622                           indf1	equ	0xFE7
 35623                           postdec1	equ	0xFE5
 35624                           plusw1	equ	0xFE3
 35625                           fsr1h	equ	0xFE2
 35626                           fsr1l	equ	0xFE1
 35627                           indf2	equ	0xFDF
 35628                           postinc2	equ	0xFDE
 35629                           postdec2	equ	0xFDD
 35630                           plusw2	equ	0xFDB
 35631                           fsr2h	equ	0xFDA
 35632                           fsr2l	equ	0xFD9
 35633                           status	equ	0xFD8
 35634                           
 35635 ;; *************** function _strncmp *****************
 35636 ;; Defined at:
 35637 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 35638 ;; Parameters:    Size  Location     Type
 35639 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 35640 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), bootloader_filename(9), RAM(3759), 
 35641 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 35642 ;;		 -> fat_find_file@buffer(11), 
 35643 ;;  len             2    4[COMRAM] unsigned int 
 35644 ;; Auto vars:     Size  Location     Type
 35645 ;;		None
 35646 ;; Return value:  Size  Location     Type
 35647 ;;                  2    0[COMRAM] int 
 35648 ;; Registers used:
 35649 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 35650 ;; Tracked objects:
 35651 ;;		On entry : 0/0
 35652 ;;		On exit  : 0/0
 35653 ;;		Unchanged: 0/0
 35654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35655 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35657 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35658 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35659 ;;Total ram usage:        9 bytes
 35660 ;; Hardware stack levels used:    1
 35661 ;; This function calls:
 35662 ;;		Nothing
 35663 ;; This function is called by:
 35664 ;;		_fat_find_file
 35665 ;; This function uses a non-reentrant model
 35666 ;;
 35667                           
 35668                           	psect	text181
 35669  0055CC                     __ptext181:
 35670                           	opt stack 0
 35671  0055CC                     _strncmp:
 35672                           	opt stack 27
 35673                           
 35674                           ;incstack = 0
 35675  0055CC  D053               	goto	l3523
 35676  0055CE                     l10561:
 35677  0055CE  C001  FFF6         	movff	strncmp@s1,tblptrl
 35678  0055D2  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 35679  0055D6  6AF8               	clrf	tblptru,c
 35680  0055D8  0E0E               	movlw	(high __ramtop+-1)
 35681  0055DA  64F7               	cpfsgt	tblptrh,c
 35682  0055DC  D003               	bra	u7297
 35683  0055DE  0008               	tblrd		*
 35684  0055E0  50F5               	movf	tablat,w,c
 35685  0055E2  D005               	bra	u7290
 35686  0055E4                     u7297:
 35687  0055E4  CFF6 FFE9          	movff	tblptrl,fsr0l
 35688  0055E8  CFF7 FFEA          	movff	tblptrh,fsr0h
 35689  0055EC  50EF               	movf	indf0,w,c
 35690  0055EE                     u7290:
 35691  0055EE  0900               	iorlw	0
 35692  0055F0  B4D8               	btfsc	status,2,c
 35693  0055F2  D019               	goto	u7310
 35694  0055F4  C003  FFD9         	movff	strncmp@s2,fsr2l
 35695  0055F8  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 35696  0055FC  50DF               	movf	indf2,w,c
 35697  0055FE  6E07               	movwf	??_strncmp& (0+255),c
 35698  005600  C001  FFF6         	movff	strncmp@s1,tblptrl
 35699  005604  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 35700  005608  6AF8               	clrf	tblptru,c
 35701  00560A  0E0E               	movlw	(high __ramtop+-1)
 35702  00560C  64F7               	cpfsgt	tblptrh,c
 35703  00560E  D003               	bra	u7317
 35704  005610  0008               	tblrd		*
 35705  005612  50F5               	movf	tablat,w,c
 35706  005614  D005               	bra	u7315
 35707  005616                     u7317:
 35708  005616  CFF6 FFE9          	movff	tblptrl,fsr0l
 35709  00561A  CFF7 FFEA          	movff	tblptrh,fsr0h
 35710  00561E  50EF               	movf	indf0,w,c
 35711  005620                     u7315:
 35712  005620  1807               	xorwf	??_strncmp,w,c
 35713  005622  B4D8               	btfsc	status,2,c
 35714  005624  D023               	goto	l3525
 35715  005626                     u7310:
 35716  005626  C003  FFD9         	movff	strncmp@s2,fsr2l
 35717  00562A  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 35718  00562E  50DF               	movf	indf2,w,c
 35719  005630  6E07               	movwf	??_strncmp& (0+255),c
 35720  005632  6A08               	clrf	(??_strncmp+1)& (0+255),c
 35721  005634  1E07               	comf	??_strncmp,f,c
 35722  005636  1E08               	comf	??_strncmp+1,f,c
 35723  005638  4A07               	infsnz	??_strncmp,f,c
 35724  00563A  2A08               	incf	??_strncmp+1,f,c
 35725  00563C  C001  FFF6         	movff	strncmp@s1,tblptrl
 35726  005640  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 35727  005644  6AF8               	clrf	tblptru,c
 35728  005646  0E0E               	movlw	(high __ramtop+-1)
 35729  005648  64F7               	cpfsgt	tblptrh,c
 35730  00564A  D003               	bra	u7327
 35731  00564C  0008               	tblrd		*
 35732  00564E  50F5               	movf	tablat,w,c
 35733  005650  D005               	bra	u7320
 35734  005652                     u7327:
 35735  005652  CFF6 FFE9          	movff	tblptrl,fsr0l
 35736  005656  CFF7 FFEA          	movff	tblptrh,fsr0h
 35737  00565A  50EF               	movf	indf0,w,c
 35738  00565C                     u7320:
 35739  00565C  6E09               	movwf	(??_strncmp+2)& (0+255),c
 35740  00565E  5009               	movf	??_strncmp+2,w,c
 35741  005660  2407               	addwf	??_strncmp,w,c
 35742  005662  6E01               	movwf	?_strncmp,c
 35743  005664  0E00               	movlw	0
 35744  005666  2008               	addwfc	??_strncmp+1,w,c
 35745  005668  6E02               	movwf	?_strncmp+1,c
 35746  00566A  0012               	return	
 35747  00566C                     l3525:
 35748  00566C  4A01               	infsnz	strncmp@s1,f,c
 35749  00566E  2A02               	incf	strncmp@s1+1,f,c
 35750  005670  4A03               	infsnz	strncmp@s2,f,c
 35751  005672  2A04               	incf	strncmp@s2+1,f,c
 35752  005674                     l3523:
 35753  005674  0605               	decf	strncmp@len,f,c
 35754  005676  A0D8               	btfss	status,0,c
 35755  005678  0606               	decf	strncmp@len+1,f,c
 35756  00567A  2805               	incf	strncmp@len,w,c
 35757  00567C  E1A8               	bnz	l10561
 35758  00567E  2806               	incf	strncmp@len+1,w,c
 35759  005680  A4D8               	btfss	status,2,c
 35760  005682  D7A5               	goto	l3524
 35761  005684  0E00               	movlw	0
 35762  005686  6E02               	movwf	?_strncmp+1,c
 35763  005688  0E00               	movlw	0
 35764  00568A  6E01               	movwf	?_strncmp,c
 35765  00568C  0012               	return	
 35766  00568E                     __end_of_strncmp:
 35767                           	opt stack 0
 35768                           tosu	equ	0xFFF
 35769                           tosh	equ	0xFFE
 35770                           tosl	equ	0xFFD
 35771                           pclath	equ	0xFFA
 35772                           tblptru	equ	0xFF8
 35773                           tblptrh	equ	0xFF7
 35774                           tblptrl	equ	0xFF6
 35775                           tablat	equ	0xFF5
 35776                           prodh	equ	0xFF4
 35777                           prodl	equ	0xFF3
 35778                           intcon	equ	0xFF2
 35779                           intcon2	equ	0xFF1
 35780                           intcon3	equ	0xFF0
 35781                           indf0	equ	0xFEF
 35782                           postinc0	equ	0xFEE
 35783                           fsr0h	equ	0xFEA
 35784                           fsr0l	equ	0xFE9
 35785                           wreg	equ	0xFE8
 35786                           indf1	equ	0xFE7
 35787                           postdec1	equ	0xFE5
 35788                           plusw1	equ	0xFE3
 35789                           fsr1h	equ	0xFE2
 35790                           fsr1l	equ	0xFE1
 35791                           indf2	equ	0xFDF
 35792                           postinc2	equ	0xFDE
 35793                           postdec2	equ	0xFDD
 35794                           plusw2	equ	0xFDB
 35795                           fsr2h	equ	0xFDA
 35796                           fsr2l	equ	0xFD9
 35797                           status	equ	0xFD8
 35798                           
 35799 ;; *************** function __get_available_root_entry *****************
 35800 ;; Defined at:
 35801 ;;		line 94 in file "fat16.c"
 35802 ;; Parameters:    Size  Location     Type
 35803 ;;		None
 35804 ;; Auto vars:     Size  Location     Type
 35805 ;;  file_number     1   54[COMRAM] unsigned char 
 35806 ;; Return value:  Size  Location     Type
 35807 ;;                  1    wreg      unsigned char 
 35808 ;; Registers used:
 35809 ;;		wreg, status,2, status,0, cstack
 35810 ;; Tracked objects:
 35811 ;;		On entry : 0/0
 35812 ;;		On exit  : 0/0
 35813 ;;		Unchanged: 0/0
 35814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35816 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35818 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35819 ;;Total ram usage:        1 bytes
 35820 ;; Hardware stack levels used:    1
 35821 ;; Hardware stack levels required when called:    6
 35822 ;; This function calls:
 35823 ;;		__root_is_available
 35824 ;; This function is called by:
 35825 ;;		_fat_create_file
 35826 ;; This function uses a non-reentrant model
 35827 ;;
 35828                           
 35829                           	psect	text182
 35830  007DA2                     __ptext182:
 35831                           	opt stack 0
 35832  007DA2                     __get_available_root_entry:
 35833                           	opt stack 20
 35834                           
 35835                           ;fat16.c: 96: uint8_t file_number;;fat16.c: 97: for(file_number=0; file_number<64; ++fil
      +                          e_number)
 35836                           
 35837                           ;incstack = 0
 35838  007DA2  0E00               	movlw	0
 35839  007DA4  6E37               	movwf	__get_available_root_entry@file_number,c
 35840  007DA6                     l11241:
 35841  007DA6  0E3F               	movlw	63
 35842  007DA8  6437               	cpfsgt	__get_available_root_entry@file_number,c
 35843  007DAA  D001               	goto	l1918
 35844  007DAC  D00A               	goto	u8200
 35845  007DAE                     l1918:
 35846                           
 35847                           ;fat16.c: 98: {;fat16.c: 99: if(_root_is_available(file_number))
 35848  007DAE  5037               	movf	__get_available_root_entry@file_number,w,c
 35849  007DB0  ECE2  F033         	call	__root_is_available
 35850  007DB4  0900               	iorlw	0
 35851  007DB6  B4D8               	btfsc	status,2,c
 35852  007DB8  D002               	goto	l1920
 35853                           
 35854                           ;fat16.c: 100: {;fat16.c: 101: return file_number;
 35855  007DBA  5037               	movf	__get_available_root_entry@file_number,w,c
 35856  007DBC  0012               	return	
 35857  007DBE                     l1920:
 35858  007DBE  2A37               	incf	__get_available_root_entry@file_number,f,c
 35859  007DC0  D7F2               	goto	l11241
 35860  007DC2                     u8200:
 35861                           
 35862                           ;fat16.c: 102: };fat16.c: 103: };fat16.c: 104: return 0xFF;
 35863  007DC2  0EFF               	movlw	255
 35864  007DC4  0012               	return	
 35865  007DC6                     __end_of__get_available_root_entry:
 35866                           	opt stack 0
 35867                           tosu	equ	0xFFF
 35868                           tosh	equ	0xFFE
 35869                           tosl	equ	0xFFD
 35870                           pclath	equ	0xFFA
 35871                           tblptru	equ	0xFF8
 35872                           tblptrh	equ	0xFF7
 35873                           tblptrl	equ	0xFF6
 35874                           tablat	equ	0xFF5
 35875                           prodh	equ	0xFF4
 35876                           prodl	equ	0xFF3
 35877                           intcon	equ	0xFF2
 35878                           intcon2	equ	0xFF1
 35879                           intcon3	equ	0xFF0
 35880                           indf0	equ	0xFEF
 35881                           postinc0	equ	0xFEE
 35882                           fsr0h	equ	0xFEA
 35883                           fsr0l	equ	0xFE9
 35884                           wreg	equ	0xFE8
 35885                           indf1	equ	0xFE7
 35886                           postdec1	equ	0xFE5
 35887                           plusw1	equ	0xFE3
 35888                           fsr1h	equ	0xFE2
 35889                           fsr1l	equ	0xFE1
 35890                           indf2	equ	0xFDF
 35891                           postinc2	equ	0xFDE
 35892                           postdec2	equ	0xFDD
 35893                           plusw2	equ	0xFDB
 35894                           fsr2h	equ	0xFDA
 35895                           fsr2l	equ	0xFD9
 35896                           status	equ	0xFD8
 35897                           
 35898 ;; *************** function __parse_file_append *****************
 35899 ;; Defined at:
 35900 ;;		line 539 in file "api.c"
 35901 ;; Parameters:    Size  Location     Type
 35902 ;;  data            2   74[COMRAM] PTR unsigned char 
 35903 ;;		 -> RAM(3759), 
 35904 ;; Auto vars:     Size  Location     Type
 35905 ;;		None
 35906 ;; Return value:  Size  Location     Type
 35907 ;;                  1    wreg      unsigned char 
 35908 ;; Registers used:
 35909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35910 ;; Tracked objects:
 35911 ;;		On entry : 0/0
 35912 ;;		On exit  : 0/0
 35913 ;;		Unchanged: 0/0
 35914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35915 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35917 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35918 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35919 ;;Total ram usage:        3 bytes
 35920 ;; Hardware stack levels used:    1
 35921 ;; Hardware stack levels required when called:    8
 35922 ;; This function calls:
 35923 ;;		_fat_append_to_file
 35924 ;; This function is called by:
 35925 ;;		__parse_command_long
 35926 ;; This function uses a non-reentrant model
 35927 ;;
 35928                           
 35929                           	psect	text183
 35930  00655A                     __ptext183:
 35931                           	opt stack 0
 35932  00655A                     __parse_file_append:
 35933                           	opt stack 20
 35934                           
 35935                           ;api.c: 542: if((data[0]!=COMMAND_FILE_APPEND) || (data[3]!=0xFE) || (data[4]!=0x4B))
 35936                           
 35937                           ;incstack = 0
 35938  00655A  C04B  FFD9         	movff	__parse_file_append@data,fsr2l
 35939  00655E  C04C  FFDA         	movff	__parse_file_append@data+1,fsr2h
 35940  006562  0E54               	movlw	84
 35941  006564  18DE               	xorwf	postinc2,w,c
 35942  006566  A4D8               	btfss	status,2,c
 35943  006568  D014               	goto	u9720
 35944  00656A  EE20 F003          	lfsr	2,3
 35945  00656E  504B               	movf	__parse_file_append@data,w,c
 35946  006570  26D9               	addwf	fsr2l,f,c
 35947  006572  504C               	movf	__parse_file_append@data+1,w,c
 35948  006574  22DA               	addwfc	fsr2h,f,c
 35949  006576  0EFE               	movlw	254
 35950  006578  18DE               	xorwf	postinc2,w,c
 35951  00657A  A4D8               	btfss	status,2,c
 35952  00657C  D00A               	goto	u9720
 35953  00657E  EE20 F004          	lfsr	2,4
 35954  006582  504B               	movf	__parse_file_append@data,w,c
 35955  006584  26D9               	addwf	fsr2l,f,c
 35956  006586  504C               	movf	__parse_file_append@data+1,w,c
 35957  006588  22DA               	addwfc	fsr2h,f,c
 35958  00658A  0E4B               	movlw	75
 35959  00658C  18DE               	xorwf	postinc2,w,c
 35960  00658E  B4D8               	btfsc	status,2,c
 35961  006590  D002               	goto	l2675
 35962  006592                     u9720:
 35963                           
 35964                           ;api.c: 543: {;api.c: 544: return 15;
 35965  006592  0E0F               	movlw	15
 35966  006594  0012               	return	
 35967  006596                     l2675:
 35968                           
 35969                           ;api.c: 545: };api.c: 548: fat_append_to_file(data[1], (uint16_t) data[2], &data[5]);
 35970  006596  EE20 F002          	lfsr	2,2
 35971  00659A  504B               	movf	__parse_file_append@data,w,c
 35972  00659C  26D9               	addwf	fsr2l,f,c
 35973  00659E  504C               	movf	__parse_file_append@data+1,w,c
 35974  0065A0  22DA               	addwfc	fsr2h,f,c
 35975  0065A2  50DF               	movf	indf2,w,c
 35976  0065A4  6E4D               	movwf	??__parse_file_append& (0+255),c
 35977  0065A6  504D               	movf	??__parse_file_append,w,c
 35978  0065A8  6E3F               	movwf	fat_append_to_file@number_of_bytes,c
 35979  0065AA  6A40               	clrf	fat_append_to_file@number_of_bytes+1,c
 35980  0065AC  0E05               	movlw	5
 35981  0065AE  244B               	addwf	__parse_file_append@data,w,c
 35982  0065B0  6E41               	movwf	fat_append_to_file@data,c
 35983  0065B2  0E00               	movlw	0
 35984  0065B4  204C               	addwfc	__parse_file_append@data+1,w,c
 35985  0065B6  6E42               	movwf	fat_append_to_file@data+1,c
 35986  0065B8  EE20 F001          	lfsr	2,1
 35987  0065BC  504B               	movf	__parse_file_append@data,w,c
 35988  0065BE  26D9               	addwf	fsr2l,f,c
 35989  0065C0  504C               	movf	__parse_file_append@data+1,w,c
 35990  0065C2  22DA               	addwfc	fsr2h,f,c
 35991  0065C4  50DF               	movf	indf2,w,c
 35992  0065C6  EC8D  F010         	call	_fat_append_to_file
 35993                           
 35994                           ;api.c: 549: return data[2] + 5;
 35995  0065CA  EE20 F002          	lfsr	2,2
 35996  0065CE  504B               	movf	__parse_file_append@data,w,c
 35997  0065D0  26D9               	addwf	fsr2l,f,c
 35998  0065D2  504C               	movf	__parse_file_append@data+1,w,c
 35999  0065D4  22DA               	addwfc	fsr2h,f,c
 36000  0065D6  50DF               	movf	indf2,w,c
 36001  0065D8  0F05               	addlw	5
 36002  0065DA  0012               	return	
 36003  0065DC                     __end_of__parse_file_append:
 36004                           	opt stack 0
 36005                           tosu	equ	0xFFF
 36006                           tosh	equ	0xFFE
 36007                           tosl	equ	0xFFD
 36008                           pclath	equ	0xFFA
 36009                           tblptru	equ	0xFF8
 36010                           tblptrh	equ	0xFF7
 36011                           tblptrl	equ	0xFF6
 36012                           tablat	equ	0xFF5
 36013                           prodh	equ	0xFF4
 36014                           prodl	equ	0xFF3
 36015                           intcon	equ	0xFF2
 36016                           intcon2	equ	0xFF1
 36017                           intcon3	equ	0xFF0
 36018                           indf0	equ	0xFEF
 36019                           postinc0	equ	0xFEE
 36020                           fsr0h	equ	0xFEA
 36021                           fsr0l	equ	0xFE9
 36022                           wreg	equ	0xFE8
 36023                           indf1	equ	0xFE7
 36024                           postdec1	equ	0xFE5
 36025                           plusw1	equ	0xFE3
 36026                           fsr1h	equ	0xFE2
 36027                           fsr1l	equ	0xFE1
 36028                           indf2	equ	0xFDF
 36029                           postinc2	equ	0xFDE
 36030                           postdec2	equ	0xFDD
 36031                           plusw2	equ	0xFDB
 36032                           fsr2h	equ	0xFDA
 36033                           fsr2l	equ	0xFD9
 36034                           status	equ	0xFD8
 36035                           
 36036 ;; *************** function _fat_append_to_file *****************
 36037 ;; Defined at:
 36038 ;;		line 448 in file "fat16.c"
 36039 ;; Parameters:    Size  Location     Type
 36040 ;;  file_number     1    wreg     unsigned char 
 36041 ;;  number_of_by    2   62[COMRAM] unsigned int 
 36042 ;;  data            2   64[COMRAM] PTR unsigned char 
 36043 ;;		 -> RAM(3759), 
 36044 ;; Auto vars:     Size  Location     Type
 36045 ;;  file_number     1   12[BANK0 ] unsigned char 
 36046 ;;  root           32   19[BANK0 ] struct .
 36047 ;;  position        4   15[BANK0 ] unsigned long 
 36048 ;;  file_size       4    2[BANK0 ] unsigned long 
 36049 ;;  length          2   13[BANK0 ] unsigned int 
 36050 ;;  offset          2   10[BANK0 ] unsigned int 
 36051 ;;  fat_cluster     2    8[BANK0 ] unsigned int 
 36052 ;;  new_cluster     2    6[BANK0 ] unsigned int 
 36053 ;;  sector          2    0[BANK0 ] unsigned int 
 36054 ;; Return value:  Size  Location     Type
 36055 ;;                  1    wreg      unsigned char 
 36056 ;; Registers used:
 36057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36058 ;; Tracked objects:
 36059 ;;		On entry : 0/0
 36060 ;;		On exit  : 0/0
 36061 ;;		Unchanged: 0/0
 36062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36063 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36064 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36065 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36066 ;;      Totals:        12      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36067 ;;Total ram usage:       63 bytes
 36068 ;; Hardware stack levels used:    1
 36069 ;; Hardware stack levels required when called:    7
 36070 ;; This function calls:
 36071 ;;		__get_empty_cluster
 36072 ;;		__read_fat
 36073 ;;		__root_is_available
 36074 ;;		__sector_from_cluster
 36075 ;;		__update_modified_time
 36076 ;;		__write_fat
 36077 ;;		__write_root
 36078 ;;		_fat_get_file_information
 36079 ;;		_flash_partial_write
 36080 ;; This function is called by:
 36081 ;;		__parse_file_append
 36082 ;; This function uses a non-reentrant model
 36083 ;;
 36084                           
 36085                           	psect	text184
 36086  00211A                     __ptext184:
 36087                           	opt stack 0
 36088  00211A                     _fat_append_to_file:
 36089                           	opt stack 20
 36090                           
 36091                           ;incstack = 0
 36092                           ;fat_append_to_file@file_number stored from wreg
 36093  00211A  0100               	movlb	0	; () banked
 36094  00211C  6FC1               	movwf	fat_append_to_file@file_number& (0+255),b
 36095                           
 36096                           ;fat16.c: 450: rootEntry_t root;;fat16.c: 451: uint32_t file_size;;fat16.c: 452: uint16_
      +                          t fat_cluster;;fat16.c: 453: uint16_t new_cluster;;fat16.c: 454: uint32_t position;;fat1
      +                          6.c: 455: uint16_t offset;;fat16.c: 456: uint16_t sector;;fat16.c: 457: uint16_t length;
      +                          ;fat16.c: 460: if(file_number>=64)
 36097  00211E  0E3F               	movlw	63
 36098  002120  0100               	movlb	0	; () banked
 36099  002122  65C1               	cpfsgt	fat_append_to_file@file_number& (0+255),b
 36100  002124  D001               	goto	l1998
 36101  002126  0012               	return	
 36102  002128                     l1998:
 36103                           
 36104                           ; BSR set to: 0
 36105                           ;fat16.c: 464: };fat16.c: 467: if(_root_is_available(file_number))
 36106                           
 36107                           ; BSR set to: 0
 36108  002128  51C1               	movf	fat_append_to_file@file_number& (0+255),w,b
 36109  00212A  ECE2  F033         	call	__root_is_available
 36110  00212E  0900               	iorlw	0
 36111  002130  A4D8               	btfss	status,2,c
 36112  002132  0012               	return	
 36113                           
 36114                           ;fat16.c: 471: };fat16.c: 474: fat_get_file_information(file_number, &root);
 36115                           
 36116                           ;fat16.c: 468: {;fat16.c: 470: return 0xFE;;	Return value of _fat_append_to_file is neve
      +                          r used
 36117  002134  0EC8               	movlw	low fat_append_to_file@root
 36118  002136  6E37               	movwf	fat_get_file_information@data,c
 36119  002138  0E00               	movlw	high fat_append_to_file@root
 36120  00213A  6E38               	movwf	fat_get_file_information@data+1,c
 36121  00213C  0100               	movlb	0	; () banked
 36122  00213E  51C1               	movf	fat_append_to_file@file_number& (0+255),w,b
 36123  002140  EC1D  F034         	call	_fat_get_file_information
 36124                           
 36125                           ;fat16.c: 475: file_size = root.fileSize;
 36126  002144  C0E4  F0B7         	movff	fat_append_to_file@root+28,fat_append_to_file@file_size
 36127  002148  C0E5  F0B8         	movff	fat_append_to_file@root+29,fat_append_to_file@file_size+1
 36128  00214C  C0E6  F0B9         	movff	fat_append_to_file@root+30,fat_append_to_file@file_size+2
 36129  002150  C0E7  F0BA         	movff	fat_append_to_file@root+31,fat_append_to_file@file_size+3
 36130                           
 36131                           ;fat16.c: 476: fat_cluster = root.firstCluster;
 36132  002154  C0E2  F0BD         	movff	fat_append_to_file@root+26,fat_append_to_file@fat_cluster
 36133  002158  C0E3  F0BE         	movff	fat_append_to_file@root+27,fat_append_to_file@fat_cluster+1
 36134                           
 36135                           ;fat16.c: 479: position = 0;
 36136  00215C  0E00               	movlw	0
 36137  00215E  0100               	movlb	0	; () banked
 36138  002160  6FC4               	movwf	fat_append_to_file@position& (0+255),b
 36139  002162  0E00               	movlw	0
 36140  002164  6FC5               	movwf	(fat_append_to_file@position+1)& (0+255),b
 36141  002166  0E00               	movlw	0
 36142  002168  6FC6               	movwf	(fat_append_to_file@position+2)& (0+255),b
 36143  00216A  0E00               	movlw	0
 36144  00216C  6FC7               	movwf	(fat_append_to_file@position+3)& (0+255),b
 36145                           
 36146                           ;fat16.c: 480: while((file_size-position)>512)
 36147  00216E  D013               	goto	l2001
 36148  002170                     l11953:
 36149                           
 36150                           ; BSR set to: 0
 36151                           ;fat16.c: 481: {;fat16.c: 482: fat_cluster = _read_fat(fat_cluster);
 36152  002170  C0BD  F030         	movff	fat_append_to_file@fat_cluster,__read_fat@cluster
 36153  002174  C0BE  F031         	movff	fat_append_to_file@fat_cluster+1,__read_fat@cluster+1
 36154  002178  EC4A  F03B         	call	__read_fat	;wreg free
 36155  00217C  C030  F0BD         	movff	?__read_fat,fat_append_to_file@fat_cluster
 36156  002180  C031  F0BE         	movff	?__read_fat+1,fat_append_to_file@fat_cluster+1
 36157                           
 36158                           ;fat16.c: 483: position += 512;
 36159  002184  0E00               	movlw	0
 36160  002186  0100               	movlb	0	; () banked
 36161  002188  27C4               	addwf	fat_append_to_file@position& (0+255),f,b
 36162  00218A  0E02               	movlw	2
 36163  00218C  23C5               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 36164  00218E  0E00               	movlw	0
 36165  002190  23C6               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 36166  002192  0E00               	movlw	0
 36167  002194  23C7               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 36168  002196                     l2001:
 36169                           
 36170                           ; BSR set to: 0
 36171                           
 36172                           ; BSR set to: 0
 36173  002196  C0C4  F043         	movff	fat_append_to_file@position,??_fat_append_to_file
 36174  00219A  C0C5  F044         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 36175  00219E  C0C6  F045         	movff	fat_append_to_file@position+2,??_fat_append_to_file+2
 36176  0021A2  C0C7  F046         	movff	fat_append_to_file@position+3,??_fat_append_to_file+3
 36177  0021A6  1E43               	comf	??_fat_append_to_file,f,c
 36178  0021A8  1E44               	comf	??_fat_append_to_file+1,f,c
 36179  0021AA  1E45               	comf	??_fat_append_to_file+2,f,c
 36180  0021AC  1E46               	comf	??_fat_append_to_file+3,f,c
 36181  0021AE  2A43               	incf	??_fat_append_to_file,f,c
 36182  0021B0  0E00               	movlw	0
 36183  0021B2  2244               	addwfc	??_fat_append_to_file+1,f,c
 36184  0021B4  2245               	addwfc	??_fat_append_to_file+2,f,c
 36185  0021B6  2246               	addwfc	??_fat_append_to_file+3,f,c
 36186  0021B8  51B7               	movf	fat_append_to_file@file_size& (0+255),w,b
 36187  0021BA  2443               	addwf	??_fat_append_to_file,w,c
 36188  0021BC  6E47               	movwf	(??_fat_append_to_file+4)& (0+255),c
 36189  0021BE  51B8               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 36190  0021C0  2044               	addwfc	??_fat_append_to_file+1,w,c
 36191  0021C2  6E48               	movwf	(??_fat_append_to_file+5)& (0+255),c
 36192  0021C4  51B9               	movf	(fat_append_to_file@file_size+2)& (0+255),w,b
 36193  0021C6  2045               	addwfc	??_fat_append_to_file+2,w,c
 36194  0021C8  6E49               	movwf	(??_fat_append_to_file+6)& (0+255),c
 36195  0021CA  51BA               	movf	(fat_append_to_file@file_size+3)& (0+255),w,b
 36196  0021CC  2046               	addwfc	??_fat_append_to_file+3,w,c
 36197  0021CE  6E4A               	movwf	(??_fat_append_to_file+7)& (0+255),c
 36198  0021D0  504A               	movf	??_fat_append_to_file+7,w,c
 36199  0021D2  1049               	iorwf	??_fat_append_to_file+6,w,c
 36200  0021D4  E1CD               	bnz	l11953
 36201  0021D6  0447               	decf	??_fat_append_to_file+4,w,c
 36202  0021D8  0E02               	movlw	2
 36203  0021DA  5848               	subwfb	??_fat_append_to_file+5,w,c
 36204  0021DC  B0D8               	btfsc	status,0,c
 36205  0021DE  D7C8               	goto	l2002
 36206                           
 36207                           ; BSR set to: 0
 36208                           ;fat16.c: 484: };fat16.c: 487: offset = file_size - position;
 36209                           
 36210                           ; BSR set to: 0
 36211  0021E0  C0C4  F043         	movff	fat_append_to_file@position,??_fat_append_to_file
 36212  0021E4  C0C5  F044         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 36213  0021E8  1E43               	comf	??_fat_append_to_file,f,c
 36214  0021EA  1E44               	comf	??_fat_append_to_file+1,f,c
 36215  0021EC  4A43               	infsnz	??_fat_append_to_file,f,c
 36216  0021EE  2A44               	incf	??_fat_append_to_file+1,f,c
 36217  0021F0  51B7               	movf	fat_append_to_file@file_size& (0+255),w,b
 36218  0021F2  2443               	addwf	??_fat_append_to_file,w,c
 36219  0021F4  6FBF               	movwf	fat_append_to_file@offset& (0+255),b
 36220  0021F6  51B8               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 36221  0021F8  2044               	addwfc	??_fat_append_to_file+1,w,c
 36222  0021FA  6FC0               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 36223                           
 36224                           ; BSR set to: 0
 36225                           ;fat16.c: 490: position = 0;
 36226  0021FC  0E00               	movlw	0
 36227  0021FE  6FC4               	movwf	fat_append_to_file@position& (0+255),b
 36228  002200  0E00               	movlw	0
 36229  002202  6FC5               	movwf	(fat_append_to_file@position+1)& (0+255),b
 36230  002204  0E00               	movlw	0
 36231  002206  6FC6               	movwf	(fat_append_to_file@position+2)& (0+255),b
 36232  002208  0E00               	movlw	0
 36233  00220A  6FC7               	movwf	(fat_append_to_file@position+3)& (0+255),b
 36234                           
 36235                           ;fat16.c: 491: while(position < number_of_bytes)
 36236  00220C  D06F               	goto	l2004
 36237  00220E                     
 36238                           ; BSR set to: 0
 36239                           ;fat16.c: 492: {;fat16.c: 494: if(offset==512)
 36240                           
 36241                           ; BSR set to: 0
 36242  00220E  0E02               	movlw	2
 36243  002210  19C0               	xorwf	(fat_append_to_file@offset+1)& (0+255),w,b
 36244  002212  11BF               	iorwf	fat_append_to_file@offset& (0+255),w,b
 36245  002214  A4D8               	btfss	status,2,c
 36246  002216  D026               	goto	l2006
 36247                           
 36248                           ; BSR set to: 0
 36249                           ;fat16.c: 495: {;fat16.c: 498: new_cluster = _get_empty_cluster(0x0000);
 36250  002218  0E00               	movlw	0
 36251  00221A  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 36252  00221C  0E00               	movlw	0
 36253  00221E  6E30               	movwf	__get_empty_cluster@first_cluster,c
 36254  002220  EC57  F034         	call	__get_empty_cluster	;wreg free
 36255  002224  C030  F0BB         	movff	?__get_empty_cluster,fat_append_to_file@new_cluster
 36256  002228  C031  F0BC         	movff	?__get_empty_cluster+1,fat_append_to_file@new_cluster+1
 36257                           
 36258                           ;fat16.c: 500: _write_fat(fat_cluster, new_cluster);
 36259  00222C  C0BD  F029         	movff	fat_append_to_file@fat_cluster,__write_fat@cluster
 36260  002230  C0BE  F02A         	movff	fat_append_to_file@fat_cluster+1,__write_fat@cluster+1
 36261  002234  C0BB  F02B         	movff	fat_append_to_file@new_cluster,__write_fat@value
 36262  002238  C0BC  F02C         	movff	fat_append_to_file@new_cluster+1,__write_fat@value+1
 36263  00223C  EC13  F03C         	call	__write_fat	;wreg free
 36264                           
 36265                           ;fat16.c: 502: _write_fat(new_cluster, 0xFFFF);
 36266  002240  C0BB  F029         	movff	fat_append_to_file@new_cluster,__write_fat@cluster
 36267  002244  C0BC  F02A         	movff	fat_append_to_file@new_cluster+1,__write_fat@cluster+1
 36268  002248  0EFF               	movlw	255
 36269  00224A  6E2C               	movwf	__write_fat@value+1,c
 36270  00224C  682B               	setf	__write_fat@value,c
 36271  00224E  EC13  F03C         	call	__write_fat	;wreg free
 36272                           
 36273                           ;fat16.c: 504: fat_cluster = new_cluster;
 36274  002252  C0BB  F0BD         	movff	fat_append_to_file@new_cluster,fat_append_to_file@fat_cluster
 36275  002256  C0BC  F0BE         	movff	fat_append_to_file@new_cluster+1,fat_append_to_file@fat_cluster+1
 36276                           
 36277                           ;fat16.c: 505: offset = 0;
 36278  00225A  0E00               	movlw	0
 36279  00225C  0100               	movlb	0	; () banked
 36280  00225E  6FC0               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 36281  002260  0E00               	movlw	0
 36282  002262  6FBF               	movwf	fat_append_to_file@offset& (0+255),b
 36283  002264                     l2006:
 36284                           
 36285                           ; BSR set to: 0
 36286                           ;fat16.c: 506: };fat16.c: 509: sector = _sector_from_cluster(fat_cluster);
 36287                           
 36288                           ; BSR set to: 0
 36289  002264  C0BD  F001         	movff	fat_append_to_file@fat_cluster,__sector_from_cluster@fat_cluster
 36290  002268  C0BE  F002         	movff	fat_append_to_file@fat_cluster+1,__sector_from_cluster@fat_cluster+1
 36291  00226C  ECFF  F03F         	call	__sector_from_cluster	;wreg free
 36292  002270  C001  F0B5         	movff	?__sector_from_cluster,fat_append_to_file@sector
 36293  002274  C002  F0B6         	movff	?__sector_from_cluster+1,fat_append_to_file@sector+1
 36294                           
 36295                           ;fat16.c: 512: length = 512 - offset;
 36296  002278  C0BF  F043         	movff	fat_append_to_file@offset,??_fat_append_to_file
 36297  00227C  C0C0  F044         	movff	fat_append_to_file@offset+1,??_fat_append_to_file+1
 36298  002280  1E43               	comf	??_fat_append_to_file,f,c
 36299  002282  1E44               	comf	??_fat_append_to_file+1,f,c
 36300  002284  4A43               	infsnz	??_fat_append_to_file,f,c
 36301  002286  2A44               	incf	??_fat_append_to_file+1,f,c
 36302  002288  0E00               	movlw	0
 36303  00228A  2443               	addwf	??_fat_append_to_file,w,c
 36304  00228C  0100               	movlb	0	; () banked
 36305  00228E  6FC2               	movwf	fat_append_to_file@length& (0+255),b
 36306  002290  0E02               	movlw	2
 36307  002292  2044               	addwfc	??_fat_append_to_file+1,w,c
 36308  002294  6FC3               	movwf	(fat_append_to_file@length+1)& (0+255),b
 36309                           
 36310                           ; BSR set to: 0
 36311                           ;fat16.c: 513: if(length>number_of_bytes)
 36312  002296  51C2               	movf	fat_append_to_file@length& (0+255),w,b
 36313  002298  5C3F               	subwf	fat_append_to_file@number_of_bytes,w,c
 36314  00229A  51C3               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 36315  00229C  5840               	subwfb	fat_append_to_file@number_of_bytes+1,w,c
 36316  00229E  B0D8               	btfsc	status,0,c
 36317  0022A0  D004               	goto	l2007
 36318                           
 36319                           ; BSR set to: 0
 36320                           ;fat16.c: 514: {;fat16.c: 515: length = number_of_bytes;
 36321  0022A2  C03F  F0C2         	movff	fat_append_to_file@number_of_bytes,fat_append_to_file@length
 36322  0022A6  C040  F0C3         	movff	fat_append_to_file@number_of_bytes+1,fat_append_to_file@length+1
 36323  0022AA                     l2007:
 36324                           
 36325                           ; BSR set to: 0
 36326                           ;fat16.c: 516: };fat16.c: 519: flash_partial_write(sector, offset, length, &data[positio
      +                          n]);
 36327                           
 36328                           ; BSR set to: 0
 36329  0022AA  C0B5  F020         	movff	fat_append_to_file@sector,flash_partial_write@page
 36330  0022AE  C0B6  F021         	movff	fat_append_to_file@sector+1,flash_partial_write@page+1
 36331  0022B2  C0BF  F022         	movff	fat_append_to_file@offset,flash_partial_write@start
 36332  0022B6  C0C0  F023         	movff	fat_append_to_file@offset+1,flash_partial_write@start+1
 36333  0022BA  C0C2  F024         	movff	fat_append_to_file@length,flash_partial_write@length
 36334  0022BE  C0C3  F025         	movff	fat_append_to_file@length+1,flash_partial_write@length+1
 36335  0022C2  51C4               	movf	fat_append_to_file@position& (0+255),w,b
 36336  0022C4  2441               	addwf	fat_append_to_file@data,w,c
 36337  0022C6  6E26               	movwf	flash_partial_write@data,c
 36338  0022C8  51C5               	movf	(fat_append_to_file@position+1)& (0+255),w,b
 36339  0022CA  2042               	addwfc	fat_append_to_file@data+1,w,c
 36340  0022CC  6E27               	movwf	flash_partial_write@data+1,c
 36341  0022CE  EC02  F035         	call	_flash_partial_write	;wreg free
 36342                           
 36343                           ;fat16.c: 522: position += length;
 36344  0022D2  0100               	movlb	0	; () banked
 36345  0022D4  51C2               	movf	fat_append_to_file@length& (0+255),w,b
 36346  0022D6  27C4               	addwf	fat_append_to_file@position& (0+255),f,b
 36347  0022D8  51C3               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 36348  0022DA  23C5               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 36349  0022DC  0E00               	movlw	0
 36350  0022DE  23C6               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 36351  0022E0  0E00               	movlw	0
 36352  0022E2  23C7               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 36353                           
 36354                           ; BSR set to: 0
 36355                           ;fat16.c: 523: offset += length;
 36356  0022E4  51C2               	movf	fat_append_to_file@length& (0+255),w,b
 36357  0022E6  27BF               	addwf	fat_append_to_file@offset& (0+255),f,b
 36358  0022E8  51C3               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 36359  0022EA  23C0               	addwfc	(fat_append_to_file@offset+1)& (0+255),f,b
 36360  0022EC                     l2004:
 36361                           
 36362                           ; BSR set to: 0
 36363                           
 36364                           ; BSR set to: 0
 36365  0022EC  503F               	movf	fat_append_to_file@number_of_bytes,w,c
 36366  0022EE  6E43               	movwf	??_fat_append_to_file& (0+255),c
 36367  0022F0  5040               	movf	fat_append_to_file@number_of_bytes+1,w,c
 36368  0022F2  6E44               	movwf	(??_fat_append_to_file+1)& (0+255),c
 36369  0022F4  6A45               	clrf	(??_fat_append_to_file+2)& (0+255),c
 36370  0022F6  6A46               	clrf	(??_fat_append_to_file+3)& (0+255),c
 36371  0022F8  5043               	movf	??_fat_append_to_file,w,c
 36372  0022FA  5DC4               	subwf	fat_append_to_file@position& (0+255),w,b
 36373  0022FC  5044               	movf	??_fat_append_to_file+1,w,c
 36374  0022FE  59C5               	subwfb	(fat_append_to_file@position+1)& (0+255),w,b
 36375  002300  5045               	movf	??_fat_append_to_file+2,w,c
 36376  002302  59C6               	subwfb	(fat_append_to_file@position+2)& (0+255),w,b
 36377  002304  5046               	movf	??_fat_append_to_file+3,w,c
 36378  002306  59C7               	subwfb	(fat_append_to_file@position+3)& (0+255),w,b
 36379  002308  A0D8               	btfss	status,0,c
 36380  00230A  D781               	goto	l2005
 36381                           
 36382                           ; BSR set to: 0
 36383                           ;fat16.c: 524: };fat16.c: 528: root.fileSize += number_of_bytes;
 36384                           
 36385                           ; BSR set to: 0
 36386  00230C  503F               	movf	fat_append_to_file@number_of_bytes,w,c
 36387  00230E  27E4               	addwf	(fat_append_to_file@root+28)& (0+255),f,b
 36388  002310  5040               	movf	fat_append_to_file@number_of_bytes+1,w,c
 36389  002312  23E5               	addwfc	(fat_append_to_file@root+29)& (0+255),f,b
 36390  002314  0E00               	movlw	0
 36391  002316  23E6               	addwfc	(fat_append_to_file@root+30)& (0+255),f,b
 36392  002318  0E00               	movlw	0
 36393  00231A  23E7               	addwfc	(fat_append_to_file@root+31)& (0+255),f,b
 36394                           
 36395                           ; BSR set to: 0
 36396                           ;fat16.c: 529: _update_modified_time(&root);
 36397  00231C  0EC8               	movlw	low fat_append_to_file@root
 36398  00231E  6E05               	movwf	__update_modified_time@root,c
 36399  002320  0E00               	movlw	high fat_append_to_file@root
 36400  002322  6E06               	movwf	__update_modified_time@root+1,c
 36401  002324  EC78  F03D         	call	__update_modified_time	;wreg free
 36402                           
 36403                           ;fat16.c: 530: _write_root(file_number, &root);
 36404  002328  0EC8               	movlw	low fat_append_to_file@root
 36405  00232A  6E29               	movwf	__write_root@data,c
 36406  00232C  0E00               	movlw	high fat_append_to_file@root
 36407  00232E  6E2A               	movwf	__write_root@data+1,c
 36408  002330  0100               	movlb	0	; () banked
 36409  002332  51C1               	movf	fat_append_to_file@file_number& (0+255),w,b
 36410  002334  EC84  F038         	call	__write_root
 36411  002338  0012               	return	
 36412  00233A                     __end_of_fat_append_to_file:
 36413                           	opt stack 0
 36414                           tosu	equ	0xFFF
 36415                           tosh	equ	0xFFE
 36416                           tosl	equ	0xFFD
 36417                           pclath	equ	0xFFA
 36418                           tblptru	equ	0xFF8
 36419                           tblptrh	equ	0xFF7
 36420                           tblptrl	equ	0xFF6
 36421                           tablat	equ	0xFF5
 36422                           prodh	equ	0xFF4
 36423                           prodl	equ	0xFF3
 36424                           intcon	equ	0xFF2
 36425                           intcon2	equ	0xFF1
 36426                           intcon3	equ	0xFF0
 36427                           indf0	equ	0xFEF
 36428                           postinc0	equ	0xFEE
 36429                           fsr0h	equ	0xFEA
 36430                           fsr0l	equ	0xFE9
 36431                           wreg	equ	0xFE8
 36432                           indf1	equ	0xFE7
 36433                           postdec1	equ	0xFE5
 36434                           plusw1	equ	0xFE3
 36435                           fsr1h	equ	0xFE2
 36436                           fsr1l	equ	0xFE1
 36437                           indf2	equ	0xFDF
 36438                           postinc2	equ	0xFDE
 36439                           postdec2	equ	0xFDD
 36440                           plusw2	equ	0xFDB
 36441                           fsr2h	equ	0xFDA
 36442                           fsr2l	equ	0xFD9
 36443                           status	equ	0xFD8
 36444                           
 36445 ;; *************** function _fat_get_file_information *****************
 36446 ;; Defined at:
 36447 ;;		line 981 in file "fat16.c"
 36448 ;; Parameters:    Size  Location     Type
 36449 ;;  file_number     1    wreg     unsigned char 
 36450 ;;  data            2   54[COMRAM] PTR struct .
 36451 ;;		 -> _spi_external_tx_buffer(64), fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32),
      + 
 36452 ;;		 -> RAM(3759), 
 36453 ;; Auto vars:     Size  Location     Type
 36454 ;;  file_number     1   61[COMRAM] unsigned char 
 36455 ;;  offset          2   59[COMRAM] unsigned int 
 36456 ;;  root_sector     2   57[COMRAM] unsigned int 
 36457 ;; Return value:  Size  Location     Type
 36458 ;;                  1    wreg      unsigned char 
 36459 ;; Registers used:
 36460 ;;		wreg, status,2, status,0, cstack
 36461 ;; Tracked objects:
 36462 ;;		On entry : 0/0
 36463 ;;		On exit  : 0/0
 36464 ;;		Unchanged: 0/0
 36465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36466 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36467 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36468 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36469 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36470 ;;Total ram usage:        8 bytes
 36471 ;; Hardware stack levels used:    1
 36472 ;; Hardware stack levels required when called:    6
 36473 ;; This function calls:
 36474 ;;		__root_is_available
 36475 ;;		_flash_partial_read
 36476 ;; This function is called by:
 36477 ;;		_fat_append_to_file
 36478 ;;		_fat_rename_file
 36479 ;;		_fat_read_from_file
 36480 ;;		__fill_buffer_get_file_details
 36481 ;; This function uses a non-reentrant model
 36482 ;;
 36483                           
 36484                           	psect	text185
 36485  00683A                     __ptext185:
 36486                           	opt stack 0
 36487  00683A                     _fat_get_file_information:
 36488                           	opt stack 21
 36489                           
 36490                           ;incstack = 0
 36491                           ;fat_get_file_information@file_number stored from wreg
 36492  00683A  6E3E               	movwf	fat_get_file_information@file_number,c
 36493                           
 36494                           ;fat16.c: 983: uint16_t root_sector;;fat16.c: 984: uint16_t offset;;fat16.c: 986: if(fil
      +                          e_number>=64)
 36495  00683C  0E3F               	movlw	63
 36496  00683E  643E               	cpfsgt	fat_get_file_information@file_number,c
 36497  006840  D002               	goto	l2190
 36498                           
 36499                           ;fat16.c: 987: {;fat16.c: 989: return 0x01;
 36500  006842  0E01               	movlw	1
 36501  006844  0012               	return	
 36502  006846                     l2190:
 36503                           
 36504                           ;fat16.c: 990: };fat16.c: 991: if(_root_is_available(file_number))
 36505  006846  503E               	movf	fat_get_file_information@file_number,w,c
 36506  006848  ECE2  F033         	call	__root_is_available
 36507  00684C  0900               	iorlw	0
 36508  00684E  B4D8               	btfsc	status,2,c
 36509  006850  D002               	goto	l2192
 36510                           
 36511                           ;fat16.c: 992: {;fat16.c: 994: return 0x02;
 36512  006852  0E02               	movlw	2
 36513  006854  0012               	return	
 36514  006856                     l2192:
 36515                           
 36516                           ;fat16.c: 995: };fat16.c: 997: root_sector = (file_number >> 4) + 34;
 36517  006856  C03E  F039         	movff	fat_get_file_information@file_number,??_fat_get_file_information
 36518  00685A  3A39               	swapf	??_fat_get_file_information,f,c
 36519  00685C  0E0F               	movlw	15
 36520  00685E  1639               	andwf	??_fat_get_file_information,f,c
 36521  006860  0E22               	movlw	34
 36522  006862  2439               	addwf	??_fat_get_file_information,w,c
 36523  006864  6E3A               	movwf	fat_get_file_information@root_sector,c
 36524  006866  6A3B               	clrf	fat_get_file_information@root_sector+1,c
 36525  006868  0E00               	movlw	0
 36526  00686A  223B               	addwfc	fat_get_file_information@root_sector+1,f,c
 36527                           
 36528                           ;fat16.c: 998: offset = (file_number & 0b1111);
 36529  00686C  C03E  F039         	movff	fat_get_file_information@file_number,??_fat_get_file_information
 36530  006870  0E0F               	movlw	15
 36531  006872  1639               	andwf	??_fat_get_file_information,f,c
 36532  006874  5039               	movf	??_fat_get_file_information,w,c
 36533  006876  6E3C               	movwf	fat_get_file_information@offset,c
 36534  006878  6A3D               	clrf	fat_get_file_information@offset+1,c
 36535                           
 36536                           ;fat16.c: 999: offset <<= 5;
 36537  00687A  0E05               	movlw	5
 36538  00687C                     u8415:
 36539  00687C  90D8               	bcf	status,0,c
 36540  00687E  363C               	rlcf	fat_get_file_information@offset,f,c
 36541  006880  363D               	rlcf	fat_get_file_information@offset+1,f,c
 36542  006882  2EE8               	decfsz	wreg,f,c
 36543  006884  D7FB               	goto	u8415
 36544                           
 36545                           ;fat16.c: 1000: flash_partial_read(root_sector, offset, 32, data);
 36546  006886  C03A  F028         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 36547  00688A  C03B  F029         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 36548  00688E  C03C  F02A         	movff	fat_get_file_information@offset,flash_partial_read@start
 36549  006892  C03D  F02B         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 36550  006896  0E00               	movlw	0
 36551  006898  6E2D               	movwf	flash_partial_read@length+1,c
 36552  00689A  0E20               	movlw	32
 36553  00689C  6E2C               	movwf	flash_partial_read@length,c
 36554  00689E  C037  F02E         	movff	fat_get_file_information@data,flash_partial_read@data
 36555  0068A2  C038  F02F         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 36556  0068A6  EC91  F03D         	call	_flash_partial_read	;wreg free
 36557                           
 36558                           ;fat16.c: 1003: return 0x00;
 36559  0068AA  0E00               	movlw	0
 36560  0068AC  0012               	return	
 36561  0068AE                     __end_of_fat_get_file_information:
 36562                           	opt stack 0
 36563                           tosu	equ	0xFFF
 36564                           tosh	equ	0xFFE
 36565                           tosl	equ	0xFFD
 36566                           pclath	equ	0xFFA
 36567                           tblptru	equ	0xFF8
 36568                           tblptrh	equ	0xFF7
 36569                           tblptrl	equ	0xFF6
 36570                           tablat	equ	0xFF5
 36571                           prodh	equ	0xFF4
 36572                           prodl	equ	0xFF3
 36573                           intcon	equ	0xFF2
 36574                           intcon2	equ	0xFF1
 36575                           intcon3	equ	0xFF0
 36576                           indf0	equ	0xFEF
 36577                           postinc0	equ	0xFEE
 36578                           fsr0h	equ	0xFEA
 36579                           fsr0l	equ	0xFE9
 36580                           wreg	equ	0xFE8
 36581                           indf1	equ	0xFE7
 36582                           postdec1	equ	0xFE5
 36583                           plusw1	equ	0xFE3
 36584                           fsr1h	equ	0xFE2
 36585                           fsr1l	equ	0xFE1
 36586                           indf2	equ	0xFDF
 36587                           postinc2	equ	0xFDE
 36588                           postdec2	equ	0xFDD
 36589                           plusw2	equ	0xFDB
 36590                           fsr2h	equ	0xFDA
 36591                           fsr2l	equ	0xFD9
 36592                           status	equ	0xFD8
 36593                           
 36594 ;; *************** function __root_is_available *****************
 36595 ;; Defined at:
 36596 ;;		line 59 in file "fat16.c"
 36597 ;; Parameters:    Size  Location     Type
 36598 ;;  file_number     1    wreg     unsigned char 
 36599 ;; Auto vars:     Size  Location     Type
 36600 ;;  file_number     1   52[COMRAM] unsigned char 
 36601 ;;  offset          2   50[COMRAM] unsigned int 
 36602 ;;  root_sector     2   48[COMRAM] unsigned int 
 36603 ;;  first_byte      1   53[COMRAM] unsigned char 
 36604 ;; Return value:  Size  Location     Type
 36605 ;;                  1    wreg      unsigned char 
 36606 ;; Registers used:
 36607 ;;		wreg, status,2, status,0, cstack
 36608 ;; Tracked objects:
 36609 ;;		On entry : 0/0
 36610 ;;		On exit  : 0/0
 36611 ;;		Unchanged: 0/0
 36612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36614 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36615 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36616 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36617 ;;Total ram usage:        7 bytes
 36618 ;; Hardware stack levels used:    1
 36619 ;; Hardware stack levels required when called:    5
 36620 ;; This function calls:
 36621 ;;		_flash_partial_read
 36622 ;; This function is called by:
 36623 ;;		__get_available_root_entry
 36624 ;;		_fat_delete_file
 36625 ;;		_fat_append_to_file
 36626 ;;		_fat_get_file_information
 36627 ;; This function uses a non-reentrant model
 36628 ;;
 36629                           
 36630                           	psect	text186
 36631  0067C4                     __ptext186:
 36632                           	opt stack 0
 36633  0067C4                     __root_is_available:
 36634                           	opt stack 21
 36635                           
 36636                           ;incstack = 0
 36637                           ;__root_is_available@file_number stored from wreg
 36638  0067C4  6E35               	movwf	__root_is_available@file_number,c
 36639                           
 36640                           ;fat16.c: 61: uint16_t root_sector;;fat16.c: 62: uint16_t offset;;fat16.c: 63: uint8_t f
      +                          irst_byte;;fat16.c: 67: if(file_number>=64)
 36641  0067C6  0E3F               	movlw	63
 36642  0067C8  6435               	cpfsgt	__root_is_available@file_number,c
 36643  0067CA  D002               	goto	l1910
 36644                           
 36645                           ;fat16.c: 68: {;fat16.c: 70: return 0;
 36646  0067CC  0E00               	movlw	0
 36647  0067CE  0012               	return	
 36648  0067D0                     l1910:
 36649                           
 36650                           ;fat16.c: 71: };fat16.c: 74: root_sector = (file_number >> 4) + 34;
 36651  0067D0  C035  F030         	movff	__root_is_available@file_number,??__root_is_available
 36652  0067D4  3A30               	swapf	??__root_is_available,f,c
 36653  0067D6  0E0F               	movlw	15
 36654  0067D8  1630               	andwf	??__root_is_available,f,c
 36655  0067DA  0E22               	movlw	34
 36656  0067DC  2430               	addwf	??__root_is_available,w,c
 36657  0067DE  6E31               	movwf	__root_is_available@root_sector,c
 36658  0067E0  6A32               	clrf	__root_is_available@root_sector+1,c
 36659  0067E2  0E00               	movlw	0
 36660  0067E4  2232               	addwfc	__root_is_available@root_sector+1,f,c
 36661                           
 36662                           ;fat16.c: 75: offset = (file_number & 0b1111);
 36663  0067E6  C035  F030         	movff	__root_is_available@file_number,??__root_is_available
 36664  0067EA  0E0F               	movlw	15
 36665  0067EC  1630               	andwf	??__root_is_available,f,c
 36666  0067EE  5030               	movf	??__root_is_available,w,c
 36667  0067F0  6E33               	movwf	__root_is_available@offset,c
 36668  0067F2  6A34               	clrf	__root_is_available@offset+1,c
 36669                           
 36670                           ;fat16.c: 76: offset <<= 5;
 36671  0067F4  0E05               	movlw	5
 36672  0067F6                     u7265:
 36673  0067F6  90D8               	bcf	status,0,c
 36674  0067F8  3633               	rlcf	__root_is_available@offset,f,c
 36675  0067FA  3634               	rlcf	__root_is_available@offset+1,f,c
 36676  0067FC  2EE8               	decfsz	wreg,f,c
 36677  0067FE  D7FB               	goto	u7265
 36678                           
 36679                           ;fat16.c: 79: flash_partial_read(root_sector, offset, 1, &first_byte);
 36680  006800  C031  F028         	movff	__root_is_available@root_sector,flash_partial_read@page
 36681  006804  C032  F029         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 36682  006808  C033  F02A         	movff	__root_is_available@offset,flash_partial_read@start
 36683  00680C  C034  F02B         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 36684  006810  0E00               	movlw	0
 36685  006812  6E2D               	movwf	flash_partial_read@length+1,c
 36686  006814  0E01               	movlw	1
 36687  006816  6E2C               	movwf	flash_partial_read@length,c
 36688  006818  0E36               	movlw	low __root_is_available@first_byte
 36689  00681A  6E2E               	movwf	flash_partial_read@data,c
 36690  00681C  0E00               	movlw	high __root_is_available@first_byte
 36691  00681E  6E2F               	movwf	flash_partial_read@data+1,c
 36692  006820  EC91  F03D         	call	_flash_partial_read	;wreg free
 36693                           
 36694                           ;fat16.c: 82: if((first_byte==0x00) || (first_byte==0xE5))
 36695  006824  5036               	movf	__root_is_available@first_byte,w,c
 36696  006826  B4D8               	btfsc	status,2,c
 36697  006828  D004               	goto	u7280
 36698  00682A  0EE5               	movlw	229
 36699  00682C  1836               	xorwf	__root_is_available@first_byte,w,c
 36700  00682E  A4D8               	btfss	status,2,c
 36701  006830  D002               	goto	l1912
 36702  006832                     u7280:
 36703                           
 36704                           ;fat16.c: 83: {;fat16.c: 85: return 1;
 36705  006832  0E01               	movlw	1
 36706                           
 36707                           ;fat16.c: 86: }
 36708  006834  0012               	return	
 36709  006836                     l1912:
 36710                           
 36711                           ;fat16.c: 87: else;fat16.c: 88: {;fat16.c: 90: return 0;
 36712  006836  0E00               	movlw	0
 36713  006838  0012               	return	
 36714  00683A                     __end_of__root_is_available:
 36715                           	opt stack 0
 36716                           tosu	equ	0xFFF
 36717                           tosh	equ	0xFFE
 36718                           tosl	equ	0xFFD
 36719                           pclath	equ	0xFFA
 36720                           tblptru	equ	0xFF8
 36721                           tblptrh	equ	0xFF7
 36722                           tblptrl	equ	0xFF6
 36723                           tablat	equ	0xFF5
 36724                           prodh	equ	0xFF4
 36725                           prodl	equ	0xFF3
 36726                           intcon	equ	0xFF2
 36727                           intcon2	equ	0xFF1
 36728                           intcon3	equ	0xFF0
 36729                           indf0	equ	0xFEF
 36730                           postinc0	equ	0xFEE
 36731                           fsr0h	equ	0xFEA
 36732                           fsr0l	equ	0xFE9
 36733                           wreg	equ	0xFE8
 36734                           indf1	equ	0xFE7
 36735                           postdec1	equ	0xFE5
 36736                           plusw1	equ	0xFE3
 36737                           fsr1h	equ	0xFE2
 36738                           fsr1l	equ	0xFE1
 36739                           indf2	equ	0xFDF
 36740                           postinc2	equ	0xFDE
 36741                           postdec2	equ	0xFDD
 36742                           plusw2	equ	0xFDB
 36743                           fsr2h	equ	0xFDA
 36744                           fsr2l	equ	0xFD9
 36745                           status	equ	0xFD8
 36746                           
 36747 ;; *************** function __write_root *****************
 36748 ;; Defined at:
 36749 ;;		line 182 in file "fat16.c"
 36750 ;; Parameters:    Size  Location     Type
 36751 ;;  slot            1    wreg     unsigned char 
 36752 ;;  data            2   40[COMRAM] PTR struct .
 36753 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 36754 ;; Auto vars:     Size  Location     Type
 36755 ;;  slot            1   47[COMRAM] unsigned char 
 36756 ;;  offset          2   45[COMRAM] unsigned int 
 36757 ;;  root_sector     2   43[COMRAM] unsigned int 
 36758 ;; Return value:  Size  Location     Type
 36759 ;;                  1    wreg      void 
 36760 ;; Registers used:
 36761 ;;		wreg, status,2, status,0, cstack
 36762 ;; Tracked objects:
 36763 ;;		On entry : 0/0
 36764 ;;		On exit  : 0/0
 36765 ;;		Unchanged: 0/0
 36766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36767 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36768 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36769 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36770 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36771 ;;Total ram usage:        8 bytes
 36772 ;; Hardware stack levels used:    1
 36773 ;; Hardware stack levels required when called:    5
 36774 ;; This function calls:
 36775 ;;		_flash_partial_write
 36776 ;; This function is called by:
 36777 ;;		_fat_create_file
 36778 ;;		_fat_append_to_file
 36779 ;;		_fat_rename_file
 36780 ;; This function uses a non-reentrant model
 36781 ;;
 36782                           
 36783                           	psect	text187
 36784  007108                     __ptext187:
 36785                           	opt stack 0
 36786  007108                     __write_root:
 36787                           	opt stack 21
 36788                           
 36789                           ;incstack = 0
 36790                           ;__write_root@slot stored from wreg
 36791  007108  6E30               	movwf	__write_root@slot,c
 36792                           
 36793                           ;fat16.c: 184: uint16_t root_sector;;fat16.c: 185: uint16_t offset;;fat16.c: 186: root_s
      +                          ector = (slot >> 4) + 34;
 36794  00710A  C030  F02B         	movff	__write_root@slot,??__write_root
 36795  00710E  3A2B               	swapf	??__write_root,f,c
 36796  007110  0E0F               	movlw	15
 36797  007112  162B               	andwf	??__write_root,f,c
 36798  007114  0E22               	movlw	34
 36799  007116  242B               	addwf	??__write_root,w,c
 36800  007118  6E2C               	movwf	__write_root@root_sector,c
 36801  00711A  6A2D               	clrf	__write_root@root_sector+1,c
 36802  00711C  0E00               	movlw	0
 36803  00711E  222D               	addwfc	__write_root@root_sector+1,f,c
 36804                           
 36805                           ;fat16.c: 187: offset = (slot & 0b1111);
 36806  007120  C030  F02B         	movff	__write_root@slot,??__write_root
 36807  007124  0E0F               	movlw	15
 36808  007126  162B               	andwf	??__write_root,f,c
 36809  007128  502B               	movf	??__write_root,w,c
 36810  00712A  6E2E               	movwf	__write_root@offset,c
 36811  00712C  6A2F               	clrf	__write_root@offset+1,c
 36812                           
 36813                           ;fat16.c: 188: offset <<= 5;
 36814  00712E  0E05               	movlw	5
 36815  007130                     u8285:
 36816  007130  90D8               	bcf	status,0,c
 36817  007132  362E               	rlcf	__write_root@offset,f,c
 36818  007134  362F               	rlcf	__write_root@offset+1,f,c
 36819  007136  2EE8               	decfsz	wreg,f,c
 36820  007138  D7FB               	goto	u8285
 36821                           
 36822                           ;fat16.c: 189: flash_partial_write(root_sector, offset, 32, data);
 36823  00713A  C02C  F020         	movff	__write_root@root_sector,flash_partial_write@page
 36824  00713E  C02D  F021         	movff	__write_root@root_sector+1,flash_partial_write@page+1
 36825  007142  C02E  F022         	movff	__write_root@offset,flash_partial_write@start
 36826  007146  C02F  F023         	movff	__write_root@offset+1,flash_partial_write@start+1
 36827  00714A  0E00               	movlw	0
 36828  00714C  6E25               	movwf	flash_partial_write@length+1,c
 36829  00714E  0E20               	movlw	32
 36830  007150  6E24               	movwf	flash_partial_write@length,c
 36831  007152  C029  F026         	movff	__write_root@data,flash_partial_write@data
 36832  007156  C02A  F027         	movff	__write_root@data+1,flash_partial_write@data+1
 36833  00715A  EC02  F035         	call	_flash_partial_write	;wreg free
 36834  00715E  0012               	return		;funcret
 36835  007160                     __end_of__write_root:
 36836                           	opt stack 0
 36837                           tosu	equ	0xFFF
 36838                           tosh	equ	0xFFE
 36839                           tosl	equ	0xFFD
 36840                           pclath	equ	0xFFA
 36841                           tblptru	equ	0xFF8
 36842                           tblptrh	equ	0xFF7
 36843                           tblptrl	equ	0xFF6
 36844                           tablat	equ	0xFF5
 36845                           prodh	equ	0xFF4
 36846                           prodl	equ	0xFF3
 36847                           intcon	equ	0xFF2
 36848                           intcon2	equ	0xFF1
 36849                           intcon3	equ	0xFF0
 36850                           indf0	equ	0xFEF
 36851                           postinc0	equ	0xFEE
 36852                           fsr0h	equ	0xFEA
 36853                           fsr0l	equ	0xFE9
 36854                           wreg	equ	0xFE8
 36855                           indf1	equ	0xFE7
 36856                           postdec1	equ	0xFE5
 36857                           plusw1	equ	0xFE3
 36858                           fsr1h	equ	0xFE2
 36859                           fsr1l	equ	0xFE1
 36860                           indf2	equ	0xFDF
 36861                           postinc2	equ	0xFDE
 36862                           postdec2	equ	0xFDD
 36863                           plusw2	equ	0xFDB
 36864                           fsr2h	equ	0xFDA
 36865                           fsr2l	equ	0xFD9
 36866                           status	equ	0xFD8
 36867                           
 36868 ;; *************** function __write_fat *****************
 36869 ;; Defined at:
 36870 ;;		line 158 in file "fat16.c"
 36871 ;; Parameters:    Size  Location     Type
 36872 ;;  cluster         2   40[COMRAM] unsigned int 
 36873 ;;  value           2   42[COMRAM] unsigned int 
 36874 ;; Auto vars:     Size  Location     Type
 36875 ;;  offset          2   46[COMRAM] unsigned int 
 36876 ;;  fat_sector      2   44[COMRAM] unsigned int 
 36877 ;; Return value:  Size  Location     Type
 36878 ;;                  1    wreg      void 
 36879 ;; Registers used:
 36880 ;;		wreg, status,2, status,0, cstack
 36881 ;; Tracked objects:
 36882 ;;		On entry : 0/0
 36883 ;;		On exit  : 0/0
 36884 ;;		Unchanged: 0/0
 36885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36886 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36887 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36889 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36890 ;;Total ram usage:        8 bytes
 36891 ;; Hardware stack levels used:    1
 36892 ;; Hardware stack levels required when called:    5
 36893 ;; This function calls:
 36894 ;;		_flash_partial_write
 36895 ;; This function is called by:
 36896 ;;		_fat_create_file
 36897 ;;		_fat_delete_file
 36898 ;;		_fat_append_to_file
 36899 ;; This function uses a non-reentrant model
 36900 ;;
 36901                           
 36902                           	psect	text188
 36903  007826                     __ptext188:
 36904                           	opt stack 0
 36905  007826                     __write_fat:
 36906                           	opt stack 21
 36907                           
 36908                           ;fat16.c: 160: uint16_t fat_sector;;fat16.c: 161: uint16_t offset;;fat16.c: 162: fat_sec
      +                          tor = cluster>>8;
 36909                           
 36910                           ;incstack = 0
 36911  007826  502A               	movf	__write_fat@cluster+1,w,c
 36912  007828  6E2D               	movwf	__write_fat@fat_sector,c
 36913  00782A  6A2E               	clrf	__write_fat@fat_sector+1,c
 36914                           
 36915                           ;fat16.c: 163: fat_sector += 2;
 36916  00782C  0E02               	movlw	2
 36917  00782E  262D               	addwf	__write_fat@fat_sector,f,c
 36918  007830  0E00               	movlw	0
 36919  007832  222E               	addwfc	__write_fat@fat_sector+1,f,c
 36920                           
 36921                           ;fat16.c: 164: offset = cluster & 0xFF;
 36922  007834  5029               	movf	__write_fat@cluster,w,c
 36923  007836  6E2F               	movwf	__write_fat@offset,c
 36924  007838  6A30               	clrf	__write_fat@offset+1,c
 36925                           
 36926                           ;fat16.c: 165: offset <<= 1;
 36927  00783A  90D8               	bcf	status,0,c
 36928  00783C  362F               	rlcf	__write_fat@offset,f,c
 36929  00783E  3630               	rlcf	__write_fat@offset+1,f,c
 36930                           
 36931                           ;fat16.c: 166: flash_partial_write(fat_sector, offset, 2, &value);
 36932  007840  C02D  F020         	movff	__write_fat@fat_sector,flash_partial_write@page
 36933  007844  C02E  F021         	movff	__write_fat@fat_sector+1,flash_partial_write@page+1
 36934  007848  C02F  F022         	movff	__write_fat@offset,flash_partial_write@start
 36935  00784C  C030  F023         	movff	__write_fat@offset+1,flash_partial_write@start+1
 36936  007850  0E00               	movlw	0
 36937  007852  6E25               	movwf	flash_partial_write@length+1,c
 36938  007854  0E02               	movlw	2
 36939  007856  6E24               	movwf	flash_partial_write@length,c
 36940  007858  0E2B               	movlw	low __write_fat@value
 36941  00785A  6E26               	movwf	flash_partial_write@data,c
 36942  00785C  0E00               	movlw	high __write_fat@value
 36943  00785E  6E27               	movwf	flash_partial_write@data+1,c
 36944  007860  EC02  F035         	call	_flash_partial_write	;wreg free
 36945  007864  0012               	return		;funcret
 36946  007866                     __end_of__write_fat:
 36947                           	opt stack 0
 36948                           tosu	equ	0xFFF
 36949                           tosh	equ	0xFFE
 36950                           tosl	equ	0xFFD
 36951                           pclath	equ	0xFFA
 36952                           tblptru	equ	0xFF8
 36953                           tblptrh	equ	0xFF7
 36954                           tblptrl	equ	0xFF6
 36955                           tablat	equ	0xFF5
 36956                           prodh	equ	0xFF4
 36957                           prodl	equ	0xFF3
 36958                           intcon	equ	0xFF2
 36959                           intcon2	equ	0xFF1
 36960                           intcon3	equ	0xFF0
 36961                           indf0	equ	0xFEF
 36962                           postinc0	equ	0xFEE
 36963                           fsr0h	equ	0xFEA
 36964                           fsr0l	equ	0xFE9
 36965                           wreg	equ	0xFE8
 36966                           indf1	equ	0xFE7
 36967                           postdec1	equ	0xFE5
 36968                           plusw1	equ	0xFE3
 36969                           fsr1h	equ	0xFE2
 36970                           fsr1l	equ	0xFE1
 36971                           indf2	equ	0xFDF
 36972                           postinc2	equ	0xFDE
 36973                           postdec2	equ	0xFDD
 36974                           plusw2	equ	0xFDB
 36975                           fsr2h	equ	0xFDA
 36976                           fsr2l	equ	0xFD9
 36977                           status	equ	0xFD8
 36978                           
 36979 ;; *************** function _flash_partial_write *****************
 36980 ;; Defined at:
 36981 ;;		line 471 in file "flash.c"
 36982 ;; Parameters:    Size  Location     Type
 36983 ;;  page            2   31[COMRAM] unsigned int 
 36984 ;;  start           2   33[COMRAM] unsigned int 
 36985 ;;  length          2   35[COMRAM] unsigned int 
 36986 ;;  data            2   37[COMRAM] PTR unsigned char 
 36987 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), _write_file_size@new_file
      +_size(4), 
 36988 ;;		 -> _delete_root@deleted_value(1), _write_fat@value(2), RAM(3759), 
 36989 ;; Auto vars:     Size  Location     Type
 36990 ;;  match           1   39[COMRAM] enum E6894
 36991 ;; Return value:  Size  Location     Type
 36992 ;;                  1    wreg      void 
 36993 ;; Registers used:
 36994 ;;		wreg, status,2, status,0, cstack
 36995 ;; Tracked objects:
 36996 ;;		On entry : 0/0
 36997 ;;		On exit  : 0/0
 36998 ;;		Unchanged: 0/0
 36999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37000 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37001 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37003 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37004 ;;Total ram usage:        9 bytes
 37005 ;; Hardware stack levels used:    1
 37006 ;; Hardware stack levels required when called:    4
 37007 ;; This function calls:
 37008 ;;		__flash_compare_page_to_buffer
 37009 ;;		__flash_copy_page_to_buffer
 37010 ;;		__flash_write_page_from_buffer
 37011 ;;		__flash_write_to_buffer
 37012 ;;		_flash_is_busy
 37013 ;;		_spi_set_configuration
 37014 ;; This function is called by:
 37015 ;;		__write_fat
 37016 ;;		__write_root
 37017 ;;		__delete_root
 37018 ;;		_fat_append_to_file
 37019 ;;		__write_file_size
 37020 ;; This function uses a non-reentrant model
 37021 ;;
 37022                           
 37023                           	psect	text189
 37024  006A04                     __ptext189:
 37025                           	opt stack 0
 37026  006A04                     _flash_partial_write:
 37027                           	opt stack 21
 37028                           
 37029                           ;flash.c: 473: flashMatchResult_t match;;flash.c: 476: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 37030                           
 37031                           ;incstack = 0
 37032  006A04  0E00               	movlw	0
 37033  006A06  EC2C  F024         	call	_spi_set_configuration
 37034  006A0A  EC9F  F03F         	call	_flash_is_busy	;wreg free
 37035  006A0E  0900               	iorlw	0
 37036  006A10  A4D8               	btfss	status,2,c
 37037  006A12  D7FB               	goto	l1842
 37038                           
 37039                           ;flash.c: 482: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 37040  006A14  C020  F014         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 37041  006A18  C021  F015         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 37042  006A1C  0E00               	movlw	0
 37043  006A1E  6E16               	movwf	__flash_copy_page_to_buffer@buffer,c
 37044  006A20  ECDC  F038         	call	__flash_copy_page_to_buffer	;wreg free
 37045                           
 37046                           ;flash.c: 485: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 37047  006A24  C022  F014         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 37048  006A28  C023  F015         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 37049  006A2C  C026  F016         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 37050  006A30  C027  F017         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 37051  006A34  C024  F018         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 37052  006A38  C025  F019         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 37053  006A3C  0E00               	movlw	0
 37054  006A3E  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 37055  006A40  ECDA  F03A         	call	__flash_write_to_buffer	;wreg free
 37056                           
 37057                           ;flash.c: 488: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 37058  006A44  C020  F014         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 37059  006A48  C021  F015         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 37060  006A4C  0E00               	movlw	0
 37061  006A4E  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 37062  006A50  EC6A  F033         	call	__flash_compare_page_to_buffer	;wreg free
 37063  006A54  6E28               	movwf	flash_partial_write@match,c
 37064                           
 37065                           ;flash.c: 491: if(match==DATA_DOES_NOT_MATCH)
 37066  006A56  0428               	decf	flash_partial_write@match,w,c
 37067  006A58  A4D8               	btfss	status,2,c
 37068  006A5A  D008               	goto	l1844
 37069                           
 37070                           ;flash.c: 492: {;flash.c: 493: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 37071  006A5C  C020  F014         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 37072  006A60  C021  F015         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 37073  006A64  0E00               	movlw	0
 37074  006A66  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 37075  006A68  ECB0  F038         	call	__flash_write_page_from_buffer	;wreg free
 37076  006A6C                     l1844:
 37077                           
 37078                           ;flash.c: 494: };flash.c: 497: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 37079  006A6C  0E01               	movlw	1
 37080  006A6E  EC2C  F024         	call	_spi_set_configuration
 37081  006A72  0012               	return		;funcret
 37082  006A74                     __end_of_flash_partial_write:
 37083                           	opt stack 0
 37084                           tosu	equ	0xFFF
 37085                           tosh	equ	0xFFE
 37086                           tosl	equ	0xFFD
 37087                           pclath	equ	0xFFA
 37088                           tblptru	equ	0xFF8
 37089                           tblptrh	equ	0xFF7
 37090                           tblptrl	equ	0xFF6
 37091                           tablat	equ	0xFF5
 37092                           prodh	equ	0xFF4
 37093                           prodl	equ	0xFF3
 37094                           intcon	equ	0xFF2
 37095                           intcon2	equ	0xFF1
 37096                           intcon3	equ	0xFF0
 37097                           indf0	equ	0xFEF
 37098                           postinc0	equ	0xFEE
 37099                           fsr0h	equ	0xFEA
 37100                           fsr0l	equ	0xFE9
 37101                           wreg	equ	0xFE8
 37102                           indf1	equ	0xFE7
 37103                           postdec1	equ	0xFE5
 37104                           plusw1	equ	0xFE3
 37105                           fsr1h	equ	0xFE2
 37106                           fsr1l	equ	0xFE1
 37107                           indf2	equ	0xFDF
 37108                           postinc2	equ	0xFDE
 37109                           postdec2	equ	0xFDD
 37110                           plusw2	equ	0xFDB
 37111                           fsr2h	equ	0xFDA
 37112                           fsr2l	equ	0xFD9
 37113                           status	equ	0xFD8
 37114                           
 37115 ;; *************** function _flash_is_busy *****************
 37116 ;; Defined at:
 37117 ;;		line 354 in file "flash.c"
 37118 ;; Parameters:    Size  Location     Type
 37119 ;;		None
 37120 ;; Auto vars:     Size  Location     Type
 37121 ;;  result          1   19[COMRAM] unsigned char 
 37122 ;; Return value:  Size  Location     Type
 37123 ;;                  1    wreg      unsigned char 
 37124 ;; Registers used:
 37125 ;;		wreg, status,2, status,0, cstack
 37126 ;; Tracked objects:
 37127 ;;		On entry : 0/0
 37128 ;;		On exit  : 0/0
 37129 ;;		Unchanged: 0/0
 37130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37132 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37134 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37135 ;;Total ram usage:        1 bytes
 37136 ;; Hardware stack levels used:    1
 37137 ;; Hardware stack levels required when called:    3
 37138 ;; This function calls:
 37139 ;;		__flash_is_busy
 37140 ;;		_spi_set_configuration
 37141 ;; This function is called by:
 37142 ;;		_flash_partial_write
 37143 ;;		_api_prepare
 37144 ;;		__fill_buffer_get_status
 37145 ;; This function uses a non-reentrant model
 37146 ;;
 37147                           
 37148                           	psect	text190
 37149  007F3E                     __ptext190:
 37150                           	opt stack 0
 37151  007F3E                     _flash_is_busy:
 37152                           	opt stack 26
 37153                           
 37154                           ;flash.c: 356: uint8_t result;;flash.c: 359: spi_set_configuration(SPI_CONFIGURATION_INT
      +                          ERNAL);
 37155                           
 37156                           ;incstack = 0
 37157  007F3E  0E00               	movlw	0
 37158  007F40  EC2C  F024         	call	_spi_set_configuration
 37159                           
 37160                           ;flash.c: 362: result = _flash_is_busy();
 37161  007F44  EC16  F03F         	call	__flash_is_busy	;wreg free
 37162  007F48  6E14               	movwf	flash_is_busy@result,c
 37163                           
 37164                           ;flash.c: 365: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 37165  007F4A  0E01               	movlw	1
 37166  007F4C  EC2C  F024         	call	_spi_set_configuration
 37167                           
 37168                           ;flash.c: 368: return result;
 37169  007F50  5014               	movf	flash_is_busy@result,w,c
 37170  007F52  0012               	return	
 37171  007F54                     __end_of_flash_is_busy:
 37172                           	opt stack 0
 37173                           tosu	equ	0xFFF
 37174                           tosh	equ	0xFFE
 37175                           tosl	equ	0xFFD
 37176                           pclath	equ	0xFFA
 37177                           tblptru	equ	0xFF8
 37178                           tblptrh	equ	0xFF7
 37179                           tblptrl	equ	0xFF6
 37180                           tablat	equ	0xFF5
 37181                           prodh	equ	0xFF4
 37182                           prodl	equ	0xFF3
 37183                           intcon	equ	0xFF2
 37184                           intcon2	equ	0xFF1
 37185                           intcon3	equ	0xFF0
 37186                           indf0	equ	0xFEF
 37187                           postinc0	equ	0xFEE
 37188                           fsr0h	equ	0xFEA
 37189                           fsr0l	equ	0xFE9
 37190                           wreg	equ	0xFE8
 37191                           indf1	equ	0xFE7
 37192                           postdec1	equ	0xFE5
 37193                           plusw1	equ	0xFE3
 37194                           fsr1h	equ	0xFE2
 37195                           fsr1l	equ	0xFE1
 37196                           indf2	equ	0xFDF
 37197                           postinc2	equ	0xFDE
 37198                           postdec2	equ	0xFDD
 37199                           plusw2	equ	0xFDB
 37200                           fsr2h	equ	0xFDA
 37201                           fsr2l	equ	0xFD9
 37202                           status	equ	0xFD8
 37203                           
 37204 ;; *************** function __flash_write_to_buffer *****************
 37205 ;; Defined at:
 37206 ;;		line 232 in file "flash.c"
 37207 ;; Parameters:    Size  Location     Type
 37208 ;;  start           2   19[COMRAM] unsigned int 
 37209 ;;  data            2   21[COMRAM] PTR unsigned char 
 37210 ;;		 -> buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 37211 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), msd_buffer(512), 
 37212 ;;		 -> RAM(3759), 
 37213 ;;  data_length     2   23[COMRAM] unsigned int 
 37214 ;;  buffer          1   25[COMRAM] enum E6890
 37215 ;; Auto vars:     Size  Location     Type
 37216 ;;  command         4   26[COMRAM] unsigned char [4]
 37217 ;; Return value:  Size  Location     Type
 37218 ;;                  1    wreg      void 
 37219 ;; Registers used:
 37220 ;;		wreg, status,2, status,0, cstack
 37221 ;; Tracked objects:
 37222 ;;		On entry : 0/0
 37223 ;;		On exit  : 0/0
 37224 ;;		Unchanged: 0/0
 37225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37226 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37227 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37229 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37230 ;;Total ram usage:       11 bytes
 37231 ;; Hardware stack levels used:    1
 37232 ;; Hardware stack levels required when called:    3
 37233 ;; This function calls:
 37234 ;;		__flash_is_busy
 37235 ;;		_spi_tx_tx
 37236 ;; This function is called by:
 37237 ;;		_flash_page_write
 37238 ;;		_flash_partial_write
 37239 ;; This function uses a non-reentrant model
 37240 ;;
 37241                           
 37242                           	psect	text191
 37243  0075B4                     __ptext191:
 37244                           	opt stack 0
 37245  0075B4                     __flash_write_to_buffer:
 37246                           	opt stack 23
 37247                           
 37248                           ;flash.c: 234: uint8_t command[4];;flash.c: 237: while(_flash_is_busy());
 37249                           
 37250                           ;incstack = 0
 37251  0075B4  EC16  F03F         	call	__flash_is_busy	;wreg free
 37252  0075B8  0900               	iorlw	0
 37253  0075BA  A4D8               	btfss	status,2,c
 37254  0075BC  D7FB               	goto	__flash_write_to_buffer
 37255                           
 37256                           ;flash.c: 240: if(buffer==FLASH_BUFFER_1)
 37257  0075BE  501A               	movf	__flash_write_to_buffer@buffer,w,c
 37258  0075C0  A4D8               	btfss	status,2,c
 37259  0075C2  D002               	goto	l1783
 37260                           
 37261                           ;flash.c: 241: command[0] = 0x84;
 37262  0075C4  0E84               	movlw	132
 37263  0075C6  6E1B               	movwf	__flash_write_to_buffer@command,c
 37264  0075C8                     l1783:
 37265                           
 37266                           ;flash.c: 242: if(buffer==FLASH_BUFFER_2)
 37267  0075C8  041A               	decf	__flash_write_to_buffer@buffer,w,c
 37268  0075CA  A4D8               	btfss	status,2,c
 37269  0075CC  D002               	goto	l1784
 37270                           
 37271                           ;flash.c: 243: command[0] = 0x87;
 37272  0075CE  0E87               	movlw	135
 37273  0075D0  6E1B               	movwf	__flash_write_to_buffer@command,c
 37274  0075D2                     l1784:
 37275                           
 37276                           ;flash.c: 245: command[1] = 0x00;
 37277  0075D2  0E00               	movlw	0
 37278  0075D4  6E1C               	movwf	__flash_write_to_buffer@command+1,c
 37279                           
 37280                           ;flash.c: 246: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 37281  0075D6  5015               	movf	__flash_write_to_buffer@start+1,w,c
 37282  0075D8  6E1D               	movwf	__flash_write_to_buffer@command+2,c
 37283                           
 37284                           ;flash.c: 247: command[3] = ((unsigned char)((start)&0xFF));
 37285  0075DA  C014  F01E         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 37286                           
 37287                           ;flash.c: 250: spi_tx_tx(command, 4, data, data_length);
 37288  0075DE  0E1B               	movlw	low __flash_write_to_buffer@command
 37289  0075E0  6E01               	movwf	spi_tx_tx@command,c
 37290  0075E2  0E00               	movlw	high __flash_write_to_buffer@command
 37291  0075E4  6E02               	movwf	spi_tx_tx@command+1,c
 37292  0075E6  0E00               	movlw	0
 37293  0075E8  6E04               	movwf	spi_tx_tx@command_length+1,c
 37294  0075EA  0E04               	movlw	4
 37295  0075EC  6E03               	movwf	spi_tx_tx@command_length,c
 37296  0075EE  C016  F005         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 37297  0075F2  C017  F006         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 37298  0075F6  C018  F007         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 37299  0075FA  C019  F008         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 37300  0075FE  ECE3  F031         	call	_spi_tx_tx	;wreg free
 37301  007602  0012               	return		;funcret
 37302  007604                     __end_of__flash_write_to_buffer:
 37303                           	opt stack 0
 37304                           tosu	equ	0xFFF
 37305                           tosh	equ	0xFFE
 37306                           tosl	equ	0xFFD
 37307                           pclath	equ	0xFFA
 37308                           tblptru	equ	0xFF8
 37309                           tblptrh	equ	0xFF7
 37310                           tblptrl	equ	0xFF6
 37311                           tablat	equ	0xFF5
 37312                           prodh	equ	0xFF4
 37313                           prodl	equ	0xFF3
 37314                           intcon	equ	0xFF2
 37315                           intcon2	equ	0xFF1
 37316                           intcon3	equ	0xFF0
 37317                           indf0	equ	0xFEF
 37318                           postinc0	equ	0xFEE
 37319                           fsr0h	equ	0xFEA
 37320                           fsr0l	equ	0xFE9
 37321                           wreg	equ	0xFE8
 37322                           indf1	equ	0xFE7
 37323                           postdec1	equ	0xFE5
 37324                           plusw1	equ	0xFE3
 37325                           fsr1h	equ	0xFE2
 37326                           fsr1l	equ	0xFE1
 37327                           indf2	equ	0xFDF
 37328                           postinc2	equ	0xFDE
 37329                           postdec2	equ	0xFDD
 37330                           plusw2	equ	0xFDB
 37331                           fsr2h	equ	0xFDA
 37332                           fsr2l	equ	0xFD9
 37333                           status	equ	0xFD8
 37334                           
 37335 ;; *************** function _spi_tx_tx *****************
 37336 ;; Defined at:
 37337 ;;		line 379 in file "spi.c"
 37338 ;; Parameters:    Size  Location     Type
 37339 ;;  command         2    0[COMRAM] PTR unsigned char 
 37340 ;;		 -> _flash_write_to_buffer@command(4), 
 37341 ;;  command_leng    2    2[COMRAM] unsigned int 
 37342 ;;  data            2    4[COMRAM] PTR unsigned char 
 37343 ;;		 -> buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 37344 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), msd_buffer(512), 
 37345 ;;		 -> RAM(3759), 
 37346 ;;  data_length     2    6[COMRAM] unsigned int 
 37347 ;; Auto vars:     Size  Location     Type
 37348 ;;		None
 37349 ;; Return value:  Size  Location     Type
 37350 ;;                  1    wreg      void 
 37351 ;; Registers used:
 37352 ;;		wreg, status,2, status,0
 37353 ;; Tracked objects:
 37354 ;;		On entry : 0/0
 37355 ;;		On exit  : 0/0
 37356 ;;		Unchanged: 0/0
 37357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37358 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37360 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37361 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37362 ;;Total ram usage:       12 bytes
 37363 ;; Hardware stack levels used:    1
 37364 ;; This function calls:
 37365 ;;		Nothing
 37366 ;; This function is called by:
 37367 ;;		__flash_write_to_buffer
 37368 ;; This function uses a non-reentrant model
 37369 ;;
 37370                           
 37371                           	psect	text192
 37372  0063C6                     __ptext192:
 37373                           	opt stack 0
 37374  0063C6                     _spi_tx_tx:
 37375                           	opt stack 25
 37376                           
 37377                           ;spi.c: 382: DMACON1bits.SSCON1 = 0;
 37378                           
 37379                           ;incstack = 0
 37380  0063C6  9E88               	bcf	3976,7,c	;volatile
 37381                           
 37382                           ;spi.c: 383: DMACON1bits.SSCON0 = 0;
 37383  0063C8  9C88               	bcf	3976,6,c	;volatile
 37384                           
 37385                           ;spi.c: 385: DMACON1bits.TXINC = 1;
 37386  0063CA  8A88               	bsf	3976,5,c	;volatile
 37387                           
 37388                           ;spi.c: 387: DMACON1bits.RXINC = 0;
 37389  0063CC  9888               	bcf	3976,4,c	;volatile
 37390                           
 37391                           ;spi.c: 389: DMACON1bits.DUPLEX1 = 0;
 37392  0063CE  9688               	bcf	3976,3,c	;volatile
 37393                           
 37394                           ;spi.c: 390: DMACON1bits.DUPLEX0 = 1;
 37395  0063D0  8488               	bsf	3976,2,c	;volatile
 37396                           
 37397                           ;spi.c: 392: DMACON1bits.DLYINTEN = 0;
 37398  0063D2  9288               	bcf	3976,1,c	;volatile
 37399                           
 37400                           ;spi.c: 394: DMACON2bits.DLYCYC = 0b0000;
 37401  0063D4  9886               	bcf	3974,4,c	;volatile
 37402  0063D6  9A86               	bcf	3974,5,c	;volatile
 37403  0063D8  9C86               	bcf	3974,6,c	;volatile
 37404  0063DA  9E86               	bcf	3974,7,c	;volatile
 37405                           
 37406                           ;spi.c: 396: DMACON2bits.INTLVL = 0b0000;
 37407  0063DC  9086               	bcf	3974,0,c	;volatile
 37408  0063DE  9286               	bcf	3974,1,c	;volatile
 37409  0063E0  9486               	bcf	3974,2,c	;volatile
 37410  0063E2  9686               	bcf	3974,3,c	;volatile
 37411                           
 37412                           ;spi.c: 399: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 37413  0063E4  5002               	movf	spi_tx_tx@command+1,w,c
 37414  0063E6  6E6A               	movwf	3946,c	;volatile
 37415                           
 37416                           ;spi.c: 400: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 37417  0063E8  C001  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 37418                           
 37419                           ;spi.c: 403: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 37420  0063EC  0EFF               	movlw	255
 37421  0063EE  6E09               	movwf	??_spi_tx_tx& (0+255),c
 37422  0063F0  0EFF               	movlw	255
 37423  0063F2  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 37424  0063F4  C003  F00B         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 37425  0063F8  C004  F00C         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 37426  0063FC  5009               	movf	??_spi_tx_tx,w,c
 37427  0063FE  260B               	addwf	??_spi_tx_tx+2,f,c
 37428  006400  500A               	movf	??_spi_tx_tx+1,w,c
 37429  006402  220C               	addwfc	??_spi_tx_tx+3,f,c
 37430  006404  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 37431  006408  6A0C               	clrf	??_spi_tx_tx+3,c
 37432  00640A  500B               	movf	??_spi_tx_tx+2,w,c
 37433  00640C  6E66               	movwf	3942,c	;volatile
 37434                           
 37435                           ;spi.c: 404: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 37436  00640E  0403               	decf	spi_tx_tx@command_length,w,c
 37437  006410  6E67               	movwf	3943,c	;volatile
 37438                           
 37439                           ;spi.c: 407: LATDbits.LD7 = 0;
 37440  006412  9E8C               	bcf	3980,7,c	;volatile
 37441                           
 37442                           ;spi.c: 410: DMACON1bits.DMAEN = 1;
 37443  006414  8088               	bsf	3976,0,c	;volatile
 37444  006416  B088               	btfsc	3976,0,c	;volatile
 37445  006418  D7FE               	goto	l2812
 37446                           
 37447                           ;spi.c: 414: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37448  00641A  5006               	movf	spi_tx_tx@data+1,w,c
 37449  00641C  6E6A               	movwf	3946,c	;volatile
 37450                           
 37451                           ;spi.c: 415: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37452  00641E  C005  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 37453                           
 37454                           ;spi.c: 418: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 37455  006422  0EFF               	movlw	255
 37456  006424  6E09               	movwf	??_spi_tx_tx& (0+255),c
 37457  006426  0EFF               	movlw	255
 37458  006428  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 37459  00642A  C007  F00B         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 37460  00642E  C008  F00C         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 37461  006432  5009               	movf	??_spi_tx_tx,w,c
 37462  006434  260B               	addwf	??_spi_tx_tx+2,f,c
 37463  006436  500A               	movf	??_spi_tx_tx+1,w,c
 37464  006438  220C               	addwfc	??_spi_tx_tx+3,f,c
 37465  00643A  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 37466  00643E  6A0C               	clrf	??_spi_tx_tx+3,c
 37467  006440  500B               	movf	??_spi_tx_tx+2,w,c
 37468  006442  6E66               	movwf	3942,c	;volatile
 37469                           
 37470                           ;spi.c: 419: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 37471  006444  0407               	decf	spi_tx_tx@data_length,w,c
 37472  006446  6E67               	movwf	3943,c	;volatile
 37473                           
 37474                           ;spi.c: 422: DMACON1bits.DMAEN = 1;
 37475  006448  8088               	bsf	3976,0,c	;volatile
 37476  00644A  B088               	btfsc	3976,0,c	;volatile
 37477  00644C  D7FE               	goto	l2815
 37478                           
 37479                           ;spi.c: 426: LATDbits.LD7 = 1;
 37480  00644E  8E8C               	bsf	3980,7,c	;volatile
 37481  006450  0012               	return		;funcret
 37482  006452                     __end_of_spi_tx_tx:
 37483                           	opt stack 0
 37484                           tosu	equ	0xFFF
 37485                           tosh	equ	0xFFE
 37486                           tosl	equ	0xFFD
 37487                           pclath	equ	0xFFA
 37488                           tblptru	equ	0xFF8
 37489                           tblptrh	equ	0xFF7
 37490                           tblptrl	equ	0xFF6
 37491                           tablat	equ	0xFF5
 37492                           prodh	equ	0xFF4
 37493                           prodl	equ	0xFF3
 37494                           intcon	equ	0xFF2
 37495                           intcon2	equ	0xFF1
 37496                           intcon3	equ	0xFF0
 37497                           indf0	equ	0xFEF
 37498                           postinc0	equ	0xFEE
 37499                           fsr0h	equ	0xFEA
 37500                           fsr0l	equ	0xFE9
 37501                           wreg	equ	0xFE8
 37502                           indf1	equ	0xFE7
 37503                           postdec1	equ	0xFE5
 37504                           plusw1	equ	0xFE3
 37505                           fsr1h	equ	0xFE2
 37506                           fsr1l	equ	0xFE1
 37507                           indf2	equ	0xFDF
 37508                           postinc2	equ	0xFDE
 37509                           postdec2	equ	0xFDD
 37510                           plusw2	equ	0xFDB
 37511                           fsr2h	equ	0xFDA
 37512                           fsr2l	equ	0xFD9
 37513                           status	equ	0xFD8
 37514                           
 37515 ;; *************** function __flash_write_page_from_buffer *****************
 37516 ;; Defined at:
 37517 ;;		line 254 in file "flash.c"
 37518 ;; Parameters:    Size  Location     Type
 37519 ;;  page            2   19[COMRAM] unsigned int 
 37520 ;;  buffer          1   21[COMRAM] enum E6890
 37521 ;; Auto vars:     Size  Location     Type
 37522 ;;  command         4   25[COMRAM] unsigned char [4]
 37523 ;; Return value:  Size  Location     Type
 37524 ;;                  1    wreg      void 
 37525 ;; Registers used:
 37526 ;;		wreg, status,2, status,0, cstack
 37527 ;; Tracked objects:
 37528 ;;		On entry : 0/0
 37529 ;;		On exit  : 0/0
 37530 ;;		Unchanged: 0/0
 37531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37532 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37533 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37534 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37535 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37536 ;;Total ram usage:       10 bytes
 37537 ;; Hardware stack levels used:    1
 37538 ;; Hardware stack levels required when called:    3
 37539 ;; This function calls:
 37540 ;;		__flash_is_busy
 37541 ;;		_spi_tx
 37542 ;; This function is called by:
 37543 ;;		_flash_page_write
 37544 ;;		_flash_partial_write
 37545 ;; This function uses a non-reentrant model
 37546 ;;
 37547                           
 37548                           	psect	text193
 37549  007160                     __ptext193:
 37550                           	opt stack 0
 37551  007160                     __flash_write_page_from_buffer:
 37552                           	opt stack 23
 37553                           
 37554                           ;flash.c: 256: uint8_t command[4];;flash.c: 259: while(_flash_is_busy());
 37555                           
 37556                           ;incstack = 0
 37557  007160  EC16  F03F         	call	__flash_is_busy	;wreg free
 37558  007164  0900               	iorlw	0
 37559  007166  A4D8               	btfss	status,2,c
 37560  007168  D7FB               	goto	__flash_write_page_from_buffer
 37561                           
 37562                           ;flash.c: 262: if(buffer==FLASH_BUFFER_1)
 37563  00716A  5016               	movf	__flash_write_page_from_buffer@buffer,w,c
 37564  00716C  A4D8               	btfss	status,2,c
 37565  00716E  D002               	goto	l1791
 37566                           
 37567                           ;flash.c: 263: command[0] = 0x83;
 37568  007170  0E83               	movlw	131
 37569  007172  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 37570  007174                     l1791:
 37571                           
 37572                           ;flash.c: 264: if(buffer==FLASH_BUFFER_2)
 37573  007174  0416               	decf	__flash_write_page_from_buffer@buffer,w,c
 37574  007176  A4D8               	btfss	status,2,c
 37575  007178  D002               	goto	l1792
 37576                           
 37577                           ;flash.c: 265: command[0] = 0x86;
 37578  00717A  0E86               	movlw	134
 37579  00717C  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 37580  00717E                     l1792:
 37581                           
 37582                           ;flash.c: 267: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 37583  00717E  C014  F017         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 37584  007182  C015  F018         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 37585  007186  0E07               	movlw	7
 37586  007188  6E19               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),c
 37587  00718A                     u6485:
 37588  00718A  90D8               	bcf	status,0,c
 37589  00718C  3218               	rrcf	??__flash_write_page_from_buffer+1,f,c
 37590  00718E  3217               	rrcf	??__flash_write_page_from_buffer,f,c
 37591  007190  2E19               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,c
 37592  007192  D7FB               	goto	u6485
 37593  007194  5017               	movf	??__flash_write_page_from_buffer,w,c
 37594  007196  6E1B               	movwf	__flash_write_page_from_buffer@command+1,c
 37595                           
 37596                           ;flash.c: 268: command[2] = ((unsigned char)((page<<1)&0xFF));
 37597  007198  5014               	movf	__flash_write_page_from_buffer@page,w,c
 37598  00719A  2414               	addwf	__flash_write_page_from_buffer@page,w,c
 37599  00719C  6E1C               	movwf	__flash_write_page_from_buffer@command+2,c
 37600                           
 37601                           ;flash.c: 269: command[3] = 0x00;
 37602  00719E  0E00               	movlw	0
 37603  0071A0  6E1D               	movwf	__flash_write_page_from_buffer@command+3,c
 37604                           
 37605                           ;flash.c: 272: spi_tx(command, 4);
 37606  0071A2  0E1A               	movlw	low __flash_write_page_from_buffer@command
 37607  0071A4  6E01               	movwf	spi_tx@data,c
 37608  0071A6  0E00               	movlw	high __flash_write_page_from_buffer@command
 37609  0071A8  6E02               	movwf	spi_tx@data+1,c
 37610  0071AA  0E00               	movlw	0
 37611  0071AC  6E04               	movwf	spi_tx@length+1,c
 37612  0071AE  0E04               	movlw	4
 37613  0071B0  6E03               	movwf	spi_tx@length,c
 37614  0071B2  EC08  F039         	call	_spi_tx	;wreg free
 37615  0071B6  0012               	return		;funcret
 37616  0071B8                     __end_of__flash_write_page_from_buffer:
 37617                           	opt stack 0
 37618                           tosu	equ	0xFFF
 37619                           tosh	equ	0xFFE
 37620                           tosl	equ	0xFFD
 37621                           pclath	equ	0xFFA
 37622                           tblptru	equ	0xFF8
 37623                           tblptrh	equ	0xFF7
 37624                           tblptrl	equ	0xFF6
 37625                           tablat	equ	0xFF5
 37626                           prodh	equ	0xFF4
 37627                           prodl	equ	0xFF3
 37628                           intcon	equ	0xFF2
 37629                           intcon2	equ	0xFF1
 37630                           intcon3	equ	0xFF0
 37631                           indf0	equ	0xFEF
 37632                           postinc0	equ	0xFEE
 37633                           fsr0h	equ	0xFEA
 37634                           fsr0l	equ	0xFE9
 37635                           wreg	equ	0xFE8
 37636                           indf1	equ	0xFE7
 37637                           postdec1	equ	0xFE5
 37638                           plusw1	equ	0xFE3
 37639                           fsr1h	equ	0xFE2
 37640                           fsr1l	equ	0xFE1
 37641                           indf2	equ	0xFDF
 37642                           postinc2	equ	0xFDE
 37643                           postdec2	equ	0xFDD
 37644                           plusw2	equ	0xFDB
 37645                           fsr2h	equ	0xFDA
 37646                           fsr2l	equ	0xFD9
 37647                           status	equ	0xFD8
 37648                           
 37649 ;; *************** function __flash_copy_page_to_buffer *****************
 37650 ;; Defined at:
 37651 ;;		line 150 in file "flash.c"
 37652 ;; Parameters:    Size  Location     Type
 37653 ;;  page            2   19[COMRAM] unsigned int 
 37654 ;;  buffer          1   21[COMRAM] enum E6890
 37655 ;; Auto vars:     Size  Location     Type
 37656 ;;  command         4   25[COMRAM] unsigned char [4]
 37657 ;; Return value:  Size  Location     Type
 37658 ;;                  1    wreg      void 
 37659 ;; Registers used:
 37660 ;;		wreg, status,2, status,0, cstack
 37661 ;; Tracked objects:
 37662 ;;		On entry : 0/0
 37663 ;;		On exit  : 0/0
 37664 ;;		Unchanged: 0/0
 37665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37666 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37667 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37668 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37669 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37670 ;;Total ram usage:       10 bytes
 37671 ;; Hardware stack levels used:    1
 37672 ;; Hardware stack levels required when called:    3
 37673 ;; This function calls:
 37674 ;;		__flash_is_busy
 37675 ;;		_spi_tx
 37676 ;; This function is called by:
 37677 ;;		_flash_partial_write
 37678 ;; This function uses a non-reentrant model
 37679 ;;
 37680                           
 37681                           	psect	text194
 37682  0071B8                     __ptext194:
 37683                           	opt stack 0
 37684  0071B8                     __flash_copy_page_to_buffer:
 37685                           	opt stack 21
 37686                           
 37687                           ;flash.c: 152: uint8_t command[4];;flash.c: 155: while(_flash_is_busy());
 37688                           
 37689                           ;incstack = 0
 37690  0071B8  EC16  F03F         	call	__flash_is_busy	;wreg free
 37691  0071BC  0900               	iorlw	0
 37692  0071BE  A4D8               	btfss	status,2,c
 37693  0071C0  D7FB               	goto	__flash_copy_page_to_buffer
 37694                           
 37695                           ;flash.c: 158: if(buffer==FLASH_BUFFER_1)
 37696  0071C2  5016               	movf	__flash_copy_page_to_buffer@buffer,w,c
 37697  0071C4  A4D8               	btfss	status,2,c
 37698  0071C6  D002               	goto	l1756
 37699                           
 37700                           ;flash.c: 159: command[0] = 0x53;
 37701  0071C8  0E53               	movlw	83
 37702  0071CA  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 37703  0071CC                     l1756:
 37704                           
 37705                           ;flash.c: 160: if(buffer==FLASH_BUFFER_2)
 37706  0071CC  0416               	decf	__flash_copy_page_to_buffer@buffer,w,c
 37707  0071CE  A4D8               	btfss	status,2,c
 37708  0071D0  D002               	goto	l1757
 37709                           
 37710                           ;flash.c: 161: command[0] = 0x55;
 37711  0071D2  0E55               	movlw	85
 37712  0071D4  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 37713  0071D6                     l1757:
 37714                           
 37715                           ;flash.c: 163: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 37716  0071D6  C014  F017         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 37717  0071DA  C015  F018         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 37718  0071DE  0E07               	movlw	7
 37719  0071E0  6E19               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),c
 37720  0071E2                     u6735:
 37721  0071E2  90D8               	bcf	status,0,c
 37722  0071E4  3218               	rrcf	??__flash_copy_page_to_buffer+1,f,c
 37723  0071E6  3217               	rrcf	??__flash_copy_page_to_buffer,f,c
 37724  0071E8  2E19               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,c
 37725  0071EA  D7FB               	goto	u6735
 37726  0071EC  5017               	movf	??__flash_copy_page_to_buffer,w,c
 37727  0071EE  6E1B               	movwf	__flash_copy_page_to_buffer@command+1,c
 37728                           
 37729                           ;flash.c: 164: command[2] = ((unsigned char)((page<<1)&0xFF));
 37730  0071F0  5014               	movf	__flash_copy_page_to_buffer@page,w,c
 37731  0071F2  2414               	addwf	__flash_copy_page_to_buffer@page,w,c
 37732  0071F4  6E1C               	movwf	__flash_copy_page_to_buffer@command+2,c
 37733                           
 37734                           ;flash.c: 165: command[3] = 0x00;
 37735  0071F6  0E00               	movlw	0
 37736  0071F8  6E1D               	movwf	__flash_copy_page_to_buffer@command+3,c
 37737                           
 37738                           ;flash.c: 168: spi_tx(command, 4);
 37739  0071FA  0E1A               	movlw	low __flash_copy_page_to_buffer@command
 37740  0071FC  6E01               	movwf	spi_tx@data,c
 37741  0071FE  0E00               	movlw	high __flash_copy_page_to_buffer@command
 37742  007200  6E02               	movwf	spi_tx@data+1,c
 37743  007202  0E00               	movlw	0
 37744  007204  6E04               	movwf	spi_tx@length+1,c
 37745  007206  0E04               	movlw	4
 37746  007208  6E03               	movwf	spi_tx@length,c
 37747  00720A  EC08  F039         	call	_spi_tx	;wreg free
 37748  00720E  0012               	return		;funcret
 37749  007210                     __end_of__flash_copy_page_to_buffer:
 37750                           	opt stack 0
 37751                           tosu	equ	0xFFF
 37752                           tosh	equ	0xFFE
 37753                           tosl	equ	0xFFD
 37754                           pclath	equ	0xFFA
 37755                           tblptru	equ	0xFF8
 37756                           tblptrh	equ	0xFF7
 37757                           tblptrl	equ	0xFF6
 37758                           tablat	equ	0xFF5
 37759                           prodh	equ	0xFF4
 37760                           prodl	equ	0xFF3
 37761                           intcon	equ	0xFF2
 37762                           intcon2	equ	0xFF1
 37763                           intcon3	equ	0xFF0
 37764                           indf0	equ	0xFEF
 37765                           postinc0	equ	0xFEE
 37766                           fsr0h	equ	0xFEA
 37767                           fsr0l	equ	0xFE9
 37768                           wreg	equ	0xFE8
 37769                           indf1	equ	0xFE7
 37770                           postdec1	equ	0xFE5
 37771                           plusw1	equ	0xFE3
 37772                           fsr1h	equ	0xFE2
 37773                           fsr1l	equ	0xFE1
 37774                           indf2	equ	0xFDF
 37775                           postinc2	equ	0xFDE
 37776                           postdec2	equ	0xFDD
 37777                           plusw2	equ	0xFDB
 37778                           fsr2h	equ	0xFDA
 37779                           fsr2l	equ	0xFD9
 37780                           status	equ	0xFD8
 37781                           
 37782 ;; *************** function __flash_compare_page_to_buffer *****************
 37783 ;; Defined at:
 37784 ;;		line 172 in file "flash.c"
 37785 ;; Parameters:    Size  Location     Type
 37786 ;;  page            2   19[COMRAM] unsigned int 
 37787 ;;  buffer          1   21[COMRAM] enum E6890
 37788 ;; Auto vars:     Size  Location     Type
 37789 ;;  command         4   27[COMRAM] unsigned char [4]
 37790 ;;  status          2   25[COMRAM] unsigned int 
 37791 ;; Return value:  Size  Location     Type
 37792 ;;                  1    wreg      enum E6894
 37793 ;; Registers used:
 37794 ;;		wreg, status,2, status,0, cstack
 37795 ;; Tracked objects:
 37796 ;;		On entry : 0/0
 37797 ;;		On exit  : 0/0
 37798 ;;		Unchanged: 0/0
 37799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37800 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37801 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37802 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37803 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37804 ;;Total ram usage:       12 bytes
 37805 ;; Hardware stack levels used:    1
 37806 ;; Hardware stack levels required when called:    3
 37807 ;; This function calls:
 37808 ;;		__flash_get_status
 37809 ;;		__flash_is_busy
 37810 ;;		_spi_tx
 37811 ;; This function is called by:
 37812 ;;		_flash_page_write
 37813 ;;		_flash_partial_write
 37814 ;; This function uses a non-reentrant model
 37815 ;;
 37816                           
 37817                           	psect	text195
 37818  0066D4                     __ptext195:
 37819                           	opt stack 0
 37820  0066D4                     __flash_compare_page_to_buffer:
 37821                           	opt stack 23
 37822                           
 37823                           ;flash.c: 174: uint8_t command[4];;flash.c: 175: uint16_t status;;flash.c: 178: while(_f
      +                          lash_is_busy());
 37824                           
 37825                           ;incstack = 0
 37826  0066D4  EC16  F03F         	call	__flash_is_busy	;wreg free
 37827  0066D8  0900               	iorlw	0
 37828  0066DA  A4D8               	btfss	status,2,c
 37829  0066DC  D7FB               	goto	__flash_compare_page_to_buffer
 37830                           
 37831                           ;flash.c: 181: if(buffer==FLASH_BUFFER_1)
 37832  0066DE  5016               	movf	__flash_compare_page_to_buffer@buffer,w,c
 37833  0066E0  A4D8               	btfss	status,2,c
 37834  0066E2  D002               	goto	l1764
 37835                           
 37836                           ;flash.c: 182: command[0] = 0x60;
 37837  0066E4  0E60               	movlw	96
 37838  0066E6  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 37839  0066E8                     l1764:
 37840                           
 37841                           ;flash.c: 183: if(buffer==FLASH_BUFFER_2)
 37842  0066E8  0416               	decf	__flash_compare_page_to_buffer@buffer,w,c
 37843  0066EA  A4D8               	btfss	status,2,c
 37844  0066EC  D002               	goto	l1765
 37845                           
 37846                           ;flash.c: 184: command[0] = 0x60;
 37847  0066EE  0E60               	movlw	96
 37848  0066F0  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 37849  0066F2                     l1765:
 37850                           
 37851                           ;flash.c: 186: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 37852  0066F2  C014  F017         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 37853  0066F6  C015  F018         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 37854  0066FA  0E07               	movlw	7
 37855  0066FC  6E19               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),c
 37856  0066FE                     u6395:
 37857  0066FE  90D8               	bcf	status,0,c
 37858  006700  3218               	rrcf	??__flash_compare_page_to_buffer+1,f,c
 37859  006702  3217               	rrcf	??__flash_compare_page_to_buffer,f,c
 37860  006704  2E19               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,c
 37861  006706  D7FB               	goto	u6395
 37862  006708  5017               	movf	??__flash_compare_page_to_buffer,w,c
 37863  00670A  6E1D               	movwf	__flash_compare_page_to_buffer@command+1,c
 37864                           
 37865                           ;flash.c: 187: command[2] = ((unsigned char)((page<<1)&0xFF));
 37866  00670C  5014               	movf	__flash_compare_page_to_buffer@page,w,c
 37867  00670E  2414               	addwf	__flash_compare_page_to_buffer@page,w,c
 37868  006710  6E1E               	movwf	__flash_compare_page_to_buffer@command+2,c
 37869                           
 37870                           ;flash.c: 188: command[3] = 0x00;
 37871  006712  0E00               	movlw	0
 37872  006714  6E1F               	movwf	__flash_compare_page_to_buffer@command+3,c
 37873                           
 37874                           ;flash.c: 191: spi_tx(command, 4);
 37875  006716  0E1C               	movlw	low __flash_compare_page_to_buffer@command
 37876  006718  6E01               	movwf	spi_tx@data,c
 37877  00671A  0E00               	movlw	high __flash_compare_page_to_buffer@command
 37878  00671C  6E02               	movwf	spi_tx@data+1,c
 37879  00671E  0E00               	movlw	0
 37880  006720  6E04               	movwf	spi_tx@length+1,c
 37881  006722  0E04               	movlw	4
 37882  006724  6E03               	movwf	spi_tx@length,c
 37883  006726  EC08  F039         	call	_spi_tx	;wreg free
 37884  00672A  EC16  F03F         	call	__flash_is_busy	;wreg free
 37885  00672E  0900               	iorlw	0
 37886  006730  A4D8               	btfss	status,2,c
 37887  006732  D7FB               	goto	l1767
 37888                           
 37889                           ;flash.c: 197: status = _flash_get_status();
 37890  006734  ECAA  F03D         	call	__flash_get_status	;wreg free
 37891  006738  C00D  F01A         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 37892  00673C  C00E  F01B         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 37893                           
 37894                           ;flash.c: 200: if(status & 0b0000000001000000)
 37895  006740  AC1A               	btfss	__flash_compare_page_to_buffer@status,6,c
 37896  006742  D002               	goto	l1769
 37897                           
 37898                           ;flash.c: 201: {;flash.c: 203: return DATA_DOES_NOT_MATCH;
 37899  006744  0E01               	movlw	1
 37900                           
 37901                           ;flash.c: 204: }
 37902  006746  0012               	return	
 37903  006748                     l1769:
 37904                           
 37905                           ;flash.c: 205: else;flash.c: 206: {;flash.c: 208: return DATA_DOES_MATCH;
 37906  006748  0E00               	movlw	0
 37907  00674A  0012               	return	
 37908  00674C                     __end_of__flash_compare_page_to_buffer:
 37909                           	opt stack 0
 37910                           tosu	equ	0xFFF
 37911                           tosh	equ	0xFFE
 37912                           tosl	equ	0xFFD
 37913                           pclath	equ	0xFFA
 37914                           tblptru	equ	0xFF8
 37915                           tblptrh	equ	0xFF7
 37916                           tblptrl	equ	0xFF6
 37917                           tablat	equ	0xFF5
 37918                           prodh	equ	0xFF4
 37919                           prodl	equ	0xFF3
 37920                           intcon	equ	0xFF2
 37921                           intcon2	equ	0xFF1
 37922                           intcon3	equ	0xFF0
 37923                           indf0	equ	0xFEF
 37924                           postinc0	equ	0xFEE
 37925                           fsr0h	equ	0xFEA
 37926                           fsr0l	equ	0xFE9
 37927                           wreg	equ	0xFE8
 37928                           indf1	equ	0xFE7
 37929                           postdec1	equ	0xFE5
 37930                           plusw1	equ	0xFE3
 37931                           fsr1h	equ	0xFE2
 37932                           fsr1l	equ	0xFE1
 37933                           indf2	equ	0xFDF
 37934                           postinc2	equ	0xFDE
 37935                           postdec2	equ	0xFDD
 37936                           plusw2	equ	0xFDB
 37937                           fsr2h	equ	0xFDA
 37938                           fsr2l	equ	0xFD9
 37939                           status	equ	0xFD8
 37940                           
 37941 ;; *************** function __update_modified_time *****************
 37942 ;; Defined at:
 37943 ;;		line 53 in file "fat16.c"
 37944 ;; Parameters:    Size  Location     Type
 37945 ;;  root            2    4[COMRAM] PTR struct .
 37946 ;;		 -> fat_append_to_file@root(32), 
 37947 ;; Auto vars:     Size  Location     Type
 37948 ;;		None
 37949 ;; Return value:  Size  Location     Type
 37950 ;;                  1    wreg      void 
 37951 ;; Registers used:
 37952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37953 ;; Tracked objects:
 37954 ;;		On entry : 0/0
 37955 ;;		On exit  : 0/0
 37956 ;;		Unchanged: 0/0
 37957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37958 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37961 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37962 ;;Total ram usage:        2 bytes
 37963 ;; Hardware stack levels used:    1
 37964 ;; Hardware stack levels required when called:    1
 37965 ;; This function calls:
 37966 ;;		__get_date
 37967 ;;		__get_time
 37968 ;; This function is called by:
 37969 ;;		_fat_append_to_file
 37970 ;; This function uses a non-reentrant model
 37971 ;;
 37972                           
 37973                           	psect	text196
 37974  007AF0                     __ptext196:
 37975                           	opt stack 0
 37976  007AF0                     __update_modified_time:
 37977                           	opt stack 25
 37978                           
 37979                           ;fat16.c: 55: root->modifiedDate = _get_date();
 37980                           
 37981                           ;incstack = 0
 37982  007AF0  EC4D  F040         	call	__get_date	;wreg free
 37983  007AF4  EE20 F018          	lfsr	2,24
 37984  007AF8  5005               	movf	__update_modified_time@root,w,c
 37985  007AFA  26D9               	addwf	fsr2l,f,c
 37986  007AFC  5006               	movf	__update_modified_time@root+1,w,c
 37987  007AFE  22DA               	addwfc	fsr2h,f,c
 37988  007B00  C001  FFDE         	movff	?__get_date,postinc2
 37989  007B04  C002  FFDD         	movff	?__get_date+1,postdec2
 37990                           
 37991                           ;fat16.c: 56: root->modifiedTime = _get_time();
 37992  007B08  EC48  F040         	call	__get_time	;wreg free
 37993  007B0C  EE20 F016          	lfsr	2,22
 37994  007B10  5005               	movf	__update_modified_time@root,w,c
 37995  007B12  26D9               	addwf	fsr2l,f,c
 37996  007B14  5006               	movf	__update_modified_time@root+1,w,c
 37997  007B16  22DA               	addwfc	fsr2h,f,c
 37998  007B18  C001  FFDE         	movff	?__get_time,postinc2
 37999  007B1C  C002  FFDD         	movff	?__get_time+1,postdec2
 38000  007B20  0012               	return		;funcret
 38001  007B22                     __end_of__update_modified_time:
 38002                           	opt stack 0
 38003                           tosu	equ	0xFFF
 38004                           tosh	equ	0xFFE
 38005                           tosl	equ	0xFFD
 38006                           pclath	equ	0xFFA
 38007                           tblptru	equ	0xFF8
 38008                           tblptrh	equ	0xFF7
 38009                           tblptrl	equ	0xFF6
 38010                           tablat	equ	0xFF5
 38011                           prodh	equ	0xFF4
 38012                           prodl	equ	0xFF3
 38013                           intcon	equ	0xFF2
 38014                           intcon2	equ	0xFF1
 38015                           intcon3	equ	0xFF0
 38016                           indf0	equ	0xFEF
 38017                           postinc0	equ	0xFEE
 38018                           fsr0h	equ	0xFEA
 38019                           fsr0l	equ	0xFE9
 38020                           wreg	equ	0xFE8
 38021                           indf1	equ	0xFE7
 38022                           postdec1	equ	0xFE5
 38023                           plusw1	equ	0xFE3
 38024                           fsr1h	equ	0xFE2
 38025                           fsr1l	equ	0xFE1
 38026                           indf2	equ	0xFDF
 38027                           postinc2	equ	0xFDE
 38028                           postdec2	equ	0xFDD
 38029                           plusw2	equ	0xFDB
 38030                           fsr2h	equ	0xFDA
 38031                           fsr2l	equ	0xFD9
 38032                           status	equ	0xFD8
 38033                           
 38034 ;; *************** function __get_time *****************
 38035 ;; Defined at:
 38036 ;;		line 29 in file "fat16.c"
 38037 ;; Parameters:    Size  Location     Type
 38038 ;;		None
 38039 ;; Auto vars:     Size  Location     Type
 38040 ;;  time            2    2[COMRAM] unsigned int 
 38041 ;; Return value:  Size  Location     Type
 38042 ;;                  2    0[COMRAM] unsigned int 
 38043 ;; Registers used:
 38044 ;;		None
 38045 ;; Tracked objects:
 38046 ;;		On entry : 0/0
 38047 ;;		On exit  : 0/0
 38048 ;;		Unchanged: 0/0
 38049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38050 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38051 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38053 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38054 ;;Total ram usage:        4 bytes
 38055 ;; Hardware stack levels used:    1
 38056 ;; This function calls:
 38057 ;;		Nothing
 38058 ;; This function is called by:
 38059 ;;		__update_modified_time
 38060 ;;		_fat_create_file
 38061 ;; This function uses a non-reentrant model
 38062 ;;
 38063                           
 38064                           	psect	text197
 38065  008090                     __ptext197:
 38066                           	opt stack 0
 38067  008090                     __get_time:
 38068                           	opt stack 26
 38069                           
 38070                           ;fat16.c: 31: uint16_t time;;fat16.c: 38: return time;
 38071                           
 38072                           ;incstack = 0
 38073  008090  C003  F001         	movff	__get_time@time,?__get_time
 38074  008094  C004  F002         	movff	__get_time@time+1,?__get_time+1
 38075  008098  0012               	return		;funcret
 38076  00809A                     __end_of__get_time:
 38077                           	opt stack 0
 38078                           tosu	equ	0xFFF
 38079                           tosh	equ	0xFFE
 38080                           tosl	equ	0xFFD
 38081                           pclath	equ	0xFFA
 38082                           tblptru	equ	0xFF8
 38083                           tblptrh	equ	0xFF7
 38084                           tblptrl	equ	0xFF6
 38085                           tablat	equ	0xFF5
 38086                           prodh	equ	0xFF4
 38087                           prodl	equ	0xFF3
 38088                           intcon	equ	0xFF2
 38089                           intcon2	equ	0xFF1
 38090                           intcon3	equ	0xFF0
 38091                           indf0	equ	0xFEF
 38092                           postinc0	equ	0xFEE
 38093                           fsr0h	equ	0xFEA
 38094                           fsr0l	equ	0xFE9
 38095                           wreg	equ	0xFE8
 38096                           indf1	equ	0xFE7
 38097                           postdec1	equ	0xFE5
 38098                           plusw1	equ	0xFE3
 38099                           fsr1h	equ	0xFE2
 38100                           fsr1l	equ	0xFE1
 38101                           indf2	equ	0xFDF
 38102                           postinc2	equ	0xFDE
 38103                           postdec2	equ	0xFDD
 38104                           plusw2	equ	0xFDB
 38105                           fsr2h	equ	0xFDA
 38106                           fsr2l	equ	0xFD9
 38107                           status	equ	0xFD8
 38108                           
 38109 ;; *************** function __get_date *****************
 38110 ;; Defined at:
 38111 ;;		line 41 in file "fat16.c"
 38112 ;; Parameters:    Size  Location     Type
 38113 ;;		None
 38114 ;; Auto vars:     Size  Location     Type
 38115 ;;  date            2    2[COMRAM] unsigned int 
 38116 ;; Return value:  Size  Location     Type
 38117 ;;                  2    0[COMRAM] unsigned int 
 38118 ;; Registers used:
 38119 ;;		None
 38120 ;; Tracked objects:
 38121 ;;		On entry : 0/0
 38122 ;;		On exit  : 0/0
 38123 ;;		Unchanged: 0/0
 38124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38125 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38126 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38128 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38129 ;;Total ram usage:        4 bytes
 38130 ;; Hardware stack levels used:    1
 38131 ;; This function calls:
 38132 ;;		Nothing
 38133 ;; This function is called by:
 38134 ;;		__update_modified_time
 38135 ;;		_fat_create_file
 38136 ;; This function uses a non-reentrant model
 38137 ;;
 38138                           
 38139                           	psect	text198
 38140  00809A                     __ptext198:
 38141                           	opt stack 0
 38142  00809A                     __get_date:
 38143                           	opt stack 26
 38144                           
 38145                           ;fat16.c: 43: uint16_t date;;fat16.c: 50: return date;
 38146                           
 38147                           ;incstack = 0
 38148  00809A  C003  F001         	movff	__get_date@date,?__get_date
 38149  00809E  C004  F002         	movff	__get_date@date+1,?__get_date+1
 38150  0080A2  0012               	return		;funcret
 38151  0080A4                     __end_of__get_date:
 38152                           	opt stack 0
 38153                           tosu	equ	0xFFF
 38154                           tosh	equ	0xFFE
 38155                           tosl	equ	0xFFD
 38156                           pclath	equ	0xFFA
 38157                           tblptru	equ	0xFF8
 38158                           tblptrh	equ	0xFF7
 38159                           tblptrl	equ	0xFF6
 38160                           tablat	equ	0xFF5
 38161                           prodh	equ	0xFF4
 38162                           prodl	equ	0xFF3
 38163                           intcon	equ	0xFF2
 38164                           intcon2	equ	0xFF1
 38165                           intcon3	equ	0xFF0
 38166                           indf0	equ	0xFEF
 38167                           postinc0	equ	0xFEE
 38168                           fsr0h	equ	0xFEA
 38169                           fsr0l	equ	0xFE9
 38170                           wreg	equ	0xFE8
 38171                           indf1	equ	0xFE7
 38172                           postdec1	equ	0xFE5
 38173                           plusw1	equ	0xFE3
 38174                           fsr1h	equ	0xFE2
 38175                           fsr1l	equ	0xFE1
 38176                           indf2	equ	0xFDF
 38177                           postinc2	equ	0xFDE
 38178                           postdec2	equ	0xFDD
 38179                           plusw2	equ	0xFDB
 38180                           fsr2h	equ	0xFDA
 38181                           fsr2l	equ	0xFD9
 38182                           status	equ	0xFD8
 38183                           
 38184 ;; *************** function __sector_from_cluster *****************
 38185 ;; Defined at:
 38186 ;;		line 443 in file "fat16.c"
 38187 ;; Parameters:    Size  Location     Type
 38188 ;;  fat_cluster     2    0[COMRAM] unsigned int 
 38189 ;; Auto vars:     Size  Location     Type
 38190 ;;		None
 38191 ;; Return value:  Size  Location     Type
 38192 ;;                  2    0[COMRAM] unsigned int 
 38193 ;; Registers used:
 38194 ;;		wreg, status,2, status,0
 38195 ;; Tracked objects:
 38196 ;;		On entry : 0/0
 38197 ;;		On exit  : 0/0
 38198 ;;		Unchanged: 0/0
 38199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38200 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38203 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38204 ;;Total ram usage:        2 bytes
 38205 ;; Hardware stack levels used:    1
 38206 ;; This function calls:
 38207 ;;		Nothing
 38208 ;; This function is called by:
 38209 ;;		_fat_append_to_file
 38210 ;;		_fat_read_from_file
 38211 ;; This function uses a non-reentrant model
 38212 ;;
 38213                           
 38214                           	psect	text199
 38215  007FFE                     __ptext199:
 38216                           	opt stack 0
 38217  007FFE                     __sector_from_cluster:
 38218                           	opt stack 27
 38219                           
 38220                           ;fat16.c: 445: return fat_cluster + 38 - 2;
 38221                           
 38222                           ;incstack = 0
 38223  007FFE  0E24               	movlw	36
 38224  008000  2401               	addwf	__sector_from_cluster@fat_cluster,w,c
 38225  008002  6E01               	movwf	?__sector_from_cluster,c
 38226  008004  0E00               	movlw	0
 38227  008006  2002               	addwfc	__sector_from_cluster@fat_cluster+1,w,c
 38228  008008  6E02               	movwf	?__sector_from_cluster+1,c
 38229  00800A  0012               	return	
 38230  00800C                     __end_of__sector_from_cluster:
 38231                           	opt stack 0
 38232                           tosu	equ	0xFFF
 38233                           tosh	equ	0xFFE
 38234                           tosl	equ	0xFFD
 38235                           pclath	equ	0xFFA
 38236                           tblptru	equ	0xFF8
 38237                           tblptrh	equ	0xFF7
 38238                           tblptrl	equ	0xFF6
 38239                           tablat	equ	0xFF5
 38240                           prodh	equ	0xFF4
 38241                           prodl	equ	0xFF3
 38242                           intcon	equ	0xFF2
 38243                           intcon2	equ	0xFF1
 38244                           intcon3	equ	0xFF0
 38245                           indf0	equ	0xFEF
 38246                           postinc0	equ	0xFEE
 38247                           fsr0h	equ	0xFEA
 38248                           fsr0l	equ	0xFE9
 38249                           wreg	equ	0xFE8
 38250                           indf1	equ	0xFE7
 38251                           postdec1	equ	0xFE5
 38252                           plusw1	equ	0xFE3
 38253                           fsr1h	equ	0xFE2
 38254                           fsr1l	equ	0xFE1
 38255                           indf2	equ	0xFDF
 38256                           postinc2	equ	0xFDE
 38257                           postdec2	equ	0xFDD
 38258                           plusw2	equ	0xFDB
 38259                           fsr2h	equ	0xFDA
 38260                           fsr2l	equ	0xFD9
 38261                           status	equ	0xFD8
 38262                           
 38263 ;; *************** function __read_fat *****************
 38264 ;; Defined at:
 38265 ;;		line 169 in file "fat16.c"
 38266 ;; Parameters:    Size  Location     Type
 38267 ;;  cluster         2   47[COMRAM] unsigned int 
 38268 ;; Auto vars:     Size  Location     Type
 38269 ;;  value           2   53[COMRAM] unsigned int 
 38270 ;;  offset          2   51[COMRAM] unsigned int 
 38271 ;;  fat_sector      2   49[COMRAM] unsigned int 
 38272 ;; Return value:  Size  Location     Type
 38273 ;;                  2   47[COMRAM] unsigned int 
 38274 ;; Registers used:
 38275 ;;		wreg, status,2, status,0, cstack
 38276 ;; Tracked objects:
 38277 ;;		On entry : 0/0
 38278 ;;		On exit  : 0/0
 38279 ;;		Unchanged: 0/0
 38280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38281 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38282 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38284 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38285 ;;Total ram usage:        8 bytes
 38286 ;; Hardware stack levels used:    1
 38287 ;; Hardware stack levels required when called:    5
 38288 ;; This function calls:
 38289 ;;		_flash_partial_read
 38290 ;; This function is called by:
 38291 ;;		_fat_delete_file
 38292 ;;		_fat_append_to_file
 38293 ;;		_fat_read_from_file
 38294 ;; This function uses a non-reentrant model
 38295 ;;
 38296                           
 38297                           	psect	text200
 38298  007694                     __ptext200:
 38299                           	opt stack 0
 38300  007694                     __read_fat:
 38301                           	opt stack 22
 38302                           
 38303                           ;fat16.c: 171: uint16_t fat_sector;;fat16.c: 172: uint16_t offset;;fat16.c: 173: uint16_
      +                          t value;;fat16.c: 174: fat_sector = cluster>>8;
 38304                           
 38305                           ;incstack = 0
 38306  007694  5031               	movf	__read_fat@cluster+1,w,c
 38307  007696  6E32               	movwf	__read_fat@fat_sector,c
 38308  007698  6A33               	clrf	__read_fat@fat_sector+1,c
 38309                           
 38310                           ;fat16.c: 175: fat_sector += 2;
 38311  00769A  0E02               	movlw	2
 38312  00769C  2632               	addwf	__read_fat@fat_sector,f,c
 38313  00769E  0E00               	movlw	0
 38314  0076A0  2233               	addwfc	__read_fat@fat_sector+1,f,c
 38315                           
 38316                           ;fat16.c: 176: offset = cluster & 0xFF;
 38317  0076A2  5030               	movf	__read_fat@cluster,w,c
 38318  0076A4  6E34               	movwf	__read_fat@offset,c
 38319  0076A6  6A35               	clrf	__read_fat@offset+1,c
 38320                           
 38321                           ;fat16.c: 177: offset <<= 1;
 38322  0076A8  90D8               	bcf	status,0,c
 38323  0076AA  3634               	rlcf	__read_fat@offset,f,c
 38324  0076AC  3635               	rlcf	__read_fat@offset+1,f,c
 38325                           
 38326                           ;fat16.c: 178: flash_partial_read(fat_sector, offset, 2, &value);
 38327  0076AE  C032  F028         	movff	__read_fat@fat_sector,flash_partial_read@page
 38328  0076B2  C033  F029         	movff	__read_fat@fat_sector+1,flash_partial_read@page+1
 38329  0076B6  C034  F02A         	movff	__read_fat@offset,flash_partial_read@start
 38330  0076BA  C035  F02B         	movff	__read_fat@offset+1,flash_partial_read@start+1
 38331  0076BE  0E00               	movlw	0
 38332  0076C0  6E2D               	movwf	flash_partial_read@length+1,c
 38333  0076C2  0E02               	movlw	2
 38334  0076C4  6E2C               	movwf	flash_partial_read@length,c
 38335  0076C6  0E36               	movlw	low __read_fat@value
 38336  0076C8  6E2E               	movwf	flash_partial_read@data,c
 38337  0076CA  0E00               	movlw	high __read_fat@value
 38338  0076CC  6E2F               	movwf	flash_partial_read@data+1,c
 38339  0076CE  EC91  F03D         	call	_flash_partial_read	;wreg free
 38340                           
 38341                           ;fat16.c: 179: return value;
 38342  0076D2  C036  F030         	movff	__read_fat@value,?__read_fat
 38343  0076D6  C037  F031         	movff	__read_fat@value+1,?__read_fat+1
 38344  0076DA  0012               	return	
 38345  0076DC                     __end_of__read_fat:
 38346                           	opt stack 0
 38347                           tosu	equ	0xFFF
 38348                           tosh	equ	0xFFE
 38349                           tosl	equ	0xFFD
 38350                           pclath	equ	0xFFA
 38351                           tblptru	equ	0xFF8
 38352                           tblptrh	equ	0xFF7
 38353                           tblptrl	equ	0xFF6
 38354                           tablat	equ	0xFF5
 38355                           prodh	equ	0xFF4
 38356                           prodl	equ	0xFF3
 38357                           intcon	equ	0xFF2
 38358                           intcon2	equ	0xFF1
 38359                           intcon3	equ	0xFF0
 38360                           indf0	equ	0xFEF
 38361                           postinc0	equ	0xFEE
 38362                           fsr0h	equ	0xFEA
 38363                           fsr0l	equ	0xFE9
 38364                           wreg	equ	0xFE8
 38365                           indf1	equ	0xFE7
 38366                           postdec1	equ	0xFE5
 38367                           plusw1	equ	0xFE3
 38368                           fsr1h	equ	0xFE2
 38369                           fsr1l	equ	0xFE1
 38370                           indf2	equ	0xFDF
 38371                           postinc2	equ	0xFDE
 38372                           postdec2	equ	0xFDD
 38373                           plusw2	equ	0xFDB
 38374                           fsr2h	equ	0xFDA
 38375                           fsr2l	equ	0xFD9
 38376                           status	equ	0xFD8
 38377                           
 38378 ;; *************** function __get_empty_cluster *****************
 38379 ;; Defined at:
 38380 ;;		line 107 in file "fat16.c"
 38381 ;; Parameters:    Size  Location     Type
 38382 ;;  first_cluste    2   47[COMRAM] unsigned int 
 38383 ;; Auto vars:     Size  Location     Type
 38384 ;;  cluster         2   55[COMRAM] unsigned int 
 38385 ;;  value           2   53[COMRAM] unsigned int 
 38386 ;;  offset          2   51[COMRAM] unsigned int 
 38387 ;;  fat_sector      2   49[COMRAM] unsigned int 
 38388 ;; Return value:  Size  Location     Type
 38389 ;;                  2   47[COMRAM] unsigned int 
 38390 ;; Registers used:
 38391 ;;		wreg, status,2, status,0, cstack
 38392 ;; Tracked objects:
 38393 ;;		On entry : 0/0
 38394 ;;		On exit  : 0/0
 38395 ;;		Unchanged: 0/0
 38396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38397 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38398 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38400 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38401 ;;Total ram usage:       10 bytes
 38402 ;; Hardware stack levels used:    1
 38403 ;; Hardware stack levels required when called:    5
 38404 ;; This function calls:
 38405 ;;		_flash_partial_read
 38406 ;; This function is called by:
 38407 ;;		_fat_create_file
 38408 ;;		_fat_append_to_file
 38409 ;; This function uses a non-reentrant model
 38410 ;;
 38411                           
 38412                           	psect	text201
 38413  0068AE                     __ptext201:
 38414                           	opt stack 0
 38415  0068AE                     __get_empty_cluster:
 38416                           	opt stack 21
 38417                           
 38418                           ;fat16.c: 109: uint16_t cluster;;fat16.c: 110: uint16_t fat_sector;;fat16.c: 111: uint16
      +                          _t offset;;fat16.c: 112: uint16_t value;;fat16.c: 115: for(cluster=first_cluster; cluste
      +                          r<(8154+2); ++cluster)
 38419                           
 38420                           ;incstack = 0
 38421  0068AE  C030  F038         	movff	__get_empty_cluster@first_cluster,__get_empty_cluster@cluster
 38422  0068B2  C031  F039         	movff	__get_empty_cluster@first_cluster+1,__get_empty_cluster@cluster+1
 38423  0068B6                     l11261:
 38424  0068B6  0EDC               	movlw	220
 38425  0068B8  5C38               	subwf	__get_empty_cluster@cluster,w,c
 38426  0068BA  0E1F               	movlw	31
 38427  0068BC  5839               	subwfb	__get_empty_cluster@cluster+1,w,c
 38428  0068BE  B0D8               	btfsc	status,0,c
 38429  0068C0  D02B               	goto	u8230
 38430                           
 38431                           ;fat16.c: 116: {;fat16.c: 117: fat_sector = cluster>>8;
 38432  0068C2  5039               	movf	__get_empty_cluster@cluster+1,w,c
 38433  0068C4  6E32               	movwf	__get_empty_cluster@fat_sector,c
 38434  0068C6  6A33               	clrf	__get_empty_cluster@fat_sector+1,c
 38435                           
 38436                           ;fat16.c: 118: fat_sector += 2;
 38437  0068C8  0E02               	movlw	2
 38438  0068CA  2632               	addwf	__get_empty_cluster@fat_sector,f,c
 38439  0068CC  0E00               	movlw	0
 38440  0068CE  2233               	addwfc	__get_empty_cluster@fat_sector+1,f,c
 38441                           
 38442                           ;fat16.c: 119: offset = cluster & 0xFF;
 38443  0068D0  5038               	movf	__get_empty_cluster@cluster,w,c
 38444  0068D2  6E34               	movwf	__get_empty_cluster@offset,c
 38445  0068D4  6A35               	clrf	__get_empty_cluster@offset+1,c
 38446                           
 38447                           ;fat16.c: 120: offset <<= 1;
 38448  0068D6  90D8               	bcf	status,0,c
 38449  0068D8  3634               	rlcf	__get_empty_cluster@offset,f,c
 38450  0068DA  3635               	rlcf	__get_empty_cluster@offset+1,f,c
 38451                           
 38452                           ;fat16.c: 121: flash_partial_read(fat_sector, offset, 2, &value);
 38453  0068DC  C032  F028         	movff	__get_empty_cluster@fat_sector,flash_partial_read@page
 38454  0068E0  C033  F029         	movff	__get_empty_cluster@fat_sector+1,flash_partial_read@page+1
 38455  0068E4  C034  F02A         	movff	__get_empty_cluster@offset,flash_partial_read@start
 38456  0068E8  C035  F02B         	movff	__get_empty_cluster@offset+1,flash_partial_read@start+1
 38457  0068EC  0E00               	movlw	0
 38458  0068EE  6E2D               	movwf	flash_partial_read@length+1,c
 38459  0068F0  0E02               	movlw	2
 38460  0068F2  6E2C               	movwf	flash_partial_read@length,c
 38461  0068F4  0E36               	movlw	low __get_empty_cluster@value
 38462  0068F6  6E2E               	movwf	flash_partial_read@data,c
 38463  0068F8  0E00               	movlw	high __get_empty_cluster@value
 38464  0068FA  6E2F               	movwf	flash_partial_read@data+1,c
 38465  0068FC  EC91  F03D         	call	_flash_partial_read	;wreg free
 38466                           
 38467                           ;fat16.c: 122: if(value==0x0000)
 38468  006900  5036               	movf	__get_empty_cluster@value,w,c
 38469  006902  1037               	iorwf	__get_empty_cluster@value+1,w,c
 38470  006904  A4D8               	btfss	status,2,c
 38471  006906  D005               	goto	l1926
 38472                           
 38473                           ;fat16.c: 123: {;fat16.c: 124: return cluster;
 38474  006908  C038  F030         	movff	__get_empty_cluster@cluster,?__get_empty_cluster
 38475  00690C  C039  F031         	movff	__get_empty_cluster@cluster+1,?__get_empty_cluster+1
 38476  006910  0012               	return	
 38477  006912                     l1926:
 38478  006912  4A38               	infsnz	__get_empty_cluster@cluster,f,c
 38479  006914  2A39               	incf	__get_empty_cluster@cluster+1,f,c
 38480  006916  D7CF               	goto	l11261
 38481  006918                     u8230:
 38482                           
 38483                           ;fat16.c: 125: };fat16.c: 126: };fat16.c: 127: return 0x0000;
 38484  006918  0E00               	movlw	0
 38485  00691A  6E31               	movwf	?__get_empty_cluster+1,c
 38486  00691C  0E00               	movlw	0
 38487  00691E  6E30               	movwf	?__get_empty_cluster,c
 38488  006920  0012               	return	
 38489  006922                     __end_of__get_empty_cluster:
 38490                           	opt stack 0
 38491                           tosu	equ	0xFFF
 38492                           tosh	equ	0xFFE
 38493                           tosl	equ	0xFFD
 38494                           pclath	equ	0xFFA
 38495                           tblptru	equ	0xFF8
 38496                           tblptrh	equ	0xFF7
 38497                           tblptrl	equ	0xFF6
 38498                           tablat	equ	0xFF5
 38499                           prodh	equ	0xFF4
 38500                           prodl	equ	0xFF3
 38501                           intcon	equ	0xFF2
 38502                           intcon2	equ	0xFF1
 38503                           intcon3	equ	0xFF0
 38504                           indf0	equ	0xFEF
 38505                           postinc0	equ	0xFEE
 38506                           fsr0h	equ	0xFEA
 38507                           fsr0l	equ	0xFE9
 38508                           wreg	equ	0xFE8
 38509                           indf1	equ	0xFE7
 38510                           postdec1	equ	0xFE5
 38511                           plusw1	equ	0xFE3
 38512                           fsr1h	equ	0xFE2
 38513                           fsr1l	equ	0xFE1
 38514                           indf2	equ	0xFDF
 38515                           postinc2	equ	0xFDE
 38516                           postdec2	equ	0xFDD
 38517                           plusw2	equ	0xFDB
 38518                           fsr2h	equ	0xFDA
 38519                           fsr2l	equ	0xFD9
 38520                           status	equ	0xFD8
 38521                           
 38522 ;; *************** function _flash_partial_read *****************
 38523 ;; Defined at:
 38524 ;;		line 457 in file "flash.c"
 38525 ;; Parameters:    Size  Location     Type
 38526 ;;  page            2   39[COMRAM] unsigned int 
 38527 ;;  start           2   41[COMRAM] unsigned int 
 38528 ;;  length          2   43[COMRAM] unsigned int 
 38529 ;;  data            2   45[COMRAM] PTR unsigned char 
 38530 ;;		 -> _spi_external_tx_buffer(64), file_buffer(50), fat_read_from_file@root(32), fat_rename_file@root(32), 
 38531 ;;		 -> fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11), _get_file_size@file_size(
      +4), 
 38532 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@value(2), _get_empty_cluster@val
      +ue(2), 
 38533 ;;		 -> _root_is_available@first_byte(1), RAM(3759), 
 38534 ;; Auto vars:     Size  Location     Type
 38535 ;;		None
 38536 ;; Return value:  Size  Location     Type
 38537 ;;                  1    wreg      void 
 38538 ;; Registers used:
 38539 ;;		wreg, status,2, status,0, cstack
 38540 ;; Tracked objects:
 38541 ;;		On entry : 0/0
 38542 ;;		On exit  : 0/0
 38543 ;;		Unchanged: 0/0
 38544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38545 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38548 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38549 ;;Total ram usage:        8 bytes
 38550 ;; Hardware stack levels used:    1
 38551 ;; Hardware stack levels required when called:    4
 38552 ;; This function calls:
 38553 ;;		__flash_partial_read
 38554 ;;		_spi_set_configuration
 38555 ;; This function is called by:
 38556 ;;		__root_is_available
 38557 ;;		__get_empty_cluster
 38558 ;;		_fat_get_empty_clusters
 38559 ;;		__read_fat
 38560 ;;		__get_first_cluster
 38561 ;;		_fat_find_file
 38562 ;;		_fat_get_file_size
 38563 ;;		_fat_read_from_file
 38564 ;;		_fat_get_file_information
 38565 ;;		__get_file_size
 38566 ;; This function uses a non-reentrant model
 38567 ;;
 38568                           
 38569                           	psect	text202
 38570  007B22                     __ptext202:
 38571                           	opt stack 0
 38572  007B22                     _flash_partial_read:
 38573                           	opt stack 23
 38574                           
 38575                           ;flash.c: 460: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 38576                           
 38577                           ;incstack = 0
 38578  007B22  0E00               	movlw	0
 38579  007B24  EC2C  F024         	call	_spi_set_configuration
 38580                           
 38581                           ;flash.c: 463: _flash_partial_read(page, start, length, data);
 38582  007B28  C028  F014         	movff	flash_partial_read@page,__flash_partial_read@page
 38583  007B2C  C029  F015         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 38584  007B30  C02A  F016         	movff	flash_partial_read@start,__flash_partial_read@start
 38585  007B34  C02B  F017         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 38586  007B38  C02C  F018         	movff	flash_partial_read@length,__flash_partial_read@length
 38587  007B3C  C02D  F019         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 38588  007B40  C02E  F01A         	movff	flash_partial_read@data,__flash_partial_read@data
 38589  007B44  C02F  F01B         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 38590  007B48  ECA6  F033         	call	__flash_partial_read	;wreg free
 38591                           
 38592                           ;flash.c: 466: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 38593  007B4C  0E01               	movlw	1
 38594  007B4E  EC2C  F024         	call	_spi_set_configuration
 38595  007B52  0012               	return		;funcret
 38596  007B54                     __end_of_flash_partial_read:
 38597                           	opt stack 0
 38598                           tosu	equ	0xFFF
 38599                           tosh	equ	0xFFE
 38600                           tosl	equ	0xFFD
 38601                           pclath	equ	0xFFA
 38602                           tblptru	equ	0xFF8
 38603                           tblptrh	equ	0xFF7
 38604                           tblptrl	equ	0xFF6
 38605                           tablat	equ	0xFF5
 38606                           prodh	equ	0xFF4
 38607                           prodl	equ	0xFF3
 38608                           intcon	equ	0xFF2
 38609                           intcon2	equ	0xFF1
 38610                           intcon3	equ	0xFF0
 38611                           indf0	equ	0xFEF
 38612                           postinc0	equ	0xFEE
 38613                           fsr0h	equ	0xFEA
 38614                           fsr0l	equ	0xFE9
 38615                           wreg	equ	0xFE8
 38616                           indf1	equ	0xFE7
 38617                           postdec1	equ	0xFE5
 38618                           plusw1	equ	0xFE3
 38619                           fsr1h	equ	0xFE2
 38620                           fsr1l	equ	0xFE1
 38621                           indf2	equ	0xFDF
 38622                           postinc2	equ	0xFDE
 38623                           postdec2	equ	0xFDD
 38624                           plusw2	equ	0xFDB
 38625                           fsr2h	equ	0xFDA
 38626                           fsr2l	equ	0xFD9
 38627                           status	equ	0xFD8
 38628                           
 38629 ;; *************** function _spi_set_configuration *****************
 38630 ;; Defined at:
 38631 ;;		line 139 in file "spi.c"
 38632 ;; Parameters:    Size  Location     Type
 38633 ;;  configuratio    1    wreg     enum E6749
 38634 ;; Auto vars:     Size  Location     Type
 38635 ;;  configuratio    1    0[COMRAM] enum E6749
 38636 ;;  cntr            1    0        unsigned char 
 38637 ;; Return value:  Size  Location     Type
 38638 ;;                  1    wreg      void 
 38639 ;; Registers used:
 38640 ;;		wreg, status,2, status,0
 38641 ;; Tracked objects:
 38642 ;;		On entry : 0/0
 38643 ;;		On exit  : 0/0
 38644 ;;		Unchanged: 0/0
 38645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38647 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38649 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38650 ;;Total ram usage:        1 bytes
 38651 ;; Hardware stack levels used:    1
 38652 ;; This function calls:
 38653 ;;		Nothing
 38654 ;; This function is called by:
 38655 ;;		_flash_init
 38656 ;;		_flash_is_busy
 38657 ;;		_flash_page_read
 38658 ;;		_flash_page_write
 38659 ;;		_flash_partial_read
 38660 ;;		_flash_partial_write
 38661 ;;		_flash_set_power_state
 38662 ;; This function uses a non-reentrant model
 38663 ;;
 38664                           
 38665                           	psect	text203
 38666  004858                     __ptext203:
 38667                           	opt stack 0
 38668  004858                     _spi_set_configuration:
 38669                           	opt stack 28
 38670                           
 38671                           ;incstack = 0
 38672                           ;spi_set_configuration@configuration stored from wreg
 38673  004858  6E01               	movwf	spi_set_configuration@configuration,c
 38674                           
 38675                           ;spi.c: 141: uint8_t cntr;;spi.c: 144: switch(configuration)
 38676  00485A  D076               	goto	l2795
 38677  00485C                     l2796:
 38678                           
 38679                           ;spi.c: 152: DMACON1bits.DMAEN = 0;
 38680  00485C  9088               	bcf	3976,0,c	;volatile
 38681                           
 38682                           ;spi.c: 153: SSP2CON1bits.SSPEN = 0;
 38683  00485E  9A72               	bcf	3954,5,c	;volatile
 38684                           
 38685                           ;spi.c: 156: TRISDbits.TRISD6 = 1;
 38686  004860  8C95               	bsf	3989,6,c	;volatile
 38687                           
 38688                           ;spi.c: 157: TRISDbits.TRISD4 = 0;
 38689  004862  9895               	bcf	3989,4,c	;volatile
 38690                           
 38691                           ;spi.c: 158: LATDbits.LD4 = 0;
 38692  004864  988C               	bcf	3980,4,c	;volatile
 38693                           
 38694                           ;spi.c: 159: TRISDbits.TRISD5 = 0;
 38695  004866  9A95               	bcf	3989,5,c	;volatile
 38696                           
 38697                           ;spi.c: 160: LATDbits.LD5 = 0;
 38698  004868  9A8C               	bcf	3980,5,c	;volatile
 38699                           
 38700                           ;spi.c: 161: TRISDbits.TRISD7 = 0;
 38701  00486A  9E95               	bcf	3989,7,c	;volatile
 38702                           
 38703                           ;spi.c: 162: LATDbits.LD7 = 1;
 38704  00486C  8E8C               	bsf	3980,7,c	;volatile
 38705                           
 38706                           ;spi.c: 165: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 38707  00486E  0E55               	movlw	85
 38708  004870  6EA7               	movwf	4007,c	;volsfr
 38709  004872  0EAA               	movlw	170
 38710  004874  6EA7               	movwf	4007,c	;volsfr
 38711  004876  010E               	movlb	14	; () banked
 38712  004878  91BF               	bcf	191,0,b	;volatile
 38713                           
 38714                           ;spi.c: 167: RPOR23 = 0b00000;
 38715  00487A  0E00               	movlw	0
 38716  00487C  6FD7               	movwf	215,b	;volatile
 38717                           
 38718                           ;spi.c: 168: RPINR21 = 0b11111;
 38719  00487E  0E1F               	movlw	31
 38720  004880  6FFC               	movwf	252,b	;volatile
 38721                           
 38722                           ;spi.c: 169: RPINR23 = 0b11111;
 38723  004882  0E1F               	movlw	31
 38724  004884  6FFE               	movwf	254,b	;volatile
 38725                           
 38726                           ;spi.c: 171: RPINR21 = 23;
 38727  004886  0E17               	movlw	23
 38728  004888  6FFC               	movwf	252,b	;volatile
 38729                           
 38730                           ;spi.c: 172: RPOR21 = 10;
 38731  00488A  0E0A               	movlw	10
 38732  00488C  6FD5               	movwf	213,b	;volatile
 38733                           
 38734                           ;spi.c: 174: RPOR22 = 11;
 38735  00488E  0E0B               	movlw	11
 38736  004890  6FD6               	movwf	214,b	;volatile
 38737                           
 38738                           ;spi.c: 175: RPINR22 = 22;
 38739  004892  0E16               	movlw	22
 38740  004894  6FFD               	movwf	253,b	;volatile
 38741                           
 38742                           ;spi.c: 176: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 38743  004896  0E55               	movlw	85
 38744  004898  6EA7               	movwf	4007,c	;volsfr
 38745  00489A  0EAA               	movlw	170
 38746  00489C  6EA7               	movwf	4007,c	;volsfr
 38747                           
 38748                           ; BSR set to: 14
 38749  00489E  81BF               	bsf	191,0,b	;volatile
 38750                           
 38751                           ; BSR set to: 14
 38752                           ;spi.c: 179: SSP2STATbits.SMP = 1;
 38753  0048A0  8E73               	bsf	3955,7,c	;volatile
 38754                           
 38755                           ; BSR set to: 14
 38756                           ;spi.c: 180: SSP2STATbits.CKE = 1;
 38757  0048A2  8C73               	bsf	3955,6,c	;volatile
 38758                           
 38759                           ; BSR set to: 14
 38760                           ;spi.c: 181: SSP2CON1bits.WCOL = 0;
 38761  0048A4  9E72               	bcf	3954,7,c	;volatile
 38762                           
 38763                           ; BSR set to: 14
 38764                           ;spi.c: 182: SSP2CON1bits.SSPOV = 0;
 38765  0048A6  9C72               	bcf	3954,6,c	;volatile
 38766                           
 38767                           ; BSR set to: 14
 38768                           ;spi.c: 183: SSP2CON1bits.CKP = 0;
 38769  0048A8  9872               	bcf	3954,4,c	;volatile
 38770                           
 38771                           ; BSR set to: 14
 38772                           ;spi.c: 184: SSP2CON1bits.SSPM =0b0000;
 38773  0048AA  9072               	bcf	3954,0,c	;volatile
 38774  0048AC  9272               	bcf	3954,1,c	;volatile
 38775  0048AE  9472               	bcf	3954,2,c	;volatile
 38776  0048B0  9672               	bcf	3954,3,c	;volatile
 38777                           
 38778                           ; BSR set to: 14
 38779                           ;spi.c: 185: SSP2CON1bits.SSPEN = 1;
 38780  0048B2  8A72               	bsf	3954,5,c	;volatile
 38781                           
 38782                           ;spi.c: 188: active_configuration = SPI_CONFIGURATION_INTERNAL;
 38783  0048B4  0E00               	movlw	0
 38784  0048B6  0100               	movlb	0	; () banked
 38785  0048B8  6F94               	movwf	_active_configuration& (0+255),b
 38786                           
 38787                           ;spi.c: 189: break;
 38788  0048BA  0012               	return	
 38789  0048BC                     l2798:
 38790                           
 38791                           ;spi.c: 193: DMACON1bits.DMAEN = 0;
 38792  0048BC  9088               	bcf	3976,0,c	;volatile
 38793                           
 38794                           ;spi.c: 194: SSP2CON1bits.SSPEN = 0;
 38795  0048BE  9A72               	bcf	3954,5,c	;volatile
 38796                           
 38797                           ;spi.c: 197: ODCON3bits.SPI2OD = 0;
 38798  0048C0  010F               	movlb	15	; () banked
 38799  0048C2  9340               	bcf	64,1,b	;volatile
 38800                           
 38801                           ; BSR set to: 15
 38802                           ;spi.c: 200: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 38803  0048C4  0E55               	movlw	85
 38804  0048C6  6EA7               	movwf	4007,c	;volsfr
 38805  0048C8  0EAA               	movlw	170
 38806  0048CA  6EA7               	movwf	4007,c	;volsfr
 38807                           
 38808                           ; BSR set to: 15
 38809  0048CC  010E               	movlb	14	; () banked
 38810  0048CE  91BF               	bcf	191,0,b	;volatile
 38811                           
 38812                           ;spi.c: 201: RPOR23 = 10;
 38813  0048D0  0E0A               	movlw	10
 38814  0048D2  6FD7               	movwf	215,b	;volatile
 38815                           
 38816                           ;spi.c: 202: RPINR21 = 21;
 38817  0048D4  0E15               	movlw	21
 38818  0048D6  6FFC               	movwf	252,b	;volatile
 38819                           
 38820                           ;spi.c: 203: RPINR22 = 22;
 38821  0048D8  0E16               	movlw	22
 38822  0048DA  6FFD               	movwf	253,b	;volatile
 38823                           
 38824                           ;spi.c: 204: RPINR23 = 19;
 38825  0048DC  0E13               	movlw	19
 38826  0048DE  6FFE               	movwf	254,b	;volatile
 38827                           
 38828                           ;spi.c: 205: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 38829  0048E0  0E55               	movlw	85
 38830  0048E2  6EA7               	movwf	4007,c	;volsfr
 38831  0048E4  0EAA               	movlw	170
 38832  0048E6  6EA7               	movwf	4007,c	;volsfr
 38833                           
 38834                           ; BSR set to: 14
 38835  0048E8  81BF               	bsf	191,0,b	;volatile
 38836                           
 38837                           ; BSR set to: 14
 38838                           ;spi.c: 207: SSP2CON1bits.SSPEN = 0;
 38839  0048EA  9A72               	bcf	3954,5,c	;volatile
 38840                           
 38841                           ; BSR set to: 14
 38842                           ;spi.c: 215: TRISDbits.TRISD5 = 1;
 38843  0048EC  8A95               	bsf	3989,5,c	;volatile
 38844                           
 38845                           ; BSR set to: 14
 38846                           ;spi.c: 216: TRISDbits.TRISD4 = 1;
 38847  0048EE  8895               	bsf	3989,4,c	;volatile
 38848                           
 38849                           ; BSR set to: 14
 38850                           ;spi.c: 219: TRISDbits.TRISD6 = 0;
 38851  0048F0  9C95               	bcf	3989,6,c	;volatile
 38852                           
 38853                           ; BSR set to: 14
 38854                           ;spi.c: 220: LATDbits.LD6 = 1;
 38855  0048F2  8C8C               	bsf	3980,6,c	;volatile
 38856                           
 38857                           ; BSR set to: 14
 38858                           ;spi.c: 223: TRISDbits.TRISD2 = 1;
 38859  0048F4  8495               	bsf	3989,2,c	;volatile
 38860                           
 38861                           ; BSR set to: 14
 38862                           ;spi.c: 229: SSP2STATbits.SMP = 0;
 38863  0048F6  9E73               	bcf	3955,7,c	;volatile
 38864                           
 38865                           ; BSR set to: 14
 38866                           ;spi.c: 230: SSP2STATbits.CKE = 1;
 38867  0048F8  8C73               	bsf	3955,6,c	;volatile
 38868                           
 38869                           ; BSR set to: 14
 38870                           ;spi.c: 231: SSP2CON1bits.WCOL = 0;
 38871  0048FA  9E72               	bcf	3954,7,c	;volatile
 38872                           
 38873                           ; BSR set to: 14
 38874                           ;spi.c: 232: SSP2CON1bits.SSPOV = 0;
 38875  0048FC  9C72               	bcf	3954,6,c	;volatile
 38876                           
 38877                           ; BSR set to: 14
 38878                           ;spi.c: 233: SSP2CON1bits.CKP = 0;
 38879  0048FE  9872               	bcf	3954,4,c	;volatile
 38880                           
 38881                           ; BSR set to: 14
 38882                           ;spi.c: 234: SSP2CON1bits.SSPM =0b0100;
 38883  004900  5072               	movf	3954,w,c	;volatile
 38884  004902  0BF0               	andlw	-16
 38885  004904  0904               	iorlw	4
 38886  004906  6E72               	movwf	3954,c	;volatile
 38887                           
 38888                           ; BSR set to: 14
 38889                           ;spi.c: 235: PIR3bits.SSP2IF = 0;
 38890  004908  9EA4               	bcf	4004,7,c	;volatile
 38891                           
 38892                           ; BSR set to: 14
 38893                           ;spi.c: 236: SSP2CON1bits.SSPEN = 1;
 38894  00490A  8A72               	bsf	3954,5,c	;volatile
 38895                           
 38896                           ; BSR set to: 14
 38897                           ;spi.c: 239: DMACON1bits.TXINC = 1;
 38898  00490C  8A88               	bsf	3976,5,c	;volatile
 38899                           
 38900                           ; BSR set to: 14
 38901                           ;spi.c: 240: DMACON1bits.RXINC = 1;
 38902  00490E  8888               	bsf	3976,4,c	;volatile
 38903                           
 38904                           ; BSR set to: 14
 38905                           ;spi.c: 241: DMACON1bits.DUPLEX1 = 1;
 38906  004910  8688               	bsf	3976,3,c	;volatile
 38907                           
 38908                           ; BSR set to: 14
 38909                           ;spi.c: 242: DMACON1bits.DUPLEX0 = 0;
 38910  004912  9488               	bcf	3976,2,c	;volatile
 38911                           
 38912                           ; BSR set to: 14
 38913                           ;spi.c: 243: DMACON1bits.DLYINTEN = 0;
 38914  004914  9288               	bcf	3976,1,c	;volatile
 38915                           
 38916                           ; BSR set to: 14
 38917                           ;spi.c: 245: DMACON2bits.DLYCYC = 0b0000;
 38918  004916  9886               	bcf	3974,4,c	;volatile
 38919  004918  9A86               	bcf	3974,5,c	;volatile
 38920  00491A  9C86               	bcf	3974,6,c	;volatile
 38921  00491C  9E86               	bcf	3974,7,c	;volatile
 38922                           
 38923                           ; BSR set to: 14
 38924                           ;spi.c: 246: DMACON2bits.INTLVL = 0b0000;
 38925  00491E  9086               	bcf	3974,0,c	;volatile
 38926  004920  9286               	bcf	3974,1,c	;volatile
 38927  004922  9486               	bcf	3974,2,c	;volatile
 38928  004924  9686               	bcf	3974,3,c	;volatile
 38929                           
 38930                           ; BSR set to: 14
 38931                           ;spi.c: 249: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
 38932  004926  0E00               	movlw	0
 38933  004928  6E66               	movwf	3942,c	;volatile
 38934                           
 38935                           ; BSR set to: 14
 38936                           ;spi.c: 250: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
 38937  00492A  0E3F               	movlw	63
 38938  00492C  6E67               	movwf	3943,c	;volatile
 38939                           
 38940                           ; BSR set to: 14
 38941                           ;spi.c: 253: TXADDRH = ((unsigned char)((((uint16_t) _spi_external_tx_buffer)>>8)&0xFF))
      +                          ;
 38942  00492E  0E02               	movlw	high __spi_external_tx_buffer
 38943  004930  6E6A               	movwf	3946,c	;volatile
 38944                           
 38945                           ; BSR set to: 14
 38946                           ;spi.c: 254: TXADDRL = ((unsigned char)(((uint16_t) _spi_external_tx_buffer)&0xFF));
 38947  004932  0E40               	movlw	low (low __spi_external_tx_buffer)
 38948  004934  6E6B               	movwf	3947,c	;volatile
 38949                           
 38950                           ; BSR set to: 14
 38951                           ;spi.c: 257: RXADDRH = ((unsigned char)((((uint16_t) _spi_external_rx_buffer)>>8)&0xFF))
      +                          ;
 38952  004936  0E02               	movlw	high __spi_external_rx_buffer
 38953  004938  6E68               	movwf	3944,c	;volatile
 38954                           
 38955                           ; BSR set to: 14
 38956                           ;spi.c: 258: RXADDRL = ((unsigned char)(((uint16_t) _spi_external_rx_buffer)&0xFF));
 38957  00493A  0E00               	movlw	low (low __spi_external_rx_buffer)
 38958  00493C  6E69               	movwf	3945,c	;volatile
 38959                           
 38960                           ; BSR set to: 14
 38961                           ;spi.c: 260: DMACON1bits.DMAEN = 1;
 38962  00493E  8088               	bsf	3976,0,c	;volatile
 38963                           
 38964                           ; BSR set to: 14
 38965                           ;spi.c: 328: active_configuration = SPI_CONFIGURATION_EXTERNAL;
 38966  004940  0E01               	movlw	1
 38967  004942  0100               	movlb	0	; () banked
 38968  004944  6F94               	movwf	_active_configuration& (0+255),b
 38969                           
 38970                           ; BSR set to: 0
 38971                           ;spi.c: 330: }
 38972                           
 38973                           ;spi.c: 329: break;
 38974  004946  0012               	return	
 38975  004948                     l2795:
 38976                           
 38977                           ; BSR set to: 0
 38978  004948  5001               	movf	spi_set_configuration@configuration,w,c
 38979                           
 38980                           ; Switch size 1, requested type "space"
 38981                           ; Number of cases is 2, Range of values is 0 to 1
 38982                           ; switch strategies available:
 38983                           ; Name         Instructions Cycles
 38984                           ; simple_byte            7     4 (average)
 38985                           ;	Chosen strategy is simple_byte
 38986  00494A  0A00               	xorlw	0	; case 0
 38987  00494C  B4D8               	btfsc	status,2,c
 38988  00494E  D786               	goto	l2796
 38989  004950  0A01               	xorlw	1	; case 1
 38990  004952  A4D8               	btfss	status,2,c
 38991  004954  0012               	return	
 38992  004956  D7B2               	goto	l2798
 38993  004958                     __end_of_spi_set_configuration:
 38994                           	opt stack 0
 38995                           tosu	equ	0xFFF
 38996                           tosh	equ	0xFFE
 38997                           tosl	equ	0xFFD
 38998                           pclath	equ	0xFFA
 38999                           tblptru	equ	0xFF8
 39000                           tblptrh	equ	0xFF7
 39001                           tblptrl	equ	0xFF6
 39002                           tablat	equ	0xFF5
 39003                           prodh	equ	0xFF4
 39004                           prodl	equ	0xFF3
 39005                           intcon	equ	0xFF2
 39006                           intcon2	equ	0xFF1
 39007                           intcon3	equ	0xFF0
 39008                           indf0	equ	0xFEF
 39009                           postinc0	equ	0xFEE
 39010                           fsr0h	equ	0xFEA
 39011                           fsr0l	equ	0xFE9
 39012                           wreg	equ	0xFE8
 39013                           indf1	equ	0xFE7
 39014                           postdec1	equ	0xFE5
 39015                           plusw1	equ	0xFE3
 39016                           fsr1h	equ	0xFE2
 39017                           fsr1l	equ	0xFE1
 39018                           indf2	equ	0xFDF
 39019                           postinc2	equ	0xFDE
 39020                           postdec2	equ	0xFDD
 39021                           plusw2	equ	0xFDB
 39022                           fsr2h	equ	0xFDA
 39023                           fsr2l	equ	0xFD9
 39024                           status	equ	0xFD8
 39025                           
 39026 ;; *************** function __flash_partial_read *****************
 39027 ;; Defined at:
 39028 ;;		line 305 in file "flash.c"
 39029 ;; Parameters:    Size  Location     Type
 39030 ;;  page            2   19[COMRAM] unsigned int 
 39031 ;;  start           2   21[COMRAM] unsigned int 
 39032 ;;  length          2   23[COMRAM] unsigned int 
 39033 ;;  data            2   25[COMRAM] PTR unsigned char 
 39034 ;;		 -> _spi_external_tx_buffer(64), file_buffer(50), buffer(512), fat_read_from_file@root(32), 
 39035 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11),
      + 
 39036 ;;		 -> _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@val
      +ue(2), 
 39037 ;;		 -> _get_empty_cluster@value(2), _root_is_available@first_byte(1), msd_buffer(512), RAM(3759), 
 39038 ;; Auto vars:     Size  Location     Type
 39039 ;;  command         4   31[COMRAM] unsigned char [4]
 39040 ;;  address         4   35[COMRAM] unsigned long 
 39041 ;; Return value:  Size  Location     Type
 39042 ;;                  1    wreg      void 
 39043 ;; Registers used:
 39044 ;;		wreg, status,2, status,0, cstack
 39045 ;; Tracked objects:
 39046 ;;		On entry : 0/0
 39047 ;;		On exit  : 0/0
 39048 ;;		Unchanged: 0/0
 39049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39050 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39051 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39052 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39053 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39054 ;;Total ram usage:       20 bytes
 39055 ;; Hardware stack levels used:    1
 39056 ;; Hardware stack levels required when called:    3
 39057 ;; This function calls:
 39058 ;;		__flash_is_busy
 39059 ;;		_spi_tx_rx
 39060 ;; This function is called by:
 39061 ;;		_flash_page_read
 39062 ;;		_flash_partial_read
 39063 ;; This function uses a non-reentrant model
 39064 ;;
 39065                           
 39066                           	psect	text204
 39067  00674C                     __ptext204:
 39068                           	opt stack 0
 39069  00674C                     __flash_partial_read:
 39070                           	opt stack 23
 39071                           
 39072                           ;flash.c: 307: uint32_t address;;flash.c: 308: uint8_t command[4];;flash.c: 311: while(_
      +                          flash_is_busy());
 39073                           
 39074                           ;incstack = 0
 39075  00674C  EC16  F03F         	call	__flash_is_busy	;wreg free
 39076  006750  0900               	iorlw	0
 39077  006752  A4D8               	btfss	status,2,c
 39078  006754  D7FB               	goto	__flash_partial_read
 39079                           
 39080                           ;flash.c: 314: address = page;
 39081  006756  C014  F024         	movff	__flash_partial_read@page,__flash_partial_read@address
 39082  00675A  C015  F025         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 39083  00675E  6A26               	clrf	__flash_partial_read@address+2,c
 39084  006760  6A27               	clrf	__flash_partial_read@address+3,c
 39085                           
 39086                           ;flash.c: 315: address <<= 9;
 39087  006762  0E09               	movlw	9
 39088  006764                     u6505:
 39089  006764  90D8               	bcf	status,0,c
 39090  006766  3624               	rlcf	__flash_partial_read@address,f,c
 39091  006768  3625               	rlcf	__flash_partial_read@address+1,f,c
 39092  00676A  3626               	rlcf	__flash_partial_read@address+2,f,c
 39093  00676C  3627               	rlcf	__flash_partial_read@address+3,f,c
 39094  00676E  2EE8               	decfsz	wreg,f,c
 39095  006770  D7F9               	goto	u6505
 39096                           
 39097                           ;flash.c: 316: address |= start;
 39098  006772  5016               	movf	__flash_partial_read@start,w,c
 39099  006774  6E1C               	movwf	??__flash_partial_read& (0+255),c
 39100  006776  5017               	movf	__flash_partial_read@start+1,w,c
 39101  006778  6E1D               	movwf	(??__flash_partial_read+1)& (0+255),c
 39102  00677A  6A1E               	clrf	(??__flash_partial_read+2)& (0+255),c
 39103  00677C  6A1F               	clrf	(??__flash_partial_read+3)& (0+255),c
 39104  00677E  501C               	movf	??__flash_partial_read,w,c
 39105  006780  1224               	iorwf	__flash_partial_read@address,f,c
 39106  006782  501D               	movf	??__flash_partial_read+1,w,c
 39107  006784  1225               	iorwf	__flash_partial_read@address+1,f,c
 39108  006786  501E               	movf	??__flash_partial_read+2,w,c
 39109  006788  1226               	iorwf	__flash_partial_read@address+2,f,c
 39110  00678A  501F               	movf	??__flash_partial_read+3,w,c
 39111  00678C  1227               	iorwf	__flash_partial_read@address+3,f,c
 39112                           
 39113                           ;flash.c: 319: command[0] = 0x03;
 39114  00678E  0E03               	movlw	3
 39115  006790  6E20               	movwf	__flash_partial_read@command,c
 39116                           
 39117                           ;flash.c: 320: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 39118  006792  C026  F021         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 39119                           
 39120                           ;flash.c: 321: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 39121  006796  5025               	movf	__flash_partial_read@address+1,w,c
 39122  006798  6E22               	movwf	__flash_partial_read@command+2,c
 39123                           
 39124                           ;flash.c: 322: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 39125  00679A  C024  F023         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 39126                           
 39127                           ;flash.c: 325: spi_tx_rx(command, 4, data, length);
 39128  00679E  0E20               	movlw	low __flash_partial_read@command
 39129  0067A0  6E01               	movwf	spi_tx_rx@command,c
 39130  0067A2  0E00               	movlw	high __flash_partial_read@command
 39131  0067A4  6E02               	movwf	spi_tx_rx@command+1,c
 39132  0067A6  0E00               	movlw	0
 39133  0067A8  6E04               	movwf	spi_tx_rx@command_length+1,c
 39134  0067AA  0E04               	movlw	4
 39135  0067AC  6E03               	movwf	spi_tx_rx@command_length,c
 39136  0067AE  C01A  F005         	movff	__flash_partial_read@data,spi_tx_rx@data
 39137  0067B2  C01B  F006         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 39138  0067B6  C018  F007         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 39139  0067BA  C019  F008         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 39140  0067BE  EC7C  F030         	call	_spi_tx_rx	;wreg free
 39141  0067C2  0012               	return		;funcret
 39142  0067C4                     __end_of__flash_partial_read:
 39143                           	opt stack 0
 39144                           tosu	equ	0xFFF
 39145                           tosh	equ	0xFFE
 39146                           tosl	equ	0xFFD
 39147                           pclath	equ	0xFFA
 39148                           tblptru	equ	0xFF8
 39149                           tblptrh	equ	0xFF7
 39150                           tblptrl	equ	0xFF6
 39151                           tablat	equ	0xFF5
 39152                           prodh	equ	0xFF4
 39153                           prodl	equ	0xFF3
 39154                           intcon	equ	0xFF2
 39155                           intcon2	equ	0xFF1
 39156                           intcon3	equ	0xFF0
 39157                           indf0	equ	0xFEF
 39158                           postinc0	equ	0xFEE
 39159                           fsr0h	equ	0xFEA
 39160                           fsr0l	equ	0xFE9
 39161                           wreg	equ	0xFE8
 39162                           indf1	equ	0xFE7
 39163                           postdec1	equ	0xFE5
 39164                           plusw1	equ	0xFE3
 39165                           fsr1h	equ	0xFE2
 39166                           fsr1l	equ	0xFE1
 39167                           indf2	equ	0xFDF
 39168                           postinc2	equ	0xFDE
 39169                           postdec2	equ	0xFDD
 39170                           plusw2	equ	0xFDB
 39171                           fsr2h	equ	0xFDA
 39172                           fsr2l	equ	0xFD9
 39173                           status	equ	0xFD8
 39174                           
 39175 ;; *************** function __flash_is_busy *****************
 39176 ;; Defined at:
 39177 ;;		line 277 in file "flash.c"
 39178 ;; Parameters:    Size  Location     Type
 39179 ;;		None
 39180 ;; Auto vars:     Size  Location     Type
 39181 ;;  status          2   17[COMRAM] unsigned int 
 39182 ;; Return value:  Size  Location     Type
 39183 ;;                  1    wreg      unsigned char 
 39184 ;; Registers used:
 39185 ;;		wreg, status,2, status,0, cstack
 39186 ;; Tracked objects:
 39187 ;;		On entry : 0/0
 39188 ;;		On exit  : 0/0
 39189 ;;		Unchanged: 0/0
 39190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39192 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39194 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39195 ;;Total ram usage:        2 bytes
 39196 ;; Hardware stack levels used:    1
 39197 ;; Hardware stack levels required when called:    2
 39198 ;; This function calls:
 39199 ;;		__flash_get_status
 39200 ;;		__flash_wakeup
 39201 ;; This function is called by:
 39202 ;;		__flash_set_page_size
 39203 ;;		__flash_copy_page_to_buffer
 39204 ;;		__flash_compare_page_to_buffer
 39205 ;;		__flash_write_to_buffer
 39206 ;;		__flash_write_page_from_buffer
 39207 ;;		__flash_partial_read
 39208 ;;		_flash_is_busy
 39209 ;;		__flash_erase_page
 39210 ;;		_flash_set_power_state
 39211 ;; This function uses a non-reentrant model
 39212 ;;
 39213                           
 39214                           	psect	text205
 39215  007E2C                     __ptext205:
 39216                           	opt stack 0
 39217  007E2C                     __flash_is_busy:
 39218                           	opt stack 25
 39219                           
 39220                           ;flash.c: 279: uint16_t status;;flash.c: 282: if(power_state!=FLASH_POWER_STATE_NORMAL)
 39221                           
 39222                           ;incstack = 0
 39223  007E2C  0100               	movlb	0	; () banked
 39224  007E2E  5197               	movf	_power_state& (0+255),w,b
 39225  007E30  A4D8               	btfss	status,2,c
 39226                           
 39227                           ; BSR set to: 0
 39228                           ;flash.c: 283: {;flash.c: 284: _flash_wakeup();
 39229  007E32  EC0B  F03A         	call	__flash_wakeup	;wreg free
 39230                           
 39231                           ;flash.c: 285: };flash.c: 288: status = _flash_get_status();
 39232  007E36  ECAA  F03D         	call	__flash_get_status	;wreg free
 39233  007E3A  C00D  F012         	movff	?__flash_get_status,__flash_is_busy@status
 39234  007E3E  C00E  F013         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 39235                           
 39236                           ;flash.c: 291: if(status & 0b0000000010000000)
 39237  007E42  AE12               	btfss	__flash_is_busy@status,7,c
 39238  007E44  D002               	goto	l1797
 39239                           
 39240                           ;flash.c: 292: {;flash.c: 294: return 0;
 39241  007E46  0E00               	movlw	0
 39242                           
 39243                           ;flash.c: 295: }
 39244  007E48  0012               	return	
 39245  007E4A                     l1797:
 39246                           
 39247                           ;flash.c: 296: else;flash.c: 297: {;flash.c: 299: return 1;
 39248  007E4A  0E01               	movlw	1
 39249  007E4C  0012               	return	
 39250  007E4E                     __end_of__flash_is_busy:
 39251                           	opt stack 0
 39252                           tosu	equ	0xFFF
 39253                           tosh	equ	0xFFE
 39254                           tosl	equ	0xFFD
 39255                           pclath	equ	0xFFA
 39256                           tblptru	equ	0xFF8
 39257                           tblptrh	equ	0xFF7
 39258                           tblptrl	equ	0xFF6
 39259                           tablat	equ	0xFF5
 39260                           prodh	equ	0xFF4
 39261                           prodl	equ	0xFF3
 39262                           intcon	equ	0xFF2
 39263                           intcon2	equ	0xFF1
 39264                           intcon3	equ	0xFF0
 39265                           indf0	equ	0xFEF
 39266                           postinc0	equ	0xFEE
 39267                           fsr0h	equ	0xFEA
 39268                           fsr0l	equ	0xFE9
 39269                           wreg	equ	0xFE8
 39270                           indf1	equ	0xFE7
 39271                           postdec1	equ	0xFE5
 39272                           plusw1	equ	0xFE3
 39273                           fsr1h	equ	0xFE2
 39274                           fsr1l	equ	0xFE1
 39275                           indf2	equ	0xFDF
 39276                           postinc2	equ	0xFDE
 39277                           postdec2	equ	0xFDD
 39278                           plusw2	equ	0xFDB
 39279                           fsr2h	equ	0xFDA
 39280                           fsr2l	equ	0xFD9
 39281                           status	equ	0xFD8
 39282                           
 39283 ;; *************** function __flash_wakeup *****************
 39284 ;; Defined at:
 39285 ;;		line 124 in file "flash.c"
 39286 ;; Parameters:    Size  Location     Type
 39287 ;;		None
 39288 ;; Auto vars:     Size  Location     Type
 39289 ;;  command         1    8[COMRAM] unsigned char 
 39290 ;; Return value:  Size  Location     Type
 39291 ;;                  1    wreg      void 
 39292 ;; Registers used:
 39293 ;;		wreg, status,2, status,0, cstack
 39294 ;; Tracked objects:
 39295 ;;		On entry : 0/0
 39296 ;;		On exit  : 0/0
 39297 ;;		Unchanged: 0/0
 39298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39300 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39302 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39303 ;;Total ram usage:        1 bytes
 39304 ;; Hardware stack levels used:    1
 39305 ;; Hardware stack levels required when called:    1
 39306 ;; This function calls:
 39307 ;;		_spi_tx
 39308 ;; This function is called by:
 39309 ;;		__flash_is_busy
 39310 ;;		_flash_set_power_state
 39311 ;; This function uses a non-reentrant model
 39312 ;;
 39313                           
 39314                           	psect	text206
 39315  007416                     __ptext206:
 39316                           	opt stack 0
 39317  007416                     __flash_wakeup:
 39318                           	opt stack 25
 39319                           
 39320                           ;flash.c: 126: uint8_t command;;flash.c: 128: switch(power_state)
 39321                           
 39322                           ;incstack = 0
 39323  007416  D021               	goto	l1746
 39324  007418                     
 39325                           ;flash.c: 131: command = 0xAB;
 39326  007418  0EAB               	movlw	171
 39327  00741A  6E09               	movwf	__flash_wakeup@command,c
 39328                           
 39329                           ;flash.c: 132: spi_tx(&command, 1);
 39330  00741C  0E09               	movlw	low __flash_wakeup@command
 39331  00741E  6E01               	movwf	spi_tx@data,c
 39332  007420  0E00               	movlw	high __flash_wakeup@command
 39333  007422  6E02               	movwf	spi_tx@data+1,c
 39334  007424  0E00               	movlw	0
 39335  007426  6E04               	movwf	spi_tx@length+1,c
 39336  007428  0E01               	movlw	1
 39337  00742A  6E03               	movwf	spi_tx@length,c
 39338  00742C  EC08  F039         	call	_spi_tx	;wreg free
 39339                           
 39340                           ;flash.c: 133: _delay((unsigned long)((35)*(8000000/4000000.0)));
 39341  007430  0E17               	movlw	23
 39342  007432                     u12087:
 39343  007432  2EE8               	decfsz	wreg,f,c
 39344  007434  D7FE               	bra	u12087
 39345  007436  F000               	nop	
 39346                           
 39347                           ;flash.c: 134: power_state = FLASH_POWER_STATE_NORMAL;
 39348  007438  0E00               	movlw	0
 39349  00743A  0100               	movlb	0	; () banked
 39350  00743C  6F97               	movwf	_power_state& (0+255),b
 39351                           
 39352                           ;flash.c: 135: break;
 39353  00743E  0012               	return	
 39354  007440                     l1749:
 39355                           
 39356                           ; BSR set to: 0
 39357                           ;flash.c: 140: LATDbits.LD7 = 0;
 39358  007440  9E8C               	bcf	3980,7,c	;volatile
 39359                           
 39360                           ; BSR set to: 0
 39361                           ;flash.c: 141: _delay((unsigned long)((20)*(8000000/4000000.0)));
 39362  007442  0E0D               	movlw	13
 39363  007444                     u12097:
 39364  007444  2EE8               	decfsz	wreg,f,c
 39365  007446  D7FE               	bra	u12097
 39366  007448  F000               	nop	
 39367                           
 39368                           ;flash.c: 142: LATDbits.LD7 = 1;
 39369  00744A  8E8C               	bsf	3980,7,c	;volatile
 39370                           
 39371                           ;flash.c: 143: _delay((unsigned long)((120)*(8000000/4000000.0)));
 39372  00744C  0E50               	movlw	80
 39373  00744E                     u12107:
 39374  00744E  2EE8               	decfsz	wreg,f,c
 39375  007450  D7FE               	bra	u12107
 39376                           
 39377                           ;flash.c: 144: power_state = FLASH_POWER_STATE_NORMAL;
 39378  007452  0E00               	movlw	0
 39379  007454  0100               	movlb	0	; () banked
 39380  007456  6F97               	movwf	_power_state& (0+255),b
 39381                           
 39382                           ; BSR set to: 0
 39383                           ;flash.c: 146: }
 39384                           
 39385                           ;flash.c: 145: break;
 39386  007458  0012               	return	
 39387  00745A                     l1746:
 39388                           
 39389                           ; BSR set to: 0
 39390  00745A  0100               	movlb	0	; () banked
 39391  00745C  5197               	movf	_power_state& (0+255),w,b
 39392                           
 39393                           ; Switch size 1, requested type "space"
 39394                           ; Number of cases is 2, Range of values is 1 to 2
 39395                           ; switch strategies available:
 39396                           ; Name         Instructions Cycles
 39397                           ; simple_byte            7     4 (average)
 39398                           ;	Chosen strategy is simple_byte
 39399  00745E  0A01               	xorlw	1	; case 1
 39400  007460  B4D8               	btfsc	status,2,c
 39401  007462  D7DA               	goto	l1747
 39402  007464  0A03               	xorlw	3	; case 2
 39403  007466  A4D8               	btfss	status,2,c
 39404  007468  0012               	return	
 39405  00746A  D7EA               	goto	l1749
 39406  00746C                     __end_of__flash_wakeup:
 39407                           	opt stack 0
 39408                           tosu	equ	0xFFF
 39409                           tosh	equ	0xFFE
 39410                           tosl	equ	0xFFD
 39411                           pclath	equ	0xFFA
 39412                           tblptru	equ	0xFF8
 39413                           tblptrh	equ	0xFF7
 39414                           tblptrl	equ	0xFF6
 39415                           tablat	equ	0xFF5
 39416                           prodh	equ	0xFF4
 39417                           prodl	equ	0xFF3
 39418                           intcon	equ	0xFF2
 39419                           intcon2	equ	0xFF1
 39420                           intcon3	equ	0xFF0
 39421                           indf0	equ	0xFEF
 39422                           postinc0	equ	0xFEE
 39423                           fsr0h	equ	0xFEA
 39424                           fsr0l	equ	0xFE9
 39425                           wreg	equ	0xFE8
 39426                           indf1	equ	0xFE7
 39427                           postdec1	equ	0xFE5
 39428                           plusw1	equ	0xFE3
 39429                           fsr1h	equ	0xFE2
 39430                           fsr1l	equ	0xFE1
 39431                           indf2	equ	0xFDF
 39432                           postinc2	equ	0xFDE
 39433                           postdec2	equ	0xFDD
 39434                           plusw2	equ	0xFDB
 39435                           fsr2h	equ	0xFDA
 39436                           fsr2l	equ	0xFD9
 39437                           status	equ	0xFD8
 39438                           
 39439 ;; *************** function _spi_tx *****************
 39440 ;; Defined at:
 39441 ;;		line 341 in file "spi.c"
 39442 ;; Parameters:    Size  Location     Type
 39443 ;;  data            2    0[COMRAM] PTR unsigned char 
 39444 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 39445 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 39446 ;;  length          2    2[COMRAM] unsigned int 
 39447 ;; Auto vars:     Size  Location     Type
 39448 ;;		None
 39449 ;; Return value:  Size  Location     Type
 39450 ;;                  1    wreg      void 
 39451 ;; Registers used:
 39452 ;;		wreg, status,2, status,0
 39453 ;; Tracked objects:
 39454 ;;		On entry : 0/0
 39455 ;;		On exit  : 0/0
 39456 ;;		Unchanged: 0/0
 39457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39458 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39460 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39461 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39462 ;;Total ram usage:        8 bytes
 39463 ;; Hardware stack levels used:    1
 39464 ;; This function calls:
 39465 ;;		Nothing
 39466 ;; This function is called by:
 39467 ;;		__flash_set_page_size
 39468 ;;		__flash_wakeup
 39469 ;;		__flash_copy_page_to_buffer
 39470 ;;		__flash_compare_page_to_buffer
 39471 ;;		__flash_write_page_from_buffer
 39472 ;;		__flash_erase_page
 39473 ;;		_flash_set_power_state
 39474 ;; This function uses a non-reentrant model
 39475 ;;
 39476                           
 39477                           	psect	text207
 39478  007210                     __ptext207:
 39479                           	opt stack 0
 39480  007210                     _spi_tx:
 39481                           	opt stack 27
 39482                           
 39483                           ;spi.c: 344: DMACON1bits.SSCON1 = 0;
 39484                           
 39485                           ; BSR set to: 0
 39486                           ;incstack = 0
 39487  007210  9E88               	bcf	3976,7,c	;volatile
 39488                           
 39489                           ;spi.c: 345: DMACON1bits.SSCON0 = 0;
 39490  007212  9C88               	bcf	3976,6,c	;volatile
 39491                           
 39492                           ;spi.c: 347: DMACON1bits.TXINC = 1;
 39493  007214  8A88               	bsf	3976,5,c	;volatile
 39494                           
 39495                           ;spi.c: 349: DMACON1bits.RXINC = 0;
 39496  007216  9888               	bcf	3976,4,c	;volatile
 39497                           
 39498                           ;spi.c: 351: DMACON1bits.DUPLEX1 = 0;
 39499  007218  9688               	bcf	3976,3,c	;volatile
 39500                           
 39501                           ;spi.c: 352: DMACON1bits.DUPLEX0 = 1;
 39502  00721A  8488               	bsf	3976,2,c	;volatile
 39503                           
 39504                           ;spi.c: 354: DMACON1bits.DLYINTEN = 0;
 39505  00721C  9288               	bcf	3976,1,c	;volatile
 39506                           
 39507                           ;spi.c: 356: DMACON2bits.DLYCYC = 0b0000;
 39508  00721E  9886               	bcf	3974,4,c	;volatile
 39509  007220  9A86               	bcf	3974,5,c	;volatile
 39510  007222  9C86               	bcf	3974,6,c	;volatile
 39511  007224  9E86               	bcf	3974,7,c	;volatile
 39512                           
 39513                           ;spi.c: 358: DMACON2bits.INTLVL = 0b0000;
 39514  007226  9086               	bcf	3974,0,c	;volatile
 39515  007228  9286               	bcf	3974,1,c	;volatile
 39516  00722A  9486               	bcf	3974,2,c	;volatile
 39517  00722C  9686               	bcf	3974,3,c	;volatile
 39518                           
 39519                           ;spi.c: 361: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 39520  00722E  5002               	movf	spi_tx@data+1,w,c
 39521  007230  6E6A               	movwf	3946,c	;volatile
 39522                           
 39523                           ;spi.c: 362: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 39524  007232  C001  FF6B         	movff	spi_tx@data,3947	;volatile
 39525                           
 39526                           ;spi.c: 365: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 39527  007236  0EFF               	movlw	255
 39528  007238  6E05               	movwf	??_spi_tx& (0+255),c
 39529  00723A  0EFF               	movlw	255
 39530  00723C  6E06               	movwf	(??_spi_tx+1)& (0+255),c
 39531  00723E  C003  F007         	movff	spi_tx@length,??_spi_tx+2
 39532  007242  C004  F008         	movff	spi_tx@length+1,??_spi_tx+3
 39533  007246  5005               	movf	??_spi_tx,w,c
 39534  007248  2607               	addwf	??_spi_tx+2,f,c
 39535  00724A  5006               	movf	??_spi_tx+1,w,c
 39536  00724C  2208               	addwfc	??_spi_tx+3,f,c
 39537  00724E  C008  F007         	movff	??_spi_tx+3,??_spi_tx+2
 39538  007252  6A08               	clrf	??_spi_tx+3,c
 39539  007254  5007               	movf	??_spi_tx+2,w,c
 39540  007256  6E66               	movwf	3942,c	;volatile
 39541                           
 39542                           ;spi.c: 366: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 39543  007258  0403               	decf	spi_tx@length,w,c
 39544  00725A  6E67               	movwf	3943,c	;volatile
 39545                           
 39546                           ;spi.c: 369: LATDbits.LD7 = 0;
 39547  00725C  9E8C               	bcf	3980,7,c	;volatile
 39548                           
 39549                           ;spi.c: 370: DMACON1bits.DMAEN = 1;
 39550  00725E  8088               	bsf	3976,0,c	;volatile
 39551  007260  B088               	btfsc	3976,0,c	;volatile
 39552  007262  D7FE               	goto	l2806
 39553                           
 39554                           ;spi.c: 372: LATDbits.LD7 = 1;
 39555  007264  8E8C               	bsf	3980,7,c	;volatile
 39556  007266  0012               	return		;funcret
 39557  007268                     __end_of_spi_tx:
 39558                           	opt stack 0
 39559                           tosu	equ	0xFFF
 39560                           tosh	equ	0xFFE
 39561                           tosl	equ	0xFFD
 39562                           pclath	equ	0xFFA
 39563                           tblptru	equ	0xFF8
 39564                           tblptrh	equ	0xFF7
 39565                           tblptrl	equ	0xFF6
 39566                           tablat	equ	0xFF5
 39567                           prodh	equ	0xFF4
 39568                           prodl	equ	0xFF3
 39569                           intcon	equ	0xFF2
 39570                           intcon2	equ	0xFF1
 39571                           intcon3	equ	0xFF0
 39572                           indf0	equ	0xFEF
 39573                           postinc0	equ	0xFEE
 39574                           fsr0h	equ	0xFEA
 39575                           fsr0l	equ	0xFE9
 39576                           wreg	equ	0xFE8
 39577                           indf1	equ	0xFE7
 39578                           postdec1	equ	0xFE5
 39579                           plusw1	equ	0xFE3
 39580                           fsr1h	equ	0xFE2
 39581                           fsr1l	equ	0xFE1
 39582                           indf2	equ	0xFDF
 39583                           postinc2	equ	0xFDE
 39584                           postdec2	equ	0xFDD
 39585                           plusw2	equ	0xFDB
 39586                           fsr2h	equ	0xFDA
 39587                           fsr2l	equ	0xFD9
 39588                           status	equ	0xFD8
 39589                           
 39590 ;; *************** function __flash_get_status *****************
 39591 ;; Defined at:
 39592 ;;		line 113 in file "flash.c"
 39593 ;; Parameters:    Size  Location     Type
 39594 ;;		None
 39595 ;; Auto vars:     Size  Location     Type
 39596 ;;  status          2   15[COMRAM] unsigned int 
 39597 ;;  command         1   14[COMRAM] unsigned char 
 39598 ;; Return value:  Size  Location     Type
 39599 ;;                  2   12[COMRAM] unsigned int 
 39600 ;; Registers used:
 39601 ;;		wreg, status,2, status,0, cstack
 39602 ;; Tracked objects:
 39603 ;;		On entry : 0/0
 39604 ;;		On exit  : 0/0
 39605 ;;		Unchanged: 0/0
 39606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39607 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39608 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39610 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39611 ;;Total ram usage:        5 bytes
 39612 ;; Hardware stack levels used:    1
 39613 ;; Hardware stack levels required when called:    1
 39614 ;; This function calls:
 39615 ;;		_spi_tx_rx
 39616 ;; This function is called by:
 39617 ;;		__flash_compare_page_to_buffer
 39618 ;;		__flash_is_busy
 39619 ;; This function uses a non-reentrant model
 39620 ;;
 39621                           
 39622                           	psect	text208
 39623  007B54                     __ptext208:
 39624                           	opt stack 0
 39625  007B54                     __flash_get_status:
 39626                           	opt stack 25
 39627                           
 39628                           ;flash.c: 117: uint8_t command = 0xD7;
 39629                           
 39630                           ;incstack = 0
 39631  007B54  0ED7               	movlw	215
 39632  007B56  6E0F               	movwf	__flash_get_status@command,c
 39633                           
 39634                           ;flash.c: 118: uint16_t status;;flash.c: 119: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 39635  007B58  0E0F               	movlw	low __flash_get_status@command
 39636  007B5A  6E01               	movwf	spi_tx_rx@command,c
 39637  007B5C  0E00               	movlw	high __flash_get_status@command
 39638  007B5E  6E02               	movwf	spi_tx_rx@command+1,c
 39639  007B60  0E00               	movlw	0
 39640  007B62  6E04               	movwf	spi_tx_rx@command_length+1,c
 39641  007B64  0E01               	movlw	1
 39642  007B66  6E03               	movwf	spi_tx_rx@command_length,c
 39643  007B68  0E10               	movlw	low __flash_get_status@status
 39644  007B6A  6E05               	movwf	spi_tx_rx@data,c
 39645  007B6C  0E00               	movlw	high __flash_get_status@status
 39646  007B6E  6E06               	movwf	spi_tx_rx@data+1,c
 39647  007B70  0E00               	movlw	0
 39648  007B72  6E08               	movwf	spi_tx_rx@data_length+1,c
 39649  007B74  0E02               	movlw	2
 39650  007B76  6E07               	movwf	spi_tx_rx@data_length,c
 39651  007B78  EC7C  F030         	call	_spi_tx_rx	;wreg free
 39652                           
 39653                           ;flash.c: 120: return status;
 39654  007B7C  C010  F00D         	movff	__flash_get_status@status,?__flash_get_status
 39655  007B80  C011  F00E         	movff	__flash_get_status@status+1,?__flash_get_status+1
 39656  007B84  0012               	return	
 39657  007B86                     __end_of__flash_get_status:
 39658                           	opt stack 0
 39659                           tosu	equ	0xFFF
 39660                           tosh	equ	0xFFE
 39661                           tosl	equ	0xFFD
 39662                           pclath	equ	0xFFA
 39663                           tblptru	equ	0xFF8
 39664                           tblptrh	equ	0xFF7
 39665                           tblptrl	equ	0xFF6
 39666                           tablat	equ	0xFF5
 39667                           prodh	equ	0xFF4
 39668                           prodl	equ	0xFF3
 39669                           intcon	equ	0xFF2
 39670                           intcon2	equ	0xFF1
 39671                           intcon3	equ	0xFF0
 39672                           indf0	equ	0xFEF
 39673                           postinc0	equ	0xFEE
 39674                           fsr0h	equ	0xFEA
 39675                           fsr0l	equ	0xFE9
 39676                           wreg	equ	0xFE8
 39677                           indf1	equ	0xFE7
 39678                           postdec1	equ	0xFE5
 39679                           plusw1	equ	0xFE3
 39680                           fsr1h	equ	0xFE2
 39681                           fsr1l	equ	0xFE1
 39682                           indf2	equ	0xFDF
 39683                           postinc2	equ	0xFDE
 39684                           postdec2	equ	0xFDD
 39685                           plusw2	equ	0xFDB
 39686                           fsr2h	equ	0xFDA
 39687                           fsr2l	equ	0xFD9
 39688                           status	equ	0xFD8
 39689                           
 39690 ;; *************** function _spi_tx_rx *****************
 39691 ;; Defined at:
 39692 ;;		line 432 in file "spi.c"
 39693 ;; Parameters:    Size  Location     Type
 39694 ;;  command         2    0[COMRAM] PTR unsigned char 
 39695 ;;		 -> _flash_partial_read@command(4), _flash_get_status@command(1), 
 39696 ;;  command_leng    2    2[COMRAM] unsigned int 
 39697 ;;  data            2    4[COMRAM] PTR unsigned char 
 39698 ;;		 -> _spi_external_tx_buffer(64), file_buffer(50), buffer(512), fat_read_from_file@root(32), 
 39699 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11),
      + 
 39700 ;;		 -> _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@val
      +ue(2), 
 39701 ;;		 -> _get_empty_cluster@value(2), _root_is_available@first_byte(1), _flash_get_status@status(2), msd_buffer(512), 
 39702 ;;		 -> RAM(3759), 
 39703 ;;  data_length     2    6[COMRAM] unsigned int 
 39704 ;; Auto vars:     Size  Location     Type
 39705 ;;		None
 39706 ;; Return value:  Size  Location     Type
 39707 ;;                  1    wreg      void 
 39708 ;; Registers used:
 39709 ;;		wreg, status,2, status,0
 39710 ;; Tracked objects:
 39711 ;;		On entry : 0/0
 39712 ;;		On exit  : 0/0
 39713 ;;		Unchanged: 0/0
 39714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39715 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39717 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39718 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39719 ;;Total ram usage:       12 bytes
 39720 ;; Hardware stack levels used:    1
 39721 ;; This function calls:
 39722 ;;		Nothing
 39723 ;; This function is called by:
 39724 ;;		__flash_get_status
 39725 ;;		__flash_partial_read
 39726 ;; This function uses a non-reentrant model
 39727 ;;
 39728                           
 39729                           	psect	text209
 39730  0060F8                     __ptext209:
 39731                           	opt stack 0
 39732  0060F8                     _spi_tx_rx:
 39733                           	opt stack 25
 39734                           
 39735                           ;spi.c: 435: DMACON1bits.SSCON1 = 0;
 39736                           
 39737                           ;incstack = 0
 39738  0060F8  9E88               	bcf	3976,7,c	;volatile
 39739                           
 39740                           ;spi.c: 436: DMACON1bits.SSCON0 = 0;
 39741  0060FA  9C88               	bcf	3976,6,c	;volatile
 39742                           
 39743                           ;spi.c: 438: DMACON1bits.TXINC = 1;
 39744  0060FC  8A88               	bsf	3976,5,c	;volatile
 39745                           
 39746                           ;spi.c: 440: DMACON1bits.RXINC = 0;
 39747  0060FE  9888               	bcf	3976,4,c	;volatile
 39748                           
 39749                           ;spi.c: 442: DMACON1bits.DUPLEX1 = 0;
 39750  006100  9688               	bcf	3976,3,c	;volatile
 39751                           
 39752                           ;spi.c: 443: DMACON1bits.DUPLEX0 = 1;
 39753  006102  8488               	bsf	3976,2,c	;volatile
 39754                           
 39755                           ;spi.c: 445: DMACON1bits.DLYINTEN = 0;
 39756  006104  9288               	bcf	3976,1,c	;volatile
 39757                           
 39758                           ;spi.c: 447: DMACON2bits.DLYCYC = 0b0000;
 39759  006106  9886               	bcf	3974,4,c	;volatile
 39760  006108  9A86               	bcf	3974,5,c	;volatile
 39761  00610A  9C86               	bcf	3974,6,c	;volatile
 39762  00610C  9E86               	bcf	3974,7,c	;volatile
 39763                           
 39764                           ;spi.c: 449: DMACON2bits.INTLVL = 0b0000;
 39765  00610E  9086               	bcf	3974,0,c	;volatile
 39766  006110  9286               	bcf	3974,1,c	;volatile
 39767  006112  9486               	bcf	3974,2,c	;volatile
 39768  006114  9686               	bcf	3974,3,c	;volatile
 39769                           
 39770                           ;spi.c: 452: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 39771  006116  5002               	movf	spi_tx_rx@command+1,w,c
 39772  006118  6E6A               	movwf	3946,c	;volatile
 39773                           
 39774                           ;spi.c: 453: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 39775  00611A  C001  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 39776                           
 39777                           ;spi.c: 456: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 39778  00611E  0EFF               	movlw	255
 39779  006120  6E09               	movwf	??_spi_tx_rx& (0+255),c
 39780  006122  0EFF               	movlw	255
 39781  006124  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 39782  006126  C003  F00B         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 39783  00612A  C004  F00C         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 39784  00612E  5009               	movf	??_spi_tx_rx,w,c
 39785  006130  260B               	addwf	??_spi_tx_rx+2,f,c
 39786  006132  500A               	movf	??_spi_tx_rx+1,w,c
 39787  006134  220C               	addwfc	??_spi_tx_rx+3,f,c
 39788  006136  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 39789  00613A  6A0C               	clrf	??_spi_tx_rx+3,c
 39790  00613C  500B               	movf	??_spi_tx_rx+2,w,c
 39791  00613E  6E66               	movwf	3942,c	;volatile
 39792                           
 39793                           ;spi.c: 457: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 39794  006140  0403               	decf	spi_tx_rx@command_length,w,c
 39795  006142  6E67               	movwf	3943,c	;volatile
 39796                           
 39797                           ;spi.c: 460: LATDbits.LD7 = 0;
 39798  006144  9E8C               	bcf	3980,7,c	;volatile
 39799                           
 39800                           ;spi.c: 463: DMACON1bits.DMAEN = 1;
 39801  006146  8088               	bsf	3976,0,c	;volatile
 39802  006148  B088               	btfsc	3976,0,c	;volatile
 39803  00614A  D7FE               	goto	l2821
 39804                           
 39805                           ;spi.c: 467: DMACON1bits.TXINC = 0;
 39806  00614C  9A88               	bcf	3976,5,c	;volatile
 39807                           
 39808                           ;spi.c: 469: DMACON1bits.RXINC = 1;
 39809  00614E  8888               	bsf	3976,4,c	;volatile
 39810                           
 39811                           ;spi.c: 471: DMACON1bits.DUPLEX1 = 0;
 39812  006150  9688               	bcf	3976,3,c	;volatile
 39813                           
 39814                           ;spi.c: 472: DMACON1bits.DUPLEX0 = 0;
 39815  006152  9488               	bcf	3976,2,c	;volatile
 39816                           
 39817                           ;spi.c: 475: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 39818  006154  5006               	movf	spi_tx_rx@data+1,w,c
 39819  006156  6E68               	movwf	3944,c	;volatile
 39820                           
 39821                           ;spi.c: 476: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 39822  006158  C005  FF69         	movff	spi_tx_rx@data,3945	;volatile
 39823                           
 39824                           ;spi.c: 479: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 39825  00615C  0EFF               	movlw	255
 39826  00615E  6E09               	movwf	??_spi_tx_rx& (0+255),c
 39827  006160  0EFF               	movlw	255
 39828  006162  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 39829  006164  C007  F00B         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 39830  006168  C008  F00C         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 39831  00616C  5009               	movf	??_spi_tx_rx,w,c
 39832  00616E  260B               	addwf	??_spi_tx_rx+2,f,c
 39833  006170  500A               	movf	??_spi_tx_rx+1,w,c
 39834  006172  220C               	addwfc	??_spi_tx_rx+3,f,c
 39835  006174  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 39836  006178  6A0C               	clrf	??_spi_tx_rx+3,c
 39837  00617A  500B               	movf	??_spi_tx_rx+2,w,c
 39838  00617C  6E66               	movwf	3942,c	;volatile
 39839                           
 39840                           ;spi.c: 480: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 39841  00617E  0407               	decf	spi_tx_rx@data_length,w,c
 39842  006180  6E67               	movwf	3943,c	;volatile
 39843                           
 39844                           ;spi.c: 483: DMACON1bits.DMAEN = 1;
 39845  006182  8088               	bsf	3976,0,c	;volatile
 39846  006184  B088               	btfsc	3976,0,c	;volatile
 39847  006186  D7FE               	goto	l2824
 39848                           
 39849                           ;spi.c: 487: LATDbits.LD7 = 1;
 39850  006188  8E8C               	bsf	3980,7,c	;volatile
 39851  00618A  0012               	return		;funcret
 39852  00618C                     __end_of_spi_tx_rx:
 39853                           	opt stack 0
 39854                           tosu	equ	0xFFF
 39855                           tosh	equ	0xFFE
 39856                           tosl	equ	0xFFD
 39857                           pclath	equ	0xFFA
 39858                           tblptru	equ	0xFF8
 39859                           tblptrh	equ	0xFF7
 39860                           tblptrl	equ	0xFF6
 39861                           tablat	equ	0xFF5
 39862                           prodh	equ	0xFF4
 39863                           prodl	equ	0xFF3
 39864                           intcon	equ	0xFF2
 39865                           intcon2	equ	0xFF1
 39866                           intcon3	equ	0xFF0
 39867                           indf0	equ	0xFEF
 39868                           postinc0	equ	0xFEE
 39869                           fsr0h	equ	0xFEA
 39870                           fsr0l	equ	0xFE9
 39871                           wreg	equ	0xFE8
 39872                           indf1	equ	0xFE7
 39873                           postdec1	equ	0xFE5
 39874                           plusw1	equ	0xFE3
 39875                           fsr1h	equ	0xFE2
 39876                           fsr1l	equ	0xFE1
 39877                           indf2	equ	0xFDF
 39878                           postinc2	equ	0xFDE
 39879                           postdec2	equ	0xFDD
 39880                           plusw2	equ	0xFDB
 39881                           fsr2h	equ	0xFDA
 39882                           fsr2l	equ	0xFD9
 39883                           status	equ	0xFD8
 39884                           
 39885 ;; *************** function _USBTransferOnePacket *****************
 39886 ;; Defined at:
 39887 ;;		line 995 in file "usb_device.c"
 39888 ;; Parameters:    Size  Location     Type
 39889 ;;  ep              1    wreg     unsigned char 
 39890 ;;  dir             1    0[COMRAM] unsigned char 
 39891 ;;  data            2    1[COMRAM] PTR unsigned char 
 39892 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 39893 ;;		 -> msd_cbw(31), NULL(0), 
 39894 ;;  len             1    3[COMRAM] unsigned char 
 39895 ;; Auto vars:     Size  Location     Type
 39896 ;;  ep              1    8[COMRAM] unsigned char 
 39897 ;;  handle          2    9[COMRAM] PTR volatile struct __BD
 39898 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 39899 ;; Return value:  Size  Location     Type
 39900 ;;                  2    0[COMRAM] PTR void 
 39901 ;; Registers used:
 39902 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39903 ;; Tracked objects:
 39904 ;;		On entry : 0/0
 39905 ;;		On exit  : 0/0
 39906 ;;		Unchanged: 0/0
 39907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39908 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39909 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39910 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39911 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39912 ;;Total ram usage:       11 bytes
 39913 ;; Hardware stack levels used:    1
 39914 ;; This function calls:
 39915 ;;		Nothing
 39916 ;; This function is called by:
 39917 ;;		_USBMSDInit
 39918 ;;		_USBCheckMSDRequest
 39919 ;;		_MSDTasks
 39920 ;;		_MSDProcessCommandMediaPresent
 39921 ;;		_MSDReadHandler
 39922 ;;		_MSDWriteHandler
 39923 ;;		_MSDTransferTerminated
 39924 ;;		_APP_DeviceCustomHIDInitialize
 39925 ;;		_APP_DeviceCustomHIDTasks
 39926 ;; This function uses a non-reentrant model
 39927 ;;
 39928                           
 39929                           	psect	text210
 39930  004656                     __ptext210:
 39931                           	opt stack 0
 39932  004656                     _USBTransferOnePacket:
 39933                           	opt stack 27
 39934                           
 39935                           ;incstack = 0
 39936                           ;USBTransferOnePacket@ep stored from wreg
 39937  004656  6E09               	movwf	USBTransferOnePacket@ep,c
 39938                           
 39939                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 39940  004658  5001               	movf	USBTransferOnePacket@dir,w,c
 39941  00465A  B4D8               	btfsc	status,2,c
 39942  00465C  D007               	goto	l183
 39943                           
 39944                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 39945  00465E  5009               	movf	USBTransferOnePacket@ep,w,c
 39946  004660  0D02               	mullw	2
 39947  004662  0E6C               	movlw	low _pBDTEntryIn
 39948  004664  24F3               	addwf	prodl,w,c
 39949  004666  6ED9               	movwf	fsr2l,c
 39950  004668  0E00               	movlw	high _pBDTEntryIn
 39951  00466A  D006               	goto	L41
 39952  00466C                     l183:
 39953                           
 39954                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 39955  00466C  5009               	movf	USBTransferOnePacket@ep,w,c
 39956  00466E  0D02               	mullw	2
 39957  004670  0E72               	movlw	low _pBDTEntryOut
 39958  004672  24F3               	addwf	prodl,w,c
 39959  004674  6ED9               	movwf	fsr2l,c
 39960  004676  0E00               	movlw	high _pBDTEntryOut
 39961  004678                     L41:
 39962  004678  20F4               	addwfc	prodh,w,c
 39963  00467A  6EDA               	movwf	fsr2h,c
 39964  00467C  CFDE F00A          	movff	postinc2,USBTransferOnePacket@handle
 39965  004680  CFDD F00B          	movff	postdec2,USBTransferOnePacket@handle+1
 39966                           
 39967                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 39968  004684  500A               	movf	USBTransferOnePacket@handle,w,c
 39969  004686  100B               	iorwf	USBTransferOnePacket@handle+1,w,c
 39970  004688  A4D8               	btfss	status,2,c
 39971  00468A  D005               	goto	l185
 39972                           
 39973                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 39974  00468C  0E00               	movlw	0
 39975  00468E  6E01               	movwf	?_USBTransferOnePacket,c
 39976  004690  0E00               	movlw	0
 39977  004692  6E02               	movwf	?_USBTransferOnePacket+1,c
 39978  004694  0012               	return	
 39979  004696                     l185:
 39980                           
 39981                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 39982  004696  EE20 F002          	lfsr	2,2
 39983  00469A  500A               	movf	USBTransferOnePacket@handle,w,c
 39984  00469C  26D9               	addwf	fsr2l,f,c
 39985  00469E  500B               	movf	USBTransferOnePacket@handle+1,w,c
 39986  0046A0  22DA               	addwfc	fsr2h,f,c
 39987  0046A2  C002  FFDE         	movff	USBTransferOnePacket@data,postinc2
 39988  0046A6  C003  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 39989                           
 39990                           ;usb_device.c: 1030: handle->CNT = len;
 39991  0046AA  EE20 F001          	lfsr	2,1
 39992  0046AE  500A               	movf	USBTransferOnePacket@handle,w,c
 39993  0046B0  26D9               	addwf	fsr2l,f,c
 39994  0046B2  500B               	movf	USBTransferOnePacket@handle+1,w,c
 39995  0046B4  22DA               	addwfc	fsr2h,f,c
 39996  0046B6  C004  FFDF         	movff	USBTransferOnePacket@len,indf2
 39997                           
 39998                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 39999  0046BA  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 40000  0046BE  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 40001  0046C2  0E40               	movlw	64
 40002  0046C4  16DF               	andwf	indf2,f,c
 40003                           
 40004                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 40005  0046C6  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 40006  0046CA  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 40007  0046CE  0E00               	movlw	0
 40008  0046D0  86DB               	bsf	plusw2,3,c
 40009                           
 40010                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 40011  0046D2  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 40012  0046D6  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 40013  0046DA  0E00               	movlw	0
 40014  0046DC  8EDB               	bsf	plusw2,7,c
 40015                           
 40016                           ;usb_device.c: 1036: if(dir != 0)
 40017  0046DE  5001               	movf	USBTransferOnePacket@dir,w,c
 40018  0046E0  B4D8               	btfsc	status,2,c
 40019  0046E2  D018               	goto	l187
 40020                           
 40021                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 40022  0046E4  5009               	movf	USBTransferOnePacket@ep,w,c
 40023  0046E6  0D02               	mullw	2
 40024  0046E8  0E6C               	movlw	low _pBDTEntryIn
 40025  0046EA  24F3               	addwf	prodl,w,c
 40026  0046EC  6ED9               	movwf	fsr2l,c
 40027  0046EE  0E00               	movlw	high _pBDTEntryIn
 40028  0046F0  20F4               	addwfc	prodh,w,c
 40029  0046F2  6EDA               	movwf	fsr2h,c
 40030  0046F4  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 40031  0046F8  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 40032  0046FC  0E04               	movlw	4
 40033  0046FE  1805               	xorwf	??_USBTransferOnePacket,w,c
 40034  004700  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 40035  004702  5006               	movf	??_USBTransferOnePacket+1,w,c
 40036  004704  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 40037  004706  5009               	movf	USBTransferOnePacket@ep,w,c
 40038  004708  0D02               	mullw	2
 40039  00470A  0E6C               	movlw	low _pBDTEntryIn
 40040  00470C  24F3               	addwf	prodl,w,c
 40041  00470E  6ED9               	movwf	fsr2l,c
 40042  004710  0E00               	movlw	high _pBDTEntryIn
 40043  004712  D017               	goto	L42
 40044  004714                     l187:
 40045                           
 40046                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 40047  004714  5009               	movf	USBTransferOnePacket@ep,w,c
 40048  004716  0D02               	mullw	2
 40049  004718  0E72               	movlw	low _pBDTEntryOut
 40050  00471A  24F3               	addwf	prodl,w,c
 40051  00471C  6ED9               	movwf	fsr2l,c
 40052  00471E  0E00               	movlw	high _pBDTEntryOut
 40053  004720  20F4               	addwfc	prodh,w,c
 40054  004722  6EDA               	movwf	fsr2h,c
 40055  004724  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 40056  004728  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 40057  00472C  0E04               	movlw	4
 40058  00472E  1805               	xorwf	??_USBTransferOnePacket,w,c
 40059  004730  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 40060  004732  5006               	movf	??_USBTransferOnePacket+1,w,c
 40061  004734  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 40062  004736  5009               	movf	USBTransferOnePacket@ep,w,c
 40063  004738  0D02               	mullw	2
 40064  00473A  0E72               	movlw	low _pBDTEntryOut
 40065  00473C  24F3               	addwf	prodl,w,c
 40066  00473E  6ED9               	movwf	fsr2l,c
 40067  004740  0E00               	movlw	high _pBDTEntryOut
 40068  004742                     L42:
 40069  004742  20F4               	addwfc	prodh,w,c
 40070  004744  6EDA               	movwf	fsr2h,c
 40071  004746  C007  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 40072  00474A  C008  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 40073                           
 40074                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 40075  00474E  C00A  F001         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 40076  004752  C00B  F002         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 40077  004756  0012               	return	
 40078  004758                     __end_of_USBTransferOnePacket:
 40079                           	opt stack 0
 40080                           tosu	equ	0xFFF
 40081                           tosh	equ	0xFFE
 40082                           tosl	equ	0xFFD
 40083                           pclath	equ	0xFFA
 40084                           tblptru	equ	0xFF8
 40085                           tblptrh	equ	0xFF7
 40086                           tblptrl	equ	0xFF6
 40087                           tablat	equ	0xFF5
 40088                           prodh	equ	0xFF4
 40089                           prodl	equ	0xFF3
 40090                           intcon	equ	0xFF2
 40091                           intcon2	equ	0xFF1
 40092                           intcon3	equ	0xFF0
 40093                           indf0	equ	0xFEF
 40094                           postinc0	equ	0xFEE
 40095                           fsr0h	equ	0xFEA
 40096                           fsr0l	equ	0xFE9
 40097                           wreg	equ	0xFE8
 40098                           indf1	equ	0xFE7
 40099                           postdec1	equ	0xFE5
 40100                           plusw1	equ	0xFE3
 40101                           fsr1h	equ	0xFE2
 40102                           fsr1l	equ	0xFE1
 40103                           indf2	equ	0xFDF
 40104                           postinc2	equ	0xFDE
 40105                           postdec2	equ	0xFDD
 40106                           plusw2	equ	0xFDB
 40107                           fsr2h	equ	0xFDA
 40108                           fsr2l	equ	0xFD9
 40109                           status	equ	0xFD8
 40110                           tosu	equ	0xFFF
 40111                           tosh	equ	0xFFE
 40112                           tosl	equ	0xFFD
 40113                           pclath	equ	0xFFA
 40114                           tblptru	equ	0xFF8
 40115                           tblptrh	equ	0xFF7
 40116                           tblptrl	equ	0xFF6
 40117                           tablat	equ	0xFF5
 40118                           prodh	equ	0xFF4
 40119                           prodl	equ	0xFF3
 40120                           intcon	equ	0xFF2
 40121                           intcon2	equ	0xFF1
 40122                           intcon3	equ	0xFF0
 40123                           indf0	equ	0xFEF
 40124                           postinc0	equ	0xFEE
 40125                           fsr0h	equ	0xFEA
 40126                           fsr0l	equ	0xFE9
 40127                           wreg	equ	0xFE8
 40128                           indf1	equ	0xFE7
 40129                           postdec1	equ	0xFE5
 40130                           plusw1	equ	0xFE3
 40131                           fsr1h	equ	0xFE2
 40132                           fsr1l	equ	0xFE1
 40133                           indf2	equ	0xFDF
 40134                           postinc2	equ	0xFDE
 40135                           postdec2	equ	0xFDD
 40136                           plusw2	equ	0xFDB
 40137                           fsr2h	equ	0xFDA
 40138                           fsr2l	equ	0xFD9
 40139                           status	equ	0xFD8
 40140                           
 40141                           	psect	text211
 40142  000000                     __ptext211:
 40143                           	opt stack 0
 40144                           tosu	equ	0xFFF
 40145                           tosh	equ	0xFFE
 40146                           tosl	equ	0xFFD
 40147                           pclath	equ	0xFFA
 40148                           tblptru	equ	0xFF8
 40149                           tblptrh	equ	0xFF7
 40150                           tblptrl	equ	0xFF6
 40151                           tablat	equ	0xFF5
 40152                           prodh	equ	0xFF4
 40153                           prodl	equ	0xFF3
 40154                           intcon	equ	0xFF2
 40155                           intcon2	equ	0xFF1
 40156                           intcon3	equ	0xFF0
 40157                           indf0	equ	0xFEF
 40158                           postinc0	equ	0xFEE
 40159                           fsr0h	equ	0xFEA
 40160                           fsr0l	equ	0xFE9
 40161                           wreg	equ	0xFE8
 40162                           indf1	equ	0xFE7
 40163                           postdec1	equ	0xFE5
 40164                           plusw1	equ	0xFE3
 40165                           fsr1h	equ	0xFE2
 40166                           fsr1l	equ	0xFE1
 40167                           indf2	equ	0xFDF
 40168                           postinc2	equ	0xFDE
 40169                           postdec2	equ	0xFDD
 40170                           plusw2	equ	0xFDB
 40171                           fsr2h	equ	0xFDA
 40172                           fsr2l	equ	0xFD9
 40173                           status	equ	0xFD8
 40174                           
 40175                           	psect	rparam
 40176  0000                     tosu	equ	0xFFF
 40177                           tosh	equ	0xFFE
 40178                           tosl	equ	0xFFD
 40179                           pclath	equ	0xFFA
 40180                           tblptru	equ	0xFF8
 40181                           tblptrh	equ	0xFF7
 40182                           tblptrl	equ	0xFF6
 40183                           tablat	equ	0xFF5
 40184                           prodh	equ	0xFF4
 40185                           prodl	equ	0xFF3
 40186                           intcon	equ	0xFF2
 40187                           intcon2	equ	0xFF1
 40188                           intcon3	equ	0xFF0
 40189                           indf0	equ	0xFEF
 40190                           postinc0	equ	0xFEE
 40191                           fsr0h	equ	0xFEA
 40192                           fsr0l	equ	0xFE9
 40193                           wreg	equ	0xFE8
 40194                           indf1	equ	0xFE7
 40195                           postdec1	equ	0xFE5
 40196                           plusw1	equ	0xFE3
 40197                           fsr1h	equ	0xFE2
 40198                           fsr1l	equ	0xFE1
 40199                           indf2	equ	0xFDF
 40200                           postinc2	equ	0xFDE
 40201                           postdec2	equ	0xFDD
 40202                           plusw2	equ	0xFDB
 40203                           fsr2h	equ	0xFDA
 40204                           fsr2l	equ	0xFD9
 40205                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    823
    Data        38
    BSS         2155
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     73     159
    BANK1           256      0     256
    BANK2           256      0     251
    BANK3           256      0      64
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    _parse_file_modify@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_truncate@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    S1973$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FileAddress	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> fat_find_file@buffer(COMRAM[11]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), bootloader_extension(CODE[4]), bootloader_filename(CODE[9]), RAM(DATA[3759]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(3) Largest target is 36863
		 -> _spi_external_rx_buffer(BANK2[64]), ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 36863
		 -> _spi_external_rx_buffer(BANK2[64]), ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), file_buffer(BANK2[50]), buffer(BIGRAMll[512]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), 
		 -> _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), 
		 -> _get_empty_cluster@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), _flash_get_status@status(COMRAM[2]), msd_buffer(BIGRAMll[512]), 
		 -> RAM(DATA[3759]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_partial_read@command(COMRAM[4]), _flash_get_status@command(COMRAM[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 3759
		 -> buffer(BIGRAMll[512]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), msd_buffer(BIGRAMll[512]), 
		 -> RAM(DATA[3759]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(COMRAM[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(COMRAM[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(COMRAM[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(COMRAM[1]), _flash_set_page_size@command(COMRAM[4]), 

    _parse_file_append@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_rename@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_create@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_delete@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_read_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_read_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_configuration@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_bootloader_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK2[64]), ReceivedDataBuffer(BANK2[64]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), RAM(DATA[3759]), 

    internalFlash_read@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), 

    sp__internalFlash_getBuffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    _bootloader_program@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    parseHexFileEntry@hexEntry	PTR struct HexFileEntry size(2) Largest target is 23
		 -> hex_file_entry(BANK1[23]), 

    parseHexFileEntry@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK2[50]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), 
		 -> RAM(DATA[3759]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), file_buffer(BANK2[50]), RAM(DATA[3759]), 

    fat_rename_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_rename_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_append_to_file@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), bootloader_extension(CODE[4]), RAM(DATA[3759]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), bootloader_filename(CODE[9]), RAM(DATA[3759]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 

    _update_modified_time@root	PTR struct . size(2) Largest target is 32
		 -> fat_append_to_file@root(BANK0[32]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 3759
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), 
		 -> _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), RAM(DATA[3759]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), file_buffer(BANK2[50]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), 
		 -> fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), _get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), _get_empty_cluster@value(COMRAM[2]), 
		 -> _root_is_available@first_byte(COMRAM[1]), RAM(DATA[3759]), 

    flash_page_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_page_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), file_buffer(BANK2[50]), buffer(BIGRAMll[512]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), 
		 -> _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), 
		 -> _get_empty_cluster@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 3759
		 -> buffer(BIGRAMll[512]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), msd_buffer(BIGRAMll[512]), 
		 -> RAM(DATA[3759]), 

    _display_itoa_u32@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_digipot_backlight@data_array(COMRAM[2]), i2c_digipot_reset_off@data_array(COMRAM[2]), i2c_digipot_reset_on@data_array(COMRAM[2]), i2c_display_send_init_sequence@init_sequence(COMRAM[9]), 
		 -> _ic2_display_set_address@data_array(COMRAM[2]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__spi_get_external_tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK2[64]), 

    main@tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK2[64]), 

    sp__spi_get_external_rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK2[64]), 

    main@rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK2[64]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2407	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2373	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2372	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2320	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2319	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S1973$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S1973$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S1973$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S1973$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S1973$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S1973$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S1973$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S1973$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    _main->_api_prepare
    _main->_bootloader_run
    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    _i2c_init->_i2c_set_frequency
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_page_read
    _fat_format->_flash_page_write
    _bootloader_run->__bootloader_program
    _bootloader_run->__bootloader_verify_file
    __bootloader_verify_file->_fat_read_from_file
    __bootloader_program->_fat_read_from_file
    _parseHexFileEntry->_hexCharsToUint16
    _hexCharsToUint8->_hexCharToUint8
    _hexCharsToUint16->_hexCharToUint8
    _internalFlash_writePage->__internalFlash_unlockAndActivate
    _internalFlash_readPage->_internalFlash_read
    _internalFlash_read->_memcpy
    _internalFlash_erasePage->__internalFlash_unlockAndActivate
    _internalFlash_addressWithinPage->_internalFlash_addressFromPage
    __bootloader_find_file->_fat_find_file
    __normal_mode->_i2c_eeprom_readByte
    _i2c_eeprom_readByte->__i2c_read
    __i2c_read->__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->_USBTransferOnePacket
    _MSDTransferTerminated->_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_page_write
    _flash_page_write->__flash_compare_page_to_buffer
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_page_read
    _flash_page_read->__flash_partial_read
    _APP_DeviceCustomHIDTasks->_api_prepare
    _api_prepare->__fill_buffer_read_file
    __fill_buffer_read_file->_fat_read_from_file
    _fat_read_from_file->_fat_get_file_information
    _fat_get_file_size->_flash_partial_read
    __fill_buffer_get_status->_flash_is_busy
    __fill_buffer_get_file_details->_fat_get_file_information
    __fill_buffer_get_display->_display_get_character
    __fill_buffer_get_bootloader_details->_bootloader_get_file_size
    __fill_buffer_find_file->_fat_find_file
    _api_parse->__parse_command_long
    _reboot->_display_prepare
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_found
    __display_verify->__display_itoa_u16
    __display_start->__display_itoa_u32
    __display_programming->__display_itoa_u16
    __display_found->__display_itoa_u32
    __display_failed->__display_itoa_u32
    __display_itoa_u32->__display_itoa_u16
    __display_done->__display_itoa_u16
    __display_checked->__display_itoa_u16
    __display_itoa_u16->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _i2c_eeprom_writeByte->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->__parse_file_create
    __parse_file_rename->_fat_rename_file
    _fat_rename_file->_fat_get_file_information
    __parse_file_delete->_fat_delete_file
    _fat_delete_file->__get_first_cluster
    __get_first_cluster->_flash_partial_read
    __delete_root->_flash_partial_write
    __parse_file_create->_fat_create_file
    _fat_create_file->_fat_find_file
    _fat_get_empty_clusters->_flash_partial_read
    _fat_find_file->_flash_partial_read
    __get_available_root_entry->__root_is_available
    __parse_file_append->_fat_append_to_file
    _fat_append_to_file->_fat_get_file_information
    _fat_get_file_information->__root_is_available
    __root_is_available->_flash_partial_read
    __write_root->_flash_partial_write
    __write_fat->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    _flash_is_busy->__flash_is_busy
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_copy_page_to_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    __update_modified_time->__get_date
    __update_modified_time->__get_time
    __read_fat->_flash_partial_read
    __get_empty_cluster->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx

Critical Paths under _main in BANK0

    _main->_APP_DeviceCustomHIDTasks
    _bootloader_run->__bootloader_program
    __bootloader_verify_file->_fat_read_from_file
    __bootloader_program->_fat_read_from_file
    _APP_DeviceCustomHIDTasks->_api_prepare
    _api_prepare->__fill_buffer_read_file
    __fill_buffer_read_file->_fat_read_from_file
    __parse_file_rename->_fat_rename_file
    __parse_file_create->_fat_create_file
    __parse_file_append->_fat_append_to_file

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0 1501817
                                             93 COMRAM     2     2      0
                                             65 BANK0      8     8      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                       __normal_mode
                          _api_parse
                        _api_prepare
                     _bootloader_run
                    _display_prepare
                     _display_update
               _jump_to_main_program
         _spi_get_external_rx_buffer
         _spi_get_external_tx_buffer
                   _system_full_init
                _system_minimal_init
           _system_minimal_init_undo
                   _timer_pseudo_isr
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0   93854
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
              _system_encoder_enable
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    1804
                                             10 COMRAM     9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0   86544
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (1) _timer_pseudo_isr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init_undo                             0     0      0       0
                          _i2c_reset
 ---------------------------------------------------------------------------------
 (2) _i2c_reset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init                                  0     0      0      44
                           _i2c_init
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      44
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_full_init                                     0     0      0   28085
               __system_encoder_init
                __system_timer0_init
                           _fat_init
                         _flash_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    6304
               __flash_set_page_size
                           _spi_init
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 COMRAM     1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    6060
                                             19 COMRAM     5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   21781
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    5367
                                             43 COMRAM     4     4      0
                           __get_fbr
                           __get_mbr
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   16414
                                             36 COMRAM     2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_tx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_rx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _jump_to_main_program                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bootloader_run                                       1     1      0  108165
                                             92 COMRAM     1     1      0
              __bootloader_find_file
                __bootloader_program
            __bootloader_verify_file
 ---------------------------------------------------------------------------------
 (2) __bootloader_verify_file                             17    17      0   46869
                                             84 COMRAM     8     8      0
                                             45 BANK0      9     9      0
          __bootloader_check_address
                  _fat_get_file_size
                 _fat_read_from_file
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (2) __bootloader_program                                 27    27      0   43860
                                             84 COMRAM     8     8      0
                                             45 BANK0     19    19      0
          __bootloader_check_address
                 _fat_read_from_file
    _internalFlash_addressWithinPage
            _internalFlash_erasePage
            _internalFlash_getBuffer
      _internalFlash_pageFromAddress
             _internalFlash_readPage
            _internalFlash_writePage
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (3) _parseHexFileEntry                                   17     9      8    3134
                                             11 COMRAM    17     9      8
                   _hexCharsToUint16
                    _hexCharsToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint8                                      4     3      1     538
                                              2 COMRAM     4     3      1
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint16                                     9     6      3     495
                                              2 COMRAM     9     6      3
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (5) _hexCharToUint8                                       2     2      0     114
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_writePage                             12    10      2     385
                                              2 COMRAM    10     8      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (3) _internalFlash_readPage                               6     4      2    3259
                                             21 COMRAM     6     4      2
      _internalFlash_addressFromPage
                 _internalFlash_read
 ---------------------------------------------------------------------------------
 (4) _internalFlash_read                                   8     0      8    2901
                                             13 COMRAM     8     0      8
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _internalFlash_pageFromAddress                        5     1      4     201
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _internalFlash_getBuffer                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _internalFlash_erasePage                              6     4      2     269
                                              2 COMRAM     6     4      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (4) __internalFlash_unlockAndActivate                     2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_addressWithinPage                     14     8      6     492
                                              8 COMRAM    14     8      6
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) _internalFlash_addressFromPage                        8     4      4     224
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) __bootloader_check_address                           12     7      5     693
                                              0 COMRAM    12     7      5
 ---------------------------------------------------------------------------------
 (2) __bootloader_find_file                                0     0      0   17370
                      _fat_find_file
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (1) __normal_mode                                         0     0      0    5816
                _i2c_eeprom_readByte
               _i2c_eeprom_writeByte
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readByte                                  7     5      2    2653
                                             17 COMRAM     7     5      2
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_read                                           12     9      3     534
                                              5 COMRAM    12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0  143347
                                             31 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1366
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     2     2      0   82979
                                             29 COMRAM     2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   80471
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   60727
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0   20906
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1164
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0   20123
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6   19652
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                  _SYSTEM_Initialize
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckMSDRequest                                   4     4      0    3361
                                             11 COMRAM     4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBCheckHIDRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SYSTEM_Initialize                                    5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _MSDTransferTerminated                                4     2      2    5161
                                             11 COMRAM     4     2      2
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceMSDInitialize                              0     0      0    4302
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (4) _USBMSDInit                                           3     3      0    3569
                                             11 COMRAM     3     3      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
                     _ResetSenseData
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceCustomHIDInitialize                        0     0      0    4046
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0   99240
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0   99240
                                             76 COMRAM     6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0   94076
                                             71 COMRAM     5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   47789
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   46031
                                             57 COMRAM    14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   22671
                                             47 COMRAM     5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   15083
                                             36 COMRAM    11     2      9
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (4) _flash_page_write                                     5     1      4   14738
                                             31 COMRAM     5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   12464
                                             53 COMRAM     4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2370
                                             10 COMRAM     7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1758
                                              8 COMRAM     2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (4) _USBStallEndpoint                                     8     7      1    1713
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    5068
                                             43 COMRAM    10     2      8
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (4) _flash_page_read                                      4     0      4    4787
                                             39 COMRAM     4     0      4
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaInitialize                        2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaDetect                            2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             5     5      0  470791
                                             61 BANK0      4     4      0
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (1) _api_prepare                                          5     1      4   80638
                                             92 COMRAM     1     1      0
                                             57 BANK0      4     0      4
             __fill_buffer_find_file
__fill_buffer_get_bootloader_details
     __fill_buffer_get_configuration
           __fill_buffer_get_display
      __fill_buffer_get_file_details
            __fill_buffer_get_status
             __fill_buffer_read_file
                      _flash_is_busy
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_read_file                              20    16      4   43599
                                             84 COMRAM     8     4      4
                                             45 BANK0     12    12      0
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  67    57     10   34800
                                             62 COMRAM    22    12     10
                                              0 BANK0     45    45      0
                          __read_fat
               __sector_from_cluster
           _fat_get_file_information
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   14    10      4    7995
                                             47 COMRAM    14    10      4
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_status                              2     0      2    2866
                                             20 COMRAM     2     0      2
                      _flash_is_busy
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_file_details                        5     1      4   16783
                                             62 COMRAM     5     1      4
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display                            12     9      3     827
                                              4 COMRAM    12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (3) _display_get_character                                4     3      1     133
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_configuration                       2     0      2     309
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_bootloader_details                 13    11      2    1023
                                              4 COMRAM    13    11      2
             _bootloader_get_entries
               _bootloader_get_error
           _bootloader_get_file_size
   _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
        _bootloader_get_rec_checksum
   _bootloader_get_rec_checksumCheck
            _bootloader_get_rec_data
      _bootloader_get_rec_dataLength
      _bootloader_get_rec_recordType
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_recordType                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_dataLength                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_data                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksumCheck                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksum                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_find_file                               9     5      4    9819
                                             67 COMRAM     9     5      4
                      _fat_find_file
 ---------------------------------------------------------------------------------
 (1) _api_parse                                            6     3      3  386840
                                             85 COMRAM     3     3      0
                                             51 BANK0      3     0      3
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (2) __parse_command_short                                 1     1      0   86566
                                             43 COMRAM     1     1      0
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (3) _system_delay_ms                                      3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _reboot                                               0     0      0   83335
                    _display_prepare
                     _display_update
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (4) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _display_update                                       0     0      0    3188
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (5) _i2c_display_write_fixed                              4     1      3     868
                                              5 COMRAM     4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (5) _i2c_display_cursor                                   3     2      1    2320
                                             13 COMRAM     3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (6) __ic2_display_set_address                             3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (4) _display_prepare                                      3     3      0   80147
                                             40 COMRAM     3     3      0
                   __display_checked
                     __display_clear
                      __display_done
                    __display_failed
                     __display_found
               __display_programming
                 __display_rebooting
                    __display_search
                     __display_start
                    __display_verify
 ---------------------------------------------------------------------------------
 (5) __display_verify                                      4     4      0    6683
                                             30 COMRAM     3     3      0
                  __display_itoa_u16
             _bootloader_get_entries
 ---------------------------------------------------------------------------------
 (5) __display_start                                       1     1      0   15330
                                             36 COMRAM     1     1      0
                  __display_itoa_u32
 ---------------------------------------------------------------------------------
 (5) __display_search                                      1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_rebooting                                   1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_programming                                 1     1      0    6819
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
             _bootloader_get_entries
   _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (5) __display_found                                       4     4      0   15351
                                             36 COMRAM     4     4      0
                  __display_itoa_u32
           _bootloader_get_file_size
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_file_size                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) __display_failed                                      2     2      0   21962
                                             36 COMRAM     1     1      0
                  __display_itoa_u16
                  __display_itoa_u32
             _bootloader_get_entries
               _bootloader_get_error
         _bootloader_get_rec_address
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_rec_address                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_error                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_entries                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u32                                    6     0      6   14943
                                             30 COMRAM     6     0      6
                            ___lldiv
                            ___llmod
                  __display_itoa_u16
           _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8    1049
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8    1052
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) __display_done                                        1     1      0    6751
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
   _bootloader_get_flashPagesWritten
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_flashPagesWritten                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __display_clear                                       4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (5) __display_checked                                     4     4      0    6753
                                             30 COMRAM     4     4      0
                  __display_itoa_u16
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_total_entries                         2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u16                                    6     0      6    6457
                                             24 COMRAM     6     0      6
             _bootloader_get_entries (ARG)
   _bootloader_get_flashPagesWritten (ARG)
       _bootloader_get_total_entries (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (7) _itoa                                                 8     2      6    4791
                                             16 COMRAM     8     2      6
                            ___lldiv (ARG)
                            ___llmod (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (8) _utoa                                                 9     3      6    1424
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4     337
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              7     3      4     518
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_writeByte                                 9     6      3    3163
                                             10 COMRAM     9     6      3
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    1736
                                              5 COMRAM     5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_long                                  3     1      2  299628
                                             82 COMRAM     3     1      2
                 __parse_file_append
                 __parse_file_create
                 __parse_file_delete
                 __parse_file_modify
                 __parse_file_rename
               __parse_file_truncate
 ---------------------------------------------------------------------------------
 (3) __parse_file_truncate                                 2     0      2      89
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __parse_file_rename                                   3     1      2   39116
                                             66 COMRAM     3     1      2
                    _fat_rename_file
 ---------------------------------------------------------------------------------
 (4) _fat_rename_file                                     38    34      4   38895
                                             62 COMRAM     4     0      4
                                              0 BANK0     34    34      0
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) __parse_file_modify                                   2     0      2      89
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __parse_file_delete                                   3     1      2   68995
                                             62 COMRAM     3     1      2
                    _fat_delete_file
 ---------------------------------------------------------------------------------
 (4) _fat_delete_file                                      5     5      0   68818
                                             57 COMRAM     5     5      0
                       __delete_root
                 __get_first_cluster
                          __read_fat
                 __root_is_available
                         __write_fat
 ---------------------------------------------------------------------------------
 (5) __get_first_cluster                                  10     8      2    7994
                                             47 COMRAM    10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __delete_root                                         7     7      0   21685
                                             40 COMRAM     7     7      0
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __parse_file_create                                   3     1      2   82238
                                             79 COMRAM     3     1      2
                    _fat_create_file
 ---------------------------------------------------------------------------------
 (4) _fat_create_file                                     53    45      8   82039
                                             67 COMRAM    12     4      8
                                              0 BANK0     41    41      0
          __get_available_root_entry
                          __get_date
                 __get_empty_cluster
                          __get_time
                         __write_fat
                        __write_root
                      _fat_find_file
             _fat_get_empty_clusters
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              13     6      7    2279
                                              0 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 (5) _fat_get_empty_clusters                              12    10      2    8218
                                             47 COMRAM    12    10      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       20    16      4    9375
                                             47 COMRAM    20    16      4
                 _flash_partial_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (5) __get_available_root_entry                            1     1      0    8126
                                             54 COMRAM     1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (3) __parse_file_append                                   3     1      2  108829
                                             74 COMRAM     3     1      2
                 _fat_append_to_file
 ---------------------------------------------------------------------------------
 (4) _fat_append_to_file                                  63    59      4  108586
                                             62 COMRAM    12     8      4
                                              0 BANK0     51    51      0
                 __get_empty_cluster
                          __read_fat
                 __root_is_available
               __sector_from_cluster
              __update_modified_time
                         __write_fat
                        __write_root
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (4) _fat_get_file_information                             8     6      2   16406
                                             54 COMRAM     8     6      2
                 __root_is_available
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __root_is_available                                   7     7      0    8036
                                             47 COMRAM     7     7      0
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __write_root                                          8     6      2   21951
                                             40 COMRAM     8     6      2
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) __write_fat                                           8     4      4   22575
                                             40 COMRAM     8     4      4
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (6) _flash_partial_write                                  9     1      8   21571
                                             31 COMRAM     9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
                      _flash_is_busy
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (2) _flash_is_busy                                        1     1      0    2380
                                             19 COMRAM     1     1      0
                     __flash_is_busy
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    3807
                                             19 COMRAM    11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4209
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (7) __flash_copy_page_to_buffer                          10     7      3    4031
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5187
                                             19 COMRAM    12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __update_modified_time                                2     0      2     177
                                              4 COMRAM     2     0      2
                          __get_date
                          __get_time
 ---------------------------------------------------------------------------------
 (5) __get_time                                            4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) __get_date                                            4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __sector_from_cluster                                 2     0      2     200
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8349
                                             47 COMRAM     8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __get_empty_cluster                                  10     8      2    8350
                                             47 COMRAM    10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) _flash_partial_read                                   8     0      8    7857
                                             39 COMRAM     8     0      8
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_set_configuration                                2     2      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4187
                                             19 COMRAM    20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2335
                                             17 COMRAM     2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 COMRAM     1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2     955
                                             12 COMRAM     5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8     888
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                11     7      4    3313
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_file_append
           _fat_append_to_file
             __get_empty_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_cluster
             __update_modified_time
               __get_date
               __get_time
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             _fat_get_file_information
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
         __parse_file_create
           _fat_create_file
             __get_available_root_entry
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
             __get_date
             __get_empty_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_time
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             _fat_find_file
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _strncmp
             _fat_get_empty_clusters
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _memcpy
         __parse_file_delete
           _fat_delete_file
             __delete_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             __get_first_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
         __parse_file_modify
         __parse_file_rename
           _fat_rename_file
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             _fat_get_file_information
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_file_truncate
       __parse_command_short
         _i2c_eeprom_writeByte
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _reboot
           _display_prepare
             __display_checked
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_total_entries
             __display_clear
             __display_done
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_flashPagesWritten
             __display_failed
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
               _bootloader_get_error
               _bootloader_get_rec_address
             __display_found
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size
             __display_programming
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
               _bootloader_get_flashPagesWritten
               _bootloader_get_total_entries
             __display_rebooting
             __display_search
             __display_start
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
             __display_verify
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
           _display_update
             _i2c_display_cursor
               __ic2_display_set_address
                 __i2c_write
                   __i2c_send
                   __i2c_start
                   __i2c_stop
                   __i2c_wait_idle
                 _i2c_set_frequency
               _i2c_set_frequency
             _i2c_display_write_fixed
               __i2c_send
               __i2c_start
               __i2c_stop
               __i2c_wait_idle
               _i2c_set_frequency
           _ui_get_status
         _system_delay_ms
     _api_prepare
       __fill_buffer_find_file
         _fat_find_file
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
           _strncmp
       __fill_buffer_get_bootloader_details
         _bootloader_get_entries
         _bootloader_get_error
         _bootloader_get_file_size
         _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
         _bootloader_get_rec_checksum
         _bootloader_get_rec_checksumCheck
         _bootloader_get_rec_data
         _bootloader_get_rec_dataLength
         _bootloader_get_rec_recordType
         _bootloader_get_total_entries
       __fill_buffer_get_configuration
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_file_details
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
       __fill_buffer_get_status
         _flash_is_busy
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           _spi_set_configuration
         _ui_get_status
       __fill_buffer_read_file
         _fat_get_file_size
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _fat_read_from_file
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __sector_from_cluster
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
       _flash_is_busy
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _spi_set_configuration
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_page_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_page_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_page_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_page_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 _ExternalFlash_MediaDetect *
                 _ExternalFlash_MediaInitialize *
                 _ResetSenseData *
                 _USBTransferOnePacket *
             _MSDTransferTerminated
               _USBStallEndpoint
               _USBTransferOnePacket
             _SYSTEM_Initialize
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               _ExternalFlash_MediaDetect *
               _ExternalFlash_MediaInitialize *
               _ResetSenseData *
               _USBTransferOnePacket *
           _MSDTransferTerminated
             _USBStallEndpoint
             _USBTransferOnePacket
           _SYSTEM_Initialize
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             _USBTransferOnePacket
       _memcpy
     _USBDeviceInit
       _memset
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           _ExternalFlash_MediaDetect *
           _ExternalFlash_MediaInitialize *
           _ResetSenseData *
           _USBTransferOnePacket *
       _MSDTransferTerminated
         _USBStallEndpoint
         _USBTransferOnePacket
       _SYSTEM_Initialize
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         _USBTransferOnePacket
   __normal_mode
     _i2c_eeprom_readByte
       __i2c_read
         __i2c_acknowledge
         __i2c_get
         __i2c_not_acknowledge
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_eeprom_writeByte
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
   _api_parse
     __parse_command_long
       __parse_file_append
         _fat_append_to_file
           __get_empty_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __sector_from_cluster
           __update_modified_time
             __get_date
             __get_time
           __write_fat
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           __write_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _flash_is_busy
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_set_configuration
             _spi_set_configuration
       __parse_file_create
         _fat_create_file
           __get_available_root_entry
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
           __get_date
           __get_empty_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __get_time
           __write_fat
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           __write_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           _fat_find_file
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _strncmp
           _fat_get_empty_clusters
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _memcpy
       __parse_file_delete
         _fat_delete_file
           __delete_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           __get_first_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __write_fat
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
       __parse_file_modify
       __parse_file_rename
         _fat_rename_file
           __write_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_file_truncate
     __parse_command_short
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
               _i2c_set_frequency
             _i2c_set_frequency
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
             _i2c_set_frequency
         _ui_get_status
       _system_delay_ms
   _api_prepare
     __fill_buffer_find_file
       _fat_find_file
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
     __fill_buffer_get_bootloader_details
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_file_size
       _bootloader_get_flashPagesWritten
       _bootloader_get_rec_address
       _bootloader_get_rec_checksum
       _bootloader_get_rec_checksumCheck
       _bootloader_get_rec_data
       _bootloader_get_rec_dataLength
       _bootloader_get_rec_recordType
       _bootloader_get_total_entries
     __fill_buffer_get_configuration
     __fill_buffer_get_display
       _display_get_character
     __fill_buffer_get_file_details
       _fat_get_file_information
         __root_is_available
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __fill_buffer_get_status
       _flash_is_busy
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _spi_set_configuration
       _ui_get_status
     __fill_buffer_read_file
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file
         __read_fat
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_cluster
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     _flash_is_busy
       __flash_is_busy
         __flash_get_status
           _spi_tx_rx
         __flash_wakeup
           _spi_tx
       _spi_set_configuration
     _memcpy
   _bootloader_run
     __bootloader_find_file
       _fat_find_file
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __bootloader_program
       __bootloader_check_address
       _fat_read_from_file
         __read_fat
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_cluster
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _internalFlash_addressWithinPage
         _internalFlash_addressFromPage
       _internalFlash_erasePage
         __internalFlash_unlockAndActivate
       _internalFlash_getBuffer
       _internalFlash_pageFromAddress
       _internalFlash_readPage
         _internalFlash_addressFromPage
         _internalFlash_read
           _memcpy
       _internalFlash_writePage
         __internalFlash_unlockAndActivate
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
     __bootloader_verify_file
       __bootloader_check_address
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file
         __read_fat
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_cluster
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
   _display_prepare
     __display_checked
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_total_entries
     __display_clear
     __display_done
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_flashPagesWritten
     __display_failed
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_rec_address
     __display_found
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_file_size
     __display_programming
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
     __display_rebooting
     __display_search
     __display_start
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
     __display_verify
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _jump_to_main_program
   _spi_get_external_rx_buffer
   _spi_get_external_tx_buffer
   _system_full_init
     __system_encoder_init
     __system_timer0_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_page_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
           _spi_set_configuration
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_page_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
       _spi_set_configuration
     _ui_init
   _system_minimal_init
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
   _system_minimal_init_undo
     _i2c_reset
   _timer_pseudo_isr
   _ui_get_status
   _ui_run
     __ui_encoder
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
               _i2c_set_frequency
             _i2c_set_frequency
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
             _i2c_set_frequency
         _ui_get_status
       _system_delay_ms
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_enable
     _ui_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0     400      35       80.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      40      11       25.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FB       9       98.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     49      9F       5       99.4%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     339      31        0.0%
DATA                 0      0     939       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Sep 03 21:02:18 2018

                          __end_of_fat_read_from_file 211A  
                           ??_internalFlash_getBuffer 0003  
                                          _USB_SD_Ptr 8E7B  
                            fat_create_file@extension 0046  
              __end_of_i2c_display_send_init_sequence 7C10  
             __size_of_i2c_display_send_init_sequence 002C  
                      _i2c_display_send_init_sequence 7BE4  
                                 __system_timer0_init 7E4E  
                                                  _os 0060  
                                       _USBDeviceInit 3B3E  
                                  _USBCheckHIDRequest 4B1C  
                __bootloader_verify_file@return_value 00E3  
                                    ??__flash_is_busy 0012  
                                        __CFG_CP0$OFF 000000  
                      __root_is_available@root_sector 0031  
                           ??_internalFlash_erasePage 0005  
                            ?_i2c_display_write_fixed 0006  
                USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                 l202 53CA  
                                                 l210 5E60  
                                                 l220 4780  
                                                 l141 3BAC  
                                                 l214 60C6  
                                                 l310 59FA  
                                                 l150 3436  
                                                 l143 3BE8  
                                                 l303 797C  
                                                 l151 342C  
                                                 l320 6EF6  
                                                 l208 5E46  
                                                 l224 4802  
                                                 l304 797A  
                                                 l152 342A  
                                                 l241 52B2  
                                                 l233 520E  
                                                 l161 34B2  
                                                 l242 527C  
                                                 l330 5374  
                                                 l322 6F40  
                                                 l235 5218  
                                                 l331 533A  
                                                 l251 40DA  
                                                 l411 4B6A  
                                                 l219 47D8  
                                                 l139 3B84  
                                                 l171 3542  
                                                 l163 34C8  
                                                 l155 3452  
                                                 l252 40C0  
                                                 l412 4B38  
                                                 l260 4A84  
                                                 l164 34D4  
                                                 l156 3462  
                                                 l237 5274  
                                                 l333 535A  
                                                 l309 5A00  
                                                 l173 3566  
                                                 l165 34FC  
                                                 l157 346A  
                                                 l238 523E  
                                                 l422 4B8C  
                                                 l414 4B7C  
                         __end_of_USBStdGetDscHandler 3DC6  
                                                 l262 4AF8  
                                                 l350 4998  
                                                 l166 3508  
                                                 l158 3480  
                                                 l183 466C  
                                                 l191 429C  
                                                 l423 4BA4  
                                                 l415 4B56  
                                                 l271 3CB2  
                                                 l343 49F6  
                                                 l175 3582  
                                                 l159 348C  
                                                 l328 52F2  
                                                 l248 4064  
                                                 l424 4BB0  
                                                 l360 17D8  
                                                 l272 3D40  
                                                 l352 499E  
                                                 l344 4968  
                                                 l168 351A  
                                                 l185 4696  
                                                 l329 52F8  
                                                 l249 4042  
                                                 l521 4540  
                                                 l425 4BC8  
                                                 l361 17DE  
                                                 l281 5A90  
                                                 l353 49BC  
                                                 l610 6DF8  
                                                 l178 78B2  
                                                 l418 4BD4  
                                                 l530 551E  
                                                 l274 3D48  
                                                 l282 5A1E  
                                                 l354 49D8  
                                                 l346 4972  
                                                 l187 4714  
                                                 l603 6E00  
                                                 l179 78C0  
                                                 l371 18FE  
                                                 l363 184A  
                                                 l275 3D9E  
                                                 l347 4978  
                                                 l620 04BE  
                                                 l604 6DC4  
                                                 l372 191A  
                                                 l268 3DAE  
                                                 l348 497E  
                                                 l621 04C8  
                                                 l381 1A12  
                                                 l365 1892  
                                                 l277 3DA6  
                                                 l269 3C9E  
                                                 l285 5AA6  
                                                 l349 4992  
                                                 l710 4C0E  
                                                 l702 1742  
                                                 l614 0810  
                                                 l630 066E  
                                                 l606 6DE0  
                                                 l518 4548  
                                                 l534 5584  
                                                 l374 1980  
                                                 l286 5A30  
                                                 l703 175A  
                                                 l623 0520  
                                                 l615 049E  
                                                 l519 44BC  
                                                 l375 198C  
                                                 l367 18B4  
                                                 l287 5A36  
                                                 l295 771C  
                                                 l712 4C24  
                                                 l704 1772  
                                                 l640 0738  
                                                 l624 05DA  
                                                 l608 6DEC  
                                                 l800 6486  
                                                 l376 1A06  
                                                 l288 5A54  
                                                 l296 771A  
                                                 l721 4CB0  
                                                 l633 06A2  
                                                 l625 05E4  
                                                 l609 6DF2  
                                                 l561 1DEA  
                                                 l529 55BA  
                                                 l369 1934  
                                                 l722 4C9A  
                                                 l650 07B8  
                                                 l634 06D0  
                                                 l626 0604  
                                                 l618 04AE  
                                                 l554 1ED6  
                                                 l562 1DD4  
                                                 l546 558C  
                                                 l810 6478  
                                                 l715 4C54  
                                                 l651 07CC  
                                                 l571 1E06  
                                                 l563 1DA8  
                                                 l555 1CA8  
                                                 l379 19C0  
                                                 l644 0770  
                                                 l636 0704  
                                                 l628 0634  
                                                 l564 1DB0  
                                                 l804 6454  
                                                 l900 3976  
                                                 l661 5F86  
                                                 l741 457C  
                                                 l733 4CC2  
                                                 l645 0784  
                                                 l573 1E18  
                                                 l805 645C  
                                                 l901 397E  
                                                 l750 45B0  
                                                 l718 4C60  
                                                 l670 2D6C  
                                                 l654 0808  
                                                 l646 07A2  
                                                 l638 0720  
                                                 l566 1DC8  
                                                 l806 6464  
                                                 l910 707E  
                                                 l902 3986  
                                                 l751 45BC  
                                                 l719 4C7A  
                                                 l671 2D76  
                                                 l575 1E3A  
                                                 l559 1CC8  
                                                 l903 3990  
                                                 l752 45CE  
                                                 l680 2EA2  
                                                 l672 2D8A  
                                                 l648 07CE  
                                                 l592 419A  
                                                 l576 1E42  
                                                 l808 646E  
                                                 l753 45DA  
                                                 l737 4CD2  
                                                 l665 2EB8  
                                                 l649 07A8  
                                                 l577 1E66  
                                                 l913 70A4  
                                                 l754 45EC  
                                                 l674 2DD4  
                                                 l666 2D0C  
                                                 l690 15A8  
                                                 l586 1EB8  
                                                 l930 748C  
                                                 l659 5F70  
                                                 l747 462E  
                                                 l755 4622  
                                                 l675 2DFC  
                                                 l691 15B4  
                                                 l923 74AA  
                                                 l915 70AC  
                                                 l748 45A8  
                                                 l668 2EDC  
                                                 l676 2E2A  
                                                 l684 178A  
                                                 l692 15D2  
                                                 l596 4232  
                                                 l764 72DC  
                                                 l932 7498  
                                                 l924 7470  
                                                 _BDT 000D00  
                                                 l677 2E3C  
                                                 l669 2D60  
                                                 l693 161C  
                                                 l685 1502  
                                                 l597 422C  
                                                 l589 1EC0  
                                                 l678 2E42  
                                                 l694 15F6  
                                                 l926 747A  
                                                 l679 2E56  
                                                 l687 17AE  
                                                 l695 165E  
                                                 l599 4236  
                                                 l767 7312  
                                                 l696 165A  
                                                 l688 15A2  
                       __size_of__sector_from_cluster 000E  
                                                 l698 1672  
                                                 l890 38C0  
                                                 l963 5AC6  
                                                 l699 16DA  
                                                 l892 3948  
                                                 l894 39A0  
                                                 l895 3956  
                                                 l896 39E4  
                                                 l969 5B34  
                                                 l897 395E  
                                                 l889 38B2  
                                                 l898 3966  
                                                 l899 396E  
                                                 _LBA 0080  
                                                 _LUN 01E4  
                                                 _UIE 000F36  
                                                 _UIR 000F62  
                             __get_first_cluster@slot 0039  
                                _i2c_digipot_reset_on 7DC6  
                                   main@tx_start_addr 00F6  
                            __size_of__display_failed 02F6  
                                         _start_line1 8DF4  
                                         _start_line2 8E62  
                                         _start_line3 8EA7  
                                         _start_line4 8E22  
                                  api_prepare@command 005D  
                                          _USBSuspend 7B86  
                                  _internalFlash_read 7988  
                              __end_of_display_update 6BB8  
                                USBStdSetCfgHandler@i 0018  
                                                 prod 000FF3  
                                                 tosl 000FFD  
                                                 wreg 000FE8  
                                      _USBDeviceTasks 340A  
                                 ?_USBCheckHIDRequest 0001  
                                        __CFG_IESO$ON 000000  
                            __size_of__display_search 0152  
                                      _USBDeviceState 00B0  
                                        ?__write_root 0029  
                            __size_of__display_verify 012C  
                               _spi_set_configuration 4858  
                               ??_USBCtrlTrfRxService 0001  
                                __read_fat@fat_sector 0032  
                                       _hex_file_size 0078  
                            USBEnableEndpoint@options 0009  
                   internalFlash_addressFromPage@page 0001  
                                   ??_MSDErrorHandler 0009  
                                ?__system_timer0_init 0001  
                                 api_prepare@inBuffer 00EE  
                            fat_create_file@root_slot 00B9  
                         __flash_write_to_buffer@data 0016  
                                                l1005 7F72  
                                                l1200 7686  
                                                l2001 2196  
                                                l1201 766A  
                                                l2002 2170  
                                                l1114 7F0E  
                                                l2011 5FF0  
                                                l2004 22EC  
                                                l2020 1F7A  
                                                l2100 1B48  
                                                l2005 220E  
                                                l2013 6024  
                                                l2021 1F54  
                                                l2101 1B4C  
                                                l1301 4E1E  
                                                l2006 2264  
                                                l1230 7396  
                                                l1206 6376  
                                                l2102 1B50  
                                                l2030 516E  
                                                l2007 22AA  
                                                l1151 80B8  
                                                l2023 2102  
                                                l1207 635A  
                                                l2111 726E  
                                                l2103 1B54  
                                                l2031 5122  
                                                l1303 4E36  
                                                l2024 1FF0  
                                                l1160 8042  
                                                l2112 7272  
                                                l2104 1B58  
                                                l2040 5142  
                                                l1080 79DC  
                                                l1320 435A  
                                                l2025 2018  
                                                l2113 7276  
                                                l2041 5146  
                                                l2033 5126  
                                                l2121 32A4  
                                                l1081 79E6  
                                                l1305 4E46  
                                                l1321 436E  
                                                l2026 20C0  
                                                l2018 1F42  
                                                l2210 003E  
                                                l2114 727A  
                                                l2050 516A  
                                                l2042 514A  
                                                l2034 512A  
                                                l2130 332E  
                                                l1322 4384  
                                                l2115 727E  
                                                l2043 514E  
                                                l2035 512E  
                                                l2131 3332  
                                                l2123 32B2  
                                                l1172 804E  
                                                l2220 03C0  
                                                l2212 00B4  
                                                l2108 7286  
                                                l2116 7282  
                                                l2060 1A58  
                                                l2044 5152  
                                                l2036 5132  
                                                l2140 3356  
                                                l2132 3336  
                                                l1316 4420  
                                                l1324 43AC  
                                                l1229 73B2  
                                                l2213 0202  
                                                l2301 7020  
                                                l2109 726A  
                                                l2061 1A68  
                                                l2045 5156  
                                                l2037 5136  
                                                l2141 335A  
                                                l2133 333A  
                                                l2125 32EA  
                                                l1325 43D4  
                                                l1317 4346  
                                                l1166 80B0  
                                                l2222 0426  
                                                l2214 0188  
                                                l2054 1B5C  
                                                l2070 1AD4  
                                                l2062 1A78  
                                                l2046 515A  
                                                l2038 513A  
                                                l2142 335E  
                                                l2134 333E  
                                                l1511 0DF2  
                                                l1087 7D74  
                                                l2311 4F58  
                                                l2071 1AD8  
                                                l2063 1A88  
                                                l2055 1A3A  
                                                l2047 515E  
                                                l2039 513E  
                                                l2127 337A  
                                                l2143 3362  
                                                l2135 3342  
                                                l1327 43F0  
                                                l1192 7C7A  
                                                l1088 7D62  
                                                l2312 4F5A  
                                                l2224 0458  
                                                l2216 033E  
                                                l2152 7CE2  
                                                l2080 1AFC  
                                                l2072 1ADC  
                                                l2064 1A98  
                                                l2048 5162  
                                                l2144 3366  
                                                l2136 3346  
                                                l2128 3326  
                                                l1328 4410  
                                                l1193 7C6C  
                                                l1513 0E9E  
                                                l1505 0BF0  
                                                l1601 2CE8  
                                                l2313 4F64  
                                                l2217 0310  
                                                l2081 1B00  
                                                l2073 1AE0  
                                                l2065 1AA8  
                                                l2057 1A3E  
                                                l2049 5166  
                                                l2145 336A  
                                                l2137 334A  
                                                l2129 332A  
                                                l1194 7C8E  
                                                l1602 2CBA  
                                                l1610 3E4E  
                                                l1178 803A  
                                                l2226 048A  
                                                l2090 1B24  
                                                l2082 1B04  
                                                l2074 1AE4  
                                                l2066 1AB8  
                                                l2058 1A42  
                                                l2146 336E  
                                                l2138 334E  
                                                l2162 5CA6  
                                                l1290 4DC4  
                                                l1195 7C70  
                                                l1507 0C9A  
                                                l1611 3E20  
                                                l2307 4F70  
                                                l2219 039C  
                                                l2331 140E  
                                                l2091 1B28  
                                                l2083 1B08  
                                                l2075 1AE8  
                                                l2067 1AC8  
                                                l2059 1A46  
                                                l2147 3372  
                                                l2139 3352  
                                                l1196 7C74  
                                                l1620 3590  
                                                l1540 5056  
                                                l2308 4EAC  
                                                l2332 1440  
                                                l2092 1B2C  
                                                l2084 1B0C  
                                                l2076 1AEC  
                                                l2068 1ACC  
                                                l2148 3376  
                                                l1461 7610  
                                                l1509 0D46  
                                                l1613 3EA2  
                                                l2309 4F02  
                                                l2341 0874  
                                                l2333 146E  
                                                l2085 1B10  
                                                l2077 1AF0  
                                                l2069 1AD0  
                                                l2149 3406  
                                                l1293 4DD6  
                                                l2190 6846  
                                                l3310 74D6  
                                                l1622 3612  
                                                l1614 3E74  
                                                l1550 50EA  
                                                l1542 505C  
                                                l2342 08F2  
                                                l2334 14CA  
                                                l2094 1B30  
                                                l2086 1B14  
                                                l2078 1AF4  
                                                l2158 5C56  
                                                l1471 54AE  
                                                l1623 35E4  
                                                l1463 761C  
                                                l1607 3DFA  
                                                l1551 50D6  
                                                l1543 5062  
                                                l2319 5BEC  
                                                l2351 09F4  
                                                l2343 094C  
                                                l2327 12DA  
                                                l2095 1B34  
                                                l2087 1B18  
                                                l2079 1AF8  
                                                l1295 4DE6  
                                                l2192 6856  
                                                l3320 77B2  
                                                l1640 1190  
                                                l1560 2754  
                                                l1608 3DCC  
                                                l1552 50DC  
                                                l1544 5068  
                                                l2344 09A6  
                                                l2336 14EC  
                                                l2328 1334  
                                                l2096 1B38  
                                                l2088 1B1C  
                                                l3313 74FE  
                                                l1473 54D2  
                                                l1625 3690  
                                                l1553 50E2  
                                                l1545 506E  
                                                l2601 57D8  
                                                l2441 6624  
                                                l2353 0AA2  
                                                l2329 13AE  
                                                l2097 1B3C  
                                                l2089 1B20  
                                                l1289 4E6C  
                                                l1297 4DFE  
                                                l3314 7508  
                                                l1626 3658  
                                                l3242 6D3C  
                                                l1642 1012  
                                                l1634 0F6A  
                                                l1562 27D6  
                                                l1554 5114  
                                                l1546 5074  
                                                l2610 2B22  
                                                l2602 57A4  
                                                l2354 0B66  
                                                l2098 1B40  
                                                l3323 77D2  
                                                l1475 54F6  
                                                l1619 35BE  
                                                l3243 6D4A  
                                                l1651 10B2  
                                                l1643 0FE4  
                                                l1635 0F3C  
                                                l1563 27A8  
                                                l1539 508C  
                                                l1547 507A  
                                                l2611 2AFA  
                                                l2603 57B0  
                                                l2195 7C20  
                                                l2347 0BB0  
                                                l2355 0AAC  
                                                l2099 1B44  
                                                l1299 4E0E  
                                                l3324 77DC  
                                                l3500 5D30  
                                                l1468 5488  
                                                l1628 36E4  
                                                l1660 1124  
                                                l1652 1084  
                                                l1580 3AC8  
                                                l1548 5080  
                                                l2356 0B24  
                                                l2348 09B8  
                                                l2292 702C  
                          USBConfigureEndpoint@handle 0007  
                                                l3309 74DE  
                                                l1629 36B6  
                                                l1645 11B2  
                                                l1637 0FBE  
                                                l1581 3A9A  
                                                l1565 28C8  
                                                l1549 5086  
                                                l2197 7C2A  
                                                l2357 0B60  
                                                l2293 7002  
                                                l1910 67D0  
                                                l3238 6D14  
                                                l1662 11E6  
                                                l1638 0F90  
                                                l1590 2B32  
                                                l1574 3A20  
                                                l1566 289A  
                                                l2622 5DBA  
                                                l2446 7CF4  
                                                l3319 77BA  
                                                l3239 6D08  
                                                l1663 11B8  
                                                l1655 1102  
                                                l1647 1062  
                                                l1671 2F6A  
                                                l1583 3B1C  
                                                l1575 39F2  
                                                l1559 2782  
                                                l2631 5888  
                                                l3511 7C56  
                                                l2455 79BC  
                                                l2439 6618  
                                                l2199 7C38  
                                                l2359 0B7C  
                                                l1912 6836  
                                                l1920 7DBE  
                                                l1656 10D4  
                                                l1648 1034  
                                                l1592 2BB4  
                                                l1672 2F3C  
                                                l1584 3AEE  
                                                l1568 291C  
                                                l2632 5806  
                                                l3512 7C46  
                                                l2296 700E  
                                                l3505 6DB0  
                                                l1593 2B86  
                                                l1577 3A74  
                                                l1569 28EE  
                                                l2609 2AF4  
                                                l1746 745A  
                                                l1842 6A0A  
                                                l1930 62BE  
                                                l3506 6D72  
                                                l2650 626A  
                                                l1690 37B4  
                                                l1674 2FBE  
                                                l1578 3A46  
                                                l2634 5822  
                                                l2570 3FEA  
                                                l1834 7362  
                                                l2298 701A  
                                                l1738 6692  
                                                l1747 7418  
                                                l3523 5674  
                                                l2643 627A  
                                                l1683 373A  
                                                l1659 1152  
                                                l1595 2C08  
                                                l1675 2F90  
                                                l2635 583E  
                                                l2627 24F2  
                                                l2571 3F74  
                                                l1739 66BE  
                                                l1764 66E8  
                                                l1756 71CC  
                                                l2812 6416  
                                                l1844 6A6C  
                                                l3524 55CE  
                                                l2644 6224  
                                                l1692 385A  
                                                l1684 370C  
                                                l1596 2BDA  
                                                l1668 2F16  
                                                l2636 585A  
                                                l2580 4F8C  
                                                l2564 3F5E  
                                                l2821 6148  
                                                l1749 7440  
                                                l1765 66F2  
                                                l1757 71D6  
                                                l3525 566C  
                                                l1933 6320  
                                                l2645 62A8  
                                                l1693 382C  
                                                l1589 2B60  
                                                l1677 3072  
                                                l1669 2EE8  
                                                l2637 5876  
                                                l2573 3F82  
                                                l2565 3F1C  
                                                l2806 7260  
                                                l1926 6912  
                                                l1918 7DAE  
                                                l2646 6232  
                                                l1686 378E  
                                                l1598 2C94  
                                                l1678 3044  
                                                l2638 587C  
                                                l2574 3F94  
                                                l1767 672A  
                                                l1791 7174  
                                                l2815 644A  
                                                l1783 75C8  
                                                l2663 6B1E  
                                                l2647 6240  
                                                l1687 3760  
                                                l1599 2C5C  
                                                l2639 5882  
                                                l2583 4F92  
                                                l2575 3FA6  
                                                l2567 3F32  
                                                l2824 6184  
                                                l1792 717E  
                                                l1784 75D2  
                                                l2648 624E  
                                                l2576 3FB4  
                                                l2568 3F48  
                                                l1769 6748  
                                                l2657 754E  
                                                l2649 625C  
                                                l1689 37E2  
                                                l2585 500A  
                                                l2577 3FC2  
                                                l1873 7AA6  
                                                l1962 56E4  
                                                l1698 73F4  
                                                l2586 4FAE  
                                                l2675 6596  
                                                l1699 73C6  
                                                l2587 5042  
                                                l1980 322A  
                                                l2588 4FC6  
                                                l1797 7E4A  
                                                l1981 3260  
                                                l2669 6BF4  
                                                l3493 7786  
                                                l2861 653A  
                                                l2589 4FE2  
                                                l2597 5760  
                                                l1877 7A74  
                                                l1990 6C84  
                                                l2862 6548  
                                                l2790 789C  
                                                l2599 579A  
                                                l2791 787C  
                                                l1968 5738  
                                                l1977 312E  
                                                l1985 6C2C  
                                                l3497 5CB8  
                                                l2857 6506  
                                                l1978 3266  
                                                l2858 64FA  
                                                l2795 4948  
                                                l1979 3208  
                                                l3499 5CF2  
                                                l2796 485C  
                                                l1988 6C46  
                                                l2788 788E  
                                                l2789 786A  
                                                l2798 48BC  
                                                l1998 2128  
                                                STR_1 8FF2  
                                                STR_2 8FF2  
                                                STR_3 8FF2  
                                                STR_4 8FF2  
                                                STR_5 8FF2  
                                                STR_6 8FF2  
                                                STR_7 8FF2  
                               __end_of_checked_line1 8DC4  
                                                STR_8 8FF2  
                               __end_of_checked_line2 8CAE  
                                                STR_9 8FDD  
                               __end_of_checked_line3 8E7B  
                               __end_of_checked_line4 8D43  
                                      _bootloader_run 6FFE  
                                 ?_internalFlash_read 000E  
                                       _i2c_frequency 0099  
                                                u6120 77BE  
                                                u6300 70EA  
                                                u6310 70F4  
                                                u7110 4CCE  
                                                u7200 0E06  
                                                u7040 4C96  
                                                u6090 74E2  
                                                u6316 70F6  
                                                u6308 70EC  
                                                u6260 70BA  
                                                u7310 5626  
                                                u6270 70C6  
                                                u7230 7AA2  
                                                u7070 4CAC  
                                                u8200 7DC2  
                                                u7320 565C  
                                                u6280 70D2  
                                                u6600 4568  
                                                u7240 7A70  
                                                u6505 6764  
                                                u6290 70DE  
                                                u7090 4CBE  
                                                u7410 52A4  
                                                u7315 5620  
                                                u6268 70BC  
                                                u7180 0CAE  
                                                u7317 5616  
                                                u8230 6918  
                                                u7430 6D92  
                                                u6278 70C8  
                                                u7190 0D5A  
                                                u7327 5652  
                               ??_USBCtrlTrfTxService 0001  
                                                u7280 6832  
                                                u9040 30FE  
                                                u9200 6054  
                                                u6288 70D4  
                                                u7265 67F6  
                                                u8305 6CB6  
                                                u7417 529A  
                                                u7290 55EE  
                                                u9050 312C  
                                                u6298 70E0  
                                                u6538 44DC  
                                                u6395 66FE  
                                                u6539 44EE  
                                                u6660 5474  
                                                u7508 2DAE  
                                                u7700 1716  
                                                u6485 718A  
                                                u7437 6D88  
                                                u9045 30F4  
                                                u7509 2DC2  
                                                u6670 549A  
                                                u7390 5266  
                                                u6574 4532  
                                                u6558 4500  
                                                u6910 5566  
                                                u6735 71E2  
                                                u8415 687C  
                                                u7455 2D32  
                                                u6575 452C  
                                                u6559 4514  
                                                _UCFG 000F39  
                                                u6680 54BE  
                                                u6760 650A  
                                                u7297 55E4  
                                                u8370 5744  
                                                u6690 54E2  
                                                u8530 3D0A  
                                                u8380 574A  
                                                u9180 6018  
                                                u8540 3D3A  
                                                _UEP0 000F26  
                                                u8285 7130  
                                                u7565 1528  
                                                u7397 525C  
                                                _UEP1 000F27  
                                                u6790 6D18  
                                                u7718 171C  
                                    ?_fat_create_file 0044  
                                                u8295 6FCA  
                                                u7719 1730  
                                                u7648 1628  
                                                u8560 3D92  
                                                u7649 163C  
                                                u8537 3D00  
                                                u9521 32BC  
                                                u7690 1714  
                                                u8490 4AB0  
                                                u9435 6944  
                                                u8547 3D30  
                                                _UEIE 000F37  
                                                u7588 155C  
                                                u7589 1570  
                                                u9630 754A  
                                                u7790 7648  
                                                u9375 77F2  
                                                u8567 3D88  
                                                u9720 6592  
                                                u9660 6B1A  
                                                u8780 19A6  
                                                u9565 69A2  
                                                u8950 074C  
                                                u9830 4168  
                                                u8960 075E  
                                                u8880 062C  
                                                u8848 052C  
                                                _UEIR 000F63  
                                                _UCON 000F65  
                                                u8849 0540  
                                                u9585 7BC4  
                                                u9690 6BF0  
                                                u8858 055C  
                                                u9818 4136  
                                                u8859 0570  
                                                u9819 414A  
                                                u9844 417E  
                                                u9845 4178  
                                                u8990 07D6  
                                                u9854 41B0  
                                                u9855 41AA  
                                                u9960 5C5C  
                                                u8898 064C  
                                                u8899 0660  
                                                u9894 4202  
                                                u9878 41D2  
                                                u9990 5CAC  
                                                u9895 41FC  
                                                u9879 41E4  
                               _i2c_digipot_reset_off 7DE8  
                             ??_fat_get_format_status 002C  
                           __parse_file_truncate@data 0001  
                               __size_of__delete_root 005C  
                                      _ResetSenseData 6E24  
              __end_of__fill_buffer_get_configuration 5F32  
             __size_of__fill_buffer_get_configuration 009E  
                      __fill_buffer_get_configuration 5E94  
              USBStdFeatureReqHandler@current_ep_data 001B  
                              ?__update_modified_time 0005  
                                                _pDst 008E  
                                                _main 387C  
                                                _itoa 7762  
                          __end_of_fat_append_to_file 233A  
                         __size_of_APP_DeviceMSDTasks 0014  
                                                fsr0h 000FEA  
                                                fsr1h 000FE2  
                             __end_of_display_prepare 5120  
                                                indf0 000FEF  
                                                fsr2h 000FDA  
                                                fsr0l 000FE9  
                                                indf1 000FE7  
                                                indf2 000FDF  
                                                fsr1l 000FE1  
                                                fsr2l 000FD9  
                                                _utoa 5CB0  
                              __CFG_DSWDTOSC$T1OSCREF 000000  
                          ??_ExternalFlash_SectorRead 0034  
                         __fill_buffer_find_file@cntr 004C  
                             __bootloader_verify_file 122C  
                           _ExternalFlash_MediaDetect 80EE  
                                                prodh 000FF4  
                                                prodl 000FF3  
                                                start 001C  
                     __end_of_APP_DeviceMSDInitialize 7FF0  
                               _display_get_character 7C94  
                                ??_USBCheckHIDRequest 0001  
                                    ?_MSDWriteHandler 0001  
                                __end_of_failed_line1 8DB4  
                                __end_of_failed_line2 8D20  
                                __end_of_failed_line4 8E73  
                      ??_MSDProcessCommandMediaAbsent 0048  
                          __end_of_USBCheckStdRequest 4A3A  
                              ??_USBCtrlTrfOutHandler 0003  
                                 __bootloader_program 085A  
                        ??__flash_copy_page_to_buffer 0017  
                    __fill_buffer_find_file@outBuffer 0046  
                      ?__flash_write_page_from_buffer 0014  
                                        ___param_bank 000000  
                           __size_of_flash_page_write 0056  
                           ??_USBStdFeatureReqHandler 0018  
                                        _USBOutHandle 0084  
                internalFlash_addressFromPage@address 0005  
                               parseHexFileEntry@data 000C  
                            __end_of__display_checked 3706  
                                      _hex_file_entry 01C6  
                              _bootloader_get_entries 8072  
                     __size_of__flash_write_to_buffer 0050  
                            ??_USBStdGetStatusHandler 0001  
                                ??_internalFlash_read 0016  
                                      ?_USBDeviceInit 0001  
                                   __flash_get_status 7B54  
    __fill_buffer_get_bootloader_details@buffer_large 000C  
                            _system_ui_inactive_count 016E  
    __fill_buffer_get_bootloader_details@buffer_small 0010  
                                       __CFG_PLLDIV$2 000000  
                       i2c_display_write_fixed@length 0008  
                          __end_of__get_first_cluster 6CF6  
                                               l12011 601C  
                                               l10317 4C60  
                                               l11311 6320  
                                               l11241 7DA6  
                                               l11401 574A  
                                               l11313 6324  
                                               l10419 0BF0  
                                               l11261 68B6  
                                               l10199 4B50  
                                               l10561 55CE  
                                               l10385 747A  
                                               l10627 5218  
                                               l13107 5C78  
                              ?_i2c_digipot_backlight 0001  
                                               l11365 56AE  
                                               l10389 7498  
                                               l13141 259C  
                                               l13061 665C  
                                               l11359 569A  
                                               l13231 2710  
                                               l13207 26BC  
                                               l13127 2558  
                                               l14009 4FDE  
                                               l12265 1F54  
                                               l10737 2EB2  
                                               l10659 6D72  
                                               l10579 7C46  
                                               l13331 4F02  
                                               l13219 26E2  
                                               l13155 25E0  
                                               l11725 05FC  
                                               l11493 4A7C  
                                               l13405 661C  
                                               l13229 2708  
                                               l13181 264A  
                             ?__fill_buffer_find_file 0044  
                                               l11911 322A  
                                               l13191 2670  
                                               l10881 7608  
                                               l13193 2678  
                                               l13169 2624  
                                               l13089 5C28  
                                               l14315 0B24  
                                               l12653 32EA  
                                               l12645 32B2  
                                               l10887 7614  
                                               l13551 57A8  
                                               l14191 125A  
                                               l12639 32A4  
                                               l11953 2170  
                                               l14441 3512  
                                               l12761 7CE2  
                                               l12745 337A  
                                               l13477 5DB2  
                                               l13725 3B7C  
                                               l13399 6610  
                                               l15193 649E  
                                               l13753 3BE0  
                                               l15195 64D2  
                                               l15187 1B74  
                                               l15189 1C8C  
                                               l11999 5FE8  
                                               l13863 1CC0  
                                        spi_tx@length 0003  
                                  ?__flash_get_status 000D  
                             __end_of_fat_rename_file 6064  
                                               ?_main 0001  
                                               ?_itoa 0011  
                                               STR_10 8FE9  
                                               STR_11 8FFB  
                                               STR_12 8FD0  
                               ?_i2c_digipot_reset_on 0001  
                                    ??__display_clear 0001  
                   __size_of_USBCtrlEPServiceComplete 0100  
                                               u10010 2580  
                                     __end_of___lldiv 655A  
                                               u10110 26A0  
                                               u10030 25C4  
                                               ?_utoa 0008  
                    MSDCheckForErrorCases@DeviceBytes 000B  
                                               u10130 26DA  
                                               u10050 2608  
                                               u10150 2708  
                                               u10070 2642  
                                               u10170 2738  
                                               u10090 2670  
                                               u11060 12AA  
                                               u10430 24E2  
                                               u10270 4ED2  
                                               u10190 00A2  
                                               u11150 08C2  
                                               u10520 3BA0  
                                               u10345 7EAA  
                                               u10290 4F2E  
                                               u12107 744E  
                                               u10355 7A00  
                                               u10365 65EA  
                                               u10470 57D6  
                                               u10550 3C44  
                                               u10390 663E  
                                     __end_of___llmod 6D5C  
                              __end_of_USBDeviceTasks 358A  
                                               u12077 7D68  
                                               u10670 1CBC  
                                               u11470 3586  
                                               u11710 440A  
                                               u12087 7432  
                                               u11560 5ADE  
                                               u12097 7444  
                                               u10690 1CF0  
                                               u11580 5AF4  
                                               u10860 1E9A  
                                               u11660 4396  
                                               u10925 7570  
                                               u10941 7BEE  
                           ?_USBCtrlEPServiceComplete 0001  
                                     __end_of___lwdiv 7512  
                        __flash_write_to_buffer@start 0014  
                                    ??__display_found 0025  
                                     __end_of___lwmod 77E6  
                                       __CFG_WDTEN$ON 000000  
                                               _UADDR 000F38  
                                               _TMR0H 000FD7  
                                               _TMR0L 000FD6  
                                _file_minimum_address 0148  
                                    ??__display_start 0025  
                                               _USTAT 000F64  
                                    __i2c_read@length 0008  
                          __size_of_parseHexFileEntry 047C  
                         ?_ExternalFlash_CapacityRead 0001  
                                     ?_display_update 0001  
                            __bootloader_program@cntr 00F1  
                  __size_of_USBCtrlEPAllowStatusStage 00C4  
                                ?__bootloader_program 0001  
                                        __delete_root 6FA2  
                                     ??_flash_is_busy 0014  
                                    __end_of_MSDTasks 1EF4  
                                      __CFG_FCMEN$OFF 000000  
                                     __read_fat@value 0036  
                                  _USBCheckMSDRequest 550A  
                     __end_of_internalFlash_getBuffer 8036  
                     __end_of_USBCtrlEPAllowDataStage 5E94  
                                               _sd000 8FCC  
                                               _sd001 8EE8  
                                               _sd002 8F1C  
                                               _sd003 8F8B  
                      ?_USBIncrement1msInternalTimers 0001  
                      __size_of_MSDTransferTerminated 0056  
                                 ??__flash_get_status 000F  
                              __end_of_bootloader_run 7058  
                 i2c_display_send_init_sequence@F6808 02F2  
                       __end_of_MSDTransferTerminated 7314  
                                        _gblCBWLength 009D  
                          __end_of__parse_file_delete 7564  
                           ??_internalFlash_writePage 0005  
                              ?_MSDCheckForErrorCases 000B  
                               ??__system_timer0_init 0001  
                          __end_of__parse_file_append 65DC  
                          __end_of__parse_file_create 6B4E  
                              __end_of_ResetSenseData 6E86  
                            __get_empty_cluster@value 0036  
                          __end_of__parse_file_modify 80FA  
                          __end_of__parse_file_rename 6C22  
                           internalFlash_read@address 000E  
                            __parse_command_long@data 0053  
                           fat_get_format_status@cntr 002E  
                             ?__fill_buffer_read_file 0055  
                                               pclath 000FFA  
                                     __end_of_ui_init 7F68  
                                               tablat 000FF5  
                           __size_of_USBStallEndpoint 0108  
                                 ?_USBCheckMSDRequest 0001  
                                     _MSDCommandState 00A1  
                         ??_ExternalFlash_SectorWrite 002E  
                                               plusw1 000FE3  
                                               plusw2 000FDB  
                     __end_of_internalFlash_erasePage 7A26  
                          __end_of__display_rebooting 7416  
                                         ?_USBMSDInit 0001  
            ExternalFlash_WriteProtectStateGet@config 0001  
                       __size_of__system_encoder_init 003A  
                                               utoa@c 0010  
                                               utoa@v 000E  
                                               status 000FD8  
                             i2c_eeprom_readByte@addr 0018  
                         ?__flash_copy_page_to_buffer 0014  
                                   __CFG_DSWDTPS$8192 000000  
                                     __end_of_strncmp 568E  
                               hexCharsToUint8@retVal 0006  
                     __fill_buffer_read_file@inBuffer 0055  
                      __bootloader_check_address@cntr 000C  
                      ??_MSDComputeDeviceInAndResidue 0003  
                            __ic2_display_set_address 7D34  
             __fill_buffer_get_file_details@outBuffer 0041  
                                      _MSDReadHandler 2D0A  
                                   __delete_root@slot 002F  
                        __size_of_USBStdSetCfgHandler 00E2  
                   fat_create_file@number_of_clusters 00BA  
                                flash_page_write@data 0022  
                     __size_of_fat_get_empty_clusters 008E  
               __bootloader_check_address@byte_status 000B  
                                flash_page_write@page 0020  
                       internalFlash_readPage@address 0018  
                                     __initialization 58B6  
                       fat_read_from_file@file_number 00B7  
                           __end_of__flash_get_status 7B86  
                        fat_get_file_information@data 0037  
                  spi_set_configuration@configuration 0001  
                                 _system_minimal_init 7FC0  
               __end_of_ExternalFlash_MediaInitialize 7EF6  
              __size_of_ExternalFlash_MediaInitialize 001A  
                       _ExternalFlash_MediaInitialize 7EDC  
                      __size_of_system_encoder_enable 0010  
                                         _FileAddress 0164  
                                        __end_of_main 39EC  
                                        __end_of_itoa 77A4  
                       __end_of_system_encoder_enable 7FB0  
                          i2c_eeprom_readByte@address 0012  
                     __end_of_i2c_display_write_fixed 73C0  
                                        __end_of_utoa 5D54  
                                __end_of__normal_mode 70B0  
                                    _timer_pseudo_isr 79BE  
                            __parse_command_short@cmd 002C  
                                    __end_of_i2c_init 8018  
                            __end_of__i2c_acknowledge 8054  
                      __end_of__fill_buffer_find_file 5DF6  
                                       ??__i2c_open_1 0001  
                                     _hex_file_offset 007C  
                          __end_of__get_empty_cluster 6922  
                                ??_USBCheckMSDRequest 000C  
                   __fill_buffer_get_status@outBuffer 0015  
                                      __CFG_OSC$HSPLL 000000  
                     ??_bootloader_get_rec_dataLength 0003  
              MSDComputeDeviceInAndResidue@DiExpected 0001  
                              hexCharsToUint16@retVal 000A  
                             _USBCheckMSDRequest$2320 000E  
                             _USBCheckMSDRequest$2319 000C  
                             _bootloader_get_rec_data 7F28  
                           __size_of_USBCtrlEPService 00AC  
                             __display_rebooting@cntr 0001  
                                        __get_fat@idx 0001  
                                        __get_fbr@idx 0001  
                                       _startup_timer 016C  
                                api_prepare@outBuffer 00F0  
                                              ??_main 005E  
                                    __end_of__i2c_get 804A  
                                              ??_itoa 0017  
                                  USBStallEndpoint@ep 0006  
                                __size_of__ui_encoder 00E0  
                                              ??_utoa 000E  
                          __bootloader_program@buffer 00E2  
                                       __activetblptr 000003  
                                     ?_USBDeviceTasks 0001  
                               main@bytes_transmitted 00F8  
                            _fat_get_file_information 683A  
                                  __write_root@offset 002E  
                                        __get_mbr@idx 0001  
          __end_of_ExternalFlash_WriteProtectStateGet 80EE  
         __size_of_ExternalFlash_WriteProtectStateGet 0004  
                ??_ExternalFlash_WriteProtectStateGet 0003  
                 ?_ExternalFlash_WriteProtectStateGet 0001  
                  _ExternalFlash_WriteProtectStateGet 80EA  
                                         ?_USBSuspend 0001  
                         ?_spi_get_external_rx_buffer 0001  
                                __size_of_api_prepare 0120  
                               ??__bootloader_program 0055  
          __internalFlash_unlockAndActivate@UnlockKey 0001  
                              ?_spi_set_configuration 0001  
                                _i2c_eeprom_writeByte 77E6  
                         ?_spi_get_external_tx_buffer 0001  
                                ?_system_minimal_init 0001  
                                     ?_bootloader_run 0001  
                       __flash_write_to_buffer@buffer 001A  
                                     _system_delay_ms 7D5A  
                              __flash_write_to_buffer 75B4  
                     i2c_digipot_reset_off@data_array 000B  
                       __size_of__parse_file_truncate 0004  
                      __end_of__fill_buffer_read_file 2550  
                                _start_from_byte_next 0095  
                                    ___llmod@dividend 0001  
                                              _EECON1 000FA6  
                                              _EECON2 000FA7  
                                              _DMABCH 000F66  
                                              _DMABCL 000F67  
                                   ??__display_failed 0025  
                              ?_i2c_digipot_reset_off 0001  
                                     ?_ResetSenseData 0001  
                         ??__get_available_root_entry 0037  
                                          __i2c_start 80B6  
                              SYSTEM_Initialize@state 0005  
                                          __i2c_write 764C  
                           fat_read_from_file@cluster 00D8  
                __flash_write_page_from_buffer@buffer 0016  
                                              _INTCON 000FF2  
                                              _TABLAT 000FF5  
                           ??__bootloader_verify_file 0055  
                     ??_APP_DeviceCustomHIDInitialize 000D  
                            ?__fill_buffer_get_status 0015  
                                   ??__display_search 0001  
                                    __end_of__get_fat 72BE  
                                    __end_of__get_fbr 1C9C  
                                    __end_of__get_mbr 51EE  
                                              _OSCCON 000FD3  
                         __flash_partial_read@address 0024  
                                              _TBLPTR 000FF6  
                                      __CFG_WDTPS$512 000000  
                                              _RPINR1 000EE1  
                                              _RPOR21 000ED5  
                                              _RPINR2 000EE2  
                                              _RPOR22 000ED6  
                                              _RPINR3 000EE3  
                                              _RPOR23 000ED7  
                           __size_of_system_full_init 005C  
                                   ??__display_verify 001F  
                                  __size_of_i2c_reset 000E  
                                      __CFG_WPCFG$OFF 000000  
                              __end_of_MSDReadHandler 2EE2  
                                 _flash_pages_written 0166  
                                   __spi_init@details 0001  
                                    ??__i2c_wait_idle 0001  
                              ?_display_get_character 0001  
                                    ?_display_prepare 0001  
                         fat_append_to_file@file_size 00B7  
            __fill_buffer_get_bootloader_details@cntr 000B  
                         __flash_partial_read@command 0020  
                                      __CFG_WPDIS$OFF 000000  
                               __bootloader_find_file 5B66  
                                    __read_fat@offset 0034  
                                    __end_of_fat_init 7FE0  
                   __bootloader_program@page_to_write 00F3  
                                   _shortPacketStatus 00AF  
                   fat_append_to_file@number_of_bytes 003F  
                          __get_empty_cluster@cluster 0038  
                                      __CFG_XINST$OFF 000000  
                                     USBDeviceTasks@i 0020  
                         USBStdFeatureReqHandler@pUEP 0019  
                            USBTransferOnePacket@data 0002  
                          USBCtrlTrfInHandler@lastDTS 0002  
                     __end_of_internalFlash_writePage 665A  
                        __end_of__flash_set_page_size 66D4  
                                     _hexCharsToUint8 7E8A  
                                     ??_USBDeviceInit 0009  
                  __flash_copy_page_to_buffer@command 001A  
                            flash_partial_read@length 002C  
                                              _gblCBW 0100  
                                   _fat_get_file_size 6922  
                                  __size_of__i2c_read 008C  
                           __size_of_hexCharsToUint16 0070  
                                  __size_of__i2c_send 0008  
                                      __CFG_STVREN$ON 000000  
                                  __size_of__i2c_stop 0008  
                                           ??___lldiv 0009  
                                           ??___llmod 0009  
           SYSTEM_Initialize@pll_startup_counter_3036 0003  
                                           ??___lwdiv 0005  
                        __size_of_flash_partial_write 0070  
                                          _SoftDetach 009C  
                                           ??___lwmod 0005  
                                              _buffer 0340  
                                   _USBEnableEndpoint 78A2  
                       __bootloader_program@address32 00EC  
                     __size_of_USBStdGetStatusHandler 00AA  
                                              _memcpy 6D5C  
                                  ?_fat_get_file_size 0030  
                                              _memset 7C3C  
                                              clear_0 5910  
                                              clear_1 5924  
                                              clear_2 5936  
                                              clear_3 5942  
                                              clear_4 594E  
                                              clear_5 595A  
                           _ExternalFlash_SectorWrite 7A5A  
                                   api_parse@inBuffer 00E8  
                                     __CFG_CLKOEC$OFF 000000  
                                    __end_of_inq_resp 8F6E  
                                              _reboot 7EF6  
                __bootloader_check_address@worst_case 000A  
                              ??_i2c_digipot_reset_on 000B  
                        bootloader_get_rec_data@index 0001  
                                              _ui_run 4344  
                                              _spi_tx 7210  
                                  ?_USBEnableEndpoint 0009  
                         internalFlash_erasePage@page 0003  
                             i2c_eeprom_writeByte@dat 0011  
                                  _flash_partial_read 7B22  
                                              _tx_buf 01F8  
                                    ?_fat_rename_file 003F  
                          __parse_command_long@length 0055  
                            ??_internalFlash_readPage 0018  
                       __size_of_USBTransferOnePacket 0102  
                                 __size_of_USBMSDInit 0106  
                         i2c_display_write_fixed@data 0006  
         i2c_display_send_init_sequence@init_sequence 000B  
                              __size_of__flash_wakeup 0056  
                             __write_root@root_sector 002C  
                                              itoa@cp 0017  
                                   _i2c_set_frequency 7C68  
                        __end_of_jump_to_main_program 80CC  
                               __end_of_fat_find_file 574E  
                         fat_get_empty_clusters@value 0036  
                                 ??_fat_get_file_size 0034  
                              _fat_get_empty_clusters 62AC  
                       __size_of__parse_command_short 00B4  
                         ?_bootloader_get_rec_address 0001  
                               ?_i2c_eeprom_writeByte 000B  
                                        __mediumconst 8C98  
                                 __end_of__i2c_open_1 7F28  
                      i2c_digipot_reset_on@data_array 000B  
                               ??_system_minimal_init 0002  
                                              tblptrh 000FF7  
                                              tblptrl 000FF6  
             __end_of_internalFlash_addressWithinPage 6EE6  
            __size_of_internalFlash_addressWithinPage 0060  
                   ??_internalFlash_addressWithinPage 000F  
                    ?_internalFlash_addressWithinPage 0009  
                     _internalFlash_addressWithinPage 6E86  
                                              tblptru 000FF8  
                                    __end_of_spi_init 78A2  
                                           ??_ui_init 0001  
                    __size_of_APP_DeviceMSDInitialize 0010  
                                       main@rx_buffer 00FA  
                     ??__flash_compare_page_to_buffer 0017  
                                 ??_USBEnableEndpoint 000A  
                                  ?_i2c_set_frequency 0001  
                                 ?_flash_partial_read 0028  
                         ??__bootloader_check_address 0006  
                            __size_of_flash_page_read 0032  
                                       spi_tx_rx@data 0005  
                          __end_of__root_is_available 683A  
                             __spi_external_rx_buffer 0200  
                                       spi_tx_tx@data 0005  
                                         _CtrlTrfData 000D38  
                                           ??_strncmp 0007  
                                __size_of__write_root 0058  
                                       main@tx_buffer 00FC  
                               __end_of_ui_get_status 80E4  
                     ExternalFlash_MediaDetect@config 0001  
                                _controlTransferState 00AE  
                          ??_APP_DeviceCustomHIDTasks 00F2  
                                __CFG_LS48MHZ$SYS48X8 000000  
                             __spi_external_tx_buffer 0240  
                                   _SYSTEM_Initialize 746C  
                                 ??_i2c_set_frequency 0001  
                       fat_read_from_file@read_length 00DC  
                                          __accesstop 0060  
                             __end_of__initialization 5960  
                   MSDCheckForErrorCases@MSDErrorCase 0010  
                                     ?_MSDReadHandler 0001  
                                  ?_SYSTEM_Initialize 0001  
                              __size_of__display_done 0176  
                                       ___rparam_used 000001  
                                  parseHexFileEntry@i 001C  
                            __size_of_USBStallHandler 0044  
                        __end_of__i2c_not_acknowledge 8040  
                     ExternalFlash_SectorWrite@config 0025  
                     ExternalFlash_SectorWrite@buffer 002B  
                    __fill_buffer_read_file@file_size 00E2  
                         __end_of__parse_command_long 62AC  
                   __end_of_failed_line3_noNextRecord 8E22  
                                  __size_of__get_data 0028  
                                  __size_of__get_date 000A  
                           __end_of_fat_get_file_size 6994  
                                 __size_of_USBSuspend 0030  
                                  __size_of__get_time 000A  
                                  __size_of__get_root 0196  
                               __write_fat@fat_sector 002D  
                               flash_page_write@match 0024  
                                ??_flash_partial_read 0030  
                                    _flash_page_write 7314  
                                      __pcstackCOMRAM 0001  
                          __size_of__flash_get_status 0032  
                           __end_of_USBEnableEndpoint 78DE  
                            _bootloader_get_file_size 7F8E  
                 __size_of_ExternalFlash_CapacityRead 0012  
                                       __end_of_sd000 8FD0  
                                       __end_of_sd001 8F1C  
                                       __end_of_sd002 8F4A  
                                       __end_of_sd003 8FA5  
                                           ?_MSDTasks 0001  
                                        __pidataBANK0 80FA  
                                        __pidataBANK1 7E6E  
                                        __pidataBANK2 80A4  
                           ??_bootloader_get_rec_data 0001  
                                 ??_SYSTEM_Initialize 0001  
            __end_of_bootloader_get_flashPagesWritten 8086  
           __size_of_bootloader_get_flashPagesWritten 000A  
                  ??_bootloader_get_flashPagesWritten 0003  
                   ?_bootloader_get_flashPagesWritten 0001  
                    _bootloader_get_flashPagesWritten 807C  
                           __get_available_root_entry 7DA2  
                                 fat_rename_file@cntr 00D6  
                                 fat_rename_file@name 003F  
                ExternalFlash_SectorWrite@sector_addr 0027  
                    __size_of_USBCtrlEPAllowDataStage 009E  
                                 fat_rename_file@root 00B6  
                                  __size_of__read_fat 0048  
                                     _active_protocol 00B1  
                       __size_of_USBConfigureEndpoint 0094  
                     __end_of__bootloader_verify_file 1500  
                     ??_bootloader_get_rec_recordType 0001  
                  __size_of_ExternalFlash_MediaDetect 0004  
                         __end_of_USBCtrlTrfInHandler 5382  
                                 _userInterfaceStatus 0098  
                                 display_prepare@mode 002B  
                                        _gblSenseData 011F  
                                     _MSDErrorHandler 4550  
                      ?_ExternalFlash_MediaInitialize 0001  
                           __end_of_i2c_set_frequency 7C94  
                       __size_of__display_programming 01D6  
                                   __end_of_i2c_reset 7FFE  
                             __end_of_system_delay_ms 7D7E  
                                  __size_of_api_parse 00D2  
                             parseHexFileEntry@offset 000E  
                                    _hex_file_entries 016A  
                      __end_of_failed_line3_startCode 8CE9  
                               _communicationSettings 0139  
                    fat_get_empty_clusters@fat_sector 0032  
                                  _fat_read_from_file 1EF4  
                                  __size_of__spi_init 0038  
                          fat_delete_file@file_number 003E  
               __end_of_MSDProcessCommandMediaPresent 085A  
              __size_of_MSDProcessCommandMediaPresent 03BE  
                       _MSDProcessCommandMediaPresent 049C  
                                        _failed_line1 8DA4  
                                        _failed_line2 8D0E  
                                        _failed_line4 8E6B  
                              flash_partial_read@data 002E  
                              flash_partial_read@page 0028  
                                       __get_data@idx 0001  
                       __size_of_bootloader_get_error 0006  
                            ??_USBCtrlTrfSetupHandler 001E  
                             _USBTicksSinceSuspendEnd 00A3  
                   __flash_copy_page_to_buffer@buffer 0016  
                           __end_of_SYSTEM_Initialize 74C0  
                             ??__update_modified_time 0007  
                                   __end_of__i2c_read 63C6  
                                   __end_of__i2c_send 80C6  
                                 hexCharToUint8@ascii 0002  
                              _USBStdGetStatusHandler 5A12  
                                 USBStallEndpoint@dir 0001  
                                   __end_of__i2c_stop 80B6  
                                         ?__i2c_start 0001  
                                 ?_fat_read_from_file 003F  
                                         ?__i2c_write 0006  
                                          __pbssBANK0 0060  
                                          __pbssBANK1 0100  
                                          __pbssBANK2 0200  
                                          __pbssBANK3 0300  
                       fat_append_to_file@fat_cluster 00BD  
                    __size_of_i2c_display_write_fixed 0056  
                                    _USBStallEndpoint 423C  
                        __size_of_i2c_eeprom_readByte 0050  
                                          _gblNumBLKS 0150  
                                           ?_i2c_init 0001  
                    __fill_buffer_read_file@outBuffer 0057  
                        __end_of__sector_from_cluster 800C  
                                    _mediaInformation 01DD  
                             __end_of_hexCharsToUint8 7EA6  
                      __size_of_fat_get_format_status 00A4  
                      fat_get_file_information@offset 003C  
                              ?__bootloader_find_file 0001  
                       __end_of_fat_get_format_status 5CB0  
                     ??__fill_buffer_get_file_details 0043  
                                       __flash_wakeup 7416  
                            __fill_buffer_get_display 574E  
                                           ?__i2c_get 0001  
                         __size_of_USBWakeFromSuspend 0038  
                                         _pBDTEntryIn 006C  
                               __size_of__normal_mode 0058  
                         __size_of_i2c_display_cursor 0024  
                             ?_bootloader_get_entries 0001  
                          __update_modified_time@root 0005  
                    __end_of_USBCtrlEPServiceComplete 4858  
               __end_of_APP_DeviceCustomHIDInitialize 7A5A  
              __size_of_APP_DeviceCustomHIDInitialize 0034  
                       _APP_DeviceCustomHIDInitialize 7A26  
                         MSDTransferTerminated@handle 000C  
                           __bootloader_check_address 4EA2  
                  ExternalFlash_SectorSizeRead@config 0001  
                                USBCtrlTrfRxService@i 0001  
                                          ??_MSDTasks 004D  
                             ??_i2c_digipot_backlight 000B  
                                          _fat_format 2550  
                                   ?__display_checked 0001  
                      __flash_write_to_buffer@command 001B  
                                ??_fat_read_from_file 0049  
                        __size_of__flash_partial_read 0078  
                            __size_of_fat_delete_file 006A  
                                           MSDTasks@i 0052  
                    ??__fill_buffer_get_configuration 0003  
                     ?__fill_buffer_get_configuration 0001  
                                             ?_memcpy 0001  
                                  _fat_append_to_file 211A  
                                             ?_memset 0001  
                                          _device_dsc 8FA5  
                 fat_get_file_information@file_number 003E  
                                    ??_display_update 0011  
                                             ?_reboot 0001  
                                       __get_root@idx 0001  
                                  ??__display_checked 001F  
                                         __i2c_open_1 7F10  
                                    _USBCtrlEPService 5966  
                                             ?_ui_run 0001  
                                          _ep_data_in 0161  
                                             ?_spi_tx 0001  
                                  __display_clear@col 0004  
                             _extended_linear_address 0140  
                                  __display_clear@row 0003  
                       fat_append_to_file@file_number 00C1  
                                           ?__get_fat 0001  
                                           ?__get_fbr 0001  
                                       __display_done 3706  
                    __sector_from_cluster@fat_cluster 0001  
                                           ?__get_mbr 0001  
                         __end_of_USBCtrlTrfRxService 412A  
                                  _USBCheckStdRequest 4958  
                              ??_i2c_eeprom_writeByte 000E  
                                   _configDescriptor1 8EA8  
                     __size_of_internalFlash_readPage 0042  
                             ??_MSDCheckForErrorCases 000F  
                                 ?_fat_append_to_file 003F  
                              fat_append_to_file@data 0041  
                                          _flash_init 7EC2  
                  __fill_buffer_get_display@outBuffer 0005  
                         __end_of_USBCtrlTrfTxService 52BA  
                                   __end_of__get_data 7CE6  
                                   __end_of__get_date 80A4  
                                 _USBStdSetCfgHandler 4A3A  
                              fat_append_to_file@root 00C8  
                                  __display_done@cntr 001F  
                                   __end_of__get_time 809A  
                                   __end_of__get_root 340A  
                                  __size_of_spi_tx_rx 0094  
                                  __size_of_spi_tx_tx 008C  
                                           ?_fat_init 0001  
                                             _RPINR21 000EFC  
                                             _RPINR22 000EFD  
                                             _RPINR23 000EFE  
                                          _done_line1 8D74  
                                          _done_line2 8E9F  
                                          _done_line3 8D64  
                                          _done_line4 8D54  
                                             _SSP1ADD 000FC8  
                                             _SSP1BUF 000FC9  
                     __end_of_bootloader_get_rec_data 7F3E  
                                             _RXADDRH 000F68  
                                             _RXADDRL 000F69  
                              _total_hex_file_entries 0168  
                                             _TXADDRH 000F6A  
                                             _TXADDRL 000F6B  
                                 ?_USBCheckStdRequest 0001  
                          ??__ic2_display_set_address 000B  
                        __size_of_USBStdGetDscHandler 013A  
                                __flash_set_page_size 665A  
                                             _UIEbits 000F36  
                            __end_of_timer_pseudo_isr 79F2  
                                  __get_first_cluster 6C8C  
                                        __normal_mode 7058  
                          __end_of_APP_DeviceMSDTasks 7F7C  
                                             _UIRbits 000F62  
                                   __end_of__read_fat 76DC  
                     ??_internalFlash_pageFromAddress 0005  
                            _system_minimal_init_undo 7FB0  
         MSDCheckForErrorCases@HostMoreDataThanDevice 000F  
                 __bootloader_verify_file@rec_counter 00E2  
                             __size_of_hexCharToUint8 002C  
               __end_of__flash_compare_page_to_buffer 674C  
              __size_of__flash_compare_page_to_buffer 0078  
                       __flash_compare_page_to_buffer 66D4  
                                          __write_fat 7826  
                                          ??_i2c_init 0002  
                                    __CFG_CFGPLLEN$ON 000000  
                            __i2c_write@slave_address 0009  
                                 _bootloader_filename 8FB7  
                 __ic2_display_set_address@data_array 000C  
                                          _pageBuffer 0800  
                                        ??_USBMSDInit 000C  
                                    _system_full_init 6F46  
                                   __read_fat@cluster 0030  
                                      ?__flash_wakeup 0001  
                                   ??_flash_page_read 002C  
                      __end_of_bootloader_get_entries 807C  
                              fat_find_file@extension 0032  
                            ?_internalFlash_getBuffer 0001  
                                   __end_of_api_parse 504E  
                                 ?__get_first_cluster 0030  
                    i2c_eeprom_readByte@slave_address 0017  
                                          ??__i2c_get 0001  
                                   _MSDProcessCommand 412A  
                                     hexCharToUint8@c 0001  
                                ??_fat_append_to_file 0043  
                                       __i2c_send@dat 0001  
                           __flash_get_status@command 000F  
                                             __Hparam 0000  
                     ??_USBIncrement1msInternalTimers 0001  
                                  __parse_file_delete 7512  
                                ?_USBStdSetCfgHandler 0001  
                          __size_of_fat_get_file_size 0072  
                                   __end_of__spi_init 7950  
                         __size_of_USBCheckHIDRequest 00E2  
                                  __parse_file_append 655A  
                                             __Lparam 0000  
                                  __parse_file_create 6AE2  
                                _jump_to_main_program 80C6  
                            __size_of_fat_create_file 01BC  
                                   __end_of_hid_rpt01 8F8B  
                                  ?_MSDProcessCommand 0001  
                                __display_failed@cntr 0025  
                             __end_of_MSDErrorHandler 4656  
                          _MSDTransferTerminated$2407 000E  
                          __size_of_USBEnableEndpoint 003C  
                                  __parse_file_modify 80F6  
                                  __parse_file_rename 6BB8  
                          ??_fat_get_file_information 0039  
                                ??_USBCheckStdRequest 001E  
                                    _hexCharsToUint16 6994  
                                          _last_error 0096  
                                           ?_spi_init 0001  
                       __size_of_USBCtrlTrfOutHandler 0060  
                 ExternalFlash_MediaInitialize@config 0001  
                                    _ToSendDataBuffer 0300  
                            ?_internalFlash_erasePage 0003  
                                __end_of_found_line3b 8E98  
                                             ___lldiv 64D8  
                                    ??_USBDeviceTasks 0020  
                                             ___llmod 6CF6  
                                             ___lwdiv 74C0  
                                   ??_USBStallHandler 0001  
                                             ___lwmod 77A4  
                                  __display_rebooting 73C0  
                         __size_of_internalFlash_read 0036  
                                 ?__parse_file_delete 003F  
                                   ?__i2c_acknowledge 0001  
                                 ?__parse_file_append 004B  
                                 ?__parse_file_create 0050  
                                 __size_of__i2c_start 0008  
                        __end_of__system_encoder_init 7918  
                                             __pcinit 58B6  
                                     __size_of_memcpy 0066  
                                 __size_of__i2c_write 0048  
                                     __size_of_memset 002C  
                            __size_of_MSDWriteHandler 02B4  
                           __end_of_configDescriptor1 8EE8  
                                 ??_MSDProcessCommand 0048  
                                             __ramtop 0F00  
                                     __size_of_reboot 001A  
                        ExternalFlash_SectorRead@page 0034  
                              __display_itoa_u32@text 0023  
                              __display_itoa_u16@text 001D  
                          __size_of_i2c_set_frequency 002C  
                                      ?__display_done 0001  
                                             __ptext0 387C  
                                             __ptext1 4344  
                                     __display_failed 0F36  
                                             __ptext2 7FA0  
                                             __ptext3 7BE4  
                                             __ptext4 7DC6  
                                             __ptext5 7DE8  
                                             __ptext6 7D0E  
                                             __ptext7 4DC2  
                                             __ptext8 79BE  
                                 ?__parse_file_modify 0001  
                                             __ptext9 7FB0  
                                             _inPipes 0066  
                             ??_spi_set_configuration 0001  
                                 ?__parse_file_rename 0043  
                                     __size_of_ui_run 0106  
                                      fat_format@cntr 0025  
                   __size_of_ExternalFlash_SectorRead 0032  
                                     __size_of_spi_tx 0058  
                         _USBDeferOUTDataStagePackets 00A4  
                                  ??__i2c_acknowledge 0001  
                                           _T0CONbits 000FD5  
                                          ??__get_fat 0003  
                                          ??__get_fbr 0003  
                                          ??__get_mbr 0003  
                           ?_ExternalFlash_SectorRead 002C  
                                    ??_bootloader_run 005D  
                                    ?_system_delay_ms 0001  
                         __end_of__system_timer0_init 7E6E  
                                ??__get_first_cluster 0032  
                                        ??_USBSuspend 0018  
                                     __display_search 39EC  
                                  __end_of_USBMSDInit 4550  
                                 ?__display_rebooting 0001  
                                    ??_ResetSenseData 0001  
                             ?__flash_write_to_buffer 0014  
                             _APP_DeviceMSDInitialize 7FE0  
                                             _msd_cbw 000D40  
                                     __display_verify 3DC6  
                                             _msd_csw 000D80  
                             ??_i2c_digipot_reset_off 000B  
                                __i2c_not_acknowledge 8036  
                                             _ui_init 7F54  
                                          ??_fat_init 0030  
                  __size_of_ExternalFlash_SectorWrite 0032  
                               ?__flash_set_page_size 0001  
                               __end_of_flash_is_busy 7F54  
                                  __end_of_USB_CD_Ptr 8EA7  
                            i2c_eeprom_writeByte@data 000D  
                                          _msd_buffer 000600  
                                  __get_empty_cluster 68AE  
                          __size_of_SYSTEM_Initialize 0054  
                     __size_of_USBCtrlTrfSetupHandler 0092  
                             __size_of__flash_is_busy 0022  
                        fat_get_file_size@file_number 003D  
                                             _strncmp 55CC  
                                 _flash_partial_write 6A04  
                                end_of_initialization 5960  
                                ??__parse_file_delete 0041  
       __fill_buffer_get_bootloader_details@outBuffer 0005  
                             ??_display_get_character 0002  
                               _MSDTransferTerminated 72BE  
               __flash_compare_page_to_buffer@command 001C  
         __end_of__fill_buffer_get_bootloader_details 2B2C  
        __size_of__fill_buffer_get_bootloader_details 01EE  
               ??__fill_buffer_get_bootloader_details 0007  
                ?__fill_buffer_get_bootloader_details 0005  
                 __fill_buffer_get_bootloader_details 293E  
                      ?_MSDProcessCommandMediaPresent 0001  
                                ??__parse_file_append 004D  
                                ??__parse_file_create 0052  
                                  __end_of_USB_SD_Ptr 8E83  
                                             memcpy@d 000B  
                                             memcpy@n 0006  
                                             memcpy@s 0008  
                                    __write_fat@value 002B  
                                 _pBDTEntryEP0OutNext 0090  
                                ??__parse_file_modify 0003  
                           __end_of_MSDProcessCommand 423C  
                                             itoa@buf 0011  
                                ??__parse_file_rename 0045  
                                             memset@c 0003  
                                             itoa@val 0013  
                                             memset@n 0005  
                                             memset@p 0007  
                        fat_delete_file@first_cluster 003C  
                                     _USB1msTickCount 0154  
                                    ?_hexCharsToUint8 0003  
                                 ?__get_empty_cluster 0030  
                            __flash_partial_read@data 001A  
                        fat_get_empty_clusters@offset 0034  
                              _internalFlash_readPage 7720  
                            ?_USBStdFeatureReqHandler 0001  
                            __flash_partial_read@page 0014  
                                ??__display_rebooting 0001  
                            fat_append_to_file@length 00C2  
                         i2c_eeprom_writeByte@address 000B  
                            fat_append_to_file@offset 00BF  
           __fill_buffer_get_file_details@file_number 0043  
                               ??_USBStdSetCfgHandler 0018  
                                     ___lldiv@divisor 0005  
                            fat_append_to_file@sector 00B5  
                               ?_jump_to_main_program 0001  
                                     ___lldiv@counter 000D  
                        ?_bootloader_get_rec_checksum 0001  
                                  __end_of_USBSuspend 7BB6  
                        __end_of__parse_file_truncate 80F6  
                             _USBCtrlEPAllowDataStage 5DF6  
                                   __end_of_spi_tx_rx 618C  
                                   __end_of_spi_tx_tx 6452  
               __end_of__fill_buffer_get_file_details 6AE2  
              __size_of__fill_buffer_get_file_details 006E  
                       __fill_buffer_get_file_details 6A74  
                                             postdec1 000FE5  
                                             postdec2 000FDD  
                __end_of_ExternalFlash_SectorSizeRead 805E  
               __size_of_ExternalFlash_SectorSizeRead 000A  
                        _ExternalFlash_SectorSizeRead 8054  
                                          ??_spi_init 0004  
                                             postinc0 000FEE  
                                             postinc2 000FDE  
                                         ?_fat_format 0001  
                                ?_flash_partial_write 0020  
                    __size_of__fill_buffer_get_status 00E2  
                                       ??__ui_encoder 002C  
                                             utoa@buf 0008  
             MSDProcessCommandMediaPresent@sectorSize 003F  
                            _USBCtrlEPServiceComplete 4758  
                                             utoa@val 000A  
                                           _MSD_State 00A2  
                         __end_of__bootloader_program 0BC8  
                               _system_encoder_enable 7FA0  
                     ??_internalFlash_addressFromPage 0005  
                         __size_of_USBCheckMSDRequest 00C2  
                                       ??_api_prepare 005D  
                          _USBStatusStageEnabledFlag1 00A7  
                          _USBStatusStageEnabledFlag2 00A6  
                            flash_partial_write@match 0028  
                                  USBEnableEndpoint@p 000A  
                             ?_fat_get_empty_clusters 0030  
                                           _PORTAbits 000F80  
                                           _PORTBbits 000F81  
                                           _PORTDbits 000F83  
                            flash_partial_write@start 0022  
                                ??__get_empty_cluster 0032  
                      __end_of__flash_write_to_buffer 7604  
                                    __CFG_DSBOREN$OFF 000000  
                                __sector_from_cluster 7FFE  
                      internalFlash_writePage@address 0005  
                            ?_internalFlash_writePage 0003  
                  __size_of__get_available_root_entry 0024  
                                spi_tx_rx@data_length 0007  
                               ?__i2c_not_acknowledge 0001  
                       fat_append_to_file@new_cluster 00BB  
                                   ??_fat_delete_file 003A  
                              fat_create_file@cluster 00BC  
                                 flash_page_read@data 002A  
                                         ?_flash_init 0001  
                                 flash_page_read@page 0028  
                                    __CFG_CPUDIV$OSC1 000000  
                       fat_get_empty_clusters@cluster 003A  
                     __fill_buffer_find_file@inBuffer 0044  
                                           _TRISAbits 000F92  
                                           _TRISBbits 000F93  
                                           _TRISCbits 000F94  
                                           _TRISDbits 000F95  
                                           _TRISEbits 000F96  
                                  _ReceivedDataBuffer 0280  
                                  _BothEP0OutUOWNsSet 00AA  
                       fat_get_empty_clusters@maximum 0030  
                            __end_of_flash_page_write 736A  
                                       __pbssBIGRAMlh 0800  
                                       __pbssBIGRAMll 0340  
                                    ??_MSDReadHandler 0036  
                           __flash_partial_read@start 0016  
                           USBConfigureEndpoint@EPNum 0006  
                             _i2c_display_write_fixed 736A  
                                   __CFG_SOSCSEL$HIGH 000000  
                          ?_USBCtrlEPAllowStatusStage 0001  
                 USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                             __size_of__display_clear 0048  
                                           _USTATcopy 00B3  
                                     ??__flash_wakeup 0009  
       MSDProcessCommandMediaPresent@NumBytesInPacket 003E  
                             __size_of__display_found 01DE  
                                       _checked_line1 8DB4  
                                       _checked_line2 8C99  
                                       _checked_line3 8E73  
                                       _checked_line4 8D32  
                                         ?__write_fat 0029  
                                 __delete_root@offset 002C  
                          ??_bootloader_get_file_size 0005  
                            _failed_line3_dataTooLong 8E31  
                             __size_of__display_start 01F0  
                        __end_of_USBTransferOnePacket 4758  
                              i2c_display_cursor@line 000F  
                                    __CFG_IOL1WAY$OFF 000000  
                   internalFlash_writePage@block_cntr 000B  
                        __end_of__parse_command_short 58B6  
               __end_of_internalFlash_pageFromAddress 7EC2  
              __size_of_internalFlash_pageFromAddress 001C  
                       _internalFlash_pageFromAddress 7EA6  
                                __end_of_reboot_line1 8E4C  
                                __end_of_search_line1 8DF4  
                                __end_of_search_line2 8D54  
                                __end_of_search_line3 8CD6  
                                __end_of_search_line4 8E62  
                      ?__flash_compare_page_to_buffer 0014  
                       __fill_buffer_get_display@cntr 000D  
                                  __root_is_available 67C4  
                       __fill_buffer_get_display@line 000E  
                                   __CFG_WPEND$PAGE_0 000000  
                  __flash_compare_page_to_buffer@page 0014  
                                 __CFG_MSSP7B_EN$MSK7 000000  
                             __end_of__display_failed 122C  
                       __get_empty_cluster@fat_sector 0032  
                                    ?_MSDErrorHandler 0001  
                                    __write_root@data 0029  
                              _USBCtrlTrfSetupHandler 618C  
                               ??_flash_partial_write 0028  
                       ??_bootloader_get_rec_checksum 0001  
                                    __write_root@slot 0030  
                      __bootloader_program@entry_page 00E4  
                              __display_checked@start 0021  
                    ExternalFlash_CapacityRead@config 0001  
                            __size_of_display_prepare 00D2  
                             __end_of__display_search 3B3E  
                               __end_of_USBDeviceInit 3C8C  
               __end_of_USBIncrement1msInternalTimers 7E2C  
              __size_of_USBIncrement1msInternalTimers 0022  
                       _USBIncrement1msInternalTimers 7E0A  
                                     ??__display_done 001F  
                      __end_of_fat_get_empty_clusters 633A  
                       ?_ExternalFlash_SectorSizeRead 0001  
                             __end_of__display_verify 3EF2  
                                 ?__root_is_available 0001  
                                   __size_of_MSDTasks 0258  
                            __end_of_USBStallEndpoint 4344  
                                 _i2c_eeprom_readByte 7564  
                                   ??_fat_create_file 004C  
                 __bootloader_program@start_from_byte 00F0  
                  __fill_buffer_read_file@data_length 00E6  
                         __end_of_system_minimal_init 7FD0  
                           ??_APP_DeviceMSDInitialize 000F  
                           _failed_line3_addressRange 8CAE  
                               ?__sector_from_cluster 0001  
                                      __end_of_memcpy 6DC2  
                                     _MSDRetryAttempt 009E  
                                      __end_of_memset 7C68  
                                      __end_of_reboot 7F10  
                  __size_of__bootloader_check_address 00DA  
                                    __CFG_DSWDTEN$OFF 000000  
                       __size_of_i2c_digipot_reset_on 0022  
                                   _USBBusIsSuspended 00AC  
                           flash_partial_write@length 0024  
                                      __end_of_ui_run 444A  
                                      __end_of_spi_tx 7268  
               __get_available_root_entry@file_number 0037  
                                 __end_of__ui_encoder 4EA2  
                           __flash_set_page_size@size 0018  
                                 start_initialization 58B6  
                             ?_USBStdGetStatusHandler 0001  
                                       ??__write_root 002B  
                       ExternalFlash_SectorWrite@page 002E  
                       USBCtrlTrfRxService@byteToRead 0002  
                              ??__flash_set_page_size 0014  
                                   ??_MSDWriteHandler 0030  
                                           _i2c_reset 7FF0  
                                 __end_of_api_prepare 4012  
                   __end_of__get_available_root_entry 7DC6  
                            ?__bootloader_verify_file 0001  
                                __display_found@start 0027  
                          ??__fill_buffer_get_display 0008  
                          i2c_display_cursor@position 000E  
                              ?_MSDTransferTerminated 000C  
                            __size_of_fat_rename_file 0096  
                                     _USBMSDOutHandle 008A  
                    __ic2_display_set_address@address 000B  
                        __end_of_USBConfigureEndpoint 60F8  
                                        ??__i2c_start 0001  
   internalFlash_addressWithinPage@page_start_address 0013  
                                        ??__i2c_write 0009  
                     __end_of_USBStdFeatureReqHandler 1A38  
                                 __flash_partial_read 674C  
                                   USBStallEndpoint@p 0007  
                                 __size_of_fat_format 01FE  
                             ??__bootloader_find_file 0044  
                                       _MSDHostNoData 009B  
                                      _hexCharToUint8 7C10  
              internalFlash_addressWithinPage@address 0009  
                                ??__root_is_available 0030  
                      __size_of__update_modified_time 0032  
                   __end_of_USBCtrlEPAllowStatusStage 5446  
                                ?_i2c_eeprom_readByte 0012  
                       __end_of__update_modified_time 7B22  
                        __end_of__display_programming 30B8  
                fat_get_empty_clusters@empty_clusters 0038  
                            __end_of_USBCtrlEPService 5A12  
                          __size_of_MSDProcessCommand 0112  
                                __system_encoder_init 78DE  
                                           __i2c_read 633A  
                                           __i2c_send 80BE  
                                     ___llmod@divisor 0005  
                                           __i2c_stop 80AE  
                              ??_jump_to_main_program 0001  
                                     ___llmod@counter 0009  
                                   __size_of_i2c_init 000C  
                           ??_USBCtrlEPAllowDataStage 0002  
                            ??__fill_buffer_find_file 0048  
                                      USBDeviceInit@i 0009  
                        __end_of_bootloader_get_error 80EA  
                          __flash_partial_read@length 0018  
                       __end_of_failed_line3_checksum 8E13  
                       __root_is_available@first_byte 0036  
                              _pBDTEntryEP0OutCurrent 0092  
                              __size_of_fat_find_file 00C0  
                    __end_of_fat_get_file_information 68AE  
                                         _DMACON1bits 000F88  
                                         _DMACON2bits 000F86  
                                 __size_of_flash_init 001A  
                             USBTransferOnePacket@dir 0001  
                             USBTransferOnePacket@len 0004  
                                   _programming_line1 8D94  
                                   _programming_line2 8CFC  
                                   _programming_line3 8E83  
                                   _programming_line4 8D84  
                                       _MSDTasks$2372 004E  
                                       _MSDTasks$2373 0050  
                                   __size_of__i2c_get 000A  
                         MSDErrorHandler@OldMSD_State 000A  
                         __size_of_flash_partial_read 0032  
                                      __get_date@date 0003  
                               spi_init@configuration 0004  
                             flash_partial_read@start 002A  
                                 _USBStdGetDscHandler 3C8C  
                              ?_system_encoder_enable 0001  
                                ?__flash_partial_read 0014  
                                   __CFG_ADCSEL$BIT10 000000  
                   __size_of_APP_DeviceCustomHIDTasks 00AA  
                          fat_get_file_size@file_size 0037  
                                         __pdataBANK0 00FE  
                                         __pdataBANK1 01E4  
                                         __pdataBANK2 02F2  
                           ?_APP_DeviceCustomHIDTasks 0001  
                      __size_of_i2c_digipot_backlight 0026  
                                            ??_memcpy 0008  
                             __size_of__i2c_wait_idle 0058  
                                            ??_memset 0007  
                        __size_of__parse_command_long 008E  
                       __end_of_i2c_digipot_backlight 7D34  
                                        ?__i2c_open_1 0001  
                                            ??_reboot 002C  
                              __size_of_ui_get_status 0006  
                                            ??_ui_run 002C  
                                  __end_of__i2c_start 80BE  
                                            ??_spi_tx 0005  
                      ?__fill_buffer_get_file_details 003F  
                                  __end_of__i2c_write 7694  
                            __end_of_system_full_init 6FA2  
                           __root_is_available@offset 0033  
                                 __size_of__write_fat 0040  
                              ??__i2c_not_acknowledge 0001  
                              _USBActiveConfiguration 00B4  
                            ??__fill_buffer_read_file 0059  
                      __end_of_USBStdGetStatusHandler 5ABC  
                          ??_system_minimal_init_undo 0001  
                         api_parse@receivedDataLength 00EA  
                   __end_of__bootloader_check_address 4F7C  
                                       ?__delete_root 0001  
               __end_of_internalFlash_addressFromPage 7BE4  
              __size_of_internalFlash_addressFromPage 002E  
                       _internalFlash_addressFromPage 7BB6  
                          fat_append_to_file@position 00C4  
                         fat_create_file@next_cluster 00B5  
                                   __size_of__get_fat 0056  
                                   __size_of__get_fbr 0264  
                                     _flash_page_read 7ABE  
                           ??_i2c_display_write_fixed 0009  
                                       __pcstackBANK0 00B5  
                        __size_of_USBCtrlTrfInHandler 00C8  
                                   __size_of__get_mbr 00CE  
                        ??_ExternalFlash_CapacityRead 0005  
                      __size_of_MSDCheckForErrorCases 00E2  
                                          ?_i2c_reset 0001  
                                __display_search@cntr 0001  
                __size_of_bootloader_get_rec_checksum 0006  
                        __end_of_bootloader_extension 8FCC  
                       __end_of_MSDCheckForErrorCases 4CE0  
             __bootloader_program@address_within_page 00E6  
                              __end_of_hexCharToUint8 7C3C  
                           __size_of__display_checked 017C  
                                           _gblBLKLen 014C  
                  __end_of_flash_command_pagesize_512 8FC8  
                          _flash_command_pagesize_512 8FC4  
                  __end_of_flash_command_pagesize_528 8FC4  
                          _flash_command_pagesize_528 8FC0  
                                      __flash_is_busy 7E2C  
                                ?_USBStdGetDscHandler 0001  
                            __end_of_hexCharsToUint16 6A04  
                                __parse_file_truncate 80F2  
                          i2c_set_frequency@frequency 0001  
                                        _found_line3b 8E91  
                                           __get_data 7CBE  
                                           __get_date 809A  
                    __bootloader_program@return_value 00E8  
                                   __size_of_fat_init 0010  
                               ??_i2c_eeprom_readByte 0014  
                 fat_get_file_information@root_sector 003A  
                                   ?_timer_pseudo_isr 0001  
                                           __get_time 8090  
                                           __get_root 3274  
                                 __end_of__write_root 7160  
     __fill_buffer_get_bootloader_details@data_length 000A  
                               ?__system_encoder_init 0001  
                          __end_of_USBWakeFromSuspend 7988  
                            __delete_root@root_sector 002A  
                          __end_of_i2c_display_cursor 7DA2  
                                          ?__i2c_read 0006  
                                  ??_timer_pseudo_isr 0001  
                                          ?__i2c_send 0001  
                                     _USBStallHandler 76DC  
                                        _pBDTEntryOut 0072  
                                          ?__i2c_stop 0001  
                          fat_rename_file@file_number 00B5  
                                           __read_fat 7694  
                            ?_bootloader_get_rec_data 0001  
                           __end_of_programming_line1 8DA4  
                           __end_of_programming_line2 8D0E  
                           __end_of_programming_line3 8E8A  
                           __end_of_programming_line4 8D94  
                    __end_of_ExternalFlash_SectorRead 7ABE  
                                 flash_is_busy@result 0014  
                __end_of_bootloader_get_total_entries 8090  
               __size_of_bootloader_get_total_entries 000A  
                        _bootloader_get_total_entries 8086  
                                    ___lwdiv@dividend 0001  
                               _fat_get_format_status 5C0C  
                                   fat_find_file@name 0030  
                      MSDProcessCommandMediaPresent@i 0047  
                                 fat_find_file@buffer 0034  
                                   fat_find_file@slot 003F  
                                           _api_parse 4F7C  
                           fat_create_file@root_entry 00BE  
                                    ?__display_failed 0001  
                             __fill_buffer_get_status 4CE0  
                                  _APP_DeviceMSDTasks 7F68  
                                       __pmediumconst 8C98  
                                 fat_find_file@offset 0042  
                               ??__flash_partial_read 001C  
                                           __ptext100 423C  
                                           __ptext101 6E24  
                                           __ptext110 3EF2  
                                           __ptext102 7A8C  
                                           __ptext111 233A  
                                           __ptext103 7ABE  
                                           __ptext200 7694  
                                           __ptext120 80CC  
                                           __ptext112 1EF4  
                                           __ptext104 5F32  
                                           __ptext201 68AE  
                                           __ptext121 805E  
                                           __ptext113 6922  
                                           __ptext105 8054  
                                           __ptext210 4656  
                                           __ptext202 7B22  
                                           __ptext130 80DE  
                                           __ptext122 7F28  
                                           __ptext114 4CE0  
                                           __ptext106 7F7C  
                                           __ptext211 0000  
                                           __ptext203 4858  
                                           __ptext131 6B4E  
                                           __ptext123 80D2  
                                           __ptext115 6A74  
                                           __ptext107 7EDC  
                                           __ptext204 674C  
                                           __ptext140 2EE2  
                                           __ptext132 736A  
                                           __ptext124 80D8  
                                           __ptext116 574E  
                                           __ptext108 80EE  
                                           __ptext205 7E2C  
                                           __ptext141 2B2C  
                                           __ptext133 7D7E  
                                           __ptext125 5D54  
                                           __ptext117 7C94  
                                           __ptext109 5ABC  
                                           __ptext206 7416  
                                           __ptext150 3706  
                                           __ptext142 7F8E  
                                           __ptext134 7D34  
                                           __ptext126 4F7C  
                                           __ptext118 5E94  
                                           __ptext207 7210  
                                           __ptext151 807C  
                                           __ptext143 0F36  
                                           __ptext135 504E  
                                           __ptext127 5802  
                                           __ptext119 293E  
                                           __ptext208 7B54  
                                           __ptext160 77E6  
                                           __ptext152 7604  
                                           __ptext144 8068  
                                           __ptext136 3DC6  
                                           __ptext128 7D5A  
                                           __ptext209 60F8  
                                           __ptext161 7C68  
                                           __ptext153 358A  
                                           __ptext145 80E4  
                                           __ptext137 274E  
                                           __ptext129 7EF6  
                                           __ptext170 5FCE  
                                           __ptext162 764C  
                                           __ptext154 8086  
                                           __ptext146 8072  
                                           __ptext138 39EC  
                                           __ptext171 80F6  
                                           __ptext163 70B0  
                                           __ptext155 5446  
                                           __ptext147 0BC8  
                                           __ptext139 73C0  
                                           __ptext180 568E  
                                           __ptext172 7512  
                                           __ptext164 80AE  
                                           __ptext156 7762  
                                           __ptext148 6CF6  
                                           __ptext181 55CC  
                                           __ptext173 6C22  
                                           __ptext165 80B6  
                                           __ptext157 5CB0  
                                           __ptext149 64D8  
                                           __ptext190 7F3E  
                                           __ptext182 7DA2  
                                           __ptext174 6C8C  
                                           __ptext166 80BE  
                                           __ptext158 77A4  
                                           __ptext191 75B4  
                                           __ptext183 655A  
                                           __ptext175 6FA2  
                                           __ptext167 621E  
                                           __ptext159 74C0  
                                           __ptext192 63C6  
                                           __ptext184 211A  
                                           __ptext176 6AE2  
                                           __ptext168 80F2  
                                           __ptext193 7160  
                                           __ptext185 683A  
                                           __ptext177 30B8  
                                           __ptext169 6BB8  
                                           __ptext194 71B8  
                                           __ptext186 67C4  
                                           __ptext178 6D5C  
                                           __ptext195 66D4  
                                           __ptext187 7108  
                                           __ptext179 62AC  
                                           __ptext196 7AF0  
                                           __ptext188 7826  
                                           __ptext197 8090  
                                           __ptext189 6A04  
                                           __ptext198 809A  
                                           __ptext199 7FFE  
                      ?_internalFlash_pageFromAddress 0001  
                                 fat_find_file@sector 0040  
                                            ?___lldiv 0001  
                                            ?___llmod 0001  
                                            ?___lwdiv 0001  
                                           __spi_init 7918  
                                            ?___lwmod 0001  
                         __size_of_fat_read_from_file 0226  
                                    ?__display_search 0001  
                                           _hid_rpt01 8F6E  
                                         __ui_encoder 4DC2  
                           __get_first_cluster@offset 0035  
                              ??__sector_from_cluster 0003  
                                           _idle_rate 00B2  
                                    ?__display_verify 0001  
                                   __size_of_spi_init 003C  
                           __get_first_cluster@sector 0033  
                                      __get_time@time 0003  
                    __size_of_internalFlash_getBuffer 000A  
                                         _api_prepare 3EF2  
                             __parse_file_delete@data 003F  
                                     __i2c_write@data 0006  
                                _file_maximum_address 0144  
                                     __i2c_write@cntr 000A  
                                 fat_create_file@name 0044  
                                 ?_APP_DeviceMSDTasks 0001  
                  __flash_write_to_buffer@data_length 0018  
                                 fat_create_file@size 0048  
                      internalFlash_erasePage@address 0005  
                                   system_delay_ms@ms 0002  
                                _USBTransferOnePacket 4656  
                          ?_ExternalFlash_MediaDetect 0001  
                                      ??__delete_root 0029  
                      __size_of_spi_set_configuration 0100  
                      ??_ExternalFlash_SectorSizeRead 0003  
                                   ??_display_prepare 0029  
                       __end_of_spi_set_configuration 4958  
                                __CFG_RTCOSC$T1OSCREF 000000  
                                __parse_command_short 5802  
                        ??_spi_get_external_rx_buffer 0003  
                              fat_read_from_file@data 0047  
                 __fill_buffer_get_display@secondHalf 0007  
                              __end_of__flash_is_busy 7E4E  
                                       _fat_find_file 568E  
                       __size_of_i2c_eeprom_writeByte 0040  
                                            ?_ui_init 0001  
                              fat_read_from_file@root 00B8  
                           __display_programming@cntr 001F  
                                   __display_itoa_u32 0BC8  
                                   __display_itoa_u16 5446  
                    __size_of_internalFlash_erasePage 0034  
                        __end_of_USBCtrlTrfOutHandler 6F46  
                               ??_USBStdGetDscHandler 0001  
                               ?__parse_file_truncate 0001  
                      __size_of_i2c_digipot_reset_off 0022  
                 __size_of__flash_copy_page_to_buffer 0058  
                                 __end_of_found_line1 8DE4  
                                 __end_of_found_line2 8CFC  
                                 __end_of_found_line3 8E9F  
                                 __end_of_found_line4 8D32  
                                         _ep_data_out 015E  
                                     ?_hexCharToUint8 0001  
                                    ___lwdiv@quotient 0005  
               __end_of_bootloader_get_rec_dataLength 8068  
              __size_of_bootloader_get_rec_dataLength 000A  
                       __end_of_i2c_digipot_reset_off 7E0A  
                       _bootloader_get_rec_dataLength 805E  
                        ??_spi_get_external_tx_buffer 0003  
                                       _MSDWriteState 009F  
                        __size_of_USBCtrlTrfRxService 0118  
                                  ?__display_itoa_u32 001F  
                                  ?__display_itoa_u16 0019  
                       USBConfigureEndpoint@direction 0001  
                                            ?_strncmp 0001  
                                      __display_clear 7604  
                           __size_of__i2c_acknowledge 000A  
                                          ?__get_data 0001  
                                          ?__get_date 0001  
                             ?_internalFlash_readPage 0016  
                    ??_i2c_display_send_init_sequence 000B  
                     ?_i2c_display_send_init_sequence 0001  
                                      __display_found 2B2C  
                    __end_of_bootloader_get_file_size 7FA0  
                                         _file_buffer 02C0  
                                     _config_internal 015B  
                                          ?__get_time 0001  
                                          ?__get_root 0001  
                                       _ui_get_status 80DE  
                                     _config_external 0158  
                                      __display_start 274E  
                        __size_of_USBCtrlTrfTxService 00CC  
                      __size_of_display_get_character 002A  
                                ??_APP_DeviceMSDTasks 0053  
                       __end_of_display_get_character 7CBE  
                                         _file_number 00FE  
                                            _LATAbits 000F89  
                                            _LATBbits 000F8A  
                                            _LATCbits 000F8B  
                                            _LATDbits 000F8C  
                                            _LATEbits 000F8D  
                          __end_of_USBCheckHIDRequest 4BFE  
                      __root_is_available@file_number 0035  
                __flash_compare_page_to_buffer@buffer 0016  
                          ??_USBCtrlEPServiceComplete 0002  
                                          ?__read_fat 0030  
                                   ??_fat_rename_file 0043  
                                 ??__display_itoa_u32 0025  
                                 ??__display_itoa_u16 001F  
                             __i2c_read@slave_address 0010  
                                            _PIE2bits 000FA0  
                internalFlash_pageFromAddress@address 0001  
                       internalFlash_read@data_length 0012  
                         __size_of_fat_append_to_file 0220  
                     __size_of__fill_buffer_find_file 00A2  
                __flash_compare_page_to_buffer@status 001A  
                                            _PIR2bits 000FA1  
                           parseHexFileEntry@hexEntry 0012  
                                            _PIR3bits 000FA4  
              __fill_buffer_get_file_details@inBuffer 003F  
                   __bootloader_verify_file@address32 00E7  
                          __end_of_internalFlash_read 79BE  
                                          ?_api_parse 00E8  
                                            _UEP0bits 000F26  
                       ?_bootloader_get_total_entries 0001  
                   __size_of__ic2_display_set_address 0026  
                             __parse_file_append@data 004B  
                                            _MSDTasks 1C9C  
                          _USBDeferINDataStagePackets 00A5  
                                        ??_fat_format 0025  
                                     _fat_delete_file 6C22  
                                _active_configuration 0094  
                           ?__ic2_display_set_address 0001  
                                            _SSP1CON1 000FC6  
                             spi_tx_rx@command_length 0003  
                             __parse_file_create@data 0050  
                             flash_partial_write@data 0026  
                         __size_of_USBCheckStdRequest 00E2  
                     ??_MSDProcessCommandMediaPresent 003A  
                             flash_partial_write@page 0020  
                                            _UCONbits 000F65  
                                          ?__spi_init 0001  
                 __size_of_spi_get_external_rx_buffer 000A  
                                _USBConfigureEndpoint 6064  
                                   __i2c_write@length 0008  
                             __end_of_flash_page_read 7AF0  
                                           _spi_tx_rx 60F8  
                                           _spi_tx_tx 63C6  
                                __display_verify@cntr 0021  
                  __flash_write_page_from_buffer@page 0014  
                    __size_of_USBStdFeatureReqHandler 0284  
                                      _USBMSDInHandle 0088  
                 __size_of_spi_get_external_tx_buffer 000A  
                                __display_programming 2EE2  
                               ?_USBTransferOnePacket 0001  
                 internalFlash_addressWithinPage@page 000D  
                                 system_delay_ms@cntr 0003  
                         __size_of__get_first_cluster 006A  
                           __end_of__display_itoa_u16 550A  
                           __end_of__display_itoa_u32 0F36  
                     __size_of__fill_buffer_read_file 0216  
                               ?__parse_command_short 0001  
                                __end_of_verify_line1 8DD4  
                                __end_of_verify_line2 8E59  
                                __end_of_verify_line3 8E91  
                           i2c_display_cursor@address 0010  
                                    __CFG_WPFP$PAGE_1 000000  
                                      ?_fat_find_file 0030  
                            fat_rename_file@extension 0041  
                                        ??_flash_init 0019  
                                        _RemoteWakeup 00AD  
                   __end_of_ExternalFlash_MediaDetect 80F2  
                                        _reboot_line1 8E3F  
                                        _search_line1 8DE4  
                                        _search_line2 8D43  
                                        _search_line3 8CC2  
                                        _search_line4 8E59  
                   MSDCheckForErrorCases@DeviceNoData 0011  
                            internalFlash_read@buffer 0014  
                                spi_tx_tx@data_length 0007  
                                     ?__flash_is_busy 0001  
                                         ??_i2c_reset 0001  
                    __end_of__fill_buffer_get_display 5802  
                        ??_bootloader_get_rec_address 0003  
                                         __write_root 7108  
                 __fill_buffer_get_display@start_line 000F  
                              __end_of__display_clear 764C  
                   __size_of_fat_get_file_information 0074  
                                _bootloader_get_error 80E4  
                               __display_checked@cntr 0022  
                                          spi_tx@data 0001  
                           ?_fat_get_file_information 0037  
                              __end_of__display_found 2D0A  
                             __end_of_USBStallHandler 7720  
                                   ?_flash_page_write 0020  
                      __end_of_internalFlash_readPage 7762  
                                      __i2c_read@data 0006  
                     ??__flash_write_page_from_buffer 0017  
                             __size_of_display_update 006A  
                                      __i2c_read@cntr 0011  
                              __end_of__display_start 293E  
                                         _INTCON2bits 000FF1  
                                         _INTCON3bits 000FF0  
                                           copy_data0 58CA  
                                           copy_data1 58EA  
                        __size_of__system_timer0_init 0020  
                            __size_of_system_delay_ms 0024  
                      ?_internalFlash_addressFromPage 0001  
                                      ?_ui_get_status 0001  
                              ??__system_encoder_init 0001  
                         ??_USBCtrlEPAllowStatusStage 0001  
                        fat_create_file@cluster_count 00B7  
                         __end_of_USBStdSetCfgHandler 4B1C  
                                  ??_flash_page_write 0024  
                         __size_of__parse_file_delete 0052  
                                        ??__write_fat 002D  
                                  __end_of_fat_format 274E  
                         __size_of__parse_file_append 0082  
                         __size_of__parse_file_create 006C  
                                 __display_found@cntr 0028  
                                            _i2c_init 800C  
                                         ??__i2c_read 0009  
                         __size_of__parse_file_modify 0004  
                    __size_of_internalFlash_writePage 007E  
                                         ??__i2c_send 0001  
                                        _MSDReadState 00A0  
                         __size_of__parse_file_rename 006A  
                                         ??__i2c_stop 0001  
                                  __write_fat@cluster 0029  
                                  __end_of_device_dsc 8FB7  
                                          _EECON1bits 000FA6  
                            MSDErrorHandler@ErrorCase 0009  
                              ?_fat_get_format_status 0001  
                                            __i2c_get 8040  
                             ?_USBCtrlTrfSetupHandler 0001  
                    internalFlash_writePage@byte_cntr 000C  
                                     _fat_create_file 30B8  
                         __size_of__display_rebooting 0056  
                           ??__fill_buffer_get_status 0017  
                                          _ANCON0bits 000F48  
                             USBStdGetStatusHandler@p 0002  
                            fat_read_from_file@length 0043  
                                            __Hrparam 0000  
                            fat_read_from_file@offset 00DA  
                         __end_of_bootloader_filename 8FC0  
                            fat_read_from_file@sector 00B5  
                                           memcpy@tmp 000D  
                                            __Lrparam 0000  
                              USBTransferOnePacket@ep 0009  
            __fill_buffer_get_configuration@outBuffer 0001  
                                            _SetupPkt 000D30  
                                  __end_of_flash_init 7EDC  
                                      _TransferLength 0086  
                                _bootloader_extension 8FC8  
                           __get_empty_cluster@offset 0034  
                          __end_of_USBCheckMSDRequest 55CC  
                            __size_of_hexCharsToUint8 001C  
                               ?_USBConfigureEndpoint 0001  
                               __flash_is_busy@status 0012  
                            _ExternalFlash_SectorRead 7A8C  
                           display_get_character@line 0004  
                              __size_of_flash_is_busy 0016  
                                  __end_of_done_line1 8D84  
                                  __end_of_done_line2 8EA5  
                                  __end_of_done_line3 8D74  
                                  __end_of_done_line4 8D64  
                                      __i2c_wait_idle 70B0  
                                     _MSDWriteHandler 1500  
                                    __size_of___lldiv 0082  
                                    __size_of___llmod 0066  
                 __size_of_bootloader_get_rec_address 000A  
                                    __size_of___lwdiv 0052  
                                    __size_of___lwmod 0042  
           ExternalFlash_SectorWrite@allowWriteToZero 002D  
                                          ?_spi_tx_rx 0001  
                                          ?_spi_tx_tx 0001  
                                         _MSDCBWValid 009A  
                               ?__display_programming 0001  
                                   ?_USBStallEndpoint 0001  
                          i2c_display_write_fixed@pos 0009  
                    __end_of_system_minimal_init_undo 7FC0  
                                         _found_line1 8DD4  
                                         _found_line2 8CE9  
                                         _found_line3 8E98  
                                         _found_line4 8D20  
                                            __get_fat 7268  
                                            __get_fbr 1A38  
                         __size_of__get_empty_cluster 0074  
                                            __get_mbr 5120  
                                  __end_of__write_fat 7866  
                                __size_of__i2c_open_1 0018  
                                  ??_USBStallEndpoint 0002  
                     __flash_copy_page_to_buffer@page 0014  
                  __end_of_ExternalFlash_CapacityRead 7F8E  
                          _ExternalFlash_CapacityRead 7F7C  
                             ??_MSDTransferTerminated 000E  
                              __fill_buffer_find_file 5D54  
                              ??__parse_file_truncate 0003  
                        __size_of__bootloader_program 036E  
                               ?_bootloader_get_error 0001  
                             __size_of_USBDeviceTasks 0180  
                                     ___lwdiv@divisor 0003  
                             __display_itoa_u32@value 001F  
                             __display_itoa_u16@value 0019  
                                            _fat_init 7FD0  
                    __get_first_cluster@first_cluster 0037  
                                     ?__display_clear 0001  
                                     ___lwdiv@counter 0007  
                                    __display_checked 358A  
               __end_of_bootloader_get_rec_recordType 80D2  
              __size_of_bootloader_get_rec_recordType 0006  
                       _bootloader_get_rec_recordType 80CC  
                                            __ptext10 7FF0  
                                            __ptext11 7FC0  
                                            __ptext20 7FD0  
                                            __ptext12 800C  
                                            __ptext21 5C0C  
                                            __ptext13 7F10  
                                            __ptext30 8018  
                                            __ptext22 2550  
                                            __ptext14 6F46  
                                            __ptext31 8022  
                                            __ptext23 3274  
                                            __ptext15 7F54  
                                            __ptext40 65DC  
                                            __ptext32 80C6  
                                            __ptext24 5120  
                                            __ptext16 7EC2  
                                            __ptext41 7720  
                                            __ptext33 6FFE  
                                            __ptext25 1A38  
                                            __ptext17 7866  
                                            __ptext50 5B66  
                                            __ptext42 7988  
                                            __ptext34 122C  
                                            __ptext26 7268  
                                            __ptext18 7918  
                                            __ptext51 7058  
                                            __ptext43 7EA6  
                                            __ptext35 085A  
                                            __ptext27 7CBE  
                                            __ptext19 665A  
                                            __ptext60 76DC  
                                            __ptext52 7564  
                                            __ptext44 802C  
                                            __ptext36 0020  
                                            __ptext28 7E4E  
                                            __ptext61 7E0A  
                                            __ptext53 633A  
                                            __ptext45 79F2  
                                            __ptext37 7E8A  
                                            __ptext29 78DE  
                                            __ptext70 5A12  
                                            __ptext62 3B3E  
                                            __ptext54 8036  
                                            __ptext46 7CE6  
                                            __ptext38 6994  
                                            __ptext71 3C8C  
                                            __ptext63 5966  
                                            __ptext55 8040  
                                            __ptext47 6E86  
                                            __ptext39 7C10  
                                            __ptext80 7A26  
                                            __ptext72 17B4  
                                            __ptext64 618C  
                                            __ptext56 804A  
                                            __ptext48 7BB6  
                                            __ptext81 78A2  
                                            __ptext73 6452  
                                            __ptext65 4758  
                                            __ptext57 340A  
                                            __ptext49 4EA2  
                                            __ptext90 412A  
                                            __ptext82 6064  
                                            __ptext74 550A  
                                            __ptext66 5DF6  
                                            __ptext58 7950  
                                            __ptext91 6DC2  
                                            __ptext83 6EE6  
                                            __ptext75 4B1C  
                                            __ptext67 4958  
                                            __ptext59 7B86  
                                            __ptext92 049C  
                                            __ptext84 4012  
                                            __ptext76 746C  
                                            __ptext68 4A3A  
                                            __ptext93 1500  
                                            __ptext85 5382  
                                            __ptext77 72BE  
                                            __ptext69 7C3C  
                                            __ptext94 80EA  
                                            __ptext86 52BA  
                                            __ptext78 7FE0  
                                            __ptext95 7A5A  
                                            __ptext87 51EE  
                                            __ptext79 444A  
                                            __ptext96 7314  
                                            __ptext88 7F68  
                                            __ptext97 2D0A  
                                            __ptext89 1C9C  
                                            __ptext98 4BFE  
                                            __ptext99 4550  
                                     ?__display_found 0001  
                                    __size_of_ui_init 0014  
                                        _SSP1CON1bits 000FC6  
                                        _SSP1CON2bits 000FC5  
                            ??_bootloader_get_entries 0003  
                                     ?__display_start 0001  
                        __flash_set_page_size@command 0014  
                                        _SSP2CON1bits 000F72  
                __end_of_MSDProcessCommandMediaAbsent 6E24  
               __size_of_MSDProcessCommandMediaAbsent 0062  
                        _MSDProcessCommandMediaAbsent 6DC2  
                                         ??__get_data 0003  
                                         ??__get_date 0003  
                               __flash_wakeup@command 0009  
                                         ??__get_time 0003  
                                         ??__get_root 0003  
                             __size_of_bootloader_run 005A  
                                    __size_of_strncmp 00C2  
                                 __parse_command_long 621E  
                   __end_of_failed_line3_addressRange 8CC2  
                          ?_ExternalFlash_SectorWrite 0025  
                      ExternalFlash_SectorRead@config 002C  
                      ExternalFlash_SectorRead@buffer 0032  
                                        api_parse@idx 0058  
                      __size_of__bootloader_find_file 00A6  
                  __end_of__flash_copy_page_to_buffer 7210  
                          __flash_copy_page_to_buffer 71B8  
                             __size_of_ResetSenseData 0062  
                    __end_of_APP_DeviceCustomHIDTasks 5B66  
                       __end_of__bootloader_find_file 5C0C  
                        __end_of_i2c_digipot_reset_on 7DE8  
                      ?_bootloader_get_rec_dataLength 0001  
                               __end_of__flash_wakeup 746C  
                      __end_of_USBCtrlTrfSetupHandler 621E  
                                       __size_of_main 0170  
                                   ?_USBCtrlEPService 0001  
                                       __size_of_itoa 0042  
                                            _inq_resp 8F4A  
                                       __size_of_utoa 00A4  
                             __end_of_fat_delete_file 6C8C  
                                         ??__read_fat 0032  
                              __fill_buffer_read_file 233A  
                         __end_of_flash_partial_write 6A74  
                                          strncmp@len 0005  
                             fat_get_file_size@offset 003B  
                             fat_get_file_size@sector 0035  
                                  ??_USBCtrlEPService 001E  
                                __end_of__delete_root 6FFE  
                    __size_of__bootloader_verify_file 02D4  
                             ??_system_encoder_enable 0001  
            __end_of_bootloader_get_rec_checksumCheck 80D8  
           __size_of_bootloader_get_rec_checksumCheck 0006  
                  ??_bootloader_get_rec_checksumCheck 0001  
                   ?_bootloader_get_rec_checksumCheck 0001  
                    _bootloader_get_rec_checksumCheck 80D2  
                                 _USBCtrlTrfInHandler 52BA  
                  _MSDProcessCommandMediaPresent$2390 003C  
                    __get_empty_cluster@first_cluster 0030  
                                         ??_api_parse 0056  
                              __end_of__i2c_wait_idle 7108  
                          internalFlash_readPage@page 0016  
                                            _outPipes 0131  
                                          _ODCON3bits 000F40  
                                            _spi_init 7866  
                                _USBCtrlTrfOutHandler 6EE6  
                           _USBCtrlEPAllowStatusStage 5382  
                                         ??__spi_init 0004  
                             _internalFlash_getBuffer 802C  
                                ?__parse_command_long 0053  
                                        _SSP1STATbits 000FC7  
                   __size_of_bootloader_get_file_size 0012  
                   i2c_eeprom_writeByte@slave_address 0013  
                              ??_USBTransferOnePacket 0005  
                           ?_bootloader_get_file_size 0001  
                          i2c_digipot_backlight@level 000B  
                                  hexCharsToUint16@c1 0009  
                                  hexCharsToUint16@c2 0003  
                                  hexCharsToUint16@c3 0004  
                                  hexCharsToUint16@c4 0005  
                                    ?_flash_page_read 0028  
                                 __display_start@cntr 0025  
                                        _SSP2STATbits 000F73  
                               __end_of__display_done 387C  
                      ??_bootloader_get_total_entries 0003  
                      ?_APP_DeviceCustomHIDInitialize 0001  
                                     ??_fat_find_file 0034  
                              ??__parse_command_short 002C  
                                   ?_system_full_init 0001  
               MSDProcessCommandMediaPresent@capacity 0043  
                       display_get_character@position 0001  
                            __size_of_MSDErrorHandler 0106  
                           _USBDeferStatusStagePacket 00A8  
                  __end_of_spi_get_external_rx_buffer 802C  
                          _spi_get_external_rx_buffer 8022  
                          __size_of__display_itoa_u16 00C4  
                          __size_of__display_itoa_u32 036E  
                     __end_of__fill_buffer_get_status 4DC2  
                             __parse_file_modify@data 0001  
                   __fill_buffer_get_display@position 0010  
                                         _OSCTUNEbits 000F9B  
                                          _INTCONbits 000FF2  
            __end_of__internalFlash_unlockAndActivate 7D0E  
           __size_of__internalFlash_unlockAndActivate 0028  
                  ??__internalFlash_unlockAndActivate 0001  
                   ?__internalFlash_unlockAndActivate 0001  
                    __internalFlash_unlockAndActivate 7CE6  
                             _internalFlash_erasePage 79F2  
                                   __write_fat@offset 002F  
                                  ??_system_full_init 0030  
                                ?_USBCtrlTrfInHandler 0001  
                                            memcpy@d1 0001  
                                            memcpy@s1 0003  
                       USBCtrlTrfTxService@byteToSend 0001  
                  __end_of_spi_get_external_tx_buffer 8022  
                          _spi_get_external_tx_buffer 8018  
                     i2c_digipot_backlight@data_array 000C  
                                            itoa@base 0015  
                        __size_of_system_minimal_init 0010  
                                     ??_ui_get_status 0001  
                                            memset@p1 0001  
                                   _parseHexFileEntry 0020  
                __end_of_MSDComputeDeviceInAndResidue 5FCE  
               __size_of_MSDComputeDeviceInAndResidue 009C  
                        _MSDComputeDeviceInAndResidue 5F32  
                                    ?_USBStallHandler 0001  
                            USBStdFeatureReqHandler@p 001C  
                             spi_tx_tx@command_length 0003  
                          ?__get_available_root_entry 0001  
                                 __end_of_start_line1 8E04  
                                 __end_of_start_line2 8E6B  
                                 __end_of_start_line3 8EA8  
                                 __end_of_start_line4 8E31  
                       __size_of__flash_set_page_size 007A  
                                       ?__normal_mode 0001  
                                       _flash_is_busy 7F3E  
                                   ?_hexCharsToUint16 0003  
                                    __i2c_acknowledge 804A  
                              bootloader_run@timeslot 005D  
                             __end_of_fat_create_file 3274  
                                    spi_tx_rx@command 0001  
                            __flash_get_status@status 0010  
                                  ?_parseHexFileEntry 000C  
                         __size_of__root_is_available 0076  
                             __parse_file_rename@data 0043  
                              __size_of_USBDeviceInit 014E  
                       ?_MSDProcessCommandMediaAbsent 0001  
             __end_of_USER_USB_CALLBACK_EVENT_HANDLER 64D8  
            __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                   ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                    ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                     _USER_USB_CALLBACK_EVENT_HANDLER 6452  
                                  ??_hexCharsToUint16 0006  
                                    ___lwmod@dividend 0001  
                   __end_of_ExternalFlash_SectorWrite 7A8C  
                                    ___lldiv@dividend 0001  
               __end_of__flash_write_page_from_buffer 71B8  
              __size_of__flash_write_page_from_buffer 0058  
                       __flash_write_page_from_buffer 7160  
                SYSTEM_Initialize@pll_startup_counter 0001  
                               __update_modified_time 7AF0  
                        fat_read_from_file@start_byte 003F  
                                     _display_content 0176  
                          __end_of_flash_partial_read 7B54  
                                   ??_system_delay_ms 0001  
                             __end_of_MSDWriteHandler 17B4  
                                 ??_parseHexFileEntry 0014  
                                           strncmp@s1 0001  
                                           strncmp@s2 0003  
                                    spi_tx_tx@command 0001  
                 __end_of_bootloader_get_rec_checksum 80DE  
                         _bootloader_get_rec_checksum 80D8  
                             __size_of_MSDReadHandler 01D8  
                       __size_of_jump_to_main_program 0006  
                   __size_of__fill_buffer_get_display 00B4  
                           ?__fill_buffer_get_display 0005  
                              ??_USBConfigureEndpoint 0002  
                                     ?__i2c_wait_idle 0001  
                               ?_USBCtrlTrfOutHandler 0001  
                                     _display_prepare 504E  
                            ??__flash_write_to_buffer 001B  
                            ?_APP_DeviceMSDInitialize 0001  
                               _failed_line3_checksum 8E04  
                                 _USBCtrlTrfRxService 4012  
                           __size_of_timer_pseudo_isr 0034  
                                  _USBWakeFromSuspend 7950  
                               ??__parse_command_long 0055  
                                   hexCharsToUint8@c1 0005  
                                   hexCharsToUint8@c2 0003  
                         internalFlash_writePage@cntr 0009  
                         internalFlash_writePage@page 0003  
                                        ?__ui_encoder 0001  
                                  _i2c_display_cursor 7D7E  
                              ??__display_programming 001F  
                             _USBStdFeatureReqHandler 17B4  
                        __fill_buffer_read_file@start 00EA  
                                         ??_spi_tx_rx 0009  
                                         ??_spi_tx_tx 0009  
                   __bootloader_check_address@address 0001  
                                 _USBCtrlTrfTxService 51EE  
                         fat_delete_file@next_cluster 003A  
                                        ?_api_prepare 00EE  
               __flash_write_page_from_buffer@command 001A  
                                            utoa@base 000C  
                                     _gblMediaPresent 0172  
                    __size_of_bootloader_get_rec_data 0016  
                               _i2c_digipot_backlight 7D0E  
                                    ??_hexCharToUint8 0001  
                 ExternalFlash_SectorRead@sector_addr 002E  
                                 ?_USBWakeFromSuspend 0001  
                                   ??_hexCharsToUint8 0004  
                    __end_of_failed_line3_dataTooLong 8E3F  
                                          _PPSCONbits 000EBF  
                                    ___lldiv@quotient 0009  
                              ??_bootloader_get_error 0001  
                                     ___lwmod@divisor 0003  
                         ??_ExternalFlash_MediaDetect 0003  
                                 ?_i2c_display_cursor 000E  
                               ??_USBCtrlTrfInHandler 0002  
                  __end_of_bootloader_get_rec_address 8072  
                          _bootloader_get_rec_address 8068  
                               _USBAlternateInterface 01E2  
                __bootloader_check_address@dataLength 0005  
                           __end_of_parseHexFileEntry 049C  
                                     ___lwmod@counter 0005  
                         __end_of_i2c_eeprom_readByte 75B4  
                          __delete_root@deleted_value 002E  
                       __size_of__i2c_not_acknowledge 000A  
                                         _ptrNextData 008C  
                           _failed_line3_noNextRecord 8E13  
                          ?__bootloader_check_address 0001  
                                     _fat_rename_file 5FCE  
                                 USBEnableEndpoint@ep 000C  
                                     _endpoint_number 00AB  
                                      _display_update 6B4E  
                                      ??__normal_mode 0019  
                                      ?_flash_is_busy 0001  
                                ?_USBCtrlTrfRxService 0001  
                              _failed_line3_startCode 8CD6  
                     __size_of_bootloader_get_entries 000A  
__internalFlash_unlockAndActivate@InterruptEnableSave 0002  
                               _MSDCheckForErrorCases 4BFE  
                          fat_read_from_file@position 00DE  
                       ?_MSDComputeDeviceInAndResidue 0001  
                    __end_of__ic2_display_set_address 7D5A  
                            ?_USBCtrlEPAllowDataStage 0001  
                                      _MSBBufferIndex 0174  
                             _internalFlash_writePage 65DC  
                                ?_USBCtrlTrfTxService 0001  
                      ?_bootloader_get_rec_recordType 0001  
                                          _USBMSDInit 444A  
                        _USBStatusStageTimeoutCounter 00A9  
                     ??_ExternalFlash_MediaInitialize 0003  
                   __size_of_system_minimal_init_undo 0010  
                                    ?_fat_delete_file 0001  
                                ??_USBWakeFromSuspend 0018  
                           ?_system_minimal_init_undo 0001  
                         __end_of__flash_partial_read 67C4  
                          USBTransferOnePacket@handle 000A  
                                ??_i2c_display_cursor 000F  
                        __end_of_i2c_eeprom_writeByte 7826  
                                        _verify_line1 8DC4  
                                        _verify_line2 8E4C  
                                        _verify_line3 8E8A  
                            ??_fat_get_empty_clusters 0032  
                                          _USB_CD_Ptr 8EA5  
                                         _power_state 0097  
                                         _USBInHandle 0170  
                            _APP_DeviceCustomHIDTasks 5ABC  
