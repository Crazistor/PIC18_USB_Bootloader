

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Thu Aug 23 23:38:31 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAMlh,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1,group=2
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1,group=2
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1,group=2
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	text189,global,reloc=2,class=CODE,delta=1
   213                           	psect	text190,global,reloc=2,class=CODE,delta=1
   214                           	psect	text191,global,reloc=2,class=CODE,delta=1
   215                           	psect	text192,global,reloc=2,class=CODE,delta=1
   216                           	psect	text193,global,reloc=2,class=CODE,delta=1
   217                           	psect	text194,global,reloc=2,class=CODE,delta=1
   218                           	psect	text195,global,reloc=2,class=CODE,delta=1
   219                           	psect	text196,global,reloc=2,class=CODE,delta=1
   220                           	psect	text197,global,reloc=2,class=CODE,delta=1
   221                           	psect	text198,global,reloc=2,class=CODE,delta=1
   222                           	psect	text199,global,reloc=2,class=CODE,delta=1
   223                           	psect	text200,global,reloc=2,class=CODE,delta=1
   224                           	psect	text201,global,reloc=2,class=CODE,delta=1
   225                           	psect	text202,global,reloc=2,class=CODE,delta=1
   226                           	psect	text203,global,reloc=2,class=CODE,delta=1
   227                           	psect	text204,global,reloc=2,class=CODE,delta=1
   228                           	psect	text205,global,reloc=2,class=CODE,delta=1
   229                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   232                           	dabs	1,0x600,512,_msd_buffer
   233                           	dabs	1,0xD00,48,_BDT
   234                           	dabs	1,0xD40,31,_msd_cbw
   235                           	dabs	1,0xD80,13,_msd_csw
   236                           	dabs	1,0xD38,8,_CtrlTrfData
   237                           	dabs	1,0xD30,8,_SetupPkt
   238  0000                     
   239                           ; Version 2.00
   240                           ; Generated 27/05/2018 GMT
   241                           ; 
   242                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   243                           ; All rights reserved.
   244                           ; 
   245                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   246                           ; 
   247                           ; Redistribution and use in source and binary forms, with or without modification, are
   248                           ; permitted provided that the following conditions are met:
   249                           ; 
   250                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   251                           ;        conditions and the following disclaimer.
   252                           ; 
   253                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   254                           ;        of conditions and the following disclaimer in the documentation and/or other
   255                           ;        materials provided with the distribution.
   256                           ; 
   257                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   258                           ;        software without specific prior written permission.
   259                           ; 
   260                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   261                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   262                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   263                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   264                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   265                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   266                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   267                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   268                           ; 
   269                           ; 
   270                           ; Code-generator required, PIC18F47J53 Definitions
   271                           ; 
   272                           ; SFR Addresses
   273  0000                     
   274                           	psect	intcode
   275  000008  EF04 F048          	goto	36872	;# 
   276                           
   277                           	psect	intcodelo
   278  000018  EF0C F048          	goto	36888	; ;# 
   279  0000                     
   280                           	psect	idataBANK0
   281  007E5C                     __pidataBANK0:
   282                           	opt stack 0
   283                           
   284                           ;initializer for _file_number
   285  007E5C  FF                 	db	255
   286                           
   287                           	psect	idataBANK1
   288  007C1E                     __pidataBANK1:
   289                           	opt stack 0
   290                           
   291                           ;initializer for _LUN
   292  007C1E  8E                 	db	low _ExternalFlash_MediaInitialize
   293  007C1F  7C                 	db	high _ExternalFlash_MediaInitialize
   294  007C20  14                 	db	low _ExternalFlash_CapacityRead
   295  007C21  7D                 	db	high _ExternalFlash_CapacityRead
   296  007C22  BE                 	db	low _ExternalFlash_SectorSizeRead
   297  007C23  7D                 	db	high _ExternalFlash_SectorSizeRead
   298  007C24  50                 	db	low _ExternalFlash_MediaDetect
   299  007C25  7E                 	db	high _ExternalFlash_MediaDetect
   300  007C26  9C                 	db	low _ExternalFlash_SectorRead
   301  007C27  77                 	db	high _ExternalFlash_SectorRead
   302  007C28  4C                 	db	low _ExternalFlash_WriteProtectStateGet
   303  007C29  7E                 	db	high _ExternalFlash_WriteProtectStateGet
   304  007C2A  66                 	db	low _ExternalFlash_SectorWrite
   305  007C2B  77                 	db	high _ExternalFlash_SectorWrite
   306  007C2C  00                 	db	0
   307  007C2D  00                 	db	0
   308  007C2E  00                 	db	0
   309  007C2F  00                 	db	0
   310  007C30  00                 	db	0
   311  007C31  00                 	db	0
   312                           
   313                           ;initializer for i2c_display_send_init_sequence@F6791
   314  007C32  3A                 	db	58
   315  007C33  1E                 	db	30
   316  007C34  39                 	db	57
   317  007C35  0C                 	db	12
   318  007C36  74                 	db	116
   319  007C37  5C                 	db	92
   320  007C38  6D                 	db	109
   321  007C39  0C                 	db	12
   322  007C3A  01                 	db	1
   323                           
   324                           	psect	idataBANK2
   325  007E0E                     __pidataBANK2:
   326                           	opt stack 0
   327                           
   328                           ;initializer for _tx_buf
   329  007E0E  01                 	db	1
   330  007E0F  02                 	db	2
   331  007E10  03                 	db	3
   332  007E11  04                 	db	4
   333  007E12  05                 	db	5
   334  007E13  06                 	db	6
   335  007E14  07                 	db	7
   336  007E15  08                 	db	8
   337                           
   338                           	psect	mediumconst
   339  008CCC                     __pmediumconst:
   340                           	opt stack 0
   341  008CCC  00                 	db	0
   342  008CCD                     _checked_line2:
   343                           	opt stack 0
   344  008CCD  46                 	db	70
   345  008CCE  69                 	db	105
   346  008CCF  6C                 	db	108
   347  008CD0  65                 	db	101
   348  008CD1  20                 	db	32
   349  008CD2  63                 	db	99
   350  008CD3  68                 	db	104
   351  008CD4  65                 	db	101
   352  008CD5  63                 	db	99
   353  008CD6  6B                 	db	107
   354  008CD7  20                 	db	32
   355  008CD8  63                 	db	99
   356  008CD9  6F                 	db	111
   357  008CDA  6D                 	db	109
   358  008CDB  70                 	db	112
   359  008CDC  6C                 	db	108
   360  008CDD  65                 	db	101
   361  008CDE  74                 	db	116
   362  008CDF  65                 	db	101
   363  008CE0  64                 	db	100
   364  008CE1  00                 	db	0
   365  008CE2                     __end_of_checked_line2:
   366                           	opt stack 0
   367  008CE2                     _failed_line3_addressRange:
   368                           	opt stack 0
   369  008CE2  41                 	db	65
   370  008CE3  64                 	db	100
   371  008CE4  64                 	db	100
   372  008CE5  72                 	db	114
   373  008CE6  2E                 	db	46
   374  008CE7  20                 	db	32
   375  008CE8  6F                 	db	111
   376  008CE9  75                 	db	117
   377  008CEA  74                 	db	116
   378  008CEB  73                 	db	115
   379  008CEC  69                 	db	105
   380  008CED  64                 	db	100
   381  008CEE  65                 	db	101
   382  008CEF  20                 	db	32
   383  008CF0  72                 	db	114
   384  008CF1  61                 	db	97
   385  008CF2  6E                 	db	110
   386  008CF3  67                 	db	103
   387  008CF4  65                 	db	101
   388  008CF5  00                 	db	0
   389  008CF6                     __end_of_failed_line3_addressRange:
   390                           	opt stack 0
   391  008CF6                     _start_line3:
   392                           	opt stack 0
   393  008CF6  46                 	db	70
   394  008CF7  49                 	db	73
   395  008CF8  52                 	db	82
   396  008CF9  4D                 	db	77
   397  008CFA  57                 	db	87
   398  008CFB  41                 	db	65
   399  008CFC  52                 	db	82
   400  008CFD  45                 	db	69
   401  008CFE  2E                 	db	46
   402  008CFF  48                 	db	72
   403  008D00  45                 	db	69
   404  008D01  58                 	db	88
   405  008D02  20                 	db	32
   406  008D03  6F                 	db	111
   407  008D04  6E                 	db	110
   408  008D05  20                 	db	32
   409  008D06  55                 	db	85
   410  008D07  53                 	db	83
   411  008D08  42                 	db	66
   412  008D09  00                 	db	0
   413  008D0A                     __end_of_start_line3:
   414                           	opt stack 0
   415  008D0A                     _failed_line3_startCode:
   416                           	opt stack 0
   417  008D0A  4D                 	db	77
   418  008D0B  69                 	db	105
   419  008D0C  73                 	db	115
   420  008D0D  73                 	db	115
   421  008D0E  69                 	db	105
   422  008D0F  6E                 	db	110
   423  008D10  67                 	db	103
   424  008D11  20                 	db	32
   425  008D12  73                 	db	115
   426  008D13  74                 	db	116
   427  008D14  61                 	db	97
   428  008D15  72                 	db	114
   429  008D16  74                 	db	116
   430  008D17  20                 	db	32
   431  008D18  63                 	db	99
   432  008D19  6F                 	db	111
   433  008D1A  64                 	db	100
   434  008D1B  65                 	db	101
   435  008D1C  00                 	db	0
   436  008D1D                     __end_of_failed_line3_startCode:
   437                           	opt stack 0
   438  008D1D                     _found_line2:
   439                           	opt stack 0
   440  008D1D  46                 	db	70
   441  008D1E  49                 	db	73
   442  008D1F  52                 	db	82
   443  008D20  4D                 	db	77
   444  008D21  57                 	db	87
   445  008D22  41                 	db	65
   446  008D23  52                 	db	82
   447  008D24  45                 	db	69
   448  008D25  2E                 	db	46
   449  008D26  48                 	db	72
   450  008D27  45                 	db	69
   451  008D28  58                 	db	88
   452  008D29  20                 	db	32
   453  008D2A  66                 	db	102
   454  008D2B  6F                 	db	111
   455  008D2C  75                 	db	117
   456  008D2D  6E                 	db	110
   457  008D2E  64                 	db	100
   458  008D2F  00                 	db	0
   459  008D30                     __end_of_found_line2:
   460                           	opt stack 0
   461  008D30                     _programming_line2:
   462                           	opt stack 0
   463  008D30  50                 	db	80
   464  008D31  72                 	db	114
   465  008D32  6F                 	db	111
   466  008D33  67                 	db	103
   467  008D34  72                 	db	114
   468  008D35  61                 	db	97
   469  008D36  6D                 	db	109
   470  008D37  6D                 	db	109
   471  008D38  69                 	db	105
   472  008D39  6E                 	db	110
   473  008D3A  67                 	db	103
   474  008D3B  20                 	db	32
   475  008D3C  66                 	db	102
   476  008D3D  6C                 	db	108
   477  008D3E  61                 	db	97
   478  008D3F  73                 	db	115
   479  008D40  68                 	db	104
   480  008D41  00                 	db	0
   481  008D42                     __end_of_programming_line2:
   482                           	opt stack 0
   483  008D42                     _failed_line2:
   484                           	opt stack 0
   485  008D42  46                 	db	70
   486  008D43  69                 	db	105
   487  008D44  6C                 	db	108
   488  008D45  65                 	db	101
   489  008D46  20                 	db	32
   490  008D47  63                 	db	99
   491  008D48  68                 	db	104
   492  008D49  65                 	db	101
   493  008D4A  63                 	db	99
   494  008D4B  6B                 	db	107
   495  008D4C  20                 	db	32
   496  008D4D  66                 	db	102
   497  008D4E  61                 	db	97
   498  008D4F  69                 	db	105
   499  008D50  6C                 	db	108
   500  008D51  65                 	db	101
   501  008D52  64                 	db	100
   502  008D53  00                 	db	0
   503  008D54                     __end_of_failed_line2:
   504                           	opt stack 0
   505  008D54                     _found_line4:
   506                           	opt stack 0
   507  008D54  50                 	db	80
   508  008D55  72                 	db	114
   509  008D56  65                 	db	101
   510  008D57  73                 	db	115
   511  008D58  73                 	db	115
   512  008D59  20                 	db	32
   513  008D5A  74                 	db	116
   514  008D5B  6F                 	db	111
   515  008D5C  20                 	db	32
   516  008D5D  75                 	db	117
   517  008D5E  73                 	db	115
   518  008D5F  65                 	db	101
   519  008D60  20                 	db	32
   520  008D61  66                 	db	102
   521  008D62  69                 	db	105
   522  008D63  6C                 	db	108
   523  008D64  65                 	db	101
   524  008D65  00                 	db	0
   525  008D66                     __end_of_found_line4:
   526                           	opt stack 0
   527  008D66                     _checked_line4:
   528                           	opt stack 0
   529  008D66  50                 	db	80
   530  008D67  72                 	db	114
   531  008D68  65                 	db	101
   532  008D69  73                 	db	115
   533  008D6A  73                 	db	115
   534  008D6B  20                 	db	32
   535  008D6C  74                 	db	116
   536  008D6D  6F                 	db	111
   537  008D6E  20                 	db	32
   538  008D6F  70                 	db	112
   539  008D70  72                 	db	114
   540  008D71  6F                 	db	111
   541  008D72  67                 	db	103
   542  008D73  72                 	db	114
   543  008D74  61                 	db	97
   544  008D75  6D                 	db	109
   545  008D76  00                 	db	0
   546  008D77                     __end_of_checked_line4:
   547                           	opt stack 0
   548  008D77                     _start_line2:
   549                           	opt stack 0
   550  008D77  4C                 	db	76
   551  008D78  6F                 	db	111
   552  008D79  6F                 	db	111
   553  008D7A  6B                 	db	107
   554  008D7B  69                 	db	105
   555  008D7C  6E                 	db	110
   556  008D7D  67                 	db	103
   557  008D7E  20                 	db	32
   558  008D7F  66                 	db	102
   559  008D80  6F                 	db	111
   560  008D81  72                 	db	114
   561  008D82  20                 	db	32
   562  008D83  66                 	db	102
   563  008D84  69                 	db	105
   564  008D85  6C                 	db	108
   565  008D86  65                 	db	101
   566  008D87  00                 	db	0
   567  008D88                     __end_of_start_line2:
   568                           	opt stack 0
   569  008D88                     _start_line1:
   570                           	opt stack 0
   571  008D88  42                 	db	66
   572  008D89  6F                 	db	111
   573  008D8A  6F                 	db	111
   574  008D8B  74                 	db	116
   575  008D8C  6C                 	db	108
   576  008D8D  6F                 	db	111
   577  008D8E  61                 	db	97
   578  008D8F  64                 	db	100
   579  008D90  65                 	db	101
   580  008D91  72                 	db	114
   581  008D92  20                 	db	32
   582  008D93  4D                 	db	77
   583  008D94  6F                 	db	111
   584  008D95  64                 	db	100
   585  008D96  65                 	db	101
   586  008D97  00                 	db	0
   587  008D98  00                 	db	0
   588  008D99                     __end_of_start_line1:
   589                           	opt stack 0
   590  008D99                     _done_line4:
   591                           	opt stack 0
   592  008D99  50                 	db	80
   593  008D9A  72                 	db	114
   594  008D9B  65                 	db	101
   595  008D9C  73                 	db	115
   596  008D9D  73                 	db	115
   597  008D9E  20                 	db	32
   598  008D9F  74                 	db	116
   599  008DA0  6F                 	db	111
   600  008DA1  20                 	db	32
   601  008DA2  72                 	db	114
   602  008DA3  65                 	db	101
   603  008DA4  62                 	db	98
   604  008DA5  6F                 	db	111
   605  008DA6  6F                 	db	111
   606  008DA7  74                 	db	116
   607  008DA8  00                 	db	0
   608  008DA9                     __end_of_done_line4:
   609                           	opt stack 0
   610  008DA9                     _done_line3:
   611                           	opt stack 0
   612  008DA9  50                 	db	80
   613  008DAA  61                 	db	97
   614  008DAB  67                 	db	103
   615  008DAC  65                 	db	101
   616  008DAD  73                 	db	115
   617  008DAE  20                 	db	32
   618  008DAF  77                 	db	119
   619  008DB0  72                 	db	114
   620  008DB1  69                 	db	105
   621  008DB2  74                 	db	116
   622  008DB3  74                 	db	116
   623  008DB4  65                 	db	101
   624  008DB5  6E                 	db	110
   625  008DB6  3A                 	db	58
   626  008DB7  20                 	db	32
   627  008DB8  00                 	db	0
   628  008DB9                     __end_of_done_line3:
   629                           	opt stack 0
   630  008DB9                     _done_line1:
   631                           	opt stack 0
   632  008DB9  42                 	db	66
   633  008DBA  6F                 	db	111
   634  008DBB  6F                 	db	111
   635  008DBC  74                 	db	116
   636  008DBD  6C                 	db	108
   637  008DBE  6F                 	db	111
   638  008DBF  61                 	db	97
   639  008DC0  64                 	db	100
   640  008DC1  65                 	db	101
   641  008DC2  72                 	db	114
   642  008DC3  20                 	db	32
   643  008DC4  4D                 	db	77
   644  008DC5  6F                 	db	111
   645  008DC6  64                 	db	100
   646  008DC7  65                 	db	101
   647  008DC8  00                 	db	0
   648  008DC9                     __end_of_done_line1:
   649                           	opt stack 0
   650  008DC9                     _programming_line4:
   651                           	opt stack 0
   652  008DC9  50                 	db	80
   653  008DCA  61                 	db	97
   654  008DCB  67                 	db	103
   655  008DCC  65                 	db	101
   656  008DCD  73                 	db	115
   657  008DCE  20                 	db	32
   658  008DCF  77                 	db	119
   659  008DD0  72                 	db	114
   660  008DD1  69                 	db	105
   661  008DD2  74                 	db	116
   662  008DD3  74                 	db	116
   663  008DD4  65                 	db	101
   664  008DD5  6E                 	db	110
   665  008DD6  3A                 	db	58
   666  008DD7  20                 	db	32
   667  008DD8  00                 	db	0
   668  008DD9                     __end_of_programming_line4:
   669                           	opt stack 0
   670  008DD9                     _programming_line1:
   671                           	opt stack 0
   672  008DD9  42                 	db	66
   673  008DDA  6F                 	db	111
   674  008DDB  6F                 	db	111
   675  008DDC  74                 	db	116
   676  008DDD  6C                 	db	108
   677  008DDE  6F                 	db	111
   678  008DDF  61                 	db	97
   679  008DE0  64                 	db	100
   680  008DE1  65                 	db	101
   681  008DE2  72                 	db	114
   682  008DE3  20                 	db	32
   683  008DE4  4D                 	db	77
   684  008DE5  6F                 	db	111
   685  008DE6  64                 	db	100
   686  008DE7  65                 	db	101
   687  008DE8  00                 	db	0
   688  008DE9                     __end_of_programming_line1:
   689                           	opt stack 0
   690  008DE9                     _failed_line1:
   691                           	opt stack 0
   692  008DE9  42                 	db	66
   693  008DEA  6F                 	db	111
   694  008DEB  6F                 	db	111
   695  008DEC  74                 	db	116
   696  008DED  6C                 	db	108
   697  008DEE  6F                 	db	111
   698  008DEF  61                 	db	97
   699  008DF0  64                 	db	100
   700  008DF1  65                 	db	101
   701  008DF2  72                 	db	114
   702  008DF3  20                 	db	32
   703  008DF4  4D                 	db	77
   704  008DF5  6F                 	db	111
   705  008DF6  64                 	db	100
   706  008DF7  65                 	db	101
   707  008DF8  00                 	db	0
   708  008DF9                     __end_of_failed_line1:
   709                           	opt stack 0
   710  008DF9                     _checked_line1:
   711                           	opt stack 0
   712  008DF9  42                 	db	66
   713  008DFA  6F                 	db	111
   714  008DFB  6F                 	db	111
   715  008DFC  74                 	db	116
   716  008DFD  6C                 	db	108
   717  008DFE  6F                 	db	111
   718  008DFF  61                 	db	97
   719  008E00  64                 	db	100
   720  008E01  65                 	db	101
   721  008E02  72                 	db	114
   722  008E03  20                 	db	32
   723  008E04  4D                 	db	77
   724  008E05  6F                 	db	111
   725  008E06  64                 	db	100
   726  008E07  65                 	db	101
   727  008E08  00                 	db	0
   728  008E09                     __end_of_checked_line1:
   729                           	opt stack 0
   730  008E09                     _verify_line1:
   731                           	opt stack 0
   732  008E09  42                 	db	66
   733  008E0A  6F                 	db	111
   734  008E0B  6F                 	db	111
   735  008E0C  74                 	db	116
   736  008E0D  6C                 	db	108
   737  008E0E  6F                 	db	111
   738  008E0F  61                 	db	97
   739  008E10  64                 	db	100
   740  008E11  65                 	db	101
   741  008E12  72                 	db	114
   742  008E13  20                 	db	32
   743  008E14  4D                 	db	77
   744  008E15  6F                 	db	111
   745  008E16  64                 	db	100
   746  008E17  65                 	db	101
   747  008E18  00                 	db	0
   748  008E19                     __end_of_verify_line1:
   749                           	opt stack 0
   750  008E19                     _found_line1:
   751                           	opt stack 0
   752  008E19  42                 	db	66
   753  008E1A  6F                 	db	111
   754  008E1B  6F                 	db	111
   755  008E1C  74                 	db	116
   756  008E1D  6C                 	db	108
   757  008E1E  6F                 	db	111
   758  008E1F  61                 	db	97
   759  008E20  64                 	db	100
   760  008E21  65                 	db	101
   761  008E22  72                 	db	114
   762  008E23  20                 	db	32
   763  008E24  4D                 	db	77
   764  008E25  6F                 	db	111
   765  008E26  64                 	db	100
   766  008E27  65                 	db	101
   767  008E28  00                 	db	0
   768  008E29                     __end_of_found_line1:
   769                           	opt stack 0
   770  008E29                     _failed_line3_checksum:
   771                           	opt stack 0
   772  008E29  43                 	db	67
   773  008E2A  68                 	db	104
   774  008E2B  65                 	db	101
   775  008E2C  63                 	db	99
   776  008E2D  6B                 	db	107
   777  008E2E  73                 	db	115
   778  008E2F  75                 	db	117
   779  008E30  6D                 	db	109
   780  008E31  20                 	db	32
   781  008E32  65                 	db	101
   782  008E33  72                 	db	114
   783  008E34  72                 	db	114
   784  008E35  6F                 	db	111
   785  008E36  72                 	db	114
   786  008E37  00                 	db	0
   787  008E38                     __end_of_failed_line3_checksum:
   788                           	opt stack 0
   789  008E38                     _failed_line3_noNextRecord:
   790                           	opt stack 0
   791  008E38  4E                 	db	78
   792  008E39  6F                 	db	111
   793  008E3A  20                 	db	32
   794  008E3B  6E                 	db	110
   795  008E3C  65                 	db	101
   796  008E3D  78                 	db	120
   797  008E3E  74                 	db	116
   798  008E3F  20                 	db	32
   799  008E40  72                 	db	114
   800  008E41  65                 	db	101
   801  008E42  63                 	db	99
   802  008E43  6F                 	db	111
   803  008E44  72                 	db	114
   804  008E45  64                 	db	100
   805  008E46  00                 	db	0
   806  008E47                     __end_of_failed_line3_noNextRecord:
   807                           	opt stack 0
   808  008E47                     _failed_line3_dataTooLong:
   809                           	opt stack 0
   810  008E47  44                 	db	68
   811  008E48  61                 	db	97
   812  008E49  74                 	db	116
   813  008E4A  61                 	db	97
   814  008E4B  20                 	db	32
   815  008E4C  74                 	db	116
   816  008E4D  6F                 	db	111
   817  008E4E  6F                 	db	111
   818  008E4F  20                 	db	32
   819  008E50  6C                 	db	108
   820  008E51  6F                 	db	111
   821  008E52  6E                 	db	110
   822  008E53  67                 	db	103
   823  008E54  00                 	db	0
   824  008E55                     __end_of_failed_line3_dataTooLong:
   825                           	opt stack 0
   826  008E55                     _verify_line2:
   827                           	opt stack 0
   828  008E55  56                 	db	86
   829  008E56  65                 	db	101
   830  008E57  72                 	db	114
   831  008E58  69                 	db	105
   832  008E59  66                 	db	102
   833  008E5A  79                 	db	121
   834  008E5B  69                 	db	105
   835  008E5C  6E                 	db	110
   836  008E5D  67                 	db	103
   837  008E5E  2E                 	db	46
   838  008E5F  2E                 	db	46
   839  008E60  2E                 	db	46
   840  008E61  00                 	db	0
   841  008E62                     __end_of_verify_line2:
   842                           	opt stack 0
   843  008E62                     _start_line4:
   844                           	opt stack 0
   845  008E62  64                 	db	100
   846  008E63  72                 	db	114
   847  008E64  69                 	db	105
   848  008E65  76                 	db	118
   849  008E66  65                 	db	101
   850  008E67  2E                 	db	46
   851  008E68  2E                 	db	46
   852  008E69  2E                 	db	46
   853  008E6A  00                 	db	0
   854  008E6B                     __end_of_start_line4:
   855                           	opt stack 0
   856  008E6B                     _failed_line4:
   857                           	opt stack 0
   858  008E6B  52                 	db	82
   859  008E6C  65                 	db	101
   860  008E6D  63                 	db	99
   861  008E6E  6F                 	db	111
   862  008E6F  72                 	db	114
   863  008E70  64                 	db	100
   864  008E71  20                 	db	32
   865  008E72  00                 	db	0
   866  008E73                     __end_of_failed_line4:
   867                           	opt stack 0
   868  008E73                     _checked_line3:
   869                           	opt stack 0
   870  008E73  72                 	db	114
   871  008E74  65                 	db	101
   872  008E75  63                 	db	99
   873  008E76  6F                 	db	111
   874  008E77  72                 	db	114
   875  008E78  64                 	db	100
   876  008E79  73                 	db	115
   877  008E7A  00                 	db	0
   878  008E7B                     __end_of_checked_line3:
   879                           	opt stack 0
   880  008E7B                     _USB_SD_Ptr:
   881                           	opt stack 0
   882  008E7B  CB                 	db	low _sd000
   883  008E7C  8F                 	db	high _sd000
   884  008E7D  E7                 	db	low _sd001
   885  008E7E  8E                 	db	high _sd001
   886  008E7F  1B                 	db	low _sd002
   887  008E80  8F                 	db	high _sd002
   888  008E81  8A                 	db	low _sd003
   889  008E82  8F                 	db	high _sd003
   890  008E83                     __end_of_USB_SD_Ptr:
   891                           	opt stack 0
   892  008E83                     _programming_line3:
   893                           	opt stack 0
   894  008E83  45                 	db	69
   895  008E84  6E                 	db	110
   896  008E85  74                 	db	116
   897  008E86  72                 	db	114
   898  008E87  79                 	db	121
   899  008E88  20                 	db	32
   900  008E89  00                 	db	0
   901  008E8A                     __end_of_programming_line3:
   902                           	opt stack 0
   903  008E8A                     _verify_line3:
   904                           	opt stack 0
   905  008E8A  52                 	db	82
   906  008E8B  65                 	db	101
   907  008E8C  63                 	db	99
   908  008E8D  6F                 	db	111
   909  008E8E  72                 	db	114
   910  008E8F  64                 	db	100
   911  008E90  00                 	db	0
   912  008E91                     __end_of_verify_line3:
   913                           	opt stack 0
   914  008E91                     _found_line3b:
   915                           	opt stack 0
   916  008E91  20                 	db	32
   917  008E92  62                 	db	98
   918  008E93  79                 	db	121
   919  008E94  74                 	db	116
   920  008E95  65                 	db	101
   921  008E96  73                 	db	115
   922  008E97  00                 	db	0
   923  008E98                     __end_of_found_line3b:
   924                           	opt stack 0
   925  008E98                     _found_line3:
   926                           	opt stack 0
   927  008E98  53                 	db	83
   928  008E99  69                 	db	105
   929  008E9A  7A                 	db	122
   930  008E9B  65                 	db	101
   931  008E9C  3A                 	db	58
   932  008E9D  20                 	db	32
   933  008E9E  00                 	db	0
   934  008E9F                     __end_of_found_line3:
   935                           	opt stack 0
   936  008E9F                     _done_line2:
   937                           	opt stack 0
   938  008E9F  44                 	db	68
   939  008EA0  6F                 	db	111
   940  008EA1  6E                 	db	110
   941  008EA2  65                 	db	101
   942  008EA3  21                 	db	33
   943  008EA4  00                 	db	0
   944  008EA5                     __end_of_done_line2:
   945                           	opt stack 0
   946  008EA5                     _USB_CD_Ptr:
   947                           	opt stack 0
   948  008EA5  A7                 	db	low _configDescriptor1
   949  008EA6  8E                 	db	high _configDescriptor1
   950  008EA7                     __end_of_USB_CD_Ptr:
   951                           	opt stack 0
   952  008EA7                     _configDescriptor1:
   953                           	opt stack 0
   954  008EA7  09                 	db	9
   955  008EA8  02                 	db	2
   956  008EA9  40                 	db	64
   957  008EAA  00                 	db	0
   958  008EAB  02                 	db	2
   959  008EAC  01                 	db	1
   960  008EAD  00                 	db	0
   961  008EAE  C0                 	db	192
   962  008EAF  32                 	db	50
   963  008EB0  09                 	db	9
   964  008EB1  04                 	db	4
   965  008EB2  00                 	db	0
   966  008EB3  00                 	db	0
   967  008EB4  02                 	db	2
   968  008EB5  03                 	db	3
   969  008EB6  00                 	db	0
   970  008EB7  00                 	db	0
   971  008EB8  00                 	db	0
   972  008EB9  09                 	db	9
   973  008EBA  21                 	db	33
   974  008EBB  11                 	db	17
   975  008EBC  01                 	db	1
   976  008EBD  00                 	db	0
   977  008EBE  01                 	db	1
   978  008EBF  22                 	db	34
   979  008EC0  1D                 	db	29
   980  008EC1  00                 	db	0
   981  008EC2  07                 	db	7
   982  008EC3  05                 	db	5
   983  008EC4  81                 	db	129
   984  008EC5  03                 	db	3
   985  008EC6  40                 	db	64
   986  008EC7  00                 	db	0
   987  008EC8  01                 	db	1
   988  008EC9  07                 	db	7
   989  008ECA  05                 	db	5
   990  008ECB  01                 	db	1
   991  008ECC  03                 	db	3
   992  008ECD  40                 	db	64
   993  008ECE  00                 	db	0
   994  008ECF  01                 	db	1
   995  008ED0  09                 	db	9
   996  008ED1  04                 	db	4
   997  008ED2  01                 	db	1
   998  008ED3  00                 	db	0
   999  008ED4  02                 	db	2
  1000  008ED5  08                 	db	8
  1001  008ED6  06                 	db	6
  1002  008ED7  50                 	db	80
  1003  008ED8  00                 	db	0
  1004  008ED9  07                 	db	7
  1005  008EDA  05                 	db	5
  1006  008EDB  82                 	db	130
  1007  008EDC  02                 	db	2
  1008  008EDD  40                 	db	64
  1009  008EDE  00                 	db	0
  1010  008EDF  01                 	db	1
  1011  008EE0  07                 	db	7
  1012  008EE1  05                 	db	5
  1013  008EE2  02                 	db	2
  1014  008EE3  02                 	db	2
  1015  008EE4  40                 	db	64
  1016  008EE5  00                 	db	0
  1017  008EE6  01                 	db	1
  1018  008EE7                     __end_of_configDescriptor1:
  1019                           	opt stack 0
  1020  008EE7                     _sd001:
  1021                           	opt stack 0
  1022  008EE7  34                 	db	52
  1023  008EE8  03                 	db	3
  1024  008EE9  0053               	dw	83
  1025  008EEB  006F               	dw	111
  1026  008EED  006C               	dw	108
  1027  008EEF  0064               	dw	100
  1028  008EF1  0065               	dw	101
  1029  008EF3  0072               	dw	114
  1030  008EF5  006E               	dw	110
  1031  008EF7  0065               	dw	101
  1032  008EF9  0072               	dw	114
  1033  008EFB  0064               	dw	100
  1034  008EFD  002E               	dw	46
  1035  008EFF  0063               	dw	99
  1036  008F01  006F               	dw	111
  1037  008F03  006D               	dw	109
  1038  008F05  0020               	dw	32
  1039  008F07  0020               	dw	32
  1040  008F09  0020               	dw	32
  1041  008F0B  0020               	dw	32
  1042  008F0D  0020               	dw	32
  1043  008F0F  0020               	dw	32
  1044  008F11  0020               	dw	32
  1045  008F13  0020               	dw	32
  1046  008F15  0020               	dw	32
  1047  008F17  0020               	dw	32
  1048  008F19  0020               	dw	32
  1049  008F1B                     __end_of_sd001:
  1050                           	opt stack 0
  1051  008F1B                     _sd002:
  1052                           	opt stack 0
  1053  008F1B  2E                 	db	46
  1054  008F1C  03                 	db	3
  1055  008F1D  004D               	dw	77
  1056  008F1F  0050               	dw	80
  1057  008F21  0050               	dw	80
  1058  008F23  0054               	dw	84
  1059  008F25  0053               	dw	83
  1060  008F27  006F               	dw	111
  1061  008F29  006C               	dw	108
  1062  008F2B  0061               	dw	97
  1063  008F2D  0072               	dw	114
  1064  008F2F  0020               	dw	32
  1065  008F31  0043               	dw	67
  1066  008F33  0068               	dw	104
  1067  008F35  0061               	dw	97
  1068  008F37  0072               	dw	114
  1069  008F39  0067               	dw	103
  1070  008F3B  0065               	dw	101
  1071  008F3D  0072               	dw	114
  1072  008F3F  0020               	dw	32
  1073  008F41  0052               	dw	82
  1074  008F43  0065               	dw	101
  1075  008F45  0076               	dw	118
  1076  008F47  0043               	dw	67
  1077  008F49                     __end_of_sd002:
  1078                           	opt stack 0
  1079  008F49                     _inq_resp:
  1080                           	opt stack 0
  1081  008F49  00                 	db	0
  1082  008F4A  80                 	db	128
  1083  008F4B  04                 	db	4
  1084  008F4C  02                 	db	2
  1085  008F4D  20                 	db	32
  1086  008F4E  00                 	db	0
  1087  008F4F  00                 	db	0
  1088  008F50  00                 	db	0
  1089  008F51  4D                 	db	77
  1090  008F52  69                 	db	105
  1091  008F53  63                 	db	99
  1092  008F54  72                 	db	114
  1093  008F55  6F                 	db	111
  1094  008F56  63                 	db	99
  1095  008F57  68                 	db	104
  1096  008F58  70                 	db	112
  1097  008F59  4D                 	db	77
  1098  008F5A  61                 	db	97
  1099  008F5B  73                 	db	115
  1100  008F5C  73                 	db	115
  1101  008F5D  20                 	db	32
  1102  008F5E  53                 	db	83
  1103  008F5F  74                 	db	116
  1104  008F60  6F                 	db	111
  1105  008F61  72                 	db	114
  1106  008F62  61                 	db	97
  1107  008F63  67                 	db	103
  1108  008F64  65                 	db	101
  1109  008F65  20                 	db	32
  1110  008F66  20                 	db	32
  1111  008F67  20                 	db	32
  1112  008F68  20                 	db	32
  1113  008F69  30                 	db	48
  1114  008F6A  30                 	db	48
  1115  008F6B  30                 	db	48
  1116  008F6C  31                 	db	49
  1117  008F6D                     __end_of_inq_resp:
  1118                           	opt stack 0
  1119  008F6D                     _hid_rpt01:
  1120                           	opt stack 0
  1121  008F6D  06                 	db	6
  1122  008F6E  00                 	db	0
  1123  008F6F  FF                 	db	255
  1124  008F70  09                 	db	9
  1125  008F71  01                 	db	1
  1126  008F72  A1                 	db	161
  1127  008F73  01                 	db	1
  1128  008F74  19                 	db	25
  1129  008F75  01                 	db	1
  1130  008F76  29                 	db	41
  1131  008F77  40                 	db	64
  1132  008F78  15                 	db	21
  1133  008F79  00                 	db	0
  1134  008F7A  26                 	db	38
  1135  008F7B  FF                 	db	255
  1136  008F7C  00                 	db	0
  1137  008F7D  75                 	db	117
  1138  008F7E  08                 	db	8
  1139  008F7F  95                 	db	149
  1140  008F80  40                 	db	64
  1141  008F81  81                 	db	129
  1142  008F82  00                 	db	0
  1143  008F83  19                 	db	25
  1144  008F84  01                 	db	1
  1145  008F85  29                 	db	41
  1146  008F86  40                 	db	64
  1147  008F87  91                 	db	145
  1148  008F88  00                 	db	0
  1149  008F89  C0                 	db	192
  1150  008F8A                     __end_of_hid_rpt01:
  1151                           	opt stack 0
  1152  008F8A                     _sd003:
  1153                           	opt stack 0
  1154  008F8A  1A                 	db	26
  1155  008F8B  03                 	db	3
  1156  008F8C  0031               	dw	49
  1157  008F8E  0032               	dw	50
  1158  008F90  0033               	dw	51
  1159  008F92  0034               	dw	52
  1160  008F94  0035               	dw	53
  1161  008F96  0036               	dw	54
  1162  008F98  0037               	dw	55
  1163  008F9A  0038               	dw	56
  1164  008F9C  0039               	dw	57
  1165  008F9E  0030               	dw	48
  1166  008FA0  0039               	dw	57
  1167  008FA2  0039               	dw	57
  1168  008FA4                     __end_of_sd003:
  1169                           	opt stack 0
  1170  008FA4                     _device_dsc:
  1171                           	opt stack 0
  1172  008FA4  12                 	db	18
  1173  008FA5  01                 	db	1
  1174  008FA6  0200               	dw	512
  1175  008FA8  00                 	db	0
  1176  008FA9  00                 	db	0
  1177  008FAA  00                 	db	0
  1178  008FAB  08                 	db	8
  1179  008FAC  04D8               	dw	1240
  1180  008FAE  F08E               	dw	61582
  1181  008FB0  0100               	dw	256
  1182  008FB2  01                 	db	1
  1183  008FB3  02                 	db	2
  1184  008FB4  00                 	db	0
  1185  008FB5  01                 	db	1
  1186  008FB6                     __end_of_device_dsc:
  1187                           	opt stack 0
  1188  008FB6                     _bootloader_filename:
  1189                           	opt stack 0
  1190  008FB6  46                 	db	70
  1191  008FB7  49                 	db	73
  1192  008FB8  52                 	db	82
  1193  008FB9  4D                 	db	77
  1194  008FBA  57                 	db	87
  1195  008FBB  41                 	db	65
  1196  008FBC  52                 	db	82
  1197  008FBD  45                 	db	69
  1198  008FBE  00                 	db	0
  1199  008FBF                     __end_of_bootloader_filename:
  1200                           	opt stack 0
  1201  008FBF                     _flash_command_pagesize_528:
  1202                           	opt stack 0
  1203  008FBF  3D                 	db	61
  1204  008FC0  2A                 	db	42
  1205  008FC1  80                 	db	128
  1206  008FC2  A7                 	db	167
  1207  008FC3                     __end_of_flash_command_pagesize_528:
  1208                           	opt stack 0
  1209  008FC3                     _flash_command_pagesize_512:
  1210                           	opt stack 0
  1211  008FC3  3D                 	db	61
  1212  008FC4  2A                 	db	42
  1213  008FC5  80                 	db	128
  1214  008FC6  A6                 	db	166
  1215  008FC7                     __end_of_flash_command_pagesize_512:
  1216                           	opt stack 0
  1217  008FC7                     _bootloader_extension:
  1218                           	opt stack 0
  1219  008FC7  48                 	db	72
  1220  008FC8  45                 	db	69
  1221  008FC9  58                 	db	88
  1222  008FCA  00                 	db	0
  1223  008FCB                     __end_of_bootloader_extension:
  1224                           	opt stack 0
  1225  008FCB                     _sd000:
  1226                           	opt stack 0
  1227  008FCB  04                 	db	4
  1228  008FCC  03                 	db	3
  1229  008FCD  0409               	dw	1033
  1230  008FCF                     __end_of_sd000:
  1231                           	opt stack 0
  1232  0000                     _RPINR22	set	3837
  1233  0000                     _RPOR22	set	3798
  1234  0000                     _RPOR21	set	3797
  1235  0000                     _RPINR23	set	3838
  1236  0000                     _RPINR21	set	3836
  1237  0000                     _RPOR23	set	3799
  1238  0000                     _RPINR2	set	3810
  1239  0000                     _RPINR3	set	3811
  1240  0000                     _RPINR1	set	3809
  1241  0000                     _PPSCONbits	set	3775
  1242  0000                     _ODCON3bits	set	3904
  1243  0000                     _ANCON0bits	set	3912
  1244  0000                     _UEP0bits	set	3878
  1245  0000                     _UIEbits	set	3894
  1246  0000                     _UADDR	set	3896
  1247  0000                     _UIE	set	3894
  1248  0000                     _UEIE	set	3895
  1249  0000                     _UCFG	set	3897
  1250  0000                     _UEP1	set	3879
  1251  0000                     _UEP0	set	3878
  1252  0000                     _TBLPTR	set	4086
  1253  0000                     _DMACON2bits	set	3974
  1254  0000                     _SSP2STATbits	set	3955
  1255  0000                     _INTCON	set	4082
  1256  0000                     _EECON1	set	4006
  1257  0000                     _TABLAT	set	4085
  1258  0000                     _EECON1bits	set	4006
  1259  0000                     _SSP1BUF	set	4041
  1260  0000                     _SSP1CON2bits	set	4037
  1261  0000                     _SSP1CON1bits	set	4038
  1262  0000                     _SSP1ADD	set	4040
  1263  0000                     _SSP1STATbits	set	4039
  1264  0000                     _SSP2CON1bits	set	3954
  1265  0000                     _LATAbits	set	3977
  1266  0000                     _TRISAbits	set	3986
  1267  0000                     _LATEbits	set	3981
  1268  0000                     _TRISEbits	set	3990
  1269  0000                     _LATBbits	set	3978
  1270  0000                     _TRISBbits	set	3987
  1271  0000                     _LATDbits	set	3980
  1272  0000                     _TRISDbits	set	3989
  1273  0000                     _LATCbits	set	3979
  1274  0000                     _TRISCbits	set	3988
  1275  0000                     _T0CONbits	set	4053
  1276  0000                     _INTCON2bits	set	4081
  1277  0000                     _EECON2	set	4007
  1278  0000                     _PORTBbits	set	3969
  1279  0000                     _INTCON3bits	set	4080
  1280  0000                     _TMR0L	set	4054
  1281  0000                     _TMR0H	set	4055
  1282  0000                     _INTCONbits	set	4082
  1283  0000                     _OSCCON	set	4051
  1284  0000                     _OSCTUNEbits	set	3995
  1285  0000                     _PORTAbits	set	3968
  1286  0000                     _PIR3bits	set	4004
  1287  0000                     _DMABCL	set	3943
  1288  0000                     _DMABCH	set	3942
  1289  0000                     _RXADDRL	set	3945
  1290  0000                     _RXADDRH	set	3944
  1291  0000                     _DMACON1bits	set	3976
  1292  0000                     _TXADDRL	set	3947
  1293  0000                     _TXADDRH	set	3946
  1294  0000                     _PORTDbits	set	3971
  1295  0000                     _USTAT	set	3940
  1296  0000                     _PIR2bits	set	4001
  1297  0000                     _UCON	set	3941
  1298  0000                     _UIRbits	set	3938
  1299  0000                     _UCONbits	set	3941
  1300  0000                     _UIR	set	3938
  1301  0000                     _UEIR	set	3939
  1302  0000                     _PIE2bits	set	4000
  1303  008FCF                     STR_12:
  1304  008FCF  48                 	db	72	;'H'
  1305  008FD0  65                 	db	101	;'e'
  1306  008FD1  6C                 	db	108	;'l'
  1307  008FD2  6C                 	db	108	;'l'
  1308  008FD3  6F                 	db	111	;'o'
  1309  008FD4  20                 	db	32
  1310  008FD5  57                 	db	87	;'W'
  1311  008FD6  6F                 	db	111	;'o'
  1312  008FD7  72                 	db	114	;'r'
  1313  008FD8  6C                 	db	108	;'l'
  1314  008FD9  64                 	db	100	;'d'
  1315  008FDA  21                 	db	33
  1316  008FDB  00                 	db	0
  1317  008FDC                     STR_9:
  1318  008FDC  53                 	db	83	;'S'
  1319  008FDD  6F                 	db	111	;'o'
  1320  008FDE  6C                 	db	108	;'l'
  1321  008FDF  61                 	db	97	;'a'
  1322  008FE0  72                 	db	114	;'r'
  1323  008FE1  43                 	db	67	;'C'
  1324  008FE2  68                 	db	104	;'h'
  1325  008FE3  61                 	db	97	;'a'
  1326  008FE4  72                 	db	114	;'r'
  1327  008FE5  67                 	db	103	;'g'
  1328  008FE6  72                 	db	114	;'r'
  1329  008FE7  00                 	db	0
  1330  008FE8                     STR_10:
  1331  008FE8  46                 	db	70	;'F'
  1332  008FE9  49                 	db	73	;'I'
  1333  008FEA  4C                 	db	76	;'L'
  1334  008FEB  45                 	db	69	;'E'
  1335  008FEC  20                 	db	32
  1336  008FED  20                 	db	32
  1337  008FEE  20                 	db	32
  1338  008FEF  20                 	db	32
  1339  008FF0  00                 	db	0
  1340  008FF1                     STR_1:
  1341  008FF1  4D                 	db	77	;'M'
  1342  008FF2  53                 	db	83	;'S'
  1343  008FF3  44                 	db	68	;'D'
  1344  008FF4  4F                 	db	79	;'O'
  1345  008FF5  53                 	db	83	;'S'
  1346  008FF6  35                 	db	53	;'5'
  1347  008FF7  2E                 	db	46
  1348  008FF8  30                 	db	48	;'0'
  1349  008FF9  00                 	db	0
  1350  008FFA                     STR_11:
  1351  008FFA  54                 	db	84	;'T'
  1352  008FFB  58                 	db	88	;'X'
  1353  008FFC  54                 	db	84	;'T'
  1354  008FFD  00                 	db	0
  1355  0000                     
  1356                           ; #config settings
  1357  008FFE  00                 	db	0	; dummy byte at the end
  1358  0000                     
  1359                           	psect	cinit
  1360  0055AC                     __pcinit:
  1361                           	opt stack 0
  1362  0055AC                     start_initialization:
  1363                           	opt stack 0
  1364  0055AC                     __initialization:
  1365                           	opt stack 0
  1366                           
  1367                           ; Initialize objects allocated to BANK2 (8 bytes)
  1368                           ; load TBLPTR registers with __pidataBANK2
  1369  0055AC  0E0E               	movlw	low __pidataBANK2
  1370  0055AE  6EF6               	movwf	tblptrl,c
  1371  0055B0  0E7E               	movlw	high __pidataBANK2
  1372  0055B2  6EF7               	movwf	tblptrh,c
  1373  0055B4  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1374  0055B6  6EF8               	movwf	tblptru,c
  1375  0055B8  EE02  F0F2         	lfsr	0,__pdataBANK2
  1376  0055BC  EE10 F008          	lfsr	1,8
  1377  0055C0                     copy_data0:
  1378  0055C0  0009               	tblrd		*+
  1379  0055C2  CFF5 FFEE          	movff	tablat,postinc0
  1380  0055C6  50E5               	movf	postdec1,w,c
  1381  0055C8  50E1               	movf	fsr1l,w,c
  1382  0055CA  E1FA               	bnz	copy_data0
  1383                           
  1384                           ; Initialize objects allocated to BANK1 (29 bytes)
  1385                           ; load TBLPTR registers with __pidataBANK1
  1386  0055CC  0E1E               	movlw	low __pidataBANK1
  1387  0055CE  6EF6               	movwf	tblptrl,c
  1388  0055D0  0E7C               	movlw	high __pidataBANK1
  1389  0055D2  6EF7               	movwf	tblptrh,c
  1390  0055D4  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1391  0055D6  6EF8               	movwf	tblptru,c
  1392  0055D8  EE01  F0E2         	lfsr	0,__pdataBANK1
  1393  0055DC  EE10 F01D          	lfsr	1,29
  1394  0055E0                     copy_data1:
  1395  0055E0  0009               	tblrd		*+
  1396  0055E2  CFF5 FFEE          	movff	tablat,postinc0
  1397  0055E6  50E5               	movf	postdec1,w,c
  1398  0055E8  50E1               	movf	fsr1l,w,c
  1399  0055EA  E1FA               	bnz	copy_data1
  1400                           
  1401                           ; Initialize objects allocated to BANK0 (1 bytes)
  1402                           ; load TBLPTR registers with __pidataBANK0
  1403  0055EC  0E5C               	movlw	low __pidataBANK0
  1404  0055EE  6EF6               	movwf	tblptrl,c
  1405  0055F0  0E7E               	movlw	high __pidataBANK0
  1406  0055F2  6EF7               	movwf	tblptrh,c
  1407  0055F4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1408  0055F6  6EF8               	movwf	tblptru,c
  1409  0055F8  0009               	tblrd		*+	;fetch initializer
  1410  0055FA  CFF5 F0FE          	movff	tablat,__pdataBANK0
  1411                           
  1412                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1413  0055FE  EE03  F040         	lfsr	0,__pbssBIGRAMll
  1414  005602  EE12 F000          	lfsr	1,512
  1415  005606                     clear_0:
  1416  005606  6AEE               	clrf	postinc0,c
  1417  005608  50E5               	movf	postdec1,w,c
  1418  00560A  50E1               	movf	fsr1l,w,c
  1419  00560C  E1FC               	bnz	clear_0
  1420  00560E  50E2               	movf	fsr1h,w,c
  1421  005610  E1FA               	bnz	clear_0
  1422                           
  1423                           ; Clear objects allocated to BIGRAMlh (1024 bytes)
  1424  005612  EE08  F000         	lfsr	0,__pbssBIGRAMlh
  1425  005616  EE14 F000          	lfsr	1,1024
  1426  00561A                     clear_1:
  1427  00561A  6AEE               	clrf	postinc0,c
  1428  00561C  50E5               	movf	postdec1,w,c
  1429  00561E  50E1               	movf	fsr1l,w,c
  1430  005620  E1FC               	bnz	clear_1
  1431  005622  50E2               	movf	fsr1h,w,c
  1432  005624  E1FA               	bnz	clear_1
  1433                           
  1434                           ; Clear objects allocated to BANK3 (64 bytes)
  1435  005626  EE03  F000         	lfsr	0,__pbssBANK3
  1436  00562A  0E40               	movlw	64
  1437  00562C                     clear_2:
  1438  00562C  6AEE               	clrf	postinc0,c
  1439  00562E  06E8               	decf	wreg,f,c
  1440  005630  E1FD               	bnz	clear_2
  1441                           
  1442                           ; Clear objects allocated to BANK2 (242 bytes)
  1443  005632  EE02  F000         	lfsr	0,__pbssBANK2
  1444  005636  0EF2               	movlw	242
  1445  005638                     clear_3:
  1446  005638  6AEE               	clrf	postinc0,c
  1447  00563A  06E8               	decf	wreg,f,c
  1448  00563C  E1FD               	bnz	clear_3
  1449                           
  1450                           ; Clear objects allocated to BANK1 (226 bytes)
  1451  00563E  EE01  F000         	lfsr	0,__pbssBANK1
  1452  005642  0EE2               	movlw	226
  1453  005644                     clear_4:
  1454  005644  6AEE               	clrf	postinc0,c
  1455  005646  06E8               	decf	wreg,f,c
  1456  005648  E1FD               	bnz	clear_4
  1457                           
  1458                           ; Clear objects allocated to BANK0 (85 bytes)
  1459  00564A  EE00  F060         	lfsr	0,__pbssBANK0
  1460  00564E  0E55               	movlw	85
  1461  005650                     clear_5:
  1462  005650  6AEE               	clrf	postinc0,c
  1463  005652  06E8               	decf	wreg,f,c
  1464  005654  E1FD               	bnz	clear_5
  1465  005656                     end_of_initialization:
  1466                           	opt stack 0
  1467  005656                     __end_of__initialization:
  1468                           	opt stack 0
  1469  005656  0100               	movlb	0
  1470  005658  EF47  F01B         	goto	_main	;jump to C main() function
  1471                           tblptru	equ	0xFF8
  1472                           tblptrh	equ	0xFF7
  1473                           tblptrl	equ	0xFF6
  1474                           tablat	equ	0xFF5
  1475                           postinc0	equ	0xFEE
  1476                           wreg	equ	0xFE8
  1477                           postdec1	equ	0xFE5
  1478                           fsr1h	equ	0xFE2
  1479                           fsr1l	equ	0xFE1
  1480                           
  1481                           	psect	bssBANK0
  1482  000060                     __pbssBANK0:
  1483                           	opt stack 0
  1484  000060                     _os:
  1485                           	opt stack 0
  1486  000060                     	ds	6
  1487  000066                     _inPipes:
  1488                           	opt stack 0
  1489  000066                     	ds	6
  1490  00006C                     _pBDTEntryIn:
  1491                           	opt stack 0
  1492  00006C                     	ds	6
  1493  000072                     _pBDTEntryOut:
  1494                           	opt stack 0
  1495  000072                     	ds	6
  1496  000078                     _hex_file_size:
  1497                           	opt stack 0
  1498  000078                     	ds	4
  1499  00007C                     _hex_file_offset:
  1500                           	opt stack 0
  1501  00007C                     	ds	4
  1502  000080                     _LBA:
  1503                           	opt stack 0
  1504  000080                     	ds	4
  1505  000084                     _USBOutHandle:
  1506                           	opt stack 0
  1507  000084                     	ds	2
  1508  000086                     _TransferLength:
  1509                           	opt stack 0
  1510  000086                     	ds	2
  1511  000088                     _USBMSDInHandle:
  1512                           	opt stack 0
  1513  000088                     	ds	2
  1514  00008A                     _USBMSDOutHandle:
  1515                           	opt stack 0
  1516  00008A                     	ds	2
  1517  00008C                     _ptrNextData:
  1518                           	opt stack 0
  1519  00008C                     	ds	2
  1520  00008E                     _pDst:
  1521                           	opt stack 0
  1522  00008E                     	ds	2
  1523  000090                     _pBDTEntryEP0OutNext:
  1524                           	opt stack 0
  1525  000090                     	ds	2
  1526  000092                     _pBDTEntryEP0OutCurrent:
  1527                           	opt stack 0
  1528  000092                     	ds	2
  1529  000094                     _active_configuration:
  1530                           	opt stack 0
  1531  000094                     	ds	1
  1532  000095                     _start_from_byte_next:
  1533                           	opt stack 0
  1534  000095                     	ds	1
  1535  000096                     _last_error:
  1536                           	opt stack 0
  1537  000096                     	ds	1
  1538  000097                     _power_state:
  1539                           	opt stack 0
  1540  000097                     	ds	1
  1541  000098                     _userInterfaceStatus:
  1542                           	opt stack 0
  1543  000098                     	ds	1
  1544  000099                     _i2c_frequency:
  1545                           	opt stack 0
  1546  000099                     	ds	1
  1547  00009A                     _MSDCBWValid:
  1548                           	opt stack 0
  1549  00009A                     	ds	1
  1550  00009B                     _MSDHostNoData:
  1551                           	opt stack 0
  1552  00009B                     	ds	1
  1553  00009C                     _SoftDetach:
  1554                           	opt stack 0
  1555  00009C                     	ds	1
  1556  00009D                     _gblCBWLength:
  1557                           	opt stack 0
  1558  00009D                     	ds	1
  1559  00009E                     _MSDRetryAttempt:
  1560                           	opt stack 0
  1561  00009E                     	ds	1
  1562  00009F                     _MSDWriteState:
  1563                           	opt stack 0
  1564  00009F                     	ds	1
  1565  0000A0                     _MSDReadState:
  1566                           	opt stack 0
  1567  0000A0                     	ds	1
  1568  0000A1                     _MSDCommandState:
  1569                           	opt stack 0
  1570  0000A1                     	ds	1
  1571  0000A2                     _MSD_State:
  1572                           	opt stack 0
  1573  0000A2                     	ds	1
  1574  0000A3                     _USBTicksSinceSuspendEnd:
  1575                           	opt stack 0
  1576  0000A3                     	ds	1
  1577  0000A4                     _USBDeferOUTDataStagePackets:
  1578                           	opt stack 0
  1579  0000A4                     	ds	1
  1580  0000A5                     _USBDeferINDataStagePackets:
  1581                           	opt stack 0
  1582  0000A5                     	ds	1
  1583  0000A6                     _USBStatusStageEnabledFlag2:
  1584                           	opt stack 0
  1585  0000A6                     	ds	1
  1586  0000A7                     _USBStatusStageEnabledFlag1:
  1587                           	opt stack 0
  1588  0000A7                     	ds	1
  1589  0000A8                     _USBDeferStatusStagePacket:
  1590                           	opt stack 0
  1591  0000A8                     	ds	1
  1592  0000A9                     _USBStatusStageTimeoutCounter:
  1593                           	opt stack 0
  1594  0000A9                     	ds	1
  1595  0000AA                     _BothEP0OutUOWNsSet:
  1596                           	opt stack 0
  1597  0000AA                     	ds	1
  1598  0000AB                     _endpoint_number:
  1599                           	opt stack 0
  1600  0000AB                     	ds	1
  1601  0000AC                     _USBBusIsSuspended:
  1602                           	opt stack 0
  1603  0000AC                     	ds	1
  1604  0000AD                     _RemoteWakeup:
  1605                           	opt stack 0
  1606  0000AD                     	ds	1
  1607  0000AE                     _controlTransferState:
  1608                           	opt stack 0
  1609  0000AE                     	ds	1
  1610  0000AF                     _shortPacketStatus:
  1611                           	opt stack 0
  1612  0000AF                     	ds	1
  1613  0000B0                     _USBDeviceState:
  1614                           	opt stack 0
  1615  0000B0                     	ds	1
  1616  0000B1                     _active_protocol:
  1617                           	opt stack 0
  1618  0000B1                     	ds	1
  1619  0000B2                     _idle_rate:
  1620                           	opt stack 0
  1621  0000B2                     	ds	1
  1622  0000B3                     _USTATcopy:
  1623                           	opt stack 0
  1624  0000B3                     	ds	1
  1625  0000B4                     _USBActiveConfiguration:
  1626                           	opt stack 0
  1627  0000B4                     	ds	1
  1628                           tblptru	equ	0xFF8
  1629                           tblptrh	equ	0xFF7
  1630                           tblptrl	equ	0xFF6
  1631                           tablat	equ	0xFF5
  1632                           postinc0	equ	0xFEE
  1633                           wreg	equ	0xFE8
  1634                           postdec1	equ	0xFE5
  1635                           fsr1h	equ	0xFE2
  1636                           fsr1l	equ	0xFE1
  1637                           
  1638                           	psect	dataBANK0
  1639  0000FE                     __pdataBANK0:
  1640                           	opt stack 0
  1641  0000FE                     _file_number:
  1642                           	opt stack 0
  1643  0000FE                     	ds	1
  1644                           tblptru	equ	0xFF8
  1645                           tblptrh	equ	0xFF7
  1646                           tblptrl	equ	0xFF6
  1647                           tablat	equ	0xFF5
  1648                           postinc0	equ	0xFEE
  1649                           wreg	equ	0xFE8
  1650                           postdec1	equ	0xFE5
  1651                           fsr1h	equ	0xFE2
  1652                           fsr1l	equ	0xFE1
  1653                           
  1654                           	psect	bssBANK1
  1655  000100                     __pbssBANK1:
  1656                           	opt stack 0
  1657  000100                     _gblCBW:
  1658                           	opt stack 0
  1659  000100                     	ds	31
  1660  00011F                     _gblSenseData:
  1661                           	opt stack 0
  1662  00011F                     	ds	18
  1663  000131                     _outPipes:
  1664                           	opt stack 0
  1665  000131                     	ds	8
  1666  000139                     _communicationSettings:
  1667                           	opt stack 0
  1668  000139                     	ds	7
  1669  000140                     _extended_linear_address:
  1670                           	opt stack 0
  1671  000140                     	ds	4
  1672  000144                     _file_maximum_address:
  1673                           	opt stack 0
  1674  000144                     	ds	4
  1675  000148                     _file_minimum_address:
  1676                           	opt stack 0
  1677  000148                     	ds	4
  1678  00014C                     _gblBLKLen:
  1679                           	opt stack 0
  1680  00014C                     	ds	4
  1681  000150                     _gblNumBLKS:
  1682                           	opt stack 0
  1683  000150                     	ds	4
  1684  000154                     _USB1msTickCount:
  1685                           	opt stack 0
  1686  000154                     	ds	4
  1687  000158                     _config_external:
  1688                           	opt stack 0
  1689  000158                     	ds	3
  1690  00015B                     _config_internal:
  1691                           	opt stack 0
  1692  00015B                     	ds	3
  1693  00015E                     _ep_data_out:
  1694                           	opt stack 0
  1695  00015E                     	ds	3
  1696  000161                     _ep_data_in:
  1697                           	opt stack 0
  1698  000161                     	ds	3
  1699  000164                     _FileAddress:
  1700                           	opt stack 0
  1701  000164                     	ds	2
  1702  000166                     _flash_pages_written:
  1703                           	opt stack 0
  1704  000166                     	ds	2
  1705  000168                     _total_hex_file_entries:
  1706                           	opt stack 0
  1707  000168                     	ds	2
  1708  00016A                     _hex_file_entries:
  1709                           	opt stack 0
  1710  00016A                     	ds	2
  1711  00016C                     _system_ui_inactive_count:
  1712                           	opt stack 0
  1713  00016C                     	ds	2
  1714  00016E                     _USBInHandle:
  1715                           	opt stack 0
  1716  00016E                     	ds	2
  1717  000170                     _gblMediaPresent:
  1718                           	opt stack 0
  1719  000170                     	ds	2
  1720  000172                     _MSBBufferIndex:
  1721                           	opt stack 0
  1722  000172                     	ds	2
  1723  000174                     _display_content:
  1724                           	opt stack 0
  1725  000174                     	ds	80
  1726  0001C4                     _hex_file_entry:
  1727                           	opt stack 0
  1728  0001C4                     	ds	23
  1729  0001DB                     _mediaInformation:
  1730                           	opt stack 0
  1731  0001DB                     	ds	5
  1732  0001E0                     _USBAlternateInterface:
  1733                           	opt stack 0
  1734  0001E0                     	ds	2
  1735                           tblptru	equ	0xFF8
  1736                           tblptrh	equ	0xFF7
  1737                           tblptrl	equ	0xFF6
  1738                           tablat	equ	0xFF5
  1739                           postinc0	equ	0xFEE
  1740                           wreg	equ	0xFE8
  1741                           postdec1	equ	0xFE5
  1742                           fsr1h	equ	0xFE2
  1743                           fsr1l	equ	0xFE1
  1744                           
  1745                           	psect	dataBANK1
  1746  0001E2                     __pdataBANK1:
  1747                           	opt stack 0
  1748  0001E2                     _LUN:
  1749                           	opt stack 0
  1750  0001E2                     	ds	20
  1751  0001F6                     i2c_display_send_init_sequence@F6791:
  1752                           	opt stack 0
  1753  0001F6                     	ds	9
  1754                           tblptru	equ	0xFF8
  1755                           tblptrh	equ	0xFF7
  1756                           tblptrl	equ	0xFF6
  1757                           tablat	equ	0xFF5
  1758                           postinc0	equ	0xFEE
  1759                           wreg	equ	0xFE8
  1760                           postdec1	equ	0xFE5
  1761                           fsr1h	equ	0xFE2
  1762                           fsr1l	equ	0xFE1
  1763                           
  1764                           	psect	bssBANK2
  1765  000200                     __pbssBANK2:
  1766                           	opt stack 0
  1767  000200                     __spi_external_rx_buffer:
  1768                           	opt stack 0
  1769  000200                     	ds	64
  1770  000240                     __spi_external_tx_buffer:
  1771                           	opt stack 0
  1772  000240                     	ds	64
  1773  000280                     _ReceivedDataBuffer:
  1774                           	opt stack 0
  1775  000280                     	ds	64
  1776  0002C0                     _file_buffer:
  1777                           	opt stack 0
  1778  0002C0                     	ds	50
  1779                           tblptru	equ	0xFF8
  1780                           tblptrh	equ	0xFF7
  1781                           tblptrl	equ	0xFF6
  1782                           tablat	equ	0xFF5
  1783                           postinc0	equ	0xFEE
  1784                           wreg	equ	0xFE8
  1785                           postdec1	equ	0xFE5
  1786                           fsr1h	equ	0xFE2
  1787                           fsr1l	equ	0xFE1
  1788                           
  1789                           	psect	dataBANK2
  1790  0002F2                     __pdataBANK2:
  1791                           	opt stack 0
  1792  0002F2                     	ds	8
  1793                           tblptru	equ	0xFF8
  1794                           tblptrh	equ	0xFF7
  1795                           tblptrl	equ	0xFF6
  1796                           tablat	equ	0xFF5
  1797                           postinc0	equ	0xFEE
  1798                           wreg	equ	0xFE8
  1799                           postdec1	equ	0xFE5
  1800                           fsr1h	equ	0xFE2
  1801                           fsr1l	equ	0xFE1
  1802                           
  1803                           	psect	bssBANK3
  1804  000300                     __pbssBANK3:
  1805                           	opt stack 0
  1806  000300                     _ToSendDataBuffer:
  1807                           	opt stack 0
  1808  000300                     	ds	64
  1809                           tblptru	equ	0xFF8
  1810                           tblptrh	equ	0xFF7
  1811                           tblptrl	equ	0xFF6
  1812                           tablat	equ	0xFF5
  1813                           postinc0	equ	0xFEE
  1814                           wreg	equ	0xFE8
  1815                           postdec1	equ	0xFE5
  1816                           fsr1h	equ	0xFE2
  1817                           fsr1l	equ	0xFE1
  1818                           
  1819                           	psect	bssBIGRAMlh
  1820  000800                     __pbssBIGRAMlh:
  1821                           	opt stack 0
  1822  000800                     _pageBuffer:
  1823                           	opt stack 0
  1824  000800                     	ds	1024
  1825                           tblptru	equ	0xFF8
  1826                           tblptrh	equ	0xFF7
  1827                           tblptrl	equ	0xFF6
  1828                           tablat	equ	0xFF5
  1829                           postinc0	equ	0xFEE
  1830                           wreg	equ	0xFE8
  1831                           postdec1	equ	0xFE5
  1832                           fsr1h	equ	0xFE2
  1833                           fsr1l	equ	0xFE1
  1834                           
  1835                           	psect	bssBIGRAMll
  1836  000340                     __pbssBIGRAMll:
  1837                           	opt stack 0
  1838  000340                     _buffer:
  1839                           	opt stack 0
  1840  000340                     	ds	512
  1841                           tblptru	equ	0xFF8
  1842                           tblptrh	equ	0xFF7
  1843                           tblptrl	equ	0xFF6
  1844                           tablat	equ	0xFF5
  1845                           postinc0	equ	0xFEE
  1846                           wreg	equ	0xFE8
  1847                           postdec1	equ	0xFE5
  1848                           fsr1h	equ	0xFE2
  1849                           fsr1l	equ	0xFE1
  1850                           
  1851                           	psect	cstackBANK0
  1852  0000B5                     __pcstackBANK0:
  1853                           	opt stack 0
  1854  0000B5                     fat_rename_file@file_number:
  1855                           	opt stack 0
  1856  0000B5                     fat_create_file@next_cluster:
  1857                           	opt stack 0
  1858  0000B5                     fat_append_to_file@sector:
  1859                           	opt stack 0
  1860  0000B5                     fat_read_from_file@sector:
  1861                           	opt stack 0
  1862                           
  1863                           ; 2 bytes @ 0x0
  1864  0000B5                     	ds	1
  1865  0000B6                     fat_rename_file@root:
  1866                           	opt stack 0
  1867                           
  1868                           ; 32 bytes @ 0x1
  1869  0000B6                     	ds	1
  1870  0000B7                     fat_read_from_file@file_number:
  1871                           	opt stack 0
  1872  0000B7                     fat_create_file@cluster_count:
  1873                           	opt stack 0
  1874  0000B7                     fat_append_to_file@file_size:
  1875                           	opt stack 0
  1876                           
  1877                           ; 4 bytes @ 0x2
  1878  0000B7                     	ds	1
  1879  0000B8                     fat_read_from_file@root:
  1880                           	opt stack 0
  1881                           
  1882                           ; 32 bytes @ 0x3
  1883  0000B8                     	ds	1
  1884  0000B9                     fat_create_file@root_slot:
  1885                           	opt stack 0
  1886                           
  1887                           ; 1 bytes @ 0x4
  1888  0000B9                     	ds	1
  1889  0000BA                     fat_create_file@number_of_clusters:
  1890                           	opt stack 0
  1891                           
  1892                           ; 2 bytes @ 0x5
  1893  0000BA                     	ds	1
  1894  0000BB                     fat_append_to_file@new_cluster:
  1895                           	opt stack 0
  1896                           
  1897                           ; 2 bytes @ 0x6
  1898  0000BB                     	ds	1
  1899  0000BC                     fat_create_file@cluster:
  1900                           	opt stack 0
  1901                           
  1902                           ; 2 bytes @ 0x7
  1903  0000BC                     	ds	1
  1904  0000BD                     fat_append_to_file@fat_cluster:
  1905                           	opt stack 0
  1906                           
  1907                           ; 2 bytes @ 0x8
  1908  0000BD                     	ds	1
  1909  0000BE                     fat_create_file@root_entry:
  1910                           	opt stack 0
  1911                           
  1912                           ; 32 bytes @ 0x9
  1913  0000BE                     	ds	1
  1914  0000BF                     fat_append_to_file@offset:
  1915                           	opt stack 0
  1916                           
  1917                           ; 2 bytes @ 0xA
  1918  0000BF                     	ds	2
  1919  0000C1                     fat_append_to_file@file_number:
  1920                           	opt stack 0
  1921                           
  1922                           ; 1 bytes @ 0xC
  1923  0000C1                     	ds	1
  1924  0000C2                     fat_append_to_file@length:
  1925                           	opt stack 0
  1926                           
  1927                           ; 2 bytes @ 0xD
  1928  0000C2                     	ds	2
  1929  0000C4                     fat_append_to_file@position:
  1930                           	opt stack 0
  1931                           
  1932                           ; 4 bytes @ 0xF
  1933  0000C4                     	ds	4
  1934  0000C8                     fat_append_to_file@root:
  1935                           	opt stack 0
  1936                           
  1937                           ; 32 bytes @ 0x13
  1938  0000C8                     	ds	14
  1939  0000D6                     fat_rename_file@cntr:
  1940                           	opt stack 0
  1941                           
  1942                           ; 1 bytes @ 0x21
  1943  0000D6                     	ds	2
  1944  0000D8                     fat_read_from_file@cluster:
  1945                           	opt stack 0
  1946                           
  1947                           ; 2 bytes @ 0x23
  1948  0000D8                     	ds	2
  1949  0000DA                     fat_read_from_file@offset:
  1950                           	opt stack 0
  1951                           
  1952                           ; 2 bytes @ 0x25
  1953  0000DA                     	ds	2
  1954  0000DC                     fat_read_from_file@read_length:
  1955                           	opt stack 0
  1956                           
  1957                           ; 2 bytes @ 0x27
  1958  0000DC                     	ds	2
  1959  0000DE                     fat_read_from_file@position:
  1960                           	opt stack 0
  1961                           
  1962                           ; 4 bytes @ 0x29
  1963  0000DE                     	ds	4
  1964  0000E2                     __bootloader_verify_file@rec_counter:
  1965                           	opt stack 0
  1966  0000E2                     __bootloader_program@buffer:
  1967                           	opt stack 0
  1968  0000E2                     __fill_buffer_read_file@file_size:
  1969                           	opt stack 0
  1970                           
  1971                           ; 4 bytes @ 0x2D
  1972  0000E2                     	ds	1
  1973  0000E3                     __bootloader_verify_file@return_value:
  1974                           	opt stack 0
  1975                           
  1976                           ; 4 bytes @ 0x2E
  1977  0000E3                     	ds	1
  1978  0000E4                     __bootloader_program@entry_page:
  1979                           	opt stack 0
  1980                           
  1981                           ; 2 bytes @ 0x2F
  1982  0000E4                     	ds	2
  1983  0000E6                     __bootloader_program@address_within_page:
  1984                           	opt stack 0
  1985  0000E6                     __fill_buffer_read_file@data_length:
  1986                           	opt stack 0
  1987                           
  1988                           ; 4 bytes @ 0x31
  1989  0000E6                     	ds	1
  1990  0000E7                     __bootloader_verify_file@address32:
  1991                           	opt stack 0
  1992                           
  1993                           ; 4 bytes @ 0x32
  1994  0000E7                     	ds	1
  1995  0000E8                     api_parse@inBuffer:
  1996                           	opt stack 0
  1997  0000E8                     __bootloader_program@return_value:
  1998                           	opt stack 0
  1999                           
  2000                           ; 4 bytes @ 0x33
  2001  0000E8                     	ds	2
  2002  0000EA                     api_parse@receivedDataLength:
  2003                           	opt stack 0
  2004  0000EA                     __fill_buffer_read_file@start:
  2005                           	opt stack 0
  2006                           
  2007                           ; 4 bytes @ 0x35
  2008  0000EA                     	ds	2
  2009  0000EC                     __bootloader_program@address32:
  2010                           	opt stack 0
  2011                           
  2012                           ; 4 bytes @ 0x37
  2013  0000EC                     	ds	2
  2014  0000EE                     api_prepare@inBuffer:
  2015                           	opt stack 0
  2016                           
  2017                           ; 2 bytes @ 0x39
  2018  0000EE                     	ds	2
  2019  0000F0                     __bootloader_program@start_from_byte:
  2020                           	opt stack 0
  2021  0000F0                     api_prepare@outBuffer:
  2022                           	opt stack 0
  2023                           
  2024                           ; 2 bytes @ 0x3B
  2025  0000F0                     	ds	1
  2026  0000F1                     __bootloader_program@cntr:
  2027                           	opt stack 0
  2028                           
  2029                           ; 2 bytes @ 0x3C
  2030  0000F1                     	ds	1
  2031  0000F2                     ??_APP_DeviceCustomHIDTasks:
  2032                           
  2033                           ; 1 bytes @ 0x3D
  2034  0000F2                     	ds	1
  2035  0000F3                     __bootloader_program@page_to_write:
  2036                           	opt stack 0
  2037                           
  2038                           ; 2 bytes @ 0x3E
  2039  0000F3                     	ds	3
  2040  0000F6                     main@tx_start_addr:
  2041                           	opt stack 0
  2042                           
  2043                           ; 2 bytes @ 0x41
  2044  0000F6                     	ds	2
  2045  0000F8                     main@bytes_transmitted:
  2046                           	opt stack 0
  2047                           
  2048                           ; 2 bytes @ 0x43
  2049  0000F8                     	ds	2
  2050  0000FA                     main@rx_buffer:
  2051                           	opt stack 0
  2052                           
  2053                           ; 2 bytes @ 0x45
  2054  0000FA                     	ds	2
  2055  0000FC                     main@tx_buffer:
  2056                           	opt stack 0
  2057                           
  2058                           ; 2 bytes @ 0x47
  2059  0000FC                     	ds	2
  2060                           tblptru	equ	0xFF8
  2061                           tblptrh	equ	0xFF7
  2062                           tblptrl	equ	0xFF6
  2063                           tablat	equ	0xFF5
  2064                           postinc0	equ	0xFEE
  2065                           wreg	equ	0xFE8
  2066                           postdec1	equ	0xFE5
  2067                           fsr1h	equ	0xFE2
  2068                           fsr1l	equ	0xFE1
  2069                           
  2070                           	psect	cstackCOMRAM
  2071  000001                     __pcstackCOMRAM:
  2072                           	opt stack 0
  2073  000001                     ??_USBStdGetDscHandler:
  2074  000001                     ??_USBStdGetStatusHandler:
  2075  000001                     ??_system_delay_ms:
  2076  000001                     ??__i2c_wait_idle:
  2077  000001                     ??__display_clear:
  2078  000001                     ?_USBTransferOnePacket:
  2079                           	opt stack 0
  2080  000001                     ?_spi_get_external_rx_buffer:
  2081                           	opt stack 0
  2082  000001                     ?_spi_get_external_tx_buffer:
  2083                           	opt stack 0
  2084  000001                     ?_ExternalFlash_MediaInitialize:
  2085                           	opt stack 0
  2086  000001                     ?_ExternalFlash_SectorSizeRead:
  2087                           	opt stack 0
  2088  000001                     ?_bootloader_get_entries:
  2089                           	opt stack 0
  2090  000001                     ?_bootloader_get_total_entries:
  2091                           	opt stack 0
  2092  000001                     ?_bootloader_get_rec_address:
  2093                           	opt stack 0
  2094  000001                     ?_bootloader_get_flashPagesWritten:
  2095                           	opt stack 0
  2096  000001                     ?_strncmp:
  2097                           	opt stack 0
  2098  000001                     ?_internalFlash_pageFromAddress:
  2099                           	opt stack 0
  2100  000001                     ?_internalFlash_getBuffer:
  2101                           	opt stack 0
  2102  000001                     ?__get_time:
  2103                           	opt stack 0
  2104  000001                     ?__get_date:
  2105                           	opt stack 0
  2106  000001                     ?__sector_from_cluster:
  2107                           	opt stack 0
  2108  000001                     ?_bootloader_get_rec_dataLength:
  2109                           	opt stack 0
  2110  000001                     ?___lwdiv:
  2111                           	opt stack 0
  2112  000001                     ?___lwmod:
  2113                           	opt stack 0
  2114  000001                     ?_ExternalFlash_CapacityRead:
  2115                           	opt stack 0
  2116  000001                     ?_bootloader_get_file_size:
  2117                           	opt stack 0
  2118  000001                     ?_internalFlash_addressFromPage:
  2119                           	opt stack 0
  2120  000001                     ?___lldiv:
  2121                           	opt stack 0
  2122  000001                     ?___llmod:
  2123                           	opt stack 0
  2124  000001                     USBTransferOnePacket@dir:
  2125                           	opt stack 0
  2126  000001                     USBStallEndpoint@dir:
  2127                           	opt stack 0
  2128  000001                     USBConfigureEndpoint@direction:
  2129                           	opt stack 0
  2130  000001                     USBCtrlTrfTxService@byteToSend:
  2131                           	opt stack 0
  2132  000001                     USBCtrlTrfRxService@i:
  2133                           	opt stack 0
  2134  000001                     __i2c_send@dat:
  2135                           	opt stack 0
  2136  000001                     i2c_set_frequency@frequency:
  2137                           	opt stack 0
  2138  000001                     display_get_character@position:
  2139                           	opt stack 0
  2140  000001                     __display_start@cntr:
  2141                           	opt stack 0
  2142  000001                     hexCharToUint8@c:
  2143                           	opt stack 0
  2144  000001                     bootloader_get_rec_data@index:
  2145                           	opt stack 0
  2146  000001                     __internalFlash_unlockAndActivate@UnlockKey:
  2147                           	opt stack 0
  2148  000001                     spi_set_configuration@configuration:
  2149                           	opt stack 0
  2150  000001                     MSDComputeDeviceInAndResidue@DiExpected:
  2151                           	opt stack 0
  2152  000001                     SYSTEM_Initialize@pll_startup_counter:
  2153                           	opt stack 0
  2154  000001                     ExternalFlash_MediaInitialize@config:
  2155                           	opt stack 0
  2156  000001                     ExternalFlash_SectorSizeRead@config:
  2157                           	opt stack 0
  2158  000001                     ExternalFlash_CapacityRead@config:
  2159                           	opt stack 0
  2160  000001                     ExternalFlash_MediaDetect@config:
  2161                           	opt stack 0
  2162  000001                     ExternalFlash_WriteProtectStateGet@config:
  2163                           	opt stack 0
  2164  000001                     __sector_from_cluster@fat_cluster:
  2165                           	opt stack 0
  2166  000001                     __get_mbr@idx:
  2167                           	opt stack 0
  2168  000001                     __get_fbr@idx:
  2169                           	opt stack 0
  2170  000001                     __get_fat@idx:
  2171                           	opt stack 0
  2172  000001                     __get_root@idx:
  2173                           	opt stack 0
  2174  000001                     __get_data@idx:
  2175                           	opt stack 0
  2176  000001                     internalFlash_addressFromPage@page:
  2177                           	opt stack 0
  2178  000001                     __fill_buffer_get_configuration@outBuffer:
  2179                           	opt stack 0
  2180  000001                     __parse_file_truncate@data:
  2181                           	opt stack 0
  2182  000001                     __parse_file_modify@data:
  2183                           	opt stack 0
  2184  000001                     spi_tx@data:
  2185                           	opt stack 0
  2186  000001                     spi_tx_tx@command:
  2187                           	opt stack 0
  2188  000001                     spi_tx_rx@command:
  2189                           	opt stack 0
  2190  000001                     ___lwdiv@dividend:
  2191                           	opt stack 0
  2192  000001                     ___lwmod@dividend:
  2193                           	opt stack 0
  2194  000001                     memcpy@d1:
  2195                           	opt stack 0
  2196  000001                     memset@p1:
  2197                           	opt stack 0
  2198  000001                     strncmp@s1:
  2199                           	opt stack 0
  2200  000001                     __spi_init@details:
  2201                           	opt stack 0
  2202  000001                     __bootloader_check_address@address:
  2203                           	opt stack 0
  2204  000001                     internalFlash_pageFromAddress@address:
  2205                           	opt stack 0
  2206  000001                     ___lldiv@dividend:
  2207                           	opt stack 0
  2208  000001                     ___llmod@dividend:
  2209                           	opt stack 0
  2210                           
  2211                           ; 4 bytes @ 0x0
  2212  000001                     	ds	1
  2213  000002                     ??_USBConfigureEndpoint:
  2214  000002                     ??_USBStallEndpoint:
  2215  000002                     ??_display_get_character:
  2216  000002                     USBCtrlTrfRxService@byteToRead:
  2217                           	opt stack 0
  2218  000002                     USBCtrlTrfInHandler@lastDTS:
  2219                           	opt stack 0
  2220  000002                     system_delay_ms@ms:
  2221                           	opt stack 0
  2222  000002                     hexCharToUint8@ascii:
  2223                           	opt stack 0
  2224  000002                     __internalFlash_unlockAndActivate@InterruptEnableSave:
  2225                           	opt stack 0
  2226  000002                     USBTransferOnePacket@data:
  2227                           	opt stack 0
  2228  000002                     USBStdGetStatusHandler@p:
  2229                           	opt stack 0
  2230                           
  2231                           ; 2 bytes @ 0x1
  2232  000002                     	ds	1
  2233  000003                     ??_MSDComputeDeviceInAndResidue:
  2234  000003                     ??__get_mbr:
  2235  000003                     ??__get_fbr:
  2236  000003                     ??__get_fat:
  2237  000003                     ??__get_root:
  2238  000003                     ?_hexCharsToUint16:
  2239                           	opt stack 0
  2240  000003                     system_delay_ms@cntr:
  2241                           	opt stack 0
  2242  000003                     __display_clear@row:
  2243                           	opt stack 0
  2244  000003                     hexCharsToUint8@c2:
  2245                           	opt stack 0
  2246  000003                     hexCharsToUint16@c2:
  2247                           	opt stack 0
  2248  000003                     SYSTEM_Initialize@pll_startup_counter_3026:
  2249                           	opt stack 0
  2250  000003                     __get_time@time:
  2251                           	opt stack 0
  2252  000003                     __get_date@date:
  2253                           	opt stack 0
  2254  000003                     internalFlash_erasePage@page:
  2255                           	opt stack 0
  2256  000003                     internalFlash_writePage@page:
  2257                           	opt stack 0
  2258  000003                     spi_tx@length:
  2259                           	opt stack 0
  2260  000003                     spi_tx_tx@command_length:
  2261                           	opt stack 0
  2262  000003                     spi_tx_rx@command_length:
  2263                           	opt stack 0
  2264  000003                     ___lwdiv@divisor:
  2265                           	opt stack 0
  2266  000003                     ___lwmod@divisor:
  2267                           	opt stack 0
  2268  000003                     memset@c:
  2269                           	opt stack 0
  2270  000003                     strncmp@s2:
  2271                           	opt stack 0
  2272  000003                     memcpy@s1:
  2273                           	opt stack 0
  2274                           
  2275                           ; 3 bytes @ 0x2
  2276  000003                     	ds	1
  2277  000004                     ??_hexCharsToUint8:
  2278  000004                     USBTransferOnePacket@len:
  2279                           	opt stack 0
  2280  000004                     display_get_character@line:
  2281                           	opt stack 0
  2282  000004                     __display_clear@col:
  2283                           	opt stack 0
  2284  000004                     hexCharsToUint16@c3:
  2285                           	opt stack 0
  2286  000004                     spi_init@configuration:
  2287                           	opt stack 0
  2288                           
  2289                           ; 1 bytes @ 0x3
  2290  000004                     	ds	1
  2291  000005                     ??_USBTransferOnePacket:
  2292  000005                     ??_spi_tx:
  2293  000005                     ??_internalFlash_pageFromAddress:
  2294  000005                     SYSTEM_Initialize@state:
  2295                           	opt stack 0
  2296  000005                     hexCharsToUint8@c1:
  2297                           	opt stack 0
  2298  000005                     hexCharsToUint16@c4:
  2299                           	opt stack 0
  2300  000005                     __bootloader_check_address@dataLength:
  2301                           	opt stack 0
  2302  000005                     ___lwmod@counter:
  2303                           	opt stack 0
  2304  000005                     __update_modified_time@root:
  2305                           	opt stack 0
  2306  000005                     __fill_buffer_get_display@outBuffer:
  2307                           	opt stack 0
  2308  000005                     __fill_buffer_get_bootloader_details@outBuffer:
  2309                           	opt stack 0
  2310  000005                     spi_tx_tx@data:
  2311                           	opt stack 0
  2312  000005                     spi_tx_rx@data:
  2313                           	opt stack 0
  2314  000005                     ___lwdiv@quotient:
  2315                           	opt stack 0
  2316  000005                     memset@n:
  2317                           	opt stack 0
  2318  000005                     strncmp@len:
  2319                           	opt stack 0
  2320  000005                     internalFlash_erasePage@address:
  2321                           	opt stack 0
  2322  000005                     internalFlash_writePage@address:
  2323                           	opt stack 0
  2324  000005                     internalFlash_addressFromPage@address:
  2325                           	opt stack 0
  2326  000005                     ___lldiv@divisor:
  2327                           	opt stack 0
  2328  000005                     ___llmod@divisor:
  2329                           	opt stack 0
  2330                           
  2331                           ; 4 bytes @ 0x4
  2332  000005                     	ds	1
  2333  000006                     ??_hexCharsToUint16:
  2334  000006                     ??__bootloader_check_address:
  2335  000006                     USBStallEndpoint@ep:
  2336                           	opt stack 0
  2337  000006                     USBConfigureEndpoint@EPNum:
  2338                           	opt stack 0
  2339  000006                     hexCharsToUint8@retVal:
  2340                           	opt stack 0
  2341  000006                     __i2c_write@data:
  2342                           	opt stack 0
  2343  000006                     __i2c_read@data:
  2344                           	opt stack 0
  2345  000006                     i2c_display_write_fixed@data:
  2346                           	opt stack 0
  2347  000006                     memcpy@n:
  2348                           	opt stack 0
  2349                           
  2350                           ; 2 bytes @ 0x5
  2351  000006                     	ds	1
  2352  000007                     ??_strncmp:
  2353  000007                     ??__fill_buffer_get_bootloader_details:
  2354  000007                     __fill_buffer_get_display@secondHalf:
  2355                           	opt stack 0
  2356  000007                     ___lwdiv@counter:
  2357                           	opt stack 0
  2358  000007                     USBStallEndpoint@p:
  2359                           	opt stack 0
  2360  000007                     USBConfigureEndpoint@handle:
  2361                           	opt stack 0
  2362  000007                     spi_tx_tx@data_length:
  2363                           	opt stack 0
  2364  000007                     spi_tx_rx@data_length:
  2365                           	opt stack 0
  2366  000007                     memset@p:
  2367                           	opt stack 0
  2368                           
  2369                           ; 2 bytes @ 0x6
  2370  000007                     	ds	1
  2371  000008                     ??__fill_buffer_get_display:
  2372  000008                     __i2c_write@length:
  2373                           	opt stack 0
  2374  000008                     __i2c_read@length:
  2375                           	opt stack 0
  2376  000008                     i2c_display_write_fixed@length:
  2377                           	opt stack 0
  2378  000008                     utoa@buf:
  2379                           	opt stack 0
  2380  000008                     memcpy@s:
  2381                           	opt stack 0
  2382                           
  2383                           ; 3 bytes @ 0x7
  2384  000008                     	ds	1
  2385  000009                     ??_spi_tx_rx:
  2386  000009                     ??_spi_tx_tx:
  2387  000009                     ??__i2c_read:
  2388  000009                     ?_internalFlash_addressWithinPage:
  2389                           	opt stack 0
  2390  000009                     USBDeviceInit@i:
  2391                           	opt stack 0
  2392  000009                     USBEnableEndpoint@options:
  2393                           	opt stack 0
  2394  000009                     USBTransferOnePacket@ep:
  2395                           	opt stack 0
  2396  000009                     MSDErrorHandler@ErrorCase:
  2397                           	opt stack 0
  2398  000009                     __i2c_write@slave_address:
  2399                           	opt stack 0
  2400  000009                     i2c_display_write_fixed@pos:
  2401                           	opt stack 0
  2402  000009                     __flash_wakeup@command:
  2403                           	opt stack 0
  2404  000009                     hexCharsToUint16@c1:
  2405                           	opt stack 0
  2406  000009                     ___llmod@counter:
  2407                           	opt stack 0
  2408  000009                     internalFlash_writePage@cntr:
  2409                           	opt stack 0
  2410  000009                     internalFlash_addressWithinPage@address:
  2411                           	opt stack 0
  2412  000009                     ___lldiv@quotient:
  2413                           	opt stack 0
  2414                           
  2415                           ; 4 bytes @ 0x8
  2416  000009                     	ds	1
  2417  00000A                     MSDErrorHandler@OldMSD_State:
  2418                           	opt stack 0
  2419  00000A                     __i2c_write@cntr:
  2420                           	opt stack 0
  2421  00000A                     __bootloader_check_address@worst_case:
  2422                           	opt stack 0
  2423  00000A                     __fill_buffer_get_bootloader_details@data_length:
  2424                           	opt stack 0
  2425  00000A                     USBEnableEndpoint@p:
  2426                           	opt stack 0
  2427  00000A                     USBTransferOnePacket@handle:
  2428                           	opt stack 0
  2429  00000A                     hexCharsToUint16@retVal:
  2430                           	opt stack 0
  2431  00000A                     utoa@val:
  2432                           	opt stack 0
  2433                           
  2434                           ; 2 bytes @ 0x9
  2435  00000A                     	ds	1
  2436  00000B                     __ic2_display_set_address@address:
  2437                           	opt stack 0
  2438  00000B                     i2c_digipot_backlight@level:
  2439                           	opt stack 0
  2440  00000B                     __bootloader_check_address@byte_status:
  2441                           	opt stack 0
  2442  00000B                     internalFlash_writePage@block_cntr:
  2443                           	opt stack 0
  2444  00000B                     __fill_buffer_get_bootloader_details@cntr:
  2445                           	opt stack 0
  2446  00000B                     i2c_digipot_reset_on@data_array:
  2447                           	opt stack 0
  2448  00000B                     i2c_digipot_reset_off@data_array:
  2449                           	opt stack 0
  2450  00000B                     i2c_eeprom_writeByte@address:
  2451                           	opt stack 0
  2452  00000B                     memcpy@d:
  2453                           	opt stack 0
  2454  00000B                     MSDCheckForErrorCases@DeviceBytes:
  2455                           	opt stack 0
  2456  00000B                     i2c_display_send_init_sequence@init_sequence:
  2457                           	opt stack 0
  2458                           
  2459                           ; 9 bytes @ 0xA
  2460  00000B                     	ds	1
  2461  00000C                     ??_USBMSDInit:
  2462  00000C                     ?_parseHexFileEntry:
  2463                           	opt stack 0
  2464  00000C                     USBEnableEndpoint@ep:
  2465                           	opt stack 0
  2466  00000C                     __bootloader_check_address@cntr:
  2467                           	opt stack 0
  2468  00000C                     internalFlash_writePage@byte_cntr:
  2469                           	opt stack 0
  2470  00000C                     _USBCheckMSDRequest$2319:
  2471                           	opt stack 0
  2472  00000C                     MSDTransferTerminated@handle:
  2473                           	opt stack 0
  2474  00000C                     __ic2_display_set_address@data_array:
  2475                           	opt stack 0
  2476  00000C                     i2c_digipot_backlight@data_array:
  2477                           	opt stack 0
  2478  00000C                     parseHexFileEntry@data:
  2479                           	opt stack 0
  2480  00000C                     utoa@base:
  2481                           	opt stack 0
  2482  00000C                     __fill_buffer_get_bootloader_details@buffer_large:
  2483                           	opt stack 0
  2484                           
  2485                           ; 4 bytes @ 0xB
  2486  00000C                     	ds	1
  2487  00000D                     ?__flash_get_status:
  2488                           	opt stack 0
  2489  00000D                     i2c_eeprom_writeByte@data:
  2490                           	opt stack 0
  2491  00000D                     __fill_buffer_get_display@cntr:
  2492                           	opt stack 0
  2493  00000D                     ___lldiv@counter:
  2494                           	opt stack 0
  2495  00000D                     memcpy@tmp:
  2496                           	opt stack 0
  2497  00000D                     internalFlash_addressWithinPage@page:
  2498                           	opt stack 0
  2499                           
  2500                           ; 2 bytes @ 0xC
  2501  00000D                     	ds	1
  2502  00000E                     ??_i2c_eeprom_writeByte:
  2503  00000E                     i2c_display_cursor@position:
  2504                           	opt stack 0
  2505  00000E                     __fill_buffer_get_display@line:
  2506                           	opt stack 0
  2507  00000E                     _USBCheckMSDRequest$2320:
  2508                           	opt stack 0
  2509  00000E                     _MSDTransferTerminated$2407:
  2510                           	opt stack 0
  2511  00000E                     utoa@v:
  2512                           	opt stack 0
  2513  00000E                     parseHexFileEntry@offset:
  2514                           	opt stack 0
  2515  00000E                     internalFlash_read@address:
  2516                           	opt stack 0
  2517                           
  2518                           ; 4 bytes @ 0xD
  2519  00000E                     	ds	1
  2520  00000F                     ??_internalFlash_addressWithinPage:
  2521  00000F                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  2522                           	opt stack 0
  2523  00000F                     i2c_display_cursor@line:
  2524                           	opt stack 0
  2525  00000F                     __flash_get_status@command:
  2526                           	opt stack 0
  2527  00000F                     __fill_buffer_get_display@start_line:
  2528                           	opt stack 0
  2529                           
  2530                           ; 1 bytes @ 0xE
  2531  00000F                     	ds	1
  2532  000010                     MSDCheckForErrorCases@MSDErrorCase:
  2533                           	opt stack 0
  2534  000010                     __i2c_read@slave_address:
  2535                           	opt stack 0
  2536  000010                     i2c_display_cursor@address:
  2537                           	opt stack 0
  2538  000010                     __fill_buffer_get_display@position:
  2539                           	opt stack 0
  2540  000010                     utoa@c:
  2541                           	opt stack 0
  2542  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2543                           	opt stack 0
  2544  000010                     __flash_get_status@status:
  2545                           	opt stack 0
  2546  000010                     __fill_buffer_get_bootloader_details@buffer_small:
  2547                           	opt stack 0
  2548                           
  2549                           ; 2 bytes @ 0xF
  2550  000010                     	ds	1
  2551  000011                     MSDCheckForErrorCases@DeviceNoData:
  2552                           	opt stack 0
  2553  000011                     __i2c_read@cntr:
  2554                           	opt stack 0
  2555  000011                     i2c_eeprom_writeByte@dat:
  2556                           	opt stack 0
  2557  000011                     itoa@buf:
  2558                           	opt stack 0
  2559                           
  2560                           ; 2 bytes @ 0x10
  2561  000011                     	ds	1
  2562  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2563                           	opt stack 0
  2564  000012                     i2c_eeprom_readByte@address:
  2565                           	opt stack 0
  2566  000012                     __flash_is_busy@status:
  2567                           	opt stack 0
  2568  000012                     parseHexFileEntry@hexEntry:
  2569                           	opt stack 0
  2570  000012                     internalFlash_read@data_length:
  2571                           	opt stack 0
  2572                           
  2573                           ; 2 bytes @ 0x11
  2574  000012                     	ds	1
  2575  000013                     i2c_eeprom_writeByte@slave_address:
  2576                           	opt stack 0
  2577  000013                     itoa@val:
  2578                           	opt stack 0
  2579  000013                     internalFlash_addressWithinPage@page_start_address:
  2580                           	opt stack 0
  2581                           
  2582                           ; 4 bytes @ 0x12
  2583  000013                     	ds	1
  2584  000014                     ??_i2c_eeprom_readByte:
  2585  000014                     ??_parseHexFileEntry:
  2586  000014                     flash_is_busy@result:
  2587                           	opt stack 0
  2588  000014                     __parse_command_short@cmd:
  2589                           	opt stack 0
  2590  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2591                           	opt stack 0
  2592  000014                     __flash_copy_page_to_buffer@page:
  2593                           	opt stack 0
  2594  000014                     __flash_compare_page_to_buffer@page:
  2595                           	opt stack 0
  2596  000014                     __flash_write_to_buffer@start:
  2597                           	opt stack 0
  2598  000014                     __flash_write_page_from_buffer@page:
  2599                           	opt stack 0
  2600  000014                     __flash_partial_read@page:
  2601                           	opt stack 0
  2602  000014                     internalFlash_read@buffer:
  2603                           	opt stack 0
  2604  000014                     __flash_set_page_size@command:
  2605                           	opt stack 0
  2606                           
  2607                           ; 4 bytes @ 0x13
  2608  000014                     	ds	1
  2609  000015                     __fill_buffer_get_status@outBuffer:
  2610                           	opt stack 0
  2611  000015                     itoa@base:
  2612                           	opt stack 0
  2613                           
  2614                           ; 2 bytes @ 0x14
  2615  000015                     	ds	1
  2616  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2617  000016                     __flash_copy_page_to_buffer@buffer:
  2618                           	opt stack 0
  2619  000016                     __flash_compare_page_to_buffer@buffer:
  2620                           	opt stack 0
  2621  000016                     __flash_write_page_from_buffer@buffer:
  2622                           	opt stack 0
  2623  000016                     __flash_write_to_buffer@data:
  2624                           	opt stack 0
  2625  000016                     __flash_partial_read@start:
  2626                           	opt stack 0
  2627  000016                     internalFlash_readPage@page:
  2628                           	opt stack 0
  2629                           
  2630                           ; 2 bytes @ 0x15
  2631  000016                     	ds	1
  2632  000017                     ??__flash_copy_page_to_buffer:
  2633  000017                     ??__flash_compare_page_to_buffer:
  2634  000017                     ??__flash_write_page_from_buffer:
  2635  000017                     i2c_eeprom_readByte@slave_address:
  2636                           	opt stack 0
  2637  000017                     itoa@cp:
  2638                           	opt stack 0
  2639                           
  2640                           ; 2 bytes @ 0x16
  2641  000017                     	ds	1
  2642  000018                     ??_USBStdFeatureReqHandler:
  2643  000018                     USBStdSetCfgHandler@i:
  2644                           	opt stack 0
  2645  000018                     i2c_eeprom_readByte@addr:
  2646                           	opt stack 0
  2647  000018                     __flash_set_page_size@size:
  2648                           	opt stack 0
  2649  000018                     __flash_write_to_buffer@data_length:
  2650                           	opt stack 0
  2651  000018                     __flash_partial_read@length:
  2652                           	opt stack 0
  2653  000018                     internalFlash_readPage@address:
  2654                           	opt stack 0
  2655                           
  2656                           ; 4 bytes @ 0x17
  2657  000018                     	ds	1
  2658  000019                     USBStdFeatureReqHandler@pUEP:
  2659                           	opt stack 0
  2660  000019                     __display_itoa_u16@value:
  2661                           	opt stack 0
  2662                           
  2663                           ; 4 bytes @ 0x18
  2664  000019                     	ds	1
  2665  00001A                     __flash_write_to_buffer@buffer:
  2666                           	opt stack 0
  2667  00001A                     __flash_compare_page_to_buffer@status:
  2668                           	opt stack 0
  2669  00001A                     __flash_partial_read@data:
  2670                           	opt stack 0
  2671  00001A                     __flash_copy_page_to_buffer@command:
  2672                           	opt stack 0
  2673  00001A                     __flash_write_page_from_buffer@command:
  2674                           	opt stack 0
  2675                           
  2676                           ; 4 bytes @ 0x19
  2677  00001A                     	ds	1
  2678  00001B                     USBStdFeatureReqHandler@current_ep_data:
  2679                           	opt stack 0
  2680  00001B                     __flash_write_to_buffer@command:
  2681                           	opt stack 0
  2682                           
  2683                           ; 4 bytes @ 0x1A
  2684  00001B                     	ds	1
  2685  00001C                     ??__flash_partial_read:
  2686  00001C                     parseHexFileEntry@i:
  2687                           	opt stack 0
  2688  00001C                     USBStdFeatureReqHandler@p:
  2689                           	opt stack 0
  2690  00001C                     __flash_compare_page_to_buffer@command:
  2691                           	opt stack 0
  2692                           
  2693                           ; 4 bytes @ 0x1B
  2694  00001C                     	ds	1
  2695  00001D                     __display_itoa_u16@text:
  2696                           	opt stack 0
  2697                           
  2698                           ; 2 bytes @ 0x1C
  2699  00001D                     	ds	1
  2700  00001E                     ??_USBCtrlEPService:
  2701  00001E                     
  2702                           ; 1 bytes @ 0x1D
  2703  00001E                     	ds	1
  2704  00001F                     ??__display_verify:
  2705  00001F                     ??__display_checked:
  2706  00001F                     __display_programming@cntr:
  2707                           	opt stack 0
  2708  00001F                     __display_done@cntr:
  2709                           	opt stack 0
  2710  00001F                     __display_itoa_u32@value:
  2711                           	opt stack 0
  2712                           
  2713                           ; 4 bytes @ 0x1E
  2714  00001F                     	ds	1
  2715  000020                     USBDeviceTasks@i:
  2716                           	opt stack 0
  2717  000020                     flash_page_write@page:
  2718                           	opt stack 0
  2719  000020                     flash_partial_write@page:
  2720                           	opt stack 0
  2721  000020                     __flash_partial_read@command:
  2722                           	opt stack 0
  2723                           
  2724                           ; 4 bytes @ 0x1F
  2725  000020                     	ds	1
  2726  000021                     __display_verify@cntr:
  2727                           	opt stack 0
  2728  000021                     __display_checked@start:
  2729                           	opt stack 0
  2730                           
  2731                           ; 1 bytes @ 0x20
  2732  000021                     	ds	1
  2733  000022                     __display_checked@cntr:
  2734                           	opt stack 0
  2735  000022                     flash_page_write@data:
  2736                           	opt stack 0
  2737  000022                     flash_partial_write@start:
  2738                           	opt stack 0
  2739                           
  2740                           ; 2 bytes @ 0x21
  2741  000022                     	ds	1
  2742  000023                     __display_itoa_u32@text:
  2743                           	opt stack 0
  2744                           
  2745                           ; 2 bytes @ 0x22
  2746  000023                     	ds	1
  2747  000024                     flash_page_write@match:
  2748                           	opt stack 0
  2749  000024                     flash_partial_write@length:
  2750                           	opt stack 0
  2751  000024                     __flash_partial_read@address:
  2752                           	opt stack 0
  2753                           
  2754                           ; 4 bytes @ 0x23
  2755  000024                     	ds	1
  2756  000025                     ??__display_found:
  2757  000025                     __display_failed@cntr:
  2758                           	opt stack 0
  2759  000025                     ExternalFlash_SectorWrite@config:
  2760                           	opt stack 0
  2761  000025                     fat_format@cntr:
  2762                           	opt stack 0
  2763                           
  2764                           ; 2 bytes @ 0x24
  2765  000025                     	ds	1
  2766  000026                     flash_partial_write@data:
  2767                           	opt stack 0
  2768                           
  2769                           ; 2 bytes @ 0x25
  2770  000026                     	ds	1
  2771  000027                     __display_found@start:
  2772                           	opt stack 0
  2773  000027                     ExternalFlash_SectorWrite@sector_addr:
  2774                           	opt stack 0
  2775                           
  2776                           ; 4 bytes @ 0x26
  2777  000027                     	ds	1
  2778  000028                     __display_found@cntr:
  2779                           	opt stack 0
  2780  000028                     flash_partial_write@match:
  2781                           	opt stack 0
  2782  000028                     flash_page_read@page:
  2783                           	opt stack 0
  2784  000028                     flash_partial_read@page:
  2785                           	opt stack 0
  2786                           
  2787                           ; 2 bytes @ 0x27
  2788  000028                     	ds	1
  2789  000029                     ??_display_prepare:
  2790  000029                     ??__delete_root:
  2791  000029                     __write_fat@cluster:
  2792                           	opt stack 0
  2793  000029                     __write_root@data:
  2794                           	opt stack 0
  2795                           
  2796                           ; 2 bytes @ 0x28
  2797  000029                     	ds	1
  2798  00002A                     flash_page_read@data:
  2799                           	opt stack 0
  2800  00002A                     flash_partial_read@start:
  2801                           	opt stack 0
  2802  00002A                     __delete_root@root_sector:
  2803                           	opt stack 0
  2804                           
  2805                           ; 2 bytes @ 0x29
  2806  00002A                     	ds	1
  2807  00002B                     ??__write_root:
  2808  00002B                     display_prepare@mode:
  2809                           	opt stack 0
  2810  00002B                     ExternalFlash_SectorWrite@buffer:
  2811                           	opt stack 0
  2812  00002B                     __write_fat@value:
  2813                           	opt stack 0
  2814                           
  2815                           ; 2 bytes @ 0x2A
  2816  00002B                     	ds	1
  2817  00002C                     ??_fat_get_format_status:
  2818  00002C                     flash_partial_read@length:
  2819                           	opt stack 0
  2820  00002C                     ExternalFlash_SectorRead@config:
  2821                           	opt stack 0
  2822  00002C                     __write_root@root_sector:
  2823                           	opt stack 0
  2824  00002C                     __delete_root@offset:
  2825                           	opt stack 0
  2826                           
  2827                           ; 2 bytes @ 0x2B
  2828  00002C                     	ds	1
  2829  00002D                     ExternalFlash_SectorWrite@allowWriteToZero:
  2830                           	opt stack 0
  2831  00002D                     __write_fat@fat_sector:
  2832                           	opt stack 0
  2833                           
  2834                           ; 2 bytes @ 0x2C
  2835  00002D                     	ds	1
  2836  00002E                     __delete_root@deleted_value:
  2837                           	opt stack 0
  2838  00002E                     flash_partial_read@data:
  2839                           	opt stack 0
  2840  00002E                     ExternalFlash_SectorWrite@page:
  2841                           	opt stack 0
  2842  00002E                     __write_root@offset:
  2843                           	opt stack 0
  2844  00002E                     fat_get_format_status@cntr:
  2845                           	opt stack 0
  2846  00002E                     ExternalFlash_SectorRead@sector_addr:
  2847                           	opt stack 0
  2848                           
  2849                           ; 4 bytes @ 0x2D
  2850  00002E                     	ds	1
  2851  00002F                     __delete_root@slot:
  2852                           	opt stack 0
  2853  00002F                     __write_fat@offset:
  2854                           	opt stack 0
  2855                           
  2856                           ; 2 bytes @ 0x2E
  2857  00002F                     	ds	1
  2858  000030                     ??_MSDWriteHandler:
  2859  000030                     ??__root_is_available:
  2860  000030                     ?__get_empty_cluster:
  2861                           	opt stack 0
  2862  000030                     ?_fat_get_empty_clusters:
  2863                           	opt stack 0
  2864  000030                     ?__read_fat:
  2865                           	opt stack 0
  2866  000030                     ?__get_first_cluster:
  2867                           	opt stack 0
  2868  000030                     ?_fat_get_file_size:
  2869                           	opt stack 0
  2870  000030                     __write_root@slot:
  2871                           	opt stack 0
  2872  000030                     __get_empty_cluster@first_cluster:
  2873                           	opt stack 0
  2874  000030                     fat_get_empty_clusters@maximum:
  2875                           	opt stack 0
  2876  000030                     __read_fat@cluster:
  2877                           	opt stack 0
  2878  000030                     fat_find_file@name:
  2879                           	opt stack 0
  2880                           
  2881                           ; 2 bytes @ 0x2F
  2882  000030                     	ds	1
  2883  000031                     __root_is_available@root_sector:
  2884                           	opt stack 0
  2885                           
  2886                           ; 2 bytes @ 0x30
  2887  000031                     	ds	1
  2888  000032                     ??__get_first_cluster:
  2889  000032                     ExternalFlash_SectorRead@buffer:
  2890                           	opt stack 0
  2891  000032                     __get_empty_cluster@fat_sector:
  2892                           	opt stack 0
  2893  000032                     fat_get_empty_clusters@fat_sector:
  2894                           	opt stack 0
  2895  000032                     __read_fat@fat_sector:
  2896                           	opt stack 0
  2897  000032                     fat_find_file@extension:
  2898                           	opt stack 0
  2899                           
  2900                           ; 2 bytes @ 0x31
  2901  000032                     	ds	1
  2902  000033                     __root_is_available@offset:
  2903                           	opt stack 0
  2904  000033                     __get_first_cluster@sector:
  2905                           	opt stack 0
  2906                           
  2907                           ; 2 bytes @ 0x32
  2908  000033                     	ds	1
  2909  000034                     ??_fat_get_file_size:
  2910  000034                     ExternalFlash_SectorRead@page:
  2911                           	opt stack 0
  2912  000034                     __get_empty_cluster@offset:
  2913                           	opt stack 0
  2914  000034                     fat_get_empty_clusters@offset:
  2915                           	opt stack 0
  2916  000034                     __read_fat@offset:
  2917                           	opt stack 0
  2918  000034                     fat_find_file@buffer:
  2919                           	opt stack 0
  2920                           
  2921                           ; 11 bytes @ 0x33
  2922  000034                     	ds	1
  2923  000035                     __root_is_available@file_number:
  2924                           	opt stack 0
  2925  000035                     __get_first_cluster@offset:
  2926                           	opt stack 0
  2927  000035                     fat_get_file_size@sector:
  2928                           	opt stack 0
  2929                           
  2930                           ; 2 bytes @ 0x34
  2931  000035                     	ds	1
  2932  000036                     ??_MSDReadHandler:
  2933  000036                     __root_is_available@first_byte:
  2934                           	opt stack 0
  2935  000036                     __get_empty_cluster@value:
  2936                           	opt stack 0
  2937  000036                     fat_get_empty_clusters@value:
  2938                           	opt stack 0
  2939  000036                     __read_fat@value:
  2940                           	opt stack 0
  2941                           
  2942                           ; 2 bytes @ 0x35
  2943  000036                     	ds	1
  2944  000037                     __get_available_root_entry@file_number:
  2945                           	opt stack 0
  2946  000037                     __get_first_cluster@first_cluster:
  2947                           	opt stack 0
  2948  000037                     fat_get_file_information@data:
  2949                           	opt stack 0
  2950  000037                     fat_get_file_size@file_size:
  2951                           	opt stack 0
  2952                           
  2953                           ; 4 bytes @ 0x36
  2954  000037                     	ds	1
  2955  000038                     __get_empty_cluster@cluster:
  2956                           	opt stack 0
  2957  000038                     fat_get_empty_clusters@empty_clusters:
  2958                           	opt stack 0
  2959                           
  2960                           ; 2 bytes @ 0x37
  2961  000038                     	ds	1
  2962  000039                     ??_fat_get_file_information:
  2963  000039                     __get_first_cluster@slot:
  2964                           	opt stack 0
  2965                           
  2966                           ; 1 bytes @ 0x38
  2967  000039                     	ds	1
  2968  00003A                     ??_MSDProcessCommandMediaPresent:
  2969  00003A                     fat_get_empty_clusters@cluster:
  2970                           	opt stack 0
  2971  00003A                     fat_delete_file@next_cluster:
  2972                           	opt stack 0
  2973  00003A                     fat_get_file_information@root_sector:
  2974                           	opt stack 0
  2975                           
  2976                           ; 2 bytes @ 0x39
  2977  00003A                     	ds	1
  2978  00003B                     fat_get_file_size@offset:
  2979                           	opt stack 0
  2980                           
  2981                           ; 2 bytes @ 0x3A
  2982  00003B                     	ds	1
  2983  00003C                     _MSDProcessCommandMediaPresent$2390:
  2984                           	opt stack 0
  2985  00003C                     fat_delete_file@first_cluster:
  2986                           	opt stack 0
  2987  00003C                     fat_get_file_information@offset:
  2988                           	opt stack 0
  2989                           
  2990                           ; 2 bytes @ 0x3B
  2991  00003C                     	ds	1
  2992  00003D                     fat_get_file_size@file_number:
  2993                           	opt stack 0
  2994                           
  2995                           ; 1 bytes @ 0x3C
  2996  00003D                     	ds	1
  2997  00003E                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  2998                           	opt stack 0
  2999  00003E                     fat_delete_file@file_number:
  3000                           	opt stack 0
  3001  00003E                     fat_get_file_information@file_number:
  3002                           	opt stack 0
  3003                           
  3004                           ; 1 bytes @ 0x3D
  3005  00003E                     	ds	1
  3006  00003F                     fat_find_file@slot:
  3007                           	opt stack 0
  3008  00003F                     fat_append_to_file@number_of_bytes:
  3009                           	opt stack 0
  3010  00003F                     fat_rename_file@name:
  3011                           	opt stack 0
  3012  00003F                     __fill_buffer_get_file_details@inBuffer:
  3013                           	opt stack 0
  3014  00003F                     __parse_file_delete@data:
  3015                           	opt stack 0
  3016  00003F                     MSDProcessCommandMediaPresent@sectorSize:
  3017                           	opt stack 0
  3018  00003F                     fat_read_from_file@start_byte:
  3019                           	opt stack 0
  3020                           
  3021                           ; 4 bytes @ 0x3E
  3022  00003F                     	ds	1
  3023  000040                     fat_find_file@sector:
  3024                           	opt stack 0
  3025                           
  3026                           ; 2 bytes @ 0x3F
  3027  000040                     	ds	1
  3028  000041                     fat_append_to_file@data:
  3029                           	opt stack 0
  3030  000041                     fat_rename_file@extension:
  3031                           	opt stack 0
  3032  000041                     __fill_buffer_get_file_details@outBuffer:
  3033                           	opt stack 0
  3034                           
  3035                           ; 2 bytes @ 0x40
  3036  000041                     	ds	1
  3037  000042                     fat_find_file@offset:
  3038                           	opt stack 0
  3039                           
  3040                           ; 2 bytes @ 0x41
  3041  000042                     	ds	1
  3042  000043                     ??_fat_append_to_file:
  3043  000043                     __fill_buffer_get_file_details@file_number:
  3044                           	opt stack 0
  3045  000043                     __parse_file_rename@data:
  3046                           	opt stack 0
  3047  000043                     MSDProcessCommandMediaPresent@capacity:
  3048                           	opt stack 0
  3049  000043                     fat_read_from_file@length:
  3050                           	opt stack 0
  3051                           
  3052                           ; 4 bytes @ 0x42
  3053  000043                     	ds	1
  3054  000044                     fat_create_file@name:
  3055                           	opt stack 0
  3056  000044                     __fill_buffer_find_file@inBuffer:
  3057                           	opt stack 0
  3058                           
  3059                           ; 2 bytes @ 0x43
  3060  000044                     	ds	1
  3061  000045                     
  3062                           ; 1 bytes @ 0x44
  3063  000045                     	ds	1
  3064  000046                     fat_create_file@extension:
  3065                           	opt stack 0
  3066  000046                     __fill_buffer_find_file@outBuffer:
  3067                           	opt stack 0
  3068                           
  3069                           ; 2 bytes @ 0x45
  3070  000046                     	ds	1
  3071  000047                     MSDProcessCommandMediaPresent@i:
  3072                           	opt stack 0
  3073  000047                     fat_read_from_file@data:
  3074                           	opt stack 0
  3075                           
  3076                           ; 2 bytes @ 0x46
  3077  000047                     	ds	1
  3078  000048                     ??_MSDProcessCommand:
  3079  000048                     ??__fill_buffer_find_file:
  3080  000048                     fat_create_file@size:
  3081                           	opt stack 0
  3082                           
  3083                           ; 4 bytes @ 0x47
  3084  000048                     	ds	1
  3085  000049                     ??_fat_read_from_file:
  3086                           
  3087                           ; 1 bytes @ 0x48
  3088  000049                     	ds	2
  3089  00004B                     __parse_file_append@data:
  3090                           	opt stack 0
  3091                           
  3092                           ; 2 bytes @ 0x4A
  3093  00004B                     	ds	1
  3094  00004C                     ??_fat_create_file:
  3095  00004C                     __fill_buffer_find_file@cntr:
  3096                           	opt stack 0
  3097                           
  3098                           ; 1 bytes @ 0x4B
  3099  00004C                     	ds	1
  3100  00004D                     ??__parse_file_append:
  3101  00004D                     ??_MSDTasks:
  3102                           
  3103                           ; 1 bytes @ 0x4C
  3104  00004D                     	ds	1
  3105  00004E                     _MSDTasks$2372:
  3106                           	opt stack 0
  3107                           
  3108                           ; 2 bytes @ 0x4D
  3109  00004E                     	ds	2
  3110  000050                     _MSDTasks$2373:
  3111                           	opt stack 0
  3112  000050                     __parse_file_create@data:
  3113                           	opt stack 0
  3114                           
  3115                           ; 2 bytes @ 0x4F
  3116  000050                     	ds	2
  3117  000052                     MSDTasks@i:
  3118                           	opt stack 0
  3119                           
  3120                           ; 1 bytes @ 0x51
  3121  000052                     	ds	1
  3122  000053                     __parse_command_long@data:
  3123                           	opt stack 0
  3124                           
  3125                           ; 2 bytes @ 0x52
  3126  000053                     	ds	2
  3127  000055                     ??__bootloader_verify_file:
  3128  000055                     ??__bootloader_program:
  3129  000055                     __parse_command_long@length:
  3130                           	opt stack 0
  3131  000055                     __fill_buffer_read_file@inBuffer:
  3132                           	opt stack 0
  3133                           
  3134                           ; 2 bytes @ 0x54
  3135  000055                     	ds	1
  3136  000056                     ??_api_parse:
  3137                           
  3138                           ; 1 bytes @ 0x55
  3139  000056                     	ds	1
  3140  000057                     __fill_buffer_read_file@outBuffer:
  3141                           	opt stack 0
  3142                           
  3143                           ; 2 bytes @ 0x56
  3144  000057                     	ds	1
  3145  000058                     api_parse@idx:
  3146                           	opt stack 0
  3147                           
  3148                           ; 1 bytes @ 0x57
  3149  000058                     	ds	1
  3150  000059                     ??__fill_buffer_read_file:
  3151                           
  3152                           ; 1 bytes @ 0x58
  3153  000059                     	ds	4
  3154  00005D                     bootloader_run@timeslot:
  3155                           	opt stack 0
  3156  00005D                     api_prepare@command:
  3157                           	opt stack 0
  3158                           
  3159                           ; 1 bytes @ 0x5C
  3160  00005D                     	ds	1
  3161  00005E                     ??_main:
  3162                           
  3163                           ; 1 bytes @ 0x5D
  3164  00005E                     	ds	2
  3165                           tblptru	equ	0xFF8
  3166                           tblptrh	equ	0xFF7
  3167                           tblptrl	equ	0xFF6
  3168                           tablat	equ	0xFF5
  3169                           postinc0	equ	0xFEE
  3170                           wreg	equ	0xFE8
  3171                           postdec1	equ	0xFE5
  3172                           fsr1h	equ	0xFE2
  3173                           fsr1l	equ	0xFE1
  3174                           
  3175 ;;
  3176 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3177 ;;
  3178 ;; *************** function _main *****************
  3179 ;; Defined at:
  3180 ;;		line 54 in file "main.c"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;		None
  3183 ;; Auto vars:     Size  Location     Type
  3184 ;;  tx_buffer       2   71[BANK0 ] PTR unsigned char 
  3185 ;;		 -> _spi_external_tx_buffer(64), 
  3186 ;;  rx_buffer       2   69[BANK0 ] PTR unsigned char 
  3187 ;;		 -> _spi_external_rx_buffer(64), 
  3188 ;;  bytes_transm    2   67[BANK0 ] unsigned int 
  3189 ;;  tx_start_add    2   65[BANK0 ] unsigned int 
  3190 ;; Return value:  Size  Location     Type
  3191 ;;                  1    wreg      void 
  3192 ;; Registers used:
  3193 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3194 ;; Tracked objects:
  3195 ;;		On entry : 0/0
  3196 ;;		On exit  : 0/0
  3197 ;;		Unchanged: 0/0
  3198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3200 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3201 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3202 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3203 ;;Total ram usage:       10 bytes
  3204 ;; Hardware stack levels required when called:   12
  3205 ;; This function calls:
  3206 ;;		_APP_DeviceCustomHIDTasks
  3207 ;;		_APP_DeviceMSDTasks
  3208 ;;		_SYSTEM_Initialize
  3209 ;;		_USBDeviceInit
  3210 ;;		_USBDeviceTasks
  3211 ;;		__normal_mode
  3212 ;;		_api_parse
  3213 ;;		_api_prepare
  3214 ;;		_bootloader_run
  3215 ;;		_display_prepare
  3216 ;;		_display_update
  3217 ;;		_jump_to_main_program
  3218 ;;		_spi_get_external_rx_buffer
  3219 ;;		_spi_get_external_tx_buffer
  3220 ;;		_system_init
  3221 ;;		_timer_pseudo_isr
  3222 ;;		_ui_get_status
  3223 ;;		_ui_run
  3224 ;; This function is called by:
  3225 ;;		Startup code after reset
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text0
  3230  00368E                     __ptext0:
  3231                           	opt stack 0
  3232  00368E                     _main:
  3233                           	opt stack 19
  3234                           
  3235                           ;main.c: 56: uint16_t bytes_transmitted;;main.c: 57: uint16_t tx_start_addr;;main.c: 59:
      +                           uint8_t *rx_buffer;;main.c: 60: uint8_t *tx_buffer;;main.c: 62: rx_buffer = spi_get_ext
      +                          ernal_rx_buffer();
  3236                           
  3237                           ;incstack = 0
  3238  00368E  ECC6  F03E         	call	_spi_get_external_rx_buffer	;wreg free
  3239  003692  C001  F0FA         	movff	?_spi_get_external_rx_buffer,main@rx_buffer
  3240  003696  C002  F0FB         	movff	?_spi_get_external_rx_buffer+1,main@rx_buffer+1
  3241                           
  3242                           ;main.c: 63: tx_buffer = spi_get_external_tx_buffer();
  3243  00369A  ECC1  F03E         	call	_spi_get_external_tx_buffer	;wreg free
  3244  00369E  C001  F0FC         	movff	?_spi_get_external_tx_buffer,main@tx_buffer
  3245  0036A2  C002  F0FD         	movff	?_spi_get_external_tx_buffer+1,main@tx_buffer+1
  3246                           
  3247                           ;main.c: 64: tx_start_addr = (uint16_t) tx_buffer;
  3248  0036A6  C0FC  F0F6         	movff	main@tx_buffer,main@tx_start_addr
  3249  0036AA  C0FD  F0F7         	movff	main@tx_buffer+1,main@tx_start_addr+1
  3250                           
  3251                           ;main.c: 68: system_init();
  3252  0036AE  EC63  F034         	call	_system_init	;wreg free
  3253                           
  3254                           ;main.c: 71: if(_normal_mode())
  3255  0036B2  ECEF  F036         	call	__normal_mode	;wreg free
  3256  0036B6  0900               	iorlw	0
  3257  0036B8  A4D8               	btfss	status,2,c
  3258                           
  3259                           ;main.c: 72: {;main.c: 73: jump_to_main_program();
  3260  0036BA  EC25  F03B         	call	_jump_to_main_program	;wreg free
  3261                           
  3262                           ;main.c: 74: };main.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  3263  0036BE  0E00               	movlw	0
  3264  0036C0  ECCE  F038         	call	_SYSTEM_Initialize
  3265                           
  3266                           ;main.c: 79: USBDeviceInit();
  3267  0036C4  ECA7  F01C         	call	_USBDeviceInit	;wreg free
  3268  0036C8                     
  3269                           ;main.c: 85: {;main.c: 89: USBDeviceTasks();
  3270  0036C8  EC0E  F019         	call	_USBDeviceTasks	;wreg free
  3271                           
  3272                           ;main.c: 90: APP_DeviceMSDTasks();
  3273  0036CC  EC80  F03E         	call	_APP_DeviceMSDTasks	;wreg free
  3274                           
  3275                           ;main.c: 91: APP_DeviceCustomHIDTasks();
  3276  0036D0  ECD9  F02B         	call	_APP_DeviceCustomHIDTasks	;wreg free
  3277                           
  3278                           ;main.c: 95: timer_pseudo_isr();
  3279  0036D4  ECE9  F03B         	call	_timer_pseudo_isr	;wreg free
  3280                           
  3281                           ;main.c: 98: if(PORTDbits.RD2)
  3282  0036D8  A483               	btfss	3971,2,c	;volatile
  3283  0036DA  D039               	goto	l888
  3284                           
  3285                           ;main.c: 99: {;main.c: 102: bytes_transmitted = TXADDRH;
  3286  0036DC  CF6A F0F8          	movff	3946,main@bytes_transmitted	;volatile
  3287  0036E0  0100               	movlb	0	; () banked
  3288  0036E2  6BF9               	clrf	(main@bytes_transmitted+1)& (0+255),b
  3289                           
  3290                           ; BSR set to: 0
  3291                           ;main.c: 103: bytes_transmitted <<= 8;
  3292  0036E4  51F8               	movf	main@bytes_transmitted& (0+255),w,b
  3293  0036E6  6FF9               	movwf	(main@bytes_transmitted+1)& (0+255),b
  3294  0036E8  6BF8               	clrf	main@bytes_transmitted& (0+255),b
  3295                           
  3296                           ; BSR set to: 0
  3297                           ;main.c: 104: bytes_transmitted |= TXADDRL;
  3298  0036EA  506B               	movf	3947,w,c	;volatile
  3299  0036EC  13F8               	iorwf	main@bytes_transmitted& (0+255),f,b
  3300                           
  3301                           ; BSR set to: 0
  3302                           ;main.c: 105: --bytes_transmitted;
  3303  0036EE  07F8               	decf	main@bytes_transmitted& (0+255),f,b
  3304  0036F0  A0D8               	btfss	status,0,c
  3305  0036F2  07F9               	decf	(main@bytes_transmitted+1)& (0+255),f,b
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;main.c: 106: bytes_transmitted -= (uint16_t) spi_get_external_tx_buffer();
  3309  0036F4  ECC1  F03E         	call	_spi_get_external_tx_buffer	;wreg free
  3310  0036F8  5001               	movf	?_spi_get_external_tx_buffer,w,c
  3311  0036FA  0100               	movlb	0	; () banked
  3312  0036FC  5FF8               	subwf	main@bytes_transmitted& (0+255),f,b
  3313  0036FE  5002               	movf	?_spi_get_external_tx_buffer+1,w,c
  3314  003700  5BF9               	subwfb	(main@bytes_transmitted+1)& (0+255),f,b
  3315                           
  3316                           ; BSR set to: 0
  3317                           ;main.c: 109: if(bytes_transmitted>0)
  3318  003702  51F8               	movf	main@bytes_transmitted& (0+255),w,b
  3319  003704  11F9               	iorwf	(main@bytes_transmitted+1)& (0+255),w,b
  3320  003706  B4D8               	btfsc	status,2,c
  3321  003708  D022               	goto	l888
  3322                           
  3323                           ; BSR set to: 0
  3324                           ;main.c: 110: {;main.c: 112: DMACON1bits.DMAEN = 0;
  3325  00370A  9088               	bcf	3976,0,c	;volatile
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;main.c: 115: api_prepare(rx_buffer, tx_buffer);
  3329  00370C  C0FA  F0EE         	movff	main@rx_buffer,api_prepare@inBuffer
  3330  003710  C0FB  F0EF         	movff	main@rx_buffer+1,api_prepare@inBuffer+1
  3331  003714  C0FC  F0F0         	movff	main@tx_buffer,api_prepare@outBuffer
  3332  003718  C0FD  F0F1         	movff	main@tx_buffer+1,api_prepare@outBuffer+1
  3333  00371C  EC81  F01E         	call	_api_prepare	;wreg free
  3334                           
  3335                           ;main.c: 116: api_parse(rx_buffer, (uint8_t) bytes_transmitted);
  3336  003720  C0FA  F0E8         	movff	main@rx_buffer,api_parse@inBuffer
  3337  003724  C0FB  F0E9         	movff	main@rx_buffer+1,api_parse@inBuffer+1
  3338  003728  C0F8  F0EA         	movff	main@bytes_transmitted,api_parse@receivedDataLength
  3339  00372C  EC45  F026         	call	_api_parse	;wreg free
  3340                           
  3341                           ;main.c: 119: TXADDRH = ((unsigned char)((((uint16_t) tx_buffer)>>8)&0xFF));
  3342  003730  0100               	movlb	0	; () banked
  3343  003732  51FD               	movf	(main@tx_buffer+1)& (0+255),w,b
  3344  003734  6E6A               	movwf	3946,c	;volatile
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;main.c: 120: TXADDRL = ((unsigned char)(((uint16_t) tx_buffer)&0xFF));
  3348  003736  C0FC  FF6B         	movff	main@tx_buffer,3947	;volatile
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;main.c: 123: RXADDRH = ((unsigned char)((((uint16_t) rx_buffer)>>8)&0xFF));
  3352  00373A  51FB               	movf	(main@rx_buffer+1)& (0+255),w,b
  3353  00373C  6E68               	movwf	3944,c	;volatile
  3354                           
  3355                           ; BSR set to: 0
  3356                           ;main.c: 124: RXADDRL = ((unsigned char)(((uint16_t) rx_buffer)&0xFF));
  3357  00373E  C0FA  FF69         	movff	main@rx_buffer,3945	;volatile
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;main.c: 127: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
  3361  003742  0E00               	movlw	0
  3362  003744  6E66               	movwf	3942,c	;volatile
  3363                           
  3364                           ; BSR set to: 0
  3365                           ;main.c: 128: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
  3366  003746  0E3F               	movlw	63
  3367  003748  6E67               	movwf	3943,c	;volatile
  3368                           
  3369                           ; BSR set to: 0
  3370                           ;main.c: 131: PIR3bits.SSP2IF = 0;
  3371  00374A  9EA4               	bcf	4004,7,c	;volatile
  3372                           
  3373                           ; BSR set to: 0
  3374                           ;main.c: 133: DMACON1bits.DMAEN = 1;
  3375  00374C  8088               	bsf	3976,0,c	;volatile
  3376  00374E                     l888:
  3377                           
  3378                           ;main.c: 134: };main.c: 135: };main.c: 139: if(!os.done)
  3379                           
  3380                           ; BSR set to: 0
  3381                           
  3382                           ; BSR set to: 0
  3383  00374E  0100               	movlb	0	; () banked
  3384  003750  5163               	movf	(_os+3)& (0+255),w,b	;volatile
  3385  003752  A4D8               	btfss	status,2,c
  3386  003754  D7B9               	goto	l886
  3387                           
  3388                           ; BSR set to: 0
  3389                           ;main.c: 140: {;main.c: 142: ui_run();
  3390  003756  EC68  F025         	call	_ui_run	;wreg free
  3391                           
  3392                           ;main.c: 147: switch(os.timeSlot&0b00000111)
  3393  00375A  D02A               	goto	l890
  3394  00375C                     
  3395                           ;main.c: 150: bootloader_run(0);
  3396  00375C  0E00               	movlw	0
  3397  00375E  ECC2  F036         	call	_bootloader_run
  3398                           
  3399                           ;main.c: 151: break;
  3400  003762  D048               	goto	l892
  3401  003764                     
  3402                           ;main.c: 154: bootloader_run(1);
  3403  003764  0E01               	movlw	1
  3404  003766  ECC2  F036         	call	_bootloader_run
  3405                           
  3406                           ;main.c: 155: break;
  3407  00376A  D044               	goto	l892
  3408  00376C                     
  3409                           ;main.c: 158: bootloader_run(2);
  3410  00376C  0E02               	movlw	2
  3411  00376E  ECC2  F036         	call	_bootloader_run
  3412                           
  3413                           ;main.c: 159: break;
  3414  003772  D040               	goto	l892
  3415  003774                     
  3416                           ;main.c: 162: bootloader_run(3);
  3417  003774  0E03               	movlw	3
  3418  003776  ECC2  F036         	call	_bootloader_run
  3419                           
  3420                           ;main.c: 163: break;
  3421  00377A  D03C               	goto	l892
  3422  00377C                     
  3423                           ;main.c: 166: bootloader_run(4);
  3424  00377C  0E04               	movlw	4
  3425  00377E  ECC2  F036         	call	_bootloader_run
  3426                           
  3427                           ;main.c: 167: break;
  3428  003782  D038               	goto	l892
  3429  003784                     
  3430                           ;main.c: 170: bootloader_run(5);
  3431  003784  0E05               	movlw	5
  3432  003786  ECC2  F036         	call	_bootloader_run
  3433                           
  3434                           ;main.c: 171: break;
  3435  00378A  D034               	goto	l892
  3436  00378C                     
  3437                           ;main.c: 174: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3438  00378C  EC17  F03F         	call	_ui_get_status	;wreg free
  3439  003790  0A05               	xorlw	5
  3440  003792  A4D8               	btfss	status,2,c
  3441  003794  D02F               	goto	l892
  3442                           
  3443                           ;main.c: 175: {;main.c: 176: display_prepare(os.display_mode);
  3444  003796  0100               	movlb	0	; () banked
  3445  003798  5165               	movf	(_os+5)& (0+255),w,b	;volatile
  3446  00379A  ECC5  F029         	call	_display_prepare
  3447                           
  3448                           ;main.c: 177: };main.c: 178: break;
  3449  00379E  D02A               	goto	l892
  3450  0037A0                     
  3451                           ;main.c: 181: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3452  0037A0  EC17  F03F         	call	_ui_get_status	;wreg free
  3453  0037A4  0A05               	xorlw	5
  3454  0037A6  A4D8               	btfss	status,2,c
  3455  0037A8  D025               	goto	l892
  3456                           
  3457                           ;main.c: 182: {;main.c: 183: display_update();
  3458  0037AA  EC98  F034         	call	_display_update	;wreg free
  3459                           
  3460                           ;main.c: 186: }
  3461                           
  3462                           ;main.c: 184: };main.c: 185: break;
  3463  0037AE  D022               	goto	l892
  3464  0037B0                     l890:
  3465  0037B0  0100               	movlb	0	; () banked
  3466  0037B2  5162               	movf	(_os+2)& (0+255),w,b	;volatile
  3467  0037B4  0B07               	andlw	7
  3468  0037B6  6E5E               	movwf	??_main& (0+255),c
  3469  0037B8  6A5F               	clrf	(??_main+1)& (0+255),c
  3470                           
  3471                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3472                           ; Switch size 1, requested type "space"
  3473                           ; Number of cases is 1, Range of values is 0 to 0
  3474                           ; switch strategies available:
  3475                           ; Name         Instructions Cycles
  3476                           ; simple_byte            4     3 (average)
  3477                           ;	Chosen strategy is simple_byte
  3478  0037BA  505F               	movf	??_main+1,w,c
  3479  0037BC  0A00               	xorlw	0	; case 0
  3480  0037BE  A4D8               	btfss	status,2,c
  3481  0037C0  D019               	goto	l892
  3482                           
  3483                           ; BSR set to: 0
  3484                           ; Switch size 1, requested type "space"
  3485                           ; Number of cases is 8, Range of values is 0 to 7
  3486                           ; switch strategies available:
  3487                           ; Name         Instructions Cycles
  3488                           ; simple_byte           25    13 (average)
  3489                           ;	Chosen strategy is simple_byte
  3490  0037C2  505E               	movf	??_main,w,c
  3491  0037C4  0A00               	xorlw	0	; case 0
  3492  0037C6  B4D8               	btfsc	status,2,c
  3493  0037C8  D7C9               	goto	l891
  3494  0037CA  0A01               	xorlw	1	; case 1
  3495  0037CC  B4D8               	btfsc	status,2,c
  3496  0037CE  D7CA               	goto	l893
  3497  0037D0  0A03               	xorlw	3	; case 2
  3498  0037D2  B4D8               	btfsc	status,2,c
  3499  0037D4  D7CB               	goto	l894
  3500  0037D6  0A01               	xorlw	1	; case 3
  3501  0037D8  B4D8               	btfsc	status,2,c
  3502  0037DA  D7CC               	goto	l895
  3503  0037DC  0A07               	xorlw	7	; case 4
  3504  0037DE  B4D8               	btfsc	status,2,c
  3505  0037E0  D7CD               	goto	l896
  3506  0037E2  0A01               	xorlw	1	; case 5
  3507  0037E4  B4D8               	btfsc	status,2,c
  3508  0037E6  D7CE               	goto	l897
  3509  0037E8  0A03               	xorlw	3	; case 6
  3510  0037EA  B4D8               	btfsc	status,2,c
  3511  0037EC  D7CF               	goto	l898
  3512  0037EE  0A01               	xorlw	1	; case 7
  3513  0037F0  B4D8               	btfsc	status,2,c
  3514  0037F2  D7D6               	goto	l900
  3515  0037F4                     l892:
  3516                           
  3517                           ;main.c: 187: os.done = 1;
  3518                           
  3519                           ; BSR set to: 0
  3520  0037F4  0E01               	movlw	1
  3521  0037F6  0100               	movlb	0	; () banked
  3522  0037F8  6F63               	movwf	(_os+3)& (0+255),b	;volatile
  3523                           
  3524                           ; BSR set to: 0
  3525                           
  3526                           ; BSR set to: 0
  3527  0037FA  D766               	goto	l886
  3528  0037FC                     __end_of_main:
  3529                           	opt stack 0
  3530                           tblptru	equ	0xFF8
  3531                           tblptrh	equ	0xFF7
  3532                           tblptrl	equ	0xFF6
  3533                           tablat	equ	0xFF5
  3534                           postinc0	equ	0xFEE
  3535                           wreg	equ	0xFE8
  3536                           postdec1	equ	0xFE5
  3537                           fsr1h	equ	0xFE2
  3538                           fsr1l	equ	0xFE1
  3539                           status	equ	0xFD8
  3540                           
  3541 ;; *************** function _ui_run *****************
  3542 ;; Defined at:
  3543 ;;		line 100 in file "ui.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;		None
  3546 ;; Auto vars:     Size  Location     Type
  3547 ;;		None
  3548 ;; Return value:  Size  Location     Type
  3549 ;;                  1    wreg      void 
  3550 ;; Registers used:
  3551 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3552 ;; Tracked objects:
  3553 ;;		On entry : 0/0
  3554 ;;		On exit  : 0/0
  3555 ;;		Unchanged: 0/0
  3556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3560 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3561 ;;Total ram usage:        0 bytes
  3562 ;; Hardware stack levels used:    1
  3563 ;; Hardware stack levels required when called:    3
  3564 ;; This function calls:
  3565 ;;		__ui_encoder
  3566 ;;		_i2c_digipot_backlight
  3567 ;;		_i2c_digipot_reset_off
  3568 ;;		_i2c_digipot_reset_on
  3569 ;;		_i2c_display_send_init_sequence
  3570 ;;		_system_encoder_enable
  3571 ;;		_ui_init
  3572 ;; This function is called by:
  3573 ;;		_main
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           	psect	text1
  3578  004AD0                     __ptext1:
  3579                           	opt stack 0
  3580  004AD0                     _ui_run:
  3581                           	opt stack 27
  3582                           
  3583                           ;ui.c: 102: switch(userInterfaceStatus)
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;incstack = 0
  3587  004AD0  D05A               	goto	l1298
  3588  004AD2                     
  3589                           ;ui.c: 106: if (os.buttonCount!=0)
  3590  004AD2  0100               	movlb	0	; () banked
  3591  004AD4  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  3592  004AD6  B4D8               	btfsc	status,2,c
  3593  004AD8  0012               	return	
  3594                           
  3595                           ; BSR set to: 0
  3596                           ;ui.c: 107: {;ui.c: 108: ui_init();
  3597  004ADA  EC76  F03E         	call	_ui_init	;wreg free
  3598                           
  3599                           ;ui.c: 109: os.buttonCount = 0;
  3600  004ADE  0E00               	movlw	0
  3601  004AE0  0100               	movlb	0	; () banked
  3602  004AE2  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  3603                           
  3604                           ; BSR set to: 0
  3605                           ;ui.c: 110: };ui.c: 111: break;
  3606  004AE4  0012               	return	
  3607  004AE6                     l1302:
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;ui.c: 115: LATDbits.LD0 = 0;
  3611  004AE6  908C               	bcf	3980,0,c	;volatile
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;ui.c: 117: system_ui_inactive_count = 0;
  3615  004AE8  0E00               	movlw	0
  3616  004AEA  0101               	movlb	1	; () banked
  3617  004AEC  6F6D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3618  004AEE  0E00               	movlw	0
  3619  004AF0  6F6C               	movwf	_system_ui_inactive_count& (0+255),b
  3620                           
  3621                           ;ui.c: 118: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  3622  004AF2  0E02               	movlw	2
  3623  004AF4  0100               	movlb	0	; () banked
  3624  004AF6  6F98               	movwf	_userInterfaceStatus& (0+255),b
  3625                           
  3626                           ;ui.c: 119: break;
  3627  004AF8  0012               	return	
  3628  004AFA                     
  3629                           ; BSR set to: 0
  3630                           ;ui.c: 123: i2c_digipot_reset_on();
  3631                           
  3632                           ; BSR set to: 0
  3633  004AFA  ECBB  F03D         	call	_i2c_digipot_reset_on	;wreg free
  3634                           
  3635                           ;ui.c: 125: system_ui_inactive_count = 0;
  3636  004AFE  0E00               	movlw	0
  3637  004B00  0101               	movlb	1	; () banked
  3638  004B02  6F6D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3639  004B04  0E00               	movlw	0
  3640  004B06  6F6C               	movwf	_system_ui_inactive_count& (0+255),b
  3641                           
  3642                           ; BSR set to: 1
  3643                           ;ui.c: 126: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  3644  004B08  0E03               	movlw	3
  3645  004B0A  0100               	movlb	0	; () banked
  3646  004B0C  6F98               	movwf	_userInterfaceStatus& (0+255),b
  3647                           
  3648                           ;ui.c: 127: break;
  3649  004B0E  0012               	return	
  3650  004B10                     
  3651                           ; BSR set to: 0
  3652                           ;ui.c: 130: ++system_ui_inactive_count;
  3653                           
  3654                           ; BSR set to: 0
  3655  004B10  0101               	movlb	1	; () banked
  3656  004B12  4B6C               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3657  004B14  2B6D               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3658                           
  3659                           ; BSR set to: 1
  3660                           ;ui.c: 132: if (system_ui_inactive_count>3)
  3661  004B16  516D               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  3662  004B18  E104               	bnz	u11500
  3663  004B1A  0E04               	movlw	4
  3664  004B1C  5D6C               	subwf	_system_ui_inactive_count& (0+255),w,b
  3665  004B1E  A0D8               	btfss	status,0,c
  3666  004B20  0012               	return	
  3667  004B22                     u11500:
  3668                           
  3669                           ; BSR set to: 1
  3670                           ;ui.c: 133: {;ui.c: 134: i2c_digipot_reset_off();
  3671  004B22  ECCC  F03D         	call	_i2c_digipot_reset_off	;wreg free
  3672                           
  3673                           ;ui.c: 135: system_ui_inactive_count = 0;
  3674  004B26  0E00               	movlw	0
  3675  004B28  0101               	movlb	1	; () banked
  3676  004B2A  6F6D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3677  004B2C  0E00               	movlw	0
  3678  004B2E  6F6C               	movwf	_system_ui_inactive_count& (0+255),b
  3679                           
  3680                           ; BSR set to: 1
  3681                           ;ui.c: 136: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  3682  004B30  0E04               	movlw	4
  3683  004B32  0100               	movlb	0	; () banked
  3684  004B34  6F98               	movwf	_userInterfaceStatus& (0+255),b
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;ui.c: 137: };ui.c: 138: break;
  3688  004B36  0012               	return	
  3689  004B38                     
  3690                           ; BSR set to: 0
  3691                           ;ui.c: 142: i2c_display_send_init_sequence();
  3692                           
  3693                           ; BSR set to: 0
  3694  004B38  ECCA  F03C         	call	_i2c_display_send_init_sequence	;wreg free
  3695                           
  3696                           ;ui.c: 144: i2c_digipot_backlight(150);
  3697  004B3C  0E96               	movlw	150
  3698  004B3E  EC5F  F03D         	call	_i2c_digipot_backlight
  3699                           
  3700                           ;ui.c: 146: system_encoder_enable();
  3701  004B42  EC9C  F03E         	call	_system_encoder_enable	;wreg free
  3702                           
  3703                           ;ui.c: 148: system_ui_inactive_count = 0;
  3704  004B46  0E00               	movlw	0
  3705  004B48  0101               	movlb	1	; () banked
  3706  004B4A  6F6D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3707  004B4C  0E00               	movlw	0
  3708  004B4E  6F6C               	movwf	_system_ui_inactive_count& (0+255),b
  3709                           
  3710                           ; BSR set to: 1
  3711                           ;ui.c: 149: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  3712  004B50  0E05               	movlw	5
  3713  004B52  0100               	movlb	0	; () banked
  3714  004B54  6F98               	movwf	_userInterfaceStatus& (0+255),b
  3715                           
  3716                           ;ui.c: 150: break;
  3717  004B56  0012               	return	
  3718  004B58                     
  3719                           ; BSR set to: 0
  3720                           ;ui.c: 153: if (os.encoderCount==0 && os.buttonCount==0)
  3721                           
  3722                           ; BSR set to: 0
  3723  004B58  5160               	movf	_os& (0+255),w,b	;volatile
  3724  004B5A  A4D8               	btfss	status,2,c
  3725  004B5C  D00C               	goto	l1308
  3726                           
  3727                           ; BSR set to: 0
  3728  004B5E  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  3729  004B60  A4D8               	btfss	status,2,c
  3730  004B62  D009               	goto	l1308
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;ui.c: 154: {;ui.c: 155: if(system_ui_inactive_count<0xFFFF)
  3734  004B64  0101               	movlb	1	; () banked
  3735  004B66  296C               	incf	_system_ui_inactive_count& (0+255),w,b
  3736  004B68  E103               	bnz	u11530
  3737  004B6A  296D               	incf	(_system_ui_inactive_count+1)& (0+255),w,b
  3738  004B6C  B4D8               	btfsc	status,2,c
  3739  004B6E  0012               	return	
  3740  004B70                     u11530:
  3741                           
  3742                           ; BSR set to: 1
  3743                           ;ui.c: 156: ++system_ui_inactive_count;
  3744  004B70  4B6C               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3745  004B72  2B6D               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3746                           
  3747                           ; BSR set to: 1
  3748                           ;ui.c: 157: }
  3749  004B74  0012               	return	
  3750  004B76                     l1308:
  3751                           
  3752                           ;ui.c: 158: else;ui.c: 159: {;ui.c: 160: system_ui_inactive_count = 0;
  3753                           
  3754                           ; BSR set to: 1
  3755  004B76  0E00               	movlw	0
  3756  004B78  0101               	movlb	1	; () banked
  3757  004B7A  6F6D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3758  004B7C  0E00               	movlw	0
  3759  004B7E  6F6C               	movwf	_system_ui_inactive_count& (0+255),b
  3760                           
  3761                           ; BSR set to: 1
  3762                           ;ui.c: 161: _ui_encoder();
  3763  004B80  EC22  F02A         	call	__ui_encoder	;wreg free
  3764                           
  3765                           ;ui.c: 164: }
  3766                           
  3767                           ;ui.c: 162: };ui.c: 163: break;
  3768  004B84  0012               	return	
  3769  004B86                     l1298:
  3770  004B86  0100               	movlb	0	; () banked
  3771  004B88  5198               	movf	_userInterfaceStatus& (0+255),w,b
  3772                           
  3773                           ; Switch size 1, requested type "space"
  3774                           ; Number of cases is 6, Range of values is 0 to 5
  3775                           ; switch strategies available:
  3776                           ; Name         Instructions Cycles
  3777                           ; simple_byte           19    10 (average)
  3778                           ;	Chosen strategy is simple_byte
  3779  004B8A  0A00               	xorlw	0	; case 0
  3780  004B8C  B4D8               	btfsc	status,2,c
  3781  004B8E  D7A1               	goto	l1299
  3782  004B90  0A01               	xorlw	1	; case 1
  3783  004B92  B4D8               	btfsc	status,2,c
  3784  004B94  D7A8               	goto	l1302
  3785  004B96  0A03               	xorlw	3	; case 2
  3786  004B98  B4D8               	btfsc	status,2,c
  3787  004B9A  D7AF               	goto	l1303
  3788  004B9C  0A01               	xorlw	1	; case 3
  3789  004B9E  B4D8               	btfsc	status,2,c
  3790  004BA0  D7B7               	goto	l1304
  3791  004BA2  0A07               	xorlw	7	; case 4
  3792  004BA4  B4D8               	btfsc	status,2,c
  3793  004BA6  D7C8               	goto	l1306
  3794  004BA8  0A01               	xorlw	1	; case 5
  3795  004BAA  A4D8               	btfss	status,2,c
  3796  004BAC  0012               	return	
  3797  004BAE  D7D4               	goto	l1307
  3798  004BB0                     __end_of_ui_run:
  3799                           	opt stack 0
  3800                           tblptru	equ	0xFF8
  3801                           tblptrh	equ	0xFF7
  3802                           tblptrl	equ	0xFF6
  3803                           tablat	equ	0xFF5
  3804                           postinc0	equ	0xFEE
  3805                           wreg	equ	0xFE8
  3806                           postdec1	equ	0xFE5
  3807                           fsr1h	equ	0xFE2
  3808                           fsr1l	equ	0xFE1
  3809                           status	equ	0xFD8
  3810                           
  3811 ;; *************** function _system_encoder_enable *****************
  3812 ;; Defined at:
  3813 ;;		line 95 in file "os.c"
  3814 ;; Parameters:    Size  Location     Type
  3815 ;;		None
  3816 ;; Auto vars:     Size  Location     Type
  3817 ;;		None
  3818 ;; Return value:  Size  Location     Type
  3819 ;;                  1    wreg      void 
  3820 ;; Registers used:
  3821 ;;		wreg, status,2
  3822 ;; Tracked objects:
  3823 ;;		On entry : 0/0
  3824 ;;		On exit  : 0/0
  3825 ;;		Unchanged: 0/0
  3826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3831 ;;Total ram usage:        0 bytes
  3832 ;; Hardware stack levels used:    1
  3833 ;; This function calls:
  3834 ;;		Nothing
  3835 ;; This function is called by:
  3836 ;;		_ui_run
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text2
  3841  007D38                     __ptext2:
  3842                           	opt stack 0
  3843  007D38                     _system_encoder_enable:
  3844                           	opt stack 29
  3845                           
  3846                           ;os.c: 98: INTCON3bits.INT2IF = 0;
  3847                           
  3848                           ;incstack = 0
  3849  007D38  92F0               	bcf	intcon3,1,c	;volatile
  3850                           
  3851                           ;os.c: 99: INTCON3bits.INT3IF = 0;
  3852  007D3A  94F0               	bcf	intcon3,2,c	;volatile
  3853                           
  3854                           ;os.c: 102: os.encoderCount = 0;
  3855  007D3C  0E00               	movlw	0
  3856  007D3E  0100               	movlb	0	; () banked
  3857  007D40  6F60               	movwf	_os& (0+255),b	;volatile
  3858                           
  3859                           ; BSR set to: 0
  3860                           ;os.c: 105: INTCON3bits.INT2IE = 1;
  3861  007D42  88F0               	bsf	intcon3,4,c	;volatile
  3862                           
  3863                           ; BSR set to: 0
  3864                           ;os.c: 106: INTCON3bits.INT3IE = 1;
  3865  007D44  8AF0               	bsf	intcon3,5,c	;volatile
  3866                           
  3867                           ; BSR set to: 0
  3868  007D46  0012               	return		;funcret
  3869  007D48                     __end_of_system_encoder_enable:
  3870                           	opt stack 0
  3871                           tblptru	equ	0xFF8
  3872                           tblptrh	equ	0xFF7
  3873                           tblptrl	equ	0xFF6
  3874                           tablat	equ	0xFF5
  3875                           intcon3	equ	0xFF0
  3876                           postinc0	equ	0xFEE
  3877                           wreg	equ	0xFE8
  3878                           postdec1	equ	0xFE5
  3879                           fsr1h	equ	0xFE2
  3880                           fsr1l	equ	0xFE1
  3881                           status	equ	0xFD8
  3882                           
  3883 ;; *************** function _i2c_display_send_init_sequence *****************
  3884 ;; Defined at:
  3885 ;;		line 199 in file "i2c.c"
  3886 ;; Parameters:    Size  Location     Type
  3887 ;;		None
  3888 ;; Auto vars:     Size  Location     Type
  3889 ;;  init_sequenc    9   10[COMRAM] unsigned char [9]
  3890 ;; Return value:  Size  Location     Type
  3891 ;;                  1    wreg      void 
  3892 ;; Registers used:
  3893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3894 ;; Tracked objects:
  3895 ;;		On entry : 0/0
  3896 ;;		On exit  : 0/0
  3897 ;;		Unchanged: 0/0
  3898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3900 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3902 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3903 ;;Total ram usage:        9 bytes
  3904 ;; Hardware stack levels used:    1
  3905 ;; Hardware stack levels required when called:    2
  3906 ;; This function calls:
  3907 ;;		__i2c_write
  3908 ;;		_i2c_set_frequency
  3909 ;; This function is called by:
  3910 ;;		_ui_run
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           
  3914                           	psect	text3
  3915  007994                     __ptext3:
  3916                           	opt stack 0
  3917  007994                     _i2c_display_send_init_sequence:
  3918                           	opt stack 27
  3919                           
  3920                           ;i2c.c: 201: uint8_t init_sequence[9] = {;i2c.c: 202: 0x3A,;i2c.c: 204: 0b00011110,;i2c.
      +                          c: 205: 0x39,;i2c.c: 207: 0b00001100,;i2c.c: 208: 0x74,;i2c.c: 209: 0b1011100,;i2c.c: 21
      +                          0: 0x6d,;i2c.c: 211: 0x0c,;i2c.c: 212: 0x01;i2c.c: 213: };
  3921                           
  3922                           ; BSR set to: 0
  3923                           ;incstack = 0
  3924  007994  EE21  F0F6         	lfsr	2,i2c_display_send_init_sequence@F6791
  3925  007998  EE10  F00B         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  3926  00799C  0E08               	movlw	8
  3927  00799E                     u10431:
  3928  00799E  CFDB FFE3          	movff	plusw2,plusw1
  3929  0079A2  06E8               	decf	wreg,f,c
  3930  0079A4  E2FC               	bc	u10431
  3931                           
  3932                           ;i2c.c: 216: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  3933  0079A6  0E00               	movlw	0
  3934  0079A8  EC0C  F03D         	call	_i2c_set_frequency
  3935                           
  3936                           ;i2c.c: 219: _i2c_write(0b01111000, &init_sequence[0], 9);
  3937  0079AC  0E0B               	movlw	low i2c_display_send_init_sequence@init_sequence
  3938  0079AE  6E06               	movwf	__i2c_write@data,c
  3939  0079B0  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  3940  0079B2  6E07               	movwf	__i2c_write@data+1,c
  3941  0079B4  0E09               	movlw	9
  3942  0079B6  6E08               	movwf	__i2c_write@length,c
  3943  0079B8  0E78               	movlw	120
  3944  0079BA  ECBE  F039         	call	__i2c_write
  3945  0079BE  0012               	return		;funcret
  3946  0079C0                     __end_of_i2c_display_send_init_sequence:
  3947                           	opt stack 0
  3948                           tblptru	equ	0xFF8
  3949                           tblptrh	equ	0xFF7
  3950                           tblptrl	equ	0xFF6
  3951                           tablat	equ	0xFF5
  3952                           intcon3	equ	0xFF0
  3953                           postinc0	equ	0xFEE
  3954                           wreg	equ	0xFE8
  3955                           postdec1	equ	0xFE5
  3956                           plusw1	equ	0xFE3
  3957                           fsr1h	equ	0xFE2
  3958                           fsr1l	equ	0xFE1
  3959                           plusw2	equ	0xFDB
  3960                           status	equ	0xFD8
  3961                           
  3962 ;; *************** function _i2c_digipot_reset_on *****************
  3963 ;; Defined at:
  3964 ;;		line 302 in file "i2c.c"
  3965 ;; Parameters:    Size  Location     Type
  3966 ;;		None
  3967 ;; Auto vars:     Size  Location     Type
  3968 ;;  data_array      2   10[COMRAM] unsigned char [2]
  3969 ;; Return value:  Size  Location     Type
  3970 ;;                  1    wreg      void 
  3971 ;; Registers used:
  3972 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3973 ;; Tracked objects:
  3974 ;;		On entry : 0/0
  3975 ;;		On exit  : 0/0
  3976 ;;		Unchanged: 0/0
  3977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3979 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3981 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3982 ;;Total ram usage:        2 bytes
  3983 ;; Hardware stack levels used:    1
  3984 ;; Hardware stack levels required when called:    2
  3985 ;; This function calls:
  3986 ;;		__i2c_write
  3987 ;;		_i2c_set_frequency
  3988 ;; This function is called by:
  3989 ;;		_ui_run
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993                           	psect	text4
  3994  007B76                     __ptext4:
  3995                           	opt stack 0
  3996  007B76                     _i2c_digipot_reset_on:
  3997                           	opt stack 27
  3998                           
  3999                           ;i2c.c: 304: uint8_t data_array[2];;i2c.c: 305: data_array[0] = 0x10 | 0x00;
  4000                           
  4001                           ;incstack = 0
  4002  007B76  0E10               	movlw	16
  4003  007B78  6E0B               	movwf	i2c_digipot_reset_on@data_array,c
  4004                           
  4005                           ;i2c.c: 307: data_array[1] = 0x00;
  4006  007B7A  0E00               	movlw	0
  4007  007B7C  6E0C               	movwf	i2c_digipot_reset_on@data_array+1,c
  4008                           
  4009                           ;i2c.c: 310: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4010  007B7E  0E02               	movlw	2
  4011  007B80  EC0C  F03D         	call	_i2c_set_frequency
  4012                           
  4013                           ;i2c.c: 312: _i2c_write(0b01011100, &data_array[0], 2);
  4014  007B84  0E0B               	movlw	low i2c_digipot_reset_on@data_array
  4015  007B86  6E06               	movwf	__i2c_write@data,c
  4016  007B88  0E00               	movlw	high i2c_digipot_reset_on@data_array
  4017  007B8A  6E07               	movwf	__i2c_write@data+1,c
  4018  007B8C  0E02               	movlw	2
  4019  007B8E  6E08               	movwf	__i2c_write@length,c
  4020  007B90  0E5C               	movlw	92
  4021  007B92  ECBE  F039         	call	__i2c_write
  4022  007B96  0012               	return		;funcret
  4023  007B98                     __end_of_i2c_digipot_reset_on:
  4024                           	opt stack 0
  4025                           tblptru	equ	0xFF8
  4026                           tblptrh	equ	0xFF7
  4027                           tblptrl	equ	0xFF6
  4028                           tablat	equ	0xFF5
  4029                           intcon3	equ	0xFF0
  4030                           postinc0	equ	0xFEE
  4031                           wreg	equ	0xFE8
  4032                           postdec1	equ	0xFE5
  4033                           plusw1	equ	0xFE3
  4034                           fsr1h	equ	0xFE2
  4035                           fsr1l	equ	0xFE1
  4036                           plusw2	equ	0xFDB
  4037                           status	equ	0xFD8
  4038                           
  4039 ;; *************** function _i2c_digipot_reset_off *****************
  4040 ;; Defined at:
  4041 ;;		line 315 in file "i2c.c"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;		None
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  1    wreg      void 
  4048 ;; Registers used:
  4049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4056 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4058 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4059 ;;Total ram usage:        2 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; Hardware stack levels required when called:    2
  4062 ;; This function calls:
  4063 ;;		__i2c_write
  4064 ;;		_i2c_set_frequency
  4065 ;; This function is called by:
  4066 ;;		_ui_run
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           
  4070                           	psect	text5
  4071  007B98                     __ptext5:
  4072                           	opt stack 0
  4073  007B98                     _i2c_digipot_reset_off:
  4074                           	opt stack 27
  4075                           
  4076                           ;i2c.c: 317: uint8_t data_array[2];;i2c.c: 318: data_array[0] = 0x10 | 0x00;
  4077                           
  4078                           ;incstack = 0
  4079  007B98  0E10               	movlw	16
  4080  007B9A  6E0B               	movwf	i2c_digipot_reset_off@data_array,c
  4081                           
  4082                           ;i2c.c: 319: data_array[1] = 0x80;
  4083  007B9C  0E80               	movlw	128
  4084  007B9E  6E0C               	movwf	i2c_digipot_reset_off@data_array+1,c
  4085                           
  4086                           ;i2c.c: 322: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4087  007BA0  0E02               	movlw	2
  4088  007BA2  EC0C  F03D         	call	_i2c_set_frequency
  4089                           
  4090                           ;i2c.c: 324: _i2c_write(0b01011100, &data_array[0], 2);
  4091  007BA6  0E0B               	movlw	low i2c_digipot_reset_off@data_array
  4092  007BA8  6E06               	movwf	__i2c_write@data,c
  4093  007BAA  0E00               	movlw	high i2c_digipot_reset_off@data_array
  4094  007BAC  6E07               	movwf	__i2c_write@data+1,c
  4095  007BAE  0E02               	movlw	2
  4096  007BB0  6E08               	movwf	__i2c_write@length,c
  4097  007BB2  0E5C               	movlw	92
  4098  007BB4  ECBE  F039         	call	__i2c_write
  4099  007BB8  0012               	return		;funcret
  4100  007BBA                     __end_of_i2c_digipot_reset_off:
  4101                           	opt stack 0
  4102                           tblptru	equ	0xFF8
  4103                           tblptrh	equ	0xFF7
  4104                           tblptrl	equ	0xFF6
  4105                           tablat	equ	0xFF5
  4106                           intcon3	equ	0xFF0
  4107                           postinc0	equ	0xFEE
  4108                           wreg	equ	0xFE8
  4109                           postdec1	equ	0xFE5
  4110                           plusw1	equ	0xFE3
  4111                           fsr1h	equ	0xFE2
  4112                           fsr1l	equ	0xFE1
  4113                           plusw2	equ	0xFDB
  4114                           status	equ	0xFD8
  4115                           
  4116 ;; *************** function _i2c_digipot_backlight *****************
  4117 ;; Defined at:
  4118 ;;		line 327 in file "i2c.c"
  4119 ;; Parameters:    Size  Location     Type
  4120 ;;  level           1    wreg     unsigned char 
  4121 ;; Auto vars:     Size  Location     Type
  4122 ;;  level           1   10[COMRAM] unsigned char 
  4123 ;;  data_array      2   11[COMRAM] unsigned char [2]
  4124 ;; Return value:  Size  Location     Type
  4125 ;;                  1    wreg      void 
  4126 ;; Registers used:
  4127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4128 ;; Tracked objects:
  4129 ;;		On entry : 0/0
  4130 ;;		On exit  : 0/0
  4131 ;;		Unchanged: 0/0
  4132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4134 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4136 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4137 ;;Total ram usage:        3 bytes
  4138 ;; Hardware stack levels used:    1
  4139 ;; Hardware stack levels required when called:    2
  4140 ;; This function calls:
  4141 ;;		__i2c_write
  4142 ;;		_i2c_set_frequency
  4143 ;; This function is called by:
  4144 ;;		_ui_run
  4145 ;; This function uses a non-reentrant model
  4146 ;;
  4147                           
  4148                           	psect	text6
  4149  007ABE                     __ptext6:
  4150                           	opt stack 0
  4151  007ABE                     _i2c_digipot_backlight:
  4152                           	opt stack 27
  4153                           
  4154                           ;incstack = 0
  4155                           ;i2c_digipot_backlight@level stored from wreg
  4156  007ABE  6E0B               	movwf	i2c_digipot_backlight@level,c
  4157                           
  4158                           ;i2c.c: 329: uint8_t data_array[2];;i2c.c: 330: data_array[0] = 0x00 | 0x00;
  4159  007AC0  0E00               	movlw	0
  4160  007AC2  6E0C               	movwf	i2c_digipot_backlight@data_array,c
  4161                           
  4162                           ;i2c.c: 331: data_array[1] = level>>1;
  4163  007AC4  90D8               	bcf	status,0,c
  4164  007AC6  300B               	rrcf	i2c_digipot_backlight@level,w,c
  4165  007AC8  6E0D               	movwf	i2c_digipot_backlight@data_array+1,c
  4166                           
  4167                           ;i2c.c: 334: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4168  007ACA  0E02               	movlw	2
  4169  007ACC  EC0C  F03D         	call	_i2c_set_frequency
  4170                           
  4171                           ;i2c.c: 336: _i2c_write(0b01011100, &data_array[0], 2);
  4172  007AD0  0E0C               	movlw	low i2c_digipot_backlight@data_array
  4173  007AD2  6E06               	movwf	__i2c_write@data,c
  4174  007AD4  0E00               	movlw	high i2c_digipot_backlight@data_array
  4175  007AD6  6E07               	movwf	__i2c_write@data+1,c
  4176  007AD8  0E02               	movlw	2
  4177  007ADA  6E08               	movwf	__i2c_write@length,c
  4178  007ADC  0E5C               	movlw	92
  4179  007ADE  ECBE  F039         	call	__i2c_write
  4180  007AE2  0012               	return		;funcret
  4181  007AE4                     __end_of_i2c_digipot_backlight:
  4182                           	opt stack 0
  4183                           tblptru	equ	0xFF8
  4184                           tblptrh	equ	0xFF7
  4185                           tblptrl	equ	0xFF6
  4186                           tablat	equ	0xFF5
  4187                           intcon3	equ	0xFF0
  4188                           postinc0	equ	0xFEE
  4189                           wreg	equ	0xFE8
  4190                           postdec1	equ	0xFE5
  4191                           plusw1	equ	0xFE3
  4192                           fsr1h	equ	0xFE2
  4193                           fsr1l	equ	0xFE1
  4194                           plusw2	equ	0xFDB
  4195                           status	equ	0xFD8
  4196                           
  4197 ;; *************** function __ui_encoder *****************
  4198 ;; Defined at:
  4199 ;;		line 21 in file "ui.c"
  4200 ;; Parameters:    Size  Location     Type
  4201 ;;		None
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;		None
  4204 ;; Return value:  Size  Location     Type
  4205 ;;                  1    wreg      void 
  4206 ;; Registers used:
  4207 ;;		wreg, status,2, status,0, cstack
  4208 ;; Tracked objects:
  4209 ;;		On entry : 0/0
  4210 ;;		On exit  : 0/0
  4211 ;;		Unchanged: 0/0
  4212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4217 ;;Total ram usage:        0 bytes
  4218 ;; Hardware stack levels used:    1
  4219 ;; Hardware stack levels required when called:    1
  4220 ;; This function calls:
  4221 ;;		_jump_to_main_program
  4222 ;; This function is called by:
  4223 ;;		_ui_run
  4224 ;; This function uses a non-reentrant model
  4225 ;;
  4226                           
  4227                           	psect	text7
  4228  005444                     __ptext7:
  4229                           	opt stack 0
  4230  005444                     __ui_encoder:
  4231                           	opt stack 28
  4232                           
  4233                           ;ui.c: 23: switch(os.display_mode)
  4234                           
  4235                           ;incstack = 0
  4236  005444  D041               	goto	l1273
  4237  005446                     
  4238                           ;ui.c: 26: if(os.buttonCount>0)
  4239  005446  0100               	movlb	0	; () banked
  4240  005448  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4241  00544A  0A80               	xorlw	128
  4242  00544C  0F7F               	addlw	-129
  4243  00544E  A0D8               	btfss	status,0,c
  4244  005450  0012               	return	
  4245                           
  4246                           ; BSR set to: 0
  4247                           ;ui.c: 27: {;ui.c: 28: os.buttonCount = 0;
  4248  005452  0E00               	movlw	0
  4249  005454  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4250                           
  4251                           ; BSR set to: 0
  4252                           ;ui.c: 29: };ui.c: 30: break;
  4253  005456  0012               	return	
  4254  005458                     
  4255                           ; BSR set to: 0
  4256                           ;ui.c: 33: if(os.buttonCount>0)
  4257                           
  4258                           ; BSR set to: 0
  4259  005458  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4260  00545A  0A80               	xorlw	128
  4261  00545C  0F7F               	addlw	-129
  4262  00545E  A0D8               	btfss	status,0,c
  4263  005460  0012               	return	
  4264                           
  4265                           ; BSR set to: 0
  4266                           ;ui.c: 34: {;ui.c: 35: os.bootloader_mode = BOOTLOADER_MODE_FILE_VERIFYING;
  4267  005462  0E20               	movlw	32
  4268  005464  6F64               	movwf	(_os+4)& (0+255),b	;volatile
  4269                           
  4270                           ;ui.c: 36: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING;
  4271  005466  0E20               	movlw	32
  4272  005468  6F65               	movwf	(_os+5)& (0+255),b	;volatile
  4273                           
  4274                           ;ui.c: 37: os.buttonCount = 0;
  4275  00546A  0E00               	movlw	0
  4276  00546C  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;ui.c: 38: };ui.c: 39: break;
  4280  00546E  0012               	return	
  4281  005470                     
  4282                           ; BSR set to: 0
  4283                           ;ui.c: 42: if(os.buttonCount>0)
  4284                           
  4285                           ; BSR set to: 0
  4286  005470  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4287  005472  0A80               	xorlw	128
  4288  005474  0F7F               	addlw	-129
  4289  005476  A0D8               	btfss	status,0,c
  4290  005478  0012               	return	
  4291                           
  4292                           ; BSR set to: 0
  4293                           ;ui.c: 43: {;ui.c: 44: os.buttonCount = 0;
  4294  00547A  0E00               	movlw	0
  4295  00547C  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4296                           
  4297                           ; BSR set to: 0
  4298                           ;ui.c: 45: };ui.c: 46: break;
  4299  00547E  0012               	return	
  4300  005480                     
  4301                           ; BSR set to: 0
  4302                           ;ui.c: 49: if(os.buttonCount>0)
  4303                           
  4304                           ; BSR set to: 0
  4305  005480  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4306  005482  0A80               	xorlw	128
  4307  005484  0F7F               	addlw	-129
  4308  005486  A0D8               	btfss	status,0,c
  4309  005488  0012               	return	
  4310                           
  4311                           ; BSR set to: 0
  4312                           ;ui.c: 50: {;ui.c: 51: os.buttonCount = 0;
  4313  00548A  0E00               	movlw	0
  4314  00548C  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4315                           
  4316                           ; BSR set to: 0
  4317                           ;ui.c: 52: };ui.c: 53: break;
  4318  00548E  0012               	return	
  4319  005490                     
  4320                           ; BSR set to: 0
  4321                           ;ui.c: 56: if(os.buttonCount>0)
  4322                           
  4323                           ; BSR set to: 0
  4324  005490  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4325  005492  0A80               	xorlw	128
  4326  005494  0F7F               	addlw	-129
  4327  005496  A0D8               	btfss	status,0,c
  4328  005498  0012               	return	
  4329                           
  4330                           ; BSR set to: 0
  4331                           ;ui.c: 57: {;ui.c: 58: os.bootloader_mode = BOOTLOADER_MODE_PROGRAMMING;
  4332  00549A  0E50               	movlw	80
  4333  00549C  6F64               	movwf	(_os+4)& (0+255),b	;volatile
  4334                           
  4335                           ;ui.c: 59: os.display_mode = DISPLAY_MODE_BOOTLOADER_PROGRAMMING;
  4336  00549E  0E50               	movlw	80
  4337  0054A0  6F65               	movwf	(_os+5)& (0+255),b	;volatile
  4338                           
  4339                           ;ui.c: 60: os.buttonCount = 0;
  4340  0054A2  0E00               	movlw	0
  4341  0054A4  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4342                           
  4343                           ; BSR set to: 0
  4344                           ;ui.c: 61: };ui.c: 62: break;
  4345  0054A6  0012               	return	
  4346  0054A8                     
  4347                           ; BSR set to: 0
  4348                           ;ui.c: 65: if(os.buttonCount>0)
  4349                           
  4350                           ; BSR set to: 0
  4351  0054A8  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4352  0054AA  0A80               	xorlw	128
  4353  0054AC  0F7F               	addlw	-129
  4354  0054AE  A0D8               	btfss	status,0,c
  4355  0054B0  0012               	return	
  4356                           
  4357                           ; BSR set to: 0
  4358                           ;ui.c: 66: {;ui.c: 67: os.buttonCount = 0;
  4359  0054B2  0E00               	movlw	0
  4360  0054B4  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4361                           
  4362                           ; BSR set to: 0
  4363                           ;ui.c: 68: };ui.c: 69: break;
  4364  0054B6  0012               	return	
  4365  0054B8                     
  4366                           ; BSR set to: 0
  4367                           ;ui.c: 72: if(os.buttonCount>0)
  4368                           
  4369                           ; BSR set to: 0
  4370  0054B8  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4371  0054BA  0A80               	xorlw	128
  4372  0054BC  0F7F               	addlw	-129
  4373  0054BE  A0D8               	btfss	status,0,c
  4374  0054C0  0012               	return	
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;ui.c: 73: {;ui.c: 74: jump_to_main_program();
  4378  0054C2  EC25  F03B         	call	_jump_to_main_program	;wreg free
  4379                           
  4380                           ;ui.c: 77: }
  4381                           
  4382                           ;ui.c: 75: };ui.c: 76: break;
  4383  0054C6  0012               	return	
  4384  0054C8                     l1273:
  4385  0054C8  0100               	movlb	0	; () banked
  4386  0054CA  5165               	movf	(_os+5)& (0+255),w,b	;volatile
  4387                           
  4388                           ; Switch size 1, requested type "space"
  4389                           ; Number of cases is 7, Range of values is 0 to 96
  4390                           ; switch strategies available:
  4391                           ; Name         Instructions Cycles
  4392                           ; simple_byte           22    12 (average)
  4393                           ;	Chosen strategy is simple_byte
  4394  0054CC  0A00               	xorlw	0	; case 0
  4395  0054CE  B4D8               	btfsc	status,2,c
  4396  0054D0  D7BA               	goto	l1274
  4397  0054D2  0A10               	xorlw	16	; case 16
  4398  0054D4  B4D8               	btfsc	status,2,c
  4399  0054D6  D7C0               	goto	l1277
  4400  0054D8  0A30               	xorlw	48	; case 32
  4401  0054DA  B4D8               	btfsc	status,2,c
  4402  0054DC  D7C9               	goto	l1279
  4403  0054DE  0A10               	xorlw	16	; case 48
  4404  0054E0  B4D8               	btfsc	status,2,c
  4405  0054E2  D7D6               	goto	l1283
  4406  0054E4  0A70               	xorlw	112	; case 64
  4407  0054E6  B4D8               	btfsc	status,2,c
  4408  0054E8  D7CB               	goto	l1281
  4409  0054EA  0A10               	xorlw	16	; case 80
  4410  0054EC  B4D8               	btfsc	status,2,c
  4411  0054EE  D7DC               	goto	l1285
  4412  0054F0  0A30               	xorlw	48	; case 96
  4413  0054F2  A4D8               	btfss	status,2,c
  4414  0054F4  0012               	return	
  4415  0054F6  D7E0               	goto	l1287
  4416  0054F8                     __end_of__ui_encoder:
  4417                           	opt stack 0
  4418                           tblptru	equ	0xFF8
  4419                           tblptrh	equ	0xFF7
  4420                           tblptrl	equ	0xFF6
  4421                           tablat	equ	0xFF5
  4422                           intcon3	equ	0xFF0
  4423                           postinc0	equ	0xFEE
  4424                           wreg	equ	0xFE8
  4425                           postdec1	equ	0xFE5
  4426                           plusw1	equ	0xFE3
  4427                           fsr1h	equ	0xFE2
  4428                           fsr1l	equ	0xFE1
  4429                           plusw2	equ	0xFDB
  4430                           status	equ	0xFD8
  4431                           
  4432 ;; *************** function _timer_pseudo_isr *****************
  4433 ;; Defined at:
  4434 ;;		line 18 in file "os.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;		None
  4437 ;; Auto vars:     Size  Location     Type
  4438 ;;		None
  4439 ;; Return value:  Size  Location     Type
  4440 ;;                  1    wreg      void 
  4441 ;; Registers used:
  4442 ;;		wreg, status,2, status,0
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4452 ;;Total ram usage:        0 bytes
  4453 ;; Hardware stack levels used:    1
  4454 ;; This function calls:
  4455 ;;		Nothing
  4456 ;; This function is called by:
  4457 ;;		_main
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           
  4461                           	psect	text8
  4462  0077D2                     __ptext8:
  4463                           	opt stack 0
  4464  0077D2                     _timer_pseudo_isr:
  4465                           	opt stack 30
  4466                           
  4467                           ;os.c: 21: if(INTCONbits.T0IF==0)
  4468                           
  4469                           ;incstack = 0
  4470  0077D2  A4F2               	btfss	intcon,2,c	;volatile
  4471  0077D4  0012               	return	
  4472                           
  4473                           ;os.c: 24: };os.c: 28: TMR0H = 0xD1;
  4474                           
  4475                           ;os.c: 22: {;os.c: 23: return;
  4476  0077D6  0ED1               	movlw	209
  4477  0077D8  6ED7               	movwf	4055,c	;volatile
  4478                           
  4479                           ;os.c: 29: TMR0L = 0x20;
  4480  0077DA  0E20               	movlw	32
  4481  0077DC  6ED6               	movwf	4054,c	;volatile
  4482                           
  4483                           ;os.c: 30: ++os.timeSlot;
  4484  0077DE  0100               	movlb	0	; () banked
  4485  0077E0  2B62               	incf	(_os+2)& (0+255),f,b	;volatile
  4486                           
  4487                           ; BSR set to: 0
  4488                           ;os.c: 32: os.done = 0;
  4489  0077E2  0E00               	movlw	0
  4490  0077E4  6F63               	movwf	(_os+3)& (0+255),b	;volatile
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;os.c: 33: INTCONbits.T0IF = 0;
  4494  0077E6  94F2               	bcf	intcon,2,c	;volatile
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;os.c: 36: if(INTCON3bits.INT1IF)
  4498  0077E8  A0F0               	btfss	intcon3,0,c	;volatile
  4499  0077EA  D002               	goto	l1085
  4500                           
  4501                           ; BSR set to: 0
  4502                           ;os.c: 37: {;os.c: 38: ++os.buttonCount;
  4503  0077EC  2B61               	incf	(_os+1)& (0+255),f,b	;volatile
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;os.c: 39: INTCON3bits.INT1IF = 0;
  4507  0077EE  90F0               	bcf	intcon3,0,c	;volatile
  4508  0077F0                     l1085:
  4509                           
  4510                           ; BSR set to: 0
  4511                           ;os.c: 40: };os.c: 43: if(INTCON3bits.INT2IF)
  4512                           
  4513                           ; BSR set to: 0
  4514  0077F0  A2F0               	btfss	intcon3,1,c	;volatile
  4515  0077F2  D003               	goto	l1086
  4516                           
  4517                           ; BSR set to: 0
  4518                           ;os.c: 44: {;os.c: 45: if(!PORTBbits.RB6)
  4519  0077F4  AC81               	btfss	3969,6,c	;volatile
  4520                           
  4521                           ; BSR set to: 0
  4522                           ;os.c: 46: {;os.c: 47: --os.encoderCount;
  4523  0077F6  0760               	decf	_os& (0+255),f,b	;volatile
  4524                           
  4525                           ; BSR set to: 0
  4526                           ;os.c: 48: };os.c: 49: INTCON3bits.INT2IF = 0;
  4527                           
  4528                           ; BSR set to: 0
  4529  0077F8  92F0               	bcf	intcon3,1,c	;volatile
  4530  0077FA                     l1086:
  4531                           
  4532                           ; BSR set to: 0
  4533                           ;os.c: 50: };os.c: 51: if(INTCON3bits.INT3IF)
  4534                           
  4535                           ; BSR set to: 0
  4536  0077FA  A4F0               	btfss	intcon3,2,c	;volatile
  4537  0077FC  0012               	return	
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;os.c: 52: {;os.c: 53: if(!PORTBbits.RB7)
  4541  0077FE  AE81               	btfss	3969,7,c	;volatile
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;os.c: 54: {;os.c: 55: ++os.encoderCount;
  4545  007800  2B60               	incf	_os& (0+255),f,b	;volatile
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;os.c: 56: };os.c: 57: INTCON3bits.INT3IF = 0;
  4549                           
  4550                           ; BSR set to: 0
  4551  007802  94F0               	bcf	intcon3,2,c	;volatile
  4552  007804  0012               	return	
  4553  007806                     __end_of_timer_pseudo_isr:
  4554                           	opt stack 0
  4555                           tblptru	equ	0xFF8
  4556                           tblptrh	equ	0xFF7
  4557                           tblptrl	equ	0xFF6
  4558                           tablat	equ	0xFF5
  4559                           intcon	equ	0xFF2
  4560                           intcon3	equ	0xFF0
  4561                           postinc0	equ	0xFEE
  4562                           wreg	equ	0xFE8
  4563                           postdec1	equ	0xFE5
  4564                           plusw1	equ	0xFE3
  4565                           fsr1h	equ	0xFE2
  4566                           fsr1l	equ	0xFE1
  4567                           plusw2	equ	0xFDB
  4568                           status	equ	0xFD8
  4569                           
  4570 ;; *************** function _system_init *****************
  4571 ;; Defined at:
  4572 ;;		line 137 in file "os.c"
  4573 ;; Parameters:    Size  Location     Type
  4574 ;;		None
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;		None
  4577 ;; Return value:  Size  Location     Type
  4578 ;;                  1    wreg      void 
  4579 ;; Registers used:
  4580 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4581 ;; Tracked objects:
  4582 ;;		On entry : 0/0
  4583 ;;		On exit  : 0/0
  4584 ;;		Unchanged: 0/0
  4585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4590 ;;Total ram usage:        0 bytes
  4591 ;; Hardware stack levels used:    1
  4592 ;; Hardware stack levels required when called:    7
  4593 ;; This function calls:
  4594 ;;		__system_encoder_init
  4595 ;;		__system_timer0_init
  4596 ;;		_fat_init
  4597 ;;		_flash_init
  4598 ;;		_i2c_init
  4599 ;;		_ui_init
  4600 ;; This function is called by:
  4601 ;;		_main
  4602 ;; This function uses a non-reentrant model
  4603 ;;
  4604                           
  4605                           	psect	text9
  4606  0068C6                     __ptext9:
  4607                           	opt stack 0
  4608  0068C6                     _system_init:
  4609                           	opt stack 23
  4610                           
  4611                           ;os.c: 144: TRISCbits.TRISC2 = 0;
  4612                           
  4613                           ;incstack = 0
  4614  0068C6  9494               	bcf	3988,2,c	;volatile
  4615                           
  4616                           ;os.c: 145: LATCbits.LC2 = 1;
  4617  0068C8  848B               	bsf	3979,2,c	;volatile
  4618                           
  4619                           ;os.c: 148: TRISDbits.TRISD0 = 0;
  4620  0068CA  9095               	bcf	3989,0,c	;volatile
  4621                           
  4622                           ;os.c: 149: LATDbits.LD0 = 0;
  4623  0068CC  908C               	bcf	3980,0,c	;volatile
  4624                           
  4625                           ;os.c: 152: TRISDbits.TRISD3 = 0;
  4626  0068CE  9695               	bcf	3989,3,c	;volatile
  4627                           
  4628                           ;os.c: 153: LATDbits.LD3 = 0;
  4629  0068D0  968C               	bcf	3980,3,c	;volatile
  4630                           
  4631                           ;os.c: 156: TRISDbits.TRISD1 = 0;
  4632  0068D2  9295               	bcf	3989,1,c	;volatile
  4633                           
  4634                           ;os.c: 157: LATDbits.LD1 = 0;
  4635  0068D4  928C               	bcf	3980,1,c	;volatile
  4636                           
  4637                           ;os.c: 160: TRISBbits.TRISB1 = 0;
  4638  0068D6  9293               	bcf	3987,1,c	;volatile
  4639                           
  4640                           ;os.c: 161: LATBbits.LB1 = 0;
  4641  0068D8  928A               	bcf	3978,1,c	;volatile
  4642                           
  4643                           ;os.c: 164: TRISBbits.TRISB2 = 0;
  4644  0068DA  9493               	bcf	3987,2,c	;volatile
  4645                           
  4646                           ;os.c: 165: LATBbits.LB2 = 0;
  4647  0068DC  948A               	bcf	3978,2,c	;volatile
  4648                           
  4649                           ;os.c: 166: TRISBbits.TRISB3 = 0;
  4650  0068DE  9693               	bcf	3987,3,c	;volatile
  4651                           
  4652                           ;os.c: 167: LATBbits.LB3 = 0;
  4653  0068E0  968A               	bcf	3978,3,c	;volatile
  4654                           
  4655                           ;os.c: 170: TRISDbits.TRISD6 = 1;
  4656  0068E2  8C95               	bsf	3989,6,c	;volatile
  4657                           
  4658                           ;os.c: 171: TRISDbits.TRISD4 = 0;
  4659  0068E4  9895               	bcf	3989,4,c	;volatile
  4660                           
  4661                           ;os.c: 172: TRISDbits.TRISD5 = 0;
  4662  0068E6  9A95               	bcf	3989,5,c	;volatile
  4663                           
  4664                           ;os.c: 173: TRISDbits.TRISD7 = 0;
  4665  0068E8  9E95               	bcf	3989,7,c	;volatile
  4666                           
  4667                           ;os.c: 174: LATDbits.LD7 = 1;
  4668  0068EA  8E8C               	bsf	3980,7,c	;volatile
  4669                           
  4670                           ;os.c: 175: TRISDbits.TRISD2 = 1;
  4671  0068EC  8495               	bsf	3989,2,c	;volatile
  4672                           
  4673                           ;os.c: 178: TRISCbits.TRISC7 = 0;
  4674  0068EE  9E94               	bcf	3988,7,c	;volatile
  4675                           
  4676                           ;os.c: 179: LATCbits.LC7 = 0;
  4677  0068F0  9E8B               	bcf	3979,7,c	;volatile
  4678                           
  4679                           ;os.c: 182: TRISEbits.TRISE2 = 0;
  4680  0068F2  9496               	bcf	3990,2,c	;volatile
  4681                           
  4682                           ;os.c: 183: LATEbits.LE2 = 1;
  4683  0068F4  848D               	bsf	3981,2,c	;volatile
  4684                           
  4685                           ;os.c: 184: TRISEbits.TRISE1 = 0;
  4686  0068F6  9296               	bcf	3990,1,c	;volatile
  4687                           
  4688                           ;os.c: 185: LATEbits.LE1 = 1;
  4689  0068F8  828D               	bsf	3981,1,c	;volatile
  4690                           
  4691                           ;os.c: 186: TRISEbits.TRISE0 = 0;
  4692  0068FA  9096               	bcf	3990,0,c	;volatile
  4693                           
  4694                           ;os.c: 187: LATEbits.LE0 = 1;
  4695  0068FC  808D               	bsf	3981,0,c	;volatile
  4696                           
  4697                           ;os.c: 188: TRISAbits.TRISA5 = 0;
  4698  0068FE  9A92               	bcf	3986,5,c	;volatile
  4699                           
  4700                           ;os.c: 189: LATAbits.LA5 = 1;
  4701  006900  8A89               	bsf	3977,5,c	;volatile
  4702                           
  4703                           ;os.c: 192: TRISAbits.TRISA0 = 1;
  4704  006902  8092               	bsf	3986,0,c	;volatile
  4705                           
  4706                           ;os.c: 193: ANCON0bits.PCFG0 = 1;
  4707  006904  010F               	movlb	15	; () banked
  4708  006906  8148               	bsf	72,0,b	;volatile
  4709                           
  4710                           ;os.c: 194: TRISBbits.TRISB7 = 1;
  4711  006908  8E93               	bsf	3987,7,c	;volatile
  4712                           
  4713                           ;os.c: 195: TRISBbits.TRISB6 = 1;
  4714  00690A  8C93               	bsf	3987,6,c	;volatile
  4715                           
  4716                           ; BSR set to: 15
  4717                           ;os.c: 198: os.bootloader_mode = BOOTLOADER_MODE_START;
  4718  00690C  0E00               	movlw	0
  4719  00690E  0100               	movlb	0	; () banked
  4720  006910  6F64               	movwf	(_os+4)& (0+255),b	;volatile
  4721                           
  4722                           ;os.c: 199: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
  4723  006912  0E00               	movlw	0
  4724  006914  6F65               	movwf	(_os+5)& (0+255),b	;volatile
  4725                           
  4726                           ; BSR set to: 0
  4727                           ;os.c: 202: i2c_init();
  4728  006916  ECBB  F03E         	call	_i2c_init	;wreg free
  4729                           
  4730                           ;os.c: 205: flash_init();
  4731  00691A  EC3A  F03E         	call	_flash_init	;wreg free
  4732                           
  4733                           ;os.c: 208: fat_init();
  4734  00691E  ECA4  F03E         	call	_fat_init	;wreg free
  4735                           
  4736                           ;os.c: 211: _system_encoder_init();
  4737  006922  EC43  F03B         	call	__system_encoder_init	;wreg free
  4738                           
  4739                           ;os.c: 214: ui_init();
  4740  006926  EC76  F03E         	call	_ui_init	;wreg free
  4741                           
  4742                           ;os.c: 217: _system_timer0_init();
  4743  00692A  ECFF  F03D         	call	__system_timer0_init	;wreg free
  4744  00692E  0012               	return		;funcret
  4745  006930                     __end_of_system_init:
  4746                           	opt stack 0
  4747                           tblptru	equ	0xFF8
  4748                           tblptrh	equ	0xFF7
  4749                           tblptrl	equ	0xFF6
  4750                           tablat	equ	0xFF5
  4751                           intcon	equ	0xFF2
  4752                           intcon3	equ	0xFF0
  4753                           postinc0	equ	0xFEE
  4754                           wreg	equ	0xFE8
  4755                           postdec1	equ	0xFE5
  4756                           plusw1	equ	0xFE3
  4757                           fsr1h	equ	0xFE2
  4758                           fsr1l	equ	0xFE1
  4759                           plusw2	equ	0xFDB
  4760                           status	equ	0xFD8
  4761                           
  4762 ;; *************** function _ui_init *****************
  4763 ;; Defined at:
  4764 ;;		line 91 in file "ui.c"
  4765 ;; Parameters:    Size  Location     Type
  4766 ;;		None
  4767 ;; Auto vars:     Size  Location     Type
  4768 ;;		None
  4769 ;; Return value:  Size  Location     Type
  4770 ;;                  1    wreg      void 
  4771 ;; Registers used:
  4772 ;;		wreg, status,2
  4773 ;; Tracked objects:
  4774 ;;		On entry : 0/0
  4775 ;;		On exit  : 0/0
  4776 ;;		Unchanged: 0/0
  4777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4782 ;;Total ram usage:        0 bytes
  4783 ;; Hardware stack levels used:    1
  4784 ;; This function calls:
  4785 ;;		Nothing
  4786 ;; This function is called by:
  4787 ;;		_system_init
  4788 ;;		_ui_run
  4789 ;; This function uses a non-reentrant model
  4790 ;;
  4791                           
  4792                           	psect	text10
  4793  007CEC                     __ptext10:
  4794                           	opt stack 0
  4795  007CEC                     _ui_init:
  4796                           	opt stack 29
  4797                           
  4798                           ;ui.c: 93: system_ui_inactive_count = 0;
  4799                           
  4800                           ;incstack = 0
  4801  007CEC  0E00               	movlw	0
  4802  007CEE  0101               	movlb	1	; () banked
  4803  007CF0  6F6D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4804  007CF2  0E00               	movlw	0
  4805  007CF4  6F6C               	movwf	_system_ui_inactive_count& (0+255),b
  4806                           
  4807                           ; BSR set to: 1
  4808                           ;ui.c: 95: LATCbits.LC2 = 1;
  4809  007CF6  848B               	bsf	3979,2,c	;volatile
  4810                           
  4811                           ;ui.c: 96: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  4812  007CF8  0E01               	movlw	1
  4813  007CFA  0100               	movlb	0	; () banked
  4814  007CFC  6F98               	movwf	_userInterfaceStatus& (0+255),b
  4815                           
  4816                           ; BSR set to: 0
  4817  007CFE  0012               	return		;funcret
  4818  007D00                     __end_of_ui_init:
  4819                           	opt stack 0
  4820                           tblptru	equ	0xFF8
  4821                           tblptrh	equ	0xFF7
  4822                           tblptrl	equ	0xFF6
  4823                           tablat	equ	0xFF5
  4824                           intcon	equ	0xFF2
  4825                           intcon3	equ	0xFF0
  4826                           postinc0	equ	0xFEE
  4827                           wreg	equ	0xFE8
  4828                           postdec1	equ	0xFE5
  4829                           plusw1	equ	0xFE3
  4830                           fsr1h	equ	0xFE2
  4831                           fsr1l	equ	0xFE1
  4832                           plusw2	equ	0xFDB
  4833                           status	equ	0xFD8
  4834                           
  4835 ;; *************** function _i2c_init *****************
  4836 ;; Defined at:
  4837 ;;		line 102 in file "i2c.c"
  4838 ;; Parameters:    Size  Location     Type
  4839 ;;		None
  4840 ;; Auto vars:     Size  Location     Type
  4841 ;;		None
  4842 ;; Return value:  Size  Location     Type
  4843 ;;                  1    wreg      void 
  4844 ;; Registers used:
  4845 ;;		wreg, status,2, status,0, cstack
  4846 ;; Tracked objects:
  4847 ;;		On entry : 0/0
  4848 ;;		On exit  : 0/0
  4849 ;;		Unchanged: 0/0
  4850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4855 ;;Total ram usage:        0 bytes
  4856 ;; Hardware stack levels used:    1
  4857 ;; Hardware stack levels required when called:    1
  4858 ;; This function calls:
  4859 ;;		__i2c_open_1
  4860 ;;		_i2c_set_frequency
  4861 ;; This function is called by:
  4862 ;;		_system_init
  4863 ;; This function uses a non-reentrant model
  4864 ;;
  4865                           
  4866                           	psect	text11
  4867  007D76                     __ptext11:
  4868                           	opt stack 0
  4869  007D76                     _i2c_init:
  4870                           	opt stack 28
  4871                           
  4872                           ;i2c.c: 105: _i2c_open_1();
  4873                           
  4874                           ; BSR set to: 0
  4875                           ;incstack = 0
  4876  007D76  EC54  F03E         	call	__i2c_open_1	;wreg free
  4877                           
  4878                           ;i2c.c: 107: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  4879  007D7A  0E00               	movlw	0
  4880  007D7C  EC0C  F03D         	call	_i2c_set_frequency
  4881  007D80  0012               	return		;funcret
  4882  007D82                     __end_of_i2c_init:
  4883                           	opt stack 0
  4884                           tblptru	equ	0xFF8
  4885                           tblptrh	equ	0xFF7
  4886                           tblptrl	equ	0xFF6
  4887                           tablat	equ	0xFF5
  4888                           intcon	equ	0xFF2
  4889                           intcon3	equ	0xFF0
  4890                           postinc0	equ	0xFEE
  4891                           wreg	equ	0xFE8
  4892                           postdec1	equ	0xFE5
  4893                           plusw1	equ	0xFE3
  4894                           fsr1h	equ	0xFE2
  4895                           fsr1l	equ	0xFE1
  4896                           plusw2	equ	0xFDB
  4897                           status	equ	0xFD8
  4898                           
  4899 ;; *************** function __i2c_open_1 *****************
  4900 ;; Defined at:
  4901 ;;		line 36 in file "i2c.c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;		None
  4904 ;; Auto vars:     Size  Location     Type
  4905 ;;		None
  4906 ;; Return value:  Size  Location     Type
  4907 ;;                  1    wreg      void 
  4908 ;; Registers used:
  4909 ;;		wreg, status,2
  4910 ;; Tracked objects:
  4911 ;;		On entry : 0/0
  4912 ;;		On exit  : 0/0
  4913 ;;		Unchanged: 0/0
  4914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4919 ;;Total ram usage:        0 bytes
  4920 ;; Hardware stack levels used:    1
  4921 ;; This function calls:
  4922 ;;		Nothing
  4923 ;; This function is called by:
  4924 ;;		_i2c_init
  4925 ;; This function uses a non-reentrant model
  4926 ;;
  4927                           
  4928                           	psect	text12
  4929  007CA8                     __ptext12:
  4930                           	opt stack 0
  4931  007CA8                     __i2c_open_1:
  4932                           	opt stack 28
  4933                           
  4934                           ;i2c.c: 38: SSP1STATbits.SMP = 0;
  4935                           
  4936                           ;incstack = 0
  4937  007CA8  9EC7               	bcf	4039,7,c	;volatile
  4938                           
  4939                           ;i2c.c: 39: SSP1STATbits.CKE = 0;
  4940  007CAA  9CC7               	bcf	4039,6,c	;volatile
  4941                           
  4942                           ;i2c.c: 40: SSP1ADD = 29;
  4943  007CAC  0E1D               	movlw	29
  4944  007CAE  6EC8               	movwf	4040,c	;volatile
  4945                           
  4946                           ;i2c.c: 41: SSP1CON1bits.WCOL = 0;
  4947  007CB0  9EC6               	bcf	4038,7,c	;volatile
  4948                           
  4949                           ;i2c.c: 42: SSP1CON1bits.SSPOV = 0;
  4950  007CB2  9CC6               	bcf	4038,6,c	;volatile
  4951                           
  4952                           ;i2c.c: 43: SSP1CON1bits.SSPM = 0b1000;
  4953  007CB4  50C6               	movf	4038,w,c	;volatile
  4954  007CB6  0BF0               	andlw	-16
  4955  007CB8  0908               	iorlw	8
  4956  007CBA  6EC6               	movwf	4038,c	;volatile
  4957                           
  4958                           ;i2c.c: 44: SSP1CON1bits.SSPEN = 1;
  4959  007CBC  8AC6               	bsf	4038,5,c	;volatile
  4960  007CBE  0012               	return		;funcret
  4961  007CC0                     __end_of__i2c_open_1:
  4962                           	opt stack 0
  4963                           tblptru	equ	0xFF8
  4964                           tblptrh	equ	0xFF7
  4965                           tblptrl	equ	0xFF6
  4966                           tablat	equ	0xFF5
  4967                           intcon	equ	0xFF2
  4968                           intcon3	equ	0xFF0
  4969                           postinc0	equ	0xFEE
  4970                           wreg	equ	0xFE8
  4971                           postdec1	equ	0xFE5
  4972                           plusw1	equ	0xFE3
  4973                           fsr1h	equ	0xFE2
  4974                           fsr1l	equ	0xFE1
  4975                           plusw2	equ	0xFDB
  4976                           status	equ	0xFD8
  4977                           
  4978 ;; *************** function _flash_init *****************
  4979 ;; Defined at:
  4980 ;;		line 337 in file "flash.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;		None
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;		None
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  1    wreg      void 
  4987 ;; Registers used:
  4988 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4998 ;;Total ram usage:        0 bytes
  4999 ;; Hardware stack levels used:    1
  5000 ;; Hardware stack levels required when called:    4
  5001 ;; This function calls:
  5002 ;;		__flash_set_page_size
  5003 ;;		_spi_init
  5004 ;;		_spi_set_configuration
  5005 ;; This function is called by:
  5006 ;;		_system_init
  5007 ;; This function uses a non-reentrant model
  5008 ;;
  5009                           
  5010                           	psect	text13
  5011  007C74                     __ptext13:
  5012                           	opt stack 0
  5013  007C74                     _flash_init:
  5014                           	opt stack 25
  5015                           
  5016                           ;flash.c: 340: spi_init(SPI_CONFIGURATION_INTERNAL);
  5017                           
  5018                           ;incstack = 0
  5019  007C74  0E00               	movlw	0
  5020  007C76  ECCB  F03A         	call	_spi_init
  5021                           
  5022                           ;flash.c: 341: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
  5023  007C7A  0E00               	movlw	0
  5024  007C7C  ECB0  F021         	call	_spi_set_configuration
  5025                           
  5026                           ;flash.c: 344: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  5027  007C80  0E00               	movlw	0
  5028  007C82  ECE9  F031         	call	__flash_set_page_size
  5029                           
  5030                           ;flash.c: 347: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
  5031  007C86  0E01               	movlw	1
  5032  007C88  ECB0  F021         	call	_spi_set_configuration
  5033  007C8C  0012               	return		;funcret
  5034  007C8E                     __end_of_flash_init:
  5035                           	opt stack 0
  5036                           tblptru	equ	0xFF8
  5037                           tblptrh	equ	0xFF7
  5038                           tblptrl	equ	0xFF6
  5039                           tablat	equ	0xFF5
  5040                           intcon	equ	0xFF2
  5041                           intcon3	equ	0xFF0
  5042                           postinc0	equ	0xFEE
  5043                           wreg	equ	0xFE8
  5044                           postdec1	equ	0xFE5
  5045                           plusw1	equ	0xFE3
  5046                           fsr1h	equ	0xFE2
  5047                           fsr1l	equ	0xFE1
  5048                           plusw2	equ	0xFDB
  5049                           status	equ	0xFD8
  5050                           
  5051 ;; *************** function _spi_init *****************
  5052 ;; Defined at:
  5053 ;;		line 122 in file "spi.c"
  5054 ;; Parameters:    Size  Location     Type
  5055 ;;  configuratio    1    wreg     enum E6747
  5056 ;; Auto vars:     Size  Location     Type
  5057 ;;  configuratio    1    3[COMRAM] enum E6747
  5058 ;; Return value:  Size  Location     Type
  5059 ;;                  1    wreg      void 
  5060 ;; Registers used:
  5061 ;;		wreg, status,2, status,0, cstack
  5062 ;; Tracked objects:
  5063 ;;		On entry : 0/0
  5064 ;;		On exit  : 0/0
  5065 ;;		Unchanged: 0/0
  5066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5068 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5070 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5071 ;;Total ram usage:        1 bytes
  5072 ;; Hardware stack levels used:    1
  5073 ;; Hardware stack levels required when called:    1
  5074 ;; This function calls:
  5075 ;;		__spi_init
  5076 ;; This function is called by:
  5077 ;;		_flash_init
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           	psect	text14
  5082  007596                     __ptext14:
  5083                           	opt stack 0
  5084  007596                     _spi_init:
  5085                           	opt stack 27
  5086                           
  5087                           ;incstack = 0
  5088                           ;spi_init@configuration stored from wreg
  5089  007596  6E04               	movwf	spi_init@configuration,c
  5090                           
  5091                           ;spi.c: 124: switch(configuration)
  5092  007598  D012               	goto	l2734
  5093  00759A                     
  5094                           ;spi.c: 127: _spi_init(config_internal);
  5095  00759A  C15B  F001         	movff	_config_internal,__spi_init@details
  5096  00759E  C15C  F002         	movff	_config_internal+1,__spi_init@details+1
  5097  0075A2  C15D  F003         	movff	_config_internal+2,__spi_init@details+2
  5098  0075A6  EC60  F03B         	call	__spi_init	;wreg free
  5099                           
  5100                           ;spi.c: 128: break;
  5101  0075AA  D010               	goto	l2736
  5102  0075AC                     
  5103                           ;spi.c: 131: _spi_init(config_external);
  5104  0075AC  C158  F001         	movff	_config_external,__spi_init@details
  5105  0075B0  C159  F002         	movff	_config_external+1,__spi_init@details+1
  5106  0075B4  C15A  F003         	movff	_config_external+2,__spi_init@details+2
  5107  0075B8  EC60  F03B         	call	__spi_init	;wreg free
  5108                           
  5109                           ;spi.c: 133: }
  5110                           
  5111                           ;spi.c: 132: break;
  5112  0075BC  D007               	goto	l2736
  5113  0075BE                     l2734:
  5114  0075BE  5004               	movf	spi_init@configuration,w,c
  5115                           
  5116                           ; Switch size 1, requested type "space"
  5117                           ; Number of cases is 2, Range of values is 0 to 1
  5118                           ; switch strategies available:
  5119                           ; Name         Instructions Cycles
  5120                           ; simple_byte            7     4 (average)
  5121                           ;	Chosen strategy is simple_byte
  5122  0075C0  0A00               	xorlw	0	; case 0
  5123  0075C2  B4D8               	btfsc	status,2,c
  5124  0075C4  D7EA               	goto	l2735
  5125  0075C6  0A01               	xorlw	1	; case 1
  5126  0075C8  B4D8               	btfsc	status,2,c
  5127  0075CA  D7F0               	goto	l2737
  5128  0075CC                     l2736:
  5129                           
  5130                           ;spi.c: 135: active_configuration = configuration;
  5131  0075CC  C004  F094         	movff	spi_init@configuration,_active_configuration
  5132  0075D0  0012               	return		;funcret
  5133  0075D2                     __end_of_spi_init:
  5134                           	opt stack 0
  5135                           tblptru	equ	0xFF8
  5136                           tblptrh	equ	0xFF7
  5137                           tblptrl	equ	0xFF6
  5138                           tablat	equ	0xFF5
  5139                           intcon	equ	0xFF2
  5140                           intcon3	equ	0xFF0
  5141                           postinc0	equ	0xFEE
  5142                           wreg	equ	0xFE8
  5143                           postdec1	equ	0xFE5
  5144                           plusw1	equ	0xFE3
  5145                           fsr1h	equ	0xFE2
  5146                           fsr1l	equ	0xFE1
  5147                           plusw2	equ	0xFDB
  5148                           status	equ	0xFD8
  5149                           
  5150 ;; *************** function __spi_init *****************
  5151 ;; Defined at:
  5152 ;;		line 25 in file "spi.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;  details         3    0[COMRAM] struct .
  5155 ;; Auto vars:     Size  Location     Type
  5156 ;;		None
  5157 ;; Return value:  Size  Location     Type
  5158 ;;                  1    wreg      void 
  5159 ;; Registers used:
  5160 ;;		wreg, status,2
  5161 ;; Tracked objects:
  5162 ;;		On entry : 0/0
  5163 ;;		On exit  : 0/0
  5164 ;;		Unchanged: 0/0
  5165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5166 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5169 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5170 ;;Total ram usage:        3 bytes
  5171 ;; Hardware stack levels used:    1
  5172 ;; This function calls:
  5173 ;;		Nothing
  5174 ;; This function is called by:
  5175 ;;		_spi_init
  5176 ;; This function uses a non-reentrant model
  5177 ;;
  5178                           
  5179                           	psect	text15
  5180  0076C0                     __ptext15:
  5181                           	opt stack 0
  5182  0076C0                     __spi_init:
  5183                           	opt stack 27
  5184                           
  5185                           ;spi.c: 31: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  5186                           
  5187                           ;incstack = 0
  5188  0076C0  0E55               	movlw	85
  5189  0076C2  6EA7               	movwf	4007,c	;volsfr
  5190  0076C4  0EAA               	movlw	170
  5191  0076C6  6EA7               	movwf	4007,c	;volsfr
  5192  0076C8  010E               	movlb	14	; () banked
  5193  0076CA  91BF               	bcf	191,0,b	;volatile
  5194                           
  5195                           ;spi.c: 32: RPINR21 = 23;
  5196  0076CC  0E17               	movlw	23
  5197  0076CE  6FFC               	movwf	252,b	;volatile
  5198                           
  5199                           ;spi.c: 33: RPOR21 = 10;
  5200  0076D0  0E0A               	movlw	10
  5201  0076D2  6FD5               	movwf	213,b	;volatile
  5202                           
  5203                           ;spi.c: 35: RPOR22 = 11;
  5204  0076D4  0E0B               	movlw	11
  5205  0076D6  6FD6               	movwf	214,b	;volatile
  5206                           
  5207                           ;spi.c: 36: RPINR22 = 22;
  5208  0076D8  0E16               	movlw	22
  5209  0076DA  6FFD               	movwf	253,b	;volatile
  5210                           
  5211                           ;spi.c: 37: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  5212  0076DC  0E55               	movlw	85
  5213  0076DE  6EA7               	movwf	4007,c	;volsfr
  5214  0076E0  0EAA               	movlw	170
  5215  0076E2  6EA7               	movwf	4007,c	;volsfr
  5216                           
  5217                           ; BSR set to: 14
  5218  0076E4  81BF               	bsf	191,0,b	;volatile
  5219                           
  5220                           ; BSR set to: 14
  5221                           ;spi.c: 40: SSP2STATbits.SMP = 1;
  5222  0076E6  8E73               	bsf	3955,7,c	;volatile
  5223                           
  5224                           ; BSR set to: 14
  5225                           ;spi.c: 41: SSP2STATbits.CKE = 1;
  5226  0076E8  8C73               	bsf	3955,6,c	;volatile
  5227                           
  5228                           ; BSR set to: 14
  5229                           ;spi.c: 42: SSP2CON1bits.CKP = 0;
  5230  0076EA  9872               	bcf	3954,4,c	;volatile
  5231                           
  5232                           ; BSR set to: 14
  5233                           ;spi.c: 43: SSP2CON1bits.SSPM =0b0000;
  5234  0076EC  9072               	bcf	3954,0,c	;volatile
  5235  0076EE  9272               	bcf	3954,1,c	;volatile
  5236  0076F0  9472               	bcf	3954,2,c	;volatile
  5237  0076F2  9672               	bcf	3954,3,c	;volatile
  5238                           
  5239                           ; BSR set to: 14
  5240                           ;spi.c: 44: SSP2CON1bits.SSPEN = 1;
  5241  0076F4  8A72               	bsf	3954,5,c	;volatile
  5242                           
  5243                           ; BSR set to: 14
  5244  0076F6  0012               	return		;funcret
  5245  0076F8                     __end_of__spi_init:
  5246                           	opt stack 0
  5247                           tblptru	equ	0xFF8
  5248                           tblptrh	equ	0xFF7
  5249                           tblptrl	equ	0xFF6
  5250                           tablat	equ	0xFF5
  5251                           intcon	equ	0xFF2
  5252                           intcon3	equ	0xFF0
  5253                           postinc0	equ	0xFEE
  5254                           wreg	equ	0xFE8
  5255                           postdec1	equ	0xFE5
  5256                           plusw1	equ	0xFE3
  5257                           fsr1h	equ	0xFE2
  5258                           fsr1l	equ	0xFE1
  5259                           plusw2	equ	0xFDB
  5260                           status	equ	0xFD8
  5261                           
  5262 ;; *************** function __flash_set_page_size *****************
  5263 ;; Defined at:
  5264 ;;		line 95 in file "flash.c"
  5265 ;; Parameters:    Size  Location     Type
  5266 ;;  size            1    wreg     enum E6870
  5267 ;; Auto vars:     Size  Location     Type
  5268 ;;  size            1   23[COMRAM] enum E6870
  5269 ;;  command         4   19[COMRAM] unsigned char [4]
  5270 ;; Return value:  Size  Location     Type
  5271 ;;                  1    wreg      void 
  5272 ;; Registers used:
  5273 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5274 ;; Tracked objects:
  5275 ;;		On entry : 0/0
  5276 ;;		On exit  : 0/0
  5277 ;;		Unchanged: 0/0
  5278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5280 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5282 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5283 ;;Total ram usage:        5 bytes
  5284 ;; Hardware stack levels used:    1
  5285 ;; Hardware stack levels required when called:    3
  5286 ;; This function calls:
  5287 ;;		__flash_is_busy
  5288 ;;		_memcpy
  5289 ;;		_spi_tx
  5290 ;; This function is called by:
  5291 ;;		_flash_init
  5292 ;; This function uses a non-reentrant model
  5293 ;;
  5294                           
  5295                           	psect	text16
  5296  0063D2                     __ptext16:
  5297                           	opt stack 0
  5298  0063D2                     __flash_set_page_size:
  5299                           	opt stack 25
  5300                           
  5301                           ; BSR set to: 14
  5302                           ;incstack = 0
  5303                           ;__flash_set_page_size@size stored from wreg
  5304  0063D2  6E18               	movwf	__flash_set_page_size@size,c
  5305  0063D4                     
  5306                           ;flash.c: 97: uint8_t command[4];;flash.c: 100: while(_flash_is_busy());
  5307  0063D4  ECEE  F03D         	call	__flash_is_busy	;wreg free
  5308  0063D8  0900               	iorlw	0
  5309  0063DA  A4D8               	btfss	status,2,c
  5310  0063DC  D7FB               	goto	l12512
  5311                           
  5312                           ;flash.c: 103: if(size==FLASH_PAGE_SIZE_512)
  5313  0063DE  5018               	movf	__flash_set_page_size@size,w,c
  5314  0063E0  A4D8               	btfss	status,2,c
  5315  0063E2  D013               	goto	l1681
  5316                           
  5317                           ;flash.c: 104: memcpy(command, flash_command_pagesize_512, 4);
  5318  0063E4  0E14               	movlw	low __flash_set_page_size@command
  5319  0063E6  6E01               	movwf	memcpy@d1,c
  5320  0063E8  0E00               	movlw	high __flash_set_page_size@command
  5321  0063EA  6E02               	movwf	memcpy@d1+1,c
  5322  0063EC  0EC3               	movlw	low _flash_command_pagesize_512
  5323  0063EE  6E03               	movwf	memcpy@s1,c
  5324  0063F0  0E8F               	movlw	high _flash_command_pagesize_512
  5325  0063F2  6E04               	movwf	memcpy@s1+1,c
  5326  0063F4  5003               	movf	memcpy@s1,w,c
  5327  0063F6  1004               	iorwf	memcpy@s1+1,w,c
  5328  0063F8  A4D8               	btfss	status,2,c
  5329  0063FA  0E00               	movlw	low (__mediumconst shr (0+16))
  5330  0063FC  6E05               	movwf	memcpy@s1+2,c
  5331  0063FE  0E00               	movlw	0
  5332  006400  6E07               	movwf	memcpy@n+1,c
  5333  006402  0E04               	movlw	4
  5334  006404  6E06               	movwf	memcpy@n,c
  5335  006406  EC9F  F035         	call	_memcpy	;wreg free
  5336  00640A                     l1681:
  5337                           
  5338                           ;flash.c: 105: if(size==FLASH_PAGE_SIZE_528)
  5339  00640A  0418               	decf	__flash_set_page_size@size,w,c
  5340  00640C  A4D8               	btfss	status,2,c
  5341  00640E  D013               	goto	l1682
  5342                           
  5343                           ;flash.c: 106: memcpy(command, flash_command_pagesize_528, 4);
  5344  006410  0E14               	movlw	low __flash_set_page_size@command
  5345  006412  6E01               	movwf	memcpy@d1,c
  5346  006414  0E00               	movlw	high __flash_set_page_size@command
  5347  006416  6E02               	movwf	memcpy@d1+1,c
  5348  006418  0EBF               	movlw	low _flash_command_pagesize_528
  5349  00641A  6E03               	movwf	memcpy@s1,c
  5350  00641C  0E8F               	movlw	high _flash_command_pagesize_528
  5351  00641E  6E04               	movwf	memcpy@s1+1,c
  5352  006420  5003               	movf	memcpy@s1,w,c
  5353  006422  1004               	iorwf	memcpy@s1+1,w,c
  5354  006424  A4D8               	btfss	status,2,c
  5355  006426  0E00               	movlw	low (__mediumconst shr (0+16))
  5356  006428  6E05               	movwf	memcpy@s1+2,c
  5357  00642A  0E00               	movlw	0
  5358  00642C  6E07               	movwf	memcpy@n+1,c
  5359  00642E  0E04               	movlw	4
  5360  006430  6E06               	movwf	memcpy@n,c
  5361  006432  EC9F  F035         	call	_memcpy	;wreg free
  5362  006436                     l1682:
  5363                           
  5364                           ;flash.c: 109: spi_tx(command, 4);
  5365  006436  0E14               	movlw	low __flash_set_page_size@command
  5366  006438  6E01               	movwf	spi_tx@data,c
  5367  00643A  0E00               	movlw	high __flash_set_page_size@command
  5368  00643C  6E02               	movwf	spi_tx@data+1,c
  5369  00643E  0E00               	movlw	0
  5370  006440  6E04               	movwf	spi_tx@length+1,c
  5371  006442  0E04               	movlw	4
  5372  006444  6E03               	movwf	spi_tx@length,c
  5373  006446  ECCB  F037         	call	_spi_tx	;wreg free
  5374  00644A  0012               	return		;funcret
  5375  00644C                     __end_of__flash_set_page_size:
  5376                           	opt stack 0
  5377                           tblptru	equ	0xFF8
  5378                           tblptrh	equ	0xFF7
  5379                           tblptrl	equ	0xFF6
  5380                           tablat	equ	0xFF5
  5381                           intcon	equ	0xFF2
  5382                           intcon3	equ	0xFF0
  5383                           postinc0	equ	0xFEE
  5384                           wreg	equ	0xFE8
  5385                           postdec1	equ	0xFE5
  5386                           plusw1	equ	0xFE3
  5387                           fsr1h	equ	0xFE2
  5388                           fsr1l	equ	0xFE1
  5389                           plusw2	equ	0xFDB
  5390                           status	equ	0xFD8
  5391                           
  5392 ;; *************** function _fat_init *****************
  5393 ;; Defined at:
  5394 ;;		line 1011 in file "fat16.c"
  5395 ;; Parameters:    Size  Location     Type
  5396 ;;		None
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;		None
  5399 ;; Return value:  Size  Location     Type
  5400 ;;                  1    wreg      void 
  5401 ;; Registers used:
  5402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5403 ;; Tracked objects:
  5404 ;;		On entry : 0/0
  5405 ;;		On exit  : 0/0
  5406 ;;		Unchanged: 0/0
  5407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5412 ;;Total ram usage:        0 bytes
  5413 ;; Hardware stack levels used:    1
  5414 ;; Hardware stack levels required when called:    6
  5415 ;; This function calls:
  5416 ;;		_fat_format
  5417 ;;		_fat_get_format_status
  5418 ;; This function is called by:
  5419 ;;		_system_init
  5420 ;; This function uses a non-reentrant model
  5421 ;;
  5422                           
  5423                           	psect	text17
  5424  007D48                     __ptext17:
  5425                           	opt stack 0
  5426  007D48                     _fat_init:
  5427                           	opt stack 23
  5428                           
  5429                           ;fat16.c: 1014: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  5430                           
  5431                           ;incstack = 0
  5432  007D48  EC2E  F02C         	call	_fat_get_format_status	;wreg free
  5433  007D4C  0900               	iorlw	0
  5434  007D4E  A4D8               	btfss	status,2,c
  5435  007D50  0012               	return	
  5436                           
  5437                           ;fat16.c: 1015: {;fat16.c: 1016: fat_format();
  5438  007D52  ECA9  F012         	call	_fat_format	;wreg free
  5439  007D56  0012               	return	
  5440  007D58                     __end_of_fat_init:
  5441                           	opt stack 0
  5442                           tblptru	equ	0xFF8
  5443                           tblptrh	equ	0xFF7
  5444                           tblptrl	equ	0xFF6
  5445                           tablat	equ	0xFF5
  5446                           intcon	equ	0xFF2
  5447                           intcon3	equ	0xFF0
  5448                           postinc0	equ	0xFEE
  5449                           wreg	equ	0xFE8
  5450                           postdec1	equ	0xFE5
  5451                           plusw1	equ	0xFE3
  5452                           fsr1h	equ	0xFE2
  5453                           fsr1l	equ	0xFE1
  5454                           plusw2	equ	0xFDB
  5455                           status	equ	0xFD8
  5456                           
  5457 ;; *************** function _fat_get_format_status *****************
  5458 ;; Defined at:
  5459 ;;		line 923 in file "fat16.c"
  5460 ;; Parameters:    Size  Location     Type
  5461 ;;		None
  5462 ;; Auto vars:     Size  Location     Type
  5463 ;;  cntr            2   45[COMRAM] unsigned int 
  5464 ;; Return value:  Size  Location     Type
  5465 ;;                  1    wreg      enum E6856
  5466 ;; Registers used:
  5467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5468 ;; Tracked objects:
  5469 ;;		On entry : 0/0
  5470 ;;		On exit  : 0/0
  5471 ;;		Unchanged: 0/0
  5472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5474 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5475 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5476 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5477 ;;Total ram usage:        4 bytes
  5478 ;; Hardware stack levels used:    1
  5479 ;; Hardware stack levels required when called:    5
  5480 ;; This function calls:
  5481 ;;		__get_fbr
  5482 ;;		__get_mbr
  5483 ;;		_flash_page_read
  5484 ;; This function is called by:
  5485 ;;		_fat_init
  5486 ;; This function uses a non-reentrant model
  5487 ;;
  5488                           
  5489                           	psect	text18
  5490  00585C                     __ptext18:
  5491                           	opt stack 0
  5492  00585C                     _fat_get_format_status:
  5493                           	opt stack 23
  5494                           
  5495                           ;fat16.c: 925: uint16_t cntr;;fat16.c: 928: flash_page_read(0, buffer);
  5496                           
  5497                           ;incstack = 0
  5498  00585C  0E00               	movlw	0
  5499  00585E  6E29               	movwf	flash_page_read@page+1,c
  5500  005860  0E00               	movlw	0
  5501  005862  6E28               	movwf	flash_page_read@page,c
  5502  005864  0E40               	movlw	low _buffer
  5503  005866  6E2A               	movwf	flash_page_read@data,c
  5504  005868  0E03               	movlw	high _buffer
  5505  00586A  6E2B               	movwf	flash_page_read@data+1,c
  5506  00586C  EC37  F03C         	call	_flash_page_read	;wreg free
  5507                           
  5508                           ;fat16.c: 929: for(cntr=0; cntr<512; ++cntr)
  5509  005870  0E00               	movlw	0
  5510  005872  6E2F               	movwf	fat_get_format_status@cntr+1,c
  5511  005874  0E00               	movlw	0
  5512  005876  6E2E               	movwf	fat_get_format_status@cntr,c
  5513  005878                     l12540:
  5514  005878  0E02               	movlw	2
  5515  00587A  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  5516  00587C  B0D8               	btfsc	status,0,c
  5517  00587E  D016               	goto	u9450
  5518                           
  5519                           ;fat16.c: 930: {;fat16.c: 931: if(buffer[cntr] != _get_mbr(cntr))
  5520  005880  0E40               	movlw	low _buffer
  5521  005882  242E               	addwf	fat_get_format_status@cntr,w,c
  5522  005884  6ED9               	movwf	fsr2l,c
  5523  005886  0E03               	movlw	high _buffer
  5524  005888  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  5525  00588A  6EDA               	movwf	fsr2h,c
  5526  00588C  C02E  F001         	movff	fat_get_format_status@cntr,__get_mbr@idx
  5527  005890  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  5528  005894  ECAE  F026         	call	__get_mbr	;wreg free
  5529  005898  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  5530  00589A  50DE               	movf	postinc2,w,c
  5531  00589C  182D               	xorwf	??_fat_get_format_status+1,w,c
  5532  00589E  B4D8               	btfsc	status,2,c
  5533  0058A0  D002               	goto	l2101
  5534                           
  5535                           ;fat16.c: 932: {;fat16.c: 933: return DRIVE_NOT_FORMATED;
  5536  0058A2  0E00               	movlw	0
  5537  0058A4  0012               	return	
  5538  0058A6                     l2101:
  5539  0058A6  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  5540  0058A8  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  5541  0058AA  D7E6               	goto	l12540
  5542  0058AC                     u9450:
  5543                           
  5544                           ;fat16.c: 934: };fat16.c: 935: };fat16.c: 938: flash_page_read(1, buffer);
  5545  0058AC  0E00               	movlw	0
  5546  0058AE  6E29               	movwf	flash_page_read@page+1,c
  5547  0058B0  0E01               	movlw	1
  5548  0058B2  6E28               	movwf	flash_page_read@page,c
  5549  0058B4  0E40               	movlw	low _buffer
  5550  0058B6  6E2A               	movwf	flash_page_read@data,c
  5551  0058B8  0E03               	movlw	high _buffer
  5552  0058BA  6E2B               	movwf	flash_page_read@data+1,c
  5553  0058BC  EC37  F03C         	call	_flash_page_read	;wreg free
  5554                           
  5555                           ;fat16.c: 939: for(cntr=0; cntr<512; ++cntr)
  5556  0058C0  0E00               	movlw	0
  5557  0058C2  6E2F               	movwf	fat_get_format_status@cntr+1,c
  5558  0058C4  0E00               	movlw	0
  5559  0058C6  6E2E               	movwf	fat_get_format_status@cntr,c
  5560  0058C8                     l12558:
  5561  0058C8  0E02               	movlw	2
  5562  0058CA  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  5563  0058CC  B0D8               	btfsc	status,0,c
  5564  0058CE  D016               	goto	u9480
  5565                           
  5566                           ;fat16.c: 940: {;fat16.c: 941: if(buffer[cntr] != _get_fbr(cntr))
  5567  0058D0  0E40               	movlw	low _buffer
  5568  0058D2  242E               	addwf	fat_get_format_status@cntr,w,c
  5569  0058D4  6ED9               	movwf	fsr2l,c
  5570  0058D6  0E03               	movlw	high _buffer
  5571  0058D8  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  5572  0058DA  6EDA               	movwf	fsr2h,c
  5573  0058DC  C02E  F001         	movff	fat_get_format_status@cntr,__get_fbr@idx
  5574  0058E0  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  5575  0058E4  EC1B  F00D         	call	__get_fbr	;wreg free
  5576  0058E8  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  5577  0058EA  50DE               	movf	postinc2,w,c
  5578  0058EC  182D               	xorwf	??_fat_get_format_status+1,w,c
  5579  0058EE  B4D8               	btfsc	status,2,c
  5580  0058F0  D002               	goto	l2105
  5581                           
  5582                           ;fat16.c: 942: {;fat16.c: 943: return DRIVE_NOT_FORMATED;
  5583  0058F2  0E00               	movlw	0
  5584  0058F4  0012               	return	
  5585  0058F6                     l2105:
  5586  0058F6  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  5587  0058F8  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  5588  0058FA  D7E6               	goto	l12558
  5589  0058FC                     u9480:
  5590                           
  5591                           ;fat16.c: 944: };fat16.c: 945: };fat16.c: 948: return DRIVE_FORMATED;
  5592  0058FC  0E01               	movlw	1
  5593  0058FE  0012               	return	
  5594  005900                     __end_of_fat_get_format_status:
  5595                           	opt stack 0
  5596                           tblptru	equ	0xFF8
  5597                           tblptrh	equ	0xFF7
  5598                           tblptrl	equ	0xFF6
  5599                           tablat	equ	0xFF5
  5600                           intcon	equ	0xFF2
  5601                           intcon3	equ	0xFF0
  5602                           postinc0	equ	0xFEE
  5603                           wreg	equ	0xFE8
  5604                           postdec1	equ	0xFE5
  5605                           plusw1	equ	0xFE3
  5606                           fsr1h	equ	0xFE2
  5607                           fsr1l	equ	0xFE1
  5608                           postinc2	equ	0xFDE
  5609                           plusw2	equ	0xFDB
  5610                           fsr2h	equ	0xFDA
  5611                           fsr2l	equ	0xFD9
  5612                           status	equ	0xFD8
  5613                           
  5614 ;; *************** function _fat_format *****************
  5615 ;; Defined at:
  5616 ;;		line 951 in file "fat16.c"
  5617 ;; Parameters:    Size  Location     Type
  5618 ;;		None
  5619 ;; Auto vars:     Size  Location     Type
  5620 ;;  cntr            2   36[COMRAM] unsigned int 
  5621 ;; Return value:  Size  Location     Type
  5622 ;;                  1    wreg      void 
  5623 ;; Registers used:
  5624 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5625 ;; Tracked objects:
  5626 ;;		On entry : 0/0
  5627 ;;		On exit  : 0/0
  5628 ;;		Unchanged: 0/0
  5629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5631 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5633 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5634 ;;Total ram usage:        2 bytes
  5635 ;; Hardware stack levels used:    1
  5636 ;; Hardware stack levels required when called:    5
  5637 ;; This function calls:
  5638 ;;		__get_data
  5639 ;;		__get_fat
  5640 ;;		__get_fbr
  5641 ;;		__get_mbr
  5642 ;;		__get_root
  5643 ;;		_flash_page_write
  5644 ;; This function is called by:
  5645 ;;		_fat_init
  5646 ;; This function uses a non-reentrant model
  5647 ;;
  5648                           
  5649                           	psect	text19
  5650  002552                     __ptext19:
  5651                           	opt stack 0
  5652  002552                     _fat_format:
  5653                           	opt stack 23
  5654                           
  5655                           ;fat16.c: 953: uint16_t cntr;;fat16.c: 956: for(cntr=0; cntr<512; ++cntr)
  5656                           
  5657                           ;incstack = 0
  5658  002552  0E00               	movlw	0
  5659  002554  6E26               	movwf	fat_format@cntr+1,c
  5660  002556  0E00               	movlw	0
  5661  002558  6E25               	movwf	fat_format@cntr,c
  5662  00255A                     l12578:
  5663  00255A  0E02               	movlw	2
  5664  00255C  5C26               	subwf	fat_format@cntr+1,w,c
  5665  00255E  B0D8               	btfsc	status,0,c
  5666  002560  D010               	goto	u9500
  5667                           
  5668                           ;fat16.c: 957: {;fat16.c: 958: buffer[cntr] = _get_mbr(cntr);
  5669  002562  0E40               	movlw	low _buffer
  5670  002564  2425               	addwf	fat_format@cntr,w,c
  5671  002566  6ED9               	movwf	fsr2l,c
  5672  002568  0E03               	movlw	high _buffer
  5673  00256A  2026               	addwfc	fat_format@cntr+1,w,c
  5674  00256C  6EDA               	movwf	fsr2h,c
  5675  00256E  C025  F001         	movff	fat_format@cntr,__get_mbr@idx
  5676  002572  C026  F002         	movff	fat_format@cntr+1,__get_mbr@idx+1
  5677  002576  ECAE  F026         	call	__get_mbr	;wreg free
  5678  00257A  6EDF               	movwf	indf2,c
  5679  00257C  4A25               	infsnz	fat_format@cntr,f,c
  5680  00257E  2A26               	incf	fat_format@cntr+1,f,c
  5681  002580  D7EC               	goto	l12578
  5682  002582                     u9500:
  5683                           
  5684                           ;fat16.c: 959: };fat16.c: 960: flash_page_write(0, buffer);
  5685  002582  0E00               	movlw	0
  5686  002584  6E21               	movwf	flash_page_write@page+1,c
  5687  002586  0E00               	movlw	0
  5688  002588  6E20               	movwf	flash_page_write@page,c
  5689  00258A  0E40               	movlw	low _buffer
  5690  00258C  6E22               	movwf	flash_page_write@data,c
  5691  00258E  0E03               	movlw	high _buffer
  5692  002590  6E23               	movwf	flash_page_write@data+1,c
  5693  002592  EC78  F038         	call	_flash_page_write	;wreg free
  5694                           
  5695                           ;fat16.c: 963: for(cntr=0; cntr<512; ++cntr)
  5696  002596  0E00               	movlw	0
  5697  002598  6E26               	movwf	fat_format@cntr+1,c
  5698  00259A  0E00               	movlw	0
  5699  00259C  6E25               	movwf	fat_format@cntr,c
  5700  00259E                     l12592:
  5701  00259E  0E02               	movlw	2
  5702  0025A0  5C26               	subwf	fat_format@cntr+1,w,c
  5703  0025A2  B0D8               	btfsc	status,0,c
  5704  0025A4  D010               	goto	u9520
  5705                           
  5706                           ;fat16.c: 964: {;fat16.c: 965: buffer[cntr] = _get_fbr(cntr);
  5707  0025A6  0E40               	movlw	low _buffer
  5708  0025A8  2425               	addwf	fat_format@cntr,w,c
  5709  0025AA  6ED9               	movwf	fsr2l,c
  5710  0025AC  0E03               	movlw	high _buffer
  5711  0025AE  2026               	addwfc	fat_format@cntr+1,w,c
  5712  0025B0  6EDA               	movwf	fsr2h,c
  5713  0025B2  C025  F001         	movff	fat_format@cntr,__get_fbr@idx
  5714  0025B6  C026  F002         	movff	fat_format@cntr+1,__get_fbr@idx+1
  5715  0025BA  EC1B  F00D         	call	__get_fbr	;wreg free
  5716  0025BE  6EDF               	movwf	indf2,c
  5717  0025C0  4A25               	infsnz	fat_format@cntr,f,c
  5718  0025C2  2A26               	incf	fat_format@cntr+1,f,c
  5719  0025C4  D7EC               	goto	l12592
  5720  0025C6                     u9520:
  5721                           
  5722                           ;fat16.c: 966: };fat16.c: 967: flash_page_write(1, buffer);
  5723  0025C6  0E00               	movlw	0
  5724  0025C8  6E21               	movwf	flash_page_write@page+1,c
  5725  0025CA  0E01               	movlw	1
  5726  0025CC  6E20               	movwf	flash_page_write@page,c
  5727  0025CE  0E40               	movlw	low _buffer
  5728  0025D0  6E22               	movwf	flash_page_write@data,c
  5729  0025D2  0E03               	movlw	high _buffer
  5730  0025D4  6E23               	movwf	flash_page_write@data+1,c
  5731  0025D6  EC78  F038         	call	_flash_page_write	;wreg free
  5732                           
  5733                           ;fat16.c: 970: for(cntr=0; cntr<512; ++cntr)
  5734  0025DA  0E00               	movlw	0
  5735  0025DC  6E26               	movwf	fat_format@cntr+1,c
  5736  0025DE  0E00               	movlw	0
  5737  0025E0  6E25               	movwf	fat_format@cntr,c
  5738  0025E2                     l12606:
  5739  0025E2  0E02               	movlw	2
  5740  0025E4  5C26               	subwf	fat_format@cntr+1,w,c
  5741  0025E6  B0D8               	btfsc	status,0,c
  5742  0025E8  D010               	goto	u9540
  5743                           
  5744                           ;fat16.c: 971: {;fat16.c: 972: buffer[cntr] = _get_fat(cntr);
  5745  0025EA  0E40               	movlw	low _buffer
  5746  0025EC  2425               	addwf	fat_format@cntr,w,c
  5747  0025EE  6ED9               	movwf	fsr2l,c
  5748  0025F0  0E03               	movlw	high _buffer
  5749  0025F2  2026               	addwfc	fat_format@cntr+1,w,c
  5750  0025F4  6EDA               	movwf	fsr2h,c
  5751  0025F6  C025  F001         	movff	fat_format@cntr,__get_fat@idx
  5752  0025FA  C026  F002         	movff	fat_format@cntr+1,__get_fat@idx+1
  5753  0025FE  ECF7  F037         	call	__get_fat	;wreg free
  5754  002602  6EDF               	movwf	indf2,c
  5755  002604  4A25               	infsnz	fat_format@cntr,f,c
  5756  002606  2A26               	incf	fat_format@cntr+1,f,c
  5757  002608  D7EC               	goto	l12606
  5758  00260A                     u9540:
  5759                           
  5760                           ;fat16.c: 973: };fat16.c: 974: flash_page_write(2, buffer);
  5761  00260A  0E00               	movlw	0
  5762  00260C  6E21               	movwf	flash_page_write@page+1,c
  5763  00260E  0E02               	movlw	2
  5764  002610  6E20               	movwf	flash_page_write@page,c
  5765  002612  0E40               	movlw	low _buffer
  5766  002614  6E22               	movwf	flash_page_write@data,c
  5767  002616  0E03               	movlw	high _buffer
  5768  002618  6E23               	movwf	flash_page_write@data+1,c
  5769  00261A  EC78  F038         	call	_flash_page_write	;wreg free
  5770                           
  5771                           ;fat16.c: 977: for(cntr=0; cntr<512; ++cntr)
  5772  00261E  0E00               	movlw	0
  5773  002620  6E26               	movwf	fat_format@cntr+1,c
  5774  002622  0E00               	movlw	0
  5775  002624  6E25               	movwf	fat_format@cntr,c
  5776  002626                     l12620:
  5777  002626  0E02               	movlw	2
  5778  002628  5C26               	subwf	fat_format@cntr+1,w,c
  5779  00262A  B0D8               	btfsc	status,0,c
  5780  00262C  D00B               	goto	u9560
  5781                           
  5782                           ;fat16.c: 978: {;fat16.c: 979: buffer[cntr] = 0x00;
  5783  00262E  0E40               	movlw	low _buffer
  5784  002630  2425               	addwf	fat_format@cntr,w,c
  5785  002632  6ED9               	movwf	fsr2l,c
  5786  002634  0E03               	movlw	high _buffer
  5787  002636  2026               	addwfc	fat_format@cntr+1,w,c
  5788  002638  6EDA               	movwf	fsr2h,c
  5789  00263A  0E00               	movlw	0
  5790  00263C  6EDF               	movwf	indf2,c
  5791  00263E  4A25               	infsnz	fat_format@cntr,f,c
  5792  002640  2A26               	incf	fat_format@cntr+1,f,c
  5793  002642  D7F1               	goto	l12620
  5794  002644                     u9560:
  5795                           
  5796                           ;fat16.c: 980: };fat16.c: 981: for(cntr=3; cntr<=17; ++cntr)
  5797  002644  0E00               	movlw	0
  5798  002646  6E26               	movwf	fat_format@cntr+1,c
  5799  002648  0E03               	movlw	3
  5800  00264A  6E25               	movwf	fat_format@cntr,c
  5801  00264C                     l12632:
  5802  00264C  5026               	movf	fat_format@cntr+1,w,c
  5803  00264E  E111               	bnz	l12642
  5804  002650  0E12               	movlw	18
  5805  002652  5C25               	subwf	fat_format@cntr,w,c
  5806  002654  B0D8               	btfsc	status,0,c
  5807  002656  D00D               	goto	u9580
  5808                           
  5809                           ;fat16.c: 982: {;fat16.c: 983: flash_page_write(cntr, buffer);
  5810  002658  C025  F020         	movff	fat_format@cntr,flash_page_write@page
  5811  00265C  C026  F021         	movff	fat_format@cntr+1,flash_page_write@page+1
  5812  002660  0E40               	movlw	low _buffer
  5813  002662  6E22               	movwf	flash_page_write@data,c
  5814  002664  0E03               	movlw	high _buffer
  5815  002666  6E23               	movwf	flash_page_write@data+1,c
  5816  002668  EC78  F038         	call	_flash_page_write	;wreg free
  5817  00266C  4A25               	infsnz	fat_format@cntr,f,c
  5818  00266E  2A26               	incf	fat_format@cntr+1,f,c
  5819  002670  D7ED               	goto	l12632
  5820  002672                     u9580:
  5821  002672                     l12642:
  5822                           
  5823                           ;fat16.c: 984: };fat16.c: 987: for(cntr=0; cntr<512; ++cntr)
  5824  002672  0E00               	movlw	0
  5825  002674  6E26               	movwf	fat_format@cntr+1,c
  5826  002676  0E00               	movlw	0
  5827  002678  6E25               	movwf	fat_format@cntr,c
  5828  00267A                     l12644:
  5829  00267A  0E02               	movlw	2
  5830  00267C  5C26               	subwf	fat_format@cntr+1,w,c
  5831  00267E  B0D8               	btfsc	status,0,c
  5832  002680  D010               	goto	u9600
  5833                           
  5834                           ;fat16.c: 988: {;fat16.c: 989: buffer[cntr] = _get_root(cntr);
  5835  002682  0E40               	movlw	low _buffer
  5836  002684  2425               	addwf	fat_format@cntr,w,c
  5837  002686  6ED9               	movwf	fsr2l,c
  5838  002688  0E03               	movlw	high _buffer
  5839  00268A  2026               	addwfc	fat_format@cntr+1,w,c
  5840  00268C  6EDA               	movwf	fsr2h,c
  5841  00268E  C025  F001         	movff	fat_format@cntr,__get_root@idx
  5842  002692  C026  F002         	movff	fat_format@cntr+1,__get_root@idx+1
  5843  002696  EC43  F018         	call	__get_root	;wreg free
  5844  00269A  6EDF               	movwf	indf2,c
  5845  00269C  4A25               	infsnz	fat_format@cntr,f,c
  5846  00269E  2A26               	incf	fat_format@cntr+1,f,c
  5847  0026A0  D7EC               	goto	l12644
  5848  0026A2                     u9600:
  5849                           
  5850                           ;fat16.c: 990: };fat16.c: 991: flash_page_write(18, buffer);
  5851  0026A2  0E00               	movlw	0
  5852  0026A4  6E21               	movwf	flash_page_write@page+1,c
  5853  0026A6  0E12               	movlw	18
  5854  0026A8  6E20               	movwf	flash_page_write@page,c
  5855  0026AA  0E40               	movlw	low _buffer
  5856  0026AC  6E22               	movwf	flash_page_write@data,c
  5857  0026AE  0E03               	movlw	high _buffer
  5858  0026B0  6E23               	movwf	flash_page_write@data+1,c
  5859  0026B2  EC78  F038         	call	_flash_page_write	;wreg free
  5860                           
  5861                           ;fat16.c: 994: for(cntr=0; cntr<512; ++cntr)
  5862  0026B6  0E00               	movlw	0
  5863  0026B8  6E26               	movwf	fat_format@cntr+1,c
  5864  0026BA  0E00               	movlw	0
  5865  0026BC  6E25               	movwf	fat_format@cntr,c
  5866  0026BE                     l12658:
  5867  0026BE  0E02               	movlw	2
  5868  0026C0  5C26               	subwf	fat_format@cntr+1,w,c
  5869  0026C2  B0D8               	btfsc	status,0,c
  5870  0026C4  D00B               	goto	u9620
  5871                           
  5872                           ;fat16.c: 995: {;fat16.c: 996: buffer[cntr] = 0x00;
  5873  0026C6  0E40               	movlw	low _buffer
  5874  0026C8  2425               	addwf	fat_format@cntr,w,c
  5875  0026CA  6ED9               	movwf	fsr2l,c
  5876  0026CC  0E03               	movlw	high _buffer
  5877  0026CE  2026               	addwfc	fat_format@cntr+1,w,c
  5878  0026D0  6EDA               	movwf	fsr2h,c
  5879  0026D2  0E00               	movlw	0
  5880  0026D4  6EDF               	movwf	indf2,c
  5881  0026D6  4A25               	infsnz	fat_format@cntr,f,c
  5882  0026D8  2A26               	incf	fat_format@cntr+1,f,c
  5883  0026DA  D7F1               	goto	l12658
  5884  0026DC                     u9620:
  5885                           
  5886                           ;fat16.c: 997: };fat16.c: 998: for(cntr=19; cntr<=21; ++cntr)
  5887  0026DC  0E00               	movlw	0
  5888  0026DE  6E26               	movwf	fat_format@cntr+1,c
  5889  0026E0  0E13               	movlw	19
  5890  0026E2  6E25               	movwf	fat_format@cntr,c
  5891  0026E4                     l12670:
  5892  0026E4  5026               	movf	fat_format@cntr+1,w,c
  5893  0026E6  E111               	bnz	l12680
  5894  0026E8  0E16               	movlw	22
  5895  0026EA  5C25               	subwf	fat_format@cntr,w,c
  5896  0026EC  B0D8               	btfsc	status,0,c
  5897  0026EE  D00D               	goto	u9640
  5898                           
  5899                           ;fat16.c: 999: {;fat16.c: 1000: flash_page_write(cntr, buffer);
  5900  0026F0  C025  F020         	movff	fat_format@cntr,flash_page_write@page
  5901  0026F4  C026  F021         	movff	fat_format@cntr+1,flash_page_write@page+1
  5902  0026F8  0E40               	movlw	low _buffer
  5903  0026FA  6E22               	movwf	flash_page_write@data,c
  5904  0026FC  0E03               	movlw	high _buffer
  5905  0026FE  6E23               	movwf	flash_page_write@data+1,c
  5906  002700  EC78  F038         	call	_flash_page_write	;wreg free
  5907  002704  4A25               	infsnz	fat_format@cntr,f,c
  5908  002706  2A26               	incf	fat_format@cntr+1,f,c
  5909  002708  D7ED               	goto	l12670
  5910  00270A                     u9640:
  5911  00270A                     l12680:
  5912                           
  5913                           ;fat16.c: 1001: };fat16.c: 1004: for(cntr=0; cntr<512; ++cntr)
  5914  00270A  0E00               	movlw	0
  5915  00270C  6E26               	movwf	fat_format@cntr+1,c
  5916  00270E  0E00               	movlw	0
  5917  002710  6E25               	movwf	fat_format@cntr,c
  5918  002712                     l12682:
  5919  002712  0E02               	movlw	2
  5920  002714  5C26               	subwf	fat_format@cntr+1,w,c
  5921  002716  B0D8               	btfsc	status,0,c
  5922  002718  D010               	goto	u9660
  5923                           
  5924                           ;fat16.c: 1005: {;fat16.c: 1006: buffer[cntr] = _get_data(cntr);
  5925  00271A  0E40               	movlw	low _buffer
  5926  00271C  2425               	addwf	fat_format@cntr,w,c
  5927  00271E  6ED9               	movwf	fsr2l,c
  5928  002720  0E03               	movlw	high _buffer
  5929  002722  2026               	addwfc	fat_format@cntr+1,w,c
  5930  002724  6EDA               	movwf	fsr2h,c
  5931  002726  C025  F001         	movff	fat_format@cntr,__get_data@idx
  5932  00272A  C026  F002         	movff	fat_format@cntr+1,__get_data@idx+1
  5933  00272E  EC37  F03D         	call	__get_data	;wreg free
  5934  002732  6EDF               	movwf	indf2,c
  5935  002734  4A25               	infsnz	fat_format@cntr,f,c
  5936  002736  2A26               	incf	fat_format@cntr+1,f,c
  5937  002738  D7EC               	goto	l12682
  5938  00273A                     u9660:
  5939                           
  5940                           ;fat16.c: 1007: };fat16.c: 1008: flash_page_write(22, buffer);
  5941  00273A  0E00               	movlw	0
  5942  00273C  6E21               	movwf	flash_page_write@page+1,c
  5943  00273E  0E16               	movlw	22
  5944  002740  6E20               	movwf	flash_page_write@page,c
  5945  002742  0E40               	movlw	low _buffer
  5946  002744  6E22               	movwf	flash_page_write@data,c
  5947  002746  0E03               	movlw	high _buffer
  5948  002748  6E23               	movwf	flash_page_write@data+1,c
  5949  00274A  EC78  F038         	call	_flash_page_write	;wreg free
  5950  00274E  0012               	return		;funcret
  5951  002750                     __end_of_fat_format:
  5952                           	opt stack 0
  5953                           tblptru	equ	0xFF8
  5954                           tblptrh	equ	0xFF7
  5955                           tblptrl	equ	0xFF6
  5956                           tablat	equ	0xFF5
  5957                           intcon	equ	0xFF2
  5958                           intcon3	equ	0xFF0
  5959                           postinc0	equ	0xFEE
  5960                           wreg	equ	0xFE8
  5961                           postdec1	equ	0xFE5
  5962                           plusw1	equ	0xFE3
  5963                           fsr1h	equ	0xFE2
  5964                           fsr1l	equ	0xFE1
  5965                           indf2	equ	0xFDF
  5966                           postinc2	equ	0xFDE
  5967                           plusw2	equ	0xFDB
  5968                           fsr2h	equ	0xFDA
  5969                           fsr2l	equ	0xFD9
  5970                           status	equ	0xFD8
  5971                           
  5972 ;; *************** function __get_root *****************
  5973 ;; Defined at:
  5974 ;;		line 837 in file "fat16.c"
  5975 ;; Parameters:    Size  Location     Type
  5976 ;;  idx             2    0[COMRAM] unsigned int 
  5977 ;; Auto vars:     Size  Location     Type
  5978 ;;		None
  5979 ;; Return value:  Size  Location     Type
  5980 ;;                  1    wreg      unsigned char 
  5981 ;; Registers used:
  5982 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5983 ;; Tracked objects:
  5984 ;;		On entry : 0/0
  5985 ;;		On exit  : 0/0
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5988 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5990 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5991 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5992 ;;Total ram usage:        6 bytes
  5993 ;; Hardware stack levels used:    1
  5994 ;; This function calls:
  5995 ;;		Nothing
  5996 ;; This function is called by:
  5997 ;;		_fat_format
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           	psect	text20
  6002  003086                     __ptext20:
  6003                           	opt stack 0
  6004  003086                     __get_root:
  6005                           	opt stack 27
  6006                           
  6007                           ;fat16.c: 839: if (idx < 0x20)
  6008                           
  6009                           ;incstack = 0
  6010  003086  5002               	movf	__get_root@idx+1,w,c
  6011  003088  E11D               	bnz	l11988
  6012  00308A  0E20               	movlw	32
  6013  00308C  5C01               	subwf	__get_root@idx,w,c
  6014  00308E  B0D8               	btfsc	status,0,c
  6015  003090  D019               	goto	l2066
  6016                           
  6017                           ;fat16.c: 840: {;fat16.c: 841: if (idx < 11)
  6018  003092  5002               	movf	__get_root@idx+1,w,c
  6019  003094  E110               	bnz	l11982
  6020  003096  0E0B               	movlw	11
  6021  003098  5C01               	subwf	__get_root@idx,w,c
  6022  00309A  B0D8               	btfsc	status,0,c
  6023  00309C  D00C               	goto	l2064
  6024                           
  6025                           ;fat16.c: 842: {;fat16.c: 843: return "SolarChargr"[idx];
  6026  00309E  0EDC               	movlw	low STR_9
  6027  0030A0  2401               	addwf	__get_root@idx,w,c
  6028  0030A2  6EF6               	movwf	tblptrl,c
  6029  0030A4  0E8F               	movlw	high STR_9
  6030  0030A6  2002               	addwfc	__get_root@idx+1,w,c
  6031  0030A8  6EF7               	movwf	tblptrh,c
  6032  0030AA                     	if	1	;There are 3 active tblptr bytes
  6033  0030AA  6AF8               	clrf	tblptru,c
  6034  0030AC  0E00               	movlw	low (__mediumconst shr (0+16))
  6035  0030AE  22F8               	addwfc	tblptru,f,c
  6036  0030B0                     	endif
  6037  0030B0  0008               	tblrd		*
  6038  0030B2  50F5               	movf	tablat,w,c
  6039  0030B4  0012               	return	
  6040  0030B6                     l2064:
  6041  0030B6                     l11982:
  6042                           
  6043                           ;fat16.c: 844: };fat16.c: 845: if(idx==11)
  6044  0030B6  0E0B               	movlw	11
  6045  0030B8  1801               	xorwf	__get_root@idx,w,c
  6046  0030BA  1002               	iorwf	__get_root@idx+1,w,c
  6047  0030BC  A4D8               	btfss	status,2,c
  6048  0030BE  D002               	goto	l2066
  6049                           
  6050                           ;fat16.c: 846: {;fat16.c: 847: return 0x08;
  6051  0030C0  0E08               	movlw	8
  6052  0030C2  0012               	return	
  6053  0030C4                     l2066:
  6054  0030C4                     l11988:
  6055                           
  6056                           ;fat16.c: 848: };fat16.c: 849: };fat16.c: 850: if (idx < 0x40)
  6057  0030C4  5002               	movf	__get_root@idx+1,w,c
  6058  0030C6  E103               	bnz	u8901
  6059  0030C8  0E40               	movlw	64
  6060  0030CA  5C01               	subwf	__get_root@idx,w,c
  6061  0030CC  B0D8               	btfsc	status,0,c
  6062  0030CE                     u8901:
  6063  0030CE  D0A4               	goto	l2092
  6064                           
  6065                           ;fat16.c: 851: {;fat16.c: 852: idx -= 0x20;
  6066  0030D0  0E20               	movlw	32
  6067  0030D2  5E01               	subwf	__get_root@idx,f,c
  6068  0030D4  0E00               	movlw	0
  6069  0030D6  5A02               	subwfb	__get_root@idx+1,f,c
  6070                           
  6071                           ;fat16.c: 853: if (idx < 0+8)
  6072  0030D8  5002               	movf	__get_root@idx+1,w,c
  6073  0030DA  E110               	bnz	l11996
  6074  0030DC  0E08               	movlw	8
  6075  0030DE  5C01               	subwf	__get_root@idx,w,c
  6076  0030E0  B0D8               	btfsc	status,0,c
  6077  0030E2  D00C               	goto	l2068
  6078                           
  6079                           ;fat16.c: 854: {;fat16.c: 855: return "FILE    "[idx];
  6080  0030E4  0EE8               	movlw	low STR_10
  6081  0030E6  2401               	addwf	__get_root@idx,w,c
  6082  0030E8  6EF6               	movwf	tblptrl,c
  6083  0030EA  0E8F               	movlw	high STR_10
  6084  0030EC  2002               	addwfc	__get_root@idx+1,w,c
  6085  0030EE  6EF7               	movwf	tblptrh,c
  6086  0030F0                     	if	1	;There are 3 active tblptr bytes
  6087  0030F0  6AF8               	clrf	tblptru,c
  6088  0030F2  0E00               	movlw	low (__mediumconst shr (0+16))
  6089  0030F4  22F8               	addwfc	tblptru,f,c
  6090  0030F6                     	endif
  6091  0030F6  0008               	tblrd		*
  6092  0030F8  50F5               	movf	tablat,w,c
  6093  0030FA  0012               	return	
  6094  0030FC                     l2068:
  6095  0030FC                     l11996:
  6096                           
  6097                           ;fat16.c: 856: };fat16.c: 857: if (idx < 11)
  6098  0030FC  5002               	movf	__get_root@idx+1,w,c
  6099  0030FE  E146               	bnz	l12088
  6100  003100  0E0B               	movlw	11
  6101  003102  5C01               	subwf	__get_root@idx,w,c
  6102  003104  B0D8               	btfsc	status,0,c
  6103  003106  D042               	goto	l2070
  6104                           
  6105                           ;fat16.c: 858: {;fat16.c: 859: return "TXT"[idx-8];
  6106  003108  0EF8               	movlw	248
  6107  00310A  6E03               	movwf	??__get_root& (0+255),c
  6108  00310C  0EFF               	movlw	255
  6109  00310E  6E04               	movwf	(??__get_root+1)& (0+255),c
  6110  003110  C001  F005         	movff	__get_root@idx,??__get_root+2
  6111  003114  C002  F006         	movff	__get_root@idx+1,??__get_root+3
  6112  003118  5003               	movf	??__get_root,w,c
  6113  00311A  2605               	addwf	??__get_root+2,f,c
  6114  00311C  5004               	movf	??__get_root+1,w,c
  6115  00311E  2206               	addwfc	??__get_root+3,f,c
  6116  003120  0EFA               	movlw	low STR_11
  6117  003122  2405               	addwf	??__get_root+2,w,c
  6118  003124  6EF6               	movwf	tblptrl,c
  6119  003126  0E8F               	movlw	high STR_11
  6120  003128  2006               	addwfc	??__get_root+3,w,c
  6121  00312A  6EF7               	movwf	tblptrh,c
  6122  00312C                     	if	1	;There are 3 active tblptr bytes
  6123  00312C  6AF8               	clrf	tblptru,c
  6124  00312E  0E00               	movlw	low (__mediumconst shr (0+16))
  6125  003130  22F8               	addwfc	tblptru,f,c
  6126  003132                     	endif
  6127  003132  0008               	tblrd		*
  6128  003134  50F5               	movf	tablat,w,c
  6129  003136  0012               	return	
  6130  003138                     
  6131                           ;fat16.c: 864: return 0x20;
  6132  003138  0E20               	movlw	32
  6133  00313A  0012               	return	
  6134  00313C                     
  6135                           ;fat16.c: 866: return 0x06;
  6136  00313C  0E06               	movlw	6
  6137  00313E  0012               	return	
  6138  003140                     
  6139                           ;fat16.c: 868: return 0x28;
  6140  003140  0E28               	movlw	40
  6141  003142  0012               	return	
  6142  003144                     
  6143                           ;fat16.c: 870: return 0x78;
  6144  003144  0E78               	movlw	120
  6145  003146  0012               	return	
  6146  003148                     
  6147                           ;fat16.c: 872: return 0xDE;
  6148  003148  0EDE               	movlw	222
  6149  00314A  0012               	return	
  6150  00314C                     
  6151                           ;fat16.c: 874: return 0x38;
  6152  00314C  0E38               	movlw	56
  6153  00314E  0012               	return	
  6154  003150                     
  6155                           ;fat16.c: 876: return 0x5F;
  6156  003150  0E5F               	movlw	95
  6157  003152  0012               	return	
  6158  003154                     
  6159                           ;fat16.c: 878: return 0x4B;
  6160  003154  0E4B               	movlw	75
  6161  003156  0012               	return	
  6162  003158                     
  6163                           ;fat16.c: 880: return 0x00;
  6164  003158  0E00               	movlw	0
  6165  00315A  0012               	return	
  6166  00315C                     
  6167                           ;fat16.c: 882: return 0x00;
  6168  00315C  0E00               	movlw	0
  6169  00315E  0012               	return	
  6170  003160                     
  6171                           ;fat16.c: 884: return 0x04;
  6172  003160  0E04               	movlw	4
  6173  003162  0012               	return	
  6174  003164                     
  6175                           ;fat16.c: 886: return 0x77;
  6176  003164  0E77               	movlw	119
  6177  003166  0012               	return	
  6178  003168                     
  6179                           ;fat16.c: 888: return 0xDE;
  6180  003168  0EDE               	movlw	222
  6181  00316A  0012               	return	
  6182  00316C                     
  6183                           ;fat16.c: 890: return 0x38;
  6184  00316C  0E38               	movlw	56
  6185  00316E  0012               	return	
  6186  003170                     
  6187                           ;fat16.c: 892: return ((unsigned char)((((uint16_t)2))&0xFF));
  6188  003170  0E02               	movlw	2
  6189  003172  0012               	return	
  6190  003174                     
  6191                           ;fat16.c: 894: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
  6192  003174  0E00               	movlw	0
  6193  003176  0012               	return	
  6194  003178                     
  6195                           ;fat16.c: 896: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0xF
      +                          F));
  6196  003178  0E0C               	movlw	12
  6197  00317A  0012               	return	
  6198  00317C                     
  6199                           ;fat16.c: 899: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>8
      +                          )&0xFF));
  6200  00317C  0E00               	movlw	0
  6201  00317E  0012               	return	
  6202  003180                     
  6203                           ;fat16.c: 902: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF)
      +                          ))&0xFF));
  6204  003180  0E00               	movlw	0
  6205  003182  0012               	return	
  6206  003184                     
  6207                           ;fat16.c: 905: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  6208  003184  0E00               	movlw	0
  6209  003186  0012               	return	
  6210  003188                     
  6211                           ;fat16.c: 908: return 0x00;
  6212  003188  0E00               	movlw	0
  6213  00318A  0012               	return	
  6214  00318C                     l2070:
  6215  00318C                     l12088:
  6216  00318C  C001  F003         	movff	__get_root@idx,??__get_root
  6217  003190  C002  F004         	movff	__get_root@idx+1,??__get_root+1
  6218                           
  6219                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6220                           ; Switch size 1, requested type "space"
  6221                           ; Number of cases is 1, Range of values is 0 to 0
  6222                           ; switch strategies available:
  6223                           ; Name         Instructions Cycles
  6224                           ; simple_byte            4     3 (average)
  6225                           ;	Chosen strategy is simple_byte
  6226  003194  5004               	movf	??__get_root+1,w,c
  6227  003196  0A00               	xorlw	0	; case 0
  6228  003198  A4D8               	btfss	status,2,c
  6229  00319A  D7F6               	goto	l2091
  6230                           
  6231                           ; Switch size 1, requested type "space"
  6232                           ; Number of cases is 20, Range of values is 11 to 31
  6233                           ; switch strategies available:
  6234                           ; Name         Instructions Cycles
  6235                           ; simple_byte           61    31 (average)
  6236                           ;	Chosen strategy is simple_byte
  6237  00319C  5003               	movf	??__get_root,w,c
  6238  00319E  0A0B               	xorlw	11	; case 11
  6239  0031A0  B4D8               	btfsc	status,2,c
  6240  0031A2  D7CA               	goto	l2071
  6241  0031A4  0A06               	xorlw	6	; case 13
  6242  0031A6  B4D8               	btfsc	status,2,c
  6243  0031A8  D7C9               	goto	l2072
  6244  0031AA  0A03               	xorlw	3	; case 14
  6245  0031AC  B4D8               	btfsc	status,2,c
  6246  0031AE  D7C8               	goto	l2073
  6247  0031B0  0A01               	xorlw	1	; case 15
  6248  0031B2  B4D8               	btfsc	status,2,c
  6249  0031B4  D7C7               	goto	l2074
  6250  0031B6  0A1F               	xorlw	31	; case 16
  6251  0031B8  B4D8               	btfsc	status,2,c
  6252  0031BA  D7C6               	goto	l2075
  6253  0031BC  0A01               	xorlw	1	; case 17
  6254  0031BE  B4D8               	btfsc	status,2,c
  6255  0031C0  D7C5               	goto	l2076
  6256  0031C2  0A03               	xorlw	3	; case 18
  6257  0031C4  B4D8               	btfsc	status,2,c
  6258  0031C6  D7C4               	goto	l2077
  6259  0031C8  0A01               	xorlw	1	; case 19
  6260  0031CA  B4D8               	btfsc	status,2,c
  6261  0031CC  D7C3               	goto	l2078
  6262  0031CE  0A07               	xorlw	7	; case 20
  6263  0031D0  B4D8               	btfsc	status,2,c
  6264  0031D2  D7C2               	goto	l2079
  6265  0031D4  0A01               	xorlw	1	; case 21
  6266  0031D6  B4D8               	btfsc	status,2,c
  6267  0031D8  D7C1               	goto	l2080
  6268  0031DA  0A03               	xorlw	3	; case 22
  6269  0031DC  B4D8               	btfsc	status,2,c
  6270  0031DE  D7C0               	goto	l2081
  6271  0031E0  0A01               	xorlw	1	; case 23
  6272  0031E2  B4D8               	btfsc	status,2,c
  6273  0031E4  D7BF               	goto	l2082
  6274  0031E6  0A0F               	xorlw	15	; case 24
  6275  0031E8  B4D8               	btfsc	status,2,c
  6276  0031EA  D7BE               	goto	l2083
  6277  0031EC  0A01               	xorlw	1	; case 25
  6278  0031EE  B4D8               	btfsc	status,2,c
  6279  0031F0  D7BD               	goto	l2084
  6280  0031F2  0A03               	xorlw	3	; case 26
  6281  0031F4  B4D8               	btfsc	status,2,c
  6282  0031F6  D7BC               	goto	l2085
  6283  0031F8  0A01               	xorlw	1	; case 27
  6284  0031FA  B4D8               	btfsc	status,2,c
  6285  0031FC  D7BB               	goto	l2086
  6286  0031FE  0A07               	xorlw	7	; case 28
  6287  003200  B4D8               	btfsc	status,2,c
  6288  003202  D7BA               	goto	l2087
  6289  003204  0A01               	xorlw	1	; case 29
  6290  003206  B4D8               	btfsc	status,2,c
  6291  003208  D7B9               	goto	l2088
  6292  00320A  0A03               	xorlw	3	; case 30
  6293  00320C  B4D8               	btfsc	status,2,c
  6294  00320E  D7B8               	goto	l2089
  6295  003210  0A01               	xorlw	1	; case 31
  6296  003212  B4D8               	btfsc	status,2,c
  6297  003214  D7B7               	goto	l2090
  6298  003216  D7B8               	goto	l2091
  6299  003218                     l2092:
  6300                           
  6301                           ;fat16.c: 910: };fat16.c: 911: return 0X00;
  6302  003218  0E00               	movlw	0
  6303  00321A  0012               	return	
  6304  00321C                     __end_of__get_root:
  6305                           	opt stack 0
  6306                           tblptru	equ	0xFF8
  6307                           tblptrh	equ	0xFF7
  6308                           tblptrl	equ	0xFF6
  6309                           tablat	equ	0xFF5
  6310                           intcon	equ	0xFF2
  6311                           intcon3	equ	0xFF0
  6312                           postinc0	equ	0xFEE
  6313                           wreg	equ	0xFE8
  6314                           postdec1	equ	0xFE5
  6315                           plusw1	equ	0xFE3
  6316                           fsr1h	equ	0xFE2
  6317                           fsr1l	equ	0xFE1
  6318                           indf2	equ	0xFDF
  6319                           postinc2	equ	0xFDE
  6320                           plusw2	equ	0xFDB
  6321                           fsr2h	equ	0xFDA
  6322                           fsr2l	equ	0xFD9
  6323                           status	equ	0xFD8
  6324                           
  6325 ;; *************** function __get_mbr *****************
  6326 ;; Defined at:
  6327 ;;		line 625 in file "fat16.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;  idx             2    0[COMRAM] unsigned int 
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;		None
  6332 ;; Return value:  Size  Location     Type
  6333 ;;                  1    wreg      unsigned char 
  6334 ;; Registers used:
  6335 ;;		wreg, status,2, status,0
  6336 ;; Tracked objects:
  6337 ;;		On entry : 0/0
  6338 ;;		On exit  : 0/0
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6341 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6343 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6344 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6345 ;;Total ram usage:        4 bytes
  6346 ;; Hardware stack levels used:    1
  6347 ;; This function calls:
  6348 ;;		Nothing
  6349 ;; This function is called by:
  6350 ;;		_fat_get_format_status
  6351 ;;		_fat_format
  6352 ;; This function uses a non-reentrant model
  6353 ;;
  6354                           
  6355                           	psect	text21
  6356  004D5C                     __ptext21:
  6357                           	opt stack 0
  6358  004D5C                     __get_mbr:
  6359                           	opt stack 27
  6360                           
  6361                           ;fat16.c: 627: switch (idx)
  6362                           
  6363                           ;incstack = 0
  6364  004D5C  D026               	goto	l1973
  6365  004D5E                     
  6366                           ;fat16.c: 638: return 0x80;
  6367  004D5E  0E80               	movlw	128
  6368  004D60  0012               	return	
  6369  004D62                     
  6370                           ;fat16.c: 640: return ((1%63)+1);
  6371  004D62  0E02               	movlw	2
  6372  004D64  0012               	return	
  6373  004D66                     
  6374                           ;fat16.c: 643: return (((1/(16*63)) & 0b00000011)<<6) | (((1/63)%16) & 0b00111111);
  6375  004D66  0E00               	movlw	0
  6376  004D68  0012               	return	
  6377  004D6A                     
  6378                           ;fat16.c: 646: return (1/(16*63)) >> 2;
  6379  004D6A  0E00               	movlw	0
  6380  004D6C  0012               	return	
  6381  004D6E                     
  6382                           ;fat16.c: 649: return 0x04;
  6383  004D6E  0E04               	movlw	4
  6384  004D70  0012               	return	
  6385  004D72                     
  6386                           ;fat16.c: 652: return (((1+5000-1)%63)+1);
  6387  004D72  0E18               	movlw	24
  6388  004D74  0012               	return	
  6389  004D76                     
  6390                           ;fat16.c: 655: return ((((1+5000-1)/(16*63)) & 0b00000011) << 6) | ((((1+5000-1)/63)%16)
      +                           & 0b00111111);
  6391  004D76  0E0F               	movlw	15
  6392  004D78  0012               	return	
  6393  004D7A                     
  6394                           ;fat16.c: 658: return ((1+5000-1)/(16*63)) >> 2;
  6395  004D7A  0E01               	movlw	1
  6396  004D7C  0012               	return	
  6397  004D7E                     
  6398                           ;fat16.c: 661: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xFF
      +                          ));
  6399  004D7E  0E01               	movlw	1
  6400  004D80  0012               	return	
  6401  004D82                     
  6402                           ;fat16.c: 663: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8)
      +                          &0xFF));
  6403  004D82  0E00               	movlw	0
  6404  004D84  0012               	return	
  6405  004D86                     
  6406                           ;fat16.c: 665: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF))
      +                          )&0xFF));
  6407  004D86  0E00               	movlw	0
  6408  004D88  0012               	return	
  6409  004D8A                     
  6410                           ;fat16.c: 667: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))>>8)&0xFF));
  6411  004D8A  0E00               	movlw	0
  6412  004D8C  0012               	return	
  6413  004D8E                     
  6414                           ;fat16.c: 669: return ((unsigned char)((((unsigned short)((((uint32_t)5000))&0xFFFF)))&0
      +                          xFF));
  6415  004D8E  0E88               	movlw	136
  6416  004D90  0012               	return	
  6417  004D92                     
  6418                           ;fat16.c: 671: return ((unsigned char)(((((unsigned short)((((uint32_t)5000))&0xFFFF)))>
      +                          >8)&0xFF));
  6419  004D92  0E13               	movlw	19
  6420  004D94  0012               	return	
  6421  004D96                     
  6422                           ;fat16.c: 673: return ((unsigned char)((((unsigned short)(((((uint32_t)5000))>>16)&0xFFF
      +                          F)))&0xFF));
  6423  004D96  0E00               	movlw	0
  6424  004D98  0012               	return	
  6425  004D9A                     
  6426                           ;fat16.c: 675: return ((unsigned char)(((((unsigned short)(((((uint32_t)5000))>>16)&0xFF
      +                          FF)))>>8)&0xFF));
  6427  004D9A  0E00               	movlw	0
  6428  004D9C  0012               	return	
  6429  004D9E                     
  6430                           ;fat16.c: 677: return 0X55AA >> 8;
  6431  004D9E  0E55               	movlw	85
  6432  004DA0  0012               	return	
  6433  004DA2                     
  6434                           ;fat16.c: 679: return 0X55AA & 0XFF;
  6435  004DA2  0EAA               	movlw	170
  6436  004DA4  0012               	return	
  6437  004DA6                     
  6438                           ;fat16.c: 681: return 0X00;
  6439  004DA6  0E00               	movlw	0
  6440                           
  6441                           ;fat16.c: 682: }
  6442  004DA8  0012               	return	
  6443  004DAA                     l1973:
  6444  004DAA  C001  F003         	movff	__get_mbr@idx,??__get_mbr
  6445  004DAE  C002  F004         	movff	__get_mbr@idx+1,??__get_mbr+1
  6446                           
  6447                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6448                           ; Switch size 1, requested type "space"
  6449                           ; Number of cases is 1, Range of values is 1 to 1
  6450                           ; switch strategies available:
  6451                           ; Name         Instructions Cycles
  6452                           ; simple_byte            4     3 (average)
  6453                           ;	Chosen strategy is simple_byte
  6454  004DB2  5004               	movf	??__get_mbr+1,w,c
  6455  004DB4  0A01               	xorlw	1	; case 1
  6456  004DB6  A4D8               	btfss	status,2,c
  6457  004DB8  D7F6               	goto	l1993
  6458                           
  6459                           ; Switch size 1, requested type "space"
  6460                           ; Number of cases is 18, Range of values is 190 to 255
  6461                           ; switch strategies available:
  6462                           ; Name         Instructions Cycles
  6463                           ; simple_byte           55    28 (average)
  6464                           ;	Chosen strategy is simple_byte
  6465  004DBA  5003               	movf	??__get_mbr,w,c
  6466  004DBC  0ABE               	xorlw	190	; case 190
  6467  004DBE  B4D8               	btfsc	status,2,c
  6468  004DC0  D7CE               	goto	l1974
  6469  004DC2  0A01               	xorlw	1	; case 191
  6470  004DC4  B4D8               	btfsc	status,2,c
  6471  004DC6  D7CD               	goto	l1976
  6472  004DC8  0A7F               	xorlw	127	; case 192
  6473  004DCA  B4D8               	btfsc	status,2,c
  6474  004DCC  D7CC               	goto	l1977
  6475  004DCE  0A01               	xorlw	1	; case 193
  6476  004DD0  B4D8               	btfsc	status,2,c
  6477  004DD2  D7CB               	goto	l1978
  6478  004DD4  0A03               	xorlw	3	; case 194
  6479  004DD6  B4D8               	btfsc	status,2,c
  6480  004DD8  D7CA               	goto	l1979
  6481  004DDA  0A01               	xorlw	1	; case 195
  6482  004DDC  B4D8               	btfsc	status,2,c
  6483  004DDE  D7C9               	goto	l1980
  6484  004DE0  0A07               	xorlw	7	; case 196
  6485  004DE2  B4D8               	btfsc	status,2,c
  6486  004DE4  D7C8               	goto	l1981
  6487  004DE6  0A01               	xorlw	1	; case 197
  6488  004DE8  B4D8               	btfsc	status,2,c
  6489  004DEA  D7C7               	goto	l1982
  6490  004DEC  0A03               	xorlw	3	; case 198
  6491  004DEE  B4D8               	btfsc	status,2,c
  6492  004DF0  D7C6               	goto	l1983
  6493  004DF2  0A01               	xorlw	1	; case 199
  6494  004DF4  B4D8               	btfsc	status,2,c
  6495  004DF6  D7C5               	goto	l1984
  6496  004DF8  0A0F               	xorlw	15	; case 200
  6497  004DFA  B4D8               	btfsc	status,2,c
  6498  004DFC  D7C4               	goto	l1985
  6499  004DFE  0A01               	xorlw	1	; case 201
  6500  004E00  B4D8               	btfsc	status,2,c
  6501  004E02  D7C3               	goto	l1986
  6502  004E04  0A03               	xorlw	3	; case 202
  6503  004E06  B4D8               	btfsc	status,2,c
  6504  004E08  D7C2               	goto	l1987
  6505  004E0A  0A01               	xorlw	1	; case 203
  6506  004E0C  B4D8               	btfsc	status,2,c
  6507  004E0E  D7C1               	goto	l1988
  6508  004E10  0A07               	xorlw	7	; case 204
  6509  004E12  B4D8               	btfsc	status,2,c
  6510  004E14  D7C0               	goto	l1989
  6511  004E16  0A01               	xorlw	1	; case 205
  6512  004E18  B4D8               	btfsc	status,2,c
  6513  004E1A  D7BF               	goto	l1990
  6514  004E1C  0A33               	xorlw	51	; case 254
  6515  004E1E  B4D8               	btfsc	status,2,c
  6516  004E20  D7BE               	goto	l1991
  6517  004E22  0A01               	xorlw	1	; case 255
  6518  004E24  B4D8               	btfsc	status,2,c
  6519  004E26  D7BD               	goto	l1992
  6520  004E28  D7BE               	goto	l1993
  6521  004E2A                     __end_of__get_mbr:
  6522                           	opt stack 0
  6523                           tblptru	equ	0xFF8
  6524                           tblptrh	equ	0xFF7
  6525                           tblptrl	equ	0xFF6
  6526                           tablat	equ	0xFF5
  6527                           intcon	equ	0xFF2
  6528                           intcon3	equ	0xFF0
  6529                           postinc0	equ	0xFEE
  6530                           wreg	equ	0xFE8
  6531                           postdec1	equ	0xFE5
  6532                           plusw1	equ	0xFE3
  6533                           fsr1h	equ	0xFE2
  6534                           fsr1l	equ	0xFE1
  6535                           indf2	equ	0xFDF
  6536                           postinc2	equ	0xFDE
  6537                           plusw2	equ	0xFDB
  6538                           fsr2h	equ	0xFDA
  6539                           fsr2l	equ	0xFD9
  6540                           status	equ	0xFD8
  6541                           
  6542 ;; *************** function __get_fbr *****************
  6543 ;; Defined at:
  6544 ;;		line 685 in file "fat16.c"
  6545 ;; Parameters:    Size  Location     Type
  6546 ;;  idx             2    0[COMRAM] unsigned int 
  6547 ;; Auto vars:     Size  Location     Type
  6548 ;;		None
  6549 ;; Return value:  Size  Location     Type
  6550 ;;                  1    wreg      unsigned char 
  6551 ;; Registers used:
  6552 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6553 ;; Tracked objects:
  6554 ;;		On entry : 0/0
  6555 ;;		On exit  : 0/0
  6556 ;;		Unchanged: 0/0
  6557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6558 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6560 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6561 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6562 ;;Total ram usage:        4 bytes
  6563 ;; Hardware stack levels used:    1
  6564 ;; This function calls:
  6565 ;;		Nothing
  6566 ;; This function is called by:
  6567 ;;		_fat_get_format_status
  6568 ;;		_fat_format
  6569 ;; This function uses a non-reentrant model
  6570 ;;
  6571                           
  6572                           	psect	text22
  6573  001A36                     __ptext22:
  6574                           	opt stack 0
  6575  001A36                     __get_fbr:
  6576                           	opt stack 27
  6577                           
  6578                           ;fat16.c: 687: switch (idx)
  6579                           
  6580                           ;incstack = 0
  6581  001A36  D093               	goto	l1997
  6582  001A38                     
  6583                           ;fat16.c: 690: return 0xEB;
  6584  001A38  0EEB               	movlw	235
  6585  001A3A  0012               	return	
  6586  001A3C                     
  6587                           ;fat16.c: 692: return 0x3C;
  6588  001A3C  0E3C               	movlw	60
  6589  001A3E  0012               	return	
  6590  001A40                     
  6591                           ;fat16.c: 694: return 0x90;
  6592  001A40  0E90               	movlw	144
  6593  001A42  0012               	return	
  6594  001A44                     
  6595                           ;fat16.c: 696: return "MSDOS5.0"[0];
  6596  001A44  0EF1               	movlw	low STR_1
  6597  001A46  6EF6               	movwf	tblptrl,c
  6598  001A48                     	if	1	;There is more than 1 active tblptr byte
  6599  001A48  0E8F               	movlw	high STR_1
  6600  001A4A  6EF7               	movwf	tblptrh,c
  6601  001A4C                     	endif
  6602  001A4C                     	if	1	;There are 3 active tblptr bytes
  6603  001A4C  0E00               	movlw	low (STR_1 shr (0+16))
  6604  001A4E  6EF8               	movwf	tblptru,c
  6605  001A50                     	endif
  6606  001A50  0008               	tblrd		*
  6607  001A52  50F5               	movf	tablat,w,c
  6608  001A54  0012               	return	
  6609  001A56                     
  6610                           ;fat16.c: 698: return "MSDOS5.0"[1];
  6611  001A56  0EF2               	movlw	low (STR_1+1)
  6612  001A58  6EF6               	movwf	tblptrl,c
  6613  001A5A  0E8F               	movlw	high (STR_1+1)
  6614  001A5C  6EF7               	movwf	tblptrh,c
  6615  001A5E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6616  001A5E  6AF8               	clrf	tblptru,c
  6617  001A60                     	endif
  6618  001A60                     	if	0	;tblptru may be non-zero
  6619  001A60                     	endif
  6620  001A60  0008               	tblrd		*
  6621  001A62  50F5               	movf	tablat,w,c
  6622  001A64  0012               	return	
  6623  001A66                     
  6624                           ;fat16.c: 700: return "MSDOS5.0"[2];
  6625  001A66  0EF3               	movlw	low (STR_1+2)
  6626  001A68  6EF6               	movwf	tblptrl,c
  6627  001A6A  0E8F               	movlw	high (STR_1+2)
  6628  001A6C  6EF7               	movwf	tblptrh,c
  6629  001A6E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6630  001A6E  6AF8               	clrf	tblptru,c
  6631  001A70                     	endif
  6632  001A70                     	if	0	;tblptru may be non-zero
  6633  001A70                     	endif
  6634  001A70  0008               	tblrd		*
  6635  001A72  50F5               	movf	tablat,w,c
  6636  001A74  0012               	return	
  6637  001A76                     
  6638                           ;fat16.c: 702: return "MSDOS5.0"[3];
  6639  001A76  0EF4               	movlw	low (STR_1+3)
  6640  001A78  6EF6               	movwf	tblptrl,c
  6641  001A7A  0E8F               	movlw	high (STR_1+3)
  6642  001A7C  6EF7               	movwf	tblptrh,c
  6643  001A7E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6644  001A7E  6AF8               	clrf	tblptru,c
  6645  001A80                     	endif
  6646  001A80                     	if	0	;tblptru may be non-zero
  6647  001A80                     	endif
  6648  001A80  0008               	tblrd		*
  6649  001A82  50F5               	movf	tablat,w,c
  6650  001A84  0012               	return	
  6651  001A86                     
  6652                           ;fat16.c: 704: return "MSDOS5.0"[4];
  6653  001A86  0EF5               	movlw	low (STR_1+4)
  6654  001A88  6EF6               	movwf	tblptrl,c
  6655  001A8A  0E8F               	movlw	high (STR_1+4)
  6656  001A8C  6EF7               	movwf	tblptrh,c
  6657  001A8E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6658  001A8E  6AF8               	clrf	tblptru,c
  6659  001A90                     	endif
  6660  001A90                     	if	0	;tblptru may be non-zero
  6661  001A90                     	endif
  6662  001A90  0008               	tblrd		*
  6663  001A92  50F5               	movf	tablat,w,c
  6664  001A94  0012               	return	
  6665  001A96                     
  6666                           ;fat16.c: 706: return "MSDOS5.0"[5];
  6667  001A96  0EF6               	movlw	low (STR_1+5)
  6668  001A98  6EF6               	movwf	tblptrl,c
  6669  001A9A  0E8F               	movlw	high (STR_1+5)
  6670  001A9C  6EF7               	movwf	tblptrh,c
  6671  001A9E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6672  001A9E  6AF8               	clrf	tblptru,c
  6673  001AA0                     	endif
  6674  001AA0                     	if	0	;tblptru may be non-zero
  6675  001AA0                     	endif
  6676  001AA0  0008               	tblrd		*
  6677  001AA2  50F5               	movf	tablat,w,c
  6678  001AA4  0012               	return	
  6679  001AA6                     
  6680                           ;fat16.c: 708: return "MSDOS5.0"[6];
  6681  001AA6  0EF7               	movlw	low (STR_1+6)
  6682  001AA8  6EF6               	movwf	tblptrl,c
  6683  001AAA  0E8F               	movlw	high (STR_1+6)
  6684  001AAC  6EF7               	movwf	tblptrh,c
  6685  001AAE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6686  001AAE  6AF8               	clrf	tblptru,c
  6687  001AB0                     	endif
  6688  001AB0                     	if	0	;tblptru may be non-zero
  6689  001AB0                     	endif
  6690  001AB0  0008               	tblrd		*
  6691  001AB2  50F5               	movf	tablat,w,c
  6692  001AB4  0012               	return	
  6693  001AB6                     
  6694                           ;fat16.c: 710: return "MSDOS5.0"[7];
  6695  001AB6  0EF8               	movlw	low (STR_1+7)
  6696  001AB8  6EF6               	movwf	tblptrl,c
  6697  001ABA  0E8F               	movlw	high (STR_1+7)
  6698  001ABC  6EF7               	movwf	tblptrh,c
  6699  001ABE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6700  001ABE  6AF8               	clrf	tblptru,c
  6701  001AC0                     	endif
  6702  001AC0                     	if	0	;tblptru may be non-zero
  6703  001AC0                     	endif
  6704  001AC0  0008               	tblrd		*
  6705  001AC2  50F5               	movf	tablat,w,c
  6706  001AC4  0012               	return	
  6707  001AC6                     
  6708                           ;fat16.c: 712: return ((unsigned char)((((uint16_t)512))&0xFF));
  6709  001AC6  0E00               	movlw	0
  6710  001AC8  0012               	return	
  6711  001ACA                     
  6712                           ;fat16.c: 714: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  6713  001ACA  0E02               	movlw	2
  6714  001ACC  0012               	return	
  6715  001ACE                     
  6716                           ;fat16.c: 716: return 1;
  6717  001ACE  0E01               	movlw	1
  6718  001AD0  0012               	return	
  6719  001AD2                     
  6720                           ;fat16.c: 718: return ((unsigned char)((((uint16_t)1))&0xFF));
  6721  001AD2  0E01               	movlw	1
  6722  001AD4  0012               	return	
  6723  001AD6                     
  6724                           ;fat16.c: 721: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  6725  001AD6  0E00               	movlw	0
  6726  001AD8  0012               	return	
  6727  001ADA                     
  6728                           ;fat16.c: 724: return 1;
  6729  001ADA  0E01               	movlw	1
  6730  001ADC  0012               	return	
  6731  001ADE                     
  6732                           ;fat16.c: 726: return ((unsigned char)((((uint16_t)64))&0xFF));
  6733  001ADE  0E40               	movlw	64
  6734  001AE0  0012               	return	
  6735  001AE2                     
  6736                           ;fat16.c: 729: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  6737  001AE2  0E00               	movlw	0
  6738  001AE4  0012               	return	
  6739  001AE6                     
  6740                           ;fat16.c: 732: return ((unsigned char)((((uint16_t)4114))&0xFF));
  6741  001AE6  0E12               	movlw	18
  6742  001AE8  0012               	return	
  6743  001AEA                     
  6744                           ;fat16.c: 735: return ((unsigned char)(((((uint16_t)4114))>>8)&0xFF));
  6745  001AEA  0E10               	movlw	16
  6746  001AEC  0012               	return	
  6747  001AEE                     
  6748                           ;fat16.c: 738: return 0XF8;
  6749  001AEE  0EF8               	movlw	248
  6750  001AF0  0012               	return	
  6751  001AF2                     
  6752                           ;fat16.c: 740: return ((unsigned char)((((uint16_t)16))&0xFF));
  6753  001AF2  0E10               	movlw	16
  6754  001AF4  0012               	return	
  6755  001AF6                     
  6756                           ;fat16.c: 743: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  6757  001AF6  0E00               	movlw	0
  6758  001AF8  0012               	return	
  6759  001AFA                     
  6760                           ;fat16.c: 746: return ((unsigned char)((((uint16_t)63))&0xFF));
  6761  001AFA  0E3F               	movlw	63
  6762  001AFC  0012               	return	
  6763  001AFE                     
  6764                           ;fat16.c: 749: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
  6765  001AFE  0E00               	movlw	0
  6766  001B00  0012               	return	
  6767  001B02                     
  6768                           ;fat16.c: 752: return ((unsigned char)((((uint16_t)16))&0xFF));
  6769  001B02  0E10               	movlw	16
  6770  001B04  0012               	return	
  6771  001B06                     
  6772                           ;fat16.c: 755: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  6773  001B06  0E00               	movlw	0
  6774  001B08  0012               	return	
  6775  001B0A                     
  6776                           ;fat16.c: 758: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xFF
      +                          ));
  6777  001B0A  0E00               	movlw	0
  6778  001B0C  0012               	return	
  6779  001B0E                     
  6780                           ;fat16.c: 761: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8)
      +                          &0xFF));
  6781  001B0E  0E00               	movlw	0
  6782  001B10  0012               	return	
  6783  001B12                     
  6784                           ;fat16.c: 764: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF))
      +                          )&0xFF));
  6785  001B12  0E00               	movlw	0
  6786  001B14  0012               	return	
  6787  001B16                     
  6788                           ;fat16.c: 767: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))>>8)&0xFF));
  6789  001B16  0E00               	movlw	0
  6790  001B18  0012               	return	
  6791  001B1A                     
  6792                           ;fat16.c: 770: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
  6793  001B1A  0E01               	movlw	1
  6794  001B1C  0012               	return	
  6795  001B1E                     
  6796                           ;fat16.c: 773: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
  6797  001B1E  0E00               	movlw	0
  6798  001B20  0012               	return	
  6799  001B22                     
  6800                           ;fat16.c: 776: return ((unsigned char)((((unsigned short)((((uint32_t)((16*1)+1)))&0xFFF
      +                          F)))&0xFF));
  6801  001B22  0E11               	movlw	17
  6802  001B24  0012               	return	
  6803  001B26                     
  6804                           ;fat16.c: 779: return ((unsigned char)(((((unsigned short)((((uint32_t)((16*1)+1)))&0xFF
      +                          FF)))>>8)&0xFF));
  6805  001B26  0E00               	movlw	0
  6806  001B28  0012               	return	
  6807  001B2A                     
  6808                           ;fat16.c: 782: return ((unsigned char)((((unsigned short)(((((uint32_t)((16*1)+1)))>>16)
      +                          &0xFFFF)))&0xFF));
  6809  001B2A  0E11               	movlw	17
  6810  001B2C  0012               	return	
  6811  001B2E                     
  6812                           ;fat16.c: 785: return ((unsigned char)(((((unsigned short)(((((uint32_t)((16*1)+1)))>>16
      +                          )&0xFFFF)))>>8)&0xFF));
  6813  001B2E  0E00               	movlw	0
  6814  001B30  0012               	return	
  6815  001B32                     
  6816                           ;fat16.c: 788: return 'F';
  6817  001B32  0E46               	movlw	70
  6818  001B34  0012               	return	
  6819  001B36                     
  6820                           ;fat16.c: 790: return 'A';
  6821  001B36  0E41               	movlw	65
  6822  001B38  0012               	return	
  6823  001B3A                     
  6824                           ;fat16.c: 792: return 'T';
  6825  001B3A  0E54               	movlw	84
  6826  001B3C  0012               	return	
  6827  001B3E                     
  6828                           ;fat16.c: 794: return '1';
  6829  001B3E  0E31               	movlw	49
  6830  001B40  0012               	return	
  6831  001B42                     
  6832                           ;fat16.c: 796: return '6';
  6833  001B42  0E36               	movlw	54
  6834  001B44  0012               	return	
  6835  001B46                     
  6836                           ;fat16.c: 798: return ' ';
  6837  001B46  0E20               	movlw	32
  6838  001B48  0012               	return	
  6839  001B4A                     
  6840                           ;fat16.c: 800: return ' ';
  6841  001B4A  0E20               	movlw	32
  6842  001B4C  0012               	return	
  6843  001B4E                     
  6844                           ;fat16.c: 802: return ' ';
  6845  001B4E  0E20               	movlw	32
  6846  001B50  0012               	return	
  6847  001B52                     
  6848                           ;fat16.c: 804: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
  6849  001B52  0E55               	movlw	85
  6850  001B54  0012               	return	
  6851  001B56                     
  6852                           ;fat16.c: 807: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
  6853  001B56  0EAA               	movlw	170
  6854  001B58  0012               	return	
  6855  001B5A                     
  6856                           ;fat16.c: 810: return 0X00;
  6857  001B5A  0E00               	movlw	0
  6858                           
  6859                           ;fat16.c: 811: }
  6860  001B5C  0012               	return	
  6861  001B5E                     l1997:
  6862  001B5E  C001  F003         	movff	__get_fbr@idx,??__get_fbr
  6863  001B62  C002  F004         	movff	__get_fbr@idx+1,??__get_fbr+1
  6864                           
  6865                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  6866                           ; Switch size 1, requested type "space"
  6867                           ; Number of cases is 2, Range of values is 0 to 1
  6868                           ; switch strategies available:
  6869                           ; Name         Instructions Cycles
  6870                           ; simple_byte            7     4 (average)
  6871                           ;	Chosen strategy is simple_byte
  6872  001B66  5004               	movf	??__get_fbr+1,w,c
  6873  001B68  0A00               	xorlw	0	; case 0
  6874  001B6A  B4D8               	btfsc	status,2,c
  6875  001B6C  D004               	goto	l14960
  6876  001B6E  0A01               	xorlw	1	; case 1
  6877  001B70  B4D8               	btfsc	status,2,c
  6878  001B72  D08D               	goto	l14962
  6879  001B74  D7F2               	goto	l2047
  6880  001B76                     l14960:
  6881                           
  6882                           ; Switch size 1, requested type "space"
  6883                           ; Number of cases is 46, Range of values is 0 to 61
  6884                           ; switch strategies available:
  6885                           ; Name         Instructions Cycles
  6886                           ; simple_byte          139    70 (average)
  6887                           ;	Chosen strategy is simple_byte
  6888  001B76  5003               	movf	??__get_fbr,w,c
  6889  001B78  0A00               	xorlw	0	; case 0
  6890  001B7A  B4D8               	btfsc	status,2,c
  6891  001B7C  D75D               	goto	l1998
  6892  001B7E  0A01               	xorlw	1	; case 1
  6893  001B80  B4D8               	btfsc	status,2,c
  6894  001B82  D75C               	goto	l2000
  6895  001B84  0A03               	xorlw	3	; case 2
  6896  001B86  B4D8               	btfsc	status,2,c
  6897  001B88  D75B               	goto	l2001
  6898  001B8A  0A01               	xorlw	1	; case 3
  6899  001B8C  B4D8               	btfsc	status,2,c
  6900  001B8E  D75A               	goto	l2002
  6901  001B90  0A07               	xorlw	7	; case 4
  6902  001B92  B4D8               	btfsc	status,2,c
  6903  001B94  D760               	goto	l2003
  6904  001B96  0A01               	xorlw	1	; case 5
  6905  001B98  B4D8               	btfsc	status,2,c
  6906  001B9A  D765               	goto	l2004
  6907  001B9C  0A03               	xorlw	3	; case 6
  6908  001B9E  B4D8               	btfsc	status,2,c
  6909  001BA0  D76A               	goto	l2005
  6910  001BA2  0A01               	xorlw	1	; case 7
  6911  001BA4  B4D8               	btfsc	status,2,c
  6912  001BA6  D76F               	goto	l2006
  6913  001BA8  0A0F               	xorlw	15	; case 8
  6914  001BAA  B4D8               	btfsc	status,2,c
  6915  001BAC  D774               	goto	l2007
  6916  001BAE  0A01               	xorlw	1	; case 9
  6917  001BB0  B4D8               	btfsc	status,2,c
  6918  001BB2  D779               	goto	l2008
  6919  001BB4  0A03               	xorlw	3	; case 10
  6920  001BB6  B4D8               	btfsc	status,2,c
  6921  001BB8  D77E               	goto	l2009
  6922  001BBA  0A01               	xorlw	1	; case 11
  6923  001BBC  B4D8               	btfsc	status,2,c
  6924  001BBE  D783               	goto	l2010
  6925  001BC0  0A07               	xorlw	7	; case 12
  6926  001BC2  B4D8               	btfsc	status,2,c
  6927  001BC4  D782               	goto	l2011
  6928  001BC6  0A01               	xorlw	1	; case 13
  6929  001BC8  B4D8               	btfsc	status,2,c
  6930  001BCA  D781               	goto	l2012
  6931  001BCC  0A03               	xorlw	3	; case 14
  6932  001BCE  B4D8               	btfsc	status,2,c
  6933  001BD0  D780               	goto	l2013
  6934  001BD2  0A01               	xorlw	1	; case 15
  6935  001BD4  B4D8               	btfsc	status,2,c
  6936  001BD6  D77F               	goto	l2014
  6937  001BD8  0A1F               	xorlw	31	; case 16
  6938  001BDA  B4D8               	btfsc	status,2,c
  6939  001BDC  D77E               	goto	l2015
  6940  001BDE  0A01               	xorlw	1	; case 17
  6941  001BE0  B4D8               	btfsc	status,2,c
  6942  001BE2  D77D               	goto	l2016
  6943  001BE4  0A03               	xorlw	3	; case 18
  6944  001BE6  B4D8               	btfsc	status,2,c
  6945  001BE8  D77C               	goto	l2017
  6946  001BEA  0A01               	xorlw	1	; case 19
  6947  001BEC  B4D8               	btfsc	status,2,c
  6948  001BEE  D77B               	goto	l2018
  6949  001BF0  0A07               	xorlw	7	; case 20
  6950  001BF2  B4D8               	btfsc	status,2,c
  6951  001BF4  D77A               	goto	l2019
  6952  001BF6  0A01               	xorlw	1	; case 21
  6953  001BF8  B4D8               	btfsc	status,2,c
  6954  001BFA  D779               	goto	l2020
  6955  001BFC  0A03               	xorlw	3	; case 22
  6956  001BFE  B4D8               	btfsc	status,2,c
  6957  001C00  D778               	goto	l2021
  6958  001C02  0A01               	xorlw	1	; case 23
  6959  001C04  B4D8               	btfsc	status,2,c
  6960  001C06  D777               	goto	l2022
  6961  001C08  0A0F               	xorlw	15	; case 24
  6962  001C0A  B4D8               	btfsc	status,2,c
  6963  001C0C  D776               	goto	l2023
  6964  001C0E  0A01               	xorlw	1	; case 25
  6965  001C10  B4D8               	btfsc	status,2,c
  6966  001C12  D775               	goto	l2024
  6967  001C14  0A03               	xorlw	3	; case 26
  6968  001C16  B4D8               	btfsc	status,2,c
  6969  001C18  D774               	goto	l2025
  6970  001C1A  0A01               	xorlw	1	; case 27
  6971  001C1C  B4D8               	btfsc	status,2,c
  6972  001C1E  D773               	goto	l2026
  6973  001C20  0A07               	xorlw	7	; case 28
  6974  001C22  B4D8               	btfsc	status,2,c
  6975  001C24  D772               	goto	l2027
  6976  001C26  0A01               	xorlw	1	; case 29
  6977  001C28  B4D8               	btfsc	status,2,c
  6978  001C2A  D771               	goto	l2028
  6979  001C2C  0A03               	xorlw	3	; case 30
  6980  001C2E  B4D8               	btfsc	status,2,c
  6981  001C30  D770               	goto	l2029
  6982  001C32  0A01               	xorlw	1	; case 31
  6983  001C34  B4D8               	btfsc	status,2,c
  6984  001C36  D76F               	goto	l2030
  6985  001C38  0A37               	xorlw	55	; case 40
  6986  001C3A  B4D8               	btfsc	status,2,c
  6987  001C3C  D76E               	goto	l2031
  6988  001C3E  0A01               	xorlw	1	; case 41
  6989  001C40  B4D8               	btfsc	status,2,c
  6990  001C42  D76D               	goto	l2032
  6991  001C44  0A05               	xorlw	5	; case 44
  6992  001C46  B4D8               	btfsc	status,2,c
  6993  001C48  D76C               	goto	l2033
  6994  001C4A  0A01               	xorlw	1	; case 45
  6995  001C4C  B4D8               	btfsc	status,2,c
  6996  001C4E  D76B               	goto	l2034
  6997  001C50  0A03               	xorlw	3	; case 46
  6998  001C52  B4D8               	btfsc	status,2,c
  6999  001C54  D76A               	goto	l2035
  7000  001C56  0A01               	xorlw	1	; case 47
  7001  001C58  B4D8               	btfsc	status,2,c
  7002  001C5A  D769               	goto	l2036
  7003  001C5C  0A19               	xorlw	25	; case 54
  7004  001C5E  B4D8               	btfsc	status,2,c
  7005  001C60  D768               	goto	l2037
  7006  001C62  0A01               	xorlw	1	; case 55
  7007  001C64  B4D8               	btfsc	status,2,c
  7008  001C66  D767               	goto	l2038
  7009  001C68  0A0F               	xorlw	15	; case 56
  7010  001C6A  B4D8               	btfsc	status,2,c
  7011  001C6C  D766               	goto	l2039
  7012  001C6E  0A01               	xorlw	1	; case 57
  7013  001C70  B4D8               	btfsc	status,2,c
  7014  001C72  D765               	goto	l2040
  7015  001C74  0A03               	xorlw	3	; case 58
  7016  001C76  B4D8               	btfsc	status,2,c
  7017  001C78  D764               	goto	l2041
  7018  001C7A  0A01               	xorlw	1	; case 59
  7019  001C7C  B4D8               	btfsc	status,2,c
  7020  001C7E  D763               	goto	l2042
  7021  001C80  0A07               	xorlw	7	; case 60
  7022  001C82  B4D8               	btfsc	status,2,c
  7023  001C84  D762               	goto	l2043
  7024  001C86  0A01               	xorlw	1	; case 61
  7025  001C88  B4D8               	btfsc	status,2,c
  7026  001C8A  D761               	goto	l2044
  7027  001C8C  D766               	goto	l2047
  7028  001C8E                     l14962:
  7029                           
  7030                           ; Switch size 1, requested type "space"
  7031                           ; Number of cases is 2, Range of values is 254 to 255
  7032                           ; switch strategies available:
  7033                           ; Name         Instructions Cycles
  7034                           ; simple_byte            7     4 (average)
  7035                           ;	Chosen strategy is simple_byte
  7036  001C8E  5003               	movf	??__get_fbr,w,c
  7037  001C90  0AFE               	xorlw	254	; case 254
  7038  001C92  B4D8               	btfsc	status,2,c
  7039  001C94  D75E               	goto	l2045
  7040  001C96  0A01               	xorlw	1	; case 255
  7041  001C98  B4D8               	btfsc	status,2,c
  7042  001C9A  D75D               	goto	l2046
  7043  001C9C  D75E               	goto	l2047
  7044  001C9E                     __end_of__get_fbr:
  7045                           	opt stack 0
  7046                           tblptru	equ	0xFF8
  7047                           tblptrh	equ	0xFF7
  7048                           tblptrl	equ	0xFF6
  7049                           tablat	equ	0xFF5
  7050                           intcon	equ	0xFF2
  7051                           intcon3	equ	0xFF0
  7052                           postinc0	equ	0xFEE
  7053                           wreg	equ	0xFE8
  7054                           postdec1	equ	0xFE5
  7055                           plusw1	equ	0xFE3
  7056                           fsr1h	equ	0xFE2
  7057                           fsr1l	equ	0xFE1
  7058                           indf2	equ	0xFDF
  7059                           postinc2	equ	0xFDE
  7060                           plusw2	equ	0xFDB
  7061                           fsr2h	equ	0xFDA
  7062                           fsr2l	equ	0xFD9
  7063                           status	equ	0xFD8
  7064                           
  7065 ;; *************** function __get_fat *****************
  7066 ;; Defined at:
  7067 ;;		line 814 in file "fat16.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;  idx             2    0[COMRAM] unsigned int 
  7070 ;; Auto vars:     Size  Location     Type
  7071 ;;		None
  7072 ;; Return value:  Size  Location     Type
  7073 ;;                  1    wreg      unsigned char 
  7074 ;; Registers used:
  7075 ;;		wreg, status,2, status,0
  7076 ;; Tracked objects:
  7077 ;;		On entry : 0/0
  7078 ;;		On exit  : 0/0
  7079 ;;		Unchanged: 0/0
  7080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7081 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7083 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7084 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7085 ;;Total ram usage:        4 bytes
  7086 ;; Hardware stack levels used:    1
  7087 ;; This function calls:
  7088 ;;		Nothing
  7089 ;; This function is called by:
  7090 ;;		_fat_format
  7091 ;; This function uses a non-reentrant model
  7092 ;;
  7093                           
  7094                           	psect	text23
  7095  006FEE                     __ptext23:
  7096                           	opt stack 0
  7097  006FEE                     __get_fat:
  7098                           	opt stack 27
  7099                           
  7100                           ;fat16.c: 816: switch (idx)
  7101                           
  7102                           ;incstack = 0
  7103  006FEE  D00E               	goto	l2051
  7104  006FF0                     
  7105                           ;fat16.c: 820: return 0xF8;
  7106  006FF0  0EF8               	movlw	248
  7107  006FF2  0012               	return	
  7108  006FF4                     
  7109                           ;fat16.c: 822: return 0xFF;
  7110  006FF4  0EFF               	movlw	255
  7111  006FF6  0012               	return	
  7112  006FF8                     
  7113                           ;fat16.c: 824: return 0xFF;
  7114  006FF8  0EFF               	movlw	255
  7115  006FFA  0012               	return	
  7116  006FFC                     
  7117                           ;fat16.c: 826: return 0xFF;
  7118  006FFC  0EFF               	movlw	255
  7119  006FFE  0012               	return	
  7120  007000                     
  7121                           ;fat16.c: 829: return 0xFF;
  7122  007000  0EFF               	movlw	255
  7123  007002  0012               	return	
  7124  007004                     
  7125                           ;fat16.c: 831: return 0xFF;
  7126  007004  0EFF               	movlw	255
  7127  007006  0012               	return	
  7128  007008                     
  7129                           ;fat16.c: 833: return 0X00;
  7130  007008  0E00               	movlw	0
  7131                           
  7132                           ;fat16.c: 834: }
  7133  00700A  0012               	return	
  7134  00700C                     l2051:
  7135  00700C  C001  F003         	movff	__get_fat@idx,??__get_fat
  7136  007010  C002  F004         	movff	__get_fat@idx+1,??__get_fat+1
  7137                           
  7138                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7139                           ; Switch size 1, requested type "space"
  7140                           ; Number of cases is 1, Range of values is 0 to 0
  7141                           ; switch strategies available:
  7142                           ; Name         Instructions Cycles
  7143                           ; simple_byte            4     3 (average)
  7144                           ;	Chosen strategy is simple_byte
  7145  007014  5004               	movf	??__get_fat+1,w,c
  7146  007016  0A00               	xorlw	0	; case 0
  7147  007018  A4D8               	btfss	status,2,c
  7148  00701A  D7F6               	goto	l2059
  7149                           
  7150                           ; Switch size 1, requested type "space"
  7151                           ; Number of cases is 6, Range of values is 0 to 5
  7152                           ; switch strategies available:
  7153                           ; Name         Instructions Cycles
  7154                           ; simple_byte           19    10 (average)
  7155                           ;	Chosen strategy is simple_byte
  7156  00701C  5003               	movf	??__get_fat,w,c
  7157  00701E  0A00               	xorlw	0	; case 0
  7158  007020  B4D8               	btfsc	status,2,c
  7159  007022  D7E6               	goto	l2052
  7160  007024  0A01               	xorlw	1	; case 1
  7161  007026  B4D8               	btfsc	status,2,c
  7162  007028  D7E5               	goto	l2054
  7163  00702A  0A03               	xorlw	3	; case 2
  7164  00702C  B4D8               	btfsc	status,2,c
  7165  00702E  D7E4               	goto	l2055
  7166  007030  0A01               	xorlw	1	; case 3
  7167  007032  B4D8               	btfsc	status,2,c
  7168  007034  D7E3               	goto	l2056
  7169  007036  0A07               	xorlw	7	; case 4
  7170  007038  B4D8               	btfsc	status,2,c
  7171  00703A  D7E2               	goto	l2057
  7172  00703C  0A01               	xorlw	1	; case 5
  7173  00703E  B4D8               	btfsc	status,2,c
  7174  007040  D7E1               	goto	l2058
  7175  007042  D7E2               	goto	l2059
  7176  007044                     __end_of__get_fat:
  7177                           	opt stack 0
  7178                           tblptru	equ	0xFF8
  7179                           tblptrh	equ	0xFF7
  7180                           tblptrl	equ	0xFF6
  7181                           tablat	equ	0xFF5
  7182                           intcon	equ	0xFF2
  7183                           intcon3	equ	0xFF0
  7184                           postinc0	equ	0xFEE
  7185                           wreg	equ	0xFE8
  7186                           postdec1	equ	0xFE5
  7187                           plusw1	equ	0xFE3
  7188                           fsr1h	equ	0xFE2
  7189                           fsr1l	equ	0xFE1
  7190                           indf2	equ	0xFDF
  7191                           postinc2	equ	0xFDE
  7192                           plusw2	equ	0xFDB
  7193                           fsr2h	equ	0xFDA
  7194                           fsr2l	equ	0xFD9
  7195                           status	equ	0xFD8
  7196                           
  7197 ;; *************** function __get_data *****************
  7198 ;; Defined at:
  7199 ;;		line 914 in file "fat16.c"
  7200 ;; Parameters:    Size  Location     Type
  7201 ;;  idx             2    0[COMRAM] unsigned int 
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;		None
  7204 ;; Return value:  Size  Location     Type
  7205 ;;                  1    wreg      unsigned char 
  7206 ;; Registers used:
  7207 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7208 ;; Tracked objects:
  7209 ;;		On entry : 0/0
  7210 ;;		On exit  : 0/0
  7211 ;;		Unchanged: 0/0
  7212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7213 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7216 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7217 ;;Total ram usage:        2 bytes
  7218 ;; Hardware stack levels used:    1
  7219 ;; This function calls:
  7220 ;;		Nothing
  7221 ;; This function is called by:
  7222 ;;		_fat_format
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226                           	psect	text24
  7227  007A6E                     __ptext24:
  7228                           	opt stack 0
  7229  007A6E                     __get_data:
  7230                           	opt stack 27
  7231                           
  7232                           ;fat16.c: 916: if (idx < 12)
  7233                           
  7234                           ;incstack = 0
  7235  007A6E  5002               	movf	__get_data@idx+1,w,c
  7236  007A70  E110               	bnz	l12104
  7237  007A72  0E0C               	movlw	12
  7238  007A74  5C01               	subwf	__get_data@idx,w,c
  7239  007A76  B0D8               	btfsc	status,0,c
  7240  007A78  D00C               	goto	l2095
  7241                           
  7242                           ;fat16.c: 917: {;fat16.c: 918: return "Hello World!"[idx];
  7243  007A7A  0ECF               	movlw	low STR_12
  7244  007A7C  2401               	addwf	__get_data@idx,w,c
  7245  007A7E  6EF6               	movwf	tblptrl,c
  7246  007A80  0E8F               	movlw	high STR_12
  7247  007A82  2002               	addwfc	__get_data@idx+1,w,c
  7248  007A84  6EF7               	movwf	tblptrh,c
  7249  007A86                     	if	1	;There are 3 active tblptr bytes
  7250  007A86  6AF8               	clrf	tblptru,c
  7251  007A88  0E00               	movlw	low (__mediumconst shr (0+16))
  7252  007A8A  22F8               	addwfc	tblptru,f,c
  7253  007A8C                     	endif
  7254  007A8C  0008               	tblrd		*
  7255  007A8E  50F5               	movf	tablat,w,c
  7256  007A90  0012               	return	
  7257  007A92                     l2095:
  7258  007A92                     l12104:
  7259                           
  7260                           ;fat16.c: 919: };fat16.c: 920: return 0X00;
  7261  007A92  0E00               	movlw	0
  7262  007A94  0012               	return	
  7263  007A96                     __end_of__get_data:
  7264                           	opt stack 0
  7265                           tblptru	equ	0xFF8
  7266                           tblptrh	equ	0xFF7
  7267                           tblptrl	equ	0xFF6
  7268                           tablat	equ	0xFF5
  7269                           intcon	equ	0xFF2
  7270                           intcon3	equ	0xFF0
  7271                           postinc0	equ	0xFEE
  7272                           wreg	equ	0xFE8
  7273                           postdec1	equ	0xFE5
  7274                           plusw1	equ	0xFE3
  7275                           fsr1h	equ	0xFE2
  7276                           fsr1l	equ	0xFE1
  7277                           indf2	equ	0xFDF
  7278                           postinc2	equ	0xFDE
  7279                           plusw2	equ	0xFDB
  7280                           fsr2h	equ	0xFDA
  7281                           fsr2l	equ	0xFD9
  7282                           status	equ	0xFD8
  7283                           
  7284 ;; *************** function __system_timer0_init *****************
  7285 ;; Defined at:
  7286 ;;		line 111 in file "os.c"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;		None
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;		None
  7291 ;; Return value:  Size  Location     Type
  7292 ;;                  1    wreg      void 
  7293 ;; Registers used:
  7294 ;;		wreg, status,2
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7304 ;;Total ram usage:        0 bytes
  7305 ;; Hardware stack levels used:    1
  7306 ;; This function calls:
  7307 ;;		Nothing
  7308 ;; This function is called by:
  7309 ;;		_system_init
  7310 ;; This function uses a non-reentrant model
  7311 ;;
  7312                           
  7313                           	psect	text25
  7314  007BFE                     __ptext25:
  7315                           	opt stack 0
  7316  007BFE                     __system_timer0_init:
  7317                           	opt stack 29
  7318                           
  7319                           ;os.c: 114: T0CONbits.T0CS = 0;
  7320                           
  7321                           ;incstack = 0
  7322  007BFE  9AD5               	bcf	4053,5,c	;volatile
  7323                           
  7324                           ;os.c: 116: T0CONbits.T08BIT = 0;
  7325  007C00  9CD5               	bcf	4053,6,c	;volatile
  7326                           
  7327                           ;os.c: 118: T0CONbits.T0PS2 = 0;
  7328  007C02  94D5               	bcf	4053,2,c	;volatile
  7329                           
  7330                           ;os.c: 119: T0CONbits.T0PS1 = 1;
  7331  007C04  82D5               	bsf	4053,1,c	;volatile
  7332                           
  7333                           ;os.c: 120: T0CONbits.T0PS0 = 0;
  7334  007C06  90D5               	bcf	4053,0,c	;volatile
  7335                           
  7336                           ;os.c: 122: T0CONbits.PSA = 0;
  7337  007C08  96D5               	bcf	4053,3,c	;volatile
  7338                           
  7339                           ;os.c: 124: TMR0H = 0xD1;
  7340  007C0A  0ED1               	movlw	209
  7341  007C0C  6ED7               	movwf	4055,c	;volatile
  7342                           
  7343                           ;os.c: 125: TMR0L = 0x20;
  7344  007C0E  0E20               	movlw	32
  7345  007C10  6ED6               	movwf	4054,c	;volatile
  7346                           
  7347                           ;os.c: 127: T0CONbits.TMR0ON = 1;
  7348  007C12  8ED5               	bsf	4053,7,c	;volatile
  7349                           
  7350                           ;os.c: 131: INTCONbits.TMR0IF = 0;
  7351  007C14  94F2               	bcf	intcon,2,c	;volatile
  7352                           
  7353                           ;os.c: 134: os.timeSlot = 0;
  7354  007C16  0E00               	movlw	0
  7355  007C18  0100               	movlb	0	; () banked
  7356  007C1A  6F62               	movwf	(_os+2)& (0+255),b	;volatile
  7357                           
  7358                           ; BSR set to: 0
  7359  007C1C  0012               	return		;funcret
  7360  007C1E                     __end_of__system_timer0_init:
  7361                           	opt stack 0
  7362                           tblptru	equ	0xFF8
  7363                           tblptrh	equ	0xFF7
  7364                           tblptrl	equ	0xFF6
  7365                           tablat	equ	0xFF5
  7366                           intcon	equ	0xFF2
  7367                           intcon3	equ	0xFF0
  7368                           postinc0	equ	0xFEE
  7369                           wreg	equ	0xFE8
  7370                           postdec1	equ	0xFE5
  7371                           plusw1	equ	0xFE3
  7372                           fsr1h	equ	0xFE2
  7373                           fsr1l	equ	0xFE1
  7374                           indf2	equ	0xFDF
  7375                           postinc2	equ	0xFDE
  7376                           plusw2	equ	0xFDB
  7377                           fsr2h	equ	0xFDA
  7378                           fsr2l	equ	0xFD9
  7379                           status	equ	0xFD8
  7380                           
  7381 ;; *************** function __system_encoder_init *****************
  7382 ;; Defined at:
  7383 ;;		line 72 in file "os.c"
  7384 ;; Parameters:    Size  Location     Type
  7385 ;;		None
  7386 ;; Auto vars:     Size  Location     Type
  7387 ;;		None
  7388 ;; Return value:  Size  Location     Type
  7389 ;;                  1    wreg      void 
  7390 ;; Registers used:
  7391 ;;		wreg, status,2
  7392 ;; Tracked objects:
  7393 ;;		On entry : 0/0
  7394 ;;		On exit  : 0/0
  7395 ;;		Unchanged: 0/0
  7396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7401 ;;Total ram usage:        0 bytes
  7402 ;; Hardware stack levels used:    1
  7403 ;; This function calls:
  7404 ;;		Nothing
  7405 ;; This function is called by:
  7406 ;;		_system_init
  7407 ;; This function uses a non-reentrant model
  7408 ;;
  7409                           
  7410                           	psect	text26
  7411  007686                     __ptext26:
  7412                           	opt stack 0
  7413  007686                     __system_encoder_init:
  7414                           	opt stack 29
  7415                           
  7416                           ;os.c: 74: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  7417                           
  7418                           ; BSR set to: 0
  7419                           ;incstack = 0
  7420  007686  0E55               	movlw	85
  7421  007688  6EA7               	movwf	4007,c	;volsfr
  7422  00768A  0EAA               	movlw	170
  7423  00768C  6EA7               	movwf	4007,c	;volsfr
  7424  00768E  010E               	movlb	14	; () banked
  7425  007690  91BF               	bcf	191,0,b	;volatile
  7426                           
  7427                           ;os.c: 75: RPINR1 = 0;
  7428  007692  0E00               	movlw	0
  7429  007694  6FE1               	movwf	225,b	;volatile
  7430                           
  7431                           ;os.c: 76: RPINR3 = 9;
  7432  007696  0E09               	movlw	9
  7433  007698  6FE3               	movwf	227,b	;volatile
  7434                           
  7435                           ;os.c: 77: RPINR2 = 10;
  7436  00769A  0E0A               	movlw	10
  7437  00769C  6FE2               	movwf	226,b	;volatile
  7438                           
  7439                           ;os.c: 78: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
  7440  00769E  0E55               	movlw	85
  7441  0076A0  6EA7               	movwf	4007,c	;volsfr
  7442  0076A2  0EAA               	movlw	170
  7443  0076A4  6EA7               	movwf	4007,c	;volsfr
  7444                           
  7445                           ; BSR set to: 14
  7446  0076A6  91BF               	bcf	191,0,b	;volatile
  7447                           
  7448                           ; BSR set to: 14
  7449                           ;os.c: 81: INTCON2bits.INTEDG1 = 0;
  7450  0076A8  9AF1               	bcf	intcon2,5,c	;volatile
  7451                           
  7452                           ; BSR set to: 14
  7453                           ;os.c: 82: INTCON3bits.INT1IF = 0;
  7454  0076AA  90F0               	bcf	intcon3,0,c	;volatile
  7455                           
  7456                           ; BSR set to: 14
  7457                           ;os.c: 84: INTCON2bits.INTEDG2 = 1;
  7458  0076AC  88F1               	bsf	intcon2,4,c	;volatile
  7459                           
  7460                           ; BSR set to: 14
  7461                           ;os.c: 85: INTCON3bits.INT2IF = 0;
  7462  0076AE  92F0               	bcf	intcon3,1,c	;volatile
  7463                           
  7464                           ; BSR set to: 14
  7465                           ;os.c: 87: INTCON2bits.INTEDG3 = 1;
  7466  0076B0  86F1               	bsf	intcon2,3,c	;volatile
  7467                           
  7468                           ; BSR set to: 14
  7469                           ;os.c: 88: INTCON3bits.INT3IF = 0;
  7470  0076B2  94F0               	bcf	intcon3,2,c	;volatile
  7471                           
  7472                           ;os.c: 90: os.encoderCount = 0;
  7473  0076B4  0E00               	movlw	0
  7474  0076B6  0100               	movlb	0	; () banked
  7475  0076B8  6F60               	movwf	_os& (0+255),b	;volatile
  7476                           
  7477                           ;os.c: 91: os.buttonCount = 0;
  7478  0076BA  0E00               	movlw	0
  7479  0076BC  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  7480                           
  7481                           ; BSR set to: 0
  7482  0076BE  0012               	return		;funcret
  7483  0076C0                     __end_of__system_encoder_init:
  7484                           	opt stack 0
  7485                           tblptru	equ	0xFF8
  7486                           tblptrh	equ	0xFF7
  7487                           tblptrl	equ	0xFF6
  7488                           tablat	equ	0xFF5
  7489                           intcon	equ	0xFF2
  7490                           intcon2	equ	0xFF1
  7491                           intcon3	equ	0xFF0
  7492                           postinc0	equ	0xFEE
  7493                           wreg	equ	0xFE8
  7494                           postdec1	equ	0xFE5
  7495                           plusw1	equ	0xFE3
  7496                           fsr1h	equ	0xFE2
  7497                           fsr1l	equ	0xFE1
  7498                           indf2	equ	0xFDF
  7499                           postinc2	equ	0xFDE
  7500                           plusw2	equ	0xFDB
  7501                           fsr2h	equ	0xFDA
  7502                           fsr2l	equ	0xFD9
  7503                           status	equ	0xFD8
  7504                           
  7505 ;; *************** function _spi_get_external_tx_buffer *****************
  7506 ;; Defined at:
  7507 ;;		line 75 in file "spi.c"
  7508 ;; Parameters:    Size  Location     Type
  7509 ;;		None
  7510 ;; Auto vars:     Size  Location     Type
  7511 ;;		None
  7512 ;; Return value:  Size  Location     Type
  7513 ;;                  2    0[COMRAM] PTR unsigned char 
  7514 ;; Registers used:
  7515 ;;		wreg, status,2, status,0
  7516 ;; Tracked objects:
  7517 ;;		On entry : 0/0
  7518 ;;		On exit  : 0/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7521 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7524 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7525 ;;Total ram usage:        2 bytes
  7526 ;; Hardware stack levels used:    1
  7527 ;; This function calls:
  7528 ;;		Nothing
  7529 ;; This function is called by:
  7530 ;;		_main
  7531 ;; This function uses a non-reentrant model
  7532 ;;
  7533                           
  7534                           	psect	text27
  7535  007D82                     __ptext27:
  7536                           	opt stack 0
  7537  007D82                     _spi_get_external_tx_buffer:
  7538                           	opt stack 30
  7539                           
  7540                           ;spi.c: 77: return _spi_external_tx_buffer;
  7541                           
  7542                           ; BSR set to: 0
  7543                           ;incstack = 0
  7544  007D82  0E40               	movlw	low __spi_external_tx_buffer
  7545  007D84  6E01               	movwf	?_spi_get_external_tx_buffer,c
  7546  007D86  0E02               	movlw	high __spi_external_tx_buffer
  7547  007D88  6E02               	movwf	?_spi_get_external_tx_buffer+1,c
  7548  007D8A  0012               	return	
  7549  007D8C                     __end_of_spi_get_external_tx_buffer:
  7550                           	opt stack 0
  7551                           tblptru	equ	0xFF8
  7552                           tblptrh	equ	0xFF7
  7553                           tblptrl	equ	0xFF6
  7554                           tablat	equ	0xFF5
  7555                           intcon	equ	0xFF2
  7556                           intcon2	equ	0xFF1
  7557                           intcon3	equ	0xFF0
  7558                           postinc0	equ	0xFEE
  7559                           wreg	equ	0xFE8
  7560                           postdec1	equ	0xFE5
  7561                           plusw1	equ	0xFE3
  7562                           fsr1h	equ	0xFE2
  7563                           fsr1l	equ	0xFE1
  7564                           indf2	equ	0xFDF
  7565                           postinc2	equ	0xFDE
  7566                           plusw2	equ	0xFDB
  7567                           fsr2h	equ	0xFDA
  7568                           fsr2l	equ	0xFD9
  7569                           status	equ	0xFD8
  7570                           
  7571 ;; *************** function _spi_get_external_rx_buffer *****************
  7572 ;; Defined at:
  7573 ;;		line 80 in file "spi.c"
  7574 ;; Parameters:    Size  Location     Type
  7575 ;;		None
  7576 ;; Auto vars:     Size  Location     Type
  7577 ;;		None
  7578 ;; Return value:  Size  Location     Type
  7579 ;;                  2    0[COMRAM] PTR unsigned char 
  7580 ;; Registers used:
  7581 ;;		wreg, status,2, status,0
  7582 ;; Tracked objects:
  7583 ;;		On entry : 0/0
  7584 ;;		On exit  : 0/0
  7585 ;;		Unchanged: 0/0
  7586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7587 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7590 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7591 ;;Total ram usage:        2 bytes
  7592 ;; Hardware stack levels used:    1
  7593 ;; This function calls:
  7594 ;;		Nothing
  7595 ;; This function is called by:
  7596 ;;		_main
  7597 ;; This function uses a non-reentrant model
  7598 ;;
  7599                           
  7600                           	psect	text28
  7601  007D8C                     __ptext28:
  7602                           	opt stack 0
  7603  007D8C                     _spi_get_external_rx_buffer:
  7604                           	opt stack 30
  7605                           
  7606                           ;spi.c: 82: return _spi_external_rx_buffer;
  7607                           
  7608                           ;incstack = 0
  7609  007D8C  0E00               	movlw	low __spi_external_rx_buffer
  7610  007D8E  6E01               	movwf	?_spi_get_external_rx_buffer,c
  7611  007D90  0E02               	movlw	high __spi_external_rx_buffer
  7612  007D92  6E02               	movwf	?_spi_get_external_rx_buffer+1,c
  7613  007D94  0012               	return	
  7614  007D96                     __end_of_spi_get_external_rx_buffer:
  7615                           	opt stack 0
  7616                           tblptru	equ	0xFF8
  7617                           tblptrh	equ	0xFF7
  7618                           tblptrl	equ	0xFF6
  7619                           tablat	equ	0xFF5
  7620                           intcon	equ	0xFF2
  7621                           intcon2	equ	0xFF1
  7622                           intcon3	equ	0xFF0
  7623                           postinc0	equ	0xFEE
  7624                           wreg	equ	0xFE8
  7625                           postdec1	equ	0xFE5
  7626                           plusw1	equ	0xFE3
  7627                           fsr1h	equ	0xFE2
  7628                           fsr1l	equ	0xFE1
  7629                           indf2	equ	0xFDF
  7630                           postinc2	equ	0xFDE
  7631                           plusw2	equ	0xFDB
  7632                           fsr2h	equ	0xFDA
  7633                           fsr2l	equ	0xFD9
  7634                           status	equ	0xFD8
  7635                           
  7636 ;; *************** function _display_update *****************
  7637 ;; Defined at:
  7638 ;;		line 508 in file "display.c"
  7639 ;; Parameters:    Size  Location     Type
  7640 ;;		None
  7641 ;; Auto vars:     Size  Location     Type
  7642 ;;		None
  7643 ;; Return value:  Size  Location     Type
  7644 ;;                  1    wreg      void 
  7645 ;; Registers used:
  7646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7647 ;; Tracked objects:
  7648 ;;		On entry : 0/0
  7649 ;;		On exit  : 0/0
  7650 ;;		Unchanged: 0/0
  7651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7656 ;;Total ram usage:        0 bytes
  7657 ;; Hardware stack levels used:    1
  7658 ;; Hardware stack levels required when called:    4
  7659 ;; This function calls:
  7660 ;;		_i2c_display_cursor
  7661 ;;		_i2c_display_write_fixed
  7662 ;; This function is called by:
  7663 ;;		_main
  7664 ;; This function uses a non-reentrant model
  7665 ;;
  7666                           
  7667                           	psect	text29
  7668  006930                     __ptext29:
  7669                           	opt stack 0
  7670  006930                     _display_update:
  7671                           	opt stack 26
  7672                           
  7673                           ;display.c: 510: i2c_display_cursor(0, 0);
  7674                           
  7675                           ;incstack = 0
  7676  006930  0E00               	movlw	0
  7677  006932  6E0E               	movwf	i2c_display_cursor@position,c
  7678  006934  0E00               	movlw	0
  7679  006936  EC85  F03D         	call	_i2c_display_cursor
  7680                           
  7681                           ;display.c: 511: i2c_display_write_fixed(&display_content[0][0], 20);
  7682  00693A  0E74               	movlw	low _display_content
  7683  00693C  6E06               	movwf	i2c_display_write_fixed@data,c
  7684  00693E  0E01               	movlw	high _display_content
  7685  006940  6E07               	movwf	i2c_display_write_fixed@data+1,c
  7686  006942  0E14               	movlw	20
  7687  006944  6E08               	movwf	i2c_display_write_fixed@length,c
  7688  006946  EC22  F038         	call	_i2c_display_write_fixed	;wreg free
  7689                           
  7690                           ;display.c: 512: i2c_display_cursor(1, 0);
  7691  00694A  0E00               	movlw	0
  7692  00694C  6E0E               	movwf	i2c_display_cursor@position,c
  7693  00694E  0E01               	movlw	1
  7694  006950  EC85  F03D         	call	_i2c_display_cursor
  7695                           
  7696                           ;display.c: 513: i2c_display_write_fixed(&display_content[1][0], 20);
  7697  006954  0E88               	movlw	low (_display_content+20)
  7698  006956  6E06               	movwf	i2c_display_write_fixed@data,c
  7699  006958  0E01               	movlw	high (_display_content+20)
  7700  00695A  6E07               	movwf	i2c_display_write_fixed@data+1,c
  7701  00695C  0E14               	movlw	20
  7702  00695E  6E08               	movwf	i2c_display_write_fixed@length,c
  7703  006960  EC22  F038         	call	_i2c_display_write_fixed	;wreg free
  7704                           
  7705                           ;display.c: 514: i2c_display_cursor(2, 0);
  7706  006964  0E00               	movlw	0
  7707  006966  6E0E               	movwf	i2c_display_cursor@position,c
  7708  006968  0E02               	movlw	2
  7709  00696A  EC85  F03D         	call	_i2c_display_cursor
  7710                           
  7711                           ;display.c: 515: i2c_display_write_fixed(&display_content[2][0], 20);
  7712  00696E  0E9C               	movlw	low (_display_content+40)
  7713  006970  6E06               	movwf	i2c_display_write_fixed@data,c
  7714  006972  0E01               	movlw	high (_display_content+40)
  7715  006974  6E07               	movwf	i2c_display_write_fixed@data+1,c
  7716  006976  0E14               	movlw	20
  7717  006978  6E08               	movwf	i2c_display_write_fixed@length,c
  7718  00697A  EC22  F038         	call	_i2c_display_write_fixed	;wreg free
  7719                           
  7720                           ;display.c: 516: i2c_display_cursor(3, 0);
  7721  00697E  0E00               	movlw	0
  7722  006980  6E0E               	movwf	i2c_display_cursor@position,c
  7723  006982  0E03               	movlw	3
  7724  006984  EC85  F03D         	call	_i2c_display_cursor
  7725                           
  7726                           ;display.c: 517: i2c_display_write_fixed(&display_content[3][0], 20);
  7727  006988  0EB0               	movlw	low (_display_content+60)
  7728  00698A  6E06               	movwf	i2c_display_write_fixed@data,c
  7729  00698C  0E01               	movlw	high (_display_content+60)
  7730  00698E  6E07               	movwf	i2c_display_write_fixed@data+1,c
  7731  006990  0E14               	movlw	20
  7732  006992  6E08               	movwf	i2c_display_write_fixed@length,c
  7733  006994  EC22  F038         	call	_i2c_display_write_fixed	;wreg free
  7734  006998  0012               	return		;funcret
  7735  00699A                     __end_of_display_update:
  7736                           	opt stack 0
  7737                           tblptru	equ	0xFF8
  7738                           tblptrh	equ	0xFF7
  7739                           tblptrl	equ	0xFF6
  7740                           tablat	equ	0xFF5
  7741                           intcon	equ	0xFF2
  7742                           intcon2	equ	0xFF1
  7743                           intcon3	equ	0xFF0
  7744                           postinc0	equ	0xFEE
  7745                           wreg	equ	0xFE8
  7746                           postdec1	equ	0xFE5
  7747                           plusw1	equ	0xFE3
  7748                           fsr1h	equ	0xFE2
  7749                           fsr1l	equ	0xFE1
  7750                           indf2	equ	0xFDF
  7751                           postinc2	equ	0xFDE
  7752                           plusw2	equ	0xFDB
  7753                           fsr2h	equ	0xFDA
  7754                           fsr2l	equ	0xFD9
  7755                           status	equ	0xFD8
  7756                           
  7757 ;; *************** function _i2c_display_write_fixed *****************
  7758 ;; Defined at:
  7759 ;;		line 262 in file "i2c.c"
  7760 ;; Parameters:    Size  Location     Type
  7761 ;;  data            2    5[COMRAM] PTR unsigned char 
  7762 ;;		 -> display_content(80), 
  7763 ;;  length          1    7[COMRAM] unsigned char 
  7764 ;; Auto vars:     Size  Location     Type
  7765 ;;  pos             1    8[COMRAM] unsigned char 
  7766 ;; Return value:  Size  Location     Type
  7767 ;;                  1    wreg      void 
  7768 ;; Registers used:
  7769 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7770 ;; Tracked objects:
  7771 ;;		On entry : 0/0
  7772 ;;		On exit  : 0/0
  7773 ;;		Unchanged: 0/0
  7774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7775 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7776 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7778 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7779 ;;Total ram usage:        4 bytes
  7780 ;; Hardware stack levels used:    1
  7781 ;; Hardware stack levels required when called:    1
  7782 ;; This function calls:
  7783 ;;		__i2c_send
  7784 ;;		__i2c_start
  7785 ;;		__i2c_stop
  7786 ;;		__i2c_wait_idle
  7787 ;;		_i2c_set_frequency
  7788 ;; This function is called by:
  7789 ;;		_display_update
  7790 ;; This function uses a non-reentrant model
  7791 ;;
  7792                           
  7793                           	psect	text30
  7794  007044                     __ptext30:
  7795                           	opt stack 0
  7796  007044                     _i2c_display_write_fixed:
  7797                           	opt stack 28
  7798                           
  7799                           ;i2c.c: 264: uint8_t pos;;i2c.c: 267: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  7800                           
  7801                           ;incstack = 0
  7802  007044  0E02               	movlw	2
  7803  007046  EC0C  F03D         	call	_i2c_set_frequency
  7804                           
  7805                           ;i2c.c: 269: _i2c_wait_idle();
  7806  00704A  EC1B  F037         	call	__i2c_wait_idle	;wreg free
  7807                           
  7808                           ;i2c.c: 270: _i2c_start();
  7809  00704E  EC0F  F03F         	call	__i2c_start	;wreg free
  7810                           
  7811                           ;i2c.c: 271: _i2c_wait_idle();
  7812  007052  EC1B  F037         	call	__i2c_wait_idle	;wreg free
  7813                           
  7814                           ;i2c.c: 272: _i2c_send(0b01111000);
  7815  007056  0E78               	movlw	120
  7816  007058  EC13  F03F         	call	__i2c_send
  7817                           
  7818                           ;i2c.c: 273: _i2c_wait_idle();
  7819  00705C  EC1B  F037         	call	__i2c_wait_idle	;wreg free
  7820                           
  7821                           ;i2c.c: 274: _i2c_send(0b01000000);
  7822  007060  0E40               	movlw	64
  7823  007062  EC13  F03F         	call	__i2c_send
  7824                           
  7825                           ;i2c.c: 275: _i2c_wait_idle();
  7826  007066  EC1B  F037         	call	__i2c_wait_idle	;wreg free
  7827                           
  7828                           ;i2c.c: 278: for(pos=0; pos<length; ++pos)
  7829  00706A  0E00               	movlw	0
  7830  00706C  6E09               	movwf	i2c_display_write_fixed@pos,c
  7831  00706E  D00E               	goto	l1219
  7832  007070                     
  7833                           ;i2c.c: 279: {;i2c.c: 280: _i2c_send(data[pos]);
  7834  007070  5009               	movf	i2c_display_write_fixed@pos,w,c
  7835  007072  0D01               	mullw	1
  7836  007074  50F3               	movf	prodl,w,c
  7837  007076  2406               	addwf	i2c_display_write_fixed@data,w,c
  7838  007078  6ED9               	movwf	fsr2l,c
  7839  00707A  50F4               	movf	prodh,w,c
  7840  00707C  2007               	addwfc	i2c_display_write_fixed@data+1,w,c
  7841  00707E  6EDA               	movwf	fsr2h,c
  7842  007080  50DF               	movf	indf2,w,c
  7843  007082  EC13  F03F         	call	__i2c_send
  7844                           
  7845                           ;i2c.c: 281: _i2c_wait_idle();
  7846  007086  EC1B  F037         	call	__i2c_wait_idle	;wreg free
  7847  00708A  2A09               	incf	i2c_display_write_fixed@pos,f,c
  7848  00708C                     l1219:
  7849  00708C  5008               	movf	i2c_display_write_fixed@length,w,c
  7850  00708E  5C09               	subwf	i2c_display_write_fixed@pos,w,c
  7851  007090  A0D8               	btfss	status,0,c
  7852  007092  D7EE               	goto	l1220
  7853                           
  7854                           ;i2c.c: 282: };i2c.c: 284: _i2c_stop();
  7855  007094  EC0B  F03F         	call	__i2c_stop	;wreg free
  7856  007098  0012               	return		;funcret
  7857  00709A                     __end_of_i2c_display_write_fixed:
  7858                           	opt stack 0
  7859                           tblptru	equ	0xFF8
  7860                           tblptrh	equ	0xFF7
  7861                           tblptrl	equ	0xFF6
  7862                           tablat	equ	0xFF5
  7863                           prodh	equ	0xFF4
  7864                           prodl	equ	0xFF3
  7865                           intcon	equ	0xFF2
  7866                           intcon2	equ	0xFF1
  7867                           intcon3	equ	0xFF0
  7868                           postinc0	equ	0xFEE
  7869                           wreg	equ	0xFE8
  7870                           postdec1	equ	0xFE5
  7871                           plusw1	equ	0xFE3
  7872                           fsr1h	equ	0xFE2
  7873                           fsr1l	equ	0xFE1
  7874                           indf2	equ	0xFDF
  7875                           postinc2	equ	0xFDE
  7876                           plusw2	equ	0xFDB
  7877                           fsr2h	equ	0xFDA
  7878                           fsr2l	equ	0xFD9
  7879                           status	equ	0xFD8
  7880                           
  7881 ;; *************** function _i2c_display_cursor *****************
  7882 ;; Defined at:
  7883 ;;		line 222 in file "i2c.c"
  7884 ;; Parameters:    Size  Location     Type
  7885 ;;  line            1    wreg     unsigned char 
  7886 ;;  position        1   13[COMRAM] unsigned char 
  7887 ;; Auto vars:     Size  Location     Type
  7888 ;;  line            1   14[COMRAM] unsigned char 
  7889 ;;  address         1   15[COMRAM] unsigned char 
  7890 ;; Return value:  Size  Location     Type
  7891 ;;                  1    wreg      void 
  7892 ;; Registers used:
  7893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7894 ;; Tracked objects:
  7895 ;;		On entry : 0/0
  7896 ;;		On exit  : 0/0
  7897 ;;		Unchanged: 0/0
  7898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7899 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7900 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7902 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7903 ;;Total ram usage:        3 bytes
  7904 ;; Hardware stack levels used:    1
  7905 ;; Hardware stack levels required when called:    3
  7906 ;; This function calls:
  7907 ;;		__ic2_display_set_address
  7908 ;;		_i2c_set_frequency
  7909 ;; This function is called by:
  7910 ;;		_display_update
  7911 ;; This function uses a non-reentrant model
  7912 ;;
  7913                           
  7914                           	psect	text31
  7915  007B0A                     __ptext31:
  7916                           	opt stack 0
  7917  007B0A                     _i2c_display_cursor:
  7918                           	opt stack 26
  7919                           
  7920                           ;incstack = 0
  7921                           ;i2c_display_cursor@line stored from wreg
  7922  007B0A  6E0F               	movwf	i2c_display_cursor@line,c
  7923                           
  7924                           ;i2c.c: 224: uint8_t address;;i2c.c: 227: line &= 0b11;
  7925  007B0C  0E03               	movlw	3
  7926  007B0E  160F               	andwf	i2c_display_cursor@line,f,c
  7927                           
  7928                           ;i2c.c: 228: address = line<<5;
  7929  007B10  380F               	swapf	i2c_display_cursor@line,w,c
  7930  007B12  46E8               	rlncf	wreg,f,c
  7931  007B14  0BE0               	andlw	224
  7932  007B16  6E10               	movwf	i2c_display_cursor@address,c
  7933                           
  7934                           ;i2c.c: 229: position &= 0b11111;
  7935  007B18  0E1F               	movlw	31
  7936  007B1A  160E               	andwf	i2c_display_cursor@position,f,c
  7937                           
  7938                           ;i2c.c: 230: address |= position;
  7939  007B1C  500E               	movf	i2c_display_cursor@position,w,c
  7940  007B1E  1210               	iorwf	i2c_display_cursor@address,f,c
  7941                           
  7942                           ;i2c.c: 233: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  7943  007B20  0E02               	movlw	2
  7944  007B22  EC0C  F03D         	call	_i2c_set_frequency
  7945                           
  7946                           ;i2c.c: 236: _ic2_display_set_address(address);
  7947  007B26  5010               	movf	i2c_display_cursor@address,w,c
  7948  007B28  EC72  F03D         	call	__ic2_display_set_address
  7949  007B2C  0012               	return		;funcret
  7950  007B2E                     __end_of_i2c_display_cursor:
  7951                           	opt stack 0
  7952                           tblptru	equ	0xFF8
  7953                           tblptrh	equ	0xFF7
  7954                           tblptrl	equ	0xFF6
  7955                           tablat	equ	0xFF5
  7956                           prodh	equ	0xFF4
  7957                           prodl	equ	0xFF3
  7958                           intcon	equ	0xFF2
  7959                           intcon2	equ	0xFF1
  7960                           intcon3	equ	0xFF0
  7961                           postinc0	equ	0xFEE
  7962                           wreg	equ	0xFE8
  7963                           postdec1	equ	0xFE5
  7964                           plusw1	equ	0xFE3
  7965                           fsr1h	equ	0xFE2
  7966                           fsr1l	equ	0xFE1
  7967                           indf2	equ	0xFDF
  7968                           postinc2	equ	0xFDE
  7969                           plusw2	equ	0xFDB
  7970                           fsr2h	equ	0xFDA
  7971                           fsr2l	equ	0xFD9
  7972                           status	equ	0xFD8
  7973                           
  7974 ;; *************** function __ic2_display_set_address *****************
  7975 ;; Defined at:
  7976 ;;		line 186 in file "i2c.c"
  7977 ;; Parameters:    Size  Location     Type
  7978 ;;  address         1    wreg     unsigned char 
  7979 ;; Auto vars:     Size  Location     Type
  7980 ;;  address         1   10[COMRAM] unsigned char 
  7981 ;;  data_array      2   11[COMRAM] unsigned char [2]
  7982 ;; Return value:  Size  Location     Type
  7983 ;;                  1    wreg      void 
  7984 ;; Registers used:
  7985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7986 ;; Tracked objects:
  7987 ;;		On entry : 0/0
  7988 ;;		On exit  : 0/0
  7989 ;;		Unchanged: 0/0
  7990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7992 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7994 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7995 ;;Total ram usage:        3 bytes
  7996 ;; Hardware stack levels used:    1
  7997 ;; Hardware stack levels required when called:    2
  7998 ;; This function calls:
  7999 ;;		__i2c_write
  8000 ;;		_i2c_set_frequency
  8001 ;; This function is called by:
  8002 ;;		_i2c_display_cursor
  8003 ;; This function uses a non-reentrant model
  8004 ;;
  8005                           
  8006                           	psect	text32
  8007  007AE4                     __ptext32:
  8008                           	opt stack 0
  8009  007AE4                     __ic2_display_set_address:
  8010                           	opt stack 26
  8011                           
  8012                           ;incstack = 0
  8013                           ;__ic2_display_set_address@address stored from wreg
  8014  007AE4  6E0B               	movwf	__ic2_display_set_address@address,c
  8015                           
  8016                           ;i2c.c: 188: uint8_t data_array[2];;i2c.c: 189: data_array[0] = 0b00000000;
  8017  007AE6  0E00               	movlw	0
  8018  007AE8  6E0C               	movwf	__ic2_display_set_address@data_array,c
  8019                           
  8020                           ;i2c.c: 190: data_array[1] = 0b10000000 | address;
  8021  007AEA  500B               	movf	__ic2_display_set_address@address,w,c
  8022  007AEC  0980               	iorlw	128
  8023  007AEE  6E0D               	movwf	__ic2_display_set_address@data_array+1,c
  8024                           
  8025                           ;i2c.c: 193: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  8026  007AF0  0E02               	movlw	2
  8027  007AF2  EC0C  F03D         	call	_i2c_set_frequency
  8028                           
  8029                           ;i2c.c: 196: _i2c_write(0b01111000, &data_array[0], 2);
  8030  007AF6  0E0C               	movlw	low __ic2_display_set_address@data_array
  8031  007AF8  6E06               	movwf	__i2c_write@data,c
  8032  007AFA  0E00               	movlw	high __ic2_display_set_address@data_array
  8033  007AFC  6E07               	movwf	__i2c_write@data+1,c
  8034  007AFE  0E02               	movlw	2
  8035  007B00  6E08               	movwf	__i2c_write@length,c
  8036  007B02  0E78               	movlw	120
  8037  007B04  ECBE  F039         	call	__i2c_write
  8038  007B08  0012               	return		;funcret
  8039  007B0A                     __end_of__ic2_display_set_address:
  8040                           	opt stack 0
  8041                           tblptru	equ	0xFF8
  8042                           tblptrh	equ	0xFF7
  8043                           tblptrl	equ	0xFF6
  8044                           tablat	equ	0xFF5
  8045                           prodh	equ	0xFF4
  8046                           prodl	equ	0xFF3
  8047                           intcon	equ	0xFF2
  8048                           intcon2	equ	0xFF1
  8049                           intcon3	equ	0xFF0
  8050                           postinc0	equ	0xFEE
  8051                           wreg	equ	0xFE8
  8052                           postdec1	equ	0xFE5
  8053                           plusw1	equ	0xFE3
  8054                           fsr1h	equ	0xFE2
  8055                           fsr1l	equ	0xFE1
  8056                           indf2	equ	0xFDF
  8057                           postinc2	equ	0xFDE
  8058                           plusw2	equ	0xFDB
  8059                           fsr2h	equ	0xFDA
  8060                           fsr2l	equ	0xFD9
  8061                           status	equ	0xFD8
  8062                           
  8063 ;; *************** function _display_prepare *****************
  8064 ;; Defined at:
  8065 ;;		line 277 in file "display.c"
  8066 ;; Parameters:    Size  Location     Type
  8067 ;;  mode            1    wreg     unsigned char 
  8068 ;; Auto vars:     Size  Location     Type
  8069 ;;  mode            1   42[COMRAM] unsigned char 
  8070 ;; Return value:  Size  Location     Type
  8071 ;;                  1    wreg      void 
  8072 ;; Registers used:
  8073 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8074 ;; Tracked objects:
  8075 ;;		On entry : 0/0
  8076 ;;		On exit  : 0/0
  8077 ;;		Unchanged: 0/0
  8078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8080 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8081 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8082 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8083 ;;Total ram usage:        3 bytes
  8084 ;; Hardware stack levels used:    1
  8085 ;; Hardware stack levels required when called:    6
  8086 ;; This function calls:
  8087 ;;		__display_checked
  8088 ;;		__display_clear
  8089 ;;		__display_done
  8090 ;;		__display_failed
  8091 ;;		__display_found
  8092 ;;		__display_programming
  8093 ;;		__display_start
  8094 ;;		__display_verify
  8095 ;; This function is called by:
  8096 ;;		_main
  8097 ;; This function uses a non-reentrant model
  8098 ;;
  8099                           
  8100                           	psect	text33
  8101  00538A                     __ptext33:
  8102                           	opt stack 0
  8103  00538A                     _display_prepare:
  8104                           	opt stack 24
  8105                           
  8106                           ;incstack = 0
  8107                           ;display_prepare@mode stored from wreg
  8108  00538A  6E2B               	movwf	display_prepare@mode,c
  8109                           
  8110                           ;display.c: 279: _display_clear();
  8111  00538C  EC9A  F039         	call	__display_clear	;wreg free
  8112                           
  8113                           ;display.c: 281: switch(mode&0xF0)
  8114  005390  D015               	goto	l1505
  8115  005392                     
  8116                           ;display.c: 284: _display_start();
  8117  005392  ECFE  F01B         	call	__display_start	;wreg free
  8118                           
  8119                           ;display.c: 285: break;
  8120  005396  D03B               	goto	l1514
  8121  005398                     
  8122                           ;display.c: 288: _display_found();
  8123  005398  EC9F  F014         	call	__display_found	;wreg free
  8124                           
  8125                           ;display.c: 289: break;
  8126  00539C  D038               	goto	l1514
  8127  00539E                     
  8128                           ;display.c: 292: _display_verify();
  8129  00539E  ECEB  F01D         	call	__display_verify	;wreg free
  8130                           
  8131                           ;display.c: 293: break;
  8132  0053A2  D035               	goto	l1514
  8133  0053A4                     
  8134                           ;display.c: 296: _display_checked();
  8135  0053A4  ECCE  F019         	call	__display_checked	;wreg free
  8136                           
  8137                           ;display.c: 297: break;
  8138  0053A8  D032               	goto	l1514
  8139  0053AA                     
  8140                           ;display.c: 300: _display_failed();
  8141  0053AA  EC9A  F007         	call	__display_failed	;wreg free
  8142                           
  8143                           ;display.c: 301: break;
  8144  0053AE  D02F               	goto	l1514
  8145  0053B0                     
  8146                           ;display.c: 304: _display_programming();
  8147  0053B0  EC7A  F016         	call	__display_programming	;wreg free
  8148                           
  8149                           ;display.c: 305: break;
  8150  0053B4  D02C               	goto	l1514
  8151  0053B6                     
  8152                           ;display.c: 308: _display_done();
  8153  0053B6  EC8C  F01A         	call	__display_done	;wreg free
  8154                           
  8155                           ;display.c: 310: }
  8156                           
  8157                           ;display.c: 309: break;
  8158  0053BA  D029               	goto	l1514
  8159  0053BC                     l1505:
  8160  0053BC  502B               	movf	display_prepare@mode,w,c
  8161  0053BE  0BF0               	andlw	240
  8162  0053C0  6E29               	movwf	??_display_prepare& (0+255),c
  8163  0053C2  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
  8164                           
  8165                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8166                           ; Switch size 1, requested type "space"
  8167                           ; Number of cases is 1, Range of values is 0 to 0
  8168                           ; switch strategies available:
  8169                           ; Name         Instructions Cycles
  8170                           ; simple_byte            4     3 (average)
  8171                           ;	Chosen strategy is simple_byte
  8172  0053C4  502A               	movf	??_display_prepare+1,w,c
  8173  0053C6  0A00               	xorlw	0	; case 0
  8174  0053C8  A4D8               	btfss	status,2,c
  8175  0053CA  D021               	goto	l1514
  8176                           
  8177                           ; Switch size 1, requested type "space"
  8178                           ; Number of cases is 7, Range of values is 0 to 96
  8179                           ; switch strategies available:
  8180                           ; Name         Instructions Cycles
  8181                           ; simple_byte           22    12 (average)
  8182                           ;	Chosen strategy is simple_byte
  8183  0053CC  5029               	movf	??_display_prepare,w,c
  8184  0053CE  0A00               	xorlw	0	; case 0
  8185  0053D0  B4D8               	btfsc	status,2,c
  8186  0053D2  D7DF               	goto	l1506
  8187  0053D4  0A10               	xorlw	16	; case 16
  8188  0053D6  B4D8               	btfsc	status,2,c
  8189  0053D8  D7DF               	goto	l1508
  8190  0053DA  0A30               	xorlw	48	; case 32
  8191  0053DC  B4D8               	btfsc	status,2,c
  8192  0053DE  D7DF               	goto	l1509
  8193  0053E0  0A10               	xorlw	16	; case 48
  8194  0053E2  B4D8               	btfsc	status,2,c
  8195  0053E4  D7DF               	goto	l1510
  8196  0053E6  0A70               	xorlw	112	; case 64
  8197  0053E8  B4D8               	btfsc	status,2,c
  8198  0053EA  D7DF               	goto	l1511
  8199  0053EC  0A10               	xorlw	16	; case 80
  8200  0053EE  B4D8               	btfsc	status,2,c
  8201  0053F0  D7DF               	goto	l1512
  8202  0053F2  0A30               	xorlw	48	; case 96
  8203  0053F4  B4D8               	btfsc	status,2,c
  8204  0053F6  D7DF               	goto	l1513
  8205                           
  8206                           ;display.c: 313: switch((os.timeSlot>>5)&0b11)
  8207  0053F8  D00A               	goto	l1514
  8208  0053FA                     
  8209                           ;display.c: 316: display_content[0][17] = '.';
  8210  0053FA  0E2E               	movlw	46
  8211  0053FC  0101               	movlb	1	; () banked
  8212  0053FE  6F85               	movwf	(_display_content+17)& (0+255),b
  8213  005400                     l1516:
  8214                           
  8215                           ;display.c: 319: display_content[0][16] = '.';
  8216  005400  0E2E               	movlw	46
  8217  005402  0101               	movlb	1	; () banked
  8218  005404  6F84               	movwf	(_display_content+16)& (0+255),b
  8219  005406                     l1517:
  8220                           
  8221                           ;display.c: 322: display_content[0][15] = '.';
  8222  005406  0E2E               	movlw	46
  8223  005408  0101               	movlb	1	; () banked
  8224  00540A  6F83               	movwf	(_display_content+15)& (0+255),b
  8225                           
  8226                           ;display.c: 324: }
  8227  00540C  D015               	goto	l1518
  8228  00540E                     l1514:
  8229                           
  8230                           ; BSR set to: 1
  8231  00540E  0100               	movlb	0	; () banked
  8232  005410  3962               	swapf	(_os+2)& (0+255),w,b	;volatile
  8233  005412  42E8               	rrncf	wreg,f,c
  8234  005414  0B07               	andlw	7
  8235  005416  0B03               	andlw	3
  8236  005418  6E29               	movwf	??_display_prepare& (0+255),c
  8237  00541A  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
  8238                           
  8239                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8240                           ; Switch size 1, requested type "space"
  8241                           ; Number of cases is 1, Range of values is 0 to 0
  8242                           ; switch strategies available:
  8243                           ; Name         Instructions Cycles
  8244                           ; simple_byte            4     3 (average)
  8245                           ;	Chosen strategy is simple_byte
  8246  00541C  502A               	movf	??_display_prepare+1,w,c
  8247  00541E  0A00               	xorlw	0	; case 0
  8248  005420  A4D8               	btfss	status,2,c
  8249  005422  D00A               	goto	l1518
  8250                           
  8251                           ; BSR set to: 0
  8252                           ; Switch size 1, requested type "space"
  8253                           ; Number of cases is 3, Range of values is 1 to 3
  8254                           ; switch strategies available:
  8255                           ; Name         Instructions Cycles
  8256                           ; simple_byte           10     6 (average)
  8257                           ;	Chosen strategy is simple_byte
  8258  005424  5029               	movf	??_display_prepare,w,c
  8259  005426  0A01               	xorlw	1	; case 1
  8260  005428  B4D8               	btfsc	status,2,c
  8261  00542A  D7ED               	goto	l1517
  8262  00542C  0A03               	xorlw	3	; case 2
  8263  00542E  B4D8               	btfsc	status,2,c
  8264  005430  D7E7               	goto	l1516
  8265  005432  0A01               	xorlw	1	; case 3
  8266  005434  B4D8               	btfsc	status,2,c
  8267  005436  D7E1               	goto	l1515
  8268  005438                     l1518:
  8269                           
  8270                           ;display.c: 328: if(INTCONbits.GIE)
  8271  005438  AEF2               	btfss	intcon,7,c	;volatile
  8272  00543A  0012               	return	
  8273                           
  8274                           ;display.c: 329: {;display.c: 330: display_content[0][18] = 'I';
  8275  00543C  0E49               	movlw	73
  8276  00543E  0101               	movlb	1	; () banked
  8277  005440  6F86               	movwf	(_display_content+18)& (0+255),b
  8278  005442  0012               	return	
  8279  005444                     __end_of_display_prepare:
  8280                           	opt stack 0
  8281                           tblptru	equ	0xFF8
  8282                           tblptrh	equ	0xFF7
  8283                           tblptrl	equ	0xFF6
  8284                           tablat	equ	0xFF5
  8285                           prodh	equ	0xFF4
  8286                           prodl	equ	0xFF3
  8287                           intcon	equ	0xFF2
  8288                           intcon2	equ	0xFF1
  8289                           intcon3	equ	0xFF0
  8290                           postinc0	equ	0xFEE
  8291                           wreg	equ	0xFE8
  8292                           postdec1	equ	0xFE5
  8293                           plusw1	equ	0xFE3
  8294                           fsr1h	equ	0xFE2
  8295                           fsr1l	equ	0xFE1
  8296                           indf2	equ	0xFDF
  8297                           postinc2	equ	0xFDE
  8298                           plusw2	equ	0xFDB
  8299                           fsr2h	equ	0xFDA
  8300                           fsr2l	equ	0xFD9
  8301                           status	equ	0xFD8
  8302                           
  8303 ;; *************** function __display_verify *****************
  8304 ;; Defined at:
  8305 ;;		line 378 in file "display.c"
  8306 ;; Parameters:    Size  Location     Type
  8307 ;;		None
  8308 ;; Auto vars:     Size  Location     Type
  8309 ;;  cntr            1   32[COMRAM] unsigned char 
  8310 ;;  start           1    0        unsigned char 
  8311 ;; Return value:  Size  Location     Type
  8312 ;;                  1    wreg      void 
  8313 ;; Registers used:
  8314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8315 ;; Tracked objects:
  8316 ;;		On entry : 0/0
  8317 ;;		On exit  : 0/0
  8318 ;;		Unchanged: 0/0
  8319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8321 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8322 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8323 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8324 ;;Total ram usage:        3 bytes
  8325 ;; Hardware stack levels used:    1
  8326 ;; Hardware stack levels required when called:    4
  8327 ;; This function calls:
  8328 ;;		__display_itoa_u16
  8329 ;;		_bootloader_get_entries
  8330 ;; This function is called by:
  8331 ;;		_display_prepare
  8332 ;; This function uses a non-reentrant model
  8333 ;;
  8334                           
  8335                           	psect	text34
  8336  003BD6                     __ptext34:
  8337                           	opt stack 0
  8338  003BD6                     __display_verify:
  8339                           	opt stack 25
  8340                           
  8341                           ;display.c: 380: uint8_t cntr;;display.c: 381: uint8_t start;;display.c: 382: cntr = 0;
  8342                           
  8343                           ;incstack = 0
  8344  003BD6  0E00               	movlw	0
  8345  003BD8  6E21               	movwf	__display_verify@cntr,c
  8346                           
  8347                           ;display.c: 383: while(verify_line1[cntr])
  8348  003BDA  D017               	goto	l1556
  8349  003BDC                     
  8350                           ;display.c: 384: display_content[0][cntr] = verify_line1[cntr++];
  8351  003BDC  5021               	movf	__display_verify@cntr,w,c
  8352  003BDE  0D01               	mullw	1
  8353  003BE0  0E09               	movlw	low _verify_line1
  8354  003BE2  24F3               	addwf	prodl,w,c
  8355  003BE4  6EF6               	movwf	tblptrl,c
  8356  003BE6  0E8E               	movlw	high _verify_line1
  8357  003BE8  20F4               	addwfc	prodh,w,c
  8358  003BEA  6EF7               	movwf	tblptrh,c
  8359  003BEC                     	if	1	;There are 3 active tblptr bytes
  8360  003BEC  6AF8               	clrf	tblptru,c
  8361  003BEE  0E00               	movlw	low (__mediumconst shr (0+16))
  8362  003BF0  22F8               	addwfc	tblptru,f,c
  8363  003BF2                     	endif
  8364  003BF2  5021               	movf	__display_verify@cntr,w,c
  8365  003BF4  0D01               	mullw	1
  8366  003BF6  0E74               	movlw	low _display_content
  8367  003BF8  24F3               	addwf	prodl,w,c
  8368  003BFA  6ED9               	movwf	fsr2l,c
  8369  003BFC  0E01               	movlw	high _display_content
  8370  003BFE  20F4               	addwfc	prodh,w,c
  8371  003C00  6EDA               	movwf	fsr2h,c
  8372  003C02  0008               	tblrd		*
  8373  003C04  CFF5 FFDF          	movff	tablat,indf2
  8374  003C08  2A21               	incf	__display_verify@cntr,f,c
  8375  003C0A                     l1556:
  8376  003C0A  5021               	movf	__display_verify@cntr,w,c
  8377  003C0C  0D01               	mullw	1
  8378  003C0E  0E09               	movlw	low _verify_line1
  8379  003C10  24F3               	addwf	prodl,w,c
  8380  003C12  6EF6               	movwf	tblptrl,c
  8381  003C14  0E8E               	movlw	high _verify_line1
  8382  003C16  20F4               	addwfc	prodh,w,c
  8383  003C18  6EF7               	movwf	tblptrh,c
  8384  003C1A                     	if	1	;There are 3 active tblptr bytes
  8385  003C1A  6AF8               	clrf	tblptru,c
  8386  003C1C  0E00               	movlw	low (__mediumconst shr (0+16))
  8387  003C1E  22F8               	addwfc	tblptru,f,c
  8388  003C20                     	endif
  8389  003C20  0008               	tblrd		*
  8390  003C22  50F5               	movf	tablat,w,c
  8391  003C24  0900               	iorlw	0
  8392  003C26  A4D8               	btfss	status,2,c
  8393  003C28  D7D9               	goto	l1557
  8394                           
  8395                           ;display.c: 385: cntr = 0;
  8396  003C2A  0E00               	movlw	0
  8397  003C2C  6E21               	movwf	__display_verify@cntr,c
  8398                           
  8399                           ;display.c: 386: while(verify_line2[cntr])
  8400  003C2E  D017               	goto	l1559
  8401  003C30                     
  8402                           ;display.c: 387: display_content[1][cntr] = verify_line2[cntr++];
  8403  003C30  5021               	movf	__display_verify@cntr,w,c
  8404  003C32  0D01               	mullw	1
  8405  003C34  0E55               	movlw	low _verify_line2
  8406  003C36  24F3               	addwf	prodl,w,c
  8407  003C38  6EF6               	movwf	tblptrl,c
  8408  003C3A  0E8E               	movlw	high _verify_line2
  8409  003C3C  20F4               	addwfc	prodh,w,c
  8410  003C3E  6EF7               	movwf	tblptrh,c
  8411  003C40                     	if	1	;There are 3 active tblptr bytes
  8412  003C40  6AF8               	clrf	tblptru,c
  8413  003C42  0E00               	movlw	low (__mediumconst shr (0+16))
  8414  003C44  22F8               	addwfc	tblptru,f,c
  8415  003C46                     	endif
  8416  003C46  5021               	movf	__display_verify@cntr,w,c
  8417  003C48  0D01               	mullw	1
  8418  003C4A  0E88               	movlw	low (_display_content+20)
  8419  003C4C  24F3               	addwf	prodl,w,c
  8420  003C4E  6ED9               	movwf	fsr2l,c
  8421  003C50  0E01               	movlw	high (_display_content+20)
  8422  003C52  20F4               	addwfc	prodh,w,c
  8423  003C54  6EDA               	movwf	fsr2h,c
  8424  003C56  0008               	tblrd		*
  8425  003C58  CFF5 FFDF          	movff	tablat,indf2
  8426  003C5C  2A21               	incf	__display_verify@cntr,f,c
  8427  003C5E                     l1559:
  8428  003C5E  5021               	movf	__display_verify@cntr,w,c
  8429  003C60  0D01               	mullw	1
  8430  003C62  0E55               	movlw	low _verify_line2
  8431  003C64  24F3               	addwf	prodl,w,c
  8432  003C66  6EF6               	movwf	tblptrl,c
  8433  003C68  0E8E               	movlw	high _verify_line2
  8434  003C6A  20F4               	addwfc	prodh,w,c
  8435  003C6C  6EF7               	movwf	tblptrh,c
  8436  003C6E                     	if	1	;There are 3 active tblptr bytes
  8437  003C6E  6AF8               	clrf	tblptru,c
  8438  003C70  0E00               	movlw	low (__mediumconst shr (0+16))
  8439  003C72  22F8               	addwfc	tblptru,f,c
  8440  003C74                     	endif
  8441  003C74  0008               	tblrd		*
  8442  003C76  50F5               	movf	tablat,w,c
  8443  003C78  0900               	iorlw	0
  8444  003C7A  A4D8               	btfss	status,2,c
  8445  003C7C  D7D9               	goto	l1560
  8446                           
  8447                           ;display.c: 388: cntr = 0;
  8448  003C7E  0E00               	movlw	0
  8449  003C80  6E21               	movwf	__display_verify@cntr,c
  8450                           
  8451                           ;display.c: 389: while(verify_line3[cntr])
  8452  003C82  D017               	goto	l1562
  8453  003C84                     
  8454                           ;display.c: 390: display_content[2][cntr] = verify_line3[cntr++];
  8455  003C84  5021               	movf	__display_verify@cntr,w,c
  8456  003C86  0D01               	mullw	1
  8457  003C88  0E8A               	movlw	low _verify_line3
  8458  003C8A  24F3               	addwf	prodl,w,c
  8459  003C8C  6EF6               	movwf	tblptrl,c
  8460  003C8E  0E8E               	movlw	high _verify_line3
  8461  003C90  20F4               	addwfc	prodh,w,c
  8462  003C92  6EF7               	movwf	tblptrh,c
  8463  003C94                     	if	1	;There are 3 active tblptr bytes
  8464  003C94  6AF8               	clrf	tblptru,c
  8465  003C96  0E00               	movlw	low (__mediumconst shr (0+16))
  8466  003C98  22F8               	addwfc	tblptru,f,c
  8467  003C9A                     	endif
  8468  003C9A  5021               	movf	__display_verify@cntr,w,c
  8469  003C9C  0D01               	mullw	1
  8470  003C9E  0E9C               	movlw	low (_display_content+40)
  8471  003CA0  24F3               	addwf	prodl,w,c
  8472  003CA2  6ED9               	movwf	fsr2l,c
  8473  003CA4  0E01               	movlw	high (_display_content+40)
  8474  003CA6  20F4               	addwfc	prodh,w,c
  8475  003CA8  6EDA               	movwf	fsr2h,c
  8476  003CAA  0008               	tblrd		*
  8477  003CAC  CFF5 FFDF          	movff	tablat,indf2
  8478  003CB0  2A21               	incf	__display_verify@cntr,f,c
  8479  003CB2                     l1562:
  8480  003CB2  5021               	movf	__display_verify@cntr,w,c
  8481  003CB4  0D01               	mullw	1
  8482  003CB6  0E8A               	movlw	low _verify_line3
  8483  003CB8  24F3               	addwf	prodl,w,c
  8484  003CBA  6EF6               	movwf	tblptrl,c
  8485  003CBC  0E8E               	movlw	high _verify_line3
  8486  003CBE  20F4               	addwfc	prodh,w,c
  8487  003CC0  6EF7               	movwf	tblptrh,c
  8488  003CC2                     	if	1	;There are 3 active tblptr bytes
  8489  003CC2  6AF8               	clrf	tblptru,c
  8490  003CC4  0E00               	movlw	low (__mediumconst shr (0+16))
  8491  003CC6  22F8               	addwfc	tblptru,f,c
  8492  003CC8                     	endif
  8493  003CC8  0008               	tblrd		*
  8494  003CCA  50F5               	movf	tablat,w,c
  8495  003CCC  0900               	iorlw	0
  8496  003CCE  A4D8               	btfss	status,2,c
  8497  003CD0  D7D9               	goto	l1563
  8498                           
  8499                           ;display.c: 391: _display_itoa_u16(bootloader_get_entries(), &display_content[2][cntr+1]
      +                          );
  8500  003CD2  ECF8  F03E         	call	_bootloader_get_entries	;wreg free
  8501  003CD6  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
  8502  003CDA  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
  8503  003CDE  6A1B               	clrf	__display_itoa_u16@value+2,c
  8504  003CE0  6A1C               	clrf	__display_itoa_u16@value+3,c
  8505  003CE2  5021               	movf	__display_verify@cntr,w,c
  8506  003CE4  6E1F               	movwf	??__display_verify& (0+255),c
  8507  003CE6  6A20               	clrf	(??__display_verify+1)& (0+255),c
  8508  003CE8  0E01               	movlw	1
  8509  003CEA  261F               	addwf	??__display_verify,f,c
  8510  003CEC  0E00               	movlw	0
  8511  003CEE  2220               	addwfc	??__display_verify+1,f,c
  8512  003CF0  0E9C               	movlw	low (_display_content+40)
  8513  003CF2  241F               	addwf	??__display_verify,w,c
  8514  003CF4  6E1D               	movwf	__display_itoa_u16@text,c
  8515  003CF6  0E01               	movlw	high (_display_content+40)
  8516  003CF8  2020               	addwfc	??__display_verify+1,w,c
  8517  003CFA  6E1E               	movwf	__display_itoa_u16@text+1,c
  8518  003CFC  ECDF  F027         	call	__display_itoa_u16	;wreg free
  8519  003D00  0012               	return		;funcret
  8520  003D02                     __end_of__display_verify:
  8521                           	opt stack 0
  8522                           tblptru	equ	0xFF8
  8523                           tblptrh	equ	0xFF7
  8524                           tblptrl	equ	0xFF6
  8525                           tablat	equ	0xFF5
  8526                           prodh	equ	0xFF4
  8527                           prodl	equ	0xFF3
  8528                           intcon	equ	0xFF2
  8529                           intcon2	equ	0xFF1
  8530                           intcon3	equ	0xFF0
  8531                           postinc0	equ	0xFEE
  8532                           wreg	equ	0xFE8
  8533                           postdec1	equ	0xFE5
  8534                           plusw1	equ	0xFE3
  8535                           fsr1h	equ	0xFE2
  8536                           fsr1l	equ	0xFE1
  8537                           indf2	equ	0xFDF
  8538                           postinc2	equ	0xFDE
  8539                           plusw2	equ	0xFDB
  8540                           fsr2h	equ	0xFDA
  8541                           fsr2l	equ	0xFD9
  8542                           status	equ	0xFD8
  8543                           
  8544 ;; *************** function __display_start *****************
  8545 ;; Defined at:
  8546 ;;		line 334 in file "display.c"
  8547 ;; Parameters:    Size  Location     Type
  8548 ;;		None
  8549 ;; Auto vars:     Size  Location     Type
  8550 ;;  cntr            1    0[COMRAM] unsigned char 
  8551 ;; Return value:  Size  Location     Type
  8552 ;;                  1    wreg      void 
  8553 ;; Registers used:
  8554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  8555 ;; Tracked objects:
  8556 ;;		On entry : 0/0
  8557 ;;		On exit  : 0/0
  8558 ;;		Unchanged: 0/0
  8559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8561 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8563 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8564 ;;Total ram usage:        1 bytes
  8565 ;; Hardware stack levels used:    1
  8566 ;; This function calls:
  8567 ;;		Nothing
  8568 ;; This function is called by:
  8569 ;;		_display_prepare
  8570 ;; This function uses a non-reentrant model
  8571 ;;
  8572                           
  8573                           	psect	text35
  8574  0037FC                     __ptext35:
  8575                           	opt stack 0
  8576  0037FC                     __display_start:
  8577                           	opt stack 29
  8578                           
  8579                           ;display.c: 336: uint8_t cntr;;display.c: 337: cntr = 0;
  8580                           
  8581                           ;incstack = 0
  8582  0037FC  0E00               	movlw	0
  8583  0037FE  6E01               	movwf	__display_start@cntr,c
  8584                           
  8585                           ;display.c: 338: while(start_line1[cntr])
  8586  003800  D017               	goto	l1523
  8587  003802                     
  8588                           ;display.c: 339: display_content[0][cntr] = start_line1[cntr++];
  8589  003802  5001               	movf	__display_start@cntr,w,c
  8590  003804  0D01               	mullw	1
  8591  003806  0E88               	movlw	low _start_line1
  8592  003808  24F3               	addwf	prodl,w,c
  8593  00380A  6EF6               	movwf	tblptrl,c
  8594  00380C  0E8D               	movlw	high _start_line1
  8595  00380E  20F4               	addwfc	prodh,w,c
  8596  003810  6EF7               	movwf	tblptrh,c
  8597  003812                     	if	1	;There are 3 active tblptr bytes
  8598  003812  6AF8               	clrf	tblptru,c
  8599  003814  0E00               	movlw	low (__mediumconst shr (0+16))
  8600  003816  22F8               	addwfc	tblptru,f,c
  8601  003818                     	endif
  8602  003818  5001               	movf	__display_start@cntr,w,c
  8603  00381A  0D01               	mullw	1
  8604  00381C  0E74               	movlw	low _display_content
  8605  00381E  24F3               	addwf	prodl,w,c
  8606  003820  6ED9               	movwf	fsr2l,c
  8607  003822  0E01               	movlw	high _display_content
  8608  003824  20F4               	addwfc	prodh,w,c
  8609  003826  6EDA               	movwf	fsr2h,c
  8610  003828  0008               	tblrd		*
  8611  00382A  CFF5 FFDF          	movff	tablat,indf2
  8612  00382E  2A01               	incf	__display_start@cntr,f,c
  8613  003830                     l1523:
  8614  003830  5001               	movf	__display_start@cntr,w,c
  8615  003832  0D01               	mullw	1
  8616  003834  0E88               	movlw	low _start_line1
  8617  003836  24F3               	addwf	prodl,w,c
  8618  003838  6EF6               	movwf	tblptrl,c
  8619  00383A  0E8D               	movlw	high _start_line1
  8620  00383C  20F4               	addwfc	prodh,w,c
  8621  00383E  6EF7               	movwf	tblptrh,c
  8622  003840                     	if	1	;There are 3 active tblptr bytes
  8623  003840  6AF8               	clrf	tblptru,c
  8624  003842  0E00               	movlw	low (__mediumconst shr (0+16))
  8625  003844  22F8               	addwfc	tblptru,f,c
  8626  003846                     	endif
  8627  003846  0008               	tblrd		*
  8628  003848  50F5               	movf	tablat,w,c
  8629  00384A  0900               	iorlw	0
  8630  00384C  A4D8               	btfss	status,2,c
  8631  00384E  D7D9               	goto	l1524
  8632                           
  8633                           ;display.c: 340: cntr = 0;
  8634  003850  0E00               	movlw	0
  8635  003852  6E01               	movwf	__display_start@cntr,c
  8636                           
  8637                           ;display.c: 341: while(start_line2[cntr])
  8638  003854  D017               	goto	l1526
  8639  003856                     
  8640                           ;display.c: 342: display_content[1][cntr] = start_line2[cntr++];
  8641  003856  5001               	movf	__display_start@cntr,w,c
  8642  003858  0D01               	mullw	1
  8643  00385A  0E77               	movlw	low _start_line2
  8644  00385C  24F3               	addwf	prodl,w,c
  8645  00385E  6EF6               	movwf	tblptrl,c
  8646  003860  0E8D               	movlw	high _start_line2
  8647  003862  20F4               	addwfc	prodh,w,c
  8648  003864  6EF7               	movwf	tblptrh,c
  8649  003866                     	if	1	;There are 3 active tblptr bytes
  8650  003866  6AF8               	clrf	tblptru,c
  8651  003868  0E00               	movlw	low (__mediumconst shr (0+16))
  8652  00386A  22F8               	addwfc	tblptru,f,c
  8653  00386C                     	endif
  8654  00386C  5001               	movf	__display_start@cntr,w,c
  8655  00386E  0D01               	mullw	1
  8656  003870  0E88               	movlw	low (_display_content+20)
  8657  003872  24F3               	addwf	prodl,w,c
  8658  003874  6ED9               	movwf	fsr2l,c
  8659  003876  0E01               	movlw	high (_display_content+20)
  8660  003878  20F4               	addwfc	prodh,w,c
  8661  00387A  6EDA               	movwf	fsr2h,c
  8662  00387C  0008               	tblrd		*
  8663  00387E  CFF5 FFDF          	movff	tablat,indf2
  8664  003882  2A01               	incf	__display_start@cntr,f,c
  8665  003884                     l1526:
  8666  003884  5001               	movf	__display_start@cntr,w,c
  8667  003886  0D01               	mullw	1
  8668  003888  0E77               	movlw	low _start_line2
  8669  00388A  24F3               	addwf	prodl,w,c
  8670  00388C  6EF6               	movwf	tblptrl,c
  8671  00388E  0E8D               	movlw	high _start_line2
  8672  003890  20F4               	addwfc	prodh,w,c
  8673  003892  6EF7               	movwf	tblptrh,c
  8674  003894                     	if	1	;There are 3 active tblptr bytes
  8675  003894  6AF8               	clrf	tblptru,c
  8676  003896  0E00               	movlw	low (__mediumconst shr (0+16))
  8677  003898  22F8               	addwfc	tblptru,f,c
  8678  00389A                     	endif
  8679  00389A  0008               	tblrd		*
  8680  00389C  50F5               	movf	tablat,w,c
  8681  00389E  0900               	iorlw	0
  8682  0038A0  A4D8               	btfss	status,2,c
  8683  0038A2  D7D9               	goto	l1527
  8684                           
  8685                           ;display.c: 343: cntr = 0;
  8686  0038A4  0E00               	movlw	0
  8687  0038A6  6E01               	movwf	__display_start@cntr,c
  8688                           
  8689                           ;display.c: 344: while(start_line3[cntr])
  8690  0038A8  D017               	goto	l1529
  8691  0038AA                     
  8692                           ;display.c: 345: display_content[2][cntr] = start_line3[cntr++];
  8693  0038AA  5001               	movf	__display_start@cntr,w,c
  8694  0038AC  0D01               	mullw	1
  8695  0038AE  0EF6               	movlw	low _start_line3
  8696  0038B0  24F3               	addwf	prodl,w,c
  8697  0038B2  6EF6               	movwf	tblptrl,c
  8698  0038B4  0E8C               	movlw	high _start_line3
  8699  0038B6  20F4               	addwfc	prodh,w,c
  8700  0038B8  6EF7               	movwf	tblptrh,c
  8701  0038BA                     	if	1	;There are 3 active tblptr bytes
  8702  0038BA  6AF8               	clrf	tblptru,c
  8703  0038BC  0E00               	movlw	low (__mediumconst shr (0+16))
  8704  0038BE  22F8               	addwfc	tblptru,f,c
  8705  0038C0                     	endif
  8706  0038C0  5001               	movf	__display_start@cntr,w,c
  8707  0038C2  0D01               	mullw	1
  8708  0038C4  0E9C               	movlw	low (_display_content+40)
  8709  0038C6  24F3               	addwf	prodl,w,c
  8710  0038C8  6ED9               	movwf	fsr2l,c
  8711  0038CA  0E01               	movlw	high (_display_content+40)
  8712  0038CC  20F4               	addwfc	prodh,w,c
  8713  0038CE  6EDA               	movwf	fsr2h,c
  8714  0038D0  0008               	tblrd		*
  8715  0038D2  CFF5 FFDF          	movff	tablat,indf2
  8716  0038D6  2A01               	incf	__display_start@cntr,f,c
  8717  0038D8                     l1529:
  8718  0038D8  5001               	movf	__display_start@cntr,w,c
  8719  0038DA  0D01               	mullw	1
  8720  0038DC  0EF6               	movlw	low _start_line3
  8721  0038DE  24F3               	addwf	prodl,w,c
  8722  0038E0  6EF6               	movwf	tblptrl,c
  8723  0038E2  0E8C               	movlw	high _start_line3
  8724  0038E4  20F4               	addwfc	prodh,w,c
  8725  0038E6  6EF7               	movwf	tblptrh,c
  8726  0038E8                     	if	1	;There are 3 active tblptr bytes
  8727  0038E8  6AF8               	clrf	tblptru,c
  8728  0038EA  0E00               	movlw	low (__mediumconst shr (0+16))
  8729  0038EC  22F8               	addwfc	tblptru,f,c
  8730  0038EE                     	endif
  8731  0038EE  0008               	tblrd		*
  8732  0038F0  50F5               	movf	tablat,w,c
  8733  0038F2  0900               	iorlw	0
  8734  0038F4  A4D8               	btfss	status,2,c
  8735  0038F6  D7D9               	goto	l1530
  8736                           
  8737                           ;display.c: 346: cntr = 0;
  8738  0038F8  0E00               	movlw	0
  8739  0038FA  6E01               	movwf	__display_start@cntr,c
  8740                           
  8741                           ;display.c: 347: while(start_line4[cntr])
  8742  0038FC  D017               	goto	l1532
  8743  0038FE                     
  8744                           ;display.c: 348: display_content[3][cntr] = start_line4[cntr++];
  8745  0038FE  5001               	movf	__display_start@cntr,w,c
  8746  003900  0D01               	mullw	1
  8747  003902  0E62               	movlw	low _start_line4
  8748  003904  24F3               	addwf	prodl,w,c
  8749  003906  6EF6               	movwf	tblptrl,c
  8750  003908  0E8E               	movlw	high _start_line4
  8751  00390A  20F4               	addwfc	prodh,w,c
  8752  00390C  6EF7               	movwf	tblptrh,c
  8753  00390E                     	if	1	;There are 3 active tblptr bytes
  8754  00390E  6AF8               	clrf	tblptru,c
  8755  003910  0E00               	movlw	low (__mediumconst shr (0+16))
  8756  003912  22F8               	addwfc	tblptru,f,c
  8757  003914                     	endif
  8758  003914  5001               	movf	__display_start@cntr,w,c
  8759  003916  0D01               	mullw	1
  8760  003918  0EB0               	movlw	low (_display_content+60)
  8761  00391A  24F3               	addwf	prodl,w,c
  8762  00391C  6ED9               	movwf	fsr2l,c
  8763  00391E  0E01               	movlw	high (_display_content+60)
  8764  003920  20F4               	addwfc	prodh,w,c
  8765  003922  6EDA               	movwf	fsr2h,c
  8766  003924  0008               	tblrd		*
  8767  003926  CFF5 FFDF          	movff	tablat,indf2
  8768  00392A  2A01               	incf	__display_start@cntr,f,c
  8769  00392C                     l1532:
  8770  00392C  5001               	movf	__display_start@cntr,w,c
  8771  00392E  0D01               	mullw	1
  8772  003930  0E62               	movlw	low _start_line4
  8773  003932  24F3               	addwf	prodl,w,c
  8774  003934  6EF6               	movwf	tblptrl,c
  8775  003936  0E8E               	movlw	high _start_line4
  8776  003938  20F4               	addwfc	prodh,w,c
  8777  00393A  6EF7               	movwf	tblptrh,c
  8778  00393C                     	if	1	;There are 3 active tblptr bytes
  8779  00393C  6AF8               	clrf	tblptru,c
  8780  00393E  0E00               	movlw	low (__mediumconst shr (0+16))
  8781  003940  22F8               	addwfc	tblptru,f,c
  8782  003942                     	endif
  8783  003942  0008               	tblrd		*
  8784  003944  50F5               	movf	tablat,w,c
  8785  003946  0900               	iorlw	0
  8786  003948  B4D8               	btfsc	status,2,c
  8787  00394A  0012               	return	
  8788  00394C  D7D8               	goto	l1533
  8789  00394E                     __end_of__display_start:
  8790                           	opt stack 0
  8791                           tblptru	equ	0xFF8
  8792                           tblptrh	equ	0xFF7
  8793                           tblptrl	equ	0xFF6
  8794                           tablat	equ	0xFF5
  8795                           prodh	equ	0xFF4
  8796                           prodl	equ	0xFF3
  8797                           intcon	equ	0xFF2
  8798                           intcon2	equ	0xFF1
  8799                           intcon3	equ	0xFF0
  8800                           postinc0	equ	0xFEE
  8801                           wreg	equ	0xFE8
  8802                           postdec1	equ	0xFE5
  8803                           plusw1	equ	0xFE3
  8804                           fsr1h	equ	0xFE2
  8805                           fsr1l	equ	0xFE1
  8806                           indf2	equ	0xFDF
  8807                           postinc2	equ	0xFDE
  8808                           plusw2	equ	0xFDB
  8809                           fsr2h	equ	0xFDA
  8810                           fsr2l	equ	0xFD9
  8811                           status	equ	0xFD8
  8812                           
  8813 ;; *************** function __display_programming *****************
  8814 ;; Defined at:
  8815 ;;		line 466 in file "display.c"
  8816 ;; Parameters:    Size  Location     Type
  8817 ;;		None
  8818 ;; Auto vars:     Size  Location     Type
  8819 ;;  cntr            1   30[COMRAM] unsigned char 
  8820 ;; Return value:  Size  Location     Type
  8821 ;;                  1    wreg      void 
  8822 ;; Registers used:
  8823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8824 ;; Tracked objects:
  8825 ;;		On entry : 0/0
  8826 ;;		On exit  : 0/0
  8827 ;;		Unchanged: 0/0
  8828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8830 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8832 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8833 ;;Total ram usage:        1 bytes
  8834 ;; Hardware stack levels used:    1
  8835 ;; Hardware stack levels required when called:    4
  8836 ;; This function calls:
  8837 ;;		__display_itoa_u16
  8838 ;;		_bootloader_get_entries
  8839 ;;		_bootloader_get_flashPagesWritten
  8840 ;;		_bootloader_get_total_entries
  8841 ;; This function is called by:
  8842 ;;		_display_prepare
  8843 ;; This function uses a non-reentrant model
  8844 ;;
  8845                           
  8846                           	psect	text36
  8847  002CF4                     __ptext36:
  8848                           	opt stack 0
  8849  002CF4                     __display_programming:
  8850                           	opt stack 25
  8851                           
  8852                           ;display.c: 468: uint8_t cntr;;display.c: 469: cntr = 0;
  8853                           
  8854                           ;incstack = 0
  8855  002CF4  0E00               	movlw	0
  8856  002CF6  6E1F               	movwf	__display_programming@cntr,c
  8857                           
  8858                           ;display.c: 470: while(programming_line1[cntr])
  8859  002CF8  D017               	goto	l1617
  8860  002CFA                     
  8861                           ;display.c: 471: display_content[0][cntr] = programming_line1[cntr++];
  8862  002CFA  501F               	movf	__display_programming@cntr,w,c
  8863  002CFC  0D01               	mullw	1
  8864  002CFE  0ED9               	movlw	low _programming_line1
  8865  002D00  24F3               	addwf	prodl,w,c
  8866  002D02  6EF6               	movwf	tblptrl,c
  8867  002D04  0E8D               	movlw	high _programming_line1
  8868  002D06  20F4               	addwfc	prodh,w,c
  8869  002D08  6EF7               	movwf	tblptrh,c
  8870  002D0A                     	if	1	;There are 3 active tblptr bytes
  8871  002D0A  6AF8               	clrf	tblptru,c
  8872  002D0C  0E00               	movlw	low (__mediumconst shr (0+16))
  8873  002D0E  22F8               	addwfc	tblptru,f,c
  8874  002D10                     	endif
  8875  002D10  501F               	movf	__display_programming@cntr,w,c
  8876  002D12  0D01               	mullw	1
  8877  002D14  0E74               	movlw	low _display_content
  8878  002D16  24F3               	addwf	prodl,w,c
  8879  002D18  6ED9               	movwf	fsr2l,c
  8880  002D1A  0E01               	movlw	high _display_content
  8881  002D1C  20F4               	addwfc	prodh,w,c
  8882  002D1E  6EDA               	movwf	fsr2h,c
  8883  002D20  0008               	tblrd		*
  8884  002D22  CFF5 FFDF          	movff	tablat,indf2
  8885  002D26  2A1F               	incf	__display_programming@cntr,f,c
  8886  002D28                     l1617:
  8887  002D28  501F               	movf	__display_programming@cntr,w,c
  8888  002D2A  0D01               	mullw	1
  8889  002D2C  0ED9               	movlw	low _programming_line1
  8890  002D2E  24F3               	addwf	prodl,w,c
  8891  002D30  6EF6               	movwf	tblptrl,c
  8892  002D32  0E8D               	movlw	high _programming_line1
  8893  002D34  20F4               	addwfc	prodh,w,c
  8894  002D36  6EF7               	movwf	tblptrh,c
  8895  002D38                     	if	1	;There are 3 active tblptr bytes
  8896  002D38  6AF8               	clrf	tblptru,c
  8897  002D3A  0E00               	movlw	low (__mediumconst shr (0+16))
  8898  002D3C  22F8               	addwfc	tblptru,f,c
  8899  002D3E                     	endif
  8900  002D3E  0008               	tblrd		*
  8901  002D40  50F5               	movf	tablat,w,c
  8902  002D42  0900               	iorlw	0
  8903  002D44  A4D8               	btfss	status,2,c
  8904  002D46  D7D9               	goto	l1618
  8905                           
  8906                           ;display.c: 473: cntr = 0;
  8907  002D48  0E00               	movlw	0
  8908  002D4A  6E1F               	movwf	__display_programming@cntr,c
  8909                           
  8910                           ;display.c: 474: while(programming_line2[cntr])
  8911  002D4C  D017               	goto	l1620
  8912  002D4E                     
  8913                           ;display.c: 475: display_content[1][cntr] = programming_line2[cntr++];
  8914  002D4E  501F               	movf	__display_programming@cntr,w,c
  8915  002D50  0D01               	mullw	1
  8916  002D52  0E30               	movlw	low _programming_line2
  8917  002D54  24F3               	addwf	prodl,w,c
  8918  002D56  6EF6               	movwf	tblptrl,c
  8919  002D58  0E8D               	movlw	high _programming_line2
  8920  002D5A  20F4               	addwfc	prodh,w,c
  8921  002D5C  6EF7               	movwf	tblptrh,c
  8922  002D5E                     	if	1	;There are 3 active tblptr bytes
  8923  002D5E  6AF8               	clrf	tblptru,c
  8924  002D60  0E00               	movlw	low (__mediumconst shr (0+16))
  8925  002D62  22F8               	addwfc	tblptru,f,c
  8926  002D64                     	endif
  8927  002D64  501F               	movf	__display_programming@cntr,w,c
  8928  002D66  0D01               	mullw	1
  8929  002D68  0E88               	movlw	low (_display_content+20)
  8930  002D6A  24F3               	addwf	prodl,w,c
  8931  002D6C  6ED9               	movwf	fsr2l,c
  8932  002D6E  0E01               	movlw	high (_display_content+20)
  8933  002D70  20F4               	addwfc	prodh,w,c
  8934  002D72  6EDA               	movwf	fsr2h,c
  8935  002D74  0008               	tblrd		*
  8936  002D76  CFF5 FFDF          	movff	tablat,indf2
  8937  002D7A  2A1F               	incf	__display_programming@cntr,f,c
  8938  002D7C                     l1620:
  8939  002D7C  501F               	movf	__display_programming@cntr,w,c
  8940  002D7E  0D01               	mullw	1
  8941  002D80  0E30               	movlw	low _programming_line2
  8942  002D82  24F3               	addwf	prodl,w,c
  8943  002D84  6EF6               	movwf	tblptrl,c
  8944  002D86  0E8D               	movlw	high _programming_line2
  8945  002D88  20F4               	addwfc	prodh,w,c
  8946  002D8A  6EF7               	movwf	tblptrh,c
  8947  002D8C                     	if	1	;There are 3 active tblptr bytes
  8948  002D8C  6AF8               	clrf	tblptru,c
  8949  002D8E  0E00               	movlw	low (__mediumconst shr (0+16))
  8950  002D90  22F8               	addwfc	tblptru,f,c
  8951  002D92                     	endif
  8952  002D92  0008               	tblrd		*
  8953  002D94  50F5               	movf	tablat,w,c
  8954  002D96  0900               	iorlw	0
  8955  002D98  A4D8               	btfss	status,2,c
  8956  002D9A  D7D9               	goto	l1621
  8957                           
  8958                           ;display.c: 477: cntr = 0;
  8959  002D9C  0E00               	movlw	0
  8960  002D9E  6E1F               	movwf	__display_programming@cntr,c
  8961                           
  8962                           ;display.c: 478: while(programming_line3[cntr])
  8963  002DA0  D017               	goto	l1623
  8964  002DA2                     
  8965                           ;display.c: 479: display_content[2][cntr] = programming_line3[cntr++];
  8966  002DA2  501F               	movf	__display_programming@cntr,w,c
  8967  002DA4  0D01               	mullw	1
  8968  002DA6  0E83               	movlw	low _programming_line3
  8969  002DA8  24F3               	addwf	prodl,w,c
  8970  002DAA  6EF6               	movwf	tblptrl,c
  8971  002DAC  0E8E               	movlw	high _programming_line3
  8972  002DAE  20F4               	addwfc	prodh,w,c
  8973  002DB0  6EF7               	movwf	tblptrh,c
  8974  002DB2                     	if	1	;There are 3 active tblptr bytes
  8975  002DB2  6AF8               	clrf	tblptru,c
  8976  002DB4  0E00               	movlw	low (__mediumconst shr (0+16))
  8977  002DB6  22F8               	addwfc	tblptru,f,c
  8978  002DB8                     	endif
  8979  002DB8  501F               	movf	__display_programming@cntr,w,c
  8980  002DBA  0D01               	mullw	1
  8981  002DBC  0E9C               	movlw	low (_display_content+40)
  8982  002DBE  24F3               	addwf	prodl,w,c
  8983  002DC0  6ED9               	movwf	fsr2l,c
  8984  002DC2  0E01               	movlw	high (_display_content+40)
  8985  002DC4  20F4               	addwfc	prodh,w,c
  8986  002DC6  6EDA               	movwf	fsr2h,c
  8987  002DC8  0008               	tblrd		*
  8988  002DCA  CFF5 FFDF          	movff	tablat,indf2
  8989  002DCE  2A1F               	incf	__display_programming@cntr,f,c
  8990  002DD0                     l1623:
  8991  002DD0  501F               	movf	__display_programming@cntr,w,c
  8992  002DD2  0D01               	mullw	1
  8993  002DD4  0E83               	movlw	low _programming_line3
  8994  002DD6  24F3               	addwf	prodl,w,c
  8995  002DD8  6EF6               	movwf	tblptrl,c
  8996  002DDA  0E8E               	movlw	high _programming_line3
  8997  002DDC  20F4               	addwfc	prodh,w,c
  8998  002DDE  6EF7               	movwf	tblptrh,c
  8999  002DE0                     	if	1	;There are 3 active tblptr bytes
  9000  002DE0  6AF8               	clrf	tblptru,c
  9001  002DE2  0E00               	movlw	low (__mediumconst shr (0+16))
  9002  002DE4  22F8               	addwfc	tblptru,f,c
  9003  002DE6                     	endif
  9004  002DE6  0008               	tblrd		*
  9005  002DE8  50F5               	movf	tablat,w,c
  9006  002DEA  0900               	iorlw	0
  9007  002DEC  A4D8               	btfss	status,2,c
  9008  002DEE  D7D9               	goto	l1624
  9009                           
  9010                           ;display.c: 480: cntr += _display_itoa_u16(bootloader_get_entries(), &display_content[2]
      +                          [cntr]);
  9011  002DF0  ECF8  F03E         	call	_bootloader_get_entries	;wreg free
  9012  002DF4  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
  9013  002DF8  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
  9014  002DFC  6A1B               	clrf	__display_itoa_u16@value+2,c
  9015  002DFE  6A1C               	clrf	__display_itoa_u16@value+3,c
  9016  002E00  501F               	movf	__display_programming@cntr,w,c
  9017  002E02  0D01               	mullw	1
  9018  002E04  0E9C               	movlw	low (_display_content+40)
  9019  002E06  24F3               	addwf	prodl,w,c
  9020  002E08  6E1D               	movwf	__display_itoa_u16@text,c
  9021  002E0A  0E01               	movlw	high (_display_content+40)
  9022  002E0C  20F4               	addwfc	prodh,w,c
  9023  002E0E  6E1E               	movwf	__display_itoa_u16@text+1,c
  9024  002E10  ECDF  F027         	call	__display_itoa_u16	;wreg free
  9025  002E14  261F               	addwf	__display_programming@cntr,f,c
  9026                           
  9027                           ;display.c: 481: display_content[2][cntr++] = '/';
  9028  002E16  501F               	movf	__display_programming@cntr,w,c
  9029  002E18  0D01               	mullw	1
  9030  002E1A  0E9C               	movlw	low (_display_content+40)
  9031  002E1C  24F3               	addwf	prodl,w,c
  9032  002E1E  6ED9               	movwf	fsr2l,c
  9033  002E20  0E01               	movlw	high (_display_content+40)
  9034  002E22  20F4               	addwfc	prodh,w,c
  9035  002E24  6EDA               	movwf	fsr2h,c
  9036  002E26  0E2F               	movlw	47
  9037  002E28  6EDF               	movwf	indf2,c
  9038  002E2A  2A1F               	incf	__display_programming@cntr,f,c
  9039                           
  9040                           ;display.c: 482: _display_itoa_u16(bootloader_get_total_entries(), &display_content[2][c
      +                          ntr]);
  9041  002E2C  ECE4  F03E         	call	_bootloader_get_total_entries	;wreg free
  9042  002E30  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
  9043  002E34  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
  9044  002E38  6A1B               	clrf	__display_itoa_u16@value+2,c
  9045  002E3A  6A1C               	clrf	__display_itoa_u16@value+3,c
  9046  002E3C  501F               	movf	__display_programming@cntr,w,c
  9047  002E3E  0D01               	mullw	1
  9048  002E40  0E9C               	movlw	low (_display_content+40)
  9049  002E42  24F3               	addwf	prodl,w,c
  9050  002E44  6E1D               	movwf	__display_itoa_u16@text,c
  9051  002E46  0E01               	movlw	high (_display_content+40)
  9052  002E48  20F4               	addwfc	prodh,w,c
  9053  002E4A  6E1E               	movwf	__display_itoa_u16@text+1,c
  9054  002E4C  ECDF  F027         	call	__display_itoa_u16	;wreg free
  9055                           
  9056                           ;display.c: 484: cntr = 0;
  9057  002E50  0E00               	movlw	0
  9058  002E52  6E1F               	movwf	__display_programming@cntr,c
  9059                           
  9060                           ;display.c: 485: while(programming_line4[cntr])
  9061  002E54  D017               	goto	l1626
  9062  002E56                     
  9063                           ;display.c: 486: display_content[3][cntr] = programming_line4[cntr++];
  9064  002E56  501F               	movf	__display_programming@cntr,w,c
  9065  002E58  0D01               	mullw	1
  9066  002E5A  0EC9               	movlw	low _programming_line4
  9067  002E5C  24F3               	addwf	prodl,w,c
  9068  002E5E  6EF6               	movwf	tblptrl,c
  9069  002E60  0E8D               	movlw	high _programming_line4
  9070  002E62  20F4               	addwfc	prodh,w,c
  9071  002E64  6EF7               	movwf	tblptrh,c
  9072  002E66                     	if	1	;There are 3 active tblptr bytes
  9073  002E66  6AF8               	clrf	tblptru,c
  9074  002E68  0E00               	movlw	low (__mediumconst shr (0+16))
  9075  002E6A  22F8               	addwfc	tblptru,f,c
  9076  002E6C                     	endif
  9077  002E6C  501F               	movf	__display_programming@cntr,w,c
  9078  002E6E  0D01               	mullw	1
  9079  002E70  0EB0               	movlw	low (_display_content+60)
  9080  002E72  24F3               	addwf	prodl,w,c
  9081  002E74  6ED9               	movwf	fsr2l,c
  9082  002E76  0E01               	movlw	high (_display_content+60)
  9083  002E78  20F4               	addwfc	prodh,w,c
  9084  002E7A  6EDA               	movwf	fsr2h,c
  9085  002E7C  0008               	tblrd		*
  9086  002E7E  CFF5 FFDF          	movff	tablat,indf2
  9087  002E82  2A1F               	incf	__display_programming@cntr,f,c
  9088  002E84                     l1626:
  9089  002E84  501F               	movf	__display_programming@cntr,w,c
  9090  002E86  0D01               	mullw	1
  9091  002E88  0EC9               	movlw	low _programming_line4
  9092  002E8A  24F3               	addwf	prodl,w,c
  9093  002E8C  6EF6               	movwf	tblptrl,c
  9094  002E8E  0E8D               	movlw	high _programming_line4
  9095  002E90  20F4               	addwfc	prodh,w,c
  9096  002E92  6EF7               	movwf	tblptrh,c
  9097  002E94                     	if	1	;There are 3 active tblptr bytes
  9098  002E94  6AF8               	clrf	tblptru,c
  9099  002E96  0E00               	movlw	low (__mediumconst shr (0+16))
  9100  002E98  22F8               	addwfc	tblptru,f,c
  9101  002E9A                     	endif
  9102  002E9A  0008               	tblrd		*
  9103  002E9C  50F5               	movf	tablat,w,c
  9104  002E9E  0900               	iorlw	0
  9105  002EA0  A4D8               	btfss	status,2,c
  9106  002EA2  D7D9               	goto	l1627
  9107                           
  9108                           ;display.c: 487: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          3][cntr]);
  9109  002EA4  ECF3  F03E         	call	_bootloader_get_flashPagesWritten	;wreg free
  9110  002EA8  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
  9111  002EAC  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
  9112  002EB0  6A1B               	clrf	__display_itoa_u16@value+2,c
  9113  002EB2  6A1C               	clrf	__display_itoa_u16@value+3,c
  9114  002EB4  501F               	movf	__display_programming@cntr,w,c
  9115  002EB6  0D01               	mullw	1
  9116  002EB8  0EB0               	movlw	low (_display_content+60)
  9117  002EBA  24F3               	addwf	prodl,w,c
  9118  002EBC  6E1D               	movwf	__display_itoa_u16@text,c
  9119  002EBE  0E01               	movlw	high (_display_content+60)
  9120  002EC0  20F4               	addwfc	prodh,w,c
  9121  002EC2  6E1E               	movwf	__display_itoa_u16@text+1,c
  9122  002EC4  ECDF  F027         	call	__display_itoa_u16	;wreg free
  9123  002EC8  0012               	return		;funcret
  9124  002ECA                     __end_of__display_programming:
  9125                           	opt stack 0
  9126                           tblptru	equ	0xFF8
  9127                           tblptrh	equ	0xFF7
  9128                           tblptrl	equ	0xFF6
  9129                           tablat	equ	0xFF5
  9130                           prodh	equ	0xFF4
  9131                           prodl	equ	0xFF3
  9132                           intcon	equ	0xFF2
  9133                           intcon2	equ	0xFF1
  9134                           intcon3	equ	0xFF0
  9135                           postinc0	equ	0xFEE
  9136                           wreg	equ	0xFE8
  9137                           postdec1	equ	0xFE5
  9138                           plusw1	equ	0xFE3
  9139                           fsr1h	equ	0xFE2
  9140                           fsr1l	equ	0xFE1
  9141                           indf2	equ	0xFDF
  9142                           postinc2	equ	0xFDE
  9143                           plusw2	equ	0xFDB
  9144                           fsr2h	equ	0xFDA
  9145                           fsr2l	equ	0xFD9
  9146                           status	equ	0xFD8
  9147                           
  9148 ;; *************** function __display_found *****************
  9149 ;; Defined at:
  9150 ;;		line 351 in file "display.c"
  9151 ;; Parameters:    Size  Location     Type
  9152 ;;		None
  9153 ;; Auto vars:     Size  Location     Type
  9154 ;;  cntr            1   39[COMRAM] unsigned char 
  9155 ;;  start           1   38[COMRAM] unsigned char 
  9156 ;; Return value:  Size  Location     Type
  9157 ;;                  1    wreg      void 
  9158 ;; Registers used:
  9159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9160 ;; Tracked objects:
  9161 ;;		On entry : 0/0
  9162 ;;		On exit  : 0/0
  9163 ;;		Unchanged: 0/0
  9164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9165 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9166 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9167 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9168 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9169 ;;Total ram usage:        4 bytes
  9170 ;; Hardware stack levels used:    1
  9171 ;; Hardware stack levels required when called:    5
  9172 ;; This function calls:
  9173 ;;		__display_itoa_u32
  9174 ;;		_bootloader_get_file_size
  9175 ;; This function is called by:
  9176 ;;		_display_prepare
  9177 ;; This function uses a non-reentrant model
  9178 ;;
  9179                           
  9180                           	psect	text37
  9181  00293E                     __ptext37:
  9182                           	opt stack 0
  9183  00293E                     __display_found:
  9184                           	opt stack 24
  9185                           
  9186                           ;display.c: 353: uint8_t cntr;;display.c: 354: uint8_t start;;display.c: 356: cntr = 0;
  9187                           
  9188                           ;incstack = 0
  9189  00293E  0E00               	movlw	0
  9190  002940  6E28               	movwf	__display_found@cntr,c
  9191                           
  9192                           ;display.c: 357: while(found_line1[cntr])
  9193  002942  D017               	goto	l1538
  9194  002944                     
  9195                           ;display.c: 358: display_content[0][cntr] = found_line1[cntr++];
  9196  002944  5028               	movf	__display_found@cntr,w,c
  9197  002946  0D01               	mullw	1
  9198  002948  0E19               	movlw	low _found_line1
  9199  00294A  24F3               	addwf	prodl,w,c
  9200  00294C  6EF6               	movwf	tblptrl,c
  9201  00294E  0E8E               	movlw	high _found_line1
  9202  002950  20F4               	addwfc	prodh,w,c
  9203  002952  6EF7               	movwf	tblptrh,c
  9204  002954                     	if	1	;There are 3 active tblptr bytes
  9205  002954  6AF8               	clrf	tblptru,c
  9206  002956  0E00               	movlw	low (__mediumconst shr (0+16))
  9207  002958  22F8               	addwfc	tblptru,f,c
  9208  00295A                     	endif
  9209  00295A  5028               	movf	__display_found@cntr,w,c
  9210  00295C  0D01               	mullw	1
  9211  00295E  0E74               	movlw	low _display_content
  9212  002960  24F3               	addwf	prodl,w,c
  9213  002962  6ED9               	movwf	fsr2l,c
  9214  002964  0E01               	movlw	high _display_content
  9215  002966  20F4               	addwfc	prodh,w,c
  9216  002968  6EDA               	movwf	fsr2h,c
  9217  00296A  0008               	tblrd		*
  9218  00296C  CFF5 FFDF          	movff	tablat,indf2
  9219  002970  2A28               	incf	__display_found@cntr,f,c
  9220  002972                     l1538:
  9221  002972  5028               	movf	__display_found@cntr,w,c
  9222  002974  0D01               	mullw	1
  9223  002976  0E19               	movlw	low _found_line1
  9224  002978  24F3               	addwf	prodl,w,c
  9225  00297A  6EF6               	movwf	tblptrl,c
  9226  00297C  0E8E               	movlw	high _found_line1
  9227  00297E  20F4               	addwfc	prodh,w,c
  9228  002980  6EF7               	movwf	tblptrh,c
  9229  002982                     	if	1	;There are 3 active tblptr bytes
  9230  002982  6AF8               	clrf	tblptru,c
  9231  002984  0E00               	movlw	low (__mediumconst shr (0+16))
  9232  002986  22F8               	addwfc	tblptru,f,c
  9233  002988                     	endif
  9234  002988  0008               	tblrd		*
  9235  00298A  50F5               	movf	tablat,w,c
  9236  00298C  0900               	iorlw	0
  9237  00298E  A4D8               	btfss	status,2,c
  9238  002990  D7D9               	goto	l1539
  9239                           
  9240                           ;display.c: 360: cntr = 0;
  9241  002992  0E00               	movlw	0
  9242  002994  6E28               	movwf	__display_found@cntr,c
  9243                           
  9244                           ;display.c: 361: while(found_line2[cntr])
  9245  002996  D017               	goto	l1541
  9246  002998                     
  9247                           ;display.c: 362: display_content[1][cntr] = found_line2[cntr++];
  9248  002998  5028               	movf	__display_found@cntr,w,c
  9249  00299A  0D01               	mullw	1
  9250  00299C  0E1D               	movlw	low _found_line2
  9251  00299E  24F3               	addwf	prodl,w,c
  9252  0029A0  6EF6               	movwf	tblptrl,c
  9253  0029A2  0E8D               	movlw	high _found_line2
  9254  0029A4  20F4               	addwfc	prodh,w,c
  9255  0029A6  6EF7               	movwf	tblptrh,c
  9256  0029A8                     	if	1	;There are 3 active tblptr bytes
  9257  0029A8  6AF8               	clrf	tblptru,c
  9258  0029AA  0E00               	movlw	low (__mediumconst shr (0+16))
  9259  0029AC  22F8               	addwfc	tblptru,f,c
  9260  0029AE                     	endif
  9261  0029AE  5028               	movf	__display_found@cntr,w,c
  9262  0029B0  0D01               	mullw	1
  9263  0029B2  0E88               	movlw	low (_display_content+20)
  9264  0029B4  24F3               	addwf	prodl,w,c
  9265  0029B6  6ED9               	movwf	fsr2l,c
  9266  0029B8  0E01               	movlw	high (_display_content+20)
  9267  0029BA  20F4               	addwfc	prodh,w,c
  9268  0029BC  6EDA               	movwf	fsr2h,c
  9269  0029BE  0008               	tblrd		*
  9270  0029C0  CFF5 FFDF          	movff	tablat,indf2
  9271  0029C4  2A28               	incf	__display_found@cntr,f,c
  9272  0029C6                     l1541:
  9273  0029C6  5028               	movf	__display_found@cntr,w,c
  9274  0029C8  0D01               	mullw	1
  9275  0029CA  0E1D               	movlw	low _found_line2
  9276  0029CC  24F3               	addwf	prodl,w,c
  9277  0029CE  6EF6               	movwf	tblptrl,c
  9278  0029D0  0E8D               	movlw	high _found_line2
  9279  0029D2  20F4               	addwfc	prodh,w,c
  9280  0029D4  6EF7               	movwf	tblptrh,c
  9281  0029D6                     	if	1	;There are 3 active tblptr bytes
  9282  0029D6  6AF8               	clrf	tblptru,c
  9283  0029D8  0E00               	movlw	low (__mediumconst shr (0+16))
  9284  0029DA  22F8               	addwfc	tblptru,f,c
  9285  0029DC                     	endif
  9286  0029DC  0008               	tblrd		*
  9287  0029DE  50F5               	movf	tablat,w,c
  9288  0029E0  0900               	iorlw	0
  9289  0029E2  A4D8               	btfss	status,2,c
  9290  0029E4  D7D9               	goto	l1542
  9291                           
  9292                           ;display.c: 364: cntr = 0;
  9293  0029E6  0E00               	movlw	0
  9294  0029E8  6E28               	movwf	__display_found@cntr,c
  9295                           
  9296                           ;display.c: 365: while(found_line3[cntr])
  9297  0029EA  D017               	goto	l1544
  9298  0029EC                     
  9299                           ;display.c: 366: display_content[2][cntr] = found_line3[cntr++];
  9300  0029EC  5028               	movf	__display_found@cntr,w,c
  9301  0029EE  0D01               	mullw	1
  9302  0029F0  0E98               	movlw	low _found_line3
  9303  0029F2  24F3               	addwf	prodl,w,c
  9304  0029F4  6EF6               	movwf	tblptrl,c
  9305  0029F6  0E8E               	movlw	high _found_line3
  9306  0029F8  20F4               	addwfc	prodh,w,c
  9307  0029FA  6EF7               	movwf	tblptrh,c
  9308  0029FC                     	if	1	;There are 3 active tblptr bytes
  9309  0029FC  6AF8               	clrf	tblptru,c
  9310  0029FE  0E00               	movlw	low (__mediumconst shr (0+16))
  9311  002A00  22F8               	addwfc	tblptru,f,c
  9312  002A02                     	endif
  9313  002A02  5028               	movf	__display_found@cntr,w,c
  9314  002A04  0D01               	mullw	1
  9315  002A06  0E9C               	movlw	low (_display_content+40)
  9316  002A08  24F3               	addwf	prodl,w,c
  9317  002A0A  6ED9               	movwf	fsr2l,c
  9318  002A0C  0E01               	movlw	high (_display_content+40)
  9319  002A0E  20F4               	addwfc	prodh,w,c
  9320  002A10  6EDA               	movwf	fsr2h,c
  9321  002A12  0008               	tblrd		*
  9322  002A14  CFF5 FFDF          	movff	tablat,indf2
  9323  002A18  2A28               	incf	__display_found@cntr,f,c
  9324  002A1A                     l1544:
  9325  002A1A  5028               	movf	__display_found@cntr,w,c
  9326  002A1C  0D01               	mullw	1
  9327  002A1E  0E98               	movlw	low _found_line3
  9328  002A20  24F3               	addwf	prodl,w,c
  9329  002A22  6EF6               	movwf	tblptrl,c
  9330  002A24  0E8E               	movlw	high _found_line3
  9331  002A26  20F4               	addwfc	prodh,w,c
  9332  002A28  6EF7               	movwf	tblptrh,c
  9333  002A2A                     	if	1	;There are 3 active tblptr bytes
  9334  002A2A  6AF8               	clrf	tblptru,c
  9335  002A2C  0E00               	movlw	low (__mediumconst shr (0+16))
  9336  002A2E  22F8               	addwfc	tblptru,f,c
  9337  002A30                     	endif
  9338  002A30  0008               	tblrd		*
  9339  002A32  50F5               	movf	tablat,w,c
  9340  002A34  0900               	iorlw	0
  9341  002A36  A4D8               	btfss	status,2,c
  9342  002A38  D7D9               	goto	l1545
  9343                           
  9344                           ;display.c: 367: start = cntr;
  9345  002A3A  C028  F027         	movff	__display_found@cntr,__display_found@start
  9346                           
  9347                           ;display.c: 368: start += _display_itoa_u32(bootloader_get_file_size(), &display_content
      +                          [2][cntr]);
  9348  002A3E  EC93  F03E         	call	_bootloader_get_file_size	;wreg free
  9349  002A42  C001  F01F         	movff	?_bootloader_get_file_size,__display_itoa_u32@value
  9350  002A46  C002  F020         	movff	?_bootloader_get_file_size+1,__display_itoa_u32@value+1
  9351  002A4A  C003  F021         	movff	?_bootloader_get_file_size+2,__display_itoa_u32@value+2
  9352  002A4E  C004  F022         	movff	?_bootloader_get_file_size+3,__display_itoa_u32@value+3
  9353  002A52  5028               	movf	__display_found@cntr,w,c
  9354  002A54  0D01               	mullw	1
  9355  002A56  0E9C               	movlw	low (_display_content+40)
  9356  002A58  24F3               	addwf	prodl,w,c
  9357  002A5A  6E23               	movwf	__display_itoa_u32@text,c
  9358  002A5C  0E01               	movlw	high (_display_content+40)
  9359  002A5E  20F4               	addwfc	prodh,w,c
  9360  002A60  6E24               	movwf	__display_itoa_u32@text+1,c
  9361  002A62  EC2D  F004         	call	__display_itoa_u32	;wreg free
  9362  002A66  2627               	addwf	__display_found@start,f,c
  9363                           
  9364                           ;display.c: 369: cntr = 0;
  9365  002A68  0E00               	movlw	0
  9366  002A6A  6E28               	movwf	__display_found@cntr,c
  9367                           
  9368                           ;display.c: 370: while(found_line3b[cntr])
  9369  002A6C  D01C               	goto	l1547
  9370  002A6E                     
  9371                           ;display.c: 371: display_content[2][start+cntr] = found_line3b[cntr++];
  9372  002A6E  5028               	movf	__display_found@cntr,w,c
  9373  002A70  0D01               	mullw	1
  9374  002A72  0E91               	movlw	low _found_line3b
  9375  002A74  24F3               	addwf	prodl,w,c
  9376  002A76  6EF6               	movwf	tblptrl,c
  9377  002A78  0E8E               	movlw	high _found_line3b
  9378  002A7A  20F4               	addwfc	prodh,w,c
  9379  002A7C  6EF7               	movwf	tblptrh,c
  9380  002A7E                     	if	1	;There are 3 active tblptr bytes
  9381  002A7E  6AF8               	clrf	tblptru,c
  9382  002A80  0E00               	movlw	low (__mediumconst shr (0+16))
  9383  002A82  22F8               	addwfc	tblptru,f,c
  9384  002A84                     	endif
  9385  002A84  5028               	movf	__display_found@cntr,w,c
  9386  002A86  C027  F025         	movff	__display_found@start,??__display_found
  9387  002A8A  6A26               	clrf	(??__display_found+1)& (0+255),c
  9388  002A8C  2625               	addwf	??__display_found,f,c
  9389  002A8E  0E00               	movlw	0
  9390  002A90  2226               	addwfc	??__display_found+1,f,c
  9391  002A92  0E9C               	movlw	low (_display_content+40)
  9392  002A94  2425               	addwf	??__display_found,w,c
  9393  002A96  6ED9               	movwf	fsr2l,c
  9394  002A98  0E01               	movlw	high (_display_content+40)
  9395  002A9A  2026               	addwfc	??__display_found+1,w,c
  9396  002A9C  6EDA               	movwf	fsr2h,c
  9397  002A9E  0008               	tblrd		*
  9398  002AA0  CFF5 FFDF          	movff	tablat,indf2
  9399  002AA4  2A28               	incf	__display_found@cntr,f,c
  9400  002AA6                     l1547:
  9401  002AA6  5028               	movf	__display_found@cntr,w,c
  9402  002AA8  0D01               	mullw	1
  9403  002AAA  0E91               	movlw	low _found_line3b
  9404  002AAC  24F3               	addwf	prodl,w,c
  9405  002AAE  6EF6               	movwf	tblptrl,c
  9406  002AB0  0E8E               	movlw	high _found_line3b
  9407  002AB2  20F4               	addwfc	prodh,w,c
  9408  002AB4  6EF7               	movwf	tblptrh,c
  9409  002AB6                     	if	1	;There are 3 active tblptr bytes
  9410  002AB6  6AF8               	clrf	tblptru,c
  9411  002AB8  0E00               	movlw	low (__mediumconst shr (0+16))
  9412  002ABA  22F8               	addwfc	tblptru,f,c
  9413  002ABC                     	endif
  9414  002ABC  0008               	tblrd		*
  9415  002ABE  50F5               	movf	tablat,w,c
  9416  002AC0  0900               	iorlw	0
  9417  002AC2  A4D8               	btfss	status,2,c
  9418  002AC4  D7D4               	goto	l1548
  9419                           
  9420                           ;display.c: 373: cntr = 0;
  9421  002AC6  0E00               	movlw	0
  9422  002AC8  6E28               	movwf	__display_found@cntr,c
  9423                           
  9424                           ;display.c: 374: while(found_line4[cntr])
  9425  002ACA  D017               	goto	l1550
  9426  002ACC                     
  9427                           ;display.c: 375: display_content[3][cntr] = found_line4[cntr++];
  9428  002ACC  5028               	movf	__display_found@cntr,w,c
  9429  002ACE  0D01               	mullw	1
  9430  002AD0  0E54               	movlw	low _found_line4
  9431  002AD2  24F3               	addwf	prodl,w,c
  9432  002AD4  6EF6               	movwf	tblptrl,c
  9433  002AD6  0E8D               	movlw	high _found_line4
  9434  002AD8  20F4               	addwfc	prodh,w,c
  9435  002ADA  6EF7               	movwf	tblptrh,c
  9436  002ADC                     	if	1	;There are 3 active tblptr bytes
  9437  002ADC  6AF8               	clrf	tblptru,c
  9438  002ADE  0E00               	movlw	low (__mediumconst shr (0+16))
  9439  002AE0  22F8               	addwfc	tblptru,f,c
  9440  002AE2                     	endif
  9441  002AE2  5028               	movf	__display_found@cntr,w,c
  9442  002AE4  0D01               	mullw	1
  9443  002AE6  0EB0               	movlw	low (_display_content+60)
  9444  002AE8  24F3               	addwf	prodl,w,c
  9445  002AEA  6ED9               	movwf	fsr2l,c
  9446  002AEC  0E01               	movlw	high (_display_content+60)
  9447  002AEE  20F4               	addwfc	prodh,w,c
  9448  002AF0  6EDA               	movwf	fsr2h,c
  9449  002AF2  0008               	tblrd		*
  9450  002AF4  CFF5 FFDF          	movff	tablat,indf2
  9451  002AF8  2A28               	incf	__display_found@cntr,f,c
  9452  002AFA                     l1550:
  9453  002AFA  5028               	movf	__display_found@cntr,w,c
  9454  002AFC  0D01               	mullw	1
  9455  002AFE  0E54               	movlw	low _found_line4
  9456  002B00  24F3               	addwf	prodl,w,c
  9457  002B02  6EF6               	movwf	tblptrl,c
  9458  002B04  0E8D               	movlw	high _found_line4
  9459  002B06  20F4               	addwfc	prodh,w,c
  9460  002B08  6EF7               	movwf	tblptrh,c
  9461  002B0A                     	if	1	;There are 3 active tblptr bytes
  9462  002B0A  6AF8               	clrf	tblptru,c
  9463  002B0C  0E00               	movlw	low (__mediumconst shr (0+16))
  9464  002B0E  22F8               	addwfc	tblptru,f,c
  9465  002B10                     	endif
  9466  002B10  0008               	tblrd		*
  9467  002B12  50F5               	movf	tablat,w,c
  9468  002B14  0900               	iorlw	0
  9469  002B16  B4D8               	btfsc	status,2,c
  9470  002B18  0012               	return	
  9471  002B1A  D7D8               	goto	l1551
  9472  002B1C                     __end_of__display_found:
  9473                           	opt stack 0
  9474                           tblptru	equ	0xFF8
  9475                           tblptrh	equ	0xFF7
  9476                           tblptrl	equ	0xFF6
  9477                           tablat	equ	0xFF5
  9478                           prodh	equ	0xFF4
  9479                           prodl	equ	0xFF3
  9480                           intcon	equ	0xFF2
  9481                           intcon2	equ	0xFF1
  9482                           intcon3	equ	0xFF0
  9483                           postinc0	equ	0xFEE
  9484                           wreg	equ	0xFE8
  9485                           postdec1	equ	0xFE5
  9486                           plusw1	equ	0xFE3
  9487                           fsr1h	equ	0xFE2
  9488                           fsr1l	equ	0xFE1
  9489                           indf2	equ	0xFDF
  9490                           postinc2	equ	0xFDE
  9491                           plusw2	equ	0xFDB
  9492                           fsr2h	equ	0xFDA
  9493                           fsr2l	equ	0xFD9
  9494                           status	equ	0xFD8
  9495                           
  9496 ;; *************** function __display_failed *****************
  9497 ;; Defined at:
  9498 ;;		line 416 in file "display.c"
  9499 ;; Parameters:    Size  Location     Type
  9500 ;;		None
  9501 ;; Auto vars:     Size  Location     Type
  9502 ;;  cntr            1   36[COMRAM] unsigned char 
  9503 ;;  start           1    0        unsigned char 
  9504 ;; Return value:  Size  Location     Type
  9505 ;;                  1    wreg      void 
  9506 ;; Registers used:
  9507 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9508 ;; Tracked objects:
  9509 ;;		On entry : 0/0
  9510 ;;		On exit  : 0/0
  9511 ;;		Unchanged: 0/0
  9512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9514 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9516 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9517 ;;Total ram usage:        1 bytes
  9518 ;; Hardware stack levels used:    1
  9519 ;; Hardware stack levels required when called:    5
  9520 ;; This function calls:
  9521 ;;		__display_itoa_u16
  9522 ;;		__display_itoa_u32
  9523 ;;		_bootloader_get_entries
  9524 ;;		_bootloader_get_error
  9525 ;;		_bootloader_get_rec_address
  9526 ;; This function is called by:
  9527 ;;		_display_prepare
  9528 ;; This function uses a non-reentrant model
  9529 ;;
  9530                           
  9531                           	psect	text38
  9532  000F34                     __ptext38:
  9533                           	opt stack 0
  9534  000F34                     __display_failed:
  9535                           	opt stack 24
  9536                           
  9537                           ;display.c: 418: uint8_t cntr;;display.c: 419: uint8_t start;;display.c: 420: cntr = 0;
  9538                           
  9539                           ;incstack = 0
  9540  000F34  0E00               	movlw	0
  9541  000F36  6E25               	movwf	__display_failed@cntr,c
  9542                           
  9543                           ;display.c: 421: while(failed_line1[cntr])
  9544  000F38  D017               	goto	l1583
  9545  000F3A                     
  9546                           ;display.c: 422: display_content[0][cntr] = failed_line1[cntr++];
  9547  000F3A  5025               	movf	__display_failed@cntr,w,c
  9548  000F3C  0D01               	mullw	1
  9549  000F3E  0EE9               	movlw	low _failed_line1
  9550  000F40  24F3               	addwf	prodl,w,c
  9551  000F42  6EF6               	movwf	tblptrl,c
  9552  000F44  0E8D               	movlw	high _failed_line1
  9553  000F46  20F4               	addwfc	prodh,w,c
  9554  000F48  6EF7               	movwf	tblptrh,c
  9555  000F4A                     	if	1	;There are 3 active tblptr bytes
  9556  000F4A  6AF8               	clrf	tblptru,c
  9557  000F4C  0E00               	movlw	low (__mediumconst shr (0+16))
  9558  000F4E  22F8               	addwfc	tblptru,f,c
  9559  000F50                     	endif
  9560  000F50  5025               	movf	__display_failed@cntr,w,c
  9561  000F52  0D01               	mullw	1
  9562  000F54  0E74               	movlw	low _display_content
  9563  000F56  24F3               	addwf	prodl,w,c
  9564  000F58  6ED9               	movwf	fsr2l,c
  9565  000F5A  0E01               	movlw	high _display_content
  9566  000F5C  20F4               	addwfc	prodh,w,c
  9567  000F5E  6EDA               	movwf	fsr2h,c
  9568  000F60  0008               	tblrd		*
  9569  000F62  CFF5 FFDF          	movff	tablat,indf2
  9570  000F66  2A25               	incf	__display_failed@cntr,f,c
  9571  000F68                     l1583:
  9572  000F68  5025               	movf	__display_failed@cntr,w,c
  9573  000F6A  0D01               	mullw	1
  9574  000F6C  0EE9               	movlw	low _failed_line1
  9575  000F6E  24F3               	addwf	prodl,w,c
  9576  000F70  6EF6               	movwf	tblptrl,c
  9577  000F72  0E8D               	movlw	high _failed_line1
  9578  000F74  20F4               	addwfc	prodh,w,c
  9579  000F76  6EF7               	movwf	tblptrh,c
  9580  000F78                     	if	1	;There are 3 active tblptr bytes
  9581  000F78  6AF8               	clrf	tblptru,c
  9582  000F7A  0E00               	movlw	low (__mediumconst shr (0+16))
  9583  000F7C  22F8               	addwfc	tblptru,f,c
  9584  000F7E                     	endif
  9585  000F7E  0008               	tblrd		*
  9586  000F80  50F5               	movf	tablat,w,c
  9587  000F82  0900               	iorlw	0
  9588  000F84  A4D8               	btfss	status,2,c
  9589  000F86  D7D9               	goto	l1584
  9590                           
  9591                           ;display.c: 423: cntr = 0;
  9592  000F88  0E00               	movlw	0
  9593  000F8A  6E25               	movwf	__display_failed@cntr,c
  9594                           
  9595                           ;display.c: 424: while(failed_line2[cntr])
  9596  000F8C  D017               	goto	l1586
  9597  000F8E                     
  9598                           ;display.c: 425: display_content[1][cntr] = failed_line2[cntr++];
  9599  000F8E  5025               	movf	__display_failed@cntr,w,c
  9600  000F90  0D01               	mullw	1
  9601  000F92  0E42               	movlw	low _failed_line2
  9602  000F94  24F3               	addwf	prodl,w,c
  9603  000F96  6EF6               	movwf	tblptrl,c
  9604  000F98  0E8D               	movlw	high _failed_line2
  9605  000F9A  20F4               	addwfc	prodh,w,c
  9606  000F9C  6EF7               	movwf	tblptrh,c
  9607  000F9E                     	if	1	;There are 3 active tblptr bytes
  9608  000F9E  6AF8               	clrf	tblptru,c
  9609  000FA0  0E00               	movlw	low (__mediumconst shr (0+16))
  9610  000FA2  22F8               	addwfc	tblptru,f,c
  9611  000FA4                     	endif
  9612  000FA4  5025               	movf	__display_failed@cntr,w,c
  9613  000FA6  0D01               	mullw	1
  9614  000FA8  0E88               	movlw	low (_display_content+20)
  9615  000FAA  24F3               	addwf	prodl,w,c
  9616  000FAC  6ED9               	movwf	fsr2l,c
  9617  000FAE  0E01               	movlw	high (_display_content+20)
  9618  000FB0  20F4               	addwfc	prodh,w,c
  9619  000FB2  6EDA               	movwf	fsr2h,c
  9620  000FB4  0008               	tblrd		*
  9621  000FB6  CFF5 FFDF          	movff	tablat,indf2
  9622  000FBA  2A25               	incf	__display_failed@cntr,f,c
  9623  000FBC                     l1586:
  9624  000FBC  5025               	movf	__display_failed@cntr,w,c
  9625  000FBE  0D01               	mullw	1
  9626  000FC0  0E42               	movlw	low _failed_line2
  9627  000FC2  24F3               	addwf	prodl,w,c
  9628  000FC4  6EF6               	movwf	tblptrl,c
  9629  000FC6  0E8D               	movlw	high _failed_line2
  9630  000FC8  20F4               	addwfc	prodh,w,c
  9631  000FCA  6EF7               	movwf	tblptrh,c
  9632  000FCC                     	if	1	;There are 3 active tblptr bytes
  9633  000FCC  6AF8               	clrf	tblptru,c
  9634  000FCE  0E00               	movlw	low (__mediumconst shr (0+16))
  9635  000FD0  22F8               	addwfc	tblptru,f,c
  9636  000FD2                     	endif
  9637  000FD2  0008               	tblrd		*
  9638  000FD4  50F5               	movf	tablat,w,c
  9639  000FD6  0900               	iorlw	0
  9640  000FD8  A4D8               	btfss	status,2,c
  9641  000FDA  D7D9               	goto	l1587
  9642                           
  9643                           ;display.c: 427: cntr = 0;
  9644  000FDC  0E00               	movlw	0
  9645  000FDE  6E25               	movwf	__display_failed@cntr,c
  9646                           
  9647                           ;display.c: 428: switch(bootloader_get_error())
  9648  000FE0  D0D6               	goto	l1589
  9649  000FE2                     
  9650                           ;display.c: 432: display_content[2][cntr] = failed_line3_startCode[cntr++];
  9651  000FE2  5025               	movf	__display_failed@cntr,w,c
  9652  000FE4  0D01               	mullw	1
  9653  000FE6  0E0A               	movlw	low _failed_line3_startCode
  9654  000FE8  24F3               	addwf	prodl,w,c
  9655  000FEA  6EF6               	movwf	tblptrl,c
  9656  000FEC  0E8D               	movlw	high _failed_line3_startCode
  9657  000FEE  20F4               	addwfc	prodh,w,c
  9658  000FF0  6EF7               	movwf	tblptrh,c
  9659  000FF2                     	if	1	;There are 3 active tblptr bytes
  9660  000FF2  6AF8               	clrf	tblptru,c
  9661  000FF4  0E00               	movlw	low (__mediumconst shr (0+16))
  9662  000FF6  22F8               	addwfc	tblptru,f,c
  9663  000FF8                     	endif
  9664  000FF8  5025               	movf	__display_failed@cntr,w,c
  9665  000FFA  0D01               	mullw	1
  9666  000FFC  0E9C               	movlw	low (_display_content+40)
  9667  000FFE  24F3               	addwf	prodl,w,c
  9668  001000  6ED9               	movwf	fsr2l,c
  9669  001002  0E01               	movlw	high (_display_content+40)
  9670  001004  20F4               	addwfc	prodh,w,c
  9671  001006  6EDA               	movwf	fsr2h,c
  9672  001008  0008               	tblrd		*
  9673  00100A  CFF5 FFDF          	movff	tablat,indf2
  9674  00100E  2A25               	incf	__display_failed@cntr,f,c
  9675  001010  5025               	movf	__display_failed@cntr,w,c
  9676  001012  0D01               	mullw	1
  9677  001014  0E0A               	movlw	low _failed_line3_startCode
  9678  001016  24F3               	addwf	prodl,w,c
  9679  001018  6EF6               	movwf	tblptrl,c
  9680  00101A  0E8D               	movlw	high _failed_line3_startCode
  9681  00101C  20F4               	addwfc	prodh,w,c
  9682  00101E  6EF7               	movwf	tblptrh,c
  9683  001020                     	if	1	;There are 3 active tblptr bytes
  9684  001020  6AF8               	clrf	tblptru,c
  9685  001022  0E00               	movlw	low (__mediumconst shr (0+16))
  9686  001024  22F8               	addwfc	tblptru,f,c
  9687  001026                     	endif
  9688  001026  0008               	tblrd		*
  9689  001028  50F5               	movf	tablat,w,c
  9690  00102A  0900               	iorlw	0
  9691  00102C  B4D8               	btfsc	status,2,c
  9692  00102E  D0C0               	goto	l1594
  9693  001030  D7D8               	goto	l1592
  9694  001032                     
  9695                           ;display.c: 437: display_content[2][cntr] = failed_line3_checksum[cntr++];
  9696  001032  5025               	movf	__display_failed@cntr,w,c
  9697  001034  0D01               	mullw	1
  9698  001036  0E29               	movlw	low _failed_line3_checksum
  9699  001038  24F3               	addwf	prodl,w,c
  9700  00103A  6EF6               	movwf	tblptrl,c
  9701  00103C  0E8E               	movlw	high _failed_line3_checksum
  9702  00103E  20F4               	addwfc	prodh,w,c
  9703  001040  6EF7               	movwf	tblptrh,c
  9704  001042                     	if	1	;There are 3 active tblptr bytes
  9705  001042  6AF8               	clrf	tblptru,c
  9706  001044  0E00               	movlw	low (__mediumconst shr (0+16))
  9707  001046  22F8               	addwfc	tblptru,f,c
  9708  001048                     	endif
  9709  001048  5025               	movf	__display_failed@cntr,w,c
  9710  00104A  0D01               	mullw	1
  9711  00104C  0E9C               	movlw	low (_display_content+40)
  9712  00104E  24F3               	addwf	prodl,w,c
  9713  001050  6ED9               	movwf	fsr2l,c
  9714  001052  0E01               	movlw	high (_display_content+40)
  9715  001054  20F4               	addwfc	prodh,w,c
  9716  001056  6EDA               	movwf	fsr2h,c
  9717  001058  0008               	tblrd		*
  9718  00105A  CFF5 FFDF          	movff	tablat,indf2
  9719  00105E  2A25               	incf	__display_failed@cntr,f,c
  9720  001060  5025               	movf	__display_failed@cntr,w,c
  9721  001062  0D01               	mullw	1
  9722  001064  0E29               	movlw	low _failed_line3_checksum
  9723  001066  24F3               	addwf	prodl,w,c
  9724  001068  6EF6               	movwf	tblptrl,c
  9725  00106A  0E8E               	movlw	high _failed_line3_checksum
  9726  00106C  20F4               	addwfc	prodh,w,c
  9727  00106E  6EF7               	movwf	tblptrh,c
  9728  001070                     	if	1	;There are 3 active tblptr bytes
  9729  001070  6AF8               	clrf	tblptru,c
  9730  001072  0E00               	movlw	low (__mediumconst shr (0+16))
  9731  001074  22F8               	addwfc	tblptru,f,c
  9732  001076                     	endif
  9733  001076  0008               	tblrd		*
  9734  001078  50F5               	movf	tablat,w,c
  9735  00107A  0900               	iorlw	0
  9736  00107C  B4D8               	btfsc	status,2,c
  9737  00107E  D098               	goto	l1594
  9738  001080  D7D8               	goto	l1597
  9739  001082                     
  9740                           ;display.c: 444: display_content[2][cntr] = failed_line3_noNextRecord[cntr++];
  9741  001082  5025               	movf	__display_failed@cntr,w,c
  9742  001084  0D01               	mullw	1
  9743  001086  0E38               	movlw	low _failed_line3_noNextRecord
  9744  001088  24F3               	addwf	prodl,w,c
  9745  00108A  6EF6               	movwf	tblptrl,c
  9746  00108C  0E8E               	movlw	high _failed_line3_noNextRecord
  9747  00108E  20F4               	addwfc	prodh,w,c
  9748  001090  6EF7               	movwf	tblptrh,c
  9749  001092                     	if	1	;There are 3 active tblptr bytes
  9750  001092  6AF8               	clrf	tblptru,c
  9751  001094  0E00               	movlw	low (__mediumconst shr (0+16))
  9752  001096  22F8               	addwfc	tblptru,f,c
  9753  001098                     	endif
  9754  001098  5025               	movf	__display_failed@cntr,w,c
  9755  00109A  0D01               	mullw	1
  9756  00109C  0E9C               	movlw	low (_display_content+40)
  9757  00109E  24F3               	addwf	prodl,w,c
  9758  0010A0  6ED9               	movwf	fsr2l,c
  9759  0010A2  0E01               	movlw	high (_display_content+40)
  9760  0010A4  20F4               	addwfc	prodh,w,c
  9761  0010A6  6EDA               	movwf	fsr2h,c
  9762  0010A8  0008               	tblrd		*
  9763  0010AA  CFF5 FFDF          	movff	tablat,indf2
  9764  0010AE  2A25               	incf	__display_failed@cntr,f,c
  9765  0010B0  5025               	movf	__display_failed@cntr,w,c
  9766  0010B2  0D01               	mullw	1
  9767  0010B4  0E38               	movlw	low _failed_line3_noNextRecord
  9768  0010B6  24F3               	addwf	prodl,w,c
  9769  0010B8  6EF6               	movwf	tblptrl,c
  9770  0010BA  0E8E               	movlw	high _failed_line3_noNextRecord
  9771  0010BC  20F4               	addwfc	prodh,w,c
  9772  0010BE  6EF7               	movwf	tblptrh,c
  9773  0010C0                     	if	1	;There are 3 active tblptr bytes
  9774  0010C0  6AF8               	clrf	tblptru,c
  9775  0010C2  0E00               	movlw	low (__mediumconst shr (0+16))
  9776  0010C4  22F8               	addwfc	tblptru,f,c
  9777  0010C6                     	endif
  9778  0010C6  0008               	tblrd		*
  9779  0010C8  50F5               	movf	tablat,w,c
  9780  0010CA  0900               	iorlw	0
  9781  0010CC  B4D8               	btfsc	status,2,c
  9782  0010CE  D070               	goto	l1594
  9783  0010D0  D7D8               	goto	l1601
  9784  0010D2                     
  9785                           ;display.c: 449: display_content[2][cntr] = failed_line3_dataTooLong[cntr++];
  9786  0010D2  5025               	movf	__display_failed@cntr,w,c
  9787  0010D4  0D01               	mullw	1
  9788  0010D6  0E47               	movlw	low _failed_line3_dataTooLong
  9789  0010D8  24F3               	addwf	prodl,w,c
  9790  0010DA  6EF6               	movwf	tblptrl,c
  9791  0010DC  0E8E               	movlw	high _failed_line3_dataTooLong
  9792  0010DE  20F4               	addwfc	prodh,w,c
  9793  0010E0  6EF7               	movwf	tblptrh,c
  9794  0010E2                     	if	1	;There are 3 active tblptr bytes
  9795  0010E2  6AF8               	clrf	tblptru,c
  9796  0010E4  0E00               	movlw	low (__mediumconst shr (0+16))
  9797  0010E6  22F8               	addwfc	tblptru,f,c
  9798  0010E8                     	endif
  9799  0010E8  5025               	movf	__display_failed@cntr,w,c
  9800  0010EA  0D01               	mullw	1
  9801  0010EC  0E9C               	movlw	low (_display_content+40)
  9802  0010EE  24F3               	addwf	prodl,w,c
  9803  0010F0  6ED9               	movwf	fsr2l,c
  9804  0010F2  0E01               	movlw	high (_display_content+40)
  9805  0010F4  20F4               	addwfc	prodh,w,c
  9806  0010F6  6EDA               	movwf	fsr2h,c
  9807  0010F8  0008               	tblrd		*
  9808  0010FA  CFF5 FFDF          	movff	tablat,indf2
  9809  0010FE  2A25               	incf	__display_failed@cntr,f,c
  9810  001100  5025               	movf	__display_failed@cntr,w,c
  9811  001102  0D01               	mullw	1
  9812  001104  0E47               	movlw	low _failed_line3_dataTooLong
  9813  001106  24F3               	addwf	prodl,w,c
  9814  001108  6EF6               	movwf	tblptrl,c
  9815  00110A  0E8E               	movlw	high _failed_line3_dataTooLong
  9816  00110C  20F4               	addwfc	prodh,w,c
  9817  00110E  6EF7               	movwf	tblptrh,c
  9818  001110                     	if	1	;There are 3 active tblptr bytes
  9819  001110  6AF8               	clrf	tblptru,c
  9820  001112  0E00               	movlw	low (__mediumconst shr (0+16))
  9821  001114  22F8               	addwfc	tblptru,f,c
  9822  001116                     	endif
  9823  001116  0008               	tblrd		*
  9824  001118  50F5               	movf	tablat,w,c
  9825  00111A  0900               	iorlw	0
  9826  00111C  B4D8               	btfsc	status,2,c
  9827  00111E  D048               	goto	l1594
  9828  001120  D7D8               	goto	l1605
  9829  001122                     
  9830                           ;display.c: 454: display_content[2][cntr] = failed_line3_addressRange[cntr++];
  9831  001122  5025               	movf	__display_failed@cntr,w,c
  9832  001124  0D01               	mullw	1
  9833  001126  0EE2               	movlw	low _failed_line3_addressRange
  9834  001128  24F3               	addwf	prodl,w,c
  9835  00112A  6EF6               	movwf	tblptrl,c
  9836  00112C  0E8C               	movlw	high _failed_line3_addressRange
  9837  00112E  20F4               	addwfc	prodh,w,c
  9838  001130  6EF7               	movwf	tblptrh,c
  9839  001132                     	if	1	;There are 3 active tblptr bytes
  9840  001132  6AF8               	clrf	tblptru,c
  9841  001134  0E00               	movlw	low (__mediumconst shr (0+16))
  9842  001136  22F8               	addwfc	tblptru,f,c
  9843  001138                     	endif
  9844  001138  5025               	movf	__display_failed@cntr,w,c
  9845  00113A  0D01               	mullw	1
  9846  00113C  0E9C               	movlw	low (_display_content+40)
  9847  00113E  24F3               	addwf	prodl,w,c
  9848  001140  6ED9               	movwf	fsr2l,c
  9849  001142  0E01               	movlw	high (_display_content+40)
  9850  001144  20F4               	addwfc	prodh,w,c
  9851  001146  6EDA               	movwf	fsr2h,c
  9852  001148  0008               	tblrd		*
  9853  00114A  CFF5 FFDF          	movff	tablat,indf2
  9854  00114E  2A25               	incf	__display_failed@cntr,f,c
  9855  001150  5025               	movf	__display_failed@cntr,w,c
  9856  001152  0D01               	mullw	1
  9857  001154  0EE2               	movlw	low _failed_line3_addressRange
  9858  001156  24F3               	addwf	prodl,w,c
  9859  001158  6EF6               	movwf	tblptrl,c
  9860  00115A  0E8C               	movlw	high _failed_line3_addressRange
  9861  00115C  20F4               	addwfc	prodh,w,c
  9862  00115E  6EF7               	movwf	tblptrh,c
  9863  001160                     	if	1	;There are 3 active tblptr bytes
  9864  001160  6AF8               	clrf	tblptru,c
  9865  001162  0E00               	movlw	low (__mediumconst shr (0+16))
  9866  001164  22F8               	addwfc	tblptru,f,c
  9867  001166                     	endif
  9868  001166  0008               	tblrd		*
  9869  001168  50F5               	movf	tablat,w,c
  9870  00116A  0900               	iorlw	0
  9871  00116C  A4D8               	btfss	status,2,c
  9872  00116E  D7D9               	goto	l1609
  9873                           
  9874                           ;display.c: 455: _display_itoa_u32(bootloader_get_rec_address(), &display_content[3][14]
      +                          );
  9875  001170  ECEE  F03E         	call	_bootloader_get_rec_address	;wreg free
  9876  001174  C001  F01F         	movff	?_bootloader_get_rec_address,__display_itoa_u32@value
  9877  001178  C002  F020         	movff	?_bootloader_get_rec_address+1,__display_itoa_u32@value+1
  9878  00117C  6A21               	clrf	__display_itoa_u32@value+2,c
  9879  00117E  6A22               	clrf	__display_itoa_u32@value+3,c
  9880  001180  0EBE               	movlw	low (_display_content+74)
  9881  001182  6E23               	movwf	__display_itoa_u32@text,c
  9882  001184  0E01               	movlw	high (_display_content+74)
  9883  001186  6E24               	movwf	__display_itoa_u32@text+1,c
  9884  001188  EC2D  F004         	call	__display_itoa_u32	;wreg free
  9885                           
  9886                           ;display.c: 458: }
  9887                           
  9888                           ;display.c: 456: break;
  9889  00118C  D011               	goto	l1594
  9890  00118E                     l1589:
  9891  00118E  EC23  F03F         	call	_bootloader_get_error	;wreg free
  9892                           
  9893                           ; Switch size 1, requested type "space"
  9894                           ; Number of cases is 5, Range of values is 11 to 15
  9895                           ; switch strategies available:
  9896                           ; Name         Instructions Cycles
  9897                           ; simple_byte           16     9 (average)
  9898                           ;	Chosen strategy is simple_byte
  9899  001192  0A0B               	xorlw	11	; case 11
  9900  001194  B4D8               	btfsc	status,2,c
  9901  001196  D7DC               	goto	l1608
  9902  001198  0A07               	xorlw	7	; case 12
  9903  00119A  B4D8               	btfsc	status,2,c
  9904  00119C  D7B1               	goto	l1604
  9905  00119E  0A01               	xorlw	1	; case 13
  9906  0011A0  B4D8               	btfsc	status,2,c
  9907  0011A2  D786               	goto	l1600
  9908  0011A4  0A03               	xorlw	3	; case 14
  9909  0011A6  B4D8               	btfsc	status,2,c
  9910  0011A8  D75B               	goto	l1596
  9911  0011AA  0A01               	xorlw	1	; case 15
  9912  0011AC  B4D8               	btfsc	status,2,c
  9913  0011AE  D730               	goto	l1591
  9914  0011B0                     l1594:
  9915                           
  9916                           ;display.c: 460: cntr = 0;
  9917  0011B0  0E00               	movlw	0
  9918  0011B2  6E25               	movwf	__display_failed@cntr,c
  9919                           
  9920                           ;display.c: 461: while(failed_line4[cntr])
  9921  0011B4  D017               	goto	l1611
  9922  0011B6                     
  9923                           ;display.c: 462: display_content[3][cntr] = failed_line4[cntr++];
  9924  0011B6  5025               	movf	__display_failed@cntr,w,c
  9925  0011B8  0D01               	mullw	1
  9926  0011BA  0E6B               	movlw	low _failed_line4
  9927  0011BC  24F3               	addwf	prodl,w,c
  9928  0011BE  6EF6               	movwf	tblptrl,c
  9929  0011C0  0E8E               	movlw	high _failed_line4
  9930  0011C2  20F4               	addwfc	prodh,w,c
  9931  0011C4  6EF7               	movwf	tblptrh,c
  9932  0011C6                     	if	1	;There are 3 active tblptr bytes
  9933  0011C6  6AF8               	clrf	tblptru,c
  9934  0011C8  0E00               	movlw	low (__mediumconst shr (0+16))
  9935  0011CA  22F8               	addwfc	tblptru,f,c
  9936  0011CC                     	endif
  9937  0011CC  5025               	movf	__display_failed@cntr,w,c
  9938  0011CE  0D01               	mullw	1
  9939  0011D0  0EB0               	movlw	low (_display_content+60)
  9940  0011D2  24F3               	addwf	prodl,w,c
  9941  0011D4  6ED9               	movwf	fsr2l,c
  9942  0011D6  0E01               	movlw	high (_display_content+60)
  9943  0011D8  20F4               	addwfc	prodh,w,c
  9944  0011DA  6EDA               	movwf	fsr2h,c
  9945  0011DC  0008               	tblrd		*
  9946  0011DE  CFF5 FFDF          	movff	tablat,indf2
  9947  0011E2  2A25               	incf	__display_failed@cntr,f,c
  9948  0011E4                     l1611:
  9949  0011E4  5025               	movf	__display_failed@cntr,w,c
  9950  0011E6  0D01               	mullw	1
  9951  0011E8  0E6B               	movlw	low _failed_line4
  9952  0011EA  24F3               	addwf	prodl,w,c
  9953  0011EC  6EF6               	movwf	tblptrl,c
  9954  0011EE  0E8E               	movlw	high _failed_line4
  9955  0011F0  20F4               	addwfc	prodh,w,c
  9956  0011F2  6EF7               	movwf	tblptrh,c
  9957  0011F4                     	if	1	;There are 3 active tblptr bytes
  9958  0011F4  6AF8               	clrf	tblptru,c
  9959  0011F6  0E00               	movlw	low (__mediumconst shr (0+16))
  9960  0011F8  22F8               	addwfc	tblptru,f,c
  9961  0011FA                     	endif
  9962  0011FA  0008               	tblrd		*
  9963  0011FC  50F5               	movf	tablat,w,c
  9964  0011FE  0900               	iorlw	0
  9965  001200  A4D8               	btfss	status,2,c
  9966  001202  D7D9               	goto	l1612
  9967                           
  9968                           ;display.c: 463: _display_itoa_u16(bootloader_get_entries(), &display_content[3][cntr]);
  9969  001204  ECF8  F03E         	call	_bootloader_get_entries	;wreg free
  9970  001208  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
  9971  00120C  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
  9972  001210  6A1B               	clrf	__display_itoa_u16@value+2,c
  9973  001212  6A1C               	clrf	__display_itoa_u16@value+3,c
  9974  001214  5025               	movf	__display_failed@cntr,w,c
  9975  001216  0D01               	mullw	1
  9976  001218  0EB0               	movlw	low (_display_content+60)
  9977  00121A  24F3               	addwf	prodl,w,c
  9978  00121C  6E1D               	movwf	__display_itoa_u16@text,c
  9979  00121E  0E01               	movlw	high (_display_content+60)
  9980  001220  20F4               	addwfc	prodh,w,c
  9981  001222  6E1E               	movwf	__display_itoa_u16@text+1,c
  9982  001224  ECDF  F027         	call	__display_itoa_u16	;wreg free
  9983  001228  0012               	return		;funcret
  9984  00122A                     __end_of__display_failed:
  9985                           	opt stack 0
  9986                           tblptru	equ	0xFF8
  9987                           tblptrh	equ	0xFF7
  9988                           tblptrl	equ	0xFF6
  9989                           tablat	equ	0xFF5
  9990                           prodh	equ	0xFF4
  9991                           prodl	equ	0xFF3
  9992                           intcon	equ	0xFF2
  9993                           intcon2	equ	0xFF1
  9994                           intcon3	equ	0xFF0
  9995                           postinc0	equ	0xFEE
  9996                           wreg	equ	0xFE8
  9997                           postdec1	equ	0xFE5
  9998                           plusw1	equ	0xFE3
  9999                           fsr1h	equ	0xFE2
 10000                           fsr1l	equ	0xFE1
 10001                           indf2	equ	0xFDF
 10002                           postinc2	equ	0xFDE
 10003                           plusw2	equ	0xFDB
 10004                           fsr2h	equ	0xFDA
 10005                           fsr2l	equ	0xFD9
 10006                           status	equ	0xFD8
 10007                           
 10008 ;; *************** function __display_itoa_u32 *****************
 10009 ;; Defined at:
 10010 ;;		line 163 in file "display.c"
 10011 ;; Parameters:    Size  Location     Type
 10012 ;;  value           4   30[COMRAM] unsigned long 
 10013 ;;  text            2   34[COMRAM] PTR unsigned char 
 10014 ;;		 -> display_content(80), 
 10015 ;; Auto vars:     Size  Location     Type
 10016 ;;		None
 10017 ;; Return value:  Size  Location     Type
 10018 ;;                  1    wreg      unsigned char 
 10019 ;; Registers used:
 10020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10021 ;; Tracked objects:
 10022 ;;		On entry : 0/0
 10023 ;;		On exit  : 0/0
 10024 ;;		Unchanged: 0/0
 10025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10026 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10027 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10028 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10029 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10030 ;;Total ram usage:        6 bytes
 10031 ;; Hardware stack levels used:    1
 10032 ;; Hardware stack levels required when called:    4
 10033 ;; This function calls:
 10034 ;;		___lldiv
 10035 ;;		___llmod
 10036 ;;		__display_itoa_u16
 10037 ;;		_itoa
 10038 ;; This function is called by:
 10039 ;;		__display_found
 10040 ;;		__display_failed
 10041 ;; This function uses a non-reentrant model
 10042 ;;
 10043                           
 10044                           	psect	text39
 10045  00085A                     __ptext39:
 10046                           	opt stack 0
 10047  00085A                     __display_itoa_u32:
 10048                           	opt stack 24
 10049                           
 10050                           ;display.c: 166: if(value<=0x7FFF)
 10051                           
 10052                           ;incstack = 0
 10053  00085A  5022               	movf	__display_itoa_u32@value+3,w,c
 10054  00085C  1021               	iorwf	__display_itoa_u32@value+2,w,c
 10055  00085E  E111               	bnz	l12456
 10056  000860  0E80               	movlw	128
 10057  000862  5C20               	subwf	__display_itoa_u32@value+1,w,c
 10058  000864  B0D8               	btfsc	status,0,c
 10059  000866  D00D               	goto	l1471
 10060                           
 10061                           ;display.c: 167: {;display.c: 168: return _display_itoa_u16((uint16_t) value, text);
 10062  000868  C01F  F019         	movff	__display_itoa_u32@value,__display_itoa_u16@value
 10063  00086C  C020  F01A         	movff	__display_itoa_u32@value+1,__display_itoa_u16@value+1
 10064  000870  6A1B               	clrf	__display_itoa_u16@value+2,c
 10065  000872  6A1C               	clrf	__display_itoa_u16@value+3,c
 10066  000874  C023  F01D         	movff	__display_itoa_u32@text,__display_itoa_u16@text
 10067  000878  C024  F01E         	movff	__display_itoa_u32@text+1,__display_itoa_u16@text+1
 10068  00087C  ECDF  F027         	call	__display_itoa_u16	;wreg free
 10069  000880  0012               	return	
 10070  000882                     l1471:
 10071  000882                     l12456:
 10072                           
 10073                           ;display.c: 169: };display.c: 172: if(value>100000000)
 10074  000882  041F               	decf	__display_itoa_u32@value,w,c
 10075  000884  0EE1               	movlw	225
 10076  000886  5820               	subwfb	__display_itoa_u32@value+1,w,c
 10077  000888  0EF5               	movlw	245
 10078  00088A  5821               	subwfb	__display_itoa_u32@value+2,w,c
 10079  00088C  0E05               	movlw	5
 10080  00088E  5822               	subwfb	__display_itoa_u32@value+3,w,c
 10081  000890  A0D8               	btfss	status,0,c
 10082  000892  D04C               	goto	l1473
 10083                           
 10084                           ;display.c: 173: {;display.c: 174: itoa(text, (uint16_t)(value/10000), 10);
 10085  000894  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 10086  000898  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 10087  00089C  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 10088  0008A0  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 10089  0008A4  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 10090  0008A8  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 10091  0008AC  0E10               	movlw	16
 10092  0008AE  6E05               	movwf	___lldiv@divisor,c
 10093  0008B0  0E27               	movlw	39
 10094  0008B2  6E06               	movwf	___lldiv@divisor+1,c
 10095  0008B4  0E00               	movlw	0
 10096  0008B6  6E07               	movwf	___lldiv@divisor+2,c
 10097  0008B8  0E00               	movlw	0
 10098  0008BA  6E08               	movwf	___lldiv@divisor+3,c
 10099  0008BC  EC28  F031         	call	___lldiv	;wreg free
 10100  0008C0  C001  F013         	movff	?___lldiv,itoa@val
 10101  0008C4  C002  F014         	movff	?___lldiv+1,itoa@val+1
 10102  0008C8  0E00               	movlw	0
 10103  0008CA  6E16               	movwf	itoa@base+1,c
 10104  0008CC  0E0A               	movlw	10
 10105  0008CE  6E15               	movwf	itoa@base,c
 10106  0008D0  EC28  F03A         	call	_itoa	;wreg free
 10107                           
 10108                           ;display.c: 175: itoa(text+5, (uint16_t)(value%10000), 10);
 10109  0008D4  0E05               	movlw	5
 10110  0008D6  2423               	addwf	__display_itoa_u32@text,w,c
 10111  0008D8  6E11               	movwf	itoa@buf,c
 10112  0008DA  0E00               	movlw	0
 10113  0008DC  2024               	addwfc	__display_itoa_u32@text+1,w,c
 10114  0008DE  6E12               	movwf	itoa@buf+1,c
 10115  0008E0  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 10116  0008E4  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 10117  0008E8  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 10118  0008EC  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 10119  0008F0  0E10               	movlw	16
 10120  0008F2  6E05               	movwf	___llmod@divisor,c
 10121  0008F4  0E27               	movlw	39
 10122  0008F6  6E06               	movwf	___llmod@divisor+1,c
 10123  0008F8  0E00               	movlw	0
 10124  0008FA  6E07               	movwf	___llmod@divisor+2,c
 10125  0008FC  0E00               	movlw	0
 10126  0008FE  6E08               	movwf	___llmod@divisor+3,c
 10127  000900  EC6C  F035         	call	___llmod	;wreg free
 10128  000904  C001  F013         	movff	?___llmod,itoa@val
 10129  000908  C002  F014         	movff	?___llmod+1,itoa@val+1
 10130  00090C  0E00               	movlw	0
 10131  00090E  6E16               	movwf	itoa@base+1,c
 10132  000910  0E0A               	movlw	10
 10133  000912  6E15               	movwf	itoa@base,c
 10134  000914  EC28  F03A         	call	_itoa	;wreg free
 10135                           
 10136                           ;display.c: 176: *(text+9) = ' ';
 10137  000918  EE20 F009          	lfsr	2,9
 10138  00091C  5023               	movf	__display_itoa_u32@text,w,c
 10139  00091E  26D9               	addwf	fsr2l,f,c
 10140  000920  5024               	movf	__display_itoa_u32@text+1,w,c
 10141  000922  22DA               	addwfc	fsr2h,f,c
 10142  000924  0E20               	movlw	32
 10143  000926  6EDF               	movwf	indf2,c
 10144                           
 10145                           ;display.c: 177: return 9;
 10146  000928  0E09               	movlw	9
 10147                           
 10148                           ;display.c: 178: }
 10149  00092A  0012               	return	
 10150  00092C                     l1473:
 10151                           
 10152                           ;display.c: 179: else if(value>10000000)
 10153  00092C  5022               	movf	__display_itoa_u32@value+3,w,c
 10154  00092E  E108               	bnz	u9370
 10155  000930  0E81               	movlw	129
 10156  000932  5C1F               	subwf	__display_itoa_u32@value,w,c
 10157  000934  0E96               	movlw	150
 10158  000936  5820               	subwfb	__display_itoa_u32@value+1,w,c
 10159  000938  0E98               	movlw	152
 10160  00093A  5821               	subwfb	__display_itoa_u32@value+2,w,c
 10161  00093C  A0D8               	btfss	status,0,c
 10162  00093E  D04C               	goto	l1475
 10163  000940                     u9370:
 10164                           
 10165                           ;display.c: 180: {;display.c: 181: itoa(text, (uint16_t)(value/10000), 10);
 10166  000940  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 10167  000944  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 10168  000948  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 10169  00094C  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 10170  000950  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 10171  000954  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 10172  000958  0E10               	movlw	16
 10173  00095A  6E05               	movwf	___lldiv@divisor,c
 10174  00095C  0E27               	movlw	39
 10175  00095E  6E06               	movwf	___lldiv@divisor+1,c
 10176  000960  0E00               	movlw	0
 10177  000962  6E07               	movwf	___lldiv@divisor+2,c
 10178  000964  0E00               	movlw	0
 10179  000966  6E08               	movwf	___lldiv@divisor+3,c
 10180  000968  EC28  F031         	call	___lldiv	;wreg free
 10181  00096C  C001  F013         	movff	?___lldiv,itoa@val
 10182  000970  C002  F014         	movff	?___lldiv+1,itoa@val+1
 10183  000974  0E00               	movlw	0
 10184  000976  6E16               	movwf	itoa@base+1,c
 10185  000978  0E0A               	movlw	10
 10186  00097A  6E15               	movwf	itoa@base,c
 10187  00097C  EC28  F03A         	call	_itoa	;wreg free
 10188                           
 10189                           ;display.c: 182: itoa(text+4, (uint16_t)(value%10000), 10);
 10190  000980  0E04               	movlw	4
 10191  000982  2423               	addwf	__display_itoa_u32@text,w,c
 10192  000984  6E11               	movwf	itoa@buf,c
 10193  000986  0E00               	movlw	0
 10194  000988  2024               	addwfc	__display_itoa_u32@text+1,w,c
 10195  00098A  6E12               	movwf	itoa@buf+1,c
 10196  00098C  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 10197  000990  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 10198  000994  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 10199  000998  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 10200  00099C  0E10               	movlw	16
 10201  00099E  6E05               	movwf	___llmod@divisor,c
 10202  0009A0  0E27               	movlw	39
 10203  0009A2  6E06               	movwf	___llmod@divisor+1,c
 10204  0009A4  0E00               	movlw	0
 10205  0009A6  6E07               	movwf	___llmod@divisor+2,c
 10206  0009A8  0E00               	movlw	0
 10207  0009AA  6E08               	movwf	___llmod@divisor+3,c
 10208  0009AC  EC6C  F035         	call	___llmod	;wreg free
 10209  0009B0  C001  F013         	movff	?___llmod,itoa@val
 10210  0009B4  C002  F014         	movff	?___llmod+1,itoa@val+1
 10211  0009B8  0E00               	movlw	0
 10212  0009BA  6E16               	movwf	itoa@base+1,c
 10213  0009BC  0E0A               	movlw	10
 10214  0009BE  6E15               	movwf	itoa@base,c
 10215  0009C0  EC28  F03A         	call	_itoa	;wreg free
 10216                           
 10217                           ;display.c: 183: *(text+8) = ' ';
 10218  0009C4  EE20 F008          	lfsr	2,8
 10219  0009C8  5023               	movf	__display_itoa_u32@text,w,c
 10220  0009CA  26D9               	addwf	fsr2l,f,c
 10221  0009CC  5024               	movf	__display_itoa_u32@text+1,w,c
 10222  0009CE  22DA               	addwfc	fsr2h,f,c
 10223  0009D0  0E20               	movlw	32
 10224  0009D2  6EDF               	movwf	indf2,c
 10225                           
 10226                           ;display.c: 184: return 8;
 10227  0009D4  0E08               	movlw	8
 10228                           
 10229                           ;display.c: 185: }
 10230  0009D6  0012               	return	
 10231  0009D8                     l1475:
 10232                           
 10233                           ;display.c: 186: else if(value>1000000)
 10234  0009D8  5022               	movf	__display_itoa_u32@value+3,w,c
 10235  0009DA  E108               	bnz	u9380
 10236  0009DC  0E41               	movlw	65
 10237  0009DE  5C1F               	subwf	__display_itoa_u32@value,w,c
 10238  0009E0  0E42               	movlw	66
 10239  0009E2  5820               	subwfb	__display_itoa_u32@value+1,w,c
 10240  0009E4  0E0F               	movlw	15
 10241  0009E6  5821               	subwfb	__display_itoa_u32@value+2,w,c
 10242  0009E8  A0D8               	btfss	status,0,c
 10243  0009EA  D04C               	goto	l1477
 10244  0009EC                     u9380:
 10245                           
 10246                           ;display.c: 187: {;display.c: 188: itoa(text, (uint16_t)(value/10000), 10);
 10247  0009EC  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 10248  0009F0  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 10249  0009F4  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 10250  0009F8  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 10251  0009FC  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 10252  000A00  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 10253  000A04  0E10               	movlw	16
 10254  000A06  6E05               	movwf	___lldiv@divisor,c
 10255  000A08  0E27               	movlw	39
 10256  000A0A  6E06               	movwf	___lldiv@divisor+1,c
 10257  000A0C  0E00               	movlw	0
 10258  000A0E  6E07               	movwf	___lldiv@divisor+2,c
 10259  000A10  0E00               	movlw	0
 10260  000A12  6E08               	movwf	___lldiv@divisor+3,c
 10261  000A14  EC28  F031         	call	___lldiv	;wreg free
 10262  000A18  C001  F013         	movff	?___lldiv,itoa@val
 10263  000A1C  C002  F014         	movff	?___lldiv+1,itoa@val+1
 10264  000A20  0E00               	movlw	0
 10265  000A22  6E16               	movwf	itoa@base+1,c
 10266  000A24  0E0A               	movlw	10
 10267  000A26  6E15               	movwf	itoa@base,c
 10268  000A28  EC28  F03A         	call	_itoa	;wreg free
 10269                           
 10270                           ;display.c: 189: itoa(text+3, (uint16_t)(value%10000), 10);
 10271  000A2C  0E03               	movlw	3
 10272  000A2E  2423               	addwf	__display_itoa_u32@text,w,c
 10273  000A30  6E11               	movwf	itoa@buf,c
 10274  000A32  0E00               	movlw	0
 10275  000A34  2024               	addwfc	__display_itoa_u32@text+1,w,c
 10276  000A36  6E12               	movwf	itoa@buf+1,c
 10277  000A38  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 10278  000A3C  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 10279  000A40  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 10280  000A44  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 10281  000A48  0E10               	movlw	16
 10282  000A4A  6E05               	movwf	___llmod@divisor,c
 10283  000A4C  0E27               	movlw	39
 10284  000A4E  6E06               	movwf	___llmod@divisor+1,c
 10285  000A50  0E00               	movlw	0
 10286  000A52  6E07               	movwf	___llmod@divisor+2,c
 10287  000A54  0E00               	movlw	0
 10288  000A56  6E08               	movwf	___llmod@divisor+3,c
 10289  000A58  EC6C  F035         	call	___llmod	;wreg free
 10290  000A5C  C001  F013         	movff	?___llmod,itoa@val
 10291  000A60  C002  F014         	movff	?___llmod+1,itoa@val+1
 10292  000A64  0E00               	movlw	0
 10293  000A66  6E16               	movwf	itoa@base+1,c
 10294  000A68  0E0A               	movlw	10
 10295  000A6A  6E15               	movwf	itoa@base,c
 10296  000A6C  EC28  F03A         	call	_itoa	;wreg free
 10297                           
 10298                           ;display.c: 190: *(text+7) = ' ';
 10299  000A70  EE20 F007          	lfsr	2,7
 10300  000A74  5023               	movf	__display_itoa_u32@text,w,c
 10301  000A76  26D9               	addwf	fsr2l,f,c
 10302  000A78  5024               	movf	__display_itoa_u32@text+1,w,c
 10303  000A7A  22DA               	addwfc	fsr2h,f,c
 10304  000A7C  0E20               	movlw	32
 10305  000A7E  6EDF               	movwf	indf2,c
 10306                           
 10307                           ;display.c: 191: return 7;
 10308  000A80  0E07               	movlw	7
 10309                           
 10310                           ;display.c: 192: }
 10311  000A82  0012               	return	
 10312  000A84                     l1477:
 10313                           
 10314                           ;display.c: 193: else if(value>100000)
 10315  000A84  5022               	movf	__display_itoa_u32@value+3,w,c
 10316  000A86  E108               	bnz	u9390
 10317  000A88  0EA1               	movlw	161
 10318  000A8A  5C1F               	subwf	__display_itoa_u32@value,w,c
 10319  000A8C  0E86               	movlw	134
 10320  000A8E  5820               	subwfb	__display_itoa_u32@value+1,w,c
 10321  000A90  0E01               	movlw	1
 10322  000A92  5821               	subwfb	__display_itoa_u32@value+2,w,c
 10323  000A94  A0D8               	btfss	status,0,c
 10324  000A96  D04C               	goto	l1479
 10325  000A98                     u9390:
 10326                           
 10327                           ;display.c: 194: {;display.c: 195: itoa(text, (uint16_t)(value/10000), 10);
 10328  000A98  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 10329  000A9C  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 10330  000AA0  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 10331  000AA4  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 10332  000AA8  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 10333  000AAC  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 10334  000AB0  0E10               	movlw	16
 10335  000AB2  6E05               	movwf	___lldiv@divisor,c
 10336  000AB4  0E27               	movlw	39
 10337  000AB6  6E06               	movwf	___lldiv@divisor+1,c
 10338  000AB8  0E00               	movlw	0
 10339  000ABA  6E07               	movwf	___lldiv@divisor+2,c
 10340  000ABC  0E00               	movlw	0
 10341  000ABE  6E08               	movwf	___lldiv@divisor+3,c
 10342  000AC0  EC28  F031         	call	___lldiv	;wreg free
 10343  000AC4  C001  F013         	movff	?___lldiv,itoa@val
 10344  000AC8  C002  F014         	movff	?___lldiv+1,itoa@val+1
 10345  000ACC  0E00               	movlw	0
 10346  000ACE  6E16               	movwf	itoa@base+1,c
 10347  000AD0  0E0A               	movlw	10
 10348  000AD2  6E15               	movwf	itoa@base,c
 10349  000AD4  EC28  F03A         	call	_itoa	;wreg free
 10350                           
 10351                           ;display.c: 196: itoa(text+2, (uint16_t)(value%10000), 10);
 10352  000AD8  0E02               	movlw	2
 10353  000ADA  2423               	addwf	__display_itoa_u32@text,w,c
 10354  000ADC  6E11               	movwf	itoa@buf,c
 10355  000ADE  0E00               	movlw	0
 10356  000AE0  2024               	addwfc	__display_itoa_u32@text+1,w,c
 10357  000AE2  6E12               	movwf	itoa@buf+1,c
 10358  000AE4  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 10359  000AE8  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 10360  000AEC  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 10361  000AF0  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 10362  000AF4  0E10               	movlw	16
 10363  000AF6  6E05               	movwf	___llmod@divisor,c
 10364  000AF8  0E27               	movlw	39
 10365  000AFA  6E06               	movwf	___llmod@divisor+1,c
 10366  000AFC  0E00               	movlw	0
 10367  000AFE  6E07               	movwf	___llmod@divisor+2,c
 10368  000B00  0E00               	movlw	0
 10369  000B02  6E08               	movwf	___llmod@divisor+3,c
 10370  000B04  EC6C  F035         	call	___llmod	;wreg free
 10371  000B08  C001  F013         	movff	?___llmod,itoa@val
 10372  000B0C  C002  F014         	movff	?___llmod+1,itoa@val+1
 10373  000B10  0E00               	movlw	0
 10374  000B12  6E16               	movwf	itoa@base+1,c
 10375  000B14  0E0A               	movlw	10
 10376  000B16  6E15               	movwf	itoa@base,c
 10377  000B18  EC28  F03A         	call	_itoa	;wreg free
 10378                           
 10379                           ;display.c: 197: *(text+6) = ' ';
 10380  000B1C  EE20 F006          	lfsr	2,6
 10381  000B20  5023               	movf	__display_itoa_u32@text,w,c
 10382  000B22  26D9               	addwf	fsr2l,f,c
 10383  000B24  5024               	movf	__display_itoa_u32@text+1,w,c
 10384  000B26  22DA               	addwfc	fsr2h,f,c
 10385  000B28  0E20               	movlw	32
 10386  000B2A  6EDF               	movwf	indf2,c
 10387                           
 10388                           ;display.c: 198: return 6;
 10389  000B2C  0E06               	movlw	6
 10390                           
 10391                           ;display.c: 199: }
 10392  000B2E  0012               	return	
 10393  000B30                     l1479:
 10394                           
 10395                           ;display.c: 200: else;display.c: 201: {;display.c: 202: itoa(text, (uint16_t)(value/1000
      +                          0), 10);
 10396  000B30  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 10397  000B34  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 10398  000B38  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 10399  000B3C  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 10400  000B40  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 10401  000B44  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 10402  000B48  0E10               	movlw	16
 10403  000B4A  6E05               	movwf	___lldiv@divisor,c
 10404  000B4C  0E27               	movlw	39
 10405  000B4E  6E06               	movwf	___lldiv@divisor+1,c
 10406  000B50  0E00               	movlw	0
 10407  000B52  6E07               	movwf	___lldiv@divisor+2,c
 10408  000B54  0E00               	movlw	0
 10409  000B56  6E08               	movwf	___lldiv@divisor+3,c
 10410  000B58  EC28  F031         	call	___lldiv	;wreg free
 10411  000B5C  C001  F013         	movff	?___lldiv,itoa@val
 10412  000B60  C002  F014         	movff	?___lldiv+1,itoa@val+1
 10413  000B64  0E00               	movlw	0
 10414  000B66  6E16               	movwf	itoa@base+1,c
 10415  000B68  0E0A               	movlw	10
 10416  000B6A  6E15               	movwf	itoa@base,c
 10417  000B6C  EC28  F03A         	call	_itoa	;wreg free
 10418                           
 10419                           ;display.c: 203: itoa(text+1, (uint16_t)(value%10000), 10);
 10420  000B70  0E01               	movlw	1
 10421  000B72  2423               	addwf	__display_itoa_u32@text,w,c
 10422  000B74  6E11               	movwf	itoa@buf,c
 10423  000B76  0E00               	movlw	0
 10424  000B78  2024               	addwfc	__display_itoa_u32@text+1,w,c
 10425  000B7A  6E12               	movwf	itoa@buf+1,c
 10426  000B7C  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 10427  000B80  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 10428  000B84  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 10429  000B88  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 10430  000B8C  0E10               	movlw	16
 10431  000B8E  6E05               	movwf	___llmod@divisor,c
 10432  000B90  0E27               	movlw	39
 10433  000B92  6E06               	movwf	___llmod@divisor+1,c
 10434  000B94  0E00               	movlw	0
 10435  000B96  6E07               	movwf	___llmod@divisor+2,c
 10436  000B98  0E00               	movlw	0
 10437  000B9A  6E08               	movwf	___llmod@divisor+3,c
 10438  000B9C  EC6C  F035         	call	___llmod	;wreg free
 10439  000BA0  C001  F013         	movff	?___llmod,itoa@val
 10440  000BA4  C002  F014         	movff	?___llmod+1,itoa@val+1
 10441  000BA8  0E00               	movlw	0
 10442  000BAA  6E16               	movwf	itoa@base+1,c
 10443  000BAC  0E0A               	movlw	10
 10444  000BAE  6E15               	movwf	itoa@base,c
 10445  000BB0  EC28  F03A         	call	_itoa	;wreg free
 10446                           
 10447                           ;display.c: 204: *(text+5) = ' ';
 10448  000BB4  EE20 F005          	lfsr	2,5
 10449  000BB8  5023               	movf	__display_itoa_u32@text,w,c
 10450  000BBA  26D9               	addwf	fsr2l,f,c
 10451  000BBC  5024               	movf	__display_itoa_u32@text+1,w,c
 10452  000BBE  22DA               	addwfc	fsr2h,f,c
 10453  000BC0  0E20               	movlw	32
 10454  000BC2  6EDF               	movwf	indf2,c
 10455                           
 10456                           ;display.c: 205: return 5;
 10457  000BC4  0E05               	movlw	5
 10458  000BC6  0012               	return	
 10459  000BC8                     __end_of__display_itoa_u32:
 10460                           	opt stack 0
 10461                           tblptru	equ	0xFF8
 10462                           tblptrh	equ	0xFF7
 10463                           tblptrl	equ	0xFF6
 10464                           tablat	equ	0xFF5
 10465                           prodh	equ	0xFF4
 10466                           prodl	equ	0xFF3
 10467                           intcon	equ	0xFF2
 10468                           intcon2	equ	0xFF1
 10469                           intcon3	equ	0xFF0
 10470                           postinc0	equ	0xFEE
 10471                           wreg	equ	0xFE8
 10472                           postdec1	equ	0xFE5
 10473                           plusw1	equ	0xFE3
 10474                           fsr1h	equ	0xFE2
 10475                           fsr1l	equ	0xFE1
 10476                           indf2	equ	0xFDF
 10477                           postinc2	equ	0xFDE
 10478                           plusw2	equ	0xFDB
 10479                           fsr2h	equ	0xFDA
 10480                           fsr2l	equ	0xFD9
 10481                           status	equ	0xFD8
 10482                           
 10483 ;; *************** function ___llmod *****************
 10484 ;; Defined at:
 10485 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 10486 ;; Parameters:    Size  Location     Type
 10487 ;;  dividend        4    0[COMRAM] unsigned long 
 10488 ;;  divisor         4    4[COMRAM] unsigned long 
 10489 ;; Auto vars:     Size  Location     Type
 10490 ;;  counter         1    8[COMRAM] unsigned char 
 10491 ;; Return value:  Size  Location     Type
 10492 ;;                  4    0[COMRAM] unsigned long 
 10493 ;; Registers used:
 10494 ;;		wreg, status,2, status,0
 10495 ;; Tracked objects:
 10496 ;;		On entry : 0/0
 10497 ;;		On exit  : 0/0
 10498 ;;		Unchanged: 0/0
 10499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10500 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10501 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10503 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10504 ;;Total ram usage:        9 bytes
 10505 ;; Hardware stack levels used:    1
 10506 ;; This function calls:
 10507 ;;		Nothing
 10508 ;; This function is called by:
 10509 ;;		__display_itoa_u32
 10510 ;; This function uses a non-reentrant model
 10511 ;;
 10512                           
 10513                           	psect	text40
 10514  006AD8                     __ptext40:
 10515                           	opt stack 0
 10516  006AD8                     ___llmod:
 10517                           	opt stack 27
 10518                           
 10519                           ;incstack = 0
 10520  006AD8  5005               	movf	___llmod@divisor,w,c
 10521  006ADA  1006               	iorwf	___llmod@divisor+1,w,c
 10522  006ADC  1007               	iorwf	___llmod@divisor+2,w,c
 10523  006ADE  1008               	iorwf	___llmod@divisor+3,w,c
 10524  006AE0  B4D8               	btfsc	status,2,c
 10525  006AE2  D024               	goto	l3192
 10526  006AE4  0E01               	movlw	1
 10527  006AE6  6E09               	movwf	___llmod@counter,c
 10528  006AE8  D006               	goto	l3187
 10529  006AEA  90D8               	bcf	status,0,c
 10530  006AEC  3605               	rlcf	___llmod@divisor,f,c
 10531  006AEE  3606               	rlcf	___llmod@divisor+1,f,c
 10532  006AF0  3607               	rlcf	___llmod@divisor+2,f,c
 10533  006AF2  3608               	rlcf	___llmod@divisor+3,f,c
 10534  006AF4  2A09               	incf	___llmod@counter,f,c
 10535  006AF6                     l3187:
 10536  006AF6  AE08               	btfss	___llmod@divisor+3,7,c
 10537  006AF8  D7F8               	goto	l3188
 10538  006AFA                     u9150:
 10539  006AFA  5005               	movf	___llmod@divisor,w,c
 10540  006AFC  5C01               	subwf	___llmod@dividend,w,c
 10541  006AFE  5006               	movf	___llmod@divisor+1,w,c
 10542  006B00  5802               	subwfb	___llmod@dividend+1,w,c
 10543  006B02  5007               	movf	___llmod@divisor+2,w,c
 10544  006B04  5803               	subwfb	___llmod@dividend+2,w,c
 10545  006B06  5008               	movf	___llmod@divisor+3,w,c
 10546  006B08  5804               	subwfb	___llmod@dividend+3,w,c
 10547  006B0A  A0D8               	btfss	status,0,c
 10548  006B0C  D008               	goto	l3191
 10549  006B0E  5005               	movf	___llmod@divisor,w,c
 10550  006B10  5E01               	subwf	___llmod@dividend,f,c
 10551  006B12  5006               	movf	___llmod@divisor+1,w,c
 10552  006B14  5A02               	subwfb	___llmod@dividend+1,f,c
 10553  006B16  5007               	movf	___llmod@divisor+2,w,c
 10554  006B18  5A03               	subwfb	___llmod@dividend+2,f,c
 10555  006B1A  5008               	movf	___llmod@divisor+3,w,c
 10556  006B1C  5A04               	subwfb	___llmod@dividend+3,f,c
 10557  006B1E                     l3191:
 10558  006B1E  90D8               	bcf	status,0,c
 10559  006B20  3208               	rrcf	___llmod@divisor+3,f,c
 10560  006B22  3207               	rrcf	___llmod@divisor+2,f,c
 10561  006B24  3206               	rrcf	___llmod@divisor+1,f,c
 10562  006B26  3205               	rrcf	___llmod@divisor,f,c
 10563  006B28  2E09               	decfsz	___llmod@counter,f,c
 10564  006B2A  D7E7               	goto	u9150
 10565  006B2C                     l3192:
 10566  006B2C  C001  F001         	movff	___llmod@dividend,?___llmod
 10567  006B30  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 10568  006B34  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 10569  006B38  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 10570  006B3C  0012               	return		;funcret
 10571  006B3E                     __end_of___llmod:
 10572                           	opt stack 0
 10573                           tblptru	equ	0xFF8
 10574                           tblptrh	equ	0xFF7
 10575                           tblptrl	equ	0xFF6
 10576                           tablat	equ	0xFF5
 10577                           prodh	equ	0xFF4
 10578                           prodl	equ	0xFF3
 10579                           intcon	equ	0xFF2
 10580                           intcon2	equ	0xFF1
 10581                           intcon3	equ	0xFF0
 10582                           postinc0	equ	0xFEE
 10583                           wreg	equ	0xFE8
 10584                           postdec1	equ	0xFE5
 10585                           plusw1	equ	0xFE3
 10586                           fsr1h	equ	0xFE2
 10587                           fsr1l	equ	0xFE1
 10588                           indf2	equ	0xFDF
 10589                           postinc2	equ	0xFDE
 10590                           plusw2	equ	0xFDB
 10591                           fsr2h	equ	0xFDA
 10592                           fsr2l	equ	0xFD9
 10593                           status	equ	0xFD8
 10594                           
 10595 ;; *************** function ___lldiv *****************
 10596 ;; Defined at:
 10597 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 10598 ;; Parameters:    Size  Location     Type
 10599 ;;  dividend        4    0[COMRAM] unsigned long 
 10600 ;;  divisor         4    4[COMRAM] unsigned long 
 10601 ;; Auto vars:     Size  Location     Type
 10602 ;;  quotient        4    8[COMRAM] unsigned long 
 10603 ;;  counter         1   12[COMRAM] unsigned char 
 10604 ;; Return value:  Size  Location     Type
 10605 ;;                  4    0[COMRAM] unsigned long 
 10606 ;; Registers used:
 10607 ;;		wreg, status,2, status,0
 10608 ;; Tracked objects:
 10609 ;;		On entry : 0/0
 10610 ;;		On exit  : 0/0
 10611 ;;		Unchanged: 0/0
 10612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10613 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10614 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10616 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10617 ;;Total ram usage:       13 bytes
 10618 ;; Hardware stack levels used:    1
 10619 ;; This function calls:
 10620 ;;		Nothing
 10621 ;; This function is called by:
 10622 ;;		__display_itoa_u32
 10623 ;; This function uses a non-reentrant model
 10624 ;;
 10625                           
 10626                           	psect	text41
 10627  006250                     __ptext41:
 10628                           	opt stack 0
 10629  006250                     ___lldiv:
 10630                           	opt stack 27
 10631                           
 10632                           ;incstack = 0
 10633  006250  0E00               	movlw	0
 10634  006252  6E09               	movwf	___lldiv@quotient,c
 10635  006254  0E00               	movlw	0
 10636  006256  6E0A               	movwf	___lldiv@quotient+1,c
 10637  006258  0E00               	movlw	0
 10638  00625A  6E0B               	movwf	___lldiv@quotient+2,c
 10639  00625C  0E00               	movlw	0
 10640  00625E  6E0C               	movwf	___lldiv@quotient+3,c
 10641  006260  5005               	movf	___lldiv@divisor,w,c
 10642  006262  1006               	iorwf	___lldiv@divisor+1,w,c
 10643  006264  1007               	iorwf	___lldiv@divisor+2,w,c
 10644  006266  1008               	iorwf	___lldiv@divisor+3,w,c
 10645  006268  B4D8               	btfsc	status,2,c
 10646  00626A  D02A               	goto	l2811
 10647  00626C  0E01               	movlw	1
 10648  00626E  6E0D               	movwf	___lldiv@counter,c
 10649  006270  D006               	goto	l2806
 10650  006272  90D8               	bcf	status,0,c
 10651  006274  3605               	rlcf	___lldiv@divisor,f,c
 10652  006276  3606               	rlcf	___lldiv@divisor+1,f,c
 10653  006278  3607               	rlcf	___lldiv@divisor+2,f,c
 10654  00627A  3608               	rlcf	___lldiv@divisor+3,f,c
 10655  00627C  2A0D               	incf	___lldiv@counter,f,c
 10656  00627E                     l2806:
 10657  00627E  AE08               	btfss	___lldiv@divisor+3,7,c
 10658  006280  D7F8               	goto	l2807
 10659  006282                     u9120:
 10660  006282  90D8               	bcf	status,0,c
 10661  006284  3609               	rlcf	___lldiv@quotient,f,c
 10662  006286  360A               	rlcf	___lldiv@quotient+1,f,c
 10663  006288  360B               	rlcf	___lldiv@quotient+2,f,c
 10664  00628A  360C               	rlcf	___lldiv@quotient+3,f,c
 10665  00628C  5005               	movf	___lldiv@divisor,w,c
 10666  00628E  5C01               	subwf	___lldiv@dividend,w,c
 10667  006290  5006               	movf	___lldiv@divisor+1,w,c
 10668  006292  5802               	subwfb	___lldiv@dividend+1,w,c
 10669  006294  5007               	movf	___lldiv@divisor+2,w,c
 10670  006296  5803               	subwfb	___lldiv@dividend+2,w,c
 10671  006298  5008               	movf	___lldiv@divisor+3,w,c
 10672  00629A  5804               	subwfb	___lldiv@dividend+3,w,c
 10673  00629C  A0D8               	btfss	status,0,c
 10674  00629E  D009               	goto	l2810
 10675  0062A0  5005               	movf	___lldiv@divisor,w,c
 10676  0062A2  5E01               	subwf	___lldiv@dividend,f,c
 10677  0062A4  5006               	movf	___lldiv@divisor+1,w,c
 10678  0062A6  5A02               	subwfb	___lldiv@dividend+1,f,c
 10679  0062A8  5007               	movf	___lldiv@divisor+2,w,c
 10680  0062AA  5A03               	subwfb	___lldiv@dividend+2,f,c
 10681  0062AC  5008               	movf	___lldiv@divisor+3,w,c
 10682  0062AE  5A04               	subwfb	___lldiv@dividend+3,f,c
 10683  0062B0  8009               	bsf	___lldiv@quotient,0,c
 10684  0062B2                     l2810:
 10685  0062B2  90D8               	bcf	status,0,c
 10686  0062B4  3208               	rrcf	___lldiv@divisor+3,f,c
 10687  0062B6  3207               	rrcf	___lldiv@divisor+2,f,c
 10688  0062B8  3206               	rrcf	___lldiv@divisor+1,f,c
 10689  0062BA  3205               	rrcf	___lldiv@divisor,f,c
 10690  0062BC  2E0D               	decfsz	___lldiv@counter,f,c
 10691  0062BE  D7E1               	goto	u9120
 10692  0062C0                     l2811:
 10693  0062C0  C009  F001         	movff	___lldiv@quotient,?___lldiv
 10694  0062C4  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 10695  0062C8  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 10696  0062CC  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 10697  0062D0  0012               	return		;funcret
 10698  0062D2                     __end_of___lldiv:
 10699                           	opt stack 0
 10700                           tblptru	equ	0xFF8
 10701                           tblptrh	equ	0xFF7
 10702                           tblptrl	equ	0xFF6
 10703                           tablat	equ	0xFF5
 10704                           prodh	equ	0xFF4
 10705                           prodl	equ	0xFF3
 10706                           intcon	equ	0xFF2
 10707                           intcon2	equ	0xFF1
 10708                           intcon3	equ	0xFF0
 10709                           postinc0	equ	0xFEE
 10710                           wreg	equ	0xFE8
 10711                           postdec1	equ	0xFE5
 10712                           plusw1	equ	0xFE3
 10713                           fsr1h	equ	0xFE2
 10714                           fsr1l	equ	0xFE1
 10715                           indf2	equ	0xFDF
 10716                           postinc2	equ	0xFDE
 10717                           plusw2	equ	0xFDB
 10718                           fsr2h	equ	0xFDA
 10719                           fsr2l	equ	0xFD9
 10720                           status	equ	0xFD8
 10721                           
 10722 ;; *************** function __display_done *****************
 10723 ;; Defined at:
 10724 ;;		line 490 in file "display.c"
 10725 ;; Parameters:    Size  Location     Type
 10726 ;;		None
 10727 ;; Auto vars:     Size  Location     Type
 10728 ;;  cntr            1   30[COMRAM] unsigned char 
 10729 ;; Return value:  Size  Location     Type
 10730 ;;                  1    wreg      void 
 10731 ;; Registers used:
 10732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10733 ;; Tracked objects:
 10734 ;;		On entry : 0/0
 10735 ;;		On exit  : 0/0
 10736 ;;		Unchanged: 0/0
 10737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10739 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10741 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10742 ;;Total ram usage:        1 bytes
 10743 ;; Hardware stack levels used:    1
 10744 ;; Hardware stack levels required when called:    4
 10745 ;; This function calls:
 10746 ;;		__display_itoa_u16
 10747 ;;		_bootloader_get_flashPagesWritten
 10748 ;; This function is called by:
 10749 ;;		_display_prepare
 10750 ;; This function uses a non-reentrant model
 10751 ;;
 10752                           
 10753                           	psect	text42
 10754  003518                     __ptext42:
 10755                           	opt stack 0
 10756  003518                     __display_done:
 10757                           	opt stack 25
 10758                           
 10759                           ;display.c: 492: uint8_t cntr;;display.c: 493: cntr = 0;
 10760                           
 10761                           ;incstack = 0
 10762  003518  0E00               	movlw	0
 10763  00351A  6E1F               	movwf	__display_done@cntr,c
 10764                           
 10765                           ;display.c: 494: while(done_line1[cntr])
 10766  00351C  D017               	goto	l1632
 10767  00351E                     
 10768                           ;display.c: 495: display_content[0][cntr] = done_line1[cntr++];
 10769  00351E  501F               	movf	__display_done@cntr,w,c
 10770  003520  0D01               	mullw	1
 10771  003522  0EB9               	movlw	low _done_line1
 10772  003524  24F3               	addwf	prodl,w,c
 10773  003526  6EF6               	movwf	tblptrl,c
 10774  003528  0E8D               	movlw	high _done_line1
 10775  00352A  20F4               	addwfc	prodh,w,c
 10776  00352C  6EF7               	movwf	tblptrh,c
 10777  00352E                     	if	1	;There are 3 active tblptr bytes
 10778  00352E  6AF8               	clrf	tblptru,c
 10779  003530  0E00               	movlw	low (__mediumconst shr (0+16))
 10780  003532  22F8               	addwfc	tblptru,f,c
 10781  003534                     	endif
 10782  003534  501F               	movf	__display_done@cntr,w,c
 10783  003536  0D01               	mullw	1
 10784  003538  0E74               	movlw	low _display_content
 10785  00353A  24F3               	addwf	prodl,w,c
 10786  00353C  6ED9               	movwf	fsr2l,c
 10787  00353E  0E01               	movlw	high _display_content
 10788  003540  20F4               	addwfc	prodh,w,c
 10789  003542  6EDA               	movwf	fsr2h,c
 10790  003544  0008               	tblrd		*
 10791  003546  CFF5 FFDF          	movff	tablat,indf2
 10792  00354A  2A1F               	incf	__display_done@cntr,f,c
 10793  00354C                     l1632:
 10794  00354C  501F               	movf	__display_done@cntr,w,c
 10795  00354E  0D01               	mullw	1
 10796  003550  0EB9               	movlw	low _done_line1
 10797  003552  24F3               	addwf	prodl,w,c
 10798  003554  6EF6               	movwf	tblptrl,c
 10799  003556  0E8D               	movlw	high _done_line1
 10800  003558  20F4               	addwfc	prodh,w,c
 10801  00355A  6EF7               	movwf	tblptrh,c
 10802  00355C                     	if	1	;There are 3 active tblptr bytes
 10803  00355C  6AF8               	clrf	tblptru,c
 10804  00355E  0E00               	movlw	low (__mediumconst shr (0+16))
 10805  003560  22F8               	addwfc	tblptru,f,c
 10806  003562                     	endif
 10807  003562  0008               	tblrd		*
 10808  003564  50F5               	movf	tablat,w,c
 10809  003566  0900               	iorlw	0
 10810  003568  A4D8               	btfss	status,2,c
 10811  00356A  D7D9               	goto	l1633
 10812                           
 10813                           ;display.c: 496: cntr = 0;
 10814  00356C  0E00               	movlw	0
 10815  00356E  6E1F               	movwf	__display_done@cntr,c
 10816                           
 10817                           ;display.c: 497: while(done_line2[cntr])
 10818  003570  D017               	goto	l1635
 10819  003572                     
 10820                           ;display.c: 498: display_content[1][cntr] = done_line2[cntr++];
 10821  003572  501F               	movf	__display_done@cntr,w,c
 10822  003574  0D01               	mullw	1
 10823  003576  0E9F               	movlw	low _done_line2
 10824  003578  24F3               	addwf	prodl,w,c
 10825  00357A  6EF6               	movwf	tblptrl,c
 10826  00357C  0E8E               	movlw	high _done_line2
 10827  00357E  20F4               	addwfc	prodh,w,c
 10828  003580  6EF7               	movwf	tblptrh,c
 10829  003582                     	if	1	;There are 3 active tblptr bytes
 10830  003582  6AF8               	clrf	tblptru,c
 10831  003584  0E00               	movlw	low (__mediumconst shr (0+16))
 10832  003586  22F8               	addwfc	tblptru,f,c
 10833  003588                     	endif
 10834  003588  501F               	movf	__display_done@cntr,w,c
 10835  00358A  0D01               	mullw	1
 10836  00358C  0E88               	movlw	low (_display_content+20)
 10837  00358E  24F3               	addwf	prodl,w,c
 10838  003590  6ED9               	movwf	fsr2l,c
 10839  003592  0E01               	movlw	high (_display_content+20)
 10840  003594  20F4               	addwfc	prodh,w,c
 10841  003596  6EDA               	movwf	fsr2h,c
 10842  003598  0008               	tblrd		*
 10843  00359A  CFF5 FFDF          	movff	tablat,indf2
 10844  00359E  2A1F               	incf	__display_done@cntr,f,c
 10845  0035A0                     l1635:
 10846  0035A0  501F               	movf	__display_done@cntr,w,c
 10847  0035A2  0D01               	mullw	1
 10848  0035A4  0E9F               	movlw	low _done_line2
 10849  0035A6  24F3               	addwf	prodl,w,c
 10850  0035A8  6EF6               	movwf	tblptrl,c
 10851  0035AA  0E8E               	movlw	high _done_line2
 10852  0035AC  20F4               	addwfc	prodh,w,c
 10853  0035AE  6EF7               	movwf	tblptrh,c
 10854  0035B0                     	if	1	;There are 3 active tblptr bytes
 10855  0035B0  6AF8               	clrf	tblptru,c
 10856  0035B2  0E00               	movlw	low (__mediumconst shr (0+16))
 10857  0035B4  22F8               	addwfc	tblptru,f,c
 10858  0035B6                     	endif
 10859  0035B6  0008               	tblrd		*
 10860  0035B8  50F5               	movf	tablat,w,c
 10861  0035BA  0900               	iorlw	0
 10862  0035BC  A4D8               	btfss	status,2,c
 10863  0035BE  D7D9               	goto	l1636
 10864                           
 10865                           ;display.c: 499: cntr = 0;
 10866  0035C0  0E00               	movlw	0
 10867  0035C2  6E1F               	movwf	__display_done@cntr,c
 10868                           
 10869                           ;display.c: 500: while(done_line3[cntr])
 10870  0035C4  D017               	goto	l1638
 10871  0035C6                     
 10872                           ;display.c: 501: display_content[2][cntr] = done_line3[cntr++];
 10873  0035C6  501F               	movf	__display_done@cntr,w,c
 10874  0035C8  0D01               	mullw	1
 10875  0035CA  0EA9               	movlw	low _done_line3
 10876  0035CC  24F3               	addwf	prodl,w,c
 10877  0035CE  6EF6               	movwf	tblptrl,c
 10878  0035D0  0E8D               	movlw	high _done_line3
 10879  0035D2  20F4               	addwfc	prodh,w,c
 10880  0035D4  6EF7               	movwf	tblptrh,c
 10881  0035D6                     	if	1	;There are 3 active tblptr bytes
 10882  0035D6  6AF8               	clrf	tblptru,c
 10883  0035D8  0E00               	movlw	low (__mediumconst shr (0+16))
 10884  0035DA  22F8               	addwfc	tblptru,f,c
 10885  0035DC                     	endif
 10886  0035DC  501F               	movf	__display_done@cntr,w,c
 10887  0035DE  0D01               	mullw	1
 10888  0035E0  0E9C               	movlw	low (_display_content+40)
 10889  0035E2  24F3               	addwf	prodl,w,c
 10890  0035E4  6ED9               	movwf	fsr2l,c
 10891  0035E6  0E01               	movlw	high (_display_content+40)
 10892  0035E8  20F4               	addwfc	prodh,w,c
 10893  0035EA  6EDA               	movwf	fsr2h,c
 10894  0035EC  0008               	tblrd		*
 10895  0035EE  CFF5 FFDF          	movff	tablat,indf2
 10896  0035F2  2A1F               	incf	__display_done@cntr,f,c
 10897  0035F4                     l1638:
 10898  0035F4  501F               	movf	__display_done@cntr,w,c
 10899  0035F6  0D01               	mullw	1
 10900  0035F8  0EA9               	movlw	low _done_line3
 10901  0035FA  24F3               	addwf	prodl,w,c
 10902  0035FC  6EF6               	movwf	tblptrl,c
 10903  0035FE  0E8D               	movlw	high _done_line3
 10904  003600  20F4               	addwfc	prodh,w,c
 10905  003602  6EF7               	movwf	tblptrh,c
 10906  003604                     	if	1	;There are 3 active tblptr bytes
 10907  003604  6AF8               	clrf	tblptru,c
 10908  003606  0E00               	movlw	low (__mediumconst shr (0+16))
 10909  003608  22F8               	addwfc	tblptru,f,c
 10910  00360A                     	endif
 10911  00360A  0008               	tblrd		*
 10912  00360C  50F5               	movf	tablat,w,c
 10913  00360E  0900               	iorlw	0
 10914  003610  A4D8               	btfss	status,2,c
 10915  003612  D7D9               	goto	l1639
 10916                           
 10917                           ;display.c: 502: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          2][cntr]);
 10918  003614  ECF3  F03E         	call	_bootloader_get_flashPagesWritten	;wreg free
 10919  003618  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 10920  00361C  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 10921  003620  6A1B               	clrf	__display_itoa_u16@value+2,c
 10922  003622  6A1C               	clrf	__display_itoa_u16@value+3,c
 10923  003624  501F               	movf	__display_done@cntr,w,c
 10924  003626  0D01               	mullw	1
 10925  003628  0E9C               	movlw	low (_display_content+40)
 10926  00362A  24F3               	addwf	prodl,w,c
 10927  00362C  6E1D               	movwf	__display_itoa_u16@text,c
 10928  00362E  0E01               	movlw	high (_display_content+40)
 10929  003630  20F4               	addwfc	prodh,w,c
 10930  003632  6E1E               	movwf	__display_itoa_u16@text+1,c
 10931  003634  ECDF  F027         	call	__display_itoa_u16	;wreg free
 10932                           
 10933                           ;display.c: 503: cntr = 0;
 10934  003638  0E00               	movlw	0
 10935  00363A  6E1F               	movwf	__display_done@cntr,c
 10936                           
 10937                           ;display.c: 504: while(done_line4[cntr])
 10938  00363C  D017               	goto	l1641
 10939  00363E                     
 10940                           ;display.c: 505: display_content[3][cntr] = done_line4[cntr++];
 10941  00363E  501F               	movf	__display_done@cntr,w,c
 10942  003640  0D01               	mullw	1
 10943  003642  0E99               	movlw	low _done_line4
 10944  003644  24F3               	addwf	prodl,w,c
 10945  003646  6EF6               	movwf	tblptrl,c
 10946  003648  0E8D               	movlw	high _done_line4
 10947  00364A  20F4               	addwfc	prodh,w,c
 10948  00364C  6EF7               	movwf	tblptrh,c
 10949  00364E                     	if	1	;There are 3 active tblptr bytes
 10950  00364E  6AF8               	clrf	tblptru,c
 10951  003650  0E00               	movlw	low (__mediumconst shr (0+16))
 10952  003652  22F8               	addwfc	tblptru,f,c
 10953  003654                     	endif
 10954  003654  501F               	movf	__display_done@cntr,w,c
 10955  003656  0D01               	mullw	1
 10956  003658  0EB0               	movlw	low (_display_content+60)
 10957  00365A  24F3               	addwf	prodl,w,c
 10958  00365C  6ED9               	movwf	fsr2l,c
 10959  00365E  0E01               	movlw	high (_display_content+60)
 10960  003660  20F4               	addwfc	prodh,w,c
 10961  003662  6EDA               	movwf	fsr2h,c
 10962  003664  0008               	tblrd		*
 10963  003666  CFF5 FFDF          	movff	tablat,indf2
 10964  00366A  2A1F               	incf	__display_done@cntr,f,c
 10965  00366C                     l1641:
 10966  00366C  501F               	movf	__display_done@cntr,w,c
 10967  00366E  0D01               	mullw	1
 10968  003670  0E99               	movlw	low _done_line4
 10969  003672  24F3               	addwf	prodl,w,c
 10970  003674  6EF6               	movwf	tblptrl,c
 10971  003676  0E8D               	movlw	high _done_line4
 10972  003678  20F4               	addwfc	prodh,w,c
 10973  00367A  6EF7               	movwf	tblptrh,c
 10974  00367C                     	if	1	;There are 3 active tblptr bytes
 10975  00367C  6AF8               	clrf	tblptru,c
 10976  00367E  0E00               	movlw	low (__mediumconst shr (0+16))
 10977  003680  22F8               	addwfc	tblptru,f,c
 10978  003682                     	endif
 10979  003682  0008               	tblrd		*
 10980  003684  50F5               	movf	tablat,w,c
 10981  003686  0900               	iorlw	0
 10982  003688  B4D8               	btfsc	status,2,c
 10983  00368A  0012               	return	
 10984  00368C  D7D8               	goto	l1642
 10985  00368E                     __end_of__display_done:
 10986                           	opt stack 0
 10987                           tblptru	equ	0xFF8
 10988                           tblptrh	equ	0xFF7
 10989                           tblptrl	equ	0xFF6
 10990                           tablat	equ	0xFF5
 10991                           prodh	equ	0xFF4
 10992                           prodl	equ	0xFF3
 10993                           intcon	equ	0xFF2
 10994                           intcon2	equ	0xFF1
 10995                           intcon3	equ	0xFF0
 10996                           postinc0	equ	0xFEE
 10997                           wreg	equ	0xFE8
 10998                           postdec1	equ	0xFE5
 10999                           plusw1	equ	0xFE3
 11000                           fsr1h	equ	0xFE2
 11001                           fsr1l	equ	0xFE1
 11002                           indf2	equ	0xFDF
 11003                           postinc2	equ	0xFDE
 11004                           plusw2	equ	0xFDB
 11005                           fsr2h	equ	0xFDA
 11006                           fsr2l	equ	0xFD9
 11007                           status	equ	0xFD8
 11008                           
 11009 ;; *************** function __display_clear *****************
 11010 ;; Defined at:
 11011 ;;		line 66 in file "display.c"
 11012 ;; Parameters:    Size  Location     Type
 11013 ;;		None
 11014 ;; Auto vars:     Size  Location     Type
 11015 ;;  col             1    3[COMRAM] unsigned char 
 11016 ;;  row             1    2[COMRAM] unsigned char 
 11017 ;; Return value:  Size  Location     Type
 11018 ;;                  1    wreg      void 
 11019 ;; Registers used:
 11020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11021 ;; Tracked objects:
 11022 ;;		On entry : 0/0
 11023 ;;		On exit  : 0/0
 11024 ;;		Unchanged: 0/0
 11025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11027 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11028 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11029 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11030 ;;Total ram usage:        4 bytes
 11031 ;; Hardware stack levels used:    1
 11032 ;; This function calls:
 11033 ;;		Nothing
 11034 ;; This function is called by:
 11035 ;;		_display_prepare
 11036 ;; This function uses a non-reentrant model
 11037 ;;
 11038                           
 11039                           	psect	text43
 11040  007334                     __ptext43:
 11041                           	opt stack 0
 11042  007334                     __display_clear:
 11043                           	opt stack 29
 11044                           
 11045                           ;display.c: 68: uint8_t row;;display.c: 69: uint8_t col;;display.c: 70: for(row=0;row<4;
      +                          ++row)
 11046                           
 11047                           ;incstack = 0
 11048  007334  0E00               	movlw	0
 11049  007336  6E03               	movwf	__display_clear@row,c
 11050  007338                     l13626:
 11051  007338  0E03               	movlw	3
 11052  00733A  6403               	cpfsgt	__display_clear@row,c
 11053  00733C  D001               	goto	l1427
 11054  00733E  0012               	return	
 11055  007340                     l1427:
 11056                           
 11057                           ;display.c: 71: {;display.c: 72: for(col=0;col<20;++col)
 11058  007340  0E00               	movlw	0
 11059  007342  6E04               	movwf	__display_clear@col,c
 11060  007344                     l13632:
 11061  007344  0E13               	movlw	19
 11062  007346  6404               	cpfsgt	__display_clear@col,c
 11063  007348  D001               	goto	l1429
 11064  00734A  D016               	goto	u10540
 11065  00734C                     l1429:
 11066                           
 11067                           ;display.c: 73: {;display.c: 74: display_content[row][col] = ' ';
 11068  00734C  5003               	movf	__display_clear@row,w,c
 11069  00734E  0D14               	mullw	20
 11070  007350  0E74               	movlw	low _display_content
 11071  007352  6E01               	movwf	??__display_clear& (0+255),c
 11072  007354  0E01               	movlw	high _display_content
 11073  007356  6E02               	movwf	(??__display_clear+1)& (0+255),c
 11074  007358  50F3               	movf	prodl,w,c
 11075  00735A  2601               	addwf	??__display_clear,f,c
 11076  00735C  50F4               	movf	prodh,w,c
 11077  00735E  2202               	addwfc	??__display_clear+1,f,c
 11078  007360  5004               	movf	__display_clear@col,w,c
 11079  007362  0D01               	mullw	1
 11080  007364  50F3               	movf	prodl,w,c
 11081  007366  2401               	addwf	??__display_clear,w,c
 11082  007368  6ED9               	movwf	fsr2l,c
 11083  00736A  50F4               	movf	prodh,w,c
 11084  00736C  2002               	addwfc	??__display_clear+1,w,c
 11085  00736E  6EDA               	movwf	fsr2h,c
 11086  007370  0E20               	movlw	32
 11087  007372  6EDF               	movwf	indf2,c
 11088  007374  2A04               	incf	__display_clear@col,f,c
 11089  007376  D7E6               	goto	l13632
 11090  007378                     u10540:
 11091  007378  2A03               	incf	__display_clear@row,f,c
 11092  00737A  D7DE               	goto	l13626
 11093  00737C                     __end_of__display_clear:
 11094                           	opt stack 0
 11095                           tblptru	equ	0xFF8
 11096                           tblptrh	equ	0xFF7
 11097                           tblptrl	equ	0xFF6
 11098                           tablat	equ	0xFF5
 11099                           prodh	equ	0xFF4
 11100                           prodl	equ	0xFF3
 11101                           intcon	equ	0xFF2
 11102                           intcon2	equ	0xFF1
 11103                           intcon3	equ	0xFF0
 11104                           postinc0	equ	0xFEE
 11105                           wreg	equ	0xFE8
 11106                           postdec1	equ	0xFE5
 11107                           plusw1	equ	0xFE3
 11108                           fsr1h	equ	0xFE2
 11109                           fsr1l	equ	0xFE1
 11110                           indf2	equ	0xFDF
 11111                           postinc2	equ	0xFDE
 11112                           plusw2	equ	0xFDB
 11113                           fsr2h	equ	0xFDA
 11114                           fsr2l	equ	0xFD9
 11115                           status	equ	0xFD8
 11116                           
 11117 ;; *************** function __display_checked *****************
 11118 ;; Defined at:
 11119 ;;		line 394 in file "display.c"
 11120 ;; Parameters:    Size  Location     Type
 11121 ;;		None
 11122 ;; Auto vars:     Size  Location     Type
 11123 ;;  cntr            1   33[COMRAM] unsigned char 
 11124 ;;  start           1   32[COMRAM] unsigned char 
 11125 ;; Return value:  Size  Location     Type
 11126 ;;                  1    wreg      void 
 11127 ;; Registers used:
 11128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11129 ;; Tracked objects:
 11130 ;;		On entry : 0/0
 11131 ;;		On exit  : 0/0
 11132 ;;		Unchanged: 0/0
 11133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11135 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11136 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11137 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11138 ;;Total ram usage:        4 bytes
 11139 ;; Hardware stack levels used:    1
 11140 ;; Hardware stack levels required when called:    4
 11141 ;; This function calls:
 11142 ;;		__display_itoa_u16
 11143 ;;		_bootloader_get_total_entries
 11144 ;; This function is called by:
 11145 ;;		_display_prepare
 11146 ;; This function uses a non-reentrant model
 11147 ;;
 11148                           
 11149                           	psect	text44
 11150  00339C                     __ptext44:
 11151                           	opt stack 0
 11152  00339C                     __display_checked:
 11153                           	opt stack 25
 11154                           
 11155                           ;display.c: 396: uint8_t cntr;;display.c: 397: uint8_t start;;display.c: 398: cntr = 0;
 11156                           
 11157                           ;incstack = 0
 11158  00339C  0E00               	movlw	0
 11159  00339E  6E22               	movwf	__display_checked@cntr,c
 11160                           
 11161                           ;display.c: 399: while(checked_line1[cntr])
 11162  0033A0  D017               	goto	l1568
 11163  0033A2                     
 11164                           ;display.c: 400: display_content[0][cntr] = checked_line1[cntr++];
 11165  0033A2  5022               	movf	__display_checked@cntr,w,c
 11166  0033A4  0D01               	mullw	1
 11167  0033A6  0EF9               	movlw	low _checked_line1
 11168  0033A8  24F3               	addwf	prodl,w,c
 11169  0033AA  6EF6               	movwf	tblptrl,c
 11170  0033AC  0E8D               	movlw	high _checked_line1
 11171  0033AE  20F4               	addwfc	prodh,w,c
 11172  0033B0  6EF7               	movwf	tblptrh,c
 11173  0033B2                     	if	1	;There are 3 active tblptr bytes
 11174  0033B2  6AF8               	clrf	tblptru,c
 11175  0033B4  0E00               	movlw	low (__mediumconst shr (0+16))
 11176  0033B6  22F8               	addwfc	tblptru,f,c
 11177  0033B8                     	endif
 11178  0033B8  5022               	movf	__display_checked@cntr,w,c
 11179  0033BA  0D01               	mullw	1
 11180  0033BC  0E74               	movlw	low _display_content
 11181  0033BE  24F3               	addwf	prodl,w,c
 11182  0033C0  6ED9               	movwf	fsr2l,c
 11183  0033C2  0E01               	movlw	high _display_content
 11184  0033C4  20F4               	addwfc	prodh,w,c
 11185  0033C6  6EDA               	movwf	fsr2h,c
 11186  0033C8  0008               	tblrd		*
 11187  0033CA  CFF5 FFDF          	movff	tablat,indf2
 11188  0033CE  2A22               	incf	__display_checked@cntr,f,c
 11189  0033D0                     l1568:
 11190  0033D0  5022               	movf	__display_checked@cntr,w,c
 11191  0033D2  0D01               	mullw	1
 11192  0033D4  0EF9               	movlw	low _checked_line1
 11193  0033D6  24F3               	addwf	prodl,w,c
 11194  0033D8  6EF6               	movwf	tblptrl,c
 11195  0033DA  0E8D               	movlw	high _checked_line1
 11196  0033DC  20F4               	addwfc	prodh,w,c
 11197  0033DE  6EF7               	movwf	tblptrh,c
 11198  0033E0                     	if	1	;There are 3 active tblptr bytes
 11199  0033E0  6AF8               	clrf	tblptru,c
 11200  0033E2  0E00               	movlw	low (__mediumconst shr (0+16))
 11201  0033E4  22F8               	addwfc	tblptru,f,c
 11202  0033E6                     	endif
 11203  0033E6  0008               	tblrd		*
 11204  0033E8  50F5               	movf	tablat,w,c
 11205  0033EA  0900               	iorlw	0
 11206  0033EC  A4D8               	btfss	status,2,c
 11207  0033EE  D7D9               	goto	l1569
 11208                           
 11209                           ;display.c: 401: cntr = 0;
 11210  0033F0  0E00               	movlw	0
 11211  0033F2  6E22               	movwf	__display_checked@cntr,c
 11212                           
 11213                           ;display.c: 402: while(checked_line2[cntr])
 11214  0033F4  D017               	goto	l1571
 11215  0033F6                     
 11216                           ;display.c: 403: display_content[1][cntr] = checked_line2[cntr++];
 11217  0033F6  5022               	movf	__display_checked@cntr,w,c
 11218  0033F8  0D01               	mullw	1
 11219  0033FA  0ECD               	movlw	low _checked_line2
 11220  0033FC  24F3               	addwf	prodl,w,c
 11221  0033FE  6EF6               	movwf	tblptrl,c
 11222  003400  0E8C               	movlw	high _checked_line2
 11223  003402  20F4               	addwfc	prodh,w,c
 11224  003404  6EF7               	movwf	tblptrh,c
 11225  003406                     	if	1	;There are 3 active tblptr bytes
 11226  003406  6AF8               	clrf	tblptru,c
 11227  003408  0E00               	movlw	low (__mediumconst shr (0+16))
 11228  00340A  22F8               	addwfc	tblptru,f,c
 11229  00340C                     	endif
 11230  00340C  5022               	movf	__display_checked@cntr,w,c
 11231  00340E  0D01               	mullw	1
 11232  003410  0E88               	movlw	low (_display_content+20)
 11233  003412  24F3               	addwf	prodl,w,c
 11234  003414  6ED9               	movwf	fsr2l,c
 11235  003416  0E01               	movlw	high (_display_content+20)
 11236  003418  20F4               	addwfc	prodh,w,c
 11237  00341A  6EDA               	movwf	fsr2h,c
 11238  00341C  0008               	tblrd		*
 11239  00341E  CFF5 FFDF          	movff	tablat,indf2
 11240  003422  2A22               	incf	__display_checked@cntr,f,c
 11241  003424                     l1571:
 11242  003424  5022               	movf	__display_checked@cntr,w,c
 11243  003426  0D01               	mullw	1
 11244  003428  0ECD               	movlw	low _checked_line2
 11245  00342A  24F3               	addwf	prodl,w,c
 11246  00342C  6EF6               	movwf	tblptrl,c
 11247  00342E  0E8C               	movlw	high _checked_line2
 11248  003430  20F4               	addwfc	prodh,w,c
 11249  003432  6EF7               	movwf	tblptrh,c
 11250  003434                     	if	1	;There are 3 active tblptr bytes
 11251  003434  6AF8               	clrf	tblptru,c
 11252  003436  0E00               	movlw	low (__mediumconst shr (0+16))
 11253  003438  22F8               	addwfc	tblptru,f,c
 11254  00343A                     	endif
 11255  00343A  0008               	tblrd		*
 11256  00343C  50F5               	movf	tablat,w,c
 11257  00343E  0900               	iorlw	0
 11258  003440  A4D8               	btfss	status,2,c
 11259  003442  D7D9               	goto	l1572
 11260                           
 11261                           ;display.c: 405: start = _display_itoa_u16(bootloader_get_total_entries(), &display_cont
      +                          ent[2][0]);
 11262  003444  ECE4  F03E         	call	_bootloader_get_total_entries	;wreg free
 11263  003448  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 11264  00344C  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 11265  003450  6A1B               	clrf	__display_itoa_u16@value+2,c
 11266  003452  6A1C               	clrf	__display_itoa_u16@value+3,c
 11267  003454  0E9C               	movlw	low (_display_content+40)
 11268  003456  6E1D               	movwf	__display_itoa_u16@text,c
 11269  003458  0E01               	movlw	high (_display_content+40)
 11270  00345A  6E1E               	movwf	__display_itoa_u16@text+1,c
 11271  00345C  ECDF  F027         	call	__display_itoa_u16	;wreg free
 11272  003460  6E21               	movwf	__display_checked@start,c
 11273                           
 11274                           ;display.c: 406: start++;
 11275  003462  2A21               	incf	__display_checked@start,f,c
 11276                           
 11277                           ;display.c: 407: cntr = 0;
 11278  003464  0E00               	movlw	0
 11279  003466  6E22               	movwf	__display_checked@cntr,c
 11280                           
 11281                           ;display.c: 408: while(checked_line3[cntr])
 11282  003468  D01C               	goto	l1574
 11283  00346A                     
 11284                           ;display.c: 409: display_content[2][start+cntr] = checked_line3[cntr++];
 11285  00346A  5022               	movf	__display_checked@cntr,w,c
 11286  00346C  0D01               	mullw	1
 11287  00346E  0E73               	movlw	low _checked_line3
 11288  003470  24F3               	addwf	prodl,w,c
 11289  003472  6EF6               	movwf	tblptrl,c
 11290  003474  0E8E               	movlw	high _checked_line3
 11291  003476  20F4               	addwfc	prodh,w,c
 11292  003478  6EF7               	movwf	tblptrh,c
 11293  00347A                     	if	1	;There are 3 active tblptr bytes
 11294  00347A  6AF8               	clrf	tblptru,c
 11295  00347C  0E00               	movlw	low (__mediumconst shr (0+16))
 11296  00347E  22F8               	addwfc	tblptru,f,c
 11297  003480                     	endif
 11298  003480  5022               	movf	__display_checked@cntr,w,c
 11299  003482  C021  F01F         	movff	__display_checked@start,??__display_checked
 11300  003486  6A20               	clrf	(??__display_checked+1)& (0+255),c
 11301  003488  261F               	addwf	??__display_checked,f,c
 11302  00348A  0E00               	movlw	0
 11303  00348C  2220               	addwfc	??__display_checked+1,f,c
 11304  00348E  0E9C               	movlw	low (_display_content+40)
 11305  003490  241F               	addwf	??__display_checked,w,c
 11306  003492  6ED9               	movwf	fsr2l,c
 11307  003494  0E01               	movlw	high (_display_content+40)
 11308  003496  2020               	addwfc	??__display_checked+1,w,c
 11309  003498  6EDA               	movwf	fsr2h,c
 11310  00349A  0008               	tblrd		*
 11311  00349C  CFF5 FFDF          	movff	tablat,indf2
 11312  0034A0  2A22               	incf	__display_checked@cntr,f,c
 11313  0034A2                     l1574:
 11314  0034A2  5022               	movf	__display_checked@cntr,w,c
 11315  0034A4  0D01               	mullw	1
 11316  0034A6  0E73               	movlw	low _checked_line3
 11317  0034A8  24F3               	addwf	prodl,w,c
 11318  0034AA  6EF6               	movwf	tblptrl,c
 11319  0034AC  0E8E               	movlw	high _checked_line3
 11320  0034AE  20F4               	addwfc	prodh,w,c
 11321  0034B0  6EF7               	movwf	tblptrh,c
 11322  0034B2                     	if	1	;There are 3 active tblptr bytes
 11323  0034B2  6AF8               	clrf	tblptru,c
 11324  0034B4  0E00               	movlw	low (__mediumconst shr (0+16))
 11325  0034B6  22F8               	addwfc	tblptru,f,c
 11326  0034B8                     	endif
 11327  0034B8  0008               	tblrd		*
 11328  0034BA  50F5               	movf	tablat,w,c
 11329  0034BC  0900               	iorlw	0
 11330  0034BE  A4D8               	btfss	status,2,c
 11331  0034C0  D7D4               	goto	l1575
 11332                           
 11333                           ;display.c: 411: cntr = 0;
 11334  0034C2  0E00               	movlw	0
 11335  0034C4  6E22               	movwf	__display_checked@cntr,c
 11336                           
 11337                           ;display.c: 412: while(checked_line4[cntr])
 11338  0034C6  D017               	goto	l1577
 11339  0034C8                     
 11340                           ;display.c: 413: display_content[3][cntr] = checked_line4[cntr++];
 11341  0034C8  5022               	movf	__display_checked@cntr,w,c
 11342  0034CA  0D01               	mullw	1
 11343  0034CC  0E66               	movlw	low _checked_line4
 11344  0034CE  24F3               	addwf	prodl,w,c
 11345  0034D0  6EF6               	movwf	tblptrl,c
 11346  0034D2  0E8D               	movlw	high _checked_line4
 11347  0034D4  20F4               	addwfc	prodh,w,c
 11348  0034D6  6EF7               	movwf	tblptrh,c
 11349  0034D8                     	if	1	;There are 3 active tblptr bytes
 11350  0034D8  6AF8               	clrf	tblptru,c
 11351  0034DA  0E00               	movlw	low (__mediumconst shr (0+16))
 11352  0034DC  22F8               	addwfc	tblptru,f,c
 11353  0034DE                     	endif
 11354  0034DE  5022               	movf	__display_checked@cntr,w,c
 11355  0034E0  0D01               	mullw	1
 11356  0034E2  0EB0               	movlw	low (_display_content+60)
 11357  0034E4  24F3               	addwf	prodl,w,c
 11358  0034E6  6ED9               	movwf	fsr2l,c
 11359  0034E8  0E01               	movlw	high (_display_content+60)
 11360  0034EA  20F4               	addwfc	prodh,w,c
 11361  0034EC  6EDA               	movwf	fsr2h,c
 11362  0034EE  0008               	tblrd		*
 11363  0034F0  CFF5 FFDF          	movff	tablat,indf2
 11364  0034F4  2A22               	incf	__display_checked@cntr,f,c
 11365  0034F6                     l1577:
 11366  0034F6  5022               	movf	__display_checked@cntr,w,c
 11367  0034F8  0D01               	mullw	1
 11368  0034FA  0E66               	movlw	low _checked_line4
 11369  0034FC  24F3               	addwf	prodl,w,c
 11370  0034FE  6EF6               	movwf	tblptrl,c
 11371  003500  0E8D               	movlw	high _checked_line4
 11372  003502  20F4               	addwfc	prodh,w,c
 11373  003504  6EF7               	movwf	tblptrh,c
 11374  003506                     	if	1	;There are 3 active tblptr bytes
 11375  003506  6AF8               	clrf	tblptru,c
 11376  003508  0E00               	movlw	low (__mediumconst shr (0+16))
 11377  00350A  22F8               	addwfc	tblptru,f,c
 11378  00350C                     	endif
 11379  00350C  0008               	tblrd		*
 11380  00350E  50F5               	movf	tablat,w,c
 11381  003510  0900               	iorlw	0
 11382  003512  B4D8               	btfsc	status,2,c
 11383  003514  0012               	return	
 11384  003516  D7D8               	goto	l1578
 11385  003518                     __end_of__display_checked:
 11386                           	opt stack 0
 11387                           tblptru	equ	0xFF8
 11388                           tblptrh	equ	0xFF7
 11389                           tblptrl	equ	0xFF6
 11390                           tablat	equ	0xFF5
 11391                           prodh	equ	0xFF4
 11392                           prodl	equ	0xFF3
 11393                           intcon	equ	0xFF2
 11394                           intcon2	equ	0xFF1
 11395                           intcon3	equ	0xFF0
 11396                           postinc0	equ	0xFEE
 11397                           wreg	equ	0xFE8
 11398                           postdec1	equ	0xFE5
 11399                           plusw1	equ	0xFE3
 11400                           fsr1h	equ	0xFE2
 11401                           fsr1l	equ	0xFE1
 11402                           indf2	equ	0xFDF
 11403                           postinc2	equ	0xFDE
 11404                           plusw2	equ	0xFDB
 11405                           fsr2h	equ	0xFDA
 11406                           fsr2l	equ	0xFD9
 11407                           status	equ	0xFD8
 11408                           
 11409 ;; *************** function __display_itoa_u16 *****************
 11410 ;; Defined at:
 11411 ;;		line 79 in file "display.c"
 11412 ;; Parameters:    Size  Location     Type
 11413 ;;  value           4   24[COMRAM] unsigned long 
 11414 ;;  text            2   28[COMRAM] PTR unsigned char 
 11415 ;;		 -> display_content(80), 
 11416 ;; Auto vars:     Size  Location     Type
 11417 ;;		None
 11418 ;; Return value:  Size  Location     Type
 11419 ;;                  1    wreg      unsigned char 
 11420 ;; Registers used:
 11421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11422 ;; Tracked objects:
 11423 ;;		On entry : 0/0
 11424 ;;		On exit  : 0/0
 11425 ;;		Unchanged: 0/0
 11426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11427 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11430 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11431 ;;Total ram usage:        6 bytes
 11432 ;; Hardware stack levels used:    1
 11433 ;; Hardware stack levels required when called:    3
 11434 ;; This function calls:
 11435 ;;		_itoa
 11436 ;; This function is called by:
 11437 ;;		__display_itoa_u32
 11438 ;;		__display_verify
 11439 ;;		__display_checked
 11440 ;;		__display_failed
 11441 ;;		__display_programming
 11442 ;;		__display_done
 11443 ;; This function uses a non-reentrant model
 11444 ;;
 11445                           
 11446                           	psect	text45
 11447  004FBE                     __ptext45:
 11448                           	opt stack 0
 11449  004FBE                     __display_itoa_u16:
 11450                           	opt stack 25
 11451                           
 11452                           ;display.c: 81: itoa(text, value, 10);
 11453                           
 11454                           ;incstack = 0
 11455  004FBE  C01D  F011         	movff	__display_itoa_u16@text,itoa@buf
 11456  004FC2  C01E  F012         	movff	__display_itoa_u16@text+1,itoa@buf+1
 11457  004FC6  C019  F013         	movff	__display_itoa_u16@value,itoa@val
 11458  004FCA  C01A  F014         	movff	__display_itoa_u16@value+1,itoa@val+1
 11459  004FCE  0E00               	movlw	0
 11460  004FD0  6E16               	movwf	itoa@base+1,c
 11461  004FD2  0E0A               	movlw	10
 11462  004FD4  6E15               	movwf	itoa@base,c
 11463  004FD6  EC28  F03A         	call	_itoa	;wreg free
 11464                           
 11465                           ;display.c: 82: if(value>9999)
 11466  004FDA  501C               	movf	__display_itoa_u16@value+3,w,c
 11467  004FDC  101B               	iorwf	__display_itoa_u16@value+2,w,c
 11468  004FDE  E106               	bnz	u8770
 11469  004FE0  0E10               	movlw	16
 11470  004FE2  5C19               	subwf	__display_itoa_u16@value,w,c
 11471  004FE4  0E27               	movlw	39
 11472  004FE6  581A               	subwfb	__display_itoa_u16@value+1,w,c
 11473  004FE8  A0D8               	btfss	status,0,c
 11474  004FEA  D00A               	goto	l1434
 11475  004FEC                     u8770:
 11476                           
 11477                           ;display.c: 83: {;display.c: 84: *(text+5) = ' ';
 11478  004FEC  EE20 F005          	lfsr	2,5
 11479  004FF0  501D               	movf	__display_itoa_u16@text,w,c
 11480  004FF2  26D9               	addwf	fsr2l,f,c
 11481  004FF4  501E               	movf	__display_itoa_u16@text+1,w,c
 11482  004FF6  22DA               	addwfc	fsr2h,f,c
 11483  004FF8  0E20               	movlw	32
 11484  004FFA  6EDF               	movwf	indf2,c
 11485                           
 11486                           ;display.c: 85: return 5;
 11487  004FFC  0E05               	movlw	5
 11488                           
 11489                           ;display.c: 86: }
 11490  004FFE  0012               	return	
 11491  005000                     l1434:
 11492                           
 11493                           ;display.c: 87: else if (value>999)
 11494  005000  501C               	movf	__display_itoa_u16@value+3,w,c
 11495  005002  101B               	iorwf	__display_itoa_u16@value+2,w,c
 11496  005004  E106               	bnz	u8780
 11497  005006  0EE8               	movlw	232
 11498  005008  5C19               	subwf	__display_itoa_u16@value,w,c
 11499  00500A  0E03               	movlw	3
 11500  00500C  581A               	subwfb	__display_itoa_u16@value+1,w,c
 11501  00500E  A0D8               	btfss	status,0,c
 11502  005010  D00A               	goto	l1437
 11503  005012                     u8780:
 11504                           
 11505                           ;display.c: 88: {;display.c: 89: *(text+4) = ' ';
 11506  005012  EE20 F004          	lfsr	2,4
 11507  005016  501D               	movf	__display_itoa_u16@text,w,c
 11508  005018  26D9               	addwf	fsr2l,f,c
 11509  00501A  501E               	movf	__display_itoa_u16@text+1,w,c
 11510  00501C  22DA               	addwfc	fsr2h,f,c
 11511  00501E  0E20               	movlw	32
 11512  005020  6EDF               	movwf	indf2,c
 11513                           
 11514                           ;display.c: 90: return 4;
 11515  005022  0E04               	movlw	4
 11516                           
 11517                           ;display.c: 91: }
 11518  005024  0012               	return	
 11519  005026                     l1437:
 11520                           
 11521                           ;display.c: 92: else if (value>99)
 11522  005026  501C               	movf	__display_itoa_u16@value+3,w,c
 11523  005028  101B               	iorwf	__display_itoa_u16@value+2,w,c
 11524  00502A  101A               	iorwf	__display_itoa_u16@value+1,w,c
 11525  00502C  E104               	bnz	u8790
 11526  00502E  0E64               	movlw	100
 11527  005030  5C19               	subwf	__display_itoa_u16@value,w,c
 11528  005032  A0D8               	btfss	status,0,c
 11529  005034  D00A               	goto	l1439
 11530  005036                     u8790:
 11531                           
 11532                           ;display.c: 93: {;display.c: 94: *(text+3) = ' ';
 11533  005036  EE20 F003          	lfsr	2,3
 11534  00503A  501D               	movf	__display_itoa_u16@text,w,c
 11535  00503C  26D9               	addwf	fsr2l,f,c
 11536  00503E  501E               	movf	__display_itoa_u16@text+1,w,c
 11537  005040  22DA               	addwfc	fsr2h,f,c
 11538  005042  0E20               	movlw	32
 11539  005044  6EDF               	movwf	indf2,c
 11540                           
 11541                           ;display.c: 95: return 3;
 11542  005046  0E03               	movlw	3
 11543                           
 11544                           ;display.c: 96: }
 11545  005048  0012               	return	
 11546  00504A                     l1439:
 11547                           
 11548                           ;display.c: 97: else if (value>9)
 11549  00504A  501C               	movf	__display_itoa_u16@value+3,w,c
 11550  00504C  101B               	iorwf	__display_itoa_u16@value+2,w,c
 11551  00504E  101A               	iorwf	__display_itoa_u16@value+1,w,c
 11552  005050  E104               	bnz	u8800
 11553  005052  0E0A               	movlw	10
 11554  005054  5C19               	subwf	__display_itoa_u16@value,w,c
 11555  005056  A0D8               	btfss	status,0,c
 11556  005058  D00A               	goto	l1441
 11557  00505A                     u8800:
 11558                           
 11559                           ;display.c: 98: {;display.c: 99: *(text+2) = ' ';
 11560  00505A  EE20 F002          	lfsr	2,2
 11561  00505E  501D               	movf	__display_itoa_u16@text,w,c
 11562  005060  26D9               	addwf	fsr2l,f,c
 11563  005062  501E               	movf	__display_itoa_u16@text+1,w,c
 11564  005064  22DA               	addwfc	fsr2h,f,c
 11565  005066  0E20               	movlw	32
 11566  005068  6EDF               	movwf	indf2,c
 11567                           
 11568                           ;display.c: 100: return 2;
 11569  00506A  0E02               	movlw	2
 11570                           
 11571                           ;display.c: 101: }
 11572  00506C  0012               	return	
 11573  00506E                     l1441:
 11574                           
 11575                           ;display.c: 102: else;display.c: 103: {;display.c: 104: *(text+1) = ' ';
 11576  00506E  EE20 F001          	lfsr	2,1
 11577  005072  501D               	movf	__display_itoa_u16@text,w,c
 11578  005074  26D9               	addwf	fsr2l,f,c
 11579  005076  501E               	movf	__display_itoa_u16@text+1,w,c
 11580  005078  22DA               	addwfc	fsr2h,f,c
 11581  00507A  0E20               	movlw	32
 11582  00507C  6EDF               	movwf	indf2,c
 11583                           
 11584                           ;display.c: 105: return 1;
 11585  00507E  0E01               	movlw	1
 11586  005080  0012               	return	
 11587  005082                     __end_of__display_itoa_u16:
 11588                           	opt stack 0
 11589                           tblptru	equ	0xFF8
 11590                           tblptrh	equ	0xFF7
 11591                           tblptrl	equ	0xFF6
 11592                           tablat	equ	0xFF5
 11593                           prodh	equ	0xFF4
 11594                           prodl	equ	0xFF3
 11595                           intcon	equ	0xFF2
 11596                           intcon2	equ	0xFF1
 11597                           intcon3	equ	0xFF0
 11598                           postinc0	equ	0xFEE
 11599                           wreg	equ	0xFE8
 11600                           postdec1	equ	0xFE5
 11601                           plusw1	equ	0xFE3
 11602                           fsr1h	equ	0xFE2
 11603                           fsr1l	equ	0xFE1
 11604                           indf2	equ	0xFDF
 11605                           postinc2	equ	0xFDE
 11606                           plusw2	equ	0xFDB
 11607                           fsr2h	equ	0xFDA
 11608                           fsr2l	equ	0xFD9
 11609                           status	equ	0xFD8
 11610                           
 11611 ;; *************** function _itoa *****************
 11612 ;; Defined at:
 11613 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 11614 ;; Parameters:    Size  Location     Type
 11615 ;;  buf             2   16[COMRAM] PTR unsigned char 
 11616 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 11617 ;;  val             2   18[COMRAM] int 
 11618 ;;  base            2   20[COMRAM] int 
 11619 ;; Auto vars:     Size  Location     Type
 11620 ;;  cp              2   22[COMRAM] PTR unsigned char 
 11621 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 11622 ;; Return value:  Size  Location     Type
 11623 ;;                  2   16[COMRAM] PTR unsigned char 
 11624 ;; Registers used:
 11625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11626 ;; Tracked objects:
 11627 ;;		On entry : 0/0
 11628 ;;		On exit  : 0/0
 11629 ;;		Unchanged: 0/0
 11630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11631 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11632 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11634 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11635 ;;Total ram usage:        8 bytes
 11636 ;; Hardware stack levels used:    1
 11637 ;; Hardware stack levels required when called:    2
 11638 ;; This function calls:
 11639 ;;		_utoa
 11640 ;; This function is called by:
 11641 ;;		__display_itoa_u16
 11642 ;;		__display_itoa_u32
 11643 ;;		__display_itoa
 11644 ;; This function uses a non-reentrant model
 11645 ;;
 11646                           
 11647                           	psect	text46
 11648  007450                     __ptext46:
 11649                           	opt stack 0
 11650  007450                     _itoa:
 11651                           	opt stack 25
 11652                           
 11653                           ;incstack = 0
 11654  007450  C011  F017         	movff	itoa@buf,itoa@cp
 11655  007454  C012  F018         	movff	itoa@buf+1,itoa@cp+1
 11656  007458  AE14               	btfss	itoa@val+1,7,c
 11657  00745A  D00C               	goto	l3442
 11658  00745C  C011  FFD9         	movff	itoa@buf,fsr2l
 11659  007460  C012  FFDA         	movff	itoa@buf+1,fsr2h
 11660  007464  0E2D               	movlw	45
 11661  007466  6EDF               	movwf	indf2,c
 11662  007468  4A11               	infsnz	itoa@buf,f,c
 11663  00746A  2A12               	incf	itoa@buf+1,f,c
 11664  00746C  6C13               	negf	itoa@val,c
 11665  00746E  1E14               	comf	itoa@val+1,f,c
 11666  007470  B0D8               	btfsc	status,0,c
 11667  007472  2A14               	incf	itoa@val+1,f,c
 11668  007474                     l3442:
 11669  007474  C011  F008         	movff	itoa@buf,utoa@buf
 11670  007478  C012  F009         	movff	itoa@buf+1,utoa@buf+1
 11671  00747C  C013  F00A         	movff	itoa@val,utoa@val
 11672  007480  C014  F00B         	movff	itoa@val+1,utoa@val+1
 11673  007484  C015  F00C         	movff	itoa@base,utoa@base
 11674  007488  C016  F00D         	movff	itoa@base+1,utoa@base+1
 11675  00748C  EC80  F02C         	call	_utoa	;wreg free
 11676  007490  0012               	return	
 11677  007492                     __end_of_itoa:
 11678                           	opt stack 0
 11679                           tblptru	equ	0xFF8
 11680                           tblptrh	equ	0xFF7
 11681                           tblptrl	equ	0xFF6
 11682                           tablat	equ	0xFF5
 11683                           prodh	equ	0xFF4
 11684                           prodl	equ	0xFF3
 11685                           intcon	equ	0xFF2
 11686                           intcon2	equ	0xFF1
 11687                           intcon3	equ	0xFF0
 11688                           postinc0	equ	0xFEE
 11689                           wreg	equ	0xFE8
 11690                           postdec1	equ	0xFE5
 11691                           plusw1	equ	0xFE3
 11692                           fsr1h	equ	0xFE2
 11693                           fsr1l	equ	0xFE1
 11694                           indf2	equ	0xFDF
 11695                           postinc2	equ	0xFDE
 11696                           plusw2	equ	0xFDB
 11697                           fsr2h	equ	0xFDA
 11698                           fsr2l	equ	0xFD9
 11699                           status	equ	0xFD8
 11700                           
 11701 ;; *************** function _utoa *****************
 11702 ;; Defined at:
 11703 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 11704 ;; Parameters:    Size  Location     Type
 11705 ;;  buf             2    7[COMRAM] PTR unsigned char 
 11706 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 11707 ;;  val             2    9[COMRAM] unsigned int 
 11708 ;;  base            2   11[COMRAM] int 
 11709 ;; Auto vars:     Size  Location     Type
 11710 ;;  v               2   13[COMRAM] unsigned int 
 11711 ;;  c               1   15[COMRAM] unsigned char 
 11712 ;; Return value:  Size  Location     Type
 11713 ;;                  2    7[COMRAM] PTR unsigned char 
 11714 ;; Registers used:
 11715 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11716 ;; Tracked objects:
 11717 ;;		On entry : 0/0
 11718 ;;		On exit  : 0/0
 11719 ;;		Unchanged: 0/0
 11720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11721 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11722 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11724 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11725 ;;Total ram usage:        9 bytes
 11726 ;; Hardware stack levels used:    1
 11727 ;; Hardware stack levels required when called:    1
 11728 ;; This function calls:
 11729 ;;		___lwdiv
 11730 ;;		___lwmod
 11731 ;; This function is called by:
 11732 ;;		_itoa
 11733 ;; This function uses a non-reentrant model
 11734 ;;
 11735                           
 11736                           	psect	text47
 11737  005900                     __ptext47:
 11738                           	opt stack 0
 11739  005900                     _utoa:
 11740                           	opt stack 25
 11741                           
 11742                           ;incstack = 0
 11743  005900  C00A  F00E         	movff	utoa@val,utoa@v
 11744  005904  C00B  F00F         	movff	utoa@val+1,utoa@v+1
 11745  005908  C00E  F001         	movff	utoa@v,___lwdiv@dividend
 11746  00590C  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
 11747  005910  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 11748  005914  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 11749  005918  ECF8  F038         	call	___lwdiv	;wreg free
 11750  00591C  C001  F00E         	movff	?___lwdiv,utoa@v
 11751  005920  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
 11752  005924  4A08               	infsnz	utoa@buf,f,c
 11753  005926  2A09               	incf	utoa@buf+1,f,c
 11754  005928  500E               	movf	utoa@v,w,c
 11755  00592A  100F               	iorwf	utoa@v+1,w,c
 11756  00592C  A4D8               	btfss	status,2,c
 11757  00592E  D7EC               	goto	l3446
 11758  005930  C008  FFD9         	movff	utoa@buf,fsr2l
 11759  005934  C009  FFDA         	movff	utoa@buf+1,fsr2h
 11760  005938  0E00               	movlw	0
 11761  00593A  6EDF               	movwf	indf2,c
 11762  00593C  0608               	decf	utoa@buf,f,c
 11763  00593E  A0D8               	btfss	status,0,c
 11764  005940  0609               	decf	utoa@buf+1,f,c
 11765  005942  C00A  F001         	movff	utoa@val,___lwmod@dividend
 11766  005946  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
 11767  00594A  C00C  F003         	movff	utoa@base,___lwmod@divisor
 11768  00594E  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
 11769  005952  EC49  F03A         	call	___lwmod	;wreg free
 11770  005956  5001               	movf	?___lwmod,w,c
 11771  005958  6E10               	movwf	utoa@c,c
 11772  00595A  C00A  F001         	movff	utoa@val,___lwdiv@dividend
 11773  00595E  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
 11774  005962  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 11775  005966  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 11776  00596A  ECF8  F038         	call	___lwdiv	;wreg free
 11777  00596E  C001  F00A         	movff	?___lwdiv,utoa@val
 11778  005972  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
 11779  005976  0E09               	movlw	9
 11780  005978  6410               	cpfsgt	utoa@c,c
 11781  00597A  D002               	goto	l3449
 11782  00597C  0E07               	movlw	7
 11783  00597E  2610               	addwf	utoa@c,f,c
 11784  005980                     l3449:
 11785  005980  0E30               	movlw	48
 11786  005982  2610               	addwf	utoa@c,f,c
 11787  005984  C008  FFD9         	movff	utoa@buf,fsr2l
 11788  005988  C009  FFDA         	movff	utoa@buf+1,fsr2h
 11789  00598C  C010  FFDF         	movff	utoa@c,indf2
 11790  005990  0608               	decf	utoa@buf,f,c
 11791  005992  A0D8               	btfss	status,0,c
 11792  005994  0609               	decf	utoa@buf+1,f,c
 11793  005996  500A               	movf	utoa@val,w,c
 11794  005998  100B               	iorwf	utoa@val+1,w,c
 11795  00599A  A4D8               	btfss	status,2,c
 11796  00599C  D7D2               	goto	l3448
 11797                           
 11798                           ;	Return value of _utoa is never used
 11799  00599E  4A08               	infsnz	utoa@buf,f,c
 11800  0059A0  2A09               	incf	utoa@buf+1,f,c
 11801  0059A2  0012               	return	
 11802  0059A4                     __end_of_utoa:
 11803                           	opt stack 0
 11804                           tblptru	equ	0xFF8
 11805                           tblptrh	equ	0xFF7
 11806                           tblptrl	equ	0xFF6
 11807                           tablat	equ	0xFF5
 11808                           prodh	equ	0xFF4
 11809                           prodl	equ	0xFF3
 11810                           intcon	equ	0xFF2
 11811                           intcon2	equ	0xFF1
 11812                           intcon3	equ	0xFF0
 11813                           postinc0	equ	0xFEE
 11814                           wreg	equ	0xFE8
 11815                           postdec1	equ	0xFE5
 11816                           plusw1	equ	0xFE3
 11817                           fsr1h	equ	0xFE2
 11818                           fsr1l	equ	0xFE1
 11819                           indf2	equ	0xFDF
 11820                           postinc2	equ	0xFDE
 11821                           plusw2	equ	0xFDB
 11822                           fsr2h	equ	0xFDA
 11823                           fsr2l	equ	0xFD9
 11824                           status	equ	0xFD8
 11825                           
 11826 ;; *************** function ___lwmod *****************
 11827 ;; Defined at:
 11828 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 11829 ;; Parameters:    Size  Location     Type
 11830 ;;  dividend        2    0[COMRAM] unsigned int 
 11831 ;;  divisor         2    2[COMRAM] unsigned int 
 11832 ;; Auto vars:     Size  Location     Type
 11833 ;;  counter         1    4[COMRAM] unsigned char 
 11834 ;; Return value:  Size  Location     Type
 11835 ;;                  2    0[COMRAM] unsigned int 
 11836 ;; Registers used:
 11837 ;;		wreg, status,2, status,0
 11838 ;; Tracked objects:
 11839 ;;		On entry : 0/0
 11840 ;;		On exit  : 0/0
 11841 ;;		Unchanged: 0/0
 11842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11843 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11844 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11846 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11847 ;;Total ram usage:        5 bytes
 11848 ;; Hardware stack levels used:    1
 11849 ;; This function calls:
 11850 ;;		Nothing
 11851 ;; This function is called by:
 11852 ;;		_utoa
 11853 ;; This function uses a non-reentrant model
 11854 ;;
 11855                           
 11856                           	psect	text48
 11857  007492                     __ptext48:
 11858                           	opt stack 0
 11859  007492                     ___lwmod:
 11860                           	opt stack 25
 11861                           
 11862                           ;incstack = 0
 11863  007492  5003               	movf	___lwmod@divisor,w,c
 11864  007494  1004               	iorwf	___lwmod@divisor+1,w,c
 11865  007496  B4D8               	btfsc	status,2,c
 11866  007498  D018               	goto	l3273
 11867  00749A  0E01               	movlw	1
 11868  00749C  6E05               	movwf	___lwmod@counter,c
 11869  00749E  D004               	goto	l3268
 11870  0074A0  90D8               	bcf	status,0,c
 11871  0074A2  3603               	rlcf	___lwmod@divisor,f,c
 11872  0074A4  3604               	rlcf	___lwmod@divisor+1,f,c
 11873  0074A6  2A05               	incf	___lwmod@counter,f,c
 11874  0074A8                     l3268:
 11875  0074A8  AE04               	btfss	___lwmod@divisor+1,7,c
 11876  0074AA  D7FA               	goto	l3269
 11877  0074AC                     u6960:
 11878  0074AC  5003               	movf	___lwmod@divisor,w,c
 11879  0074AE  5C01               	subwf	___lwmod@dividend,w,c
 11880  0074B0  5004               	movf	___lwmod@divisor+1,w,c
 11881  0074B2  5802               	subwfb	___lwmod@dividend+1,w,c
 11882  0074B4  A0D8               	btfss	status,0,c
 11883  0074B6  D004               	goto	l3272
 11884  0074B8  5003               	movf	___lwmod@divisor,w,c
 11885  0074BA  5E01               	subwf	___lwmod@dividend,f,c
 11886  0074BC  5004               	movf	___lwmod@divisor+1,w,c
 11887  0074BE  5A02               	subwfb	___lwmod@dividend+1,f,c
 11888  0074C0                     l3272:
 11889  0074C0  90D8               	bcf	status,0,c
 11890  0074C2  3204               	rrcf	___lwmod@divisor+1,f,c
 11891  0074C4  3203               	rrcf	___lwmod@divisor,f,c
 11892  0074C6  2E05               	decfsz	___lwmod@counter,f,c
 11893  0074C8  D7F1               	goto	u6960
 11894  0074CA                     l3273:
 11895  0074CA  C001  F001         	movff	___lwmod@dividend,?___lwmod
 11896  0074CE  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 11897  0074D2  0012               	return		;funcret
 11898  0074D4                     __end_of___lwmod:
 11899                           	opt stack 0
 11900                           tblptru	equ	0xFF8
 11901                           tblptrh	equ	0xFF7
 11902                           tblptrl	equ	0xFF6
 11903                           tablat	equ	0xFF5
 11904                           prodh	equ	0xFF4
 11905                           prodl	equ	0xFF3
 11906                           intcon	equ	0xFF2
 11907                           intcon2	equ	0xFF1
 11908                           intcon3	equ	0xFF0
 11909                           postinc0	equ	0xFEE
 11910                           wreg	equ	0xFE8
 11911                           postdec1	equ	0xFE5
 11912                           plusw1	equ	0xFE3
 11913                           fsr1h	equ	0xFE2
 11914                           fsr1l	equ	0xFE1
 11915                           indf2	equ	0xFDF
 11916                           postinc2	equ	0xFDE
 11917                           plusw2	equ	0xFDB
 11918                           fsr2h	equ	0xFDA
 11919                           fsr2l	equ	0xFD9
 11920                           status	equ	0xFD8
 11921                           
 11922 ;; *************** function ___lwdiv *****************
 11923 ;; Defined at:
 11924 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 11925 ;; Parameters:    Size  Location     Type
 11926 ;;  dividend        2    0[COMRAM] unsigned int 
 11927 ;;  divisor         2    2[COMRAM] unsigned int 
 11928 ;; Auto vars:     Size  Location     Type
 11929 ;;  quotient        2    4[COMRAM] unsigned int 
 11930 ;;  counter         1    6[COMRAM] unsigned char 
 11931 ;; Return value:  Size  Location     Type
 11932 ;;                  2    0[COMRAM] unsigned int 
 11933 ;; Registers used:
 11934 ;;		wreg, status,2, status,0
 11935 ;; Tracked objects:
 11936 ;;		On entry : 0/0
 11937 ;;		On exit  : 0/0
 11938 ;;		Unchanged: 0/0
 11939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11940 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11941 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11943 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11944 ;;Total ram usage:        7 bytes
 11945 ;; Hardware stack levels used:    1
 11946 ;; This function calls:
 11947 ;;		Nothing
 11948 ;; This function is called by:
 11949 ;;		_utoa
 11950 ;; This function uses a non-reentrant model
 11951 ;;
 11952                           
 11953                           	psect	text49
 11954  0071F0                     __ptext49:
 11955                           	opt stack 0
 11956  0071F0                     ___lwdiv:
 11957                           	opt stack 25
 11958                           
 11959                           ;incstack = 0
 11960  0071F0  0E00               	movlw	0
 11961  0071F2  6E06               	movwf	___lwdiv@quotient+1,c
 11962  0071F4  0E00               	movlw	0
 11963  0071F6  6E05               	movwf	___lwdiv@quotient,c
 11964  0071F8  5003               	movf	___lwdiv@divisor,w,c
 11965  0071FA  1004               	iorwf	___lwdiv@divisor+1,w,c
 11966  0071FC  B4D8               	btfsc	status,2,c
 11967  0071FE  D01C               	goto	l3263
 11968  007200  0E01               	movlw	1
 11969  007202  6E07               	movwf	___lwdiv@counter,c
 11970  007204  D004               	goto	l3258
 11971  007206  90D8               	bcf	status,0,c
 11972  007208  3603               	rlcf	___lwdiv@divisor,f,c
 11973  00720A  3604               	rlcf	___lwdiv@divisor+1,f,c
 11974  00720C  2A07               	incf	___lwdiv@counter,f,c
 11975  00720E                     l3258:
 11976  00720E  AE04               	btfss	___lwdiv@divisor+1,7,c
 11977  007210  D7FA               	goto	l3259
 11978  007212                     u6930:
 11979  007212  90D8               	bcf	status,0,c
 11980  007214  3605               	rlcf	___lwdiv@quotient,f,c
 11981  007216  3606               	rlcf	___lwdiv@quotient+1,f,c
 11982  007218  5003               	movf	___lwdiv@divisor,w,c
 11983  00721A  5C01               	subwf	___lwdiv@dividend,w,c
 11984  00721C  5004               	movf	___lwdiv@divisor+1,w,c
 11985  00721E  5802               	subwfb	___lwdiv@dividend+1,w,c
 11986  007220  A0D8               	btfss	status,0,c
 11987  007222  D005               	goto	l3262
 11988  007224  5003               	movf	___lwdiv@divisor,w,c
 11989  007226  5E01               	subwf	___lwdiv@dividend,f,c
 11990  007228  5004               	movf	___lwdiv@divisor+1,w,c
 11991  00722A  5A02               	subwfb	___lwdiv@dividend+1,f,c
 11992  00722C  8005               	bsf	___lwdiv@quotient,0,c
 11993  00722E                     l3262:
 11994  00722E  90D8               	bcf	status,0,c
 11995  007230  3204               	rrcf	___lwdiv@divisor+1,f,c
 11996  007232  3203               	rrcf	___lwdiv@divisor,f,c
 11997  007234  2E07               	decfsz	___lwdiv@counter,f,c
 11998  007236  D7ED               	goto	u6930
 11999  007238                     l3263:
 12000  007238  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 12001  00723C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 12002  007240  0012               	return		;funcret
 12003  007242                     __end_of___lwdiv:
 12004                           	opt stack 0
 12005                           tblptru	equ	0xFF8
 12006                           tblptrh	equ	0xFF7
 12007                           tblptrl	equ	0xFF6
 12008                           tablat	equ	0xFF5
 12009                           prodh	equ	0xFF4
 12010                           prodl	equ	0xFF3
 12011                           intcon	equ	0xFF2
 12012                           intcon2	equ	0xFF1
 12013                           intcon3	equ	0xFF0
 12014                           postinc0	equ	0xFEE
 12015                           wreg	equ	0xFE8
 12016                           postdec1	equ	0xFE5
 12017                           plusw1	equ	0xFE3
 12018                           fsr1h	equ	0xFE2
 12019                           fsr1l	equ	0xFE1
 12020                           indf2	equ	0xFDF
 12021                           postinc2	equ	0xFDE
 12022                           plusw2	equ	0xFDB
 12023                           fsr2h	equ	0xFDA
 12024                           fsr2l	equ	0xFD9
 12025                           status	equ	0xFD8
 12026                           
 12027 ;; *************** function _bootloader_run *****************
 12028 ;; Defined at:
 12029 ;;		line 60 in file "bootloader.c"
 12030 ;; Parameters:    Size  Location     Type
 12031 ;;  timeslot        1    wreg     unsigned char 
 12032 ;; Auto vars:     Size  Location     Type
 12033 ;;  timeslot        1   92[COMRAM] unsigned char 
 12034 ;; Return value:  Size  Location     Type
 12035 ;;                  1    wreg      void 
 12036 ;; Registers used:
 12037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12038 ;; Tracked objects:
 12039 ;;		On entry : 0/0
 12040 ;;		On exit  : 0/0
 12041 ;;		Unchanged: 0/0
 12042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12044 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12046 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12047 ;;Total ram usage:        1 bytes
 12048 ;; Hardware stack levels used:    1
 12049 ;; Hardware stack levels required when called:    9
 12050 ;; This function calls:
 12051 ;;		__bootloader_find_file
 12052 ;;		__bootloader_program
 12053 ;;		__bootloader_verify_file
 12054 ;; This function is called by:
 12055 ;;		_main
 12056 ;; This function uses a non-reentrant model
 12057 ;;
 12058                           
 12059                           	psect	text50
 12060  006D84                     __ptext50:
 12061                           	opt stack 0
 12062  006D84                     _bootloader_run:
 12063                           	opt stack 21
 12064                           
 12065                           ;incstack = 0
 12066                           ;bootloader_run@timeslot stored from wreg
 12067  006D84  6E5D               	movwf	bootloader_run@timeslot,c
 12068                           
 12069                           ;bootloader.c: 62: switch(os.bootloader_mode)
 12070  006D86  D015               	goto	l2235
 12071  006D88                     
 12072                           ;bootloader.c: 65: if(timeslot==0)
 12073  006D88  505D               	movf	bootloader_run@timeslot,w,c
 12074  006D8A  A4D8               	btfss	status,2,c
 12075  006D8C  0012               	return	
 12076                           
 12077                           ;bootloader.c: 66: {;bootloader.c: 67: _bootloader_find_file();
 12078  006D8E  EC23  F02D         	call	__bootloader_find_file	;wreg free
 12079                           
 12080                           ;bootloader.c: 68: };bootloader.c: 69: break;
 12081  006D92  0012               	return	
 12082  006D94                     
 12083                           ;bootloader.c: 72: if(timeslot==0)
 12084  006D94  505D               	movf	bootloader_run@timeslot,w,c
 12085  006D96  A4D8               	btfss	status,2,c
 12086  006D98  0012               	return	
 12087                           
 12088                           ;bootloader.c: 73: {;bootloader.c: 74: _bootloader_find_file();
 12089  006D9A  EC23  F02D         	call	__bootloader_find_file	;wreg free
 12090                           
 12091                           ;bootloader.c: 75: };bootloader.c: 76: break;
 12092  006D9E  0012               	return	
 12093  006DA0                     
 12094                           ;bootloader.c: 79: _bootloader_verify_file();
 12095  006DA0  EC15  F009         	call	__bootloader_verify_file	;wreg free
 12096                           
 12097                           ;bootloader.c: 86: break;
 12098                           
 12099                           ;bootloader.c: 85: case BOOTLOADER_MODE_CHECK_FAILED:
 12100                           
 12101                           ;bootloader.c: 83: break;
 12102                           
 12103                           ;bootloader.c: 82: case BOOTLOADER_MODE_CHECK_COMPLETE:
 12104                           
 12105                           ;bootloader.c: 80: break;
 12106  006DA4  0012               	return	
 12107  006DA6                     
 12108                           ;bootloader.c: 89: if(timeslot==0)
 12109  006DA6  505D               	movf	bootloader_run@timeslot,w,c
 12110  006DA8  A4D8               	btfss	status,2,c
 12111  006DAA  0012               	return	
 12112                           
 12113                           ;bootloader.c: 90: {;bootloader.c: 91: _bootloader_program();
 12114  006DAC  ECE4  F005         	call	__bootloader_program	;wreg free
 12115                           
 12116                           ;bootloader.c: 97: }
 12117                           
 12118                           ;bootloader.c: 96: break;
 12119                           
 12120                           ;bootloader.c: 95: case BOOTLOADER_MODE_DONE:
 12121                           
 12122                           ;bootloader.c: 92: };bootloader.c: 93: break;
 12123  006DB0  0012               	return	
 12124  006DB2                     l2235:
 12125  006DB2  0100               	movlb	0	; () banked
 12126  006DB4  5164               	movf	(_os+4)& (0+255),w,b	;volatile
 12127                           
 12128                           ; Switch size 1, requested type "space"
 12129                           ; Number of cases is 7, Range of values is 0 to 96
 12130                           ; switch strategies available:
 12131                           ; Name         Instructions Cycles
 12132                           ; simple_byte           22    12 (average)
 12133                           ;	Chosen strategy is simple_byte
 12134  006DB6  0A00               	xorlw	0	; case 0
 12135  006DB8  B4D8               	btfsc	status,2,c
 12136  006DBA  D7E6               	goto	l2236
 12137  006DBC  0A10               	xorlw	16	; case 16
 12138  006DBE  B4D8               	btfsc	status,2,c
 12139  006DC0  D7E9               	goto	l2239
 12140  006DC2  0A30               	xorlw	48	; case 32
 12141  006DC4  B4D8               	btfsc	status,2,c
 12142  006DC6  D7EC               	goto	l2241
 12143  006DC8  0A10               	xorlw	16	; case 48
 12144  006DCA  B4D8               	btfsc	status,2,c
 12145  006DCC  0012               	return	
 12146  006DCE  0A70               	xorlw	112	; case 64
 12147  006DD0  B4D8               	btfsc	status,2,c
 12148  006DD2  0012               	return	
 12149  006DD4  0A10               	xorlw	16	; case 80
 12150  006DD6  B4D8               	btfsc	status,2,c
 12151  006DD8  D7E6               	goto	l2244
 12152  006DDA  0A30               	xorlw	48	; case 96
 12153  006DDC  0012               	return	
 12154  006DDE                     __end_of_bootloader_run:
 12155                           	opt stack 0
 12156                           tblptru	equ	0xFF8
 12157                           tblptrh	equ	0xFF7
 12158                           tblptrl	equ	0xFF6
 12159                           tablat	equ	0xFF5
 12160                           prodh	equ	0xFF4
 12161                           prodl	equ	0xFF3
 12162                           intcon	equ	0xFF2
 12163                           intcon2	equ	0xFF1
 12164                           intcon3	equ	0xFF0
 12165                           postinc0	equ	0xFEE
 12166                           wreg	equ	0xFE8
 12167                           postdec1	equ	0xFE5
 12168                           plusw1	equ	0xFE3
 12169                           fsr1h	equ	0xFE2
 12170                           fsr1l	equ	0xFE1
 12171                           indf2	equ	0xFDF
 12172                           postinc2	equ	0xFDE
 12173                           plusw2	equ	0xFDB
 12174                           fsr2h	equ	0xFDA
 12175                           fsr2l	equ	0xFD9
 12176                           status	equ	0xFD8
 12177                           
 12178 ;; *************** function __bootloader_verify_file *****************
 12179 ;; Defined at:
 12180 ;;		line 173 in file "bootloader.c"
 12181 ;; Parameters:    Size  Location     Type
 12182 ;;		None
 12183 ;; Auto vars:     Size  Location     Type
 12184 ;;  address32       4   50[BANK0 ] unsigned long 
 12185 ;;  return_value    4   46[BANK0 ] unsigned long 
 12186 ;;  rec_counter     1   45[BANK0 ] unsigned char 
 12187 ;; Return value:  Size  Location     Type
 12188 ;;                  1    wreg      void 
 12189 ;; Registers used:
 12190 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12191 ;; Tracked objects:
 12192 ;;		On entry : 0/0
 12193 ;;		On exit  : 0/0
 12194 ;;		Unchanged: 0/0
 12195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12197 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12198 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12199 ;;      Totals:         8       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12200 ;;Total ram usage:       17 bytes
 12201 ;; Hardware stack levels used:    1
 12202 ;; Hardware stack levels required when called:    8
 12203 ;; This function calls:
 12204 ;;		__bootloader_check_address
 12205 ;;		_fat_get_file_size
 12206 ;;		_fat_read_from_file
 12207 ;;		_parseHexFileEntry
 12208 ;; This function is called by:
 12209 ;;		_bootloader_run
 12210 ;; This function uses a non-reentrant model
 12211 ;;
 12212                           
 12213                           	psect	text51
 12214  00122A                     __ptext51:
 12215                           	opt stack 0
 12216  00122A                     __bootloader_verify_file:
 12217                           	opt stack 21
 12218                           
 12219                           ;bootloader.c: 175: uint8_t rec_counter;;bootloader.c: 176: uint32_t return_value = 0;
 12220                           
 12221                           ;incstack = 0
 12222  00122A  0E00               	movlw	0
 12223  00122C  0100               	movlb	0	; () banked
 12224  00122E  6FE3               	movwf	__bootloader_verify_file@return_value& (0+255),b
 12225  001230  0E00               	movlw	0
 12226  001232  6FE4               	movwf	(__bootloader_verify_file@return_value+1)& (0+255),b
 12227  001234  0E00               	movlw	0
 12228  001236  6FE5               	movwf	(__bootloader_verify_file@return_value+2)& (0+255),b
 12229  001238  0E00               	movlw	0
 12230  00123A  6FE6               	movwf	(__bootloader_verify_file@return_value+3)& (0+255),b
 12231                           
 12232                           ; BSR set to: 0
 12233                           ;bootloader.c: 177: uint32_t address32;;bootloader.c: 180: hex_file_size = fat_get_file_
      +                          size(file_number);
 12234  00123C  51FE               	movf	_file_number& (0+255),w,b
 12235  00123E  EC4D  F033         	call	_fat_get_file_size
 12236  001242  C030  F078         	movff	?_fat_get_file_size,_hex_file_size
 12237  001246  C031  F079         	movff	?_fat_get_file_size+1,_hex_file_size+1
 12238  00124A  C032  F07A         	movff	?_fat_get_file_size+2,_hex_file_size+2
 12239  00124E  C033  F07B         	movff	?_fat_get_file_size+3,_hex_file_size+3
 12240                           
 12241                           ;bootloader.c: 183: for(rec_counter=0; rec_counter<1; ++rec_counter)
 12242  001252  0E00               	movlw	0
 12243  001254  0100               	movlb	0	; () banked
 12244  001256  6FE2               	movwf	__bootloader_verify_file@rec_counter& (0+255),b
 12245  001258                     l13950:
 12246                           
 12247                           ; BSR set to: 0
 12248  001258  51E2               	movf	__bootloader_verify_file@rec_counter& (0+255),w,b
 12249  00125A  A4D8               	btfss	status,2,c
 12250  00125C  0012               	return	
 12251                           
 12252                           ; BSR set to: 0
 12253                           ;bootloader.c: 184: {;bootloader.c: 186: if((hex_file_size-hex_file_offset)>=50)
 12254                           
 12255                           ; BSR set to: 0
 12256                           
 12257                           ; BSR set to: 0
 12258  00125E  C07C  F055         	movff	_hex_file_offset,??__bootloader_verify_file
 12259  001262  C07D  F056         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
 12260  001266  C07E  F057         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
 12261  00126A  C07F  F058         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
 12262  00126E  1E55               	comf	??__bootloader_verify_file,f,c
 12263  001270  1E56               	comf	??__bootloader_verify_file+1,f,c
 12264  001272  1E57               	comf	??__bootloader_verify_file+2,f,c
 12265  001274  1E58               	comf	??__bootloader_verify_file+3,f,c
 12266  001276  2A55               	incf	??__bootloader_verify_file,f,c
 12267  001278  0E00               	movlw	0
 12268  00127A  2256               	addwfc	??__bootloader_verify_file+1,f,c
 12269  00127C  2257               	addwfc	??__bootloader_verify_file+2,f,c
 12270  00127E  2258               	addwfc	??__bootloader_verify_file+3,f,c
 12271  001280  5178               	movf	_hex_file_size& (0+255),w,b
 12272  001282  2455               	addwf	??__bootloader_verify_file,w,c
 12273  001284  6E59               	movwf	(??__bootloader_verify_file+4)& (0+255),c
 12274  001286  5179               	movf	(_hex_file_size+1)& (0+255),w,b
 12275  001288  2056               	addwfc	??__bootloader_verify_file+1,w,c
 12276  00128A  6E5A               	movwf	(??__bootloader_verify_file+5)& (0+255),c
 12277  00128C  517A               	movf	(_hex_file_size+2)& (0+255),w,b
 12278  00128E  2057               	addwfc	??__bootloader_verify_file+2,w,c
 12279  001290  6E5B               	movwf	(??__bootloader_verify_file+6)& (0+255),c
 12280  001292  517B               	movf	(_hex_file_size+3)& (0+255),w,b
 12281  001294  2058               	addwfc	??__bootloader_verify_file+3,w,c
 12282  001296  6E5C               	movwf	(??__bootloader_verify_file+7)& (0+255),c
 12283  001298  505C               	movf	??__bootloader_verify_file+7,w,c
 12284  00129A  105B               	iorwf	??__bootloader_verify_file+6,w,c
 12285  00129C  105A               	iorwf	??__bootloader_verify_file+5,w,c
 12286  00129E  E104               	bnz	u10900
 12287  0012A0  0E32               	movlw	50
 12288  0012A2  5C59               	subwf	??__bootloader_verify_file+4,w,c
 12289  0012A4  A0D8               	btfss	status,0,c
 12290  0012A6  D018               	goto	l2269
 12291  0012A8                     u10900:
 12292                           
 12293                           ; BSR set to: 0
 12294                           ;bootloader.c: 187: fat_read_from_file(file_number, hex_file_offset, 50, file_buffer);
 12295  0012A8  C07C  F03F         	movff	_hex_file_offset,fat_read_from_file@start_byte
 12296  0012AC  C07D  F040         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 12297  0012B0  C07E  F041         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 12298  0012B4  C07F  F042         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 12299  0012B8  0E32               	movlw	50
 12300  0012BA  6E43               	movwf	fat_read_from_file@length,c
 12301  0012BC  0E00               	movlw	0
 12302  0012BE  6E44               	movwf	fat_read_from_file@length+1,c
 12303  0012C0  0E00               	movlw	0
 12304  0012C2  6E45               	movwf	fat_read_from_file@length+2,c
 12305  0012C4  0E00               	movlw	0
 12306  0012C6  6E46               	movwf	fat_read_from_file@length+3,c
 12307  0012C8  0EC0               	movlw	low _file_buffer
 12308  0012CA  6E47               	movwf	fat_read_from_file@data,c
 12309  0012CC  0E02               	movlw	high _file_buffer
 12310  0012CE  6E48               	movwf	fat_read_from_file@data+1,c
 12311  0012D0  51FE               	movf	_file_number& (0+255),w,b
 12312  0012D2  EC7B  F00F         	call	_fat_read_from_file
 12313  0012D6  D02D               	goto	l2270
 12314  0012D8                     l2269:
 12315                           
 12316                           ;bootloader.c: 188: else;bootloader.c: 189: fat_read_from_file(file_number, hex_file_off
      +                          set, (hex_file_size-hex_file_offset), file_buffer);
 12317  0012D8  C07C  F03F         	movff	_hex_file_offset,fat_read_from_file@start_byte
 12318  0012DC  C07D  F040         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 12319  0012E0  C07E  F041         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 12320  0012E4  C07F  F042         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 12321  0012E8  C07C  F055         	movff	_hex_file_offset,??__bootloader_verify_file
 12322  0012EC  C07D  F056         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
 12323  0012F0  C07E  F057         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
 12324  0012F4  C07F  F058         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
 12325  0012F8  1E55               	comf	??__bootloader_verify_file,f,c
 12326  0012FA  1E56               	comf	??__bootloader_verify_file+1,f,c
 12327  0012FC  1E57               	comf	??__bootloader_verify_file+2,f,c
 12328  0012FE  1E58               	comf	??__bootloader_verify_file+3,f,c
 12329  001300  2A55               	incf	??__bootloader_verify_file,f,c
 12330  001302  0E00               	movlw	0
 12331  001304  2256               	addwfc	??__bootloader_verify_file+1,f,c
 12332  001306  2257               	addwfc	??__bootloader_verify_file+2,f,c
 12333  001308  2258               	addwfc	??__bootloader_verify_file+3,f,c
 12334  00130A  0100               	movlb	0	; () banked
 12335  00130C  5178               	movf	_hex_file_size& (0+255),w,b
 12336  00130E  2455               	addwf	??__bootloader_verify_file,w,c
 12337  001310  6E43               	movwf	fat_read_from_file@length,c
 12338  001312  5179               	movf	(_hex_file_size+1)& (0+255),w,b
 12339  001314  2056               	addwfc	??__bootloader_verify_file+1,w,c
 12340  001316  6E44               	movwf	fat_read_from_file@length+1,c
 12341  001318  517A               	movf	(_hex_file_size+2)& (0+255),w,b
 12342  00131A  2057               	addwfc	??__bootloader_verify_file+2,w,c
 12343  00131C  6E45               	movwf	fat_read_from_file@length+2,c
 12344  00131E  517B               	movf	(_hex_file_size+3)& (0+255),w,b
 12345  001320  2058               	addwfc	??__bootloader_verify_file+3,w,c
 12346  001322  6E46               	movwf	fat_read_from_file@length+3,c
 12347  001324  0EC0               	movlw	low _file_buffer
 12348  001326  6E47               	movwf	fat_read_from_file@data,c
 12349  001328  0E02               	movlw	high _file_buffer
 12350  00132A  6E48               	movwf	fat_read_from_file@data+1,c
 12351  00132C  51FE               	movf	_file_number& (0+255),w,b
 12352  00132E  EC7B  F00F         	call	_fat_read_from_file
 12353  001332                     l2270:
 12354                           
 12355                           ;bootloader.c: 191: return_value = parseHexFileEntry(file_buffer, 0, &hex_file_entry);
 12356  001332  0EC0               	movlw	low _file_buffer
 12357  001334  6E0C               	movwf	parseHexFileEntry@data,c
 12358  001336  0E02               	movlw	high _file_buffer
 12359  001338  6E0D               	movwf	parseHexFileEntry@data+1,c
 12360  00133A  0E00               	movlw	0
 12361  00133C  6E0E               	movwf	parseHexFileEntry@offset,c
 12362  00133E  0E00               	movlw	0
 12363  001340  6E0F               	movwf	parseHexFileEntry@offset+1,c
 12364  001342  0E00               	movlw	0
 12365  001344  6E10               	movwf	parseHexFileEntry@offset+2,c
 12366  001346  0E00               	movlw	0
 12367  001348  6E11               	movwf	parseHexFileEntry@offset+3,c
 12368  00134A  0EC4               	movlw	low _hex_file_entry
 12369  00134C  6E12               	movwf	parseHexFileEntry@hexEntry,c
 12370  00134E  0E01               	movlw	high _hex_file_entry
 12371  001350  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
 12372  001352  EC10  F000         	call	_parseHexFileEntry	;wreg free
 12373  001356  C00C  F0E3         	movff	?_parseHexFileEntry,__bootloader_verify_file@return_value
 12374  00135A  C00D  F0E4         	movff	?_parseHexFileEntry+1,__bootloader_verify_file@return_value+1
 12375  00135E  C00E  F0E5         	movff	?_parseHexFileEntry+2,__bootloader_verify_file@return_value+2
 12376  001362  C00F  F0E6         	movff	?_parseHexFileEntry+3,__bootloader_verify_file@return_value+3
 12377                           
 12378                           ;bootloader.c: 194: ++hex_file_entries;
 12379  001366  0101               	movlb	1	; () banked
 12380  001368  4B6A               	infsnz	_hex_file_entries& (0+255),f,b
 12381  00136A  2B6B               	incf	(_hex_file_entries+1)& (0+255),f,b
 12382                           
 12383                           ; BSR set to: 1
 12384                           ;bootloader.c: 197: if(hex_file_entry.recordType==RecordTypeExtendedLinearAddress)
 12385  00136C  0E04               	movlw	4
 12386  00136E  19C8               	xorwf	(_hex_file_entry+4)& (0+255),w,b
 12387  001370  A4D8               	btfss	status,2,c
 12388  001372  D01C               	goto	l2271
 12389                           
 12390                           ; BSR set to: 1
 12391                           ;bootloader.c: 198: {;bootloader.c: 199: extended_linear_address = hex_file_entry.data[0
      +                          ];
 12392  001374  51C9               	movf	(_hex_file_entry+5)& (0+255),w,b
 12393  001376  6F40               	movwf	_extended_linear_address& (0+255),b
 12394  001378  6B41               	clrf	(_extended_linear_address+1)& (0+255),b
 12395  00137A  6B42               	clrf	(_extended_linear_address+2)& (0+255),b
 12396  00137C  6B43               	clrf	(_extended_linear_address+3)& (0+255),b
 12397                           
 12398                           ; BSR set to: 1
 12399                           ;bootloader.c: 200: extended_linear_address <<= 8;
 12400  00137E  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12401  001382  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12402  001386  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12403  00138A  6B40               	clrf	_extended_linear_address& (0+255),b
 12404                           
 12405                           ; BSR set to: 1
 12406                           ;bootloader.c: 201: extended_linear_address |= hex_file_entry.data[1];
 12407  00138C  51CA               	movf	(_hex_file_entry+6)& (0+255),w,b
 12408  00138E  1340               	iorwf	_extended_linear_address& (0+255),f,b
 12409                           
 12410                           ; BSR set to: 1
 12411                           ;bootloader.c: 202: extended_linear_address <<= 8;
 12412  001390  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12413  001394  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12414  001398  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12415  00139C  6B40               	clrf	_extended_linear_address& (0+255),b
 12416                           
 12417                           ; BSR set to: 1
 12418                           ;bootloader.c: 203: extended_linear_address <<= 8;
 12419  00139E  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12420  0013A2  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12421  0013A6  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12422  0013AA  6B40               	clrf	_extended_linear_address& (0+255),b
 12423  0013AC                     l2271:
 12424                           
 12425                           ; BSR set to: 1
 12426                           ;bootloader.c: 204: };bootloader.c: 207: if(hex_file_entry.recordType==RecordTypeData)
 12427                           
 12428                           ; BSR set to: 1
 12429  0013AC  51C8               	movf	(_hex_file_entry+4)& (0+255),w,b
 12430  0013AE  A4D8               	btfss	status,2,c
 12431  0013B0  D05D               	goto	l2275
 12432                           
 12433                           ; BSR set to: 1
 12434                           ;bootloader.c: 208: {;bootloader.c: 210: address32 = extended_linear_address + hex_file_
      +                          entry.address;
 12435  0013B2  51C6               	movf	(_hex_file_entry+2)& (0+255),w,b
 12436  0013B4  2540               	addwf	_extended_linear_address& (0+255),w,b
 12437  0013B6  0100               	movlb	0	; () banked
 12438  0013B8  6FE7               	movwf	__bootloader_verify_file@address32& (0+255),b
 12439  0013BA  0101               	movlb	1	; () banked
 12440  0013BC  51C7               	movf	(_hex_file_entry+3)& (0+255),w,b
 12441  0013BE  2141               	addwfc	(_extended_linear_address+1)& (0+255),w,b
 12442  0013C0  0100               	movlb	0	; () banked
 12443  0013C2  6FE8               	movwf	(__bootloader_verify_file@address32+1)& (0+255),b
 12444  0013C4  0E00               	movlw	0
 12445  0013C6  0101               	movlb	1	; () banked
 12446  0013C8  2142               	addwfc	(_extended_linear_address+2)& (0+255),w,b
 12447  0013CA  0100               	movlb	0	; () banked
 12448  0013CC  6FE9               	movwf	(__bootloader_verify_file@address32+2)& (0+255),b
 12449  0013CE  0E00               	movlw	0
 12450  0013D0  0101               	movlb	1	; () banked
 12451  0013D2  2143               	addwfc	(_extended_linear_address+3)& (0+255),w,b
 12452  0013D4  0100               	movlb	0	; () banked
 12453  0013D6  6FEA               	movwf	(__bootloader_verify_file@address32+3)& (0+255),b
 12454                           
 12455                           ;bootloader.c: 213: if(address32<file_minimum_address)
 12456  0013D8  0101               	movlb	1	; () banked
 12457  0013DA  5148               	movf	_file_minimum_address& (0+255),w,b
 12458  0013DC  0100               	movlb	0	; () banked
 12459  0013DE  5DE7               	subwf	__bootloader_verify_file@address32& (0+255),w,b
 12460  0013E0  0101               	movlb	1	; () banked
 12461  0013E2  5149               	movf	(_file_minimum_address+1)& (0+255),w,b
 12462  0013E4  0100               	movlb	0	; () banked
 12463  0013E6  59E8               	subwfb	(__bootloader_verify_file@address32+1)& (0+255),w,b
 12464  0013E8  0101               	movlb	1	; () banked
 12465  0013EA  514A               	movf	(_file_minimum_address+2)& (0+255),w,b
 12466  0013EC  0100               	movlb	0	; () banked
 12467  0013EE  59E9               	subwfb	(__bootloader_verify_file@address32+2)& (0+255),w,b
 12468  0013F0  0101               	movlb	1	; () banked
 12469  0013F2  514B               	movf	(_file_minimum_address+3)& (0+255),w,b
 12470  0013F4  0100               	movlb	0	; () banked
 12471  0013F6  59EA               	subwfb	(__bootloader_verify_file@address32+3)& (0+255),w,b
 12472  0013F8  B0D8               	btfsc	status,0,c
 12473  0013FA  D008               	goto	l2273
 12474                           
 12475                           ; BSR set to: 0
 12476                           ;bootloader.c: 214: {;bootloader.c: 215: file_minimum_address = address32;
 12477  0013FC  C0E7  F148         	movff	__bootloader_verify_file@address32,_file_minimum_address
 12478  001400  C0E8  F149         	movff	__bootloader_verify_file@address32+1,_file_minimum_address+1
 12479  001404  C0E9  F14A         	movff	__bootloader_verify_file@address32+2,_file_minimum_address+2
 12480  001408  C0EA  F14B         	movff	__bootloader_verify_file@address32+3,_file_minimum_address+3
 12481  00140C                     l2273:
 12482                           
 12483                           ; BSR set to: 0
 12484                           ;bootloader.c: 216: };bootloader.c: 217: if(address32>file_maximum_address)
 12485                           
 12486                           ; BSR set to: 0
 12487  00140C  51E7               	movf	__bootloader_verify_file@address32& (0+255),w,b
 12488  00140E  0101               	movlb	1	; () banked
 12489  001410  5D44               	subwf	_file_maximum_address& (0+255),w,b
 12490  001412  0100               	movlb	0	; () banked
 12491  001414  51E8               	movf	(__bootloader_verify_file@address32+1)& (0+255),w,b
 12492  001416  0101               	movlb	1	; () banked
 12493  001418  5945               	subwfb	(_file_maximum_address+1)& (0+255),w,b
 12494  00141A  0100               	movlb	0	; () banked
 12495  00141C  51E9               	movf	(__bootloader_verify_file@address32+2)& (0+255),w,b
 12496  00141E  0101               	movlb	1	; () banked
 12497  001420  5946               	subwfb	(_file_maximum_address+2)& (0+255),w,b
 12498  001422  0100               	movlb	0	; () banked
 12499  001424  51EA               	movf	(__bootloader_verify_file@address32+3)& (0+255),w,b
 12500  001426  0101               	movlb	1	; () banked
 12501  001428  5947               	subwfb	(_file_maximum_address+3)& (0+255),w,b
 12502  00142A  B0D8               	btfsc	status,0,c
 12503  00142C  D008               	goto	l2274
 12504                           
 12505                           ; BSR set to: 1
 12506                           ;bootloader.c: 218: {;bootloader.c: 219: file_maximum_address = address32;
 12507  00142E  C0E7  F144         	movff	__bootloader_verify_file@address32,_file_maximum_address
 12508  001432  C0E8  F145         	movff	__bootloader_verify_file@address32+1,_file_maximum_address+1
 12509  001436  C0E9  F146         	movff	__bootloader_verify_file@address32+2,_file_maximum_address+2
 12510  00143A  C0EA  F147         	movff	__bootloader_verify_file@address32+3,_file_maximum_address+3
 12511  00143E                     l2274:
 12512                           
 12513                           ; BSR set to: 1
 12514                           ;bootloader.c: 220: };bootloader.c: 223: if(_bootloader_check_address(address32, hex_fil
      +                          e_entry.dataLength) == ADDRESS_CHECK_RESULT_ERROR)
 12515                           
 12516                           ; BSR set to: 1
 12517  00143E  C0E7  F001         	movff	__bootloader_verify_file@address32,__bootloader_check_address@address
 12518  001442  C0E8  F002         	movff	__bootloader_verify_file@address32+1,__bootloader_check_address@address+1
 12519  001446  C0E9  F003         	movff	__bootloader_verify_file@address32+2,__bootloader_check_address@address+2
 12520  00144A  C0EA  F004         	movff	__bootloader_verify_file@address32+3,__bootloader_check_address@address+3
 12521  00144E  C1C4  F005         	movff	_hex_file_entry,__bootloader_check_address@dataLength
 12522  001452  ECD8  F025         	call	__bootloader_check_address	;wreg free
 12523  001456  0AFF               	xorlw	255
 12524  001458  A4D8               	btfss	status,2,c
 12525  00145A  D008               	goto	l2275
 12526                           
 12527                           ;bootloader.c: 224: {;bootloader.c: 226: last_error = ShortRecordErrorAddressRange;
 12528  00145C  0E0B               	movlw	11
 12529  00145E  0100               	movlb	0	; () banked
 12530  001460  6F96               	movwf	_last_error& (0+255),b
 12531                           
 12532                           ;bootloader.c: 228: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
 12533  001462  0E40               	movlw	64
 12534  001464  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 12535                           
 12536                           ;bootloader.c: 229: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
 12537  001466  0E40               	movlw	64
 12538  001468  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 12539                           
 12540                           ;bootloader.c: 230: break;
 12541  00146A  0012               	return	
 12542  00146C                     l2275:
 12543                           
 12544                           ;bootloader.c: 231: };bootloader.c: 232: };bootloader.c: 234: if(return_value==0)
 12545                           
 12546                           ; BSR set to: 0
 12547                           
 12548                           ; BSR set to: 0
 12549  00146C  0100               	movlb	0	; () banked
 12550  00146E  51E3               	movf	__bootloader_verify_file@return_value& (0+255),w,b
 12551  001470  11E4               	iorwf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
 12552  001472  11E5               	iorwf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
 12553  001474  11E6               	iorwf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
 12554  001476  A4D8               	btfss	status,2,c
 12555  001478  D027               	goto	l2276
 12556                           
 12557                           ; BSR set to: 0
 12558                           ;bootloader.c: 235: {;bootloader.c: 238: total_hex_file_entries = hex_file_entries;
 12559  00147A  C16A  F168         	movff	_hex_file_entries,_total_hex_file_entries
 12560  00147E  C16B  F169         	movff	_hex_file_entries+1,_total_hex_file_entries+1
 12561                           
 12562                           ; BSR set to: 0
 12563                           ;bootloader.c: 239: hex_file_entries = 0;
 12564  001482  0E00               	movlw	0
 12565  001484  0101               	movlb	1	; () banked
 12566  001486  6F6B               	movwf	(_hex_file_entries+1)& (0+255),b
 12567  001488  0E00               	movlw	0
 12568  00148A  6F6A               	movwf	_hex_file_entries& (0+255),b
 12569                           
 12570                           ;bootloader.c: 240: hex_file_offset = 0;
 12571  00148C  0E00               	movlw	0
 12572  00148E  0100               	movlb	0	; () banked
 12573  001490  6F7C               	movwf	_hex_file_offset& (0+255),b
 12574  001492  0E00               	movlw	0
 12575  001494  6F7D               	movwf	(_hex_file_offset+1)& (0+255),b
 12576  001496  0E00               	movlw	0
 12577  001498  6F7E               	movwf	(_hex_file_offset+2)& (0+255),b
 12578  00149A  0E00               	movlw	0
 12579  00149C  6F7F               	movwf	(_hex_file_offset+3)& (0+255),b
 12580                           
 12581                           ;bootloader.c: 241: extended_linear_address = 0;
 12582  00149E  0E00               	movlw	0
 12583  0014A0  0101               	movlb	1	; () banked
 12584  0014A2  6F40               	movwf	_extended_linear_address& (0+255),b
 12585  0014A4  0E00               	movlw	0
 12586  0014A6  6F41               	movwf	(_extended_linear_address+1)& (0+255),b
 12587  0014A8  0E00               	movlw	0
 12588  0014AA  6F42               	movwf	(_extended_linear_address+2)& (0+255),b
 12589  0014AC  0E00               	movlw	0
 12590  0014AE  6F43               	movwf	(_extended_linear_address+3)& (0+255),b
 12591                           
 12592                           ;bootloader.c: 242: flash_pages_written = 0;
 12593  0014B0  0E00               	movlw	0
 12594  0014B2  6F67               	movwf	(_flash_pages_written+1)& (0+255),b
 12595  0014B4  0E00               	movlw	0
 12596  0014B6  6F66               	movwf	_flash_pages_written& (0+255),b
 12597                           
 12598                           ;bootloader.c: 243: start_from_byte_next = 0;
 12599  0014B8  0E00               	movlw	0
 12600  0014BA  0100               	movlb	0	; () banked
 12601  0014BC  6F95               	movwf	_start_from_byte_next& (0+255),b
 12602                           
 12603                           ;bootloader.c: 245: os.bootloader_mode = BOOTLOADER_MODE_CHECK_COMPLETE;
 12604  0014BE  0E30               	movlw	48
 12605  0014C0  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 12606                           
 12607                           ;bootloader.c: 246: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_COMPLETE;
 12608  0014C2  0E30               	movlw	48
 12609  0014C4  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 12610                           
 12611                           ;bootloader.c: 247: break;
 12612  0014C6  0012               	return	
 12613  0014C8                     l2276:
 12614                           
 12615                           ; BSR set to: 0
 12616                           ;bootloader.c: 249: else if(return_value>0xFFFFFFF0)
 12617                           
 12618                           ; BSR set to: 0
 12619  0014C8  0EF1               	movlw	241
 12620  0014CA  5DE3               	subwf	__bootloader_verify_file@return_value& (0+255),w,b
 12621  0014CC  0EFF               	movlw	255
 12622  0014CE  59E4               	subwfb	(__bootloader_verify_file@return_value+1)& (0+255),w,b
 12623  0014D0  0EFF               	movlw	255
 12624  0014D2  59E5               	subwfb	(__bootloader_verify_file@return_value+2)& (0+255),w,b
 12625  0014D4  0EFF               	movlw	255
 12626  0014D6  59E6               	subwfb	(__bootloader_verify_file@return_value+3)& (0+255),w,b
 12627  0014D8  A0D8               	btfss	status,0,c
 12628  0014DA  D007               	goto	l2278
 12629                           
 12630                           ; BSR set to: 0
 12631                           ;bootloader.c: 250: {;bootloader.c: 252: last_error = return_value & 0xF;
 12632  0014DC  51E3               	movf	__bootloader_verify_file@return_value& (0+255),w,b
 12633  0014DE  0B0F               	andlw	15
 12634  0014E0  6F96               	movwf	_last_error& (0+255),b
 12635                           
 12636                           ; BSR set to: 0
 12637                           ;bootloader.c: 254: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
 12638  0014E2  0E40               	movlw	64
 12639  0014E4  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 12640                           
 12641                           ; BSR set to: 0
 12642                           ;bootloader.c: 255: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
 12643  0014E6  0E40               	movlw	64
 12644  0014E8  D7ED               	goto	L1
 12645  0014EA                     l2278:
 12646                           
 12647                           ; BSR set to: 0
 12648                           ;bootloader.c: 258: else;bootloader.c: 259: {;bootloader.c: 261: hex_file_offset += retu
      +                          rn_value;
 12649                           
 12650                           ; BSR set to: 0
 12651  0014EA  51E3               	movf	__bootloader_verify_file@return_value& (0+255),w,b
 12652  0014EC  277C               	addwf	_hex_file_offset& (0+255),f,b
 12653  0014EE  51E4               	movf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
 12654  0014F0  237D               	addwfc	(_hex_file_offset+1)& (0+255),f,b
 12655  0014F2  51E5               	movf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
 12656  0014F4  237E               	addwfc	(_hex_file_offset+2)& (0+255),f,b
 12657  0014F6  51E6               	movf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
 12658  0014F8  237F               	addwfc	(_hex_file_offset+3)& (0+255),f,b
 12659                           
 12660                           ; BSR set to: 0
 12661                           
 12662                           ; BSR set to: 0
 12663                           
 12664                           ; BSR set to: 0
 12665  0014FA  2BE2               	incf	__bootloader_verify_file@rec_counter& (0+255),f,b
 12666  0014FC  D6AD               	goto	l13950
 12667  0014FE                     __end_of__bootloader_verify_file:
 12668                           	opt stack 0
 12669                           tblptru	equ	0xFF8
 12670                           tblptrh	equ	0xFF7
 12671                           tblptrl	equ	0xFF6
 12672                           tablat	equ	0xFF5
 12673                           prodh	equ	0xFF4
 12674                           prodl	equ	0xFF3
 12675                           intcon	equ	0xFF2
 12676                           intcon2	equ	0xFF1
 12677                           intcon3	equ	0xFF0
 12678                           postinc0	equ	0xFEE
 12679                           wreg	equ	0xFE8
 12680                           postdec1	equ	0xFE5
 12681                           plusw1	equ	0xFE3
 12682                           fsr1h	equ	0xFE2
 12683                           fsr1l	equ	0xFE1
 12684                           indf2	equ	0xFDF
 12685                           postinc2	equ	0xFDE
 12686                           plusw2	equ	0xFDB
 12687                           fsr2h	equ	0xFDA
 12688                           fsr2l	equ	0xFD9
 12689                           status	equ	0xFD8
 12690                           
 12691 ;; *************** function __bootloader_program *****************
 12692 ;; Defined at:
 12693 ;;		line 266 in file "bootloader.c"
 12694 ;; Parameters:    Size  Location     Type
 12695 ;;		None
 12696 ;; Auto vars:     Size  Location     Type
 12697 ;;  address32       4   55[BANK0 ] unsigned long 
 12698 ;;  return_value    4   51[BANK0 ] unsigned long 
 12699 ;;  page_to_writ    2   62[BANK0 ] unsigned int 
 12700 ;;  cntr            2   60[BANK0 ] unsigned int 
 12701 ;;  address_with    2   49[BANK0 ] unsigned int 
 12702 ;;  entry_page      2   47[BANK0 ] unsigned int 
 12703 ;;  buffer          2   45[BANK0 ] PTR unsigned char 
 12704 ;;		 -> pageBuffer(1024), 
 12705 ;;  start_from_b    1   59[BANK0 ] unsigned char 
 12706 ;; Return value:  Size  Location     Type
 12707 ;;                  1    wreg      void 
 12708 ;; Registers used:
 12709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12710 ;; Tracked objects:
 12711 ;;		On entry : 0/0
 12712 ;;		On exit  : 0/0
 12713 ;;		Unchanged: 0/0
 12714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12716 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12717 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12718 ;;      Totals:         8      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12719 ;;Total ram usage:       27 bytes
 12720 ;; Hardware stack levels used:    1
 12721 ;; Hardware stack levels required when called:    8
 12722 ;; This function calls:
 12723 ;;		__bootloader_check_address
 12724 ;;		_fat_read_from_file
 12725 ;;		_internalFlash_addressWithinPage
 12726 ;;		_internalFlash_erasePage
 12727 ;;		_internalFlash_getBuffer
 12728 ;;		_internalFlash_pageFromAddress
 12729 ;;		_internalFlash_readPage
 12730 ;;		_internalFlash_writePage
 12731 ;;		_parseHexFileEntry
 12732 ;; This function is called by:
 12733 ;;		_bootloader_run
 12734 ;; This function uses a non-reentrant model
 12735 ;;
 12736                           
 12737                           	psect	text52
 12738  000BC8                     __ptext52:
 12739                           	opt stack 0
 12740  000BC8                     __bootloader_program:
 12741                           	opt stack 21
 12742                           
 12743                           ;bootloader.c: 268: uint16_t cntr;;bootloader.c: 269: uint8_t* buffer;;bootloader.c: 270
      +                          : uint16_t entry_page;;bootloader.c: 271: uint16_t page_to_write = 0;
 12744                           
 12745                           ; BSR set to: 0
 12746                           ;incstack = 0
 12747  000BC8  0E00               	movlw	0
 12748  000BCA  0100               	movlb	0	; () banked
 12749  000BCC  6FF4               	movwf	(__bootloader_program@page_to_write+1)& (0+255),b
 12750  000BCE  0E00               	movlw	0
 12751  000BD0  6FF3               	movwf	__bootloader_program@page_to_write& (0+255),b
 12752                           
 12753                           ;bootloader.c: 272: uint8_t start_from_byte;;bootloader.c: 273: uint32_t address32;;boot
      +                          loader.c: 274: uint32_t return_value = 0;
 12754  000BD2  0E00               	movlw	0
 12755  000BD4  6FE8               	movwf	__bootloader_program@return_value& (0+255),b
 12756  000BD6  0E00               	movlw	0
 12757  000BD8  6FE9               	movwf	(__bootloader_program@return_value+1)& (0+255),b
 12758  000BDA  0E00               	movlw	0
 12759  000BDC  6FEA               	movwf	(__bootloader_program@return_value+2)& (0+255),b
 12760  000BDE  0E00               	movlw	0
 12761  000BE0  6FEB               	movwf	(__bootloader_program@return_value+3)& (0+255),b
 12762  000BE2                     
 12763                           ;bootloader.c: 280: {;bootloader.c: 282: if((hex_file_size-hex_file_offset)>=50)
 12764                           
 12765                           ; BSR set to: 0
 12766  000BE2  C07C  F055         	movff	_hex_file_offset,??__bootloader_program
 12767  000BE6  C07D  F056         	movff	_hex_file_offset+1,??__bootloader_program+1
 12768  000BEA  C07E  F057         	movff	_hex_file_offset+2,??__bootloader_program+2
 12769  000BEE  C07F  F058         	movff	_hex_file_offset+3,??__bootloader_program+3
 12770  000BF2  1E55               	comf	??__bootloader_program,f,c
 12771  000BF4  1E56               	comf	??__bootloader_program+1,f,c
 12772  000BF6  1E57               	comf	??__bootloader_program+2,f,c
 12773  000BF8  1E58               	comf	??__bootloader_program+3,f,c
 12774  000BFA  2A55               	incf	??__bootloader_program,f,c
 12775  000BFC  0E00               	movlw	0
 12776  000BFE  2256               	addwfc	??__bootloader_program+1,f,c
 12777  000C00  2257               	addwfc	??__bootloader_program+2,f,c
 12778  000C02  2258               	addwfc	??__bootloader_program+3,f,c
 12779  000C04  0100               	movlb	0	; () banked
 12780  000C06  5178               	movf	_hex_file_size& (0+255),w,b
 12781  000C08  2455               	addwf	??__bootloader_program,w,c
 12782  000C0A  6E59               	movwf	(??__bootloader_program+4)& (0+255),c
 12783  000C0C  5179               	movf	(_hex_file_size+1)& (0+255),w,b
 12784  000C0E  2056               	addwfc	??__bootloader_program+1,w,c
 12785  000C10  6E5A               	movwf	(??__bootloader_program+5)& (0+255),c
 12786  000C12  517A               	movf	(_hex_file_size+2)& (0+255),w,b
 12787  000C14  2057               	addwfc	??__bootloader_program+2,w,c
 12788  000C16  6E5B               	movwf	(??__bootloader_program+6)& (0+255),c
 12789  000C18  517B               	movf	(_hex_file_size+3)& (0+255),w,b
 12790  000C1A  2058               	addwfc	??__bootloader_program+3,w,c
 12791  000C1C  6E5C               	movwf	(??__bootloader_program+7)& (0+255),c
 12792  000C1E  505C               	movf	??__bootloader_program+7,w,c
 12793  000C20  105B               	iorwf	??__bootloader_program+6,w,c
 12794  000C22  105A               	iorwf	??__bootloader_program+5,w,c
 12795  000C24  E104               	bnz	u10990
 12796  000C26  0E32               	movlw	50
 12797  000C28  5C59               	subwf	??__bootloader_program+4,w,c
 12798  000C2A  A0D8               	btfss	status,0,c
 12799  000C2C  D018               	goto	l2284
 12800  000C2E                     u10990:
 12801                           
 12802                           ; BSR set to: 0
 12803                           ;bootloader.c: 283: {;bootloader.c: 284: fat_read_from_file(file_number, hex_file_offset
      +                          , 50, file_buffer);
 12804  000C2E  C07C  F03F         	movff	_hex_file_offset,fat_read_from_file@start_byte
 12805  000C32  C07D  F040         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 12806  000C36  C07E  F041         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 12807  000C3A  C07F  F042         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 12808  000C3E  0E32               	movlw	50
 12809  000C40  6E43               	movwf	fat_read_from_file@length,c
 12810  000C42  0E00               	movlw	0
 12811  000C44  6E44               	movwf	fat_read_from_file@length+1,c
 12812  000C46  0E00               	movlw	0
 12813  000C48  6E45               	movwf	fat_read_from_file@length+2,c
 12814  000C4A  0E00               	movlw	0
 12815  000C4C  6E46               	movwf	fat_read_from_file@length+3,c
 12816  000C4E  0EC0               	movlw	low _file_buffer
 12817  000C50  6E47               	movwf	fat_read_from_file@data,c
 12818  000C52  0E02               	movlw	high _file_buffer
 12819  000C54  6E48               	movwf	fat_read_from_file@data+1,c
 12820  000C56  51FE               	movf	_file_number& (0+255),w,b
 12821  000C58  EC7B  F00F         	call	_fat_read_from_file
 12822                           
 12823                           ;bootloader.c: 285: }
 12824  000C5C  D02D               	goto	l2285
 12825  000C5E                     l2284:
 12826                           
 12827                           ;bootloader.c: 286: else;bootloader.c: 287: {;bootloader.c: 288: fat_read_from_file(file
      +                          _number, hex_file_offset, (hex_file_size-hex_file_offset), file_buffer);
 12828  000C5E  C07C  F03F         	movff	_hex_file_offset,fat_read_from_file@start_byte
 12829  000C62  C07D  F040         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 12830  000C66  C07E  F041         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 12831  000C6A  C07F  F042         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 12832  000C6E  C07C  F055         	movff	_hex_file_offset,??__bootloader_program
 12833  000C72  C07D  F056         	movff	_hex_file_offset+1,??__bootloader_program+1
 12834  000C76  C07E  F057         	movff	_hex_file_offset+2,??__bootloader_program+2
 12835  000C7A  C07F  F058         	movff	_hex_file_offset+3,??__bootloader_program+3
 12836  000C7E  1E55               	comf	??__bootloader_program,f,c
 12837  000C80  1E56               	comf	??__bootloader_program+1,f,c
 12838  000C82  1E57               	comf	??__bootloader_program+2,f,c
 12839  000C84  1E58               	comf	??__bootloader_program+3,f,c
 12840  000C86  2A55               	incf	??__bootloader_program,f,c
 12841  000C88  0E00               	movlw	0
 12842  000C8A  2256               	addwfc	??__bootloader_program+1,f,c
 12843  000C8C  2257               	addwfc	??__bootloader_program+2,f,c
 12844  000C8E  2258               	addwfc	??__bootloader_program+3,f,c
 12845  000C90  0100               	movlb	0	; () banked
 12846  000C92  5178               	movf	_hex_file_size& (0+255),w,b
 12847  000C94  2455               	addwf	??__bootloader_program,w,c
 12848  000C96  6E43               	movwf	fat_read_from_file@length,c
 12849  000C98  5179               	movf	(_hex_file_size+1)& (0+255),w,b
 12850  000C9A  2056               	addwfc	??__bootloader_program+1,w,c
 12851  000C9C  6E44               	movwf	fat_read_from_file@length+1,c
 12852  000C9E  517A               	movf	(_hex_file_size+2)& (0+255),w,b
 12853  000CA0  2057               	addwfc	??__bootloader_program+2,w,c
 12854  000CA2  6E45               	movwf	fat_read_from_file@length+2,c
 12855  000CA4  517B               	movf	(_hex_file_size+3)& (0+255),w,b
 12856  000CA6  2058               	addwfc	??__bootloader_program+3,w,c
 12857  000CA8  6E46               	movwf	fat_read_from_file@length+3,c
 12858  000CAA  0EC0               	movlw	low _file_buffer
 12859  000CAC  6E47               	movwf	fat_read_from_file@data,c
 12860  000CAE  0E02               	movlw	high _file_buffer
 12861  000CB0  6E48               	movwf	fat_read_from_file@data+1,c
 12862  000CB2  51FE               	movf	_file_number& (0+255),w,b
 12863  000CB4  EC7B  F00F         	call	_fat_read_from_file
 12864  000CB8                     l2285:
 12865                           
 12866                           ;bootloader.c: 289: };bootloader.c: 292: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
 12867  000CB8  0EC0               	movlw	low _file_buffer
 12868  000CBA  6E0C               	movwf	parseHexFileEntry@data,c
 12869  000CBC  0E02               	movlw	high _file_buffer
 12870  000CBE  6E0D               	movwf	parseHexFileEntry@data+1,c
 12871  000CC0  0E00               	movlw	0
 12872  000CC2  6E0E               	movwf	parseHexFileEntry@offset,c
 12873  000CC4  0E00               	movlw	0
 12874  000CC6  6E0F               	movwf	parseHexFileEntry@offset+1,c
 12875  000CC8  0E00               	movlw	0
 12876  000CCA  6E10               	movwf	parseHexFileEntry@offset+2,c
 12877  000CCC  0E00               	movlw	0
 12878  000CCE  6E11               	movwf	parseHexFileEntry@offset+3,c
 12879  000CD0  0EC4               	movlw	low _hex_file_entry
 12880  000CD2  6E12               	movwf	parseHexFileEntry@hexEntry,c
 12881  000CD4  0E01               	movlw	high _hex_file_entry
 12882  000CD6  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
 12883  000CD8  EC10  F000         	call	_parseHexFileEntry	;wreg free
 12884  000CDC  C00C  F0E8         	movff	?_parseHexFileEntry,__bootloader_program@return_value
 12885  000CE0  C00D  F0E9         	movff	?_parseHexFileEntry+1,__bootloader_program@return_value+1
 12886  000CE4  C00E  F0EA         	movff	?_parseHexFileEntry+2,__bootloader_program@return_value+2
 12887  000CE8  C00F  F0EB         	movff	?_parseHexFileEntry+3,__bootloader_program@return_value+3
 12888                           
 12889                           ;bootloader.c: 295: ++hex_file_entries;
 12890  000CEC  0101               	movlb	1	; () banked
 12891  000CEE  4B6A               	infsnz	_hex_file_entries& (0+255),f,b
 12892  000CF0  2B6B               	incf	(_hex_file_entries+1)& (0+255),f,b
 12893                           
 12894                           ; BSR set to: 1
 12895                           ;bootloader.c: 298: if(return_value>RecordErrorNoError)
 12896  000CF2  0EF1               	movlw	241
 12897  000CF4  0100               	movlb	0	; () banked
 12898  000CF6  5DE8               	subwf	__bootloader_program@return_value& (0+255),w,b
 12899  000CF8  0EFF               	movlw	255
 12900  000CFA  59E9               	subwfb	(__bootloader_program@return_value+1)& (0+255),w,b
 12901  000CFC  0EFF               	movlw	255
 12902  000CFE  59EA               	subwfb	(__bootloader_program@return_value+2)& (0+255),w,b
 12903  000D00  0EFF               	movlw	255
 12904  000D02  59EB               	subwfb	(__bootloader_program@return_value+3)& (0+255),w,b
 12905  000D04  A0D8               	btfss	status,0,c
 12906  000D06  D005               	goto	l2286
 12907                           
 12908                           ; BSR set to: 0
 12909                           ;bootloader.c: 299: {;bootloader.c: 301: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAIL
      +                          ED;
 12910  000D08  0E40               	movlw	64
 12911  000D0A  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 12912                           
 12913                           ;bootloader.c: 302: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
 12914  000D0C  0E40               	movlw	64
 12915  000D0E  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 12916                           
 12917                           ; BSR set to: 0
 12918                           ;bootloader.c: 303: return;
 12919  000D10  0012               	return	
 12920  000D12                     l2286:
 12921                           
 12922                           ; BSR set to: 0
 12923                           ;bootloader.c: 311: else;bootloader.c: 312: {;bootloader.c: 314: hex_file_offset += retu
      +                          rn_value;
 12924                           
 12925                           ; BSR set to: 0
 12926  000D12  51E8               	movf	__bootloader_program@return_value& (0+255),w,b
 12927  000D14  277C               	addwf	_hex_file_offset& (0+255),f,b
 12928  000D16  51E9               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
 12929  000D18  237D               	addwfc	(_hex_file_offset+1)& (0+255),f,b
 12930  000D1A  51EA               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
 12931  000D1C  237E               	addwfc	(_hex_file_offset+2)& (0+255),f,b
 12932  000D1E  51EB               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
 12933  000D20  237F               	addwfc	(_hex_file_offset+3)& (0+255),f,b
 12934                           
 12935                           ; BSR set to: 0
 12936                           ;bootloader.c: 315: };bootloader.c: 317: switch(hex_file_entry.recordType)
 12937  000D22  D0FC               	goto	l2289
 12938  000D24                     
 12939                           ;bootloader.c: 323: extended_linear_address = hex_file_entry.data[0];
 12940                           
 12941                           ; BSR set to: 0
 12942  000D24  0101               	movlb	1	; () banked
 12943  000D26  51C9               	movf	(_hex_file_entry+5)& (0+255),w,b
 12944  000D28  6F40               	movwf	_extended_linear_address& (0+255),b
 12945  000D2A  6B41               	clrf	(_extended_linear_address+1)& (0+255),b
 12946  000D2C  6B42               	clrf	(_extended_linear_address+2)& (0+255),b
 12947  000D2E  6B43               	clrf	(_extended_linear_address+3)& (0+255),b
 12948                           
 12949                           ; BSR set to: 1
 12950                           ;bootloader.c: 324: extended_linear_address <<= 8;
 12951  000D30  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12952  000D34  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12953  000D38  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12954  000D3C  6B40               	clrf	_extended_linear_address& (0+255),b
 12955                           
 12956                           ; BSR set to: 1
 12957                           ;bootloader.c: 325: extended_linear_address |= hex_file_entry.data[1];
 12958  000D3E  51CA               	movf	(_hex_file_entry+6)& (0+255),w,b
 12959  000D40  1340               	iorwf	_extended_linear_address& (0+255),f,b
 12960                           
 12961                           ; BSR set to: 1
 12962                           ;bootloader.c: 326: extended_linear_address <<= 8;
 12963  000D42  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12964  000D46  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12965  000D4A  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12966  000D4E  6B40               	clrf	_extended_linear_address& (0+255),b
 12967                           
 12968                           ; BSR set to: 1
 12969                           ;bootloader.c: 327: extended_linear_address <<= 8;
 12970  000D50  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12971  000D54  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12972  000D58  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12973  000D5C  6B40               	clrf	_extended_linear_address& (0+255),b
 12974                           
 12975                           ; BSR set to: 1
 12976                           ;bootloader.c: 329: break;
 12977                           
 12978                           ;bootloader.c: 328: continue;
 12979  000D5E  D741               	goto	l2283
 12980  000D60                     l2293:
 12981                           
 12982                           ; BSR set to: 1
 12983                           ;bootloader.c: 334: start_from_byte = start_from_byte_next;
 12984  000D60  C095  F0F0         	movff	_start_from_byte_next,__bootloader_program@start_from_byte
 12985                           
 12986                           ; BSR set to: 1
 12987                           ;bootloader.c: 336: start_from_byte_next = 0;
 12988  000D64  0E00               	movlw	0
 12989  000D66  0100               	movlb	0	; () banked
 12990  000D68  6F95               	movwf	_start_from_byte_next& (0+255),b
 12991                           
 12992                           ; BSR set to: 0
 12993                           ;bootloader.c: 339: address32 = extended_linear_address + hex_file_entry.address;
 12994  000D6A  0101               	movlb	1	; () banked
 12995  000D6C  51C6               	movf	(_hex_file_entry+2)& (0+255),w,b
 12996  000D6E  2540               	addwf	_extended_linear_address& (0+255),w,b
 12997  000D70  0100               	movlb	0	; () banked
 12998  000D72  6FEC               	movwf	__bootloader_program@address32& (0+255),b
 12999  000D74  0101               	movlb	1	; () banked
 13000  000D76  51C7               	movf	(_hex_file_entry+3)& (0+255),w,b
 13001  000D78  2141               	addwfc	(_extended_linear_address+1)& (0+255),w,b
 13002  000D7A  0100               	movlb	0	; () banked
 13003  000D7C  6FED               	movwf	(__bootloader_program@address32+1)& (0+255),b
 13004  000D7E  0E00               	movlw	0
 13005  000D80  0101               	movlb	1	; () banked
 13006  000D82  2142               	addwfc	(_extended_linear_address+2)& (0+255),w,b
 13007  000D84  0100               	movlb	0	; () banked
 13008  000D86  6FEE               	movwf	(__bootloader_program@address32+2)& (0+255),b
 13009  000D88  0E00               	movlw	0
 13010  000D8A  0101               	movlb	1	; () banked
 13011  000D8C  2143               	addwfc	(_extended_linear_address+3)& (0+255),w,b
 13012  000D8E  0100               	movlb	0	; () banked
 13013  000D90  6FEF               	movwf	(__bootloader_program@address32+3)& (0+255),b
 13014                           
 13015                           ; BSR set to: 0
 13016                           ;bootloader.c: 340: entry_page = internalFlash_pageFromAddress(address32 + start_from_by
      +                          te);
 13017  000D92  51F0               	movf	__bootloader_program@start_from_byte& (0+255),w,b
 13018  000D94  25EC               	addwf	__bootloader_program@address32& (0+255),w,b
 13019  000D96  6E01               	movwf	internalFlash_pageFromAddress@address,c
 13020  000D98  0E00               	movlw	0
 13021  000D9A  21ED               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 13022  000D9C  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
 13023  000D9E  0E00               	movlw	0
 13024  000DA0  21EE               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 13025  000DA2  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
 13026  000DA4  0E00               	movlw	0
 13027  000DA6  21EF               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 13028  000DA8  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
 13029  000DAA  EC2C  F03E         	call	_internalFlash_pageFromAddress	;wreg free
 13030  000DAE  C001  F0E4         	movff	?_internalFlash_pageFromAddress,__bootloader_program@entry_page
 13031  000DB2  C002  F0E5         	movff	?_internalFlash_pageFromAddress+1,__bootloader_program@entry_page+1
 13032                           
 13033                           ;bootloader.c: 343: if(_bootloader_check_address(address32+start_from_byte, hex_file_ent
      +                          ry.dataLength-start_from_byte) != ADDRESS_CHECK_RESULT_OK)
 13034  000DB6  0100               	movlb	0	; () banked
 13035  000DB8  51F0               	movf	__bootloader_program@start_from_byte& (0+255),w,b
 13036  000DBA  25EC               	addwf	__bootloader_program@address32& (0+255),w,b
 13037  000DBC  6E01               	movwf	__bootloader_check_address@address,c
 13038  000DBE  0E00               	movlw	0
 13039  000DC0  21ED               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 13040  000DC2  6E02               	movwf	__bootloader_check_address@address+1,c
 13041  000DC4  0E00               	movlw	0
 13042  000DC6  21EE               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 13043  000DC8  6E03               	movwf	__bootloader_check_address@address+2,c
 13044  000DCA  0E00               	movlw	0
 13045  000DCC  21EF               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 13046  000DCE  6E04               	movwf	__bootloader_check_address@address+3,c
 13047  000DD0  51F0               	movf	__bootloader_program@start_from_byte& (0+255),w,b
 13048  000DD2  0800               	sublw	0
 13049  000DD4  0101               	movlb	1	; () banked
 13050  000DD6  25C4               	addwf	_hex_file_entry& (0+255),w,b
 13051  000DD8  6E05               	movwf	__bootloader_check_address@dataLength,c
 13052  000DDA  ECD8  F025         	call	__bootloader_check_address	;wreg free
 13053  000DDE  0900               	iorlw	0
 13054  000DE0  A4D8               	btfss	status,2,c
 13055  000DE2  D6FF               	goto	l2283
 13056                           
 13057                           ;bootloader.c: 346: };bootloader.c: 348: if(page_to_write==0)
 13058                           
 13059                           ;bootloader.c: 344: {;bootloader.c: 345: break;
 13060  000DE4  0100               	movlb	0	; () banked
 13061  000DE6  51F3               	movf	__bootloader_program@page_to_write& (0+255),w,b
 13062  000DE8  11F4               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
 13063  000DEA  A4D8               	btfss	status,2,c
 13064  000DEC  D010               	goto	l2295
 13065                           
 13066                           ; BSR set to: 0
 13067                           ;bootloader.c: 349: {;bootloader.c: 353: page_to_write = entry_page;
 13068  000DEE  C0E4  F0F3         	movff	__bootloader_program@entry_page,__bootloader_program@page_to_write
 13069  000DF2  C0E5  F0F4         	movff	__bootloader_program@entry_page+1,__bootloader_program@page_to_write+1
 13070                           
 13071                           ; BSR set to: 0
 13072                           ;bootloader.c: 354: internalFlash_readPage(page_to_write);
 13073  000DF6  C0F3  F016         	movff	__bootloader_program@page_to_write,internalFlash_readPage@page
 13074  000DFA  C0F4  F017         	movff	__bootloader_program@page_to_write+1,internalFlash_readPage@page+1
 13075  000DFE  EC6A  F03A         	call	_internalFlash_readPage	;wreg free
 13076                           
 13077                           ;bootloader.c: 355: buffer = internalFlash_getBuffer();
 13078  000E02  ECCB  F03E         	call	_internalFlash_getBuffer	;wreg free
 13079  000E06  C001  F0E2         	movff	?_internalFlash_getBuffer,__bootloader_program@buffer
 13080  000E0A  C002  F0E3         	movff	?_internalFlash_getBuffer+1,__bootloader_program@buffer+1
 13081  000E0E                     l2295:
 13082                           
 13083                           ;bootloader.c: 356: };bootloader.c: 358: for(cntr=start_from_byte; cntr<hex_file_entry.d
      +                          ataLength; ++cntr)
 13084  000E0E  C0F0  F0F1         	movff	__bootloader_program@start_from_byte,__bootloader_program@cntr
 13085  000E12  0100               	movlb	0	; () banked
 13086  000E14  6BF2               	clrf	(__bootloader_program@cntr+1)& (0+255),b
 13087  000E16  D05D               	goto	l2296
 13088  000E18                     
 13089                           ; BSR set to: 0
 13090                           ;bootloader.c: 359: {;bootloader.c: 362: if(internalFlash_pageFromAddress(address32+cntr
      +                          ) == page_to_write)
 13091                           
 13092                           ; BSR set to: 0
 13093  000E18  51F1               	movf	__bootloader_program@cntr& (0+255),w,b
 13094  000E1A  25EC               	addwf	__bootloader_program@address32& (0+255),w,b
 13095  000E1C  6E01               	movwf	internalFlash_pageFromAddress@address,c
 13096  000E1E  51F2               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
 13097  000E20  21ED               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 13098  000E22  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
 13099  000E24  0E00               	movlw	0
 13100  000E26  21EE               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 13101  000E28  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
 13102  000E2A  0E00               	movlw	0
 13103  000E2C  21EF               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 13104  000E2E  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
 13105  000E30  EC2C  F03E         	call	_internalFlash_pageFromAddress	;wreg free
 13106  000E34  0100               	movlb	0	; () banked
 13107  000E36  51F3               	movf	__bootloader_program@page_to_write& (0+255),w,b
 13108  000E38  1801               	xorwf	?_internalFlash_pageFromAddress,w,c
 13109  000E3A  E12A               	bnz	l14074
 13110  000E3C  51F4               	movf	(__bootloader_program@page_to_write+1)& (0+255),w,b
 13111  000E3E  1802               	xorwf	?_internalFlash_pageFromAddress+1,w,c
 13112  000E40  A4D8               	btfss	status,2,c
 13113  000E42  D026               	goto	l2298
 13114                           
 13115                           ; BSR set to: 0
 13116                           ;bootloader.c: 363: {;bootloader.c: 364: address_within_page = internalFlash_addressWith
      +                          inPage(address32+cntr, page_to_write);
 13117  000E44  51F1               	movf	__bootloader_program@cntr& (0+255),w,b
 13118  000E46  25EC               	addwf	__bootloader_program@address32& (0+255),w,b
 13119  000E48  6E09               	movwf	internalFlash_addressWithinPage@address,c
 13120  000E4A  51F2               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
 13121  000E4C  21ED               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 13122  000E4E  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
 13123  000E50  0E00               	movlw	0
 13124  000E52  21EE               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 13125  000E54  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
 13126  000E56  0E00               	movlw	0
 13127  000E58  21EF               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 13128  000E5A  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
 13129  000E5C  C0F3  F00D         	movff	__bootloader_program@page_to_write,internalFlash_addressWithinPage@page
 13130  000E60  C0F4  F00E         	movff	__bootloader_program@page_to_write+1,internalFlash_addressWithinPage@page+1
 13131  000E64  EC34  F036         	call	_internalFlash_addressWithinPage	;wreg free
 13132  000E68  C009  F0E6         	movff	?_internalFlash_addressWithinPage,__bootloader_program@address_within_page
 13133  000E6C  C00A  F0E7         	movff	?_internalFlash_addressWithinPage+1,__bootloader_program@address_within_page+1
 13134                           
 13135                           ;bootloader.c: 365: buffer[address_within_page] = hex_file_entry.data[cntr];
 13136  000E70  0EC9               	movlw	low (_hex_file_entry+5)
 13137  000E72  0100               	movlb	0	; () banked
 13138  000E74  25F1               	addwf	__bootloader_program@cntr& (0+255),w,b
 13139  000E76  6ED9               	movwf	fsr2l,c
 13140  000E78  0E01               	movlw	high (_hex_file_entry+5)
 13141  000E7A  21F2               	addwfc	(__bootloader_program@cntr+1)& (0+255),w,b
 13142  000E7C  6EDA               	movwf	fsr2h,c
 13143  000E7E  51E6               	movf	__bootloader_program@address_within_page& (0+255),w,b
 13144  000E80  25E2               	addwf	__bootloader_program@buffer& (0+255),w,b
 13145  000E82  6EE1               	movwf	fsr1l,c
 13146  000E84  51E7               	movf	(__bootloader_program@address_within_page+1)& (0+255),w,b
 13147  000E86  21E3               	addwfc	(__bootloader_program@buffer+1)& (0+255),w,b
 13148  000E88  6EE2               	movwf	fsr1h,c
 13149  000E8A  CFDF FFE7          	movff	indf2,indf1
 13150                           
 13151                           ;bootloader.c: 366: }
 13152  000E8E  D01E               	goto	l2299
 13153  000E90                     l2298:
 13154  000E90                     l14074:
 13155                           
 13156                           ; BSR set to: 0
 13157                           ;bootloader.c: 367: else;bootloader.c: 368: {;bootloader.c: 370: hex_file_offset -= retu
      +                          rn_value;
 13158  000E90  51E8               	movf	__bootloader_program@return_value& (0+255),w,b
 13159  000E92  5F7C               	subwf	_hex_file_offset& (0+255),f,b
 13160  000E94  51E9               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
 13161  000E96  5B7D               	subwfb	(_hex_file_offset+1)& (0+255),f,b
 13162  000E98  51EA               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
 13163  000E9A  5B7E               	subwfb	(_hex_file_offset+2)& (0+255),f,b
 13164  000E9C  51EB               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
 13165  000E9E  5B7F               	subwfb	(_hex_file_offset+3)& (0+255),f,b
 13166                           
 13167                           ; BSR set to: 0
 13168                           ;bootloader.c: 371: --hex_file_entries;
 13169  000EA0  0101               	movlb	1	; () banked
 13170  000EA2  076A               	decf	_hex_file_entries& (0+255),f,b
 13171  000EA4  A0D8               	btfss	status,0,c
 13172  000EA6  076B               	decf	(_hex_file_entries+1)& (0+255),f,b
 13173                           
 13174                           ; BSR set to: 1
 13175                           ;bootloader.c: 373: start_from_byte_next = cntr;
 13176  000EA8  C0F1  F095         	movff	__bootloader_program@cntr,_start_from_byte_next
 13177                           
 13178                           ; BSR set to: 1
 13179                           ;bootloader.c: 375: internalFlash_erasePage(page_to_write);
 13180  000EAC  C0F3  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
 13181  000EB0  C0F4  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
 13182  000EB4  EC03  F03C         	call	_internalFlash_erasePage	;wreg free
 13183                           
 13184                           ;bootloader.c: 376: internalFlash_writePage(page_to_write);
 13185  000EB8  C0F3  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
 13186  000EBC  C0F4  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
 13187  000EC0  ECAA  F031         	call	_internalFlash_writePage	;wreg free
 13188                           
 13189                           ;bootloader.c: 377: ++flash_pages_written;
 13190  000EC4  0101               	movlb	1	; () banked
 13191  000EC6  4B66               	infsnz	_flash_pages_written& (0+255),f,b
 13192  000EC8  2B67               	incf	(_flash_pages_written+1)& (0+255),f,b
 13193                           
 13194                           ; BSR set to: 1
 13195                           ;bootloader.c: 379: return;
 13196  000ECA  0012               	return	
 13197  000ECC                     l2299:
 13198                           
 13199                           ; BSR set to: 1
 13200  000ECC  0100               	movlb	0	; () banked
 13201  000ECE  4BF1               	infsnz	__bootloader_program@cntr& (0+255),f,b
 13202  000ED0  2BF2               	incf	(__bootloader_program@cntr+1)& (0+255),f,b
 13203  000ED2                     l2296:
 13204                           
 13205                           ; BSR set to: 0
 13206                           
 13207                           ; BSR set to: 0
 13208  000ED2  0101               	movlb	1	; () banked
 13209  000ED4  51C4               	movf	_hex_file_entry& (0+255),w,b
 13210  000ED6  0100               	movlb	0	; () banked
 13211  000ED8  5DF1               	subwf	__bootloader_program@cntr& (0+255),w,b
 13212  000EDA  0101               	movlb	1	; () banked
 13213  000EDC  51C5               	movf	(_hex_file_entry+1)& (0+255),w,b
 13214  000EDE  0100               	movlb	0	; () banked
 13215  000EE0  59F2               	subwfb	(__bootloader_program@cntr+1)& (0+255),w,b
 13216  000EE2  B0D8               	btfsc	status,0,c
 13217  000EE4  D67E               	goto	l2283
 13218  000EE6  D798               	goto	l2297
 13219  000EE8                     
 13220                           ;bootloader.c: 387: if(page_to_write!=0)
 13221                           
 13222                           ; BSR set to: 0
 13223  000EE8  0100               	movlb	0	; () banked
 13224  000EEA  51F3               	movf	__bootloader_program@page_to_write& (0+255),w,b
 13225  000EEC  11F4               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
 13226  000EEE  B4D8               	btfsc	status,2,c
 13227  000EF0  0012               	return	
 13228                           
 13229                           ; BSR set to: 0
 13230                           ;bootloader.c: 388: {;bootloader.c: 390: internalFlash_erasePage(page_to_write);
 13231  000EF2  C0F3  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
 13232  000EF6  C0F4  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
 13233  000EFA  EC03  F03C         	call	_internalFlash_erasePage	;wreg free
 13234                           
 13235                           ;bootloader.c: 391: internalFlash_writePage(page_to_write);
 13236  000EFE  C0F3  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
 13237  000F02  C0F4  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
 13238  000F06  ECAA  F031         	call	_internalFlash_writePage	;wreg free
 13239                           
 13240                           ;bootloader.c: 392: ++flash_pages_written;
 13241  000F0A  0101               	movlb	1	; () banked
 13242  000F0C  4B66               	infsnz	_flash_pages_written& (0+255),f,b
 13243  000F0E  2B67               	incf	(_flash_pages_written+1)& (0+255),f,b
 13244                           
 13245                           ; BSR set to: 1
 13246                           ;bootloader.c: 394: os.bootloader_mode = BOOTLOADER_MODE_DONE;
 13247  000F10  0E60               	movlw	96
 13248  000F12  0100               	movlb	0	; () banked
 13249  000F14  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 13250                           
 13251                           ; BSR set to: 0
 13252                           ;bootloader.c: 395: os.display_mode = DISPLAY_MODE_BOOTLOADER_DONE;
 13253  000F16  0E60               	movlw	96
 13254  000F18  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 13255                           
 13256                           ; BSR set to: 0
 13257                           ;bootloader.c: 396: };bootloader.c: 398: return;
 13258                           
 13259                           ; BSR set to: 0
 13260  000F1A  0012               	return	
 13261  000F1C                     l2289:
 13262                           
 13263                           ; BSR set to: 0
 13264                           
 13265                           ; BSR set to: 0
 13266  000F1C  0101               	movlb	1	; () banked
 13267  000F1E  51C8               	movf	(_hex_file_entry+4)& (0+255),w,b
 13268                           
 13269                           ; Switch size 1, requested type "space"
 13270                           ; Number of cases is 3, Range of values is 0 to 4
 13271                           ; switch strategies available:
 13272                           ; Name         Instructions Cycles
 13273                           ; simple_byte           10     6 (average)
 13274                           ;	Chosen strategy is simple_byte
 13275  000F20  0A00               	xorlw	0	; case 0
 13276  000F22  B4D8               	btfsc	status,2,c
 13277  000F24  D71D               	goto	l2293
 13278  000F26  0A01               	xorlw	1	; case 1
 13279  000F28  B4D8               	btfsc	status,2,c
 13280  000F2A  D7DE               	goto	l2301
 13281  000F2C  0A05               	xorlw	5	; case 4
 13282  000F2E  B4D8               	btfsc	status,2,c
 13283  000F30  D6F9               	goto	l2290
 13284                           
 13285                           ; BSR set to: 1
 13286                           
 13287                           ; BSR set to: 1
 13288  000F32  D657               	goto	l2283
 13289  000F34                     __end_of__bootloader_program:
 13290                           	opt stack 0
 13291                           tblptru	equ	0xFF8
 13292                           tblptrh	equ	0xFF7
 13293                           tblptrl	equ	0xFF6
 13294                           tablat	equ	0xFF5
 13295                           prodh	equ	0xFF4
 13296                           prodl	equ	0xFF3
 13297                           intcon	equ	0xFF2
 13298                           intcon2	equ	0xFF1
 13299                           intcon3	equ	0xFF0
 13300                           postinc0	equ	0xFEE
 13301                           wreg	equ	0xFE8
 13302                           indf1	equ	0xFE7
 13303                           postdec1	equ	0xFE5
 13304                           plusw1	equ	0xFE3
 13305                           fsr1h	equ	0xFE2
 13306                           fsr1l	equ	0xFE1
 13307                           indf2	equ	0xFDF
 13308                           postinc2	equ	0xFDE
 13309                           plusw2	equ	0xFDB
 13310                           fsr2h	equ	0xFDA
 13311                           fsr2l	equ	0xFD9
 13312                           status	equ	0xFD8
 13313                           
 13314 ;; *************** function _parseHexFileEntry *****************
 13315 ;; Defined at:
 13316 ;;		line 59 in file "hex.c"
 13317 ;; Parameters:    Size  Location     Type
 13318 ;;  data            2   11[COMRAM] PTR unsigned char 
 13319 ;;		 -> file_buffer(50), 
 13320 ;;  offset          4   13[COMRAM] unsigned long 
 13321 ;;  hexEntry        2   17[COMRAM] PTR struct HexFileEntry
 13322 ;;		 -> hex_file_entry(23), 
 13323 ;; Auto vars:     Size  Location     Type
 13324 ;;  i               1   27[COMRAM] unsigned char 
 13325 ;; Return value:  Size  Location     Type
 13326 ;;                  4   11[COMRAM] unsigned long 
 13327 ;; Registers used:
 13328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13329 ;; Tracked objects:
 13330 ;;		On entry : 0/0
 13331 ;;		On exit  : 0/0
 13332 ;;		Unchanged: 0/0
 13333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13334 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13335 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13336 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13337 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13338 ;;Total ram usage:       17 bytes
 13339 ;; Hardware stack levels used:    1
 13340 ;; Hardware stack levels required when called:    2
 13341 ;; This function calls:
 13342 ;;		_hexCharsToUint16
 13343 ;;		_hexCharsToUint8
 13344 ;; This function is called by:
 13345 ;;		__bootloader_verify_file
 13346 ;;		__bootloader_program
 13347 ;; This function uses a non-reentrant model
 13348 ;;
 13349                           
 13350                           	psect	text53
 13351  000020                     __ptext53:
 13352                           	opt stack 0
 13353  000020                     _parseHexFileEntry:
 13354                           	opt stack 26
 13355                           
 13356                           ;hex.c: 61: uint8_t i;;hex.c: 64: if (data[offset] != ':')
 13357                           
 13358                           ;incstack = 0
 13359  000020  500E               	movf	parseHexFileEntry@offset,w,c
 13360  000022  240C               	addwf	parseHexFileEntry@data,w,c
 13361  000024  6ED9               	movwf	fsr2l,c
 13362  000026  500F               	movf	parseHexFileEntry@offset+1,w,c
 13363  000028  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13364  00002A  6EDA               	movwf	fsr2h,c
 13365  00002C  0E3A               	movlw	58
 13366  00002E  18DE               	xorwf	postinc2,w,c
 13367  000030  B4D8               	btfsc	status,2,c
 13368  000032  D005               	goto	l2153
 13369                           
 13370                           ;hex.c: 65: {;hex.c: 66: return (uint32_t) RecordErrorStartCode;
 13371  000034  680C               	setf	?_parseHexFileEntry,c
 13372  000036  680D               	setf	?_parseHexFileEntry+1,c
 13373  000038  680E               	setf	?_parseHexFileEntry+2,c
 13374  00003A  680F               	setf	?_parseHexFileEntry+3,c
 13375  00003C  0012               	return	
 13376  00003E                     l2153:
 13377                           
 13378                           ;hex.c: 67: };hex.c: 70: hexEntry->dataLength = hexCharsToUint8(data[offset + 1], data[o
      +                          ffset + 2]);
 13379  00003E  0E02               	movlw	2
 13380  000040  240E               	addwf	parseHexFileEntry@offset,w,c
 13381  000042  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13382  000044  0E00               	movlw	0
 13383  000046  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13384  000048  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
 13385  00004A  5014               	movf	??_parseHexFileEntry,w,c
 13386  00004C  240C               	addwf	parseHexFileEntry@data,w,c
 13387  00004E  6ED9               	movwf	fsr2l,c
 13388  000050  5015               	movf	??_parseHexFileEntry+1,w,c
 13389  000052  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13390  000054  6EDA               	movwf	fsr2h,c
 13391  000056  50DF               	movf	indf2,w,c
 13392  000058  6E03               	movwf	hexCharsToUint8@c2,c
 13393  00005A  0E01               	movlw	1
 13394  00005C  240E               	addwf	parseHexFileEntry@offset,w,c
 13395  00005E  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13396  000060  0E00               	movlw	0
 13397  000062  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13398  000064  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 13399  000066  5016               	movf	??_parseHexFileEntry+2,w,c
 13400  000068  240C               	addwf	parseHexFileEntry@data,w,c
 13401  00006A  6ED9               	movwf	fsr2l,c
 13402  00006C  5017               	movf	??_parseHexFileEntry+3,w,c
 13403  00006E  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13404  000070  6EDA               	movwf	fsr2h,c
 13405  000072  50DF               	movf	indf2,w,c
 13406  000074  EC1E  F03E         	call	_hexCharsToUint8
 13407  000078  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
 13408  00007A  6A19               	clrf	(??_parseHexFileEntry+5)& (0+255),c
 13409  00007C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 13410  000080  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 13411  000084  C018  FFDE         	movff	??_parseHexFileEntry+4,postinc2
 13412  000088  C019  FFDD         	movff	??_parseHexFileEntry+5,postdec2
 13413                           
 13414                           ;hex.c: 71: if (hexEntry->dataLength > 16)
 13415  00008C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 13416  000090  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 13417  000094  0E01               	movlw	1
 13418  000096  50DB               	movf	plusw2,w,c
 13419  000098  E104               	bnz	u9680
 13420  00009A  0E11               	movlw	17
 13421  00009C  5CDE               	subwf	postinc2,w,c
 13422  00009E  A0D8               	btfss	status,0,c
 13423  0000A0  D009               	goto	l2155
 13424  0000A2                     u9680:
 13425                           
 13426                           ;hex.c: 72: {;hex.c: 73: return (uint32_t) RecordErrorDataTooLong;
 13427  0000A2  0EFC               	movlw	252
 13428  0000A4  6E0C               	movwf	?_parseHexFileEntry,c
 13429  0000A6  0EFF               	movlw	255
 13430  0000A8  6E0D               	movwf	?_parseHexFileEntry+1,c
 13431  0000AA  0EFF               	movlw	255
 13432  0000AC  6E0E               	movwf	?_parseHexFileEntry+2,c
 13433  0000AE  0EFF               	movlw	255
 13434  0000B0  6E0F               	movwf	?_parseHexFileEntry+3,c
 13435  0000B2  0012               	return	
 13436  0000B4                     l2155:
 13437                           
 13438                           ;hex.c: 74: };hex.c: 77: hexEntry->address = hexCharsToUint16(data[offset + 3], data[off
      +                          set + 4], data[offset + 5], data[offset + 6]);
 13439  0000B4  0E04               	movlw	4
 13440  0000B6  240E               	addwf	parseHexFileEntry@offset,w,c
 13441  0000B8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13442  0000BA  0E00               	movlw	0
 13443  0000BC  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13444  0000BE  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
 13445  0000C0  5014               	movf	??_parseHexFileEntry,w,c
 13446  0000C2  240C               	addwf	parseHexFileEntry@data,w,c
 13447  0000C4  6ED9               	movwf	fsr2l,c
 13448  0000C6  5015               	movf	??_parseHexFileEntry+1,w,c
 13449  0000C8  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13450  0000CA  6EDA               	movwf	fsr2h,c
 13451  0000CC  50DF               	movf	indf2,w,c
 13452  0000CE  6E03               	movwf	hexCharsToUint16@c2,c
 13453  0000D0  0E05               	movlw	5
 13454  0000D2  240E               	addwf	parseHexFileEntry@offset,w,c
 13455  0000D4  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13456  0000D6  0E00               	movlw	0
 13457  0000D8  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13458  0000DA  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 13459  0000DC  5016               	movf	??_parseHexFileEntry+2,w,c
 13460  0000DE  240C               	addwf	parseHexFileEntry@data,w,c
 13461  0000E0  6ED9               	movwf	fsr2l,c
 13462  0000E2  5017               	movf	??_parseHexFileEntry+3,w,c
 13463  0000E4  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13464  0000E6  6EDA               	movwf	fsr2h,c
 13465  0000E8  50DF               	movf	indf2,w,c
 13466  0000EA  6E04               	movwf	hexCharsToUint16@c3,c
 13467  0000EC  0E06               	movlw	6
 13468  0000EE  240E               	addwf	parseHexFileEntry@offset,w,c
 13469  0000F0  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
 13470  0000F2  0E00               	movlw	0
 13471  0000F4  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13472  0000F6  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
 13473  0000F8  5018               	movf	??_parseHexFileEntry+4,w,c
 13474  0000FA  240C               	addwf	parseHexFileEntry@data,w,c
 13475  0000FC  6ED9               	movwf	fsr2l,c
 13476  0000FE  5019               	movf	??_parseHexFileEntry+5,w,c
 13477  000100  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13478  000102  6EDA               	movwf	fsr2h,c
 13479  000104  50DF               	movf	indf2,w,c
 13480  000106  6E05               	movwf	hexCharsToUint16@c4,c
 13481  000108  0E03               	movlw	3
 13482  00010A  240E               	addwf	parseHexFileEntry@offset,w,c
 13483  00010C  6E1A               	movwf	(??_parseHexFileEntry+6)& (0+255),c
 13484  00010E  0E00               	movlw	0
 13485  000110  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13486  000112  6E1B               	movwf	(??_parseHexFileEntry+7)& (0+255),c
 13487  000114  501A               	movf	??_parseHexFileEntry+6,w,c
 13488  000116  240C               	addwf	parseHexFileEntry@data,w,c
 13489  000118  6ED9               	movwf	fsr2l,c
 13490  00011A  501B               	movf	??_parseHexFileEntry+7,w,c
 13491  00011C  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13492  00011E  6EDA               	movwf	fsr2h,c
 13493  000120  50DF               	movf	indf2,w,c
 13494  000122  EC86  F033         	call	_hexCharsToUint16
 13495  000126  EE20 F002          	lfsr	2,2
 13496  00012A  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13497  00012C  26D9               	addwf	fsr2l,f,c
 13498  00012E  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13499  000130  22DA               	addwfc	fsr2h,f,c
 13500  000132  C003  FFDE         	movff	?_hexCharsToUint16,postinc2
 13501  000136  C004  FFDD         	movff	?_hexCharsToUint16+1,postdec2
 13502                           
 13503                           ;hex.c: 80: hexEntry->recordType = (RecordType_t)hexCharsToUint8(data[offset + 7], data[
      +                          offset + 8]);
 13504  00013A  EE20 F004          	lfsr	2,4
 13505  00013E  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13506  000140  26D9               	addwf	fsr2l,f,c
 13507  000142  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13508  000144  22DA               	addwfc	fsr2h,f,c
 13509  000146  0E08               	movlw	8
 13510  000148  240E               	addwf	parseHexFileEntry@offset,w,c
 13511  00014A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13512  00014C  0E00               	movlw	0
 13513  00014E  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13514  000150  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
 13515  000152  5014               	movf	??_parseHexFileEntry,w,c
 13516  000154  240C               	addwf	parseHexFileEntry@data,w,c
 13517  000156  6EE1               	movwf	fsr1l,c
 13518  000158  5015               	movf	??_parseHexFileEntry+1,w,c
 13519  00015A  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13520  00015C  6EE2               	movwf	fsr1h,c
 13521  00015E  50E7               	movf	indf1,w,c
 13522  000160  6E03               	movwf	hexCharsToUint8@c2,c
 13523  000162  0E07               	movlw	7
 13524  000164  240E               	addwf	parseHexFileEntry@offset,w,c
 13525  000166  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13526  000168  0E00               	movlw	0
 13527  00016A  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13528  00016C  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 13529  00016E  5016               	movf	??_parseHexFileEntry+2,w,c
 13530  000170  240C               	addwf	parseHexFileEntry@data,w,c
 13531  000172  6EE1               	movwf	fsr1l,c
 13532  000174  5017               	movf	??_parseHexFileEntry+3,w,c
 13533  000176  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13534  000178  6EE2               	movwf	fsr1h,c
 13535  00017A  50E7               	movf	indf1,w,c
 13536  00017C  EC1E  F03E         	call	_hexCharsToUint8
 13537  000180  6EDF               	movwf	indf2,c
 13538                           
 13539                           ;hex.c: 83: for (i = 0; i < hexEntry->dataLength; ++i)
 13540  000182  0E00               	movlw	0
 13541  000184  6E1C               	movwf	parseHexFileEntry@i,c
 13542  000186  D03D               	goto	l2156
 13543  000188                     
 13544                           ;hex.c: 84: {;hex.c: 85: hexEntry->data[i] = hexCharsToUint8(data[offset + 9 + i + i], d
      +                          ata[offset + 10 + i + i]);
 13545  000188  501C               	movf	parseHexFileEntry@i,w,c
 13546  00018A  0D01               	mullw	1
 13547  00018C  0E05               	movlw	5
 13548  00018E  26F3               	addwf	prodl,f,c
 13549  000190  0E00               	movlw	0
 13550  000192  22F4               	addwfc	prodh,f,c
 13551  000194  50F3               	movf	prodl,w,c
 13552  000196  2412               	addwf	parseHexFileEntry@hexEntry,w,c
 13553  000198  6ED9               	movwf	fsr2l,c
 13554  00019A  50F4               	movf	prodh,w,c
 13555  00019C  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
 13556  00019E  6EDA               	movwf	fsr2h,c
 13557  0001A0  501C               	movf	parseHexFileEntry@i,w,c
 13558  0001A2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
 13559  0001A6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
 13560  0001A8  2614               	addwf	??_parseHexFileEntry,f,c
 13561  0001AA  0E00               	movlw	0
 13562  0001AC  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13563  0001AE  500E               	movf	parseHexFileEntry@offset,w,c
 13564  0001B0  2614               	addwf	??_parseHexFileEntry,f,c
 13565  0001B2  500F               	movf	parseHexFileEntry@offset+1,w,c
 13566  0001B4  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13567  0001B6  0E0A               	movlw	10
 13568  0001B8  2614               	addwf	??_parseHexFileEntry,f,c
 13569  0001BA  0E00               	movlw	0
 13570  0001BC  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13571  0001BE  5014               	movf	??_parseHexFileEntry,w,c
 13572  0001C0  240C               	addwf	parseHexFileEntry@data,w,c
 13573  0001C2  6EE1               	movwf	fsr1l,c
 13574  0001C4  5015               	movf	??_parseHexFileEntry+1,w,c
 13575  0001C6  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13576  0001C8  6EE2               	movwf	fsr1h,c
 13577  0001CA  50E7               	movf	indf1,w,c
 13578  0001CC  6E03               	movwf	hexCharsToUint8@c2,c
 13579  0001CE  501C               	movf	parseHexFileEntry@i,w,c
 13580  0001D0  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
 13581  0001D4  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 13582  0001D6  2616               	addwf	??_parseHexFileEntry+2,f,c
 13583  0001D8  0E00               	movlw	0
 13584  0001DA  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13585  0001DC  500E               	movf	parseHexFileEntry@offset,w,c
 13586  0001DE  2616               	addwf	??_parseHexFileEntry+2,f,c
 13587  0001E0  500F               	movf	parseHexFileEntry@offset+1,w,c
 13588  0001E2  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13589  0001E4  0E09               	movlw	9
 13590  0001E6  2616               	addwf	??_parseHexFileEntry+2,f,c
 13591  0001E8  0E00               	movlw	0
 13592  0001EA  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13593  0001EC  5016               	movf	??_parseHexFileEntry+2,w,c
 13594  0001EE  240C               	addwf	parseHexFileEntry@data,w,c
 13595  0001F0  6EE1               	movwf	fsr1l,c
 13596  0001F2  5017               	movf	??_parseHexFileEntry+3,w,c
 13597  0001F4  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13598  0001F6  6EE2               	movwf	fsr1h,c
 13599  0001F8  50E7               	movf	indf1,w,c
 13600  0001FA  EC1E  F03E         	call	_hexCharsToUint8
 13601  0001FE  6EDF               	movwf	indf2,c
 13602  000200  2A1C               	incf	parseHexFileEntry@i,f,c
 13603  000202                     l2156:
 13604  000202  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 13605  000206  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 13606  00020A  501C               	movf	parseHexFileEntry@i,w,c
 13607  00020C  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13608  00020E  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 13609  000210  50DE               	movf	postinc2,w,c
 13610  000212  5C16               	subwf	??_parseHexFileEntry+2,w,c
 13611  000214  50DE               	movf	postinc2,w,c
 13612  000216  5817               	subwfb	??_parseHexFileEntry+3,w,c
 13613  000218  A0D8               	btfss	status,0,c
 13614  00021A  D7B6               	goto	l2157
 13615                           
 13616                           ;hex.c: 86: };hex.c: 89: hexEntry->checksum = hexCharsToUint8(data[offset + 9 + i + i], 
      +                          data[offset + 10 + i + i]);
 13617  00021C  EE20 F015          	lfsr	2,21
 13618  000220  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13619  000222  26D9               	addwf	fsr2l,f,c
 13620  000224  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13621  000226  22DA               	addwfc	fsr2h,f,c
 13622  000228  501C               	movf	parseHexFileEntry@i,w,c
 13623  00022A  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
 13624  00022E  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
 13625  000230  2614               	addwf	??_parseHexFileEntry,f,c
 13626  000232  0E00               	movlw	0
 13627  000234  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13628  000236  500E               	movf	parseHexFileEntry@offset,w,c
 13629  000238  2614               	addwf	??_parseHexFileEntry,f,c
 13630  00023A  500F               	movf	parseHexFileEntry@offset+1,w,c
 13631  00023C  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13632  00023E  0E0A               	movlw	10
 13633  000240  2614               	addwf	??_parseHexFileEntry,f,c
 13634  000242  0E00               	movlw	0
 13635  000244  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13636  000246  5014               	movf	??_parseHexFileEntry,w,c
 13637  000248  240C               	addwf	parseHexFileEntry@data,w,c
 13638  00024A  6EE1               	movwf	fsr1l,c
 13639  00024C  5015               	movf	??_parseHexFileEntry+1,w,c
 13640  00024E  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13641  000250  6EE2               	movwf	fsr1h,c
 13642  000252  50E7               	movf	indf1,w,c
 13643  000254  6E03               	movwf	hexCharsToUint8@c2,c
 13644  000256  501C               	movf	parseHexFileEntry@i,w,c
 13645  000258  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
 13646  00025C  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 13647  00025E  2616               	addwf	??_parseHexFileEntry+2,f,c
 13648  000260  0E00               	movlw	0
 13649  000262  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13650  000264  500E               	movf	parseHexFileEntry@offset,w,c
 13651  000266  2616               	addwf	??_parseHexFileEntry+2,f,c
 13652  000268  500F               	movf	parseHexFileEntry@offset+1,w,c
 13653  00026A  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13654  00026C  0E09               	movlw	9
 13655  00026E  2616               	addwf	??_parseHexFileEntry+2,f,c
 13656  000270  0E00               	movlw	0
 13657  000272  2217               	addwfc	??_parseHexFileEntry+3,f,c
 13658  000274  5016               	movf	??_parseHexFileEntry+2,w,c
 13659  000276  240C               	addwf	parseHexFileEntry@data,w,c
 13660  000278  6EE1               	movwf	fsr1l,c
 13661  00027A  5017               	movf	??_parseHexFileEntry+3,w,c
 13662  00027C  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13663  00027E  6EE2               	movwf	fsr1h,c
 13664  000280  50E7               	movf	indf1,w,c
 13665  000282  EC1E  F03E         	call	_hexCharsToUint8
 13666  000286  6EDF               	movwf	indf2,c
 13667                           
 13668                           ;hex.c: 92: hexEntry->checksumCheck = hexEntry->dataLength;
 13669  000288  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 13670  00028C  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 13671  000290  EE10 F016          	lfsr	1,22
 13672  000294  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13673  000296  26E1               	addwf	fsr1l,f,c
 13674  000298  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13675  00029A  22E2               	addwfc	fsr1h,f,c
 13676  00029C  CFDF FFE7          	movff	indf2,indf1
 13677                           
 13678                           ;hex.c: 93: hexEntry->checksumCheck += (hexEntry->address >> 8);
 13679  0002A0  EE20 F002          	lfsr	2,2
 13680  0002A4  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13681  0002A6  26D9               	addwf	fsr2l,f,c
 13682  0002A8  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13683  0002AA  22DA               	addwfc	fsr2h,f,c
 13684  0002AC  CFDE F014          	movff	postinc2,??_parseHexFileEntry
 13685  0002B0  CFDD F015          	movff	postdec2,??_parseHexFileEntry+1
 13686  0002B4  C015  F014         	movff	??_parseHexFileEntry+1,??_parseHexFileEntry
 13687  0002B8  6A15               	clrf	??_parseHexFileEntry+1,c
 13688  0002BA  EE20 F016          	lfsr	2,22
 13689  0002BE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13690  0002C0  26D9               	addwf	fsr2l,f,c
 13691  0002C2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13692  0002C4  22DA               	addwfc	fsr2h,f,c
 13693  0002C6  5014               	movf	??_parseHexFileEntry,w,c
 13694  0002C8  26DF               	addwf	indf2,f,c
 13695                           
 13696                           ;hex.c: 94: hexEntry->checksumCheck += (hexEntry->address & 0xFF);
 13697  0002CA  EE20 F002          	lfsr	2,2
 13698  0002CE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13699  0002D0  26D9               	addwf	fsr2l,f,c
 13700  0002D2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13701  0002D4  22DA               	addwfc	fsr2h,f,c
 13702  0002D6  50DF               	movf	indf2,w,c
 13703  0002D8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13704  0002DA  EE20 F016          	lfsr	2,22
 13705  0002DE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13706  0002E0  26D9               	addwf	fsr2l,f,c
 13707  0002E2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13708  0002E4  22DA               	addwfc	fsr2h,f,c
 13709  0002E6  5014               	movf	??_parseHexFileEntry,w,c
 13710  0002E8  26DF               	addwf	indf2,f,c
 13711                           
 13712                           ;hex.c: 95: hexEntry->checksumCheck += hexEntry->recordType;
 13713  0002EA  EE20 F004          	lfsr	2,4
 13714  0002EE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13715  0002F0  26D9               	addwf	fsr2l,f,c
 13716  0002F2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13717  0002F4  22DA               	addwfc	fsr2h,f,c
 13718  0002F6  50DF               	movf	indf2,w,c
 13719  0002F8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13720  0002FA  EE20 F016          	lfsr	2,22
 13721  0002FE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13722  000300  26D9               	addwf	fsr2l,f,c
 13723  000302  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13724  000304  22DA               	addwfc	fsr2h,f,c
 13725  000306  5014               	movf	??_parseHexFileEntry,w,c
 13726  000308  26DF               	addwf	indf2,f,c
 13727                           
 13728                           ;hex.c: 96: for (i = 0; i < hexEntry->dataLength; ++i)
 13729  00030A  0E00               	movlw	0
 13730  00030C  6E1C               	movwf	parseHexFileEntry@i,c
 13731  00030E  D017               	goto	l2159
 13732  000310                     
 13733                           ;hex.c: 97: {;hex.c: 98: hexEntry->checksumCheck += hexEntry->data[i];
 13734  000310  501C               	movf	parseHexFileEntry@i,w,c
 13735  000312  0D01               	mullw	1
 13736  000314  0E05               	movlw	5
 13737  000316  26F3               	addwf	prodl,f,c
 13738  000318  0E00               	movlw	0
 13739  00031A  22F4               	addwfc	prodh,f,c
 13740  00031C  50F3               	movf	prodl,w,c
 13741  00031E  2412               	addwf	parseHexFileEntry@hexEntry,w,c
 13742  000320  6ED9               	movwf	fsr2l,c
 13743  000322  50F4               	movf	prodh,w,c
 13744  000324  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
 13745  000326  6EDA               	movwf	fsr2h,c
 13746  000328  50DF               	movf	indf2,w,c
 13747  00032A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13748  00032C  EE20 F016          	lfsr	2,22
 13749  000330  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13750  000332  26D9               	addwf	fsr2l,f,c
 13751  000334  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13752  000336  22DA               	addwfc	fsr2h,f,c
 13753  000338  5014               	movf	??_parseHexFileEntry,w,c
 13754  00033A  26DF               	addwf	indf2,f,c
 13755  00033C  2A1C               	incf	parseHexFileEntry@i,f,c
 13756  00033E                     l2159:
 13757  00033E  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 13758  000342  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 13759  000346  501C               	movf	parseHexFileEntry@i,w,c
 13760  000348  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13761  00034A  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 13762  00034C  50DE               	movf	postinc2,w,c
 13763  00034E  5C16               	subwf	??_parseHexFileEntry+2,w,c
 13764  000350  50DE               	movf	postinc2,w,c
 13765  000352  5817               	subwfb	??_parseHexFileEntry+3,w,c
 13766  000354  A0D8               	btfss	status,0,c
 13767  000356  D7DC               	goto	l2160
 13768                           
 13769                           ;hex.c: 99: };hex.c: 100: hexEntry->checksumCheck += hexEntry->checksum;
 13770  000358  EE20 F015          	lfsr	2,21
 13771  00035C  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13772  00035E  26D9               	addwf	fsr2l,f,c
 13773  000360  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13774  000362  22DA               	addwfc	fsr2h,f,c
 13775  000364  50DF               	movf	indf2,w,c
 13776  000366  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13777  000368  EE20 F016          	lfsr	2,22
 13778  00036C  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13779  00036E  26D9               	addwf	fsr2l,f,c
 13780  000370  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13781  000372  22DA               	addwfc	fsr2h,f,c
 13782  000374  5014               	movf	??_parseHexFileEntry,w,c
 13783  000376  26DF               	addwf	indf2,f,c
 13784                           
 13785                           ;hex.c: 103: if (hexEntry->checksumCheck != 0)
 13786  000378  EE20 F016          	lfsr	2,22
 13787  00037C  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13788  00037E  26D9               	addwf	fsr2l,f,c
 13789  000380  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13790  000382  22DA               	addwfc	fsr2h,f,c
 13791  000384  50DF               	movf	indf2,w,c
 13792  000386  B4D8               	btfsc	status,2,c
 13793  000388  D009               	goto	l2162
 13794                           
 13795                           ;hex.c: 104: {;hex.c: 105: return (uint32_t) RecordErrorChecksum;
 13796  00038A  0EFE               	movlw	254
 13797  00038C  6E0C               	movwf	?_parseHexFileEntry,c
 13798  00038E  0EFF               	movlw	255
 13799  000390  6E0D               	movwf	?_parseHexFileEntry+1,c
 13800  000392  0EFF               	movlw	255
 13801  000394  6E0E               	movwf	?_parseHexFileEntry+2,c
 13802  000396  0EFF               	movlw	255
 13803  000398  6E0F               	movwf	?_parseHexFileEntry+3,c
 13804  00039A  0012               	return	
 13805  00039C                     l2162:
 13806                           
 13807                           ;hex.c: 106: };hex.c: 109: if (hexEntry->recordType == RecordTypeEndOfFile)
 13808  00039C  EE20 F004          	lfsr	2,4
 13809  0003A0  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13810  0003A2  26D9               	addwf	fsr2l,f,c
 13811  0003A4  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13812  0003A6  22DA               	addwfc	fsr2h,f,c
 13813  0003A8  04DE               	decf	postinc2,w,c
 13814  0003AA  A4D8               	btfss	status,2,c
 13815  0003AC  D009               	goto	l2163
 13816                           
 13817                           ;hex.c: 110: {;hex.c: 112: return 0;
 13818  0003AE  0E00               	movlw	0
 13819  0003B0  6E0C               	movwf	?_parseHexFileEntry,c
 13820  0003B2  0E00               	movlw	0
 13821  0003B4  6E0D               	movwf	?_parseHexFileEntry+1,c
 13822  0003B6  0E00               	movlw	0
 13823  0003B8  6E0E               	movwf	?_parseHexFileEntry+2,c
 13824  0003BA  0E00               	movlw	0
 13825  0003BC  6E0F               	movwf	?_parseHexFileEntry+3,c
 13826                           
 13827                           ;hex.c: 113: }
 13828  0003BE  0012               	return	
 13829  0003C0                     l2163:
 13830                           
 13831                           ;hex.c: 114: else;hex.c: 115: {;hex.c: 116: offset += 11 + i + i;
 13832  0003C0  501C               	movf	parseHexFileEntry@i,w,c
 13833  0003C2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
 13834  0003C6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
 13835  0003C8  2614               	addwf	??_parseHexFileEntry,f,c
 13836  0003CA  0E00               	movlw	0
 13837  0003CC  2215               	addwfc	??_parseHexFileEntry+1,f,c
 13838  0003CE  0E0B               	movlw	11
 13839  0003D0  2414               	addwf	??_parseHexFileEntry,w,c
 13840  0003D2  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13841  0003D4  0E00               	movlw	0
 13842  0003D6  2015               	addwfc	??_parseHexFileEntry+1,w,c
 13843  0003D8  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 13844  0003DA  6A18               	clrf	(??_parseHexFileEntry+4)& (0+255),c
 13845  0003DC  BE17               	btfsc	(??_parseHexFileEntry+3)& (0+255),7,c
 13846  0003DE  0618               	decf	(??_parseHexFileEntry+4)& (0+255),f,c
 13847  0003E0  5018               	movf	(??_parseHexFileEntry+4)& (0+255),w,c
 13848  0003E2  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
 13849  0003E4  5016               	movf	??_parseHexFileEntry+2,w,c
 13850  0003E6  260E               	addwf	parseHexFileEntry@offset,f,c
 13851  0003E8  5017               	movf	??_parseHexFileEntry+3,w,c
 13852  0003EA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 13853  0003EC  5018               	movf	??_parseHexFileEntry+4,w,c
 13854  0003EE  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 13855  0003F0  5019               	movf	??_parseHexFileEntry+5,w,c
 13856  0003F2  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 13857                           
 13858                           ;hex.c: 117: if (data[++offset] == ':')
 13859  0003F4  0E01               	movlw	1
 13860  0003F6  260E               	addwf	parseHexFileEntry@offset,f,c
 13861  0003F8  0E00               	movlw	0
 13862  0003FA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 13863  0003FC  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 13864  0003FE  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 13865  000400  500E               	movf	parseHexFileEntry@offset,w,c
 13866  000402  240C               	addwf	parseHexFileEntry@data,w,c
 13867  000404  6ED9               	movwf	fsr2l,c
 13868  000406  500F               	movf	parseHexFileEntry@offset+1,w,c
 13869  000408  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13870  00040A  6EDA               	movwf	fsr2h,c
 13871  00040C  0E3A               	movlw	58
 13872  00040E  18DE               	xorwf	postinc2,w,c
 13873  000410  A4D8               	btfss	status,2,c
 13874  000412  D009               	goto	l2165
 13875                           
 13876                           ;hex.c: 118: {;hex.c: 119: return offset;
 13877  000414  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 13878  000418  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 13879  00041C  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 13880  000420  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 13881                           
 13882                           ;hex.c: 120: }
 13883  000424  0012               	return	
 13884  000426                     l2165:
 13885                           
 13886                           ;hex.c: 121: else if (data[++offset] == ':')
 13887  000426  0E01               	movlw	1
 13888  000428  260E               	addwf	parseHexFileEntry@offset,f,c
 13889  00042A  0E00               	movlw	0
 13890  00042C  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 13891  00042E  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 13892  000430  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 13893  000432  500E               	movf	parseHexFileEntry@offset,w,c
 13894  000434  240C               	addwf	parseHexFileEntry@data,w,c
 13895  000436  6ED9               	movwf	fsr2l,c
 13896  000438  500F               	movf	parseHexFileEntry@offset+1,w,c
 13897  00043A  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13898  00043C  6EDA               	movwf	fsr2h,c
 13899  00043E  0E3A               	movlw	58
 13900  000440  18DE               	xorwf	postinc2,w,c
 13901  000442  A4D8               	btfss	status,2,c
 13902  000444  D009               	goto	l2167
 13903                           
 13904                           ;hex.c: 122: {;hex.c: 123: return offset;
 13905  000446  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 13906  00044A  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 13907  00044E  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 13908  000452  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 13909                           
 13910                           ;hex.c: 124: }
 13911  000456  0012               	return	
 13912  000458                     l2167:
 13913                           
 13914                           ;hex.c: 125: else if (data[++offset] == ':')
 13915  000458  0E01               	movlw	1
 13916  00045A  260E               	addwf	parseHexFileEntry@offset,f,c
 13917  00045C  0E00               	movlw	0
 13918  00045E  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 13919  000460  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 13920  000462  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 13921  000464  500E               	movf	parseHexFileEntry@offset,w,c
 13922  000466  240C               	addwf	parseHexFileEntry@data,w,c
 13923  000468  6ED9               	movwf	fsr2l,c
 13924  00046A  500F               	movf	parseHexFileEntry@offset+1,w,c
 13925  00046C  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13926  00046E  6EDA               	movwf	fsr2h,c
 13927  000470  0E3A               	movlw	58
 13928  000472  18DE               	xorwf	postinc2,w,c
 13929  000474  A4D8               	btfss	status,2,c
 13930  000476  D009               	goto	l2169
 13931                           
 13932                           ;hex.c: 126: {;hex.c: 127: return offset;
 13933  000478  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 13934  00047C  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 13935  000480  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 13936  000484  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 13937                           
 13938                           ;hex.c: 128: }
 13939  000488  0012               	return	
 13940  00048A                     l2169:
 13941                           
 13942                           ;hex.c: 129: else;hex.c: 130: {;hex.c: 132: return (uint32_t) RecordErrorNoNextRecord;
 13943  00048A  0EFD               	movlw	253
 13944  00048C  6E0C               	movwf	?_parseHexFileEntry,c
 13945  00048E  0EFF               	movlw	255
 13946  000490  6E0D               	movwf	?_parseHexFileEntry+1,c
 13947  000492  0EFF               	movlw	255
 13948  000494  6E0E               	movwf	?_parseHexFileEntry+2,c
 13949  000496  0EFF               	movlw	255
 13950  000498  6E0F               	movwf	?_parseHexFileEntry+3,c
 13951  00049A  0012               	return	
 13952  00049C                     __end_of_parseHexFileEntry:
 13953                           	opt stack 0
 13954                           tblptru	equ	0xFF8
 13955                           tblptrh	equ	0xFF7
 13956                           tblptrl	equ	0xFF6
 13957                           tablat	equ	0xFF5
 13958                           prodh	equ	0xFF4
 13959                           prodl	equ	0xFF3
 13960                           intcon	equ	0xFF2
 13961                           intcon2	equ	0xFF1
 13962                           intcon3	equ	0xFF0
 13963                           postinc0	equ	0xFEE
 13964                           wreg	equ	0xFE8
 13965                           indf1	equ	0xFE7
 13966                           postdec1	equ	0xFE5
 13967                           plusw1	equ	0xFE3
 13968                           fsr1h	equ	0xFE2
 13969                           fsr1l	equ	0xFE1
 13970                           indf2	equ	0xFDF
 13971                           postinc2	equ	0xFDE
 13972                           postdec2	equ	0xFDD
 13973                           plusw2	equ	0xFDB
 13974                           fsr2h	equ	0xFDA
 13975                           fsr2l	equ	0xFD9
 13976                           status	equ	0xFD8
 13977                           
 13978 ;; *************** function _hexCharsToUint8 *****************
 13979 ;; Defined at:
 13980 ;;		line 42 in file "hex.c"
 13981 ;; Parameters:    Size  Location     Type
 13982 ;;  c1              1    wreg     unsigned char 
 13983 ;;  c2              1    2[COMRAM] unsigned char 
 13984 ;; Auto vars:     Size  Location     Type
 13985 ;;  c1              1    4[COMRAM] unsigned char 
 13986 ;;  retVal          1    5[COMRAM] unsigned char 
 13987 ;; Return value:  Size  Location     Type
 13988 ;;                  1    wreg      unsigned char 
 13989 ;; Registers used:
 13990 ;;		wreg, status,2, status,0, cstack
 13991 ;; Tracked objects:
 13992 ;;		On entry : 0/0
 13993 ;;		On exit  : 0/0
 13994 ;;		Unchanged: 0/0
 13995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13996 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13997 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13998 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13999 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14000 ;;Total ram usage:        4 bytes
 14001 ;; Hardware stack levels used:    1
 14002 ;; Hardware stack levels required when called:    1
 14003 ;; This function calls:
 14004 ;;		_hexCharToUint8
 14005 ;; This function is called by:
 14006 ;;		_parseHexFileEntry
 14007 ;; This function uses a non-reentrant model
 14008 ;;
 14009                           
 14010                           	psect	text54
 14011  007C3C                     __ptext54:
 14012                           	opt stack 0
 14013  007C3C                     _hexCharsToUint8:
 14014                           	opt stack 26
 14015                           
 14016                           ;incstack = 0
 14017                           ;hexCharsToUint8@c1 stored from wreg
 14018  007C3C  6E05               	movwf	hexCharsToUint8@c1,c
 14019                           
 14020                           ;hex.c: 44: uint8_t retVal = (hexCharToUint8(c1) << 4);
 14021  007C3E  5005               	movf	hexCharsToUint8@c1,w,c
 14022  007C40  ECE0  F03C         	call	_hexCharToUint8
 14023  007C44  6E04               	movwf	??_hexCharsToUint8& (0+255),c
 14024  007C46  3804               	swapf	??_hexCharsToUint8,w,c
 14025  007C48  0BF0               	andlw	240
 14026  007C4A  6E06               	movwf	hexCharsToUint8@retVal,c
 14027                           
 14028                           ;hex.c: 45: retVal |= hexCharToUint8(c2);
 14029  007C4C  5003               	movf	hexCharsToUint8@c2,w,c
 14030  007C4E  ECE0  F03C         	call	_hexCharToUint8
 14031  007C52  1206               	iorwf	hexCharsToUint8@retVal,f,c
 14032                           
 14033                           ;hex.c: 46: return retVal;
 14034  007C54  5006               	movf	hexCharsToUint8@retVal,w,c
 14035  007C56  0012               	return	
 14036  007C58                     __end_of_hexCharsToUint8:
 14037                           	opt stack 0
 14038                           tblptru	equ	0xFF8
 14039                           tblptrh	equ	0xFF7
 14040                           tblptrl	equ	0xFF6
 14041                           tablat	equ	0xFF5
 14042                           prodh	equ	0xFF4
 14043                           prodl	equ	0xFF3
 14044                           intcon	equ	0xFF2
 14045                           intcon2	equ	0xFF1
 14046                           intcon3	equ	0xFF0
 14047                           postinc0	equ	0xFEE
 14048                           wreg	equ	0xFE8
 14049                           indf1	equ	0xFE7
 14050                           postdec1	equ	0xFE5
 14051                           plusw1	equ	0xFE3
 14052                           fsr1h	equ	0xFE2
 14053                           fsr1l	equ	0xFE1
 14054                           indf2	equ	0xFDF
 14055                           postinc2	equ	0xFDE
 14056                           postdec2	equ	0xFDD
 14057                           plusw2	equ	0xFDB
 14058                           fsr2h	equ	0xFDA
 14059                           fsr2l	equ	0xFD9
 14060                           status	equ	0xFD8
 14061                           
 14062 ;; *************** function _hexCharsToUint16 *****************
 14063 ;; Defined at:
 14064 ;;		line 49 in file "hex.c"
 14065 ;; Parameters:    Size  Location     Type
 14066 ;;  c1              1    wreg     unsigned char 
 14067 ;;  c2              1    2[COMRAM] unsigned char 
 14068 ;;  c3              1    3[COMRAM] unsigned char 
 14069 ;;  c4              1    4[COMRAM] unsigned char 
 14070 ;; Auto vars:     Size  Location     Type
 14071 ;;  c1              1    8[COMRAM] unsigned char 
 14072 ;;  retVal          2    9[COMRAM] unsigned int 
 14073 ;; Return value:  Size  Location     Type
 14074 ;;                  2    2[COMRAM] unsigned int 
 14075 ;; Registers used:
 14076 ;;		wreg, status,2, status,0, cstack
 14077 ;; Tracked objects:
 14078 ;;		On entry : 0/0
 14079 ;;		On exit  : 0/0
 14080 ;;		Unchanged: 0/0
 14081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14082 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14083 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14084 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14085 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14086 ;;Total ram usage:        9 bytes
 14087 ;; Hardware stack levels used:    1
 14088 ;; Hardware stack levels required when called:    1
 14089 ;; This function calls:
 14090 ;;		_hexCharToUint8
 14091 ;; This function is called by:
 14092 ;;		_parseHexFileEntry
 14093 ;; This function uses a non-reentrant model
 14094 ;;
 14095                           
 14096                           	psect	text55
 14097  00670C                     __ptext55:
 14098                           	opt stack 0
 14099  00670C                     _hexCharsToUint16:
 14100                           	opt stack 26
 14101                           
 14102                           ;incstack = 0
 14103                           ;hexCharsToUint16@c1 stored from wreg
 14104  00670C  6E09               	movwf	hexCharsToUint16@c1,c
 14105                           
 14106                           ;hex.c: 51: uint16_t retVal = (hexCharToUint8(c1) << 12);
 14107  00670E  5009               	movf	hexCharsToUint16@c1,w,c
 14108  006710  ECE0  F03C         	call	_hexCharToUint8
 14109  006714  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 14110  006716  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 14111  006718  0E0C               	movlw	12
 14112  00671A                     u8945:
 14113  00671A  90D8               	bcf	status,0,c
 14114  00671C  3606               	rlcf	??_hexCharsToUint16,f,c
 14115  00671E  3607               	rlcf	??_hexCharsToUint16+1,f,c
 14116  006720  2EE8               	decfsz	wreg,f,c
 14117  006722  D7FB               	goto	u8945
 14118  006724  C006  F00A         	movff	??_hexCharsToUint16,hexCharsToUint16@retVal
 14119  006728  C007  F00B         	movff	??_hexCharsToUint16+1,hexCharsToUint16@retVal+1
 14120                           
 14121                           ;hex.c: 52: retVal |= (hexCharToUint8(c2) << 8);
 14122  00672C  5003               	movf	hexCharsToUint16@c2,w,c
 14123  00672E  ECE0  F03C         	call	_hexCharToUint8
 14124  006732  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 14125  006734  5006               	movf	??_hexCharsToUint16,w,c
 14126  006736  6E08               	movwf	(??_hexCharsToUint16+2)& (0+255),c
 14127  006738  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 14128  00673A  5007               	movf	??_hexCharsToUint16+1,w,c
 14129  00673C  120A               	iorwf	hexCharsToUint16@retVal,f,c
 14130  00673E  5008               	movf	??_hexCharsToUint16+2,w,c
 14131  006740  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
 14132                           
 14133                           ;hex.c: 53: retVal |= (hexCharToUint8(c3) << 4);
 14134  006742  5004               	movf	hexCharsToUint16@c3,w,c
 14135  006744  ECE0  F03C         	call	_hexCharToUint8
 14136  006748  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 14137  00674A  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 14138  00674C  3A06               	swapf	??_hexCharsToUint16,f,c
 14139  00674E  3A07               	swapf	??_hexCharsToUint16+1,f,c
 14140  006750  0EF0               	movlw	240
 14141  006752  1607               	andwf	??_hexCharsToUint16+1,f,c
 14142  006754  5006               	movf	??_hexCharsToUint16,w,c
 14143  006756  0B0F               	andlw	15
 14144  006758  1207               	iorwf	??_hexCharsToUint16+1,f,c
 14145  00675A  0EF0               	movlw	240
 14146  00675C  1606               	andwf	??_hexCharsToUint16,f,c
 14147  00675E  5006               	movf	??_hexCharsToUint16,w,c
 14148  006760  120A               	iorwf	hexCharsToUint16@retVal,f,c
 14149  006762  5007               	movf	??_hexCharsToUint16+1,w,c
 14150  006764  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
 14151                           
 14152                           ;hex.c: 54: retVal |= hexCharToUint8(c4);
 14153  006766  5005               	movf	hexCharsToUint16@c4,w,c
 14154  006768  ECE0  F03C         	call	_hexCharToUint8
 14155  00676C  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 14156  00676E  5006               	movf	??_hexCharsToUint16,w,c
 14157  006770  120A               	iorwf	hexCharsToUint16@retVal,f,c
 14158                           
 14159                           ;hex.c: 55: return retVal;
 14160  006772  C00A  F003         	movff	hexCharsToUint16@retVal,?_hexCharsToUint16
 14161  006776  C00B  F004         	movff	hexCharsToUint16@retVal+1,?_hexCharsToUint16+1
 14162  00677A  0012               	return	
 14163  00677C                     __end_of_hexCharsToUint16:
 14164                           	opt stack 0
 14165                           tblptru	equ	0xFF8
 14166                           tblptrh	equ	0xFF7
 14167                           tblptrl	equ	0xFF6
 14168                           tablat	equ	0xFF5
 14169                           prodh	equ	0xFF4
 14170                           prodl	equ	0xFF3
 14171                           intcon	equ	0xFF2
 14172                           intcon2	equ	0xFF1
 14173                           intcon3	equ	0xFF0
 14174                           postinc0	equ	0xFEE
 14175                           wreg	equ	0xFE8
 14176                           indf1	equ	0xFE7
 14177                           postdec1	equ	0xFE5
 14178                           plusw1	equ	0xFE3
 14179                           fsr1h	equ	0xFE2
 14180                           fsr1l	equ	0xFE1
 14181                           indf2	equ	0xFDF
 14182                           postinc2	equ	0xFDE
 14183                           postdec2	equ	0xFDD
 14184                           plusw2	equ	0xFDB
 14185                           fsr2h	equ	0xFDA
 14186                           fsr2l	equ	0xFD9
 14187                           status	equ	0xFD8
 14188                           
 14189 ;; *************** function _hexCharToUint8 *****************
 14190 ;; Defined at:
 14191 ;;		line 11 in file "hex.c"
 14192 ;; Parameters:    Size  Location     Type
 14193 ;;  c               1    wreg     unsigned char 
 14194 ;; Auto vars:     Size  Location     Type
 14195 ;;  c               1    0[COMRAM] unsigned char 
 14196 ;;  ascii           1    1[COMRAM] unsigned char 
 14197 ;; Return value:  Size  Location     Type
 14198 ;;                  1    wreg      unsigned char 
 14199 ;; Registers used:
 14200 ;;		wreg, status,2, status,0
 14201 ;; Tracked objects:
 14202 ;;		On entry : 0/0
 14203 ;;		On exit  : 0/0
 14204 ;;		Unchanged: 0/0
 14205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14207 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14209 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14210 ;;Total ram usage:        2 bytes
 14211 ;; Hardware stack levels used:    1
 14212 ;; This function calls:
 14213 ;;		Nothing
 14214 ;; This function is called by:
 14215 ;;		_hexCharsToUint8
 14216 ;;		_hexCharsToUint16
 14217 ;; This function uses a non-reentrant model
 14218 ;;
 14219                           
 14220                           	psect	text56
 14221  0079C0                     __ptext56:
 14222                           	opt stack 0
 14223  0079C0                     _hexCharToUint8:
 14224                           	opt stack 26
 14225                           
 14226                           ;incstack = 0
 14227                           ;hexCharToUint8@c stored from wreg
 14228  0079C0  6E01               	movwf	hexCharToUint8@c,c
 14229                           
 14230                           ;hex.c: 13: uint8_t ascii = (uint8_t)c;
 14231  0079C2  C001  F002         	movff	hexCharToUint8@c,hexCharToUint8@ascii
 14232                           
 14233                           ;hex.c: 16: if (ascii >= 97)
 14234  0079C6  0E60               	movlw	96
 14235  0079C8  6402               	cpfsgt	hexCharToUint8@ascii,c
 14236  0079CA  D002               	goto	l2138
 14237                           
 14238                           ;hex.c: 17: {;hex.c: 18: ascii -= 87;
 14239  0079CC  0E57               	movlw	87
 14240  0079CE  D006               	goto	L3
 14241  0079D0                     l2138:
 14242                           
 14243                           ;hex.c: 21: else if (ascii >= 65)
 14244  0079D0  0E40               	movlw	64
 14245  0079D2  6402               	cpfsgt	hexCharToUint8@ascii,c
 14246  0079D4  D002               	goto	l2140
 14247                           
 14248                           ;hex.c: 22: {;hex.c: 23: ascii -= 55;
 14249  0079D6  0E37               	movlw	55
 14250  0079D8  D001               	goto	L3
 14251  0079DA                     l2140:
 14252                           
 14253                           ;hex.c: 26: else;hex.c: 27: {;hex.c: 28: ascii -= 48;
 14254  0079DA  0E30               	movlw	48
 14255  0079DC                     L3:
 14256  0079DC  5E02               	subwf	hexCharToUint8@ascii,f,c
 14257                           
 14258                           ;hex.c: 29: };hex.c: 31: if (ascii > 15)
 14259  0079DE  0E0F               	movlw	15
 14260  0079E0  6402               	cpfsgt	hexCharToUint8@ascii,c
 14261  0079E2  D002               	goto	l2142
 14262                           
 14263                           ;hex.c: 32: {;hex.c: 33: return 0;
 14264  0079E4  0E00               	movlw	0
 14265                           
 14266                           ;hex.c: 34: }
 14267  0079E6  0012               	return	
 14268  0079E8                     l2142:
 14269                           
 14270                           ;hex.c: 35: else;hex.c: 36: {;hex.c: 37: return ascii;
 14271  0079E8  5002               	movf	hexCharToUint8@ascii,w,c
 14272  0079EA  0012               	return	
 14273  0079EC                     __end_of_hexCharToUint8:
 14274                           	opt stack 0
 14275                           tblptru	equ	0xFF8
 14276                           tblptrh	equ	0xFF7
 14277                           tblptrl	equ	0xFF6
 14278                           tablat	equ	0xFF5
 14279                           prodh	equ	0xFF4
 14280                           prodl	equ	0xFF3
 14281                           intcon	equ	0xFF2
 14282                           intcon2	equ	0xFF1
 14283                           intcon3	equ	0xFF0
 14284                           postinc0	equ	0xFEE
 14285                           wreg	equ	0xFE8
 14286                           indf1	equ	0xFE7
 14287                           postdec1	equ	0xFE5
 14288                           plusw1	equ	0xFE3
 14289                           fsr1h	equ	0xFE2
 14290                           fsr1l	equ	0xFE1
 14291                           indf2	equ	0xFDF
 14292                           postinc2	equ	0xFDE
 14293                           postdec2	equ	0xFDD
 14294                           plusw2	equ	0xFDB
 14295                           fsr2h	equ	0xFDA
 14296                           fsr2l	equ	0xFD9
 14297                           status	equ	0xFD8
 14298                           
 14299 ;; *************** function _internalFlash_writePage *****************
 14300 ;; Defined at:
 14301 ;;		line 63 in file "internal_flash.c"
 14302 ;; Parameters:    Size  Location     Type
 14303 ;;  page            2    2[COMRAM] unsigned int 
 14304 ;; Auto vars:     Size  Location     Type
 14305 ;;  address         4    4[COMRAM] unsigned long 
 14306 ;;  cntr            2    8[COMRAM] unsigned int 
 14307 ;;  byte_cntr       1   11[COMRAM] unsigned char 
 14308 ;;  block_cntr      1   10[COMRAM] unsigned char 
 14309 ;;  i               1    0        unsigned char 
 14310 ;;  gie             1    0        unsigned char 
 14311 ;; Return value:  Size  Location     Type
 14312 ;;                  1    wreg      void 
 14313 ;; Registers used:
 14314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14315 ;; Tracked objects:
 14316 ;;		On entry : 0/0
 14317 ;;		On exit  : 0/0
 14318 ;;		Unchanged: 0/0
 14319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14320 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14321 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14323 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14324 ;;Total ram usage:       10 bytes
 14325 ;; Hardware stack levels used:    1
 14326 ;; Hardware stack levels required when called:    1
 14327 ;; This function calls:
 14328 ;;		__internalFlash_unlockAndActivate
 14329 ;; This function is called by:
 14330 ;;		__bootloader_program
 14331 ;; This function uses a non-reentrant model
 14332 ;;
 14333                           
 14334                           	psect	text57
 14335  006354                     __ptext57:
 14336                           	opt stack 0
 14337  006354                     _internalFlash_writePage:
 14338                           	opt stack 27
 14339                           
 14340                           ;internal_flash.c: 65: uint32_t address;;internal_flash.c: 66: uint8_t gie;;internal_fla
      +                          sh.c: 67: uint16_t cntr;;internal_flash.c: 68: uint8_t i;;internal_flash.c: 69: uint8_t 
      +                          block_cntr;;internal_flash.c: 70: uint8_t byte_cntr;;internal_flash.c: 73: address = pag
      +                          e;
 14341                           
 14342                           ;incstack = 0
 14343  006354  C003  F005         	movff	internalFlash_writePage@page,internalFlash_writePage@address
 14344  006358  C004  F006         	movff	internalFlash_writePage@page+1,internalFlash_writePage@address+1
 14345  00635C  6A07               	clrf	internalFlash_writePage@address+2,c
 14346  00635E  6A08               	clrf	internalFlash_writePage@address+3,c
 14347                           
 14348                           ;internal_flash.c: 74: address <<= 10;
 14349  006360  0E0A               	movlw	10
 14350  006362                     u9855:
 14351  006362  90D8               	bcf	status,0,c
 14352  006364  3605               	rlcf	internalFlash_writePage@address,f,c
 14353  006366  3606               	rlcf	internalFlash_writePage@address+1,f,c
 14354  006368  3607               	rlcf	internalFlash_writePage@address+2,f,c
 14355  00636A  3608               	rlcf	internalFlash_writePage@address+3,f,c
 14356  00636C  2EE8               	decfsz	wreg,f,c
 14357  00636E  D7F9               	goto	u9855
 14358                           
 14359                           ;internal_flash.c: 76: TBLPTR = address;
 14360  006370  C005  FFF6         	movff	internalFlash_writePage@address,tblptrl	;volatile
 14361  006374  C006  FFF7         	movff	internalFlash_writePage@address+1,tblptrh	;volatile
 14362  006378  C007  FFF8         	movff	internalFlash_writePage@address+2,tblptru	;volatile
 14363                           
 14364                           ;internal_flash.c: 79: cntr = 0;
 14365  00637C  0E00               	movlw	0
 14366  00637E  6E0A               	movwf	internalFlash_writePage@cntr+1,c
 14367  006380  0E00               	movlw	0
 14368  006382  6E09               	movwf	internalFlash_writePage@cntr,c
 14369                           
 14370                           ;internal_flash.c: 80: for(block_cntr=0; block_cntr<16; ++block_cntr)
 14371  006384  0E00               	movlw	0
 14372  006386  6E0B               	movwf	internalFlash_writePage@block_cntr,c
 14373  006388                     l12850:
 14374  006388  0E0F               	movlw	15
 14375  00638A  640B               	cpfsgt	internalFlash_writePage@block_cntr,c
 14376  00638C  D001               	goto	l2381
 14377  00638E  0012               	return	
 14378  006390                     l2381:
 14379                           
 14380                           ;internal_flash.c: 81: {;internal_flash.c: 84: for(byte_cntr=0; byte_cntr<64; ++byte_cnt
      +                          r)
 14381  006390  0E00               	movlw	0
 14382  006392  6E0C               	movwf	internalFlash_writePage@byte_cntr,c
 14383  006394                     l12856:
 14384  006394  0E3F               	movlw	63
 14385  006396  640C               	cpfsgt	internalFlash_writePage@byte_cntr,c
 14386  006398  D001               	goto	l2383
 14387  00639A  D00D               	goto	u9880
 14388  00639C                     l2383:
 14389                           
 14390                           ;internal_flash.c: 85: {;internal_flash.c: 87: TABLAT = pageBuffer[cntr];
 14391  00639C  0E00               	movlw	low _pageBuffer
 14392  00639E  2409               	addwf	internalFlash_writePage@cntr,w,c
 14393  0063A0  6ED9               	movwf	fsr2l,c
 14394  0063A2  0E08               	movlw	high _pageBuffer
 14395  0063A4  200A               	addwfc	internalFlash_writePage@cntr+1,w,c
 14396  0063A6  6EDA               	movwf	fsr2h,c
 14397  0063A8  50DF               	movf	indf2,w,c
 14398  0063AA  6EF5               	movwf	tablat,c	;volatile
 14399  0063AC  000D               	tblwt		*+	;# 
 14400                           
 14401                           ;internal_flash.c: 91: ++cntr;
 14402  0063AE  4A09               	infsnz	internalFlash_writePage@cntr,f,c
 14403  0063B0  2A0A               	incf	internalFlash_writePage@cntr+1,f,c
 14404  0063B2  2A0C               	incf	internalFlash_writePage@byte_cntr,f,c
 14405  0063B4  D7EF               	goto	l12856
 14406  0063B6                     u9880:
 14407  0063B6  000A               	tblrd		*-	;# 
 14408                           
 14409                           ;internal_flash.c: 98: EECON1 = 0x84;
 14410  0063B8  0E84               	movlw	132
 14411  0063BA  6EA6               	movwf	4006,c	;volsfr
 14412                           
 14413                           ;internal_flash.c: 99: _internalFlash_unlockAndActivate((uint8_t)0xB5);
 14414  0063BC  0EB5               	movlw	181
 14415  0063BE  EC4B  F03D         	call	__internalFlash_unlockAndActivate
 14416                           
 14417                           ;internal_flash.c: 100: TBLPTR++;
 14418  0063C2  0E01               	movlw	1
 14419  0063C4  26F6               	addwf	tblptrl,f,c	;volatile
 14420  0063C6  0E00               	movlw	0
 14421  0063C8  22F7               	addwfc	tblptrh,f,c	;volatile
 14422  0063CA  0E00               	movlw	0
 14423  0063CC  22F8               	addwfc	tblptru,f,c	;volatile
 14424  0063CE  2A0B               	incf	internalFlash_writePage@block_cntr,f,c
 14425  0063D0  D7DB               	goto	l12850
 14426  0063D2                     __end_of_internalFlash_writePage:
 14427                           	opt stack 0
 14428                           tblptru	equ	0xFF8
 14429                           tblptrh	equ	0xFF7
 14430                           tblptrl	equ	0xFF6
 14431                           tablat	equ	0xFF5
 14432                           prodh	equ	0xFF4
 14433                           prodl	equ	0xFF3
 14434                           intcon	equ	0xFF2
 14435                           intcon2	equ	0xFF1
 14436                           intcon3	equ	0xFF0
 14437                           postinc0	equ	0xFEE
 14438                           wreg	equ	0xFE8
 14439                           indf1	equ	0xFE7
 14440                           postdec1	equ	0xFE5
 14441                           plusw1	equ	0xFE3
 14442                           fsr1h	equ	0xFE2
 14443                           fsr1l	equ	0xFE1
 14444                           indf2	equ	0xFDF
 14445                           postinc2	equ	0xFDE
 14446                           postdec2	equ	0xFDD
 14447                           plusw2	equ	0xFDB
 14448                           fsr2h	equ	0xFDA
 14449                           fsr2l	equ	0xFD9
 14450                           status	equ	0xFD8
 14451                           
 14452 ;; *************** function _internalFlash_readPage *****************
 14453 ;; Defined at:
 14454 ;;		line 37 in file "internal_flash.c"
 14455 ;; Parameters:    Size  Location     Type
 14456 ;;  page            2   21[COMRAM] unsigned int 
 14457 ;; Auto vars:     Size  Location     Type
 14458 ;;  address         4   23[COMRAM] unsigned long 
 14459 ;; Return value:  Size  Location     Type
 14460 ;;                  1    wreg      void 
 14461 ;; Registers used:
 14462 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14463 ;; Tracked objects:
 14464 ;;		On entry : 0/0
 14465 ;;		On exit  : 0/0
 14466 ;;		Unchanged: 0/0
 14467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14469 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14471 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14472 ;;Total ram usage:        6 bytes
 14473 ;; Hardware stack levels used:    1
 14474 ;; Hardware stack levels required when called:    2
 14475 ;; This function calls:
 14476 ;;		_internalFlash_addressFromPage
 14477 ;;		_internalFlash_read
 14478 ;; This function is called by:
 14479 ;;		__bootloader_program
 14480 ;; This function uses a non-reentrant model
 14481 ;;
 14482                           
 14483                           	psect	text58
 14484  0074D4                     __ptext58:
 14485                           	opt stack 0
 14486  0074D4                     _internalFlash_readPage:
 14487                           	opt stack 26
 14488                           
 14489                           ;internal_flash.c: 39: uint32_t address;;internal_flash.c: 40: address = internalFlash_a
      +                          ddressFromPage(page);
 14490                           
 14491                           ;incstack = 0
 14492  0074D4  C016  F001         	movff	internalFlash_readPage@page,internalFlash_addressFromPage@page
 14493  0074D8  C017  F002         	movff	internalFlash_readPage@page+1,internalFlash_addressFromPage@page+1
 14494  0074DC  ECB3  F03C         	call	_internalFlash_addressFromPage	;wreg free
 14495  0074E0  C001  F018         	movff	?_internalFlash_addressFromPage,internalFlash_readPage@address
 14496  0074E4  C002  F019         	movff	?_internalFlash_addressFromPage+1,internalFlash_readPage@address+1
 14497  0074E8  C003  F01A         	movff	?_internalFlash_addressFromPage+2,internalFlash_readPage@address+2
 14498  0074EC  C004  F01B         	movff	?_internalFlash_addressFromPage+3,internalFlash_readPage@address+3
 14499                           
 14500                           ;internal_flash.c: 41: internalFlash_read(address, 1024, pageBuffer);
 14501  0074F0  C018  F00E         	movff	internalFlash_readPage@address,internalFlash_read@address
 14502  0074F4  C019  F00F         	movff	internalFlash_readPage@address+1,internalFlash_read@address+1
 14503  0074F8  C01A  F010         	movff	internalFlash_readPage@address+2,internalFlash_read@address+2
 14504  0074FC  C01B  F011         	movff	internalFlash_readPage@address+3,internalFlash_read@address+3
 14505  007500  0E04               	movlw	4
 14506  007502  6E13               	movwf	internalFlash_read@data_length+1,c
 14507  007504  0E00               	movlw	0
 14508  007506  6E12               	movwf	internalFlash_read@data_length,c
 14509  007508  0E00               	movlw	low _pageBuffer
 14510  00750A  6E14               	movwf	internalFlash_read@buffer,c
 14511  00750C  0E08               	movlw	high _pageBuffer
 14512  00750E  6E15               	movwf	internalFlash_read@buffer+1,c
 14513  007510  EC98  F03B         	call	_internalFlash_read	;wreg free
 14514  007514  0012               	return		;funcret
 14515  007516                     __end_of_internalFlash_readPage:
 14516                           	opt stack 0
 14517                           tblptru	equ	0xFF8
 14518                           tblptrh	equ	0xFF7
 14519                           tblptrl	equ	0xFF6
 14520                           tablat	equ	0xFF5
 14521                           prodh	equ	0xFF4
 14522                           prodl	equ	0xFF3
 14523                           intcon	equ	0xFF2
 14524                           intcon2	equ	0xFF1
 14525                           intcon3	equ	0xFF0
 14526                           postinc0	equ	0xFEE
 14527                           wreg	equ	0xFE8
 14528                           indf1	equ	0xFE7
 14529                           postdec1	equ	0xFE5
 14530                           plusw1	equ	0xFE3
 14531                           fsr1h	equ	0xFE2
 14532                           fsr1l	equ	0xFE1
 14533                           indf2	equ	0xFDF
 14534                           postinc2	equ	0xFDE
 14535                           postdec2	equ	0xFDD
 14536                           plusw2	equ	0xFDB
 14537                           fsr2h	equ	0xFDA
 14538                           fsr2l	equ	0xFD9
 14539                           status	equ	0xFD8
 14540                           
 14541 ;; *************** function _internalFlash_read *****************
 14542 ;; Defined at:
 14543 ;;		line 144 in file "internal_flash.c"
 14544 ;; Parameters:    Size  Location     Type
 14545 ;;  address         4   13[COMRAM] unsigned long 
 14546 ;;  data_length     2   17[COMRAM] unsigned int 
 14547 ;;  buffer          2   19[COMRAM] PTR unsigned char 
 14548 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), 
 14549 ;; Auto vars:     Size  Location     Type
 14550 ;;		None
 14551 ;; Return value:  Size  Location     Type
 14552 ;;                  1    wreg      unsigned char 
 14553 ;; Registers used:
 14554 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14555 ;; Tracked objects:
 14556 ;;		On entry : 0/0
 14557 ;;		On exit  : 0/0
 14558 ;;		Unchanged: 0/0
 14559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14560 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14563 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14564 ;;Total ram usage:        8 bytes
 14565 ;; Hardware stack levels used:    1
 14566 ;; Hardware stack levels required when called:    1
 14567 ;; This function calls:
 14568 ;;		_memcpy
 14569 ;; This function is called by:
 14570 ;;		_internalFlash_readPage
 14571 ;;		__bootloader_verify_program_memory
 14572 ;; This function uses a non-reentrant model
 14573 ;;
 14574                           
 14575                           	psect	text59
 14576  007730                     __ptext59:
 14577                           	opt stack 0
 14578  007730                     _internalFlash_read:
 14579                           	opt stack 26
 14580                           
 14581                           ;internal_flash.c: 149: if(address >= 0x1FFFF)
 14582                           
 14583                           ;incstack = 0
 14584  007730  5011               	movf	internalFlash_read@address+3,w,c
 14585  007732  E118               	bnz	l2397
 14586  007734  280E               	incf	internalFlash_read@address,w,c
 14587  007736  0EFF               	movlw	255
 14588  007738  580F               	subwfb	internalFlash_read@address+1,w,c
 14589  00773A  0E01               	movlw	1
 14590  00773C  5810               	subwfb	internalFlash_read@address+2,w,c
 14591  00773E  B0D8               	btfsc	status,0,c
 14592  007740  0012               	return	
 14593                           
 14594                           ;internal_flash.c: 152: };internal_flash.c: 155: memcpy;internal_flash.c: 156: (;interna
      +                          l_flash.c: 157: (void*)buffer,;internal_flash.c: 158: (const void*)(address),;internal_f
      +                          lash.c: 159: data_length;internal_flash.c: 160: );
 14595                           
 14596                           ;internal_flash.c: 150: {;internal_flash.c: 151: return 0;;	Return value of _internalFla
      +                          sh_read is never used
 14597  007742  C014  F001         	movff	internalFlash_read@buffer,memcpy@d1
 14598  007746  C015  F002         	movff	internalFlash_read@buffer+1,memcpy@d1+1
 14599  00774A  C00E  F003         	movff	internalFlash_read@address,memcpy@s1
 14600  00774E  C00F  F004         	movff	internalFlash_read@address+1,memcpy@s1+1
 14601  007752  C010  F005         	movff	internalFlash_read@address+2,memcpy@s1+2
 14602  007756  C012  F006         	movff	internalFlash_read@data_length,memcpy@n
 14603  00775A  C013  F007         	movff	internalFlash_read@data_length+1,memcpy@n+1
 14604  00775E  EC9F  F035         	call	_memcpy	;wreg free
 14605  007762  0012               	return	
 14606  007764                     l2397:
 14607  007764  0012               	return		;funcret
 14608  007766                     __end_of_internalFlash_read:
 14609                           	opt stack 0
 14610                           tblptru	equ	0xFF8
 14611                           tblptrh	equ	0xFF7
 14612                           tblptrl	equ	0xFF6
 14613                           tablat	equ	0xFF5
 14614                           prodh	equ	0xFF4
 14615                           prodl	equ	0xFF3
 14616                           intcon	equ	0xFF2
 14617                           intcon2	equ	0xFF1
 14618                           intcon3	equ	0xFF0
 14619                           postinc0	equ	0xFEE
 14620                           wreg	equ	0xFE8
 14621                           indf1	equ	0xFE7
 14622                           postdec1	equ	0xFE5
 14623                           plusw1	equ	0xFE3
 14624                           fsr1h	equ	0xFE2
 14625                           fsr1l	equ	0xFE1
 14626                           indf2	equ	0xFDF
 14627                           postinc2	equ	0xFDE
 14628                           postdec2	equ	0xFDD
 14629                           plusw2	equ	0xFDB
 14630                           fsr2h	equ	0xFDA
 14631                           fsr2l	equ	0xFD9
 14632                           status	equ	0xFD8
 14633                           
 14634 ;; *************** function _internalFlash_pageFromAddress *****************
 14635 ;; Defined at:
 14636 ;;		line 308 in file "internal_flash.c"
 14637 ;; Parameters:    Size  Location     Type
 14638 ;;  address         4    0[COMRAM] unsigned long 
 14639 ;; Auto vars:     Size  Location     Type
 14640 ;;		None
 14641 ;; Return value:  Size  Location     Type
 14642 ;;                  2    0[COMRAM] unsigned int 
 14643 ;; Registers used:
 14644 ;;		wreg, status,2, status,0
 14645 ;; Tracked objects:
 14646 ;;		On entry : 0/0
 14647 ;;		On exit  : 0/0
 14648 ;;		Unchanged: 0/0
 14649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14650 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14651 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14652 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14653 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14654 ;;Total ram usage:        5 bytes
 14655 ;; Hardware stack levels used:    1
 14656 ;; This function calls:
 14657 ;;		Nothing
 14658 ;; This function is called by:
 14659 ;;		__bootloader_program
 14660 ;; This function uses a non-reentrant model
 14661 ;;
 14662                           
 14663                           	psect	text60
 14664  007C58                     __ptext60:
 14665                           	opt stack 0
 14666  007C58                     _internalFlash_pageFromAddress:
 14667                           	opt stack 28
 14668                           
 14669                           ;internal_flash.c: 310: address >>= 10;
 14670                           
 14671                           ;incstack = 0
 14672  007C58  0E0A               	movlw	10
 14673  007C5A  6E05               	movwf	??_internalFlash_pageFromAddress& (0+255),c
 14674  007C5C                     u9835:
 14675  007C5C  90D8               	bcf	status,0,c
 14676  007C5E  3204               	rrcf	internalFlash_pageFromAddress@address+3,f,c
 14677  007C60  3203               	rrcf	internalFlash_pageFromAddress@address+2,f,c
 14678  007C62  3202               	rrcf	internalFlash_pageFromAddress@address+1,f,c
 14679  007C64  3201               	rrcf	internalFlash_pageFromAddress@address,f,c
 14680  007C66  2E05               	decfsz	??_internalFlash_pageFromAddress& (0+255),f,c
 14681  007C68  D7F9               	goto	u9835
 14682                           
 14683                           ;internal_flash.c: 311: return (uint16_t) address;
 14684  007C6A  C001  F001         	movff	internalFlash_pageFromAddress@address,?_internalFlash_pageFromAddress
 14685  007C6E  C002  F002         	movff	internalFlash_pageFromAddress@address+1,?_internalFlash_pageFromAddress+1
 14686  007C72  0012               	return	
 14687  007C74                     __end_of_internalFlash_pageFromAddress:
 14688                           	opt stack 0
 14689                           tblptru	equ	0xFF8
 14690                           tblptrh	equ	0xFF7
 14691                           tblptrl	equ	0xFF6
 14692                           tablat	equ	0xFF5
 14693                           prodh	equ	0xFF4
 14694                           prodl	equ	0xFF3
 14695                           intcon	equ	0xFF2
 14696                           intcon2	equ	0xFF1
 14697                           intcon3	equ	0xFF0
 14698                           postinc0	equ	0xFEE
 14699                           wreg	equ	0xFE8
 14700                           indf1	equ	0xFE7
 14701                           postdec1	equ	0xFE5
 14702                           plusw1	equ	0xFE3
 14703                           fsr1h	equ	0xFE2
 14704                           fsr1l	equ	0xFE1
 14705                           indf2	equ	0xFDF
 14706                           postinc2	equ	0xFDE
 14707                           postdec2	equ	0xFDD
 14708                           plusw2	equ	0xFDB
 14709                           fsr2h	equ	0xFDA
 14710                           fsr2l	equ	0xFD9
 14711                           status	equ	0xFD8
 14712                           
 14713 ;; *************** function _internalFlash_getBuffer *****************
 14714 ;; Defined at:
 14715 ;;		line 32 in file "internal_flash.c"
 14716 ;; Parameters:    Size  Location     Type
 14717 ;;		None
 14718 ;; Auto vars:     Size  Location     Type
 14719 ;;		None
 14720 ;; Return value:  Size  Location     Type
 14721 ;;                  2    0[COMRAM] PTR unsigned char 
 14722 ;; Registers used:
 14723 ;;		wreg, status,2, status,0
 14724 ;; Tracked objects:
 14725 ;;		On entry : 0/0
 14726 ;;		On exit  : 0/0
 14727 ;;		Unchanged: 0/0
 14728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14729 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14732 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14733 ;;Total ram usage:        2 bytes
 14734 ;; Hardware stack levels used:    1
 14735 ;; This function calls:
 14736 ;;		Nothing
 14737 ;; This function is called by:
 14738 ;;		__bootloader_program
 14739 ;; This function uses a non-reentrant model
 14740 ;;
 14741                           
 14742                           	psect	text61
 14743  007D96                     __ptext61:
 14744                           	opt stack 0
 14745  007D96                     _internalFlash_getBuffer:
 14746                           	opt stack 28
 14747                           
 14748                           ;internal_flash.c: 34: return pageBuffer;
 14749                           
 14750                           ;incstack = 0
 14751  007D96  0E00               	movlw	low _pageBuffer
 14752  007D98  6E01               	movwf	?_internalFlash_getBuffer,c
 14753  007D9A  0E08               	movlw	high _pageBuffer
 14754  007D9C  6E02               	movwf	?_internalFlash_getBuffer+1,c
 14755  007D9E  0012               	return	
 14756  007DA0                     __end_of_internalFlash_getBuffer:
 14757                           	opt stack 0
 14758                           tblptru	equ	0xFF8
 14759                           tblptrh	equ	0xFF7
 14760                           tblptrl	equ	0xFF6
 14761                           tablat	equ	0xFF5
 14762                           prodh	equ	0xFF4
 14763                           prodl	equ	0xFF3
 14764                           intcon	equ	0xFF2
 14765                           intcon2	equ	0xFF1
 14766                           intcon3	equ	0xFF0
 14767                           postinc0	equ	0xFEE
 14768                           wreg	equ	0xFE8
 14769                           indf1	equ	0xFE7
 14770                           postdec1	equ	0xFE5
 14771                           plusw1	equ	0xFE3
 14772                           fsr1h	equ	0xFE2
 14773                           fsr1l	equ	0xFE1
 14774                           indf2	equ	0xFDF
 14775                           postinc2	equ	0xFDE
 14776                           postdec2	equ	0xFDD
 14777                           plusw2	equ	0xFDB
 14778                           fsr2h	equ	0xFDA
 14779                           fsr2l	equ	0xFD9
 14780                           status	equ	0xFD8
 14781                           
 14782 ;; *************** function _internalFlash_erasePage *****************
 14783 ;; Defined at:
 14784 ;;		line 44 in file "internal_flash.c"
 14785 ;; Parameters:    Size  Location     Type
 14786 ;;  page            2    2[COMRAM] unsigned int 
 14787 ;; Auto vars:     Size  Location     Type
 14788 ;;  address         4    4[COMRAM] unsigned long 
 14789 ;; Return value:  Size  Location     Type
 14790 ;;                  1    wreg      void 
 14791 ;; Registers used:
 14792 ;;		wreg, status,2, status,0, cstack
 14793 ;; Tracked objects:
 14794 ;;		On entry : 0/0
 14795 ;;		On exit  : 0/0
 14796 ;;		Unchanged: 0/0
 14797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14798 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14799 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14801 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14802 ;;Total ram usage:        6 bytes
 14803 ;; Hardware stack levels used:    1
 14804 ;; Hardware stack levels required when called:    1
 14805 ;; This function calls:
 14806 ;;		__internalFlash_unlockAndActivate
 14807 ;; This function is called by:
 14808 ;;		__bootloader_program
 14809 ;; This function uses a non-reentrant model
 14810 ;;
 14811                           
 14812                           	psect	text62
 14813  007806                     __ptext62:
 14814                           	opt stack 0
 14815  007806                     _internalFlash_erasePage:
 14816                           	opt stack 27
 14817                           
 14818                           ;internal_flash.c: 46: uint32_t address;;internal_flash.c: 49: address = page;
 14819                           
 14820                           ;incstack = 0
 14821  007806  C003  F005         	movff	internalFlash_erasePage@page,internalFlash_erasePage@address
 14822  00780A  C004  F006         	movff	internalFlash_erasePage@page+1,internalFlash_erasePage@address+1
 14823  00780E  6A07               	clrf	internalFlash_erasePage@address+2,c
 14824  007810  6A08               	clrf	internalFlash_erasePage@address+3,c
 14825                           
 14826                           ;internal_flash.c: 50: address <<= 10;
 14827  007812  0E0A               	movlw	10
 14828  007814                     u9845:
 14829  007814  90D8               	bcf	status,0,c
 14830  007816  3605               	rlcf	internalFlash_erasePage@address,f,c
 14831  007818  3606               	rlcf	internalFlash_erasePage@address+1,f,c
 14832  00781A  3607               	rlcf	internalFlash_erasePage@address+2,f,c
 14833  00781C  3608               	rlcf	internalFlash_erasePage@address+3,f,c
 14834  00781E  2EE8               	decfsz	wreg,f,c
 14835  007820  D7F9               	goto	u9845
 14836                           
 14837                           ;internal_flash.c: 51: TBLPTR = address;
 14838  007822  C005  FFF6         	movff	internalFlash_erasePage@address,tblptrl	;volatile
 14839  007826  C006  FFF7         	movff	internalFlash_erasePage@address+1,tblptrh	;volatile
 14840  00782A  C007  FFF8         	movff	internalFlash_erasePage@address+2,tblptru	;volatile
 14841                           
 14842                           ;internal_flash.c: 57: EECON1bits.WREN = 1;
 14843  00782E  84A6               	bsf	4006,2,c	;volsfr
 14844                           
 14845                           ;internal_flash.c: 58: EECON1bits.FREE = 1;
 14846  007830  88A6               	bsf	4006,4,c	;volsfr
 14847                           
 14848                           ;internal_flash.c: 60: _internalFlash_unlockAndActivate((uint8_t)0xB5);
 14849  007832  0EB5               	movlw	181
 14850  007834  EC4B  F03D         	call	__internalFlash_unlockAndActivate
 14851  007838  0012               	return		;funcret
 14852  00783A                     __end_of_internalFlash_erasePage:
 14853                           	opt stack 0
 14854                           tblptru	equ	0xFF8
 14855                           tblptrh	equ	0xFF7
 14856                           tblptrl	equ	0xFF6
 14857                           tablat	equ	0xFF5
 14858                           prodh	equ	0xFF4
 14859                           prodl	equ	0xFF3
 14860                           intcon	equ	0xFF2
 14861                           intcon2	equ	0xFF1
 14862                           intcon3	equ	0xFF0
 14863                           postinc0	equ	0xFEE
 14864                           wreg	equ	0xFE8
 14865                           indf1	equ	0xFE7
 14866                           postdec1	equ	0xFE5
 14867                           plusw1	equ	0xFE3
 14868                           fsr1h	equ	0xFE2
 14869                           fsr1l	equ	0xFE1
 14870                           indf2	equ	0xFDF
 14871                           postinc2	equ	0xFDE
 14872                           postdec2	equ	0xFDD
 14873                           plusw2	equ	0xFDB
 14874                           fsr2h	equ	0xFDA
 14875                           fsr2l	equ	0xFD9
 14876                           status	equ	0xFD8
 14877                           
 14878 ;; *************** function __internalFlash_unlockAndActivate *****************
 14879 ;; Defined at:
 14880 ;;		line 106 in file "internal_flash.c"
 14881 ;; Parameters:    Size  Location     Type
 14882 ;;  UnlockKey       1    wreg     unsigned char 
 14883 ;; Auto vars:     Size  Location     Type
 14884 ;;  UnlockKey       1    0[COMRAM] unsigned char 
 14885 ;;  InterruptEna    1    1[COMRAM] unsigned char 
 14886 ;; Return value:  Size  Location     Type
 14887 ;;                  1    wreg      void 
 14888 ;; Registers used:
 14889 ;;		wreg, status,2, status,0
 14890 ;; Tracked objects:
 14891 ;;		On entry : 0/0
 14892 ;;		On exit  : 0/0
 14893 ;;		Unchanged: 0/0
 14894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14896 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14898 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14899 ;;Total ram usage:        2 bytes
 14900 ;; Hardware stack levels used:    1
 14901 ;; This function calls:
 14902 ;;		Nothing
 14903 ;; This function is called by:
 14904 ;;		_internalFlash_erasePage
 14905 ;;		_internalFlash_writePage
 14906 ;;		_EraseBlock
 14907 ;; This function uses a non-reentrant model
 14908 ;;
 14909                           
 14910                           	psect	text63
 14911  007A96                     __ptext63:
 14912                           	opt stack 0
 14913  007A96                     __internalFlash_unlockAndActivate:
 14914                           	opt stack 27
 14915                           
 14916                           ;incstack = 0
 14917                           ;__internalFlash_unlockAndActivate@UnlockKey stored from wreg
 14918  007A96  6E01               	movwf	__internalFlash_unlockAndActivate@UnlockKey,c
 14919                           
 14920                           ;internal_flash.c: 108: uint8_t InterruptEnableSave;;internal_flash.c: 115: if(UnlockKey
      +                           != (uint8_t)0xB5)
 14921  007A98  0EB5               	movlw	181
 14922  007A9A  1801               	xorwf	__internalFlash_unlockAndActivate@UnlockKey,w,c
 14923  007A9C  B4D8               	btfsc	status,2,c
 14924  007A9E  D002               	goto	l2388
 14925                           
 14926                           ;internal_flash.c: 116: {;internal_flash.c: 117: EECON1bits.WREN = 0;
 14927  007AA0  94A6               	bcf	4006,2,c	;volsfr
 14928                           
 14929                           ;internal_flash.c: 118: return;
 14930  007AA2  0012               	return	
 14931  007AA4                     l2388:
 14932                           
 14933                           ;internal_flash.c: 119: };internal_flash.c: 121: InterruptEnableSave = INTCON;
 14934  007AA4  CFF2 F002          	movff	intcon,__internalFlash_unlockAndActivate@InterruptEnableSave	;volatile
 14935                           
 14936                           ;internal_flash.c: 122: INTCONbits.GIEH = 0;
 14937  007AA8  9EF2               	bcf	intcon,7,c	;volatile
 14938                           
 14939                           ;internal_flash.c: 123: EECON2 = 0x55;
 14940  007AAA  0E55               	movlw	85
 14941  007AAC  6EA7               	movwf	4007,c	;volsfr
 14942                           
 14943                           ;internal_flash.c: 124: EECON2 = 0xAA;
 14944  007AAE  0EAA               	movlw	170
 14945  007AB0  6EA7               	movwf	4007,c	;volsfr
 14946                           
 14947                           ;internal_flash.c: 125: EECON1bits.WR = 1;
 14948  007AB2  82A6               	bsf	4006,1,c	;volsfr
 14949                           
 14950                           ;internal_flash.c: 126: EECON1bits.WREN = 0;
 14951  007AB4  94A6               	bcf	4006,2,c	;volsfr
 14952                           
 14953                           ;internal_flash.c: 128: if(InterruptEnableSave & 0x80)
 14954  007AB6  AE02               	btfss	__internalFlash_unlockAndActivate@InterruptEnableSave,7,c
 14955  007AB8  0012               	return	
 14956                           
 14957                           ;internal_flash.c: 129: {;internal_flash.c: 130: INTCONbits.GIEH = 1;
 14958  007ABA  8EF2               	bsf	intcon,7,c	;volatile
 14959  007ABC  0012               	return	
 14960  007ABE                     __end_of__internalFlash_unlockAndActivate:
 14961                           	opt stack 0
 14962                           tblptru	equ	0xFF8
 14963                           tblptrh	equ	0xFF7
 14964                           tblptrl	equ	0xFF6
 14965                           tablat	equ	0xFF5
 14966                           prodh	equ	0xFF4
 14967                           prodl	equ	0xFF3
 14968                           intcon	equ	0xFF2
 14969                           intcon2	equ	0xFF1
 14970                           intcon3	equ	0xFF0
 14971                           postinc0	equ	0xFEE
 14972                           wreg	equ	0xFE8
 14973                           indf1	equ	0xFE7
 14974                           postdec1	equ	0xFE5
 14975                           plusw1	equ	0xFE3
 14976                           fsr1h	equ	0xFE2
 14977                           fsr1l	equ	0xFE1
 14978                           indf2	equ	0xFDF
 14979                           postinc2	equ	0xFDE
 14980                           postdec2	equ	0xFDD
 14981                           plusw2	equ	0xFDB
 14982                           fsr2h	equ	0xFDA
 14983                           fsr2l	equ	0xFD9
 14984                           status	equ	0xFD8
 14985                           
 14986 ;; *************** function _internalFlash_addressWithinPage *****************
 14987 ;; Defined at:
 14988 ;;		line 322 in file "internal_flash.c"
 14989 ;; Parameters:    Size  Location     Type
 14990 ;;  address         4    8[COMRAM] unsigned long 
 14991 ;;  page            2   12[COMRAM] unsigned int 
 14992 ;; Auto vars:     Size  Location     Type
 14993 ;;  page_start_a    4   18[COMRAM] unsigned long 
 14994 ;; Return value:  Size  Location     Type
 14995 ;;                  2    8[COMRAM] unsigned int 
 14996 ;; Registers used:
 14997 ;;		wreg, status,2, status,0, cstack
 14998 ;; Tracked objects:
 14999 ;;		On entry : 0/0
 15000 ;;		On exit  : 0/0
 15001 ;;		Unchanged: 0/0
 15002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15003 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15004 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15005 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15006 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15007 ;;Total ram usage:       14 bytes
 15008 ;; Hardware stack levels used:    1
 15009 ;; Hardware stack levels required when called:    1
 15010 ;; This function calls:
 15011 ;;		_internalFlash_addressFromPage
 15012 ;; This function is called by:
 15013 ;;		__bootloader_program
 15014 ;; This function uses a non-reentrant model
 15015 ;;
 15016                           
 15017                           	psect	text64
 15018  006C68                     __ptext64:
 15019                           	opt stack 0
 15020  006C68                     _internalFlash_addressWithinPage:
 15021                           	opt stack 27
 15022                           
 15023                           ;internal_flash.c: 324: uint32_t page_start_address;;internal_flash.c: 325: page_start_a
      +                          ddress = internalFlash_addressFromPage(page);
 15024                           
 15025                           ;incstack = 0
 15026  006C68  C00D  F001         	movff	internalFlash_addressWithinPage@page,internalFlash_addressFromPage@page
 15027  006C6C  C00E  F002         	movff	internalFlash_addressWithinPage@page+1,internalFlash_addressFromPage@page+1
 15028  006C70  ECB3  F03C         	call	_internalFlash_addressFromPage	;wreg free
 15029  006C74  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_addressWithinPage@page_start_addres
      +                          s
 15030  006C78  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_addressWithinPage@page_start_addr
      +                          ess+1
 15031  006C7C  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_addressWithinPage@page_start_addr
      +                          ess+2
 15032  006C80  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_addressWithinPage@page_start_addr
      +                          ess+3
 15033                           
 15034                           ;internal_flash.c: 326: address = address - page_start_address;
 15035  006C84  C013  F00F         	movff	internalFlash_addressWithinPage@page_start_address,??_internalFlash_addressWithin
      +                          Page
 15036  006C88  C014  F010         	movff	internalFlash_addressWithinPage@page_start_address+1,??_internalFlash_addressWith
      +                          inPage+1
 15037  006C8C  C015  F011         	movff	internalFlash_addressWithinPage@page_start_address+2,??_internalFlash_addressWith
      +                          inPage+2
 15038  006C90  C016  F012         	movff	internalFlash_addressWithinPage@page_start_address+3,??_internalFlash_addressWith
      +                          inPage+3
 15039  006C94  1E0F               	comf	??_internalFlash_addressWithinPage,f,c
 15040  006C96  1E10               	comf	??_internalFlash_addressWithinPage+1,f,c
 15041  006C98  1E11               	comf	??_internalFlash_addressWithinPage+2,f,c
 15042  006C9A  1E12               	comf	??_internalFlash_addressWithinPage+3,f,c
 15043  006C9C  2A0F               	incf	??_internalFlash_addressWithinPage,f,c
 15044  006C9E  0E00               	movlw	0
 15045  006CA0  2210               	addwfc	??_internalFlash_addressWithinPage+1,f,c
 15046  006CA2  2211               	addwfc	??_internalFlash_addressWithinPage+2,f,c
 15047  006CA4  2212               	addwfc	??_internalFlash_addressWithinPage+3,f,c
 15048  006CA6  5009               	movf	internalFlash_addressWithinPage@address,w,c
 15049  006CA8  240F               	addwf	??_internalFlash_addressWithinPage,w,c
 15050  006CAA  6E09               	movwf	internalFlash_addressWithinPage@address,c
 15051  006CAC  500A               	movf	internalFlash_addressWithinPage@address+1,w,c
 15052  006CAE  2010               	addwfc	??_internalFlash_addressWithinPage+1,w,c
 15053  006CB0  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
 15054  006CB2  500B               	movf	internalFlash_addressWithinPage@address+2,w,c
 15055  006CB4  2011               	addwfc	??_internalFlash_addressWithinPage+2,w,c
 15056  006CB6  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
 15057  006CB8  500C               	movf	internalFlash_addressWithinPage@address+3,w,c
 15058  006CBA  2012               	addwfc	??_internalFlash_addressWithinPage+3,w,c
 15059  006CBC  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
 15060                           
 15061                           ;internal_flash.c: 327: return (uint16_t) address;
 15062  006CBE  C009  F009         	movff	internalFlash_addressWithinPage@address,?_internalFlash_addressWithinPage
 15063  006CC2  C00A  F00A         	movff	internalFlash_addressWithinPage@address+1,?_internalFlash_addressWithinPage+1
 15064  006CC6  0012               	return	
 15065  006CC8                     __end_of_internalFlash_addressWithinPage:
 15066                           	opt stack 0
 15067                           tblptru	equ	0xFF8
 15068                           tblptrh	equ	0xFF7
 15069                           tblptrl	equ	0xFF6
 15070                           tablat	equ	0xFF5
 15071                           prodh	equ	0xFF4
 15072                           prodl	equ	0xFF3
 15073                           intcon	equ	0xFF2
 15074                           intcon2	equ	0xFF1
 15075                           intcon3	equ	0xFF0
 15076                           postinc0	equ	0xFEE
 15077                           wreg	equ	0xFE8
 15078                           indf1	equ	0xFE7
 15079                           postdec1	equ	0xFE5
 15080                           plusw1	equ	0xFE3
 15081                           fsr1h	equ	0xFE2
 15082                           fsr1l	equ	0xFE1
 15083                           indf2	equ	0xFDF
 15084                           postinc2	equ	0xFDE
 15085                           postdec2	equ	0xFDD
 15086                           plusw2	equ	0xFDB
 15087                           fsr2h	equ	0xFDA
 15088                           fsr2l	equ	0xFD9
 15089                           status	equ	0xFD8
 15090                           
 15091 ;; *************** function _internalFlash_addressFromPage *****************
 15092 ;; Defined at:
 15093 ;;		line 314 in file "internal_flash.c"
 15094 ;; Parameters:    Size  Location     Type
 15095 ;;  page            2    0[COMRAM] unsigned int 
 15096 ;; Auto vars:     Size  Location     Type
 15097 ;;  address         4    4[COMRAM] unsigned long 
 15098 ;; Return value:  Size  Location     Type
 15099 ;;                  4    0[COMRAM] unsigned long 
 15100 ;; Registers used:
 15101 ;;		wreg, status,2, status,0
 15102 ;; Tracked objects:
 15103 ;;		On entry : 0/0
 15104 ;;		On exit  : 0/0
 15105 ;;		Unchanged: 0/0
 15106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15107 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15108 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15110 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15111 ;;Total ram usage:        8 bytes
 15112 ;; Hardware stack levels used:    1
 15113 ;; This function calls:
 15114 ;;		Nothing
 15115 ;; This function is called by:
 15116 ;;		_internalFlash_readPage
 15117 ;;		_internalFlash_addressWithinPage
 15118 ;; This function uses a non-reentrant model
 15119 ;;
 15120                           
 15121                           	psect	text65
 15122  007966                     __ptext65:
 15123                           	opt stack 0
 15124  007966                     _internalFlash_addressFromPage:
 15125                           	opt stack 27
 15126                           
 15127                           ;internal_flash.c: 316: uint32_t address;;internal_flash.c: 317: address = (uint32_t) pa
      +                          ge;
 15128                           
 15129                           ;incstack = 0
 15130  007966  C001  F005         	movff	internalFlash_addressFromPage@page,internalFlash_addressFromPage@address
 15131  00796A  C002  F006         	movff	internalFlash_addressFromPage@page+1,internalFlash_addressFromPage@address+1
 15132  00796E  6A07               	clrf	internalFlash_addressFromPage@address+2,c
 15133  007970  6A08               	clrf	internalFlash_addressFromPage@address+3,c
 15134                           
 15135                           ;internal_flash.c: 318: address <<= 10;
 15136  007972  0E0A               	movlw	10
 15137  007974                     u8965:
 15138  007974  90D8               	bcf	status,0,c
 15139  007976  3605               	rlcf	internalFlash_addressFromPage@address,f,c
 15140  007978  3606               	rlcf	internalFlash_addressFromPage@address+1,f,c
 15141  00797A  3607               	rlcf	internalFlash_addressFromPage@address+2,f,c
 15142  00797C  3608               	rlcf	internalFlash_addressFromPage@address+3,f,c
 15143  00797E  2EE8               	decfsz	wreg,f,c
 15144  007980  D7F9               	goto	u8965
 15145                           
 15146                           ;internal_flash.c: 319: return address;
 15147  007982  C005  F001         	movff	internalFlash_addressFromPage@address,?_internalFlash_addressFromPage
 15148  007986  C006  F002         	movff	internalFlash_addressFromPage@address+1,?_internalFlash_addressFromPage+1
 15149  00798A  C007  F003         	movff	internalFlash_addressFromPage@address+2,?_internalFlash_addressFromPage+2
 15150  00798E  C008  F004         	movff	internalFlash_addressFromPage@address+3,?_internalFlash_addressFromPage+3
 15151  007992  0012               	return	
 15152  007994                     __end_of_internalFlash_addressFromPage:
 15153                           	opt stack 0
 15154                           tblptru	equ	0xFF8
 15155                           tblptrh	equ	0xFF7
 15156                           tblptrl	equ	0xFF6
 15157                           tablat	equ	0xFF5
 15158                           prodh	equ	0xFF4
 15159                           prodl	equ	0xFF3
 15160                           intcon	equ	0xFF2
 15161                           intcon2	equ	0xFF1
 15162                           intcon3	equ	0xFF0
 15163                           postinc0	equ	0xFEE
 15164                           wreg	equ	0xFE8
 15165                           indf1	equ	0xFE7
 15166                           postdec1	equ	0xFE5
 15167                           plusw1	equ	0xFE3
 15168                           fsr1h	equ	0xFE2
 15169                           fsr1l	equ	0xFE1
 15170                           indf2	equ	0xFDF
 15171                           postinc2	equ	0xFDE
 15172                           postdec2	equ	0xFDD
 15173                           plusw2	equ	0xFDB
 15174                           fsr2h	equ	0xFDA
 15175                           fsr2l	equ	0xFD9
 15176                           status	equ	0xFD8
 15177                           
 15178 ;; *************** function __bootloader_check_address *****************
 15179 ;; Defined at:
 15180 ;;		line 100 in file "bootloader.c"
 15181 ;; Parameters:    Size  Location     Type
 15182 ;;  address         4    0[COMRAM] unsigned long 
 15183 ;;  dataLength      1    4[COMRAM] unsigned char 
 15184 ;; Auto vars:     Size  Location     Type
 15185 ;;  cntr            1   11[COMRAM] unsigned char 
 15186 ;;  byte_status     1   10[COMRAM] enum E6923
 15187 ;;  worst_case      1    9[COMRAM] enum E6923
 15188 ;; Return value:  Size  Location     Type
 15189 ;;                  1    wreg      enum E6923
 15190 ;; Registers used:
 15191 ;;		wreg, status,2, status,0
 15192 ;; Tracked objects:
 15193 ;;		On entry : 0/0
 15194 ;;		On exit  : 0/0
 15195 ;;		Unchanged: 0/0
 15196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15197 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15198 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15199 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15200 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15201 ;;Total ram usage:       12 bytes
 15202 ;; Hardware stack levels used:    1
 15203 ;; This function calls:
 15204 ;;		Nothing
 15205 ;; This function is called by:
 15206 ;;		__bootloader_verify_file
 15207 ;;		__bootloader_program
 15208 ;; This function uses a non-reentrant model
 15209 ;;
 15210                           
 15211                           	psect	text66
 15212  004BB0                     __ptext66:
 15213                           	opt stack 0
 15214  004BB0                     __bootloader_check_address:
 15215                           	opt stack 28
 15216                           
 15217                           ;bootloader.c: 102: addressCheckResult_t byte_status;;bootloader.c: 103: addressCheckRes
      +                          ult_t worst_case;;bootloader.c: 104: uint8_t cntr;;bootloader.c: 106: worst_case = ADDRE
      +                          SS_CHECK_RESULT_OK;
 15218                           
 15219                           ;incstack = 0
 15220  004BB0  0E00               	movlw	0
 15221  004BB2  6E0A               	movwf	__bootloader_check_address@worst_case,c
 15222                           
 15223                           ;bootloader.c: 109: for(cntr=0; cntr<dataLength; ++cntr)
 15224  004BB4  0E00               	movlw	0
 15225  004BB6  6E0C               	movwf	__bootloader_check_address@cntr,c
 15226  004BB8  D062               	goto	l2250
 15227  004BBA                     
 15228                           ;bootloader.c: 110: {;bootloader.c: 112: if(((address+cntr)>=0x09000) && ((address+cntr)
      +                          <=0x1FFF7))
 15229  004BBA  500C               	movf	__bootloader_check_address@cntr,w,c
 15230  004BBC  2401               	addwf	__bootloader_check_address@address,w,c
 15231  004BBE  6E06               	movwf	??__bootloader_check_address& (0+255),c
 15232  004BC0  0E00               	movlw	0
 15233  004BC2  2002               	addwfc	__bootloader_check_address@address+1,w,c
 15234  004BC4  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 15235  004BC6  0E00               	movlw	0
 15236  004BC8  2003               	addwfc	__bootloader_check_address@address+2,w,c
 15237  004BCA  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 15238  004BCC  0E00               	movlw	0
 15239  004BCE  2004               	addwfc	__bootloader_check_address@address+3,w,c
 15240  004BD0  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 15241  004BD2  5009               	movf	??__bootloader_check_address+3,w,c
 15242  004BD4  1008               	iorwf	??__bootloader_check_address+2,w,c
 15243  004BD6  E104               	bnz	u9760
 15244  004BD8  0E90               	movlw	144
 15245  004BDA  5C07               	subwf	??__bootloader_check_address+1,w,c
 15246  004BDC  A0D8               	btfss	status,0,c
 15247  004BDE  D018               	goto	l2252
 15248  004BE0                     u9760:
 15249  004BE0  500C               	movf	__bootloader_check_address@cntr,w,c
 15250  004BE2  2401               	addwf	__bootloader_check_address@address,w,c
 15251  004BE4  6E06               	movwf	??__bootloader_check_address& (0+255),c
 15252  004BE6  0E00               	movlw	0
 15253  004BE8  2002               	addwfc	__bootloader_check_address@address+1,w,c
 15254  004BEA  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 15255  004BEC  0E00               	movlw	0
 15256  004BEE  2003               	addwfc	__bootloader_check_address@address+2,w,c
 15257  004BF0  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 15258  004BF2  0E00               	movlw	0
 15259  004BF4  2004               	addwfc	__bootloader_check_address@address+3,w,c
 15260  004BF6  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 15261  004BF8  5009               	movf	??__bootloader_check_address+3,w,c
 15262  004BFA  E10A               	bnz	l12782
 15263  004BFC  0EF8               	movlw	248
 15264  004BFE  5C06               	subwf	??__bootloader_check_address,w,c
 15265  004C00  0EFF               	movlw	255
 15266  004C02  5807               	subwfb	??__bootloader_check_address+1,w,c
 15267  004C04  0E01               	movlw	1
 15268  004C06  5808               	subwfb	??__bootloader_check_address+2,w,c
 15269  004C08  B0D8               	btfsc	status,0,c
 15270  004C0A  D002               	goto	l2252
 15271                           
 15272                           ;bootloader.c: 113: {;bootloader.c: 114: byte_status = ADDRESS_CHECK_RESULT_OK;
 15273  004C0C  0E00               	movlw	0
 15274  004C0E  D029               	goto	L4
 15275  004C10                     l2252:
 15276  004C10                     l12782:
 15277                           
 15278                           ;bootloader.c: 118: else if(((address+cntr)>=0x1FFF8) && ((address+cntr)<=0x1FFFF))
 15279  004C10  500C               	movf	__bootloader_check_address@cntr,w,c
 15280  004C12  2401               	addwf	__bootloader_check_address@address,w,c
 15281  004C14  6E06               	movwf	??__bootloader_check_address& (0+255),c
 15282  004C16  0E00               	movlw	0
 15283  004C18  2002               	addwfc	__bootloader_check_address@address+1,w,c
 15284  004C1A  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 15285  004C1C  0E00               	movlw	0
 15286  004C1E  2003               	addwfc	__bootloader_check_address@address+2,w,c
 15287  004C20  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 15288  004C22  0E00               	movlw	0
 15289  004C24  2004               	addwfc	__bootloader_check_address@address+3,w,c
 15290  004C26  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 15291  004C28  5009               	movf	??__bootloader_check_address+3,w,c
 15292  004C2A  E108               	bnz	u9780
 15293  004C2C  0EF8               	movlw	248
 15294  004C2E  5C06               	subwf	??__bootloader_check_address,w,c
 15295  004C30  0EFF               	movlw	255
 15296  004C32  5807               	subwfb	??__bootloader_check_address+1,w,c
 15297  004C34  0E01               	movlw	1
 15298  004C36  5808               	subwfb	??__bootloader_check_address+2,w,c
 15299  004C38  A0D8               	btfss	status,0,c
 15300  004C3A  D015               	goto	l2254
 15301  004C3C                     u9780:
 15302  004C3C  500C               	movf	__bootloader_check_address@cntr,w,c
 15303  004C3E  2401               	addwf	__bootloader_check_address@address,w,c
 15304  004C40  6E06               	movwf	??__bootloader_check_address& (0+255),c
 15305  004C42  0E00               	movlw	0
 15306  004C44  2002               	addwfc	__bootloader_check_address@address+1,w,c
 15307  004C46  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 15308  004C48  0E00               	movlw	0
 15309  004C4A  2003               	addwfc	__bootloader_check_address@address+2,w,c
 15310  004C4C  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 15311  004C4E  0E00               	movlw	0
 15312  004C50  2004               	addwfc	__bootloader_check_address@address+3,w,c
 15313  004C52  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 15314  004C54  5009               	movf	??__bootloader_check_address+3,w,c
 15315  004C56  E107               	bnz	l2254
 15316  004C58  0E02               	movlw	2
 15317  004C5A  5C08               	subwf	??__bootloader_check_address+2,w,c
 15318  004C5C  B0D8               	btfsc	status,0,c
 15319  004C5E  D003               	goto	l2254
 15320                           
 15321                           ;bootloader.c: 119: {;bootloader.c: 120: byte_status = ADDRESS_CHECK_RESULT_CONFIGURATIO
      +                          N_BITS;
 15322  004C60  0E01               	movlw	1
 15323  004C62                     L4:
 15324  004C62  6E0B               	movwf	__bootloader_check_address@byte_status,c
 15325                           
 15326                           ;bootloader.c: 121: }
 15327  004C64  D001               	goto	l2255
 15328  004C66                     l2254:
 15329                           
 15330                           ;bootloader.c: 122: else;bootloader.c: 123: {;bootloader.c: 124: byte_status = ADDRESS_C
      +                          HECK_RESULT_ERROR;
 15331  004C66  680B               	setf	__bootloader_check_address@byte_status,c
 15332  004C68                     l2255:
 15333                           
 15334                           ;bootloader.c: 125: };bootloader.c: 128: if(byte_status == ADDRESS_CHECK_RESULT_ERROR)
 15335  004C68  280B               	incf	__bootloader_check_address@byte_status,w,c
 15336  004C6A  A4D8               	btfss	status,2,c
 15337  004C6C  D002               	goto	l2256
 15338                           
 15339                           ;bootloader.c: 129: {;bootloader.c: 130: return ADDRESS_CHECK_RESULT_ERROR;
 15340  004C6E  0EFF               	movlw	255
 15341  004C70  0012               	return	
 15342  004C72                     l2256:
 15343                           
 15344                           ;bootloader.c: 131: };bootloader.c: 134: if(byte_status > worst_case)
 15345  004C72  500B               	movf	__bootloader_check_address@byte_status,w,c
 15346  004C74  5C0A               	subwf	__bootloader_check_address@worst_case,w,c
 15347  004C76  A0D8               	btfss	status,0,c
 15348                           
 15349                           ;bootloader.c: 135: {;bootloader.c: 136: worst_case = byte_status;
 15350  004C78  C00B  F00A         	movff	__bootloader_check_address@byte_status,__bootloader_check_address@worst_case
 15351  004C7C  2A0C               	incf	__bootloader_check_address@cntr,f,c
 15352  004C7E                     l2250:
 15353  004C7E  5005               	movf	__bootloader_check_address@dataLength,w,c
 15354  004C80  5C0C               	subwf	__bootloader_check_address@cntr,w,c
 15355  004C82  A0D8               	btfss	status,0,c
 15356  004C84  D79A               	goto	l2251
 15357                           
 15358                           ;bootloader.c: 137: };bootloader.c: 138: };bootloader.c: 140: return worst_case;
 15359  004C86  500A               	movf	__bootloader_check_address@worst_case,w,c
 15360  004C88  0012               	return	
 15361  004C8A                     __end_of__bootloader_check_address:
 15362                           	opt stack 0
 15363                           tblptru	equ	0xFF8
 15364                           tblptrh	equ	0xFF7
 15365                           tblptrl	equ	0xFF6
 15366                           tablat	equ	0xFF5
 15367                           prodh	equ	0xFF4
 15368                           prodl	equ	0xFF3
 15369                           intcon	equ	0xFF2
 15370                           intcon2	equ	0xFF1
 15371                           intcon3	equ	0xFF0
 15372                           postinc0	equ	0xFEE
 15373                           wreg	equ	0xFE8
 15374                           indf1	equ	0xFE7
 15375                           postdec1	equ	0xFE5
 15376                           plusw1	equ	0xFE3
 15377                           fsr1h	equ	0xFE2
 15378                           fsr1l	equ	0xFE1
 15379                           indf2	equ	0xFDF
 15380                           postinc2	equ	0xFDE
 15381                           postdec2	equ	0xFDD
 15382                           plusw2	equ	0xFDB
 15383                           fsr2h	equ	0xFDA
 15384                           fsr2l	equ	0xFD9
 15385                           status	equ	0xFD8
 15386                           
 15387 ;; *************** function __bootloader_find_file *****************
 15388 ;; Defined at:
 15389 ;;		line 143 in file "bootloader.c"
 15390 ;; Parameters:    Size  Location     Type
 15391 ;;		None
 15392 ;; Auto vars:     Size  Location     Type
 15393 ;;		None
 15394 ;; Return value:  Size  Location     Type
 15395 ;;                  1    wreg      void 
 15396 ;; Registers used:
 15397 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15398 ;; Tracked objects:
 15399 ;;		On entry : 0/0
 15400 ;;		On exit  : 0/0
 15401 ;;		Unchanged: 0/0
 15402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15407 ;;Total ram usage:        0 bytes
 15408 ;; Hardware stack levels used:    1
 15409 ;; Hardware stack levels required when called:    6
 15410 ;; This function calls:
 15411 ;;		_fat_find_file
 15412 ;;		_fat_get_file_size
 15413 ;; This function is called by:
 15414 ;;		_bootloader_run
 15415 ;; This function uses a non-reentrant model
 15416 ;;
 15417                           
 15418                           	psect	text67
 15419  005A46                     __ptext67:
 15420                           	opt stack 0
 15421  005A46                     __bootloader_find_file:
 15422                           	opt stack 23
 15423                           
 15424                           ;bootloader.c: 146: file_number = fat_find_file(bootloader_filename, bootloader_extensio
      +                          n);
 15425                           
 15426                           ;incstack = 0
 15427  005A46  0EB6               	movlw	low _bootloader_filename
 15428  005A48  6E30               	movwf	fat_find_file@name,c
 15429  005A4A  0E8F               	movlw	high _bootloader_filename
 15430  005A4C  6E31               	movwf	fat_find_file@name+1,c
 15431  005A4E  0EC7               	movlw	low _bootloader_extension
 15432  005A50  6E32               	movwf	fat_find_file@extension,c
 15433  005A52  0E8F               	movlw	high _bootloader_extension
 15434  005A54  6E33               	movwf	fat_find_file@extension+1,c
 15435  005A56  EC65  F029         	call	_fat_find_file	;wreg free
 15436  005A5A  0100               	movlb	0	; () banked
 15437  005A5C  6FFE               	movwf	_file_number& (0+255),b
 15438                           
 15439                           ; BSR set to: 0
 15440                           ;bootloader.c: 149: if(file_number!=0xFF)
 15441  005A5E  29FE               	incf	_file_number& (0+255),w,b
 15442  005A60  B4D8               	btfsc	status,2,c
 15443  005A62  D034               	goto	l2262
 15444                           
 15445                           ; BSR set to: 0
 15446                           ;bootloader.c: 150: {;bootloader.c: 152: hex_file_size = fat_get_file_size(file_number);
 15447  005A64  51FE               	movf	_file_number& (0+255),w,b
 15448  005A66  EC4D  F033         	call	_fat_get_file_size
 15449  005A6A  C030  F078         	movff	?_fat_get_file_size,_hex_file_size
 15450  005A6E  C031  F079         	movff	?_fat_get_file_size+1,_hex_file_size+1
 15451  005A72  C032  F07A         	movff	?_fat_get_file_size+2,_hex_file_size+2
 15452  005A76  C033  F07B         	movff	?_fat_get_file_size+3,_hex_file_size+3
 15453                           
 15454                           ;bootloader.c: 154: hex_file_entries = 0;
 15455  005A7A  0E00               	movlw	0
 15456  005A7C  0101               	movlb	1	; () banked
 15457  005A7E  6F6B               	movwf	(_hex_file_entries+1)& (0+255),b
 15458  005A80  0E00               	movlw	0
 15459  005A82  6F6A               	movwf	_hex_file_entries& (0+255),b
 15460                           
 15461                           ; BSR set to: 1
 15462                           ;bootloader.c: 155: hex_file_offset = 0;
 15463  005A84  0E00               	movlw	0
 15464  005A86  0100               	movlb	0	; () banked
 15465  005A88  6F7C               	movwf	_hex_file_offset& (0+255),b
 15466  005A8A  0E00               	movlw	0
 15467  005A8C  6F7D               	movwf	(_hex_file_offset+1)& (0+255),b
 15468  005A8E  0E00               	movlw	0
 15469  005A90  6F7E               	movwf	(_hex_file_offset+2)& (0+255),b
 15470  005A92  0E00               	movlw	0
 15471  005A94  6F7F               	movwf	(_hex_file_offset+3)& (0+255),b
 15472                           
 15473                           ; BSR set to: 0
 15474                           ;bootloader.c: 156: file_minimum_address = 0xFFFFFFFF;
 15475  005A96  0101               	movlb	1	; () banked
 15476  005A98  6948               	setf	_file_minimum_address& (0+255),b
 15477  005A9A  6949               	setf	(_file_minimum_address+1)& (0+255),b
 15478  005A9C  694A               	setf	(_file_minimum_address+2)& (0+255),b
 15479  005A9E  694B               	setf	(_file_minimum_address+3)& (0+255),b
 15480                           
 15481                           ; BSR set to: 1
 15482                           ;bootloader.c: 157: file_maximum_address = 0x00000000;
 15483  005AA0  0E00               	movlw	0
 15484  005AA2  6F44               	movwf	_file_maximum_address& (0+255),b
 15485  005AA4  0E00               	movlw	0
 15486  005AA6  6F45               	movwf	(_file_maximum_address+1)& (0+255),b
 15487  005AA8  0E00               	movlw	0
 15488  005AAA  6F46               	movwf	(_file_maximum_address+2)& (0+255),b
 15489  005AAC  0E00               	movlw	0
 15490  005AAE  6F47               	movwf	(_file_maximum_address+3)& (0+255),b
 15491                           
 15492                           ; BSR set to: 1
 15493                           ;bootloader.c: 158: extended_linear_address = 0x00000000;
 15494  005AB0  0E00               	movlw	0
 15495  005AB2  6F40               	movwf	_extended_linear_address& (0+255),b
 15496  005AB4  0E00               	movlw	0
 15497  005AB6  6F41               	movwf	(_extended_linear_address+1)& (0+255),b
 15498  005AB8  0E00               	movlw	0
 15499  005ABA  6F42               	movwf	(_extended_linear_address+2)& (0+255),b
 15500  005ABC  0E00               	movlw	0
 15501  005ABE  6F43               	movwf	(_extended_linear_address+3)& (0+255),b
 15502                           
 15503                           ; BSR set to: 1
 15504                           ;bootloader.c: 159: os.bootloader_mode = BOOTLOADER_MODE_FILE_FOUND;
 15505  005AC0  0E10               	movlw	16
 15506  005AC2  0100               	movlb	0	; () banked
 15507  005AC4  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 15508                           
 15509                           ; BSR set to: 0
 15510                           ;bootloader.c: 160: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_FOUND;
 15511  005AC6  0E10               	movlw	16
 15512  005AC8  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 15513                           
 15514                           ;bootloader.c: 161: }
 15515  005ACA  0012               	return	
 15516  005ACC                     l2262:
 15517                           
 15518                           ; BSR set to: 0
 15519                           ;bootloader.c: 163: else;bootloader.c: 164: {;bootloader.c: 166: hex_file_size = 0;
 15520                           
 15521                           ; BSR set to: 0
 15522  005ACC  0E00               	movlw	0
 15523  005ACE  6F78               	movwf	_hex_file_size& (0+255),b
 15524  005AD0  0E00               	movlw	0
 15525  005AD2  6F79               	movwf	(_hex_file_size+1)& (0+255),b
 15526  005AD4  0E00               	movlw	0
 15527  005AD6  6F7A               	movwf	(_hex_file_size+2)& (0+255),b
 15528  005AD8  0E00               	movlw	0
 15529  005ADA  6F7B               	movwf	(_hex_file_size+3)& (0+255),b
 15530                           
 15531                           ;bootloader.c: 168: os.bootloader_mode = BOOTLOADER_MODE_START;
 15532  005ADC  0E00               	movlw	0
 15533  005ADE  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 15534                           
 15535                           ;bootloader.c: 169: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
 15536  005AE0  0E00               	movlw	0
 15537  005AE2  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 15538  005AE4  0012               	return	
 15539  005AE6                     __end_of__bootloader_find_file:
 15540                           	opt stack 0
 15541                           tblptru	equ	0xFF8
 15542                           tblptrh	equ	0xFF7
 15543                           tblptrl	equ	0xFF6
 15544                           tablat	equ	0xFF5
 15545                           prodh	equ	0xFF4
 15546                           prodl	equ	0xFF3
 15547                           intcon	equ	0xFF2
 15548                           intcon2	equ	0xFF1
 15549                           intcon3	equ	0xFF0
 15550                           postinc0	equ	0xFEE
 15551                           wreg	equ	0xFE8
 15552                           indf1	equ	0xFE7
 15553                           postdec1	equ	0xFE5
 15554                           plusw1	equ	0xFE3
 15555                           fsr1h	equ	0xFE2
 15556                           fsr1l	equ	0xFE1
 15557                           indf2	equ	0xFDF
 15558                           postinc2	equ	0xFDE
 15559                           postdec2	equ	0xFDD
 15560                           plusw2	equ	0xFDB
 15561                           fsr2h	equ	0xFDA
 15562                           fsr2l	equ	0xFD9
 15563                           status	equ	0xFD8
 15564                           
 15565 ;; *************** function __normal_mode *****************
 15566 ;; Defined at:
 15567 ;;		line 199 in file "main.c"
 15568 ;; Parameters:    Size  Location     Type
 15569 ;;		None
 15570 ;; Auto vars:     Size  Location     Type
 15571 ;;		None
 15572 ;; Return value:  Size  Location     Type
 15573 ;;                  1    wreg      unsigned char 
 15574 ;; Registers used:
 15575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15576 ;; Tracked objects:
 15577 ;;		On entry : 0/0
 15578 ;;		On exit  : 0/0
 15579 ;;		Unchanged: 0/0
 15580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15585 ;;Total ram usage:        0 bytes
 15586 ;; Hardware stack levels used:    1
 15587 ;; Hardware stack levels required when called:    3
 15588 ;; This function calls:
 15589 ;;		_i2c_eeprom_readByte
 15590 ;;		_i2c_eeprom_writeByte
 15591 ;; This function is called by:
 15592 ;;		_main
 15593 ;; This function uses a non-reentrant model
 15594 ;;
 15595                           
 15596                           	psect	text68
 15597  006DDE                     __ptext68:
 15598                           	opt stack 0
 15599  006DDE                     __normal_mode:
 15600                           	opt stack 27
 15601                           
 15602                           ;main.c: 201: if(i2c_eeprom_readByte(0x100)==0x94)
 15603                           
 15604                           ; BSR set to: 0
 15605                           ;incstack = 0
 15606  006DDE  0E01               	movlw	1
 15607  006DE0  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 15608  006DE2  0E00               	movlw	0
 15609  006DE4  6E12               	movwf	i2c_eeprom_readByte@address,c
 15610  006DE6  EC4A  F039         	call	_i2c_eeprom_readByte	;wreg free
 15611  006DEA  0A94               	xorlw	148
 15612  006DEC  A4D8               	btfss	status,2,c
 15613  006DEE  D00A               	goto	l907
 15614                           
 15615                           ;main.c: 202: {;main.c: 204: i2c_eeprom_writeByte(0x100, 0x00);
 15616  006DF0  0E01               	movlw	1
 15617  006DF2  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 15618  006DF4  0E00               	movlw	0
 15619  006DF6  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 15620  006DF8  0E00               	movlw	0
 15621  006DFA  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 15622  006DFC  EC8B  F03A         	call	_i2c_eeprom_writeByte	;wreg free
 15623                           
 15624                           ;main.c: 206: return 0;
 15625  006E00  0E00               	movlw	0
 15626                           
 15627                           ;main.c: 207: }
 15628  006E02  0012               	return	
 15629  006E04                     l907:
 15630                           
 15631                           ;main.c: 208: else if(i2c_eeprom_readByte(0x100)==0x78)
 15632  006E04  0E01               	movlw	1
 15633  006E06  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 15634  006E08  0E00               	movlw	0
 15635  006E0A  6E12               	movwf	i2c_eeprom_readByte@address,c
 15636  006E0C  EC4A  F039         	call	_i2c_eeprom_readByte	;wreg free
 15637  006E10  0A78               	xorlw	120
 15638  006E12  A4D8               	btfss	status,2,c
 15639  006E14  D00A               	goto	l910
 15640                           
 15641                           ;main.c: 209: {;main.c: 211: i2c_eeprom_writeByte(0x100, 0x00);
 15642  006E16  0E01               	movlw	1
 15643  006E18  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 15644  006E1A  0E00               	movlw	0
 15645  006E1C  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 15646  006E1E  0E00               	movlw	0
 15647  006E20  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 15648  006E22  EC8B  F03A         	call	_i2c_eeprom_writeByte	;wreg free
 15649                           
 15650                           ;main.c: 213: return 1;
 15651  006E26  0E01               	movlw	1
 15652                           
 15653                           ;main.c: 214: }
 15654  006E28  0012               	return	
 15655  006E2A                     l910:
 15656                           
 15657                           ;main.c: 215: else if(!PORTAbits.RA0)
 15658  006E2A  B080               	btfsc	3968,0,c	;volatile
 15659  006E2C  D002               	goto	l912
 15660                           
 15661                           ;main.c: 216: {;main.c: 218: return 0;
 15662  006E2E  0E00               	movlw	0
 15663                           
 15664                           ;main.c: 219: }
 15665  006E30  0012               	return	
 15666  006E32                     l912:
 15667                           
 15668                           ;main.c: 220: else;main.c: 221: {;main.c: 223: return 1;
 15669  006E32  0E01               	movlw	1
 15670  006E34  0012               	return	
 15671  006E36                     __end_of__normal_mode:
 15672                           	opt stack 0
 15673                           tblptru	equ	0xFF8
 15674                           tblptrh	equ	0xFF7
 15675                           tblptrl	equ	0xFF6
 15676                           tablat	equ	0xFF5
 15677                           prodh	equ	0xFF4
 15678                           prodl	equ	0xFF3
 15679                           intcon	equ	0xFF2
 15680                           intcon2	equ	0xFF1
 15681                           intcon3	equ	0xFF0
 15682                           postinc0	equ	0xFEE
 15683                           wreg	equ	0xFE8
 15684                           indf1	equ	0xFE7
 15685                           postdec1	equ	0xFE5
 15686                           plusw1	equ	0xFE3
 15687                           fsr1h	equ	0xFE2
 15688                           fsr1l	equ	0xFE1
 15689                           indf2	equ	0xFDF
 15690                           postinc2	equ	0xFDE
 15691                           postdec2	equ	0xFDD
 15692                           plusw2	equ	0xFDB
 15693                           fsr2h	equ	0xFDA
 15694                           fsr2l	equ	0xFD9
 15695                           status	equ	0xFD8
 15696                           
 15697 ;; *************** function _i2c_eeprom_readByte *****************
 15698 ;; Defined at:
 15699 ;;		line 359 in file "i2c.c"
 15700 ;; Parameters:    Size  Location     Type
 15701 ;;  address         2   17[COMRAM] unsigned int 
 15702 ;; Auto vars:     Size  Location     Type
 15703 ;;  addr            1   23[COMRAM] unsigned char 
 15704 ;;  slave_addres    1   22[COMRAM] unsigned char 
 15705 ;; Return value:  Size  Location     Type
 15706 ;;                  1    wreg      unsigned char 
 15707 ;; Registers used:
 15708 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15709 ;; Tracked objects:
 15710 ;;		On entry : 0/0
 15711 ;;		On exit  : 0/0
 15712 ;;		Unchanged: 0/0
 15713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15714 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15715 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15716 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15717 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15718 ;;Total ram usage:        7 bytes
 15719 ;; Hardware stack levels used:    1
 15720 ;; Hardware stack levels required when called:    2
 15721 ;; This function calls:
 15722 ;;		__i2c_read
 15723 ;;		__i2c_write
 15724 ;;		_i2c_set_frequency
 15725 ;; This function is called by:
 15726 ;;		__normal_mode
 15727 ;; This function uses a non-reentrant model
 15728 ;;
 15729                           
 15730                           	psect	text69
 15731  007294                     __ptext69:
 15732                           	opt stack 0
 15733  007294                     _i2c_eeprom_readByte:
 15734                           	opt stack 27
 15735                           
 15736                           ;i2c.c: 361: uint8_t slave_address;;i2c.c: 362: uint8_t addr;;i2c.c: 363: slave_address 
      +                          = 0b10100000 | ((address&0b0000011100000000)>>7);
 15737                           
 15738                           ;incstack = 0
 15739  007294  C012  F014         	movff	i2c_eeprom_readByte@address,??_i2c_eeprom_readByte
 15740  007298  C013  F015         	movff	i2c_eeprom_readByte@address+1,??_i2c_eeprom_readByte+1
 15741  00729C  0E07               	movlw	7
 15742  00729E  6E16               	movwf	(??_i2c_eeprom_readByte+2)& (0+255),c
 15743  0072A0                     u10415:
 15744  0072A0  90D8               	bcf	status,0,c
 15745  0072A2  3215               	rrcf	??_i2c_eeprom_readByte+1,f,c
 15746  0072A4  3214               	rrcf	??_i2c_eeprom_readByte,f,c
 15747  0072A6  2E16               	decfsz	(??_i2c_eeprom_readByte+2)& (0+255),f,c
 15748  0072A8  D7FB               	goto	u10415
 15749  0072AA  5014               	movf	??_i2c_eeprom_readByte,w,c
 15750  0072AC  0B0E               	andlw	14
 15751  0072AE  09A0               	iorlw	160
 15752  0072B0  6E17               	movwf	i2c_eeprom_readByte@slave_address,c
 15753                           
 15754                           ;i2c.c: 364: addr = address & 0xFF;
 15755  0072B2  C012  F018         	movff	i2c_eeprom_readByte@address,i2c_eeprom_readByte@addr
 15756                           
 15757                           ;i2c.c: 367: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 15758  0072B6  0E02               	movlw	2
 15759  0072B8  EC0C  F03D         	call	_i2c_set_frequency
 15760                           
 15761                           ;i2c.c: 369: _i2c_write(slave_address, &addr, 1);
 15762  0072BC  0E18               	movlw	low i2c_eeprom_readByte@addr
 15763  0072BE  6E06               	movwf	__i2c_write@data,c
 15764  0072C0  0E00               	movlw	high i2c_eeprom_readByte@addr
 15765  0072C2  6E07               	movwf	__i2c_write@data+1,c
 15766  0072C4  0E01               	movlw	1
 15767  0072C6  6E08               	movwf	__i2c_write@length,c
 15768  0072C8  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 15769  0072CA  ECBE  F039         	call	__i2c_write
 15770                           
 15771                           ;i2c.c: 370: _i2c_read(slave_address, &addr, 1);
 15772  0072CE  0E18               	movlw	low i2c_eeprom_readByte@addr
 15773  0072D0  6E06               	movwf	__i2c_read@data,c
 15774  0072D2  0E00               	movlw	high i2c_eeprom_readByte@addr
 15775  0072D4  6E07               	movwf	__i2c_read@data+1,c
 15776  0072D6  0E01               	movlw	1
 15777  0072D8  6E08               	movwf	__i2c_read@length,c
 15778  0072DA  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 15779  0072DC  EC15  F030         	call	__i2c_read
 15780                           
 15781                           ;i2c.c: 371: return addr;
 15782  0072E0  5018               	movf	i2c_eeprom_readByte@addr,w,c
 15783  0072E2  0012               	return	
 15784  0072E4                     __end_of_i2c_eeprom_readByte:
 15785                           	opt stack 0
 15786                           tblptru	equ	0xFF8
 15787                           tblptrh	equ	0xFF7
 15788                           tblptrl	equ	0xFF6
 15789                           tablat	equ	0xFF5
 15790                           prodh	equ	0xFF4
 15791                           prodl	equ	0xFF3
 15792                           intcon	equ	0xFF2
 15793                           intcon2	equ	0xFF1
 15794                           intcon3	equ	0xFF0
 15795                           postinc0	equ	0xFEE
 15796                           wreg	equ	0xFE8
 15797                           indf1	equ	0xFE7
 15798                           postdec1	equ	0xFE5
 15799                           plusw1	equ	0xFE3
 15800                           fsr1h	equ	0xFE2
 15801                           fsr1l	equ	0xFE1
 15802                           indf2	equ	0xFDF
 15803                           postinc2	equ	0xFDE
 15804                           postdec2	equ	0xFDD
 15805                           plusw2	equ	0xFDB
 15806                           fsr2h	equ	0xFDA
 15807                           fsr2l	equ	0xFD9
 15808                           status	equ	0xFD8
 15809                           
 15810 ;; *************** function __i2c_read *****************
 15811 ;; Defined at:
 15812 ;;		line 153 in file "i2c.c"
 15813 ;; Parameters:    Size  Location     Type
 15814 ;;  slave_addres    1    wreg     unsigned char 
 15815 ;;  data            2    5[COMRAM] PTR unsigned char 
 15816 ;;		 -> i2c_eeprom_readByte@addr(1), 
 15817 ;;  length          1    7[COMRAM] unsigned char 
 15818 ;; Auto vars:     Size  Location     Type
 15819 ;;  slave_addres    1   15[COMRAM] unsigned char 
 15820 ;;  cntr            1   16[COMRAM] unsigned char 
 15821 ;; Return value:  Size  Location     Type
 15822 ;;                  1    wreg      void 
 15823 ;; Registers used:
 15824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15825 ;; Tracked objects:
 15826 ;;		On entry : 0/0
 15827 ;;		On exit  : 0/0
 15828 ;;		Unchanged: 0/0
 15829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15830 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15831 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15832 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15833 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15834 ;;Total ram usage:       12 bytes
 15835 ;; Hardware stack levels used:    1
 15836 ;; Hardware stack levels required when called:    1
 15837 ;; This function calls:
 15838 ;;		__i2c_acknowledge
 15839 ;;		__i2c_get
 15840 ;;		__i2c_not_acknowledge
 15841 ;;		__i2c_send
 15842 ;;		__i2c_start
 15843 ;;		__i2c_stop
 15844 ;;		__i2c_wait_idle
 15845 ;; This function is called by:
 15846 ;;		_i2c_eeprom_readByte
 15847 ;;		_i2c_eeprom_read
 15848 ;; This function uses a non-reentrant model
 15849 ;;
 15850                           
 15851                           	psect	text70
 15852  00602A                     __ptext70:
 15853                           	opt stack 0
 15854  00602A                     __i2c_read:
 15855                           	opt stack 27
 15856                           
 15857                           ;incstack = 0
 15858                           ;__i2c_read@slave_address stored from wreg
 15859  00602A  6E10               	movwf	__i2c_read@slave_address,c
 15860                           
 15861                           ;i2c.c: 155: uint8_t cntr;;i2c.c: 157: _i2c_wait_idle();
 15862  00602C  EC1B  F037         	call	__i2c_wait_idle	;wreg free
 15863                           
 15864                           ;i2c.c: 158: _i2c_start();
 15865  006030  EC0F  F03F         	call	__i2c_start	;wreg free
 15866                           
 15867                           ;i2c.c: 159: _i2c_wait_idle();
 15868  006034  EC1B  F037         	call	__i2c_wait_idle	;wreg free
 15869                           
 15870                           ;i2c.c: 160: _i2c_send(slave_address | 0x01);
 15871  006038  5010               	movf	__i2c_read@slave_address,w,c
 15872  00603A  0901               	iorlw	1
 15873  00603C  EC13  F03F         	call	__i2c_send
 15874                           
 15875                           ;i2c.c: 161: _i2c_wait_idle();
 15876  006040  EC1B  F037         	call	__i2c_wait_idle	;wreg free
 15877                           
 15878                           ;i2c.c: 163: for(cntr=0; cntr<length-1; ++cntr)
 15879  006044  0E00               	movlw	0
 15880  006046  6E11               	movwf	__i2c_read@cntr,c
 15881  006048  D00E               	goto	l1196
 15882  00604A                     
 15883                           ;i2c.c: 164: {;i2c.c: 165: data[cntr] = _i2c_get();
 15884  00604A  5011               	movf	__i2c_read@cntr,w,c
 15885  00604C  0D01               	mullw	1
 15886  00604E  50F3               	movf	prodl,w,c
 15887  006050  2406               	addwf	__i2c_read@data,w,c
 15888  006052  6ED9               	movwf	fsr2l,c
 15889  006054  50F4               	movf	prodh,w,c
 15890  006056  2007               	addwfc	__i2c_read@data+1,w,c
 15891  006058  6EDA               	movwf	fsr2h,c
 15892  00605A  ECD5  F03E         	call	__i2c_get	;wreg free
 15893  00605E  6EDF               	movwf	indf2,c
 15894                           
 15895                           ;i2c.c: 166: _i2c_acknowledge();
 15896  006060  ECDA  F03E         	call	__i2c_acknowledge	;wreg free
 15897  006064  2A11               	incf	__i2c_read@cntr,f,c
 15898  006066                     l1196:
 15899  006066  0EFF               	movlw	255
 15900  006068  6E09               	movwf	??__i2c_read& (0+255),c
 15901  00606A  0EFF               	movlw	255
 15902  00606C  6E0A               	movwf	(??__i2c_read+1)& (0+255),c
 15903  00606E  5008               	movf	__i2c_read@length,w,c
 15904  006070  6E0B               	movwf	(??__i2c_read+2)& (0+255),c
 15905  006072  6A0C               	clrf	(??__i2c_read+3)& (0+255),c
 15906  006074  5009               	movf	??__i2c_read,w,c
 15907  006076  260B               	addwf	??__i2c_read+2,f,c
 15908  006078  500A               	movf	??__i2c_read+1,w,c
 15909  00607A  220C               	addwfc	??__i2c_read+3,f,c
 15910  00607C  5011               	movf	__i2c_read@cntr,w,c
 15911  00607E  6E0D               	movwf	(??__i2c_read+4)& (0+255),c
 15912  006080  6A0E               	clrf	(??__i2c_read+5)& (0+255),c
 15913  006082  500B               	movf	??__i2c_read+2,w,c
 15914  006084  5C0D               	subwf	??__i2c_read+4,w,c
 15915  006086  500E               	movf	??__i2c_read+5,w,c
 15916  006088  0A80               	xorlw	128
 15917  00608A  6E0F               	movwf	(??__i2c_read+6)& (0+255),c
 15918  00608C  500C               	movf	??__i2c_read+3,w,c
 15919  00608E  0A80               	xorlw	128
 15920  006090  580F               	subwfb	(??__i2c_read+6)& (0+255),w,c
 15921  006092  A0D8               	btfss	status,0,c
 15922  006094  D7DA               	goto	l1197
 15923                           
 15924                           ;i2c.c: 167: };i2c.c: 168: data[cntr] = _i2c_get();
 15925  006096  5011               	movf	__i2c_read@cntr,w,c
 15926  006098  0D01               	mullw	1
 15927  00609A  50F3               	movf	prodl,w,c
 15928  00609C  2406               	addwf	__i2c_read@data,w,c
 15929  00609E  6ED9               	movwf	fsr2l,c
 15930  0060A0  50F4               	movf	prodh,w,c
 15931  0060A2  2007               	addwfc	__i2c_read@data+1,w,c
 15932  0060A4  6EDA               	movwf	fsr2h,c
 15933  0060A6  ECD5  F03E         	call	__i2c_get	;wreg free
 15934  0060AA  6EDF               	movwf	indf2,c
 15935                           
 15936                           ;i2c.c: 169: _i2c_not_acknowledge();
 15937  0060AC  ECD0  F03E         	call	__i2c_not_acknowledge	;wreg free
 15938                           
 15939                           ;i2c.c: 171: _i2c_stop();
 15940  0060B0  EC0B  F03F         	call	__i2c_stop	;wreg free
 15941  0060B4  0012               	return		;funcret
 15942  0060B6                     __end_of__i2c_read:
 15943                           	opt stack 0
 15944                           tblptru	equ	0xFF8
 15945                           tblptrh	equ	0xFF7
 15946                           tblptrl	equ	0xFF6
 15947                           tablat	equ	0xFF5
 15948                           prodh	equ	0xFF4
 15949                           prodl	equ	0xFF3
 15950                           intcon	equ	0xFF2
 15951                           intcon2	equ	0xFF1
 15952                           intcon3	equ	0xFF0
 15953                           postinc0	equ	0xFEE
 15954                           wreg	equ	0xFE8
 15955                           indf1	equ	0xFE7
 15956                           postdec1	equ	0xFE5
 15957                           plusw1	equ	0xFE3
 15958                           fsr1h	equ	0xFE2
 15959                           fsr1l	equ	0xFE1
 15960                           indf2	equ	0xFDF
 15961                           postinc2	equ	0xFDE
 15962                           postdec2	equ	0xFDD
 15963                           plusw2	equ	0xFDB
 15964                           fsr2h	equ	0xFDA
 15965                           fsr2l	equ	0xFD9
 15966                           status	equ	0xFD8
 15967                           
 15968 ;; *************** function __i2c_not_acknowledge *****************
 15969 ;; Defined at:
 15970 ;;		line 90 in file "i2c.c"
 15971 ;; Parameters:    Size  Location     Type
 15972 ;;		None
 15973 ;; Auto vars:     Size  Location     Type
 15974 ;;		None
 15975 ;; Return value:  Size  Location     Type
 15976 ;;                  1    wreg      void 
 15977 ;; Registers used:
 15978 ;;		None
 15979 ;; Tracked objects:
 15980 ;;		On entry : 0/0
 15981 ;;		On exit  : 0/0
 15982 ;;		Unchanged: 0/0
 15983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15988 ;;Total ram usage:        0 bytes
 15989 ;; Hardware stack levels used:    1
 15990 ;; This function calls:
 15991 ;;		Nothing
 15992 ;; This function is called by:
 15993 ;;		__i2c_read
 15994 ;; This function uses a non-reentrant model
 15995 ;;
 15996                           
 15997                           	psect	text71
 15998  007DA0                     __ptext71:
 15999                           	opt stack 0
 16000  007DA0                     __i2c_not_acknowledge:
 16001                           	opt stack 27
 16002                           
 16003                           ;i2c.c: 92: SSP1CON2bits.ACKDT = 1;
 16004                           
 16005                           ;incstack = 0
 16006  007DA0  8AC5               	bsf	4037,5,c	;volatile
 16007                           
 16008                           ;i2c.c: 93: SSP1CON2bits.ACKEN = 1;
 16009  007DA2  88C5               	bsf	4037,4,c	;volatile
 16010  007DA4  A8C5               	btfss	4037,4,c	;volatile
 16011  007DA6  0012               	return	
 16012  007DA8  D7FD               	goto	l1171
 16013  007DAA                     __end_of__i2c_not_acknowledge:
 16014                           	opt stack 0
 16015                           tblptru	equ	0xFF8
 16016                           tblptrh	equ	0xFF7
 16017                           tblptrl	equ	0xFF6
 16018                           tablat	equ	0xFF5
 16019                           prodh	equ	0xFF4
 16020                           prodl	equ	0xFF3
 16021                           intcon	equ	0xFF2
 16022                           intcon2	equ	0xFF1
 16023                           intcon3	equ	0xFF0
 16024                           postinc0	equ	0xFEE
 16025                           wreg	equ	0xFE8
 16026                           indf1	equ	0xFE7
 16027                           postdec1	equ	0xFE5
 16028                           plusw1	equ	0xFE3
 16029                           fsr1h	equ	0xFE2
 16030                           fsr1l	equ	0xFE1
 16031                           indf2	equ	0xFDF
 16032                           postinc2	equ	0xFDE
 16033                           postdec2	equ	0xFDD
 16034                           plusw2	equ	0xFDB
 16035                           fsr2h	equ	0xFDA
 16036                           fsr2l	equ	0xFD9
 16037                           status	equ	0xFD8
 16038                           
 16039 ;; *************** function __i2c_get *****************
 16040 ;; Defined at:
 16041 ;;		line 67 in file "i2c.c"
 16042 ;; Parameters:    Size  Location     Type
 16043 ;;		None
 16044 ;; Auto vars:     Size  Location     Type
 16045 ;;		None
 16046 ;; Return value:  Size  Location     Type
 16047 ;;                  1    wreg      unsigned char 
 16048 ;; Registers used:
 16049 ;;		wreg, status,2
 16050 ;; Tracked objects:
 16051 ;;		On entry : 0/0
 16052 ;;		On exit  : 0/0
 16053 ;;		Unchanged: 0/0
 16054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16059 ;;Total ram usage:        0 bytes
 16060 ;; Hardware stack levels used:    1
 16061 ;; This function calls:
 16062 ;;		Nothing
 16063 ;; This function is called by:
 16064 ;;		__i2c_read
 16065 ;; This function uses a non-reentrant model
 16066 ;;
 16067                           
 16068                           	psect	text72
 16069  007DAA                     __ptext72:
 16070                           	opt stack 0
 16071  007DAA                     __i2c_get:
 16072                           	opt stack 27
 16073                           
 16074                           ;i2c.c: 69: SSP1CON2bits.RCEN = 1 ;
 16075                           
 16076                           ;incstack = 0
 16077  007DAA  86C5               	bsf	4037,3,c	;volatile
 16078  007DAC  B6C5               	btfsc	4037,3,c	;volatile
 16079  007DAE  D7FE               	goto	l1153
 16080                           
 16081                           ;i2c.c: 71: return SSP1BUF;
 16082  007DB0  50C9               	movf	4041,w,c	;volatile
 16083  007DB2  0012               	return	
 16084  007DB4                     __end_of__i2c_get:
 16085                           	opt stack 0
 16086                           tblptru	equ	0xFF8
 16087                           tblptrh	equ	0xFF7
 16088                           tblptrl	equ	0xFF6
 16089                           tablat	equ	0xFF5
 16090                           prodh	equ	0xFF4
 16091                           prodl	equ	0xFF3
 16092                           intcon	equ	0xFF2
 16093                           intcon2	equ	0xFF1
 16094                           intcon3	equ	0xFF0
 16095                           postinc0	equ	0xFEE
 16096                           wreg	equ	0xFE8
 16097                           indf1	equ	0xFE7
 16098                           postdec1	equ	0xFE5
 16099                           plusw1	equ	0xFE3
 16100                           fsr1h	equ	0xFE2
 16101                           fsr1l	equ	0xFE1
 16102                           indf2	equ	0xFDF
 16103                           postinc2	equ	0xFDE
 16104                           postdec2	equ	0xFDD
 16105                           plusw2	equ	0xFDB
 16106                           fsr2h	equ	0xFDA
 16107                           fsr2l	equ	0xFD9
 16108                           status	equ	0xFD8
 16109                           
 16110 ;; *************** function __i2c_acknowledge *****************
 16111 ;; Defined at:
 16112 ;;		line 82 in file "i2c.c"
 16113 ;; Parameters:    Size  Location     Type
 16114 ;;		None
 16115 ;; Auto vars:     Size  Location     Type
 16116 ;;		None
 16117 ;; Return value:  Size  Location     Type
 16118 ;;                  1    wreg      void 
 16119 ;; Registers used:
 16120 ;;		None
 16121 ;; Tracked objects:
 16122 ;;		On entry : 0/0
 16123 ;;		On exit  : 0/0
 16124 ;;		Unchanged: 0/0
 16125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16130 ;;Total ram usage:        0 bytes
 16131 ;; Hardware stack levels used:    1
 16132 ;; This function calls:
 16133 ;;		Nothing
 16134 ;; This function is called by:
 16135 ;;		__i2c_read
 16136 ;; This function uses a non-reentrant model
 16137 ;;
 16138                           
 16139                           	psect	text73
 16140  007DB4                     __ptext73:
 16141                           	opt stack 0
 16142  007DB4                     __i2c_acknowledge:
 16143                           	opt stack 27
 16144                           
 16145                           ;i2c.c: 84: SSP1CON2bits.ACKDT = 0;
 16146                           
 16147                           ;incstack = 0
 16148  007DB4  9AC5               	bcf	4037,5,c	;volatile
 16149                           
 16150                           ;i2c.c: 85: SSP1CON2bits.ACKEN = 1;
 16151  007DB6  88C5               	bsf	4037,4,c	;volatile
 16152  007DB8  A8C5               	btfss	4037,4,c	;volatile
 16153  007DBA  0012               	return	
 16154  007DBC  D7FD               	goto	l1165
 16155  007DBE                     __end_of__i2c_acknowledge:
 16156                           	opt stack 0
 16157                           tblptru	equ	0xFF8
 16158                           tblptrh	equ	0xFF7
 16159                           tblptrl	equ	0xFF6
 16160                           tablat	equ	0xFF5
 16161                           prodh	equ	0xFF4
 16162                           prodl	equ	0xFF3
 16163                           intcon	equ	0xFF2
 16164                           intcon2	equ	0xFF1
 16165                           intcon3	equ	0xFF0
 16166                           postinc0	equ	0xFEE
 16167                           wreg	equ	0xFE8
 16168                           indf1	equ	0xFE7
 16169                           postdec1	equ	0xFE5
 16170                           plusw1	equ	0xFE3
 16171                           fsr1h	equ	0xFE2
 16172                           fsr1l	equ	0xFE1
 16173                           indf2	equ	0xFDF
 16174                           postinc2	equ	0xFDE
 16175                           postdec2	equ	0xFDD
 16176                           plusw2	equ	0xFDB
 16177                           fsr2h	equ	0xFDA
 16178                           fsr2l	equ	0xFD9
 16179                           status	equ	0xFD8
 16180                           
 16181 ;; *************** function _USBDeviceTasks *****************
 16182 ;; Defined at:
 16183 ;;		line 477 in file "usb_device.c"
 16184 ;; Parameters:    Size  Location     Type
 16185 ;;		None
 16186 ;; Auto vars:     Size  Location     Type
 16187 ;;  i               1   31[COMRAM] unsigned char 
 16188 ;; Return value:  Size  Location     Type
 16189 ;;                  1    wreg      void 
 16190 ;; Registers used:
 16191 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 16192 ;; Tracked objects:
 16193 ;;		On entry : 0/0
 16194 ;;		On exit  : 0/0
 16195 ;;		Unchanged: 0/0
 16196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16198 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16200 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16201 ;;Total ram usage:        1 bytes
 16202 ;; Hardware stack levels used:    1
 16203 ;; Hardware stack levels required when called:    8
 16204 ;; This function calls:
 16205 ;;		_USBCtrlEPAllowStatusStage
 16206 ;;		_USBCtrlEPService
 16207 ;;		_USBDeviceInit
 16208 ;;		_USBIncrement1msInternalTimers
 16209 ;;		_USBStallHandler
 16210 ;;		_USBSuspend
 16211 ;;		_USBWakeFromSuspend
 16212 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16213 ;; This function is called by:
 16214 ;;		_main
 16215 ;; This function uses a non-reentrant model
 16216 ;;
 16217                           
 16218                           	psect	text74
 16219  00321C                     __ptext74:
 16220                           	opt stack 0
 16221  00321C                     _USBDeviceTasks:
 16222                           	opt stack 22
 16223                           
 16224                           ;usb_device.c: 544: };usb_device.c: 566: if(USBDeviceState == DETACHED_STATE)
 16225                           
 16226                           ; BSR set to: 0
 16227                           
 16228                           ; BSR set to: 0
 16229                           ;usb_device.c: 543: return;
 16230                           
 16231                           ; BSR set to: 0
 16232                           ;usb_device.c: 542: {PIR2bits.USBIF = 0;};
 16233                           
 16234                           ;usb_device.c: 514: USBDeviceState = DETACHED_STATE;
 16235                           
 16236                           ;usb_device.c: 511: UIE = 0;
 16237                           
 16238                           ;usb_device.c: 506: {;usb_device.c: 508: UCON = 0;
 16239                           
 16240                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 505: if (1 != 1)
 16241                           
 16242                           ;incstack = 0
 16243  00321C  0100               	movlb	0	; () banked
 16244  00321E  51B0               	movf	_USBDeviceState& (0+255),w,b
 16245  003220  A4D8               	btfss	status,2,c
 16246  003222  D012               	goto	l150
 16247                           
 16248                           ; BSR set to: 0
 16249                           ;usb_device.c: 567: {;usb_device.c: 569: UCON = 0;
 16250  003224  0E00               	movlw	0
 16251  003226  6E65               	movwf	3941,c	;volatile
 16252                           
 16253                           ;usb_device.c: 572: UIE = 0;
 16254  003228  0E00               	movlw	0
 16255  00322A  010F               	movlb	15	; () banked
 16256  00322C  6F36               	movwf	54,b	;volatile
 16257                           
 16258                           ;usb_device.c: 576: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 16259  00322E  0E16               	movlw	22
 16260  003230  6F39               	movwf	57,b	;volatile
 16261  003232  0E9F               	movlw	159
 16262  003234  6F37               	movwf	55,b	;volatile
 16263  003236  0E7B               	movlw	123
 16264  003238  6F36               	movwf	54,b	;volatile
 16265                           
 16266                           ;usb_device.c: 579: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 16267  00323A  D001               	goto	l151
 16268  00323C                     l152:
 16269  00323C  8665               	bsf	3941,3,c	;volatile
 16270  00323E                     l151:
 16271  00323E  A665               	btfss	3941,3,c	;volatile
 16272  003240  D7FD               	goto	l152
 16273                           
 16274                           ;usb_device.c: 582: USBDeviceState = ATTACHED_STATE;
 16275  003242  0E01               	movlw	1
 16276  003244  0100               	movlb	0	; () banked
 16277  003246  6FB0               	movwf	_USBDeviceState& (0+255),b
 16278  003248                     l150:
 16279                           
 16280                           ; BSR set to: 0
 16281                           ;usb_device.c: 587: };usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 16282                           
 16283                           ; BSR set to: 0
 16284  003248  05B0               	decf	_USBDeviceState& (0+255),w,b
 16285  00324A  B4D8               	btfsc	status,2,c
 16286                           
 16287                           ; BSR set to: 0
 16288                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 16289  00324C  BA65               	btfsc	3941,5,c	;volatile
 16290  00324E  D00A               	goto	l155
 16291                           
 16292                           ; BSR set to: 0
 16293                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 16294  003250  0E00               	movlw	0
 16295  003252  6E62               	movwf	3938,c	;volatile
 16296                           
 16297                           ;usb_device.c: 612: UIE=0;
 16298  003254  0E00               	movlw	0
 16299  003256  010F               	movlb	15	; () banked
 16300  003258  6F36               	movwf	54,b	;volatile
 16301                           
 16302                           ; BSR set to: 15
 16303                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 16304  00325A  8136               	bsf	54,0,b	;volatile
 16305                           
 16306                           ; BSR set to: 15
 16307                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 16308  00325C  8936               	bsf	54,4,b	;volatile
 16309                           
 16310                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 16311  00325E  0E02               	movlw	2
 16312  003260  0100               	movlb	0	; () banked
 16313  003262  6FB0               	movwf	_USBDeviceState& (0+255),b
 16314  003264                     l155:
 16315                           
 16316                           ; BSR set to: 0
 16317                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 16318                           
 16319                           ; BSR set to: 0
 16320                           
 16321                           ; BSR set to: 0
 16322  003264  A462               	btfss	3938,2,c	;volatile
 16323  003266  D006               	goto	l156
 16324                           
 16325                           ; BSR set to: 0
 16326  003268  010F               	movlb	15	; () banked
 16327  00326A  A536               	btfss	54,2,b	;volatile
 16328  00326C  D003               	goto	l156
 16329                           
 16330                           ; BSR set to: 15
 16331                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 16332  00326E  9462               	bcf	3938,2,c	;volatile
 16333                           
 16334                           ; BSR set to: 15
 16335                           ;usb_device.c: 640: USBWakeFromSuspend();
 16336  003270  EC7C  F03B         	call	_USBWakeFromSuspend	;wreg free
 16337  003274                     l156:
 16338                           
 16339                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 16340  003274  A265               	btfss	3941,1,c	;volatile
 16341  003276  D002               	goto	l157
 16342                           
 16343                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 16344  003278  98A1               	bcf	4001,4,c	;volatile
 16345                           
 16346                           ;usb_device.c: 650: return;
 16347  00327A  0012               	return	
 16348  00327C                     l157:
 16349                           
 16350                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 16351  00327C  A062               	btfss	3938,0,c	;volatile
 16352  00327E  D009               	goto	l158
 16353  003280  010F               	movlb	15	; () banked
 16354  003282  A136               	btfss	54,0,b	;volatile
 16355  003284  D006               	goto	l158
 16356                           
 16357                           ; BSR set to: 15
 16358                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 16359  003286  ECA7  F01C         	call	_USBDeviceInit	;wreg free
 16360                           
 16361                           ;usb_device.c: 669: ;;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 16362  00328A  0E04               	movlw	4
 16363  00328C  0100               	movlb	0	; () banked
 16364  00328E  6FB0               	movwf	_USBDeviceState& (0+255),b
 16365                           
 16366                           ; BSR set to: 0
 16367                           ;usb_device.c: 681: (UIR &= 0xFE);
 16368  003290  9062               	bcf	3938,0,c	;volatile
 16369  003292                     l158:
 16370                           
 16371                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 16372                           
 16373                           ; BSR set to: 0
 16374  003292  A862               	btfss	3938,4,c	;volatile
 16375  003294  D004               	goto	l159
 16376  003296  010F               	movlb	15	; () banked
 16377  003298  B936               	btfsc	54,4,b	;volatile
 16378                           
 16379                           ; BSR set to: 15
 16380                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 16381  00329A  EC9B  F03C         	call	_USBSuspend	;wreg free
 16382  00329E                     l159:
 16383                           
 16384                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 16385  00329E  AC62               	btfss	3938,6,c	;volatile
 16386  0032A0  D01C               	goto	l163
 16387                           
 16388                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 16389  0032A2  010F               	movlb	15	; () banked
 16390  0032A4  AD36               	btfss	54,6,b	;volatile
 16391  0032A6  D00E               	goto	l161
 16392                           
 16393                           ; BSR set to: 15
 16394                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 16395  0032A8  0E00               	movlw	0
 16396  0032AA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16397  0032AC  0E73               	movlw	115
 16398  0032AE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16399  0032B0  0E00               	movlw	0
 16400  0032B2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16401  0032B4  0E00               	movlw	0
 16402  0032B6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16403  0032B8  0E00               	movlw	0
 16404  0032BA  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16405  0032BC  0E01               	movlw	1
 16406  0032BE  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16407  0032C0  ECE5  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16408  0032C4                     l161:
 16409                           
 16410                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 16411  0032C4  9C62               	bcf	3938,6,c	;volatile
 16412                           
 16413                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 16414  0032C6  ECDD  F03D         	call	_USBIncrement1msInternalTimers	;wreg free
 16415                           
 16416                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 16417  0032CA  0100               	movlb	0	; () banked
 16418  0032CC  51A9               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 16419  0032CE  A4D8               	btfss	status,2,c
 16420                           
 16421                           ; BSR set to: 0
 16422                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 16423  0032D0  07A9               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
 16424                           
 16425                           ; BSR set to: 0
 16426                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 16427                           
 16428                           ; BSR set to: 0
 16429  0032D2  51A9               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 16430  0032D4  B4D8               	btfsc	status,2,c
 16431                           
 16432                           ; BSR set to: 0
 16433                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 16434  0032D6  EC41  F028         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16435  0032DA                     l163:
 16436                           
 16437                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 16438  0032DA  AA62               	btfss	3938,5,c	;volatile
 16439  0032DC  D004               	goto	l164
 16440  0032DE  010F               	movlb	15	; () banked
 16441  0032E0  BB36               	btfsc	54,5,b	;volatile
 16442                           
 16443                           ; BSR set to: 15
 16444                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 16445  0032E2  EC06  F03A         	call	_USBStallHandler	;wreg free
 16446  0032E6                     l164:
 16447                           
 16448                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 16449  0032E6  A262               	btfss	3938,1,c	;volatile
 16450  0032E8  D012               	goto	l165
 16451  0032EA  010F               	movlb	15	; () banked
 16452  0032EC  A336               	btfss	54,1,b	;volatile
 16453  0032EE  D00F               	goto	l165
 16454                           
 16455                           ; BSR set to: 15
 16456                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 16457  0032F0  0E7F               	movlw	127
 16458  0032F2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16459  0032F4  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16460  0032F6  0E00               	movlw	0
 16461  0032F8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16462  0032FA  0E00               	movlw	0
 16463  0032FC  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16464  0032FE  0E00               	movlw	0
 16465  003300  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16466  003302  0E01               	movlw	1
 16467  003304  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16468  003306  ECE5  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16469                           
 16470                           ;usb_device.c: 759: {UEIR = 0;};
 16471  00330A  0E00               	movlw	0
 16472  00330C  6E63               	movwf	3939,c	;volatile
 16473  00330E                     l165:
 16474                           
 16475                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 16476  00330E  0E04               	movlw	4
 16477  003310  0100               	movlb	0	; () banked
 16478  003312  61B0               	cpfslt	_USBDeviceState& (0+255),b
 16479  003314  D002               	goto	l166
 16480                           
 16481                           ; BSR set to: 0
 16482                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 16483  003316  98A1               	bcf	4001,4,c	;volatile
 16484                           
 16485                           ;usb_device.c: 777: return;
 16486  003318  0012               	return	
 16487  00331A                     l166:
 16488                           
 16489                           ; BSR set to: 0
 16490                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 16491  00331A  010F               	movlb	15	; () banked
 16492  00331C  A736               	btfss	54,3,b	;volatile
 16493  00331E  D03C               	goto	u11310
 16494                           
 16495                           ; BSR set to: 15
 16496                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 16497  003320  0E00               	movlw	0
 16498  003322  6E20               	movwf	USBDeviceTasks@i,c
 16499  003324                     l14200:
 16500                           
 16501                           ; BSR set to: 15
 16502  003324  0E03               	movlw	3
 16503  003326  6420               	cpfsgt	USBDeviceTasks@i,c
 16504  003328  D001               	goto	l168
 16505  00332A  D036               	goto	u11310
 16506  00332C                     l168:
 16507                           
 16508                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 16509  00332C  A662               	btfss	3938,3,c	;volatile
 16510  00332E  D034               	goto	u11310
 16511                           
 16512                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 16513  003330  CF64 F0B3          	movff	3940,_USTATcopy	;volatile
 16514                           
 16515                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 16516  003334  0100               	movlb	0	; () banked
 16517  003336  31B3               	rrcf	_USTATcopy& (0+255),w,b
 16518  003338  32E8               	rrcf	wreg,f,c
 16519  00333A  32E8               	rrcf	wreg,f,c
 16520  00333C  0B0F               	andlw	15
 16521  00333E  6FAB               	movwf	_endpoint_number& (0+255),b
 16522                           
 16523                           ; BSR set to: 0
 16524                           ;usb_device.c: 793: (UIR &= 0xF7);
 16525  003340  9662               	bcf	3938,3,c	;volatile
 16526                           
 16527                           ; BSR set to: 0
 16528                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 16529  003342  B5B3               	btfsc	_USTATcopy& (0+255),2,b
 16530  003344  D007               	goto	l171
 16531                           
 16532                           ; BSR set to: 0
 16533                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 16534  003346  51AB               	movf	_endpoint_number& (0+255),w,b
 16535  003348  0D01               	mullw	1
 16536  00334A  0E5E               	movlw	low _ep_data_out
 16537  00334C  24F3               	addwf	prodl,w,c
 16538  00334E  6ED9               	movwf	fsr2l,c
 16539  003350  0E01               	movlw	high _ep_data_out
 16540  003352  D007               	goto	L5
 16541  003354                     l171:
 16542                           
 16543                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 16544                           
 16545                           ; BSR set to: 1
 16546  003354  0100               	movlb	0	; () banked
 16547  003356  51AB               	movf	_endpoint_number& (0+255),w,b
 16548  003358  0D01               	mullw	1
 16549  00335A  0E61               	movlw	low _ep_data_in
 16550  00335C  24F3               	addwf	prodl,w,c
 16551  00335E  6ED9               	movwf	fsr2l,c
 16552  003360  0E01               	movlw	high _ep_data_in
 16553  003362                     L5:
 16554  003362  20F4               	addwfc	prodh,w,c
 16555  003364  6EDA               	movwf	fsr2h,c
 16556  003366  0101               	movlb	1	; () banked
 16557  003368  70DF               	btg	indf2,0,c
 16558                           
 16559                           ; BSR set to: 1
 16560                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 16561                           
 16562                           ; BSR set to: 1
 16563  00336A  0100               	movlb	0	; () banked
 16564  00336C  51AB               	movf	_endpoint_number& (0+255),w,b
 16565  00336E  A4D8               	btfss	status,2,c
 16566  003370  D003               	goto	l173
 16567                           
 16568                           ; BSR set to: 0
 16569                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 16570  003372  EC2E  F02B         	call	_USBCtrlEPService	;wreg free
 16571                           
 16572                           ;usb_device.c: 813: }
 16573  003376  D00E               	goto	l175
 16574  003378                     l173:
 16575                           
 16576                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 16577  003378  0E00               	movlw	0
 16578  00337A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16579  00337C  0E72               	movlw	114
 16580  00337E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16581  003380  0EB3               	movlw	low _USTATcopy
 16582  003382  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16583  003384  0E00               	movlw	high _USTATcopy
 16584  003386  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16585  003388  0E00               	movlw	0
 16586  00338A  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16587  00338C  0E00               	movlw	0
 16588  00338E  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16589  003390  ECE5  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16590  003394                     l175:
 16591  003394  2A20               	incf	USBDeviceTasks@i,f,c
 16592  003396  D7C6               	goto	l14200
 16593  003398                     u11310:
 16594                           
 16595                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 16596  003398  98A1               	bcf	4001,4,c	;volatile
 16597  00339A  0012               	return		;funcret
 16598  00339C                     __end_of_USBDeviceTasks:
 16599                           	opt stack 0
 16600                           tblptru	equ	0xFF8
 16601                           tblptrh	equ	0xFF7
 16602                           tblptrl	equ	0xFF6
 16603                           tablat	equ	0xFF5
 16604                           prodh	equ	0xFF4
 16605                           prodl	equ	0xFF3
 16606                           intcon	equ	0xFF2
 16607                           intcon2	equ	0xFF1
 16608                           intcon3	equ	0xFF0
 16609                           postinc0	equ	0xFEE
 16610                           wreg	equ	0xFE8
 16611                           indf1	equ	0xFE7
 16612                           postdec1	equ	0xFE5
 16613                           plusw1	equ	0xFE3
 16614                           fsr1h	equ	0xFE2
 16615                           fsr1l	equ	0xFE1
 16616                           indf2	equ	0xFDF
 16617                           postinc2	equ	0xFDE
 16618                           postdec2	equ	0xFDD
 16619                           plusw2	equ	0xFDB
 16620                           fsr2h	equ	0xFDA
 16621                           fsr2l	equ	0xFD9
 16622                           status	equ	0xFD8
 16623                           
 16624 ;; *************** function _USBWakeFromSuspend *****************
 16625 ;; Defined at:
 16626 ;;		line 2305 in file "usb_device.c"
 16627 ;; Parameters:    Size  Location     Type
 16628 ;;		None
 16629 ;; Auto vars:     Size  Location     Type
 16630 ;;		None
 16631 ;; Return value:  Size  Location     Type
 16632 ;;                  1    wreg      void 
 16633 ;; Registers used:
 16634 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16635 ;; Tracked objects:
 16636 ;;		On entry : 0/0
 16637 ;;		On exit  : 0/0
 16638 ;;		Unchanged: 0/0
 16639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16644 ;;Total ram usage:        0 bytes
 16645 ;; Hardware stack levels used:    1
 16646 ;; Hardware stack levels required when called:    4
 16647 ;; This function calls:
 16648 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16649 ;; This function is called by:
 16650 ;;		_USBDeviceTasks
 16651 ;; This function uses a non-reentrant model
 16652 ;;
 16653                           
 16654                           	psect	text75
 16655  0076F8                     __ptext75:
 16656                           	opt stack 0
 16657  0076F8                     _USBWakeFromSuspend:
 16658                           	opt stack 25
 16659                           
 16660                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 16661                           
 16662                           ;incstack = 0
 16663  0076F8  0E00               	movlw	0
 16664  0076FA  0100               	movlb	0	; () banked
 16665  0076FC  6FAC               	movwf	_USBBusIsSuspended& (0+255),b
 16666                           
 16667                           ; BSR set to: 0
 16668                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 16669  0076FE  0E00               	movlw	0
 16670  007700  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16671  007702  0E74               	movlw	116
 16672  007704  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16673  007706  0E00               	movlw	0
 16674  007708  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16675  00770A  0E00               	movlw	0
 16676  00770C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16677  00770E  0E00               	movlw	0
 16678  007710  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16679  007712  0E00               	movlw	0
 16680  007714  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16681  007716  ECE5  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16682                           
 16683                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 16684  00771A  9265               	bcf	3941,1,c	;volatile
 16685                           
 16686                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 16687  00771C  010F               	movlb	15	; () banked
 16688  00771E  9536               	bcf	54,2,b	;volatile
 16689                           
 16690                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 16691  007720  D001               	goto	l303
 16692  007722                     
 16693                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 16694                           
 16695                           ; BSR set to: 15
 16696  007722  9462               	bcf	3938,2,c	;volatile
 16697  007724                     l303:
 16698  007724  B462               	btfsc	3938,2,c	;volatile
 16699  007726  D7FD               	goto	l304
 16700                           
 16701                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 16702  007728  0E00               	movlw	0
 16703  00772A  0100               	movlb	0	; () banked
 16704  00772C  6FA3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 16705                           
 16706                           ; BSR set to: 0
 16707  00772E  0012               	return		;funcret
 16708  007730                     __end_of_USBWakeFromSuspend:
 16709                           	opt stack 0
 16710                           tblptru	equ	0xFF8
 16711                           tblptrh	equ	0xFF7
 16712                           tblptrl	equ	0xFF6
 16713                           tablat	equ	0xFF5
 16714                           prodh	equ	0xFF4
 16715                           prodl	equ	0xFF3
 16716                           intcon	equ	0xFF2
 16717                           intcon2	equ	0xFF1
 16718                           intcon3	equ	0xFF0
 16719                           postinc0	equ	0xFEE
 16720                           wreg	equ	0xFE8
 16721                           indf1	equ	0xFE7
 16722                           postdec1	equ	0xFE5
 16723                           plusw1	equ	0xFE3
 16724                           fsr1h	equ	0xFE2
 16725                           fsr1l	equ	0xFE1
 16726                           indf2	equ	0xFDF
 16727                           postinc2	equ	0xFDE
 16728                           postdec2	equ	0xFDD
 16729                           plusw2	equ	0xFDB
 16730                           fsr2h	equ	0xFDA
 16731                           fsr2l	equ	0xFD9
 16732                           status	equ	0xFD8
 16733                           
 16734 ;; *************** function _USBSuspend *****************
 16735 ;; Defined at:
 16736 ;;		line 2247 in file "usb_device.c"
 16737 ;; Parameters:    Size  Location     Type
 16738 ;;		None
 16739 ;; Auto vars:     Size  Location     Type
 16740 ;;		None
 16741 ;; Return value:  Size  Location     Type
 16742 ;;                  1    wreg      void 
 16743 ;; Registers used:
 16744 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 16745 ;; Tracked objects:
 16746 ;;		On entry : 0/0
 16747 ;;		On exit  : 0/0
 16748 ;;		Unchanged: 0/0
 16749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16754 ;;Total ram usage:        0 bytes
 16755 ;; Hardware stack levels used:    1
 16756 ;; Hardware stack levels required when called:    4
 16757 ;; This function calls:
 16758 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16759 ;; This function is called by:
 16760 ;;		_USBDeviceTasks
 16761 ;; This function uses a non-reentrant model
 16762 ;;
 16763                           
 16764                           	psect	text76
 16765  007936                     __ptext76:
 16766                           	opt stack 0
 16767  007936                     _USBSuspend:
 16768                           	opt stack 25
 16769                           
 16770                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 16771                           
 16772                           ; BSR set to: 0
 16773                           ;incstack = 0
 16774  007936  010F               	movlb	15	; () banked
 16775  007938  8536               	bsf	54,2,b	;volatile
 16776                           
 16777                           ; BSR set to: 15
 16778                           ;usb_device.c: 2273: (UIR &= 0xEF);
 16779  00793A  9862               	bcf	3938,4,c	;volatile
 16780                           
 16781                           ; BSR set to: 15
 16782                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 16783  00793C  8265               	bsf	3941,1,c	;volatile
 16784                           
 16785                           ; BSR set to: 15
 16786                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 16787  00793E  0E01               	movlw	1
 16788  007940  0100               	movlb	0	; () banked
 16789  007942  6FAC               	movwf	_USBBusIsSuspended& (0+255),b
 16790                           
 16791                           ; BSR set to: 0
 16792                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 16793  007944  0E00               	movlw	0
 16794  007946  6FA3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 16795                           
 16796                           ; BSR set to: 0
 16797                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 16798  007948  0E00               	movlw	0
 16799  00794A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16800  00794C  0E75               	movlw	117
 16801  00794E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16802  007950  0E00               	movlw	0
 16803  007952  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16804  007954  0E00               	movlw	0
 16805  007956  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16806  007958  0E00               	movlw	0
 16807  00795A  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16808  00795C  0E00               	movlw	0
 16809  00795E  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16810  007960  ECE5  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16811  007964  0012               	return		;funcret
 16812  007966                     __end_of_USBSuspend:
 16813                           	opt stack 0
 16814                           tblptru	equ	0xFF8
 16815                           tblptrh	equ	0xFF7
 16816                           tblptrl	equ	0xFF6
 16817                           tablat	equ	0xFF5
 16818                           prodh	equ	0xFF4
 16819                           prodl	equ	0xFF3
 16820                           intcon	equ	0xFF2
 16821                           intcon2	equ	0xFF1
 16822                           intcon3	equ	0xFF0
 16823                           postinc0	equ	0xFEE
 16824                           wreg	equ	0xFE8
 16825                           indf1	equ	0xFE7
 16826                           postdec1	equ	0xFE5
 16827                           plusw1	equ	0xFE3
 16828                           fsr1h	equ	0xFE2
 16829                           fsr1l	equ	0xFE1
 16830                           indf2	equ	0xFDF
 16831                           postinc2	equ	0xFDE
 16832                           postdec2	equ	0xFDD
 16833                           plusw2	equ	0xFDB
 16834                           fsr2h	equ	0xFDA
 16835                           fsr2l	equ	0xFD9
 16836                           status	equ	0xFD8
 16837                           
 16838 ;; *************** function _USBStallHandler *****************
 16839 ;; Defined at:
 16840 ;;		line 2204 in file "usb_device.c"
 16841 ;; Parameters:    Size  Location     Type
 16842 ;;		None
 16843 ;; Auto vars:     Size  Location     Type
 16844 ;;		None
 16845 ;; Return value:  Size  Location     Type
 16846 ;;                  1    wreg      void 
 16847 ;; Registers used:
 16848 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16849 ;; Tracked objects:
 16850 ;;		On entry : 0/0
 16851 ;;		On exit  : 0/0
 16852 ;;		Unchanged: 0/0
 16853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16856 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16857 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16858 ;;Total ram usage:        1 bytes
 16859 ;; Hardware stack levels used:    1
 16860 ;; This function calls:
 16861 ;;		Nothing
 16862 ;; This function is called by:
 16863 ;;		_USBDeviceTasks
 16864 ;; This function uses a non-reentrant model
 16865 ;;
 16866                           
 16867                           	psect	text77
 16868  00740C                     __ptext77:
 16869                           	opt stack 0
 16870  00740C                     _USBStallHandler:
 16871                           	opt stack 29
 16872                           
 16873                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 16874                           
 16875                           ;incstack = 0
 16876  00740C  010F               	movlb	15	; () banked
 16877  00740E  A126               	btfss	38,0,b	;volatile
 16878  007410  D01D               	goto	l295
 16879                           
 16880                           ; BSR set to: 15
 16881                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 16882  007412  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16883  007416  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16884  00741A  0E80               	movlw	128
 16885  00741C  18DE               	xorwf	postinc2,w,c
 16886  00741E  A4D8               	btfss	status,2,c
 16887  007420  D014               	goto	l296
 16888                           
 16889                           ; BSR set to: 15
 16890  007422  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 16891  007426  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16892  00742A  0E84               	movlw	132
 16893  00742C  18DE               	xorwf	postinc2,w,c
 16894  00742E  A4D8               	btfss	status,2,c
 16895  007430  D00C               	goto	l296
 16896                           
 16897                           ; BSR set to: 15
 16898                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 16899  007432  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16900  007436  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16901  00743A  0E0C               	movlw	12
 16902  00743C  6EDF               	movwf	indf2,c
 16903                           
 16904                           ; BSR set to: 15
 16905                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 16906  00743E  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16907  007442  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16908  007446  0E00               	movlw	0
 16909  007448  8EDB               	bsf	plusw2,7,c
 16910  00744A                     l296:
 16911                           
 16912                           ; BSR set to: 15
 16913                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 16914                           
 16915                           ; BSR set to: 15
 16916  00744A  9126               	bcf	38,0,b	;volatile
 16917  00744C                     l295:
 16918                           
 16919                           ; BSR set to: 15
 16920                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 16921  00744C  9A62               	bcf	3938,5,c	;volatile
 16922                           
 16923                           ; BSR set to: 15
 16924  00744E  0012               	return		;funcret
 16925  007450                     __end_of_USBStallHandler:
 16926                           	opt stack 0
 16927                           tblptru	equ	0xFF8
 16928                           tblptrh	equ	0xFF7
 16929                           tblptrl	equ	0xFF6
 16930                           tablat	equ	0xFF5
 16931                           prodh	equ	0xFF4
 16932                           prodl	equ	0xFF3
 16933                           intcon	equ	0xFF2
 16934                           intcon2	equ	0xFF1
 16935                           intcon3	equ	0xFF0
 16936                           postinc0	equ	0xFEE
 16937                           wreg	equ	0xFE8
 16938                           indf1	equ	0xFE7
 16939                           postdec1	equ	0xFE5
 16940                           plusw1	equ	0xFE3
 16941                           fsr1h	equ	0xFE2
 16942                           fsr1l	equ	0xFE1
 16943                           indf2	equ	0xFDF
 16944                           postinc2	equ	0xFDE
 16945                           postdec2	equ	0xFDD
 16946                           plusw2	equ	0xFDB
 16947                           fsr2h	equ	0xFDA
 16948                           fsr2l	equ	0xFD9
 16949                           status	equ	0xFD8
 16950                           
 16951 ;; *************** function _USBIncrement1msInternalTimers *****************
 16952 ;; Defined at:
 16953 ;;		line 3027 in file "usb_device.c"
 16954 ;; Parameters:    Size  Location     Type
 16955 ;;		None
 16956 ;; Auto vars:     Size  Location     Type
 16957 ;;		None
 16958 ;; Return value:  Size  Location     Type
 16959 ;;                  1    wreg      void 
 16960 ;; Registers used:
 16961 ;;		wreg, status,2, status,0
 16962 ;; Tracked objects:
 16963 ;;		On entry : 0/0
 16964 ;;		On exit  : 0/0
 16965 ;;		Unchanged: 0/0
 16966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16970 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16971 ;;Total ram usage:        0 bytes
 16972 ;; Hardware stack levels used:    1
 16973 ;; This function calls:
 16974 ;;		Nothing
 16975 ;; This function is called by:
 16976 ;;		_USBDeviceTasks
 16977 ;; This function uses a non-reentrant model
 16978 ;;
 16979                           
 16980                           	psect	text78
 16981  007BBA                     __ptext78:
 16982                           	opt stack 0
 16983  007BBA                     _USBIncrement1msInternalTimers:
 16984                           	opt stack 29
 16985                           
 16986                           ;usb_device.c: 3035: USB1msTickCount++;
 16987                           
 16988                           ; BSR set to: 15
 16989                           ;incstack = 0
 16990  007BBA  0E01               	movlw	1
 16991  007BBC  0101               	movlb	1	; () banked
 16992  007BBE  2754               	addwf	_USB1msTickCount& (0+255),f,b
 16993  007BC0  0E00               	movlw	0
 16994  007BC2  2355               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
 16995  007BC4  2356               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
 16996  007BC6  2357               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
 16997                           
 16998                           ; BSR set to: 1
 16999                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 17000  007BC8  0100               	movlb	0	; () banked
 17001  007BCA  51AC               	movf	_USBBusIsSuspended& (0+255),w,b
 17002  007BCC  A4D8               	btfss	status,2,c
 17003  007BCE  0012               	return	
 17004                           
 17005                           ; BSR set to: 0
 17006                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 17007  007BD0  2BA3               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
 17008                           
 17009                           ; BSR set to: 0
 17010                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 17011  007BD2  51A3               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
 17012  007BD4  A4D8               	btfss	status,2,c
 17013  007BD6  0012               	return	
 17014                           
 17015                           ; BSR set to: 0
 17016                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 17017  007BD8  69A3               	setf	_USBTicksSinceSuspendEnd& (0+255),b
 17018                           
 17019                           ; BSR set to: 0
 17020  007BDA  0012               	return	
 17021  007BDC                     __end_of_USBIncrement1msInternalTimers:
 17022                           	opt stack 0
 17023                           tblptru	equ	0xFF8
 17024                           tblptrh	equ	0xFF7
 17025                           tblptrl	equ	0xFF6
 17026                           tablat	equ	0xFF5
 17027                           prodh	equ	0xFF4
 17028                           prodl	equ	0xFF3
 17029                           intcon	equ	0xFF2
 17030                           intcon2	equ	0xFF1
 17031                           intcon3	equ	0xFF0
 17032                           postinc0	equ	0xFEE
 17033                           wreg	equ	0xFE8
 17034                           indf1	equ	0xFE7
 17035                           postdec1	equ	0xFE5
 17036                           plusw1	equ	0xFE3
 17037                           fsr1h	equ	0xFE2
 17038                           fsr1l	equ	0xFE1
 17039                           indf2	equ	0xFDF
 17040                           postinc2	equ	0xFDE
 17041                           postdec2	equ	0xFDD
 17042                           plusw2	equ	0xFDB
 17043                           fsr2h	equ	0xFDA
 17044                           fsr2l	equ	0xFD9
 17045                           status	equ	0xFD8
 17046                           
 17047 ;; *************** function _USBDeviceInit *****************
 17048 ;; Defined at:
 17049 ;;		line 277 in file "usb_device.c"
 17050 ;; Parameters:    Size  Location     Type
 17051 ;;		None
 17052 ;; Auto vars:     Size  Location     Type
 17053 ;;  i               1    8[COMRAM] unsigned char 
 17054 ;; Return value:  Size  Location     Type
 17055 ;;                  1    wreg      void 
 17056 ;; Registers used:
 17057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17058 ;; Tracked objects:
 17059 ;;		On entry : 0/0
 17060 ;;		On exit  : 0/0
 17061 ;;		Unchanged: 0/0
 17062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17064 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17066 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17067 ;;Total ram usage:        1 bytes
 17068 ;; Hardware stack levels used:    1
 17069 ;; Hardware stack levels required when called:    1
 17070 ;; This function calls:
 17071 ;;		_memset
 17072 ;; This function is called by:
 17073 ;;		_USBDeviceTasks
 17074 ;;		_main
 17075 ;; This function uses a non-reentrant model
 17076 ;;
 17077                           
 17078                           	psect	text79
 17079  00394E                     __ptext79:
 17080                           	opt stack 0
 17081  00394E                     _USBDeviceInit:
 17082                           	opt stack 28
 17083                           
 17084                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 17085                           
 17086                           ; BSR set to: 0
 17087                           ;incstack = 0
 17088  00394E  98A0               	bcf	4000,4,c	;volatile
 17089                           
 17090                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 17091  003950  0E00               	movlw	0
 17092  003952  6E63               	movwf	3939,c	;volatile
 17093                           
 17094                           ;usb_device.c: 291: {UIR = 0;};
 17095  003954  0E00               	movlw	0
 17096  003956  6E62               	movwf	3938,c	;volatile
 17097                           
 17098                           ;usb_device.c: 294: UEP0 = 0;
 17099  003958  0E00               	movlw	0
 17100  00395A  010F               	movlb	15	; () banked
 17101  00395C  6F26               	movwf	38,b	;volatile
 17102                           
 17103                           ; BSR set to: 15
 17104                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 17105  00395E  0E27               	movlw	39
 17106  003960  6E01               	movwf	memset@p1,c
 17107  003962  0E0F               	movlw	15
 17108  003964  6E02               	movwf	memset@p1+1,c
 17109  003966  0E00               	movlw	0
 17110  003968  6E04               	movwf	memset@c+1,c
 17111  00396A  0E00               	movlw	0
 17112  00396C  6E03               	movwf	memset@c,c
 17113  00396E  0E00               	movlw	0
 17114  003970  6E06               	movwf	memset@n+1,c
 17115  003972  0E02               	movlw	2
 17116  003974  6E05               	movwf	memset@n,c
 17117  003976  ECF6  F03C         	call	_memset	;wreg free
 17118                           
 17119                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 17120  00397A  0E16               	movlw	22
 17121  00397C  010F               	movlb	15	; () banked
 17122  00397E  6F39               	movwf	57,b	;volatile
 17123                           
 17124                           ; BSR set to: 15
 17125  003980  0E9F               	movlw	159
 17126  003982  6F37               	movwf	55,b	;volatile
 17127                           
 17128                           ; BSR set to: 15
 17129  003984  0E7B               	movlw	123
 17130  003986  6F36               	movwf	54,b	;volatile
 17131                           
 17132                           ; BSR set to: 15
 17133                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 17134  003988  0E00               	movlw	0
 17135  00398A  6E09               	movwf	USBDeviceInit@i,c
 17136  00398C                     l13168:
 17137                           
 17138                           ; BSR set to: 15
 17139  00398C  0E0B               	movlw	11
 17140  00398E  6409               	cpfsgt	USBDeviceInit@i,c
 17141  003990  D001               	goto	l139
 17142  003992  D00E               	goto	u10010
 17143  003994                     l139:
 17144                           
 17145                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 17146                           
 17147                           ; BSR set to: 15
 17148  003994  5009               	movf	USBDeviceInit@i,w,c
 17149  003996  0D04               	mullw	4
 17150  003998  0E00               	movlw	0
 17151  00399A  24F3               	addwf	prodl,w,c
 17152  00399C  6ED9               	movwf	fsr2l,c
 17153  00399E  0E0D               	movlw	13
 17154  0039A0  20F4               	addwfc	prodh,w,c
 17155  0039A2  6EDA               	movwf	fsr2h,c
 17156  0039A4  6ADE               	clrf	postinc2,c
 17157  0039A6  6ADE               	clrf	postinc2,c
 17158  0039A8  6ADE               	clrf	postinc2,c
 17159  0039AA  6ADD               	clrf	postdec2,c
 17160  0039AC  2A09               	incf	USBDeviceInit@i,f,c
 17161  0039AE  D7EE               	goto	l13168
 17162  0039B0                     u10010:
 17163                           
 17164                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 17165  0039B0  8C65               	bsf	3941,6,c	;volatile
 17166                           
 17167                           ;usb_device.c: 316: UADDR = 0x00;
 17168  0039B2  0E00               	movlw	0
 17169  0039B4  010F               	movlb	15	; () banked
 17170  0039B6  6F38               	movwf	56,b	;volatile
 17171                           
 17172                           ; BSR set to: 15
 17173                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 17174  0039B8  9865               	bcf	3941,4,c	;volatile
 17175                           
 17176                           ; BSR set to: 15
 17177                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 17178  0039BA  9C65               	bcf	3941,6,c	;volatile
 17179  0039BC                     
 17180                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 17181                           
 17182                           ; BSR set to: 15
 17183  0039BC  9662               	bcf	3938,3,c	;volatile
 17184                           
 17185                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 17186  0039BE  0E00               	movlw	0
 17187  0039C0  0100               	movlb	0	; () banked
 17188  0039C2  6F69               	movwf	(_inPipes+3)& (0+255),b
 17189                           
 17190                           ; BSR set to: 0
 17191                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 17192  0039C4  0E00               	movlw	0
 17193  0039C6  0101               	movlb	1	; () banked
 17194  0039C8  6F34               	movwf	(_outPipes+3)& (0+255),b
 17195                           
 17196                           ; BSR set to: 1
 17197                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 17198  0039CA  0E00               	movlw	0
 17199  0039CC  6F36               	movwf	(_outPipes+5)& (0+255),b
 17200  0039CE  0E00               	movlw	0
 17201  0039D0  6F35               	movwf	(_outPipes+4)& (0+255),b
 17202                           
 17203                           ; BSR set to: 1
 17204                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 17205  0039D2  B662               	btfsc	3938,3,c	;volatile
 17206  0039D4  D7F3               	goto	l141
 17207                           
 17208                           ; BSR set to: 1
 17209                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 17210                           
 17211                           ; BSR set to: 1
 17212  0039D6  0E01               	movlw	1
 17213  0039D8  0100               	movlb	0	; () banked
 17214  0039DA  6FA7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17215                           
 17216                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 17217  0039DC  0E01               	movlw	1
 17218  0039DE  6FA6               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17219                           
 17220                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 17221  0039E0  0E00               	movlw	0
 17222  0039E2  6FA5               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 17223                           
 17224                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 17225  0039E4  0E00               	movlw	0
 17226  0039E6  6FA4               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 17227                           
 17228                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 17229  0039E8  0E00               	movlw	0
 17230  0039EA  6FAC               	movwf	_USBBusIsSuspended& (0+255),b
 17231                           
 17232                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 17233  0039EC  0E00               	movlw	0
 17234  0039EE  6E09               	movwf	USBDeviceInit@i,c
 17235  0039F0                     l13196:
 17236                           
 17237                           ; BSR set to: 0
 17238  0039F0  0E02               	movlw	2
 17239  0039F2  6409               	cpfsgt	USBDeviceInit@i,c
 17240  0039F4  D001               	goto	l143
 17241  0039F6  D02E               	goto	u10040
 17242  0039F8                     l143:
 17243                           
 17244                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 17245                           
 17246                           ; BSR set to: 0
 17247  0039F8  5009               	movf	USBDeviceInit@i,w,c
 17248  0039FA  0D02               	mullw	2
 17249  0039FC  0E6C               	movlw	low _pBDTEntryIn
 17250  0039FE  24F3               	addwf	prodl,w,c
 17251  003A00  6ED9               	movwf	fsr2l,c
 17252  003A02  0E00               	movlw	high _pBDTEntryIn
 17253  003A04  20F4               	addwfc	prodh,w,c
 17254  003A06  6EDA               	movwf	fsr2h,c
 17255  003A08  0E00               	movlw	0
 17256  003A0A  6EDE               	movwf	postinc2,c
 17257  003A0C  0E00               	movlw	0
 17258  003A0E  6EDD               	movwf	postdec2,c
 17259                           
 17260                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 17261  003A10  5009               	movf	USBDeviceInit@i,w,c
 17262  003A12  0D02               	mullw	2
 17263  003A14  0E72               	movlw	low _pBDTEntryOut
 17264  003A16  24F3               	addwf	prodl,w,c
 17265  003A18  6ED9               	movwf	fsr2l,c
 17266  003A1A  0E00               	movlw	high _pBDTEntryOut
 17267  003A1C  20F4               	addwfc	prodh,w,c
 17268  003A1E  6EDA               	movwf	fsr2h,c
 17269  003A20  0E00               	movlw	0
 17270  003A22  6EDE               	movwf	postinc2,c
 17271  003A24  0E00               	movlw	0
 17272  003A26  6EDD               	movwf	postdec2,c
 17273                           
 17274                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 17275  003A28  5009               	movf	USBDeviceInit@i,w,c
 17276  003A2A  0D01               	mullw	1
 17277  003A2C  0E61               	movlw	low _ep_data_in
 17278  003A2E  24F3               	addwf	prodl,w,c
 17279  003A30  6ED9               	movwf	fsr2l,c
 17280  003A32  0E01               	movlw	high _ep_data_in
 17281  003A34  20F4               	addwfc	prodh,w,c
 17282  003A36  6EDA               	movwf	fsr2h,c
 17283  003A38  0E00               	movlw	0
 17284  003A3A  6EDF               	movwf	indf2,c
 17285                           
 17286                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 17287  003A3C  5009               	movf	USBDeviceInit@i,w,c
 17288  003A3E  0D01               	mullw	1
 17289  003A40  0E5E               	movlw	low _ep_data_out
 17290  003A42  24F3               	addwf	prodl,w,c
 17291  003A44  6ED9               	movwf	fsr2l,c
 17292  003A46  0E01               	movlw	high _ep_data_out
 17293  003A48  20F4               	addwfc	prodh,w,c
 17294  003A4A  6EDA               	movwf	fsr2h,c
 17295  003A4C  0E00               	movlw	0
 17296  003A4E  6EDF               	movwf	indf2,c
 17297  003A50  2A09               	incf	USBDeviceInit@i,f,c
 17298  003A52  D7CE               	goto	l13196
 17299  003A54                     u10040:
 17300                           
 17301                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 17302  003A54  0E08               	movlw	8
 17303  003A56  0100               	movlb	0	; () banked
 17304  003A58  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 17305  003A5A  0E0D               	movlw	13
 17306  003A5C  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 17307                           
 17308                           ; BSR set to: 0
 17309                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 17310  003A5E  0E16               	movlw	22
 17311  003A60  010F               	movlb	15	; () banked
 17312  003A62  6F26               	movwf	38,b	;volatile
 17313                           
 17314                           ; BSR set to: 15
 17315                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 17316  003A64  0E0D               	movlw	13
 17317  003A66  010D               	movlb	13	; () banked
 17318  003A68  6F03               	movwf	3,b	;volatile
 17319  003A6A  0E30               	movlw	48
 17320  003A6C  6F02               	movwf	2,b	;volatile
 17321                           
 17322                           ; BSR set to: 13
 17323                           ;usb_device.c: 359: BDT[0].CNT = 8;
 17324  003A6E  0E08               	movlw	8
 17325  003A70  6F01               	movwf	1,b	;volatile
 17326                           
 17327                           ; BSR set to: 13
 17328                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 17329  003A72  0E04               	movlw	4
 17330  003A74  6F00               	movwf	0,b	;volatile
 17331                           
 17332                           ; BSR set to: 13
 17333                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 17334  003A76  8F00               	bsf	0,7,b	;volatile
 17335                           
 17336                           ; BSR set to: 13
 17337                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 17338  003A78  0E00               	movlw	0
 17339  003A7A  0100               	movlb	0	; () banked
 17340  003A7C  6FB4               	movwf	_USBActiveConfiguration& (0+255),b
 17341                           
 17342                           ; BSR set to: 0
 17343                           ;usb_device.c: 366: USB1msTickCount = 0;
 17344  003A7E  0E00               	movlw	0
 17345  003A80  0101               	movlb	1	; () banked
 17346  003A82  6F54               	movwf	_USB1msTickCount& (0+255),b
 17347  003A84  0E00               	movlw	0
 17348  003A86  6F55               	movwf	(_USB1msTickCount+1)& (0+255),b
 17349  003A88  0E00               	movlw	0
 17350  003A8A  6F56               	movwf	(_USB1msTickCount+2)& (0+255),b
 17351  003A8C  0E00               	movlw	0
 17352  003A8E  6F57               	movwf	(_USB1msTickCount+3)& (0+255),b
 17353                           
 17354                           ; BSR set to: 1
 17355                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 17356  003A90  0E00               	movlw	0
 17357  003A92  0100               	movlb	0	; () banked
 17358  003A94  6FA3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 17359                           
 17360                           ; BSR set to: 0
 17361                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 17362  003A96  0E00               	movlw	0
 17363  003A98  6FB0               	movwf	_USBDeviceState& (0+255),b
 17364                           
 17365                           ; BSR set to: 0
 17366  003A9A  0012               	return		;funcret
 17367  003A9C                     __end_of_USBDeviceInit:
 17368                           	opt stack 0
 17369                           tblptru	equ	0xFF8
 17370                           tblptrh	equ	0xFF7
 17371                           tblptrl	equ	0xFF6
 17372                           tablat	equ	0xFF5
 17373                           prodh	equ	0xFF4
 17374                           prodl	equ	0xFF3
 17375                           intcon	equ	0xFF2
 17376                           intcon2	equ	0xFF1
 17377                           intcon3	equ	0xFF0
 17378                           postinc0	equ	0xFEE
 17379                           wreg	equ	0xFE8
 17380                           indf1	equ	0xFE7
 17381                           postdec1	equ	0xFE5
 17382                           plusw1	equ	0xFE3
 17383                           fsr1h	equ	0xFE2
 17384                           fsr1l	equ	0xFE1
 17385                           indf2	equ	0xFDF
 17386                           postinc2	equ	0xFDE
 17387                           postdec2	equ	0xFDD
 17388                           plusw2	equ	0xFDB
 17389                           fsr2h	equ	0xFDA
 17390                           fsr2l	equ	0xFD9
 17391                           status	equ	0xFD8
 17392                           
 17393 ;; *************** function _USBCtrlEPService *****************
 17394 ;; Defined at:
 17395 ;;		line 2374 in file "usb_device.c"
 17396 ;; Parameters:    Size  Location     Type
 17397 ;;		None
 17398 ;; Auto vars:     Size  Location     Type
 17399 ;;		None
 17400 ;; Return value:  Size  Location     Type
 17401 ;;                  1    wreg      void 
 17402 ;; Registers used:
 17403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17404 ;; Tracked objects:
 17405 ;;		On entry : 0/0
 17406 ;;		On exit  : 0/0
 17407 ;;		Unchanged: 0/0
 17408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17411 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17412 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17413 ;;Total ram usage:        2 bytes
 17414 ;; Hardware stack levels used:    1
 17415 ;; Hardware stack levels required when called:    7
 17416 ;; This function calls:
 17417 ;;		_USBCtrlTrfInHandler
 17418 ;;		_USBCtrlTrfOutHandler
 17419 ;;		_USBCtrlTrfSetupHandler
 17420 ;;		_memcpy
 17421 ;; This function is called by:
 17422 ;;		_USBDeviceTasks
 17423 ;; This function uses a non-reentrant model
 17424 ;;
 17425                           
 17426                           	psect	text80
 17427  00565C                     __ptext80:
 17428                           	opt stack 0
 17429  00565C                     _USBCtrlEPService:
 17430                           	opt stack 22
 17431                           
 17432                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 17433                           
 17434                           ; BSR set to: 0
 17435                           ;incstack = 0
 17436  00565C  0E2D               	movlw	45
 17437  00565E  0100               	movlb	0	; () banked
 17438  005660  6FA9               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
 17439                           
 17440                           ; BSR set to: 0
 17441                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 17442  005662  C0B3  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 17443  005666  0EFD               	movlw	253
 17444  005668  161E               	andwf	??_USBCtrlEPService,f,c
 17445  00566A  A4D8               	btfss	status,2,c
 17446  00566C  D044               	goto	l309
 17447                           
 17448                           ; BSR set to: 0
 17449                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 17450  00566E  C0B3  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 17451  005672  90D8               	bcf	status,0,c
 17452  005674  321E               	rrcf	??_USBCtrlEPService,f,c
 17453  005676  0E3F               	movlw	63
 17454  005678  161E               	andwf	??_USBCtrlEPService,f,c
 17455  00567A  501E               	movf	??_USBCtrlEPService,w,c
 17456  00567C  0D04               	mullw	4
 17457  00567E  0E00               	movlw	0
 17458  005680  24F3               	addwf	prodl,w,c
 17459  005682  6F92               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 17460  005684  0E0D               	movlw	13
 17461  005686  20F4               	addwfc	prodh,w,c
 17462  005688  6F93               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 17463                           
 17464                           ; BSR set to: 0
 17465                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 17466  00568A  C092  F090         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 17467  00568E  C093  F091         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 17468                           
 17469                           ; BSR set to: 0
 17470                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 17471  005692  0E04               	movlw	4
 17472  005694  1990               	xorwf	_pBDTEntryEP0OutNext& (0+255),w,b
 17473  005696  6F90               	movwf	_pBDTEntryEP0OutNext& (0+255),b
 17474  005698  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17475  00569A  6F91               	movwf	(_pBDTEntryEP0OutNext+1)& (0+255),b
 17476                           
 17477                           ; BSR set to: 0
 17478                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 17479  00569C  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17480  0056A0  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17481  0056A4  30DF               	rrcf	223,w,c
 17482  0056A6  32E8               	rrcf	wreg,f,c
 17483  0056A8  0B0F               	andlw	15
 17484  0056AA  0A0D               	xorlw	13
 17485  0056AC  A4D8               	btfss	status,2,c
 17486  0056AE  D020               	goto	l310
 17487                           
 17488                           ; BSR set to: 0
 17489                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 17490  0056B0  0E30               	movlw	48
 17491  0056B2  6E01               	movwf	memcpy@d1,c
 17492  0056B4  0E0D               	movlw	13
 17493  0056B6  6E02               	movwf	memcpy@d1+1,c
 17494  0056B8  EE20 F002          	lfsr	2,2
 17495  0056BC  5192               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 17496  0056BE  26D9               	addwf	fsr2l,f,c
 17497  0056C0  5193               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 17498  0056C2  22DA               	addwfc	fsr2h,f,c
 17499  0056C4  CFDE F01E          	movff	postinc2,??_USBCtrlEPService
 17500  0056C8  CFDD F01F          	movff	postdec2,??_USBCtrlEPService+1
 17501  0056CC  C01E  F003         	movff	??_USBCtrlEPService,memcpy@s1
 17502  0056D0  C01F  F004         	movff	??_USBCtrlEPService+1,memcpy@s1+1
 17503  0056D4  5003               	movf	memcpy@s1,w,c
 17504  0056D6  1004               	iorwf	memcpy@s1+1,w,c
 17505  0056D8  A4D8               	btfss	status,2,c
 17506  0056DA  0E20               	movlw	32
 17507  0056DC  6E05               	movwf	memcpy@s1+2,c
 17508  0056DE  0E00               	movlw	0
 17509  0056E0  6E07               	movwf	memcpy@n+1,c
 17510  0056E2  0E08               	movlw	8
 17511  0056E4  6E06               	movwf	memcpy@n,c
 17512  0056E6  EC9F  F035         	call	_memcpy	;wreg free
 17513                           
 17514                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 17515  0056EA  EC3E  F02F         	call	_USBCtrlTrfSetupHandler	;wreg free
 17516                           
 17517                           ;usb_device.c: 2411: }
 17518  0056EE  0012               	return	
 17519  0056F0                     l310:
 17520                           
 17521                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 17522  0056F0  EC64  F036         	call	_USBCtrlTrfOutHandler	;wreg free
 17523                           
 17524                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 17525  0056F4  0012               	return	
 17526  0056F6                     l309:
 17527                           
 17528                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 17529  0056F6  0100               	movlb	0	; () banked
 17530  0056F8  51B3               	movf	_USTATcopy& (0+255),w,b
 17531  0056FA  0BFD               	andlw	253
 17532  0056FC  0A04               	xorlw	4
 17533  0056FE  A4D8               	btfss	status,2,c
 17534  005700  0012               	return	
 17535                           
 17536                           ; BSR set to: 0
 17537                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 17538  005702  EC7B  F027         	call	_USBCtrlTrfInHandler	;wreg free
 17539  005706  0012               	return	
 17540  005708                     __end_of_USBCtrlEPService:
 17541                           	opt stack 0
 17542                           tblptru	equ	0xFF8
 17543                           tblptrh	equ	0xFF7
 17544                           tblptrl	equ	0xFF6
 17545                           tablat	equ	0xFF5
 17546                           prodh	equ	0xFF4
 17547                           prodl	equ	0xFF3
 17548                           intcon	equ	0xFF2
 17549                           intcon2	equ	0xFF1
 17550                           intcon3	equ	0xFF0
 17551                           postinc0	equ	0xFEE
 17552                           wreg	equ	0xFE8
 17553                           indf1	equ	0xFE7
 17554                           postdec1	equ	0xFE5
 17555                           plusw1	equ	0xFE3
 17556                           fsr1h	equ	0xFE2
 17557                           fsr1l	equ	0xFE1
 17558                           indf2	equ	0xFDF
 17559                           postinc2	equ	0xFDE
 17560                           postdec2	equ	0xFDD
 17561                           plusw2	equ	0xFDB
 17562                           fsr2h	equ	0xFDA
 17563                           fsr2l	equ	0xFD9
 17564                           status	equ	0xFD8
 17565                           
 17566 ;; *************** function _USBCtrlTrfSetupHandler *****************
 17567 ;; Defined at:
 17568 ;;		line 2467 in file "usb_device.c"
 17569 ;; Parameters:    Size  Location     Type
 17570 ;;		None
 17571 ;; Auto vars:     Size  Location     Type
 17572 ;;		None
 17573 ;; Return value:  Size  Location     Type
 17574 ;;                  1    wreg      void 
 17575 ;; Registers used:
 17576 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17577 ;; Tracked objects:
 17578 ;;		On entry : 0/0
 17579 ;;		On exit  : 0/0
 17580 ;;		Unchanged: 0/0
 17581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17586 ;;Total ram usage:        0 bytes
 17587 ;; Hardware stack levels used:    1
 17588 ;; Hardware stack levels required when called:    6
 17589 ;; This function calls:
 17590 ;;		_USBCheckStdRequest
 17591 ;;		_USBCtrlEPServiceComplete
 17592 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17593 ;; This function is called by:
 17594 ;;		_USBCtrlEPService
 17595 ;; This function uses a non-reentrant model
 17596 ;;
 17597                           
 17598                           	psect	text81
 17599  005E7C                     __ptext81:
 17600                           	opt stack 0
 17601  005E7C                     _USBCtrlTrfSetupHandler:
 17602                           	opt stack 22
 17603                           
 17604                           ;usb_device.c: 2472: shortPacketStatus = 0;
 17605                           
 17606                           ;incstack = 0
 17607  005E7C  0E00               	movlw	0
 17608  005E7E  0100               	movlb	0	; () banked
 17609  005E80  6FAF               	movwf	_shortPacketStatus& (0+255),b
 17610                           
 17611                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 17612  005E82  0E00               	movlw	0
 17613  005E84  6FA8               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 17614                           
 17615                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 17616  005E86  0E00               	movlw	0
 17617  005E88  6FA5               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 17618                           
 17619                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 17620  005E8A  0E00               	movlw	0
 17621  005E8C  6FA4               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 17622                           
 17623                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 17624  005E8E  0E00               	movlw	0
 17625  005E90  6FAA               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 17626                           
 17627                           ;usb_device.c: 2477: controlTransferState = 0;
 17628  005E92  0E00               	movlw	0
 17629  005E94  6FAE               	movwf	_controlTransferState& (0+255),b
 17630                           
 17631                           ; BSR set to: 0
 17632                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 17633  005E96  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 17634  005E9A  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17635  005E9E  0E7F               	movlw	127
 17636  005EA0  16DF               	andwf	indf2,f,c
 17637                           
 17638                           ; BSR set to: 0
 17639                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 17640  005EA2  0E04               	movlw	4
 17641  005EA4  196C               	xorwf	_pBDTEntryIn& (0+255),w,b
 17642  005EA6  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 17643  005EA8  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17644  005EAA  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 17645                           
 17646                           ; BSR set to: 0
 17647                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 17648  005EAC  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 17649  005EB0  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17650  005EB4  0E7F               	movlw	127
 17651  005EB6  16DF               	andwf	indf2,f,c
 17652                           
 17653                           ; BSR set to: 0
 17654                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 17655  005EB8  0E04               	movlw	4
 17656  005EBA  196C               	xorwf	_pBDTEntryIn& (0+255),w,b
 17657  005EBC  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 17658  005EBE  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17659  005EC0  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 17660                           
 17661                           ; BSR set to: 0
 17662                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 17663  005EC2  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17664  005EC6  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17665  005ECA  0E7F               	movlw	127
 17666  005ECC  16DF               	andwf	indf2,f,c
 17667                           
 17668                           ; BSR set to: 0
 17669                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 17670  005ECE  0E00               	movlw	0
 17671  005ED0  6F69               	movwf	(_inPipes+3)& (0+255),b
 17672                           
 17673                           ; BSR set to: 0
 17674                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 17675  005ED2  0E00               	movlw	0
 17676  005ED4  6F6B               	movwf	(_inPipes+5)& (0+255),b
 17677  005ED6  0E00               	movlw	0
 17678  005ED8  6F6A               	movwf	(_inPipes+4)& (0+255),b
 17679                           
 17680                           ; BSR set to: 0
 17681                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 17682  005EDA  0E00               	movlw	0
 17683  005EDC  0101               	movlb	1	; () banked
 17684  005EDE  6F34               	movwf	(_outPipes+3)& (0+255),b
 17685                           
 17686                           ; BSR set to: 1
 17687                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 17688  005EE0  0E00               	movlw	0
 17689  005EE2  6F36               	movwf	(_outPipes+5)& (0+255),b
 17690  005EE4  0E00               	movlw	0
 17691  005EE6  6F35               	movwf	(_outPipes+4)& (0+255),b
 17692                           
 17693                           ; BSR set to: 1
 17694                           ;usb_device.c: 2502: USBCheckStdRequest();
 17695  005EE8  EC33  F023         	call	_USBCheckStdRequest	;wreg free
 17696                           
 17697                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 17698  005EEC  0E00               	movlw	0
 17699  005EEE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17700  005EF0  0E03               	movlw	3
 17701  005EF2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17702  005EF4  0E00               	movlw	0
 17703  005EF6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17704  005EF8  0E00               	movlw	0
 17705  005EFA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17706  005EFC  0E00               	movlw	0
 17707  005EFE  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17708  005F00  0E00               	movlw	0
 17709  005F02  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17710  005F04  ECE5  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17711                           
 17712                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 17713  005F08  ECB3  F022         	call	_USBCtrlEPServiceComplete	;wreg free
 17714  005F0C  0012               	return		;funcret
 17715  005F0E                     __end_of_USBCtrlTrfSetupHandler:
 17716                           	opt stack 0
 17717                           tblptru	equ	0xFF8
 17718                           tblptrh	equ	0xFF7
 17719                           tblptrl	equ	0xFF6
 17720                           tablat	equ	0xFF5
 17721                           prodh	equ	0xFF4
 17722                           prodl	equ	0xFF3
 17723                           intcon	equ	0xFF2
 17724                           intcon2	equ	0xFF1
 17725                           intcon3	equ	0xFF0
 17726                           postinc0	equ	0xFEE
 17727                           wreg	equ	0xFE8
 17728                           indf1	equ	0xFE7
 17729                           postdec1	equ	0xFE5
 17730                           plusw1	equ	0xFE3
 17731                           fsr1h	equ	0xFE2
 17732                           fsr1l	equ	0xFE1
 17733                           indf2	equ	0xFDF
 17734                           postinc2	equ	0xFDE
 17735                           postdec2	equ	0xFDD
 17736                           plusw2	equ	0xFDB
 17737                           fsr2h	equ	0xFDA
 17738                           fsr2l	equ	0xFD9
 17739                           status	equ	0xFD8
 17740                           
 17741 ;; *************** function _USBCtrlEPServiceComplete *****************
 17742 ;; Defined at:
 17743 ;;		line 1618 in file "usb_device.c"
 17744 ;; Parameters:    Size  Location     Type
 17745 ;;		None
 17746 ;; Auto vars:     Size  Location     Type
 17747 ;;		None
 17748 ;; Return value:  Size  Location     Type
 17749 ;;                  1    wreg      void 
 17750 ;; Registers used:
 17751 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17752 ;; Tracked objects:
 17753 ;;		On entry : 0/0
 17754 ;;		On exit  : 0/0
 17755 ;;		Unchanged: 0/0
 17756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17761 ;;Total ram usage:        0 bytes
 17762 ;; Hardware stack levels used:    1
 17763 ;; Hardware stack levels required when called:    2
 17764 ;; This function calls:
 17765 ;;		_USBCtrlEPAllowDataStage
 17766 ;;		_USBCtrlEPAllowStatusStage
 17767 ;; This function is called by:
 17768 ;;		_USBCtrlTrfSetupHandler
 17769 ;; This function uses a non-reentrant model
 17770 ;;
 17771                           
 17772                           	psect	text82
 17773  004566                     __ptext82:
 17774                           	opt stack 0
 17775  004566                     _USBCtrlEPServiceComplete:
 17776                           	opt stack 25
 17777                           
 17778                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 17779                           
 17780                           ;incstack = 0
 17781  004566  9865               	bcf	3941,4,c	;volatile
 17782                           
 17783                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 17784  004568  0100               	movlb	0	; () banked
 17785  00456A  BF69               	btfsc	(_inPipes+3)& (0+255),7,b
 17786  00456C  D03C               	goto	l219
 17787                           
 17788                           ; BSR set to: 0
 17789                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 17790  00456E  0101               	movlb	1	; () banked
 17791  004570  AF34               	btfss	(_outPipes+3)& (0+255),7,b
 17792  004572  D00D               	goto	l220
 17793                           
 17794                           ; BSR set to: 1
 17795                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 17796  004574  0E02               	movlw	2
 17797  004576  0100               	movlb	0	; () banked
 17798  004578  6FAE               	movwf	_controlTransferState& (0+255),b
 17799                           
 17800                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 17801  00457A  51A4               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 17802  00457C  B4D8               	btfsc	status,2,c
 17803                           
 17804                           ; BSR set to: 0
 17805                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 17806  00457E  EC73  F02D         	call	_USBCtrlEPAllowDataStage	;wreg free
 17807                           
 17808                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 17809  004582  0E00               	movlw	0
 17810  004584  0100               	movlb	0	; () banked
 17811  004586  6FA6               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17812                           
 17813                           ; BSR set to: 0
 17814                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 17815  004588  0E00               	movlw	0
 17816  00458A  6FA7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17817                           
 17818                           ;usb_device.c: 1654: }
 17819  00458C  0012               	return	
 17820  00458E                     l220:
 17821                           
 17822                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 17823                           
 17824                           ; BSR set to: 0
 17825  00458E  0100               	movlb	0	; () banked
 17826  004590  EE20 F001          	lfsr	2,1
 17827  004594  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17828  004596  26D9               	addwf	fsr2l,f,c
 17829  004598  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17830  00459A  22DA               	addwfc	fsr2h,f,c
 17831  00459C  0E08               	movlw	8
 17832  00459E  6EDF               	movwf	indf2,c
 17833                           
 17834                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17835  0045A0  EE20 F002          	lfsr	2,2
 17836  0045A4  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17837  0045A6  26D9               	addwf	fsr2l,f,c
 17838  0045A8  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17839  0045AA  22DA               	addwfc	fsr2h,f,c
 17840  0045AC  0E30               	movlw	48
 17841  0045AE  6EDE               	movwf	postinc2,c
 17842  0045B0  0E0D               	movlw	13
 17843  0045B2  6EDD               	movwf	postdec2,c
 17844                           
 17845                           ; BSR set to: 0
 17846                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 17847  0045B4  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17848  0045B8  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17849  0045BC  0E0C               	movlw	12
 17850  0045BE  6EDF               	movwf	indf2,c
 17851                           
 17852                           ; BSR set to: 0
 17853                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17854  0045C0  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17855  0045C4  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17856  0045C8  0E00               	movlw	0
 17857  0045CA  8EDB               	bsf	plusw2,7,c
 17858                           
 17859                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 17860  0045CC  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 17861  0045D0  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17862  0045D4  0E04               	movlw	4
 17863  0045D6  6EDF               	movwf	indf2,c
 17864                           
 17865                           ; BSR set to: 0
 17866                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17867  0045D8  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 17868  0045DC  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17869  0045E0  0E00               	movlw	0
 17870  0045E2  8EDB               	bsf	plusw2,7,c
 17871                           
 17872                           ; BSR set to: 0
 17873                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 17874  0045E4  0012               	return	
 17875  0045E6                     l219:
 17876                           
 17877                           ; BSR set to: 0
 17878                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 17879  0045E6  010D               	movlb	13	; () banked
 17880  0045E8  AF30               	btfss	48,7,b	;volatile
 17881  0045EA  D012               	goto	l224
 17882                           
 17883                           ; BSR set to: 13
 17884                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 17885  0045EC  0E01               	movlw	1
 17886  0045EE  0100               	movlb	0	; () banked
 17887  0045F0  6FAE               	movwf	_controlTransferState& (0+255),b
 17888                           
 17889                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 17890  0045F2  51A5               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 17891  0045F4  B4D8               	btfsc	status,2,c
 17892                           
 17893                           ; BSR set to: 0
 17894                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 17895  0045F6  EC73  F02D         	call	_USBCtrlEPAllowDataStage	;wreg free
 17896                           
 17897                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 17898  0045FA  0E00               	movlw	0
 17899  0045FC  0100               	movlb	0	; () banked
 17900  0045FE  6FA6               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17901                           
 17902                           ; BSR set to: 0
 17903                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 17904  004600  0E00               	movlw	0
 17905  004602  6FA7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17906                           
 17907                           ; BSR set to: 0
 17908                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 17909  004604  51A8               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 17910  004606  A4D8               	btfss	status,2,c
 17911  004608  0012               	return	
 17912                           
 17913                           ; BSR set to: 0
 17914                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 17915  00460A  EC41  F028         	call	_USBCtrlEPAllowStatusStage	;wreg free
 17916                           
 17917                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 17918  00460E  0012               	return	
 17919  004610                     l224:
 17920                           
 17921                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 17922  004610  0E02               	movlw	2
 17923  004612  0100               	movlb	0	; () banked
 17924  004614  6FAE               	movwf	_controlTransferState& (0+255),b
 17925                           
 17926                           ; BSR set to: 0
 17927                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 17928  004616  EE20 F001          	lfsr	2,1
 17929  00461A  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17930  00461C  26D9               	addwf	fsr2l,f,c
 17931  00461E  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17932  004620  22DA               	addwfc	fsr2h,f,c
 17933  004622  0E08               	movlw	8
 17934  004624  6EDF               	movwf	indf2,c
 17935                           
 17936                           ; BSR set to: 0
 17937                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 17938  004626  EE20 F002          	lfsr	2,2
 17939  00462A  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 17940  00462C  26D9               	addwf	fsr2l,f,c
 17941  00462E  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17942  004630  22DA               	addwfc	fsr2h,f,c
 17943  004632  0E30               	movlw	48
 17944  004634  6EDE               	movwf	postinc2,c
 17945  004636  0E0D               	movlw	13
 17946  004638  6EDD               	movwf	postdec2,c
 17947                           
 17948                           ; BSR set to: 0
 17949                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 17950  00463A  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17951  00463E  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17952  004642  0E04               	movlw	4
 17953  004644  6EDF               	movwf	indf2,c
 17954                           
 17955                           ; BSR set to: 0
 17956                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 17957  004646  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 17958  00464A  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 17959  00464E  0E00               	movlw	0
 17960  004650  8EDB               	bsf	plusw2,7,c
 17961                           
 17962                           ; BSR set to: 0
 17963                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 17964  004652  0E00               	movlw	0
 17965  004654  6FA6               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17966                           
 17967                           ; BSR set to: 0
 17968                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 17969  004656  0E00               	movlw	0
 17970  004658  6FA7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17971                           
 17972                           ; BSR set to: 0
 17973                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 17974  00465A  51A8               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 17975  00465C  A4D8               	btfss	status,2,c
 17976  00465E  0012               	return	
 17977                           
 17978                           ; BSR set to: 0
 17979                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 17980  004660  EC41  F028         	call	_USBCtrlEPAllowStatusStage	;wreg free
 17981  004664  0012               	return	
 17982  004666                     __end_of_USBCtrlEPServiceComplete:
 17983                           	opt stack 0
 17984                           tblptru	equ	0xFF8
 17985                           tblptrh	equ	0xFF7
 17986                           tblptrl	equ	0xFF6
 17987                           tablat	equ	0xFF5
 17988                           prodh	equ	0xFF4
 17989                           prodl	equ	0xFF3
 17990                           intcon	equ	0xFF2
 17991                           intcon2	equ	0xFF1
 17992                           intcon3	equ	0xFF0
 17993                           postinc0	equ	0xFEE
 17994                           wreg	equ	0xFE8
 17995                           indf1	equ	0xFE7
 17996                           postdec1	equ	0xFE5
 17997                           plusw1	equ	0xFE3
 17998                           fsr1h	equ	0xFE2
 17999                           fsr1l	equ	0xFE1
 18000                           indf2	equ	0xFDF
 18001                           postinc2	equ	0xFDE
 18002                           postdec2	equ	0xFDD
 18003                           plusw2	equ	0xFDB
 18004                           fsr2h	equ	0xFDA
 18005                           fsr2l	equ	0xFD9
 18006                           status	equ	0xFD8
 18007                           
 18008 ;; *************** function _USBCtrlEPAllowDataStage *****************
 18009 ;; Defined at:
 18010 ;;		line 1490 in file "usb_device.c"
 18011 ;; Parameters:    Size  Location     Type
 18012 ;;		None
 18013 ;; Auto vars:     Size  Location     Type
 18014 ;;		None
 18015 ;; Return value:  Size  Location     Type
 18016 ;;                  1    wreg      void 
 18017 ;; Registers used:
 18018 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18019 ;; Tracked objects:
 18020 ;;		On entry : 0/0
 18021 ;;		On exit  : 0/0
 18022 ;;		Unchanged: 0/0
 18023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18027 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18028 ;;Total ram usage:        0 bytes
 18029 ;; Hardware stack levels used:    1
 18030 ;; Hardware stack levels required when called:    1
 18031 ;; This function calls:
 18032 ;;		_USBCtrlTrfTxService
 18033 ;; This function is called by:
 18034 ;;		_USBCtrlEPServiceComplete
 18035 ;; This function uses a non-reentrant model
 18036 ;;
 18037                           
 18038                           	psect	text83
 18039  005AE6                     __ptext83:
 18040                           	opt stack 0
 18041  005AE6                     _USBCtrlEPAllowDataStage:
 18042                           	opt stack 25
 18043                           
 18044                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 18045                           
 18046                           ;incstack = 0
 18047  005AE6  0E00               	movlw	0
 18048  005AE8  0100               	movlb	0	; () banked
 18049  005AEA  6FA5               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 18050                           
 18051                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 18052  005AEC  0E00               	movlw	0
 18053  005AEE  6FA4               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 18054                           
 18055                           ; BSR set to: 0
 18056                           ;usb_device.c: 1495: if(controlTransferState == 2)
 18057  005AF0  0E02               	movlw	2
 18058  005AF2  19AE               	xorwf	_controlTransferState& (0+255),w,b
 18059  005AF4  A4D8               	btfss	status,2,c
 18060  005AF6  D01F               	goto	l208
 18061                           
 18062                           ; BSR set to: 0
 18063                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 18064  005AF8  EE20 F001          	lfsr	2,1
 18065  005AFC  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18066  005AFE  26D9               	addwf	fsr2l,f,c
 18067  005B00  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18068  005B02  22DA               	addwfc	fsr2h,f,c
 18069  005B04  0E08               	movlw	8
 18070  005B06  6EDF               	movwf	indf2,c
 18071                           
 18072                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 18073  005B08  EE20 F002          	lfsr	2,2
 18074  005B0C  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18075  005B0E  26D9               	addwf	fsr2l,f,c
 18076  005B10  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18077  005B12  22DA               	addwfc	fsr2h,f,c
 18078  005B14  0E38               	movlw	56
 18079  005B16  6EDE               	movwf	postinc2,c
 18080  005B18  0E0D               	movlw	13
 18081  005B1A  6EDD               	movwf	postdec2,c
 18082                           
 18083                           ; BSR set to: 0
 18084                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 18085  005B1C  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18086  005B20  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18087  005B24  0E48               	movlw	72
 18088  005B26  6EDF               	movwf	indf2,c
 18089                           
 18090                           ; BSR set to: 0
 18091                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18092  005B28  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18093  005B2C  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18094  005B30  0E00               	movlw	0
 18095  005B32  8EDB               	bsf	plusw2,7,c
 18096                           
 18097                           ;usb_device.c: 1502: }
 18098  005B34  0012               	return	
 18099  005B36                     l208:
 18100                           
 18101                           ; BSR set to: 0
 18102                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 18103                           
 18104                           ; BSR set to: 0
 18105  005B36  516A               	movf	(_inPipes+4)& (0+255),w,b
 18106  005B38  010D               	movlb	13	; () banked
 18107  005B3A  5D36               	subwf	54,w,b	;volatile
 18108  005B3C  0100               	movlb	0	; () banked
 18109  005B3E  516B               	movf	(_inPipes+5)& (0+255),w,b
 18110  005B40  010D               	movlb	13	; () banked
 18111  005B42  5937               	subwfb	55,w,b	;volatile
 18112  005B44  B0D8               	btfsc	status,0,c
 18113  005B46  D004               	goto	l210
 18114                           
 18115                           ; BSR set to: 13
 18116                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 18117  005B48  CD36 F06A          	movff	3382,_inPipes+4	;volatile
 18118  005B4C  CD37 F06B          	movff	3383,_inPipes+5	;volatile
 18119  005B50                     l210:
 18120                           
 18121                           ; BSR set to: 13
 18122                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 18123                           
 18124                           ; BSR set to: 13
 18125  005B50  EC15  F027         	call	_USBCtrlTrfTxService	;wreg free
 18126                           
 18127                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 18128  005B54  0100               	movlb	0	; () banked
 18129  005B56  EE20 F002          	lfsr	2,2
 18130  005B5A  516C               	movf	_pBDTEntryIn& (0+255),w,b
 18131  005B5C  26D9               	addwf	fsr2l,f,c
 18132  005B5E  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18133  005B60  22DA               	addwfc	fsr2h,f,c
 18134  005B62  0E38               	movlw	56
 18135  005B64  6EDE               	movwf	postinc2,c
 18136  005B66  0E0D               	movlw	13
 18137  005B68  6EDD               	movwf	postdec2,c
 18138                           
 18139                           ; BSR set to: 0
 18140                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 18141  005B6A  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 18142  005B6E  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18143  005B72  0E48               	movlw	72
 18144  005B74  6EDF               	movwf	indf2,c
 18145                           
 18146                           ; BSR set to: 0
 18147                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18148  005B76  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 18149  005B7A  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18150  005B7E  0E00               	movlw	0
 18151  005B80  8EDB               	bsf	plusw2,7,c
 18152  005B82  0012               	return	
 18153  005B84                     __end_of_USBCtrlEPAllowDataStage:
 18154                           	opt stack 0
 18155                           tblptru	equ	0xFF8
 18156                           tblptrh	equ	0xFF7
 18157                           tblptrl	equ	0xFF6
 18158                           tablat	equ	0xFF5
 18159                           prodh	equ	0xFF4
 18160                           prodl	equ	0xFF3
 18161                           intcon	equ	0xFF2
 18162                           intcon2	equ	0xFF1
 18163                           intcon3	equ	0xFF0
 18164                           postinc0	equ	0xFEE
 18165                           wreg	equ	0xFE8
 18166                           indf1	equ	0xFE7
 18167                           postdec1	equ	0xFE5
 18168                           plusw1	equ	0xFE3
 18169                           fsr1h	equ	0xFE2
 18170                           fsr1l	equ	0xFE1
 18171                           indf2	equ	0xFDF
 18172                           postinc2	equ	0xFDE
 18173                           postdec2	equ	0xFDD
 18174                           plusw2	equ	0xFDB
 18175                           fsr2h	equ	0xFDA
 18176                           fsr2l	equ	0xFD9
 18177                           status	equ	0xFD8
 18178                           
 18179 ;; *************** function _USBCheckStdRequest *****************
 18180 ;; Defined at:
 18181 ;;		line 2688 in file "usb_device.c"
 18182 ;; Parameters:    Size  Location     Type
 18183 ;;		None
 18184 ;; Auto vars:     Size  Location     Type
 18185 ;;		None
 18186 ;; Return value:  Size  Location     Type
 18187 ;;                  1    wreg      void 
 18188 ;; Registers used:
 18189 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18190 ;; Tracked objects:
 18191 ;;		On entry : 0/0
 18192 ;;		On exit  : 0/0
 18193 ;;		Unchanged: 0/0
 18194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18199 ;;Total ram usage:        0 bytes
 18200 ;; Hardware stack levels used:    1
 18201 ;; Hardware stack levels required when called:    5
 18202 ;; This function calls:
 18203 ;;		_USBStdFeatureReqHandler
 18204 ;;		_USBStdGetDscHandler
 18205 ;;		_USBStdGetStatusHandler
 18206 ;;		_USBStdSetCfgHandler
 18207 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18208 ;; This function is called by:
 18209 ;;		_USBCtrlTrfSetupHandler
 18210 ;; This function uses a non-reentrant model
 18211 ;;
 18212                           
 18213                           	psect	text84
 18214  004666                     __ptext84:
 18215                           	opt stack 0
 18216  004666                     _USBCheckStdRequest:
 18217                           	opt stack 22
 18218                           
 18219                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 18220                           
 18221                           ; BSR set to: 0
 18222                           ;incstack = 0
 18223  004666  010D               	movlb	13	; () banked
 18224  004668  3930               	swapf	48,w,b	;volatile
 18225  00466A  32E8               	rrcf	wreg,f,c
 18226  00466C  0B03               	andlw	3
 18227  00466E  0900               	iorlw	0
 18228  004670  A4D8               	btfss	status,2,c
 18229  004672  0012               	return	
 18230  004674  D047               	goto	l343
 18231  004676                     l344:
 18232                           
 18233                           ; BSR set to: 13
 18234                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 18235  004676  0100               	movlb	0	; () banked
 18236  004678  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18237                           
 18238                           ; BSR set to: 0
 18239                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 18240  00467A  0E08               	movlw	8
 18241  00467C  6FB0               	movwf	_USBDeviceState& (0+255),b
 18242                           
 18243                           ;usb_device.c: 2698: break;
 18244  00467E  0012               	return	
 18245  004680                     
 18246                           ;usb_device.c: 2700: USBStdGetDscHandler();
 18247                           
 18248                           ; BSR set to: 0
 18249  004680  EC4E  F01D         	call	_USBStdGetDscHandler	;wreg free
 18250                           
 18251                           ;usb_device.c: 2701: break;
 18252  004684  0012               	return	
 18253  004686                     
 18254                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 18255  004686  ECA4  F023         	call	_USBStdSetCfgHandler	;wreg free
 18256                           
 18257                           ;usb_device.c: 2704: break;
 18258  00468A  0012               	return	
 18259  00468C                     
 18260                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 18261  00468C  0EB4               	movlw	low _USBActiveConfiguration
 18262  00468E  0100               	movlb	0	; () banked
 18263  004690  6F66               	movwf	_inPipes& (0+255),b
 18264  004692  0E00               	movlw	high _USBActiveConfiguration
 18265  004694  6F67               	movwf	(_inPipes+1)& (0+255),b
 18266                           
 18267                           ; BSR set to: 0
 18268                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 18269  004696  8169               	bsf	(_inPipes+3)& (0+255),0,b
 18270                           
 18271                           ; BSR set to: 0
 18272                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 18273  004698  0E01               	movlw	1
 18274  00469A  6F6A               	movwf	(_inPipes+4)& (0+255),b
 18275                           
 18276                           ; BSR set to: 0
 18277                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 18278  00469C  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18279                           
 18280                           ;usb_device.c: 2710: break;
 18281  00469E  0012               	return	
 18282  0046A0                     
 18283                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 18284                           
 18285                           ; BSR set to: 0
 18286  0046A0  EC84  F02B         	call	_USBStdGetStatusHandler	;wreg free
 18287                           
 18288                           ;usb_device.c: 2713: break;
 18289  0046A4  0012               	return	
 18290  0046A6                     
 18291                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 18292  0046A6  ECD9  F00B         	call	_USBStdFeatureReqHandler	;wreg free
 18293                           
 18294                           ;usb_device.c: 2717: break;
 18295  0046AA  0012               	return	
 18296  0046AC                     
 18297                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 18298  0046AC  010D               	movlb	13	; () banked
 18299  0046AE  5134               	movf	52,w,b	;volatile
 18300  0046B0  0D01               	mullw	1
 18301  0046B2  0EE0               	movlw	low _USBAlternateInterface
 18302  0046B4  24F3               	addwf	prodl,w,c
 18303  0046B6  0100               	movlb	0	; () banked
 18304  0046B8  6F66               	movwf	_inPipes& (0+255),b
 18305  0046BA  0E01               	movlw	high _USBAlternateInterface
 18306  0046BC  20F4               	addwfc	prodh,w,c
 18307  0046BE  6F67               	movwf	(_inPipes+1)& (0+255),b
 18308                           
 18309                           ; BSR set to: 0
 18310                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 18311  0046C0  8169               	bsf	(_inPipes+3)& (0+255),0,b
 18312                           
 18313                           ; BSR set to: 0
 18314                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 18315  0046C2  0E01               	movlw	1
 18316  0046C4  6F6A               	movwf	(_inPipes+4)& (0+255),b
 18317                           
 18318                           ; BSR set to: 0
 18319                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 18320  0046C6  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18321                           
 18322                           ;usb_device.c: 2723: break;
 18323  0046C8  0012               	return	
 18324  0046CA                     l353:
 18325                           
 18326                           ; BSR set to: 13
 18327                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 18328  0046CA  0100               	movlb	0	; () banked
 18329  0046CC  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18330                           
 18331                           ; BSR set to: 0
 18332                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 18333  0046CE  010D               	movlb	13	; () banked
 18334  0046D0  5134               	movf	52,w,b	;volatile
 18335  0046D2  0D01               	mullw	1
 18336  0046D4  0EE0               	movlw	low _USBAlternateInterface
 18337  0046D6  24F3               	addwf	prodl,w,c
 18338  0046D8  6ED9               	movwf	fsr2l,c
 18339  0046DA  0E01               	movlw	high _USBAlternateInterface
 18340  0046DC  20F4               	addwfc	prodh,w,c
 18341  0046DE  6EDA               	movwf	fsr2h,c
 18342  0046E0  CD32 FFDF          	movff	3378,indf2	;volatile
 18343                           
 18344                           ;usb_device.c: 2727: break;
 18345  0046E4  0012               	return	
 18346  0046E6                     
 18347                           ; BSR set to: 13
 18348                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 18349                           
 18350                           ; BSR set to: 13
 18351  0046E6  0E00               	movlw	0
 18352  0046E8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18353  0046EA  0E02               	movlw	2
 18354  0046EC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18355  0046EE  0E00               	movlw	0
 18356  0046F0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18357  0046F2  0E00               	movlw	0
 18358  0046F4  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18359  0046F6  0E00               	movlw	0
 18360  0046F8  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18361  0046FA  0E00               	movlw	0
 18362  0046FC  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18363  0046FE  ECE5  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18364                           
 18365                           ;usb_device.c: 2734: }
 18366                           
 18367                           ;usb_device.c: 2733: break;
 18368                           
 18369                           ;usb_device.c: 2732: default:
 18370                           
 18371                           ;usb_device.c: 2731: case 12:
 18372                           
 18373                           ;usb_device.c: 2730: break;
 18374  004702  0012               	return	
 18375  004704                     l343:
 18376  004704  010D               	movlb	13	; () banked
 18377  004706  5131               	movf	49,w,b	;volatile
 18378                           
 18379                           ; Switch size 1, requested type "space"
 18380                           ; Number of cases is 11, Range of values is 0 to 12
 18381                           ; switch strategies available:
 18382                           ; Name         Instructions Cycles
 18383                           ; simple_byte           34    18 (average)
 18384                           ;	Chosen strategy is simple_byte
 18385  004708  0A00               	xorlw	0	; case 0
 18386  00470A  B4D8               	btfsc	status,2,c
 18387  00470C  D7C9               	goto	l349
 18388  00470E  0A01               	xorlw	1	; case 1
 18389  004710  B4D8               	btfsc	status,2,c
 18390  004712  D7C9               	goto	l350
 18391  004714  0A02               	xorlw	2	; case 3
 18392  004716  B4D8               	btfsc	status,2,c
 18393  004718  D7C6               	goto	l350
 18394  00471A  0A06               	xorlw	6	; case 5
 18395  00471C  B4D8               	btfsc	status,2,c
 18396  00471E  D7AB               	goto	l344
 18397  004720  0A03               	xorlw	3	; case 6
 18398  004722  B4D8               	btfsc	status,2,c
 18399  004724  D7AD               	goto	l346
 18400  004726  0A01               	xorlw	1	; case 7
 18401  004728  B4D8               	btfsc	status,2,c
 18402  00472A  D7DD               	goto	l354
 18403  00472C  0A0F               	xorlw	15	; case 8
 18404  00472E  B4D8               	btfsc	status,2,c
 18405  004730  D7AD               	goto	l348
 18406  004732  0A01               	xorlw	1	; case 9
 18407  004734  B4D8               	btfsc	status,2,c
 18408  004736  D7A7               	goto	l347
 18409  004738  0A03               	xorlw	3	; case 10
 18410  00473A  B4D8               	btfsc	status,2,c
 18411  00473C  D7B7               	goto	l352
 18412  00473E  0A01               	xorlw	1	; case 11
 18413  004740  B4D8               	btfsc	status,2,c
 18414  004742  D7C3               	goto	l353
 18415  004744  0A07               	xorlw	7	; case 12
 18416  004746  0012               	return	
 18417  004748                     __end_of_USBCheckStdRequest:
 18418                           	opt stack 0
 18419                           tblptru	equ	0xFF8
 18420                           tblptrh	equ	0xFF7
 18421                           tblptrl	equ	0xFF6
 18422                           tablat	equ	0xFF5
 18423                           prodh	equ	0xFF4
 18424                           prodl	equ	0xFF3
 18425                           intcon	equ	0xFF2
 18426                           intcon2	equ	0xFF1
 18427                           intcon3	equ	0xFF0
 18428                           postinc0	equ	0xFEE
 18429                           wreg	equ	0xFE8
 18430                           indf1	equ	0xFE7
 18431                           postdec1	equ	0xFE5
 18432                           plusw1	equ	0xFE3
 18433                           fsr1h	equ	0xFE2
 18434                           fsr1l	equ	0xFE1
 18435                           indf2	equ	0xFDF
 18436                           postinc2	equ	0xFDE
 18437                           postdec2	equ	0xFDD
 18438                           plusw2	equ	0xFDB
 18439                           fsr2h	equ	0xFDA
 18440                           fsr2l	equ	0xFD9
 18441                           status	equ	0xFD8
 18442                           
 18443 ;; *************** function _USBStdSetCfgHandler *****************
 18444 ;; Defined at:
 18445 ;;		line 1970 in file "usb_device.c"
 18446 ;; Parameters:    Size  Location     Type
 18447 ;;		None
 18448 ;; Auto vars:     Size  Location     Type
 18449 ;;  i               1   23[COMRAM] unsigned char 
 18450 ;; Return value:  Size  Location     Type
 18451 ;;                  1    wreg      void 
 18452 ;; Registers used:
 18453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 18454 ;; Tracked objects:
 18455 ;;		On entry : 0/0
 18456 ;;		On exit  : 0/0
 18457 ;;		Unchanged: 0/0
 18458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18460 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18462 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18463 ;;Total ram usage:        1 bytes
 18464 ;; Hardware stack levels used:    1
 18465 ;; Hardware stack levels required when called:    4
 18466 ;; This function calls:
 18467 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18468 ;;		_memset
 18469 ;; This function is called by:
 18470 ;;		_USBCheckStdRequest
 18471 ;; This function uses a non-reentrant model
 18472 ;;
 18473                           
 18474                           	psect	text85
 18475  004748                     __ptext85:
 18476                           	opt stack 0
 18477  004748                     _USBStdSetCfgHandler:
 18478                           	opt stack 22
 18479                           
 18480                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 18481                           
 18482                           ;incstack = 0
 18483  004748  0100               	movlb	0	; () banked
 18484  00474A  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18485                           
 18486                           ; BSR set to: 0
 18487                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 18488  00474C  0E27               	movlw	39
 18489  00474E  6E01               	movwf	memset@p1,c
 18490  004750  0E0F               	movlw	15
 18491  004752  6E02               	movwf	memset@p1+1,c
 18492  004754  0E00               	movlw	0
 18493  004756  6E04               	movwf	memset@c+1,c
 18494  004758  0E00               	movlw	0
 18495  00475A  6E03               	movwf	memset@c,c
 18496  00475C  0E00               	movlw	0
 18497  00475E  6E06               	movwf	memset@n+1,c
 18498  004760  0E02               	movlw	2
 18499  004762  6E05               	movwf	memset@n,c
 18500  004764  ECF6  F03C         	call	_memset	;wreg free
 18501                           
 18502                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 18503  004768  0E00               	movlw	0
 18504  00476A  6E01               	movwf	memset@p1,c
 18505  00476C  0E0D               	movlw	13
 18506  00476E  6E02               	movwf	memset@p1+1,c
 18507  004770  0E00               	movlw	0
 18508  004772  6E04               	movwf	memset@c+1,c
 18509  004774  0E00               	movlw	0
 18510  004776  6E03               	movwf	memset@c,c
 18511  004778  0E00               	movlw	0
 18512  00477A  6E06               	movwf	memset@n+1,c
 18513  00477C  0E30               	movlw	48
 18514  00477E  6E05               	movwf	memset@n,c
 18515  004780  ECF6  F03C         	call	_memset	;wreg free
 18516                           
 18517                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 18518  004784  8C65               	bsf	3941,6,c	;volatile
 18519                           
 18520                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 18521  004786  0E00               	movlw	0
 18522  004788  6E18               	movwf	USBStdSetCfgHandler@i,c
 18523  00478A                     l10754:
 18524  00478A  0E02               	movlw	2
 18525  00478C  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 18526  00478E  D001               	goto	l260
 18527  004790  D016               	goto	u7830
 18528  004792                     l260:
 18529                           
 18530                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 18531  004792  5018               	movf	USBStdSetCfgHandler@i,w,c
 18532  004794  0D01               	mullw	1
 18533  004796  0E61               	movlw	low _ep_data_in
 18534  004798  24F3               	addwf	prodl,w,c
 18535  00479A  6ED9               	movwf	fsr2l,c
 18536  00479C  0E01               	movlw	high _ep_data_in
 18537  00479E  20F4               	addwfc	prodh,w,c
 18538  0047A0  6EDA               	movwf	fsr2h,c
 18539  0047A2  0E00               	movlw	0
 18540  0047A4  6EDF               	movwf	indf2,c
 18541                           
 18542                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 18543  0047A6  5018               	movf	USBStdSetCfgHandler@i,w,c
 18544  0047A8  0D01               	mullw	1
 18545  0047AA  0E5E               	movlw	low _ep_data_out
 18546  0047AC  24F3               	addwf	prodl,w,c
 18547  0047AE  6ED9               	movwf	fsr2l,c
 18548  0047B0  0E01               	movlw	high _ep_data_out
 18549  0047B2  20F4               	addwfc	prodh,w,c
 18550  0047B4  6EDA               	movwf	fsr2h,c
 18551  0047B6  0E00               	movlw	0
 18552  0047B8  6EDF               	movwf	indf2,c
 18553  0047BA  2A18               	incf	USBStdSetCfgHandler@i,f,c
 18554  0047BC  D7E6               	goto	l10754
 18555  0047BE                     u7830:
 18556                           
 18557                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 18558  0047BE  0EE0               	movlw	low _USBAlternateInterface
 18559  0047C0  6E01               	movwf	memset@p1,c
 18560  0047C2  0E01               	movlw	high _USBAlternateInterface
 18561  0047C4  6E02               	movwf	memset@p1+1,c
 18562  0047C6  0E00               	movlw	0
 18563  0047C8  6E04               	movwf	memset@c+1,c
 18564  0047CA  0E00               	movlw	0
 18565  0047CC  6E03               	movwf	memset@c,c
 18566  0047CE  0E00               	movlw	0
 18567  0047D0  6E06               	movwf	memset@n+1,c
 18568  0047D2  0E02               	movlw	2
 18569  0047D4  6E05               	movwf	memset@n,c
 18570  0047D6  ECF6  F03C         	call	_memset	;wreg free
 18571                           
 18572                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 18573  0047DA  9C65               	bcf	3941,6,c	;volatile
 18574                           
 18575                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 18576  0047DC  0E08               	movlw	8
 18577  0047DE  0100               	movlb	0	; () banked
 18578  0047E0  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 18579  0047E2  0E0D               	movlw	13
 18580  0047E4  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 18581                           
 18582                           ; BSR set to: 0
 18583                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 18584  0047E6  0E00               	movlw	0
 18585  0047E8  6F92               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 18586  0047EA  0E0D               	movlw	13
 18587  0047EC  6F93               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 18588                           
 18589                           ; BSR set to: 0
 18590                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 18591  0047EE  C092  F090         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 18592  0047F2  C093  F091         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 18593                           
 18594                           ; BSR set to: 0
 18595                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 18596  0047F6  CD32 F0B4          	movff	3378,_USBActiveConfiguration	;volatile
 18597                           
 18598                           ; BSR set to: 0
 18599                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 18600  0047FA  51B4               	movf	_USBActiveConfiguration& (0+255),w,b
 18601  0047FC  A4D8               	btfss	status,2,c
 18602  0047FE  D003               	goto	l262
 18603                           
 18604                           ; BSR set to: 0
 18605                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 18606  004800  0E10               	movlw	16
 18607  004802  6FB0               	movwf	_USBDeviceState& (0+255),b
 18608                           
 18609                           ;usb_device.c: 2015: }
 18610  004804  0012               	return	
 18611  004806                     l262:
 18612                           
 18613                           ; BSR set to: 0
 18614                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 18615                           
 18616                           ; BSR set to: 0
 18617  004806  0E00               	movlw	0
 18618  004808  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18619  00480A  0E01               	movlw	1
 18620  00480C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18621  00480E  0EB4               	movlw	low _USBActiveConfiguration
 18622  004810  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18623  004812  0E00               	movlw	high _USBActiveConfiguration
 18624  004814  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18625  004816  0E00               	movlw	0
 18626  004818  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18627  00481A  0E01               	movlw	1
 18628  00481C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18629  00481E  ECE5  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18630                           
 18631                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 18632  004822  0E20               	movlw	32
 18633  004824  0100               	movlb	0	; () banked
 18634  004826  6FB0               	movwf	_USBDeviceState& (0+255),b
 18635  004828  0012               	return	
 18636  00482A                     __end_of_USBStdSetCfgHandler:
 18637                           	opt stack 0
 18638                           tblptru	equ	0xFF8
 18639                           tblptrh	equ	0xFF7
 18640                           tblptrl	equ	0xFF6
 18641                           tablat	equ	0xFF5
 18642                           prodh	equ	0xFF4
 18643                           prodl	equ	0xFF3
 18644                           intcon	equ	0xFF2
 18645                           intcon2	equ	0xFF1
 18646                           intcon3	equ	0xFF0
 18647                           postinc0	equ	0xFEE
 18648                           wreg	equ	0xFE8
 18649                           indf1	equ	0xFE7
 18650                           postdec1	equ	0xFE5
 18651                           plusw1	equ	0xFE3
 18652                           fsr1h	equ	0xFE2
 18653                           fsr1l	equ	0xFE1
 18654                           indf2	equ	0xFDF
 18655                           postinc2	equ	0xFDE
 18656                           postdec2	equ	0xFDD
 18657                           plusw2	equ	0xFDB
 18658                           fsr2h	equ	0xFDA
 18659                           fsr2l	equ	0xFD9
 18660                           status	equ	0xFD8
 18661                           
 18662 ;; *************** function _memset *****************
 18663 ;; Defined at:
 18664 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 18665 ;; Parameters:    Size  Location     Type
 18666 ;;  p1              2    0[COMRAM] PTR void 
 18667 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 18668 ;;  c               2    2[COMRAM] int 
 18669 ;;  n               2    4[COMRAM] unsigned int 
 18670 ;; Auto vars:     Size  Location     Type
 18671 ;;  p               2    6[COMRAM] PTR unsigned char 
 18672 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 18673 ;; Return value:  Size  Location     Type
 18674 ;;                  2    0[COMRAM] PTR void 
 18675 ;; Registers used:
 18676 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18677 ;; Tracked objects:
 18678 ;;		On entry : 0/0
 18679 ;;		On exit  : 0/0
 18680 ;;		Unchanged: 0/0
 18681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18682 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18683 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18685 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18686 ;;Total ram usage:        8 bytes
 18687 ;; Hardware stack levels used:    1
 18688 ;; This function calls:
 18689 ;;		Nothing
 18690 ;; This function is called by:
 18691 ;;		_USBDeviceInit
 18692 ;;		_USBStdSetCfgHandler
 18693 ;; This function uses a non-reentrant model
 18694 ;;
 18695                           
 18696                           	psect	text86
 18697  0079EC                     __ptext86:
 18698                           	opt stack 0
 18699  0079EC                     _memset:
 18700                           	opt stack 28
 18701                           
 18702                           ; BSR set to: 0
 18703                           ;incstack = 0
 18704  0079EC  C001  F007         	movff	memset@p1,memset@p
 18705  0079F0  C002  F008         	movff	memset@p1+1,memset@p+1
 18706  0079F4  D008               	goto	l3460
 18707  0079F6                     l10182:
 18708  0079F6  C007  FFD9         	movff	memset@p,fsr2l
 18709  0079FA  C008  FFDA         	movff	memset@p+1,fsr2h
 18710  0079FE  C003  FFDF         	movff	memset@c,indf2
 18711  007A02  4A07               	infsnz	memset@p,f,c
 18712  007A04  2A08               	incf	memset@p+1,f,c
 18713  007A06                     l3460:
 18714  007A06  0605               	decf	memset@n,f,c
 18715  007A08  A0D8               	btfss	status,0,c
 18716  007A0A  0606               	decf	memset@n+1,f,c
 18717  007A0C  2805               	incf	memset@n,w,c
 18718  007A0E  E1F3               	bnz	l10182
 18719  007A10  2806               	incf	memset@n+1,w,c
 18720  007A12  B4D8               	btfsc	status,2,c
 18721  007A14  0012               	return	
 18722  007A16  D7EF               	goto	l3461
 18723  007A18                     __end_of_memset:
 18724                           	opt stack 0
 18725                           tblptru	equ	0xFF8
 18726                           tblptrh	equ	0xFF7
 18727                           tblptrl	equ	0xFF6
 18728                           tablat	equ	0xFF5
 18729                           prodh	equ	0xFF4
 18730                           prodl	equ	0xFF3
 18731                           intcon	equ	0xFF2
 18732                           intcon2	equ	0xFF1
 18733                           intcon3	equ	0xFF0
 18734                           postinc0	equ	0xFEE
 18735                           wreg	equ	0xFE8
 18736                           indf1	equ	0xFE7
 18737                           postdec1	equ	0xFE5
 18738                           plusw1	equ	0xFE3
 18739                           fsr1h	equ	0xFE2
 18740                           fsr1l	equ	0xFE1
 18741                           indf2	equ	0xFDF
 18742                           postinc2	equ	0xFDE
 18743                           postdec2	equ	0xFDD
 18744                           plusw2	equ	0xFDB
 18745                           fsr2h	equ	0xFDA
 18746                           fsr2l	equ	0xFD9
 18747                           status	equ	0xFD8
 18748                           
 18749 ;; *************** function _USBStdGetStatusHandler *****************
 18750 ;; Defined at:
 18751 ;;		line 2131 in file "usb_device.c"
 18752 ;; Parameters:    Size  Location     Type
 18753 ;;		None
 18754 ;; Auto vars:     Size  Location     Type
 18755 ;;  p               2    1[COMRAM] PTR struct __BDT
 18756 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 18757 ;; Return value:  Size  Location     Type
 18758 ;;                  1    wreg      void 
 18759 ;; Registers used:
 18760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18761 ;; Tracked objects:
 18762 ;;		On entry : 0/0
 18763 ;;		On exit  : 0/0
 18764 ;;		Unchanged: 0/0
 18765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18767 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18768 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18769 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18770 ;;Total ram usage:        3 bytes
 18771 ;; Hardware stack levels used:    1
 18772 ;; This function calls:
 18773 ;;		Nothing
 18774 ;; This function is called by:
 18775 ;;		_USBCheckStdRequest
 18776 ;; This function uses a non-reentrant model
 18777 ;;
 18778                           
 18779                           	psect	text87
 18780  005708                     __ptext87:
 18781                           	opt stack 0
 18782  005708                     _USBStdGetStatusHandler:
 18783                           	opt stack 26
 18784                           
 18785                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 18786                           
 18787                           ;incstack = 0
 18788  005708  0E00               	movlw	0
 18789  00570A  010D               	movlb	13	; () banked
 18790  00570C  6F38               	movwf	56,b	;volatile
 18791                           
 18792                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 18793  00570E  0E00               	movlw	0
 18794  005710  6F39               	movwf	57,b	;volatile
 18795                           
 18796                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 18797  005712  D039               	goto	l281
 18798  005714                     l282:
 18799                           
 18800                           ; BSR set to: 13
 18801                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 18802  005714  0100               	movlb	0	; () banked
 18803  005716  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18804                           
 18805                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 18806                           
 18807                           ; BSR set to: 13
 18808                           
 18809                           ; BSR set to: 0
 18810                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 18811                           
 18812                           ;usb_device.c: 2144: if(0 == 1)
 18813  005718  0100               	movlb	0	; () banked
 18814  00571A  05AD               	decf	_RemoteWakeup& (0+255),w,b
 18815  00571C  A4D8               	btfss	status,2,c
 18816  00571E  D03E               	goto	l285
 18817                           
 18818                           ; BSR set to: 0
 18819                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 18820  005720  010D               	movlb	13	; () banked
 18821  005722  8338               	bsf	56,1,b	;volatile
 18822                           
 18823                           ; BSR set to: 13
 18824                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 18825  005724  D03B               	goto	l285
 18826  005726                     l286:
 18827                           
 18828                           ; BSR set to: 13
 18829                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 18830  005726  0100               	movlb	0	; () banked
 18831  005728  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18832                           
 18833                           ;usb_device.c: 2156: break;
 18834  00572A  D038               	goto	l285
 18835  00572C                     l287:
 18836                           
 18837                           ; BSR set to: 13
 18838                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 18839  00572C  0100               	movlb	0	; () banked
 18840  00572E  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18841                           
 18842                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 18843  005730  010D               	movlb	13	; () banked
 18844  005732  BF34               	btfsc	52,7,b	;volatile
 18845  005734  D00A               	goto	l288
 18846                           
 18847                           ; BSR set to: 13
 18848                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 18849  005736  5134               	movf	52,w,b	;volatile
 18850  005738  0B0F               	andlw	15
 18851  00573A  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 18852  00573C  5001               	movf	??_USBStdGetStatusHandler,w,c
 18853  00573E  0D02               	mullw	2
 18854  005740  0E72               	movlw	low _pBDTEntryOut
 18855  005742  24F3               	addwf	prodl,w,c
 18856  005744  6ED9               	movwf	fsr2l,c
 18857  005746  0E00               	movlw	high _pBDTEntryOut
 18858  005748  D009               	goto	L6
 18859  00574A                     l288:
 18860                           
 18861                           ; BSR set to: 13
 18862                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 18863                           
 18864                           ; BSR set to: 13
 18865  00574A  5134               	movf	52,w,b	;volatile
 18866  00574C  0B0F               	andlw	15
 18867  00574E  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 18868  005750  5001               	movf	??_USBStdGetStatusHandler,w,c
 18869  005752  0D02               	mullw	2
 18870  005754  0E6C               	movlw	low _pBDTEntryIn
 18871  005756  24F3               	addwf	prodl,w,c
 18872  005758  6ED9               	movwf	fsr2l,c
 18873  00575A  0E00               	movlw	high _pBDTEntryIn
 18874  00575C                     L6:
 18875  00575C  20F4               	addwfc	prodh,w,c
 18876  00575E  6EDA               	movwf	fsr2h,c
 18877  005760  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 18878  005764  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 18879                           
 18880                           ; BSR set to: 13
 18881                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 18882                           
 18883                           ; BSR set to: 13
 18884  005768  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 18885  00576C  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 18886  005770  AEDF               	btfss	indf2,7,c
 18887  005772  D014               	goto	l285
 18888                           
 18889                           ; BSR set to: 13
 18890  005774  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 18891  005778  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 18892  00577C  A4DF               	btfss	indf2,2,c
 18893  00577E  D00E               	goto	l285
 18894                           
 18895                           ; BSR set to: 13
 18896                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 18897  005780  0E01               	movlw	1
 18898  005782  6F38               	movwf	56,b	;volatile
 18899                           
 18900                           ; BSR set to: 13
 18901                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 18902                           
 18903                           ; BSR set to: 13
 18904                           ;usb_device.c: 2176: break;
 18905  005784  D00B               	goto	l285
 18906  005786                     l281:
 18907                           
 18908                           ; BSR set to: 13
 18909                           
 18910                           ; BSR set to: 13
 18911  005786  5130               	movf	48,w,b	;volatile
 18912  005788  0B1F               	andlw	31
 18913                           
 18914                           ; Switch size 1, requested type "space"
 18915                           ; Number of cases is 3, Range of values is 0 to 2
 18916                           ; switch strategies available:
 18917                           ; Name         Instructions Cycles
 18918                           ; simple_byte           10     6 (average)
 18919                           ;	Chosen strategy is simple_byte
 18920  00578A  0A00               	xorlw	0	; case 0
 18921  00578C  B4D8               	btfsc	status,2,c
 18922  00578E  D7C2               	goto	l282
 18923  005790  0A01               	xorlw	1	; case 1
 18924  005792  B4D8               	btfsc	status,2,c
 18925  005794  D7C8               	goto	l286
 18926  005796  0A03               	xorlw	3	; case 2
 18927  005798  B4D8               	btfsc	status,2,c
 18928  00579A  D7C8               	goto	l287
 18929  00579C                     l285:
 18930                           
 18931                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 18932  00579C  0100               	movlb	0	; () banked
 18933  00579E  AF69               	btfss	(_inPipes+3)& (0+255),7,b
 18934  0057A0  0012               	return	
 18935                           
 18936                           ; BSR set to: 0
 18937                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 18938  0057A2  0E38               	movlw	56
 18939  0057A4  6F66               	movwf	_inPipes& (0+255),b
 18940  0057A6  0E0D               	movlw	13
 18941  0057A8  6F67               	movwf	(_inPipes+1)& (0+255),b
 18942                           
 18943                           ; BSR set to: 0
 18944                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 18945  0057AA  8169               	bsf	(_inPipes+3)& (0+255),0,b
 18946                           
 18947                           ; BSR set to: 0
 18948                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 18949  0057AC  0E02               	movlw	2
 18950  0057AE  6F6A               	movwf	(_inPipes+4)& (0+255),b
 18951  0057B0  0012               	return	
 18952  0057B2                     __end_of_USBStdGetStatusHandler:
 18953                           	opt stack 0
 18954                           tblptru	equ	0xFF8
 18955                           tblptrh	equ	0xFF7
 18956                           tblptrl	equ	0xFF6
 18957                           tablat	equ	0xFF5
 18958                           prodh	equ	0xFF4
 18959                           prodl	equ	0xFF3
 18960                           intcon	equ	0xFF2
 18961                           intcon2	equ	0xFF1
 18962                           intcon3	equ	0xFF0
 18963                           postinc0	equ	0xFEE
 18964                           wreg	equ	0xFE8
 18965                           indf1	equ	0xFE7
 18966                           postdec1	equ	0xFE5
 18967                           plusw1	equ	0xFE3
 18968                           fsr1h	equ	0xFE2
 18969                           fsr1l	equ	0xFE1
 18970                           indf2	equ	0xFDF
 18971                           postinc2	equ	0xFDE
 18972                           postdec2	equ	0xFDD
 18973                           plusw2	equ	0xFDB
 18974                           fsr2h	equ	0xFDA
 18975                           fsr2l	equ	0xFD9
 18976                           status	equ	0xFD8
 18977                           
 18978 ;; *************** function _USBStdGetDscHandler *****************
 18979 ;; Defined at:
 18980 ;;		line 2045 in file "usb_device.c"
 18981 ;; Parameters:    Size  Location     Type
 18982 ;;		None
 18983 ;; Auto vars:     Size  Location     Type
 18984 ;;		None
 18985 ;; Return value:  Size  Location     Type
 18986 ;;                  1    wreg      void 
 18987 ;; Registers used:
 18988 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 18989 ;; Tracked objects:
 18990 ;;		On entry : 0/0
 18991 ;;		On exit  : 0/0
 18992 ;;		Unchanged: 0/0
 18993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18996 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18997 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18998 ;;Total ram usage:        2 bytes
 18999 ;; Hardware stack levels used:    1
 19000 ;; This function calls:
 19001 ;;		Nothing
 19002 ;; This function is called by:
 19003 ;;		_USBCheckStdRequest
 19004 ;; This function uses a non-reentrant model
 19005 ;;
 19006                           
 19007                           	psect	text88
 19008  003A9C                     __ptext88:
 19009                           	opt stack 0
 19010  003A9C                     _USBStdGetDscHandler:
 19011                           	opt stack 26
 19012                           
 19013                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 19014                           
 19015                           ; BSR set to: 0
 19016                           ;incstack = 0
 19017  003A9C  0E80               	movlw	128
 19018  003A9E  010D               	movlb	13	; () banked
 19019  003AA0  1930               	xorwf	48,w,b	;volatile
 19020  003AA2  A4D8               	btfss	status,2,c
 19021  003AA4  0012               	return	
 19022                           
 19023                           ; BSR set to: 13
 19024                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 19025  003AA6  0EC0               	movlw	192
 19026  003AA8  0100               	movlb	0	; () banked
 19027  003AAA  6F69               	movwf	(_inPipes+3)& (0+255),b
 19028                           
 19029                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 19030  003AAC  D088               	goto	l268
 19031  003AAE                     
 19032                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 19033                           
 19034                           ; BSR set to: 0
 19035  003AAE  0EA4               	movlw	low _device_dsc
 19036  003AB0  0100               	movlb	0	; () banked
 19037  003AB2  6F66               	movwf	_inPipes& (0+255),b
 19038  003AB4  0E8F               	movlw	high _device_dsc
 19039  003AB6  6F67               	movwf	(_inPipes+1)& (0+255),b
 19040                           
 19041                           ; BSR set to: 0
 19042                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 19043  003AB8  0E00               	movlw	0
 19044  003ABA  6F6B               	movwf	(_inPipes+5)& (0+255),b
 19045  003ABC  0E12               	movlw	18
 19046  003ABE  6F6A               	movwf	(_inPipes+4)& (0+255),b
 19047                           
 19048                           ;usb_device.c: 2060: break;
 19049  003AC0  0012               	return	
 19050  003AC2                     
 19051                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 19052                           
 19053                           ; BSR set to: 0
 19054  003AC2  010D               	movlb	13	; () banked
 19055  003AC4  5132               	movf	50,w,b	;volatile
 19056  003AC6  A4D8               	btfss	status,2,c
 19057  003AC8  D043               	goto	l272
 19058                           
 19059                           ; BSR set to: 13
 19060                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 19061  003ACA  5132               	movf	50,w,b	;volatile
 19062  003ACC  0D02               	mullw	2
 19063  003ACE  0EA5               	movlw	low _USB_CD_Ptr
 19064  003AD0  24F3               	addwf	prodl,w,c
 19065  003AD2  6EF6               	movwf	tblptrl,c
 19066  003AD4  0E8E               	movlw	high _USB_CD_Ptr
 19067  003AD6  20F4               	addwfc	prodh,w,c
 19068  003AD8  6EF7               	movwf	tblptrh,c
 19069  003ADA                     	if	1	;There are 3 active tblptr bytes
 19070  003ADA  6AF8               	clrf	tblptru,c
 19071  003ADC  0E00               	movlw	low (__mediumconst shr (0+16))
 19072  003ADE  22F8               	addwfc	tblptru,f,c
 19073  003AE0                     	endif
 19074  003AE0  0009               	tblrd		*+
 19075  003AE2  CFF5 F066          	movff	tablat,_inPipes
 19076  003AE6  000A               	tblrd		*-
 19077  003AE8  CFF5 F067          	movff	tablat,_inPipes+1
 19078                           
 19079                           ; BSR set to: 13
 19080                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 19081  003AEC  0E02               	movlw	2
 19082  003AEE  0100               	movlb	0	; () banked
 19083  003AF0  2566               	addwf	_inPipes& (0+255),w,b
 19084  003AF2  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 19085  003AF4  0E00               	movlw	0
 19086  003AF6  2167               	addwfc	(_inPipes+1)& (0+255),w,b
 19087  003AF8  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 19088  003AFA  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 19089  003AFE  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 19090  003B02  6AF8               	clrf	tblptru,c
 19091  003B04  0E0E               	movlw	(high __ramtop+-1)
 19092  003B06  64F7               	cpfsgt	tblptrh,c
 19093  003B08  D003               	bra	u7877
 19094  003B0A  0008               	tblrd		*
 19095  003B0C  50F5               	movf	tablat,w,c
 19096  003B0E  D005               	bra	u7870
 19097  003B10                     u7877:
 19098  003B10  CFF6 FFE9          	movff	tblptrl,fsr0l
 19099  003B14  CFF7 FFEA          	movff	tblptrh,fsr0h
 19100  003B18  50EF               	movf	indf0,w,c
 19101  003B1A                     u7870:
 19102  003B1A  0100               	movlb	0	; () banked
 19103  003B1C  6F6A               	movwf	(_inPipes+4)& (0+255),b
 19104                           
 19105                           ; BSR set to: 0
 19106                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 19107  003B1E  0E03               	movlw	3
 19108  003B20  2566               	addwf	_inPipes& (0+255),w,b
 19109  003B22  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 19110  003B24  0E00               	movlw	0
 19111  003B26  2167               	addwfc	(_inPipes+1)& (0+255),w,b
 19112  003B28  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 19113  003B2A  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 19114  003B2E  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 19115  003B32  6AF8               	clrf	tblptru,c
 19116  003B34  0E0E               	movlw	(high __ramtop+-1)
 19117  003B36  64F7               	cpfsgt	tblptrh,c
 19118  003B38  D003               	bra	u7887
 19119  003B3A  0008               	tblrd		*
 19120  003B3C  50F5               	movf	tablat,w,c
 19121  003B3E  D005               	bra	u7880
 19122  003B40                     u7887:
 19123  003B40  CFF6 FFE9          	movff	tblptrl,fsr0l
 19124  003B44  CFF7 FFEA          	movff	tblptrh,fsr0h
 19125  003B48  50EF               	movf	indf0,w,c
 19126  003B4A                     u7880:
 19127  003B4A  0100               	movlb	0	; () banked
 19128  003B4C  6F6B               	movwf	(_inPipes+5)& (0+255),b
 19129                           
 19130                           ;usb_device.c: 2078: }
 19131  003B4E  0012               	return	
 19132  003B50                     l272:
 19133                           
 19134                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 19135                           
 19136                           ; BSR set to: 0
 19137  003B50  0E00               	movlw	0
 19138  003B52  0100               	movlb	0	; () banked
 19139  003B54  6F69               	movwf	(_inPipes+3)& (0+255),b
 19140                           
 19141                           ; BSR set to: 0
 19142                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 19143  003B56  0012               	return	
 19144  003B58                     
 19145                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 19146                           
 19147                           ; BSR set to: 0
 19148  003B58  0E04               	movlw	4
 19149  003B5A  010D               	movlb	13	; () banked
 19150  003B5C  6132               	cpfslt	50,b	;volatile
 19151  003B5E  D027               	goto	l275
 19152                           
 19153                           ; BSR set to: 13
 19154                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 19155  003B60  5132               	movf	50,w,b	;volatile
 19156  003B62  0D02               	mullw	2
 19157  003B64  0E7B               	movlw	low _USB_SD_Ptr
 19158  003B66  24F3               	addwf	prodl,w,c
 19159  003B68  6EF6               	movwf	tblptrl,c
 19160  003B6A  0E8E               	movlw	high _USB_SD_Ptr
 19161  003B6C  20F4               	addwfc	prodh,w,c
 19162  003B6E  6EF7               	movwf	tblptrh,c
 19163  003B70                     	if	1	;There are 3 active tblptr bytes
 19164  003B70  6AF8               	clrf	tblptru,c
 19165  003B72  0E00               	movlw	low (__mediumconst shr (0+16))
 19166  003B74  22F8               	addwfc	tblptru,f,c
 19167  003B76                     	endif
 19168  003B76  0009               	tblrd		*+
 19169  003B78  CFF5 F066          	movff	tablat,_inPipes
 19170  003B7C  000A               	tblrd		*-
 19171  003B7E  CFF5 F067          	movff	tablat,_inPipes+1
 19172                           
 19173                           ; BSR set to: 13
 19174                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 19175  003B82  C066  FFF6         	movff	_inPipes,tblptrl
 19176  003B86  C067  FFF7         	movff	_inPipes+1,tblptrh
 19177  003B8A  6AF8               	clrf	tblptru,c
 19178  003B8C  0E0E               	movlw	(high __ramtop+-1)
 19179  003B8E  64F7               	cpfsgt	tblptrh,c
 19180  003B90  D003               	bra	u7907
 19181  003B92  0008               	tblrd		*
 19182  003B94  50F5               	movf	tablat,w,c
 19183  003B96  D005               	bra	u7900
 19184  003B98                     u7907:
 19185  003B98  CFF6 FFE9          	movff	tblptrl,fsr0l
 19186  003B9C  CFF7 FFEA          	movff	tblptrh,fsr0h
 19187  003BA0  50EF               	movf	indf0,w,c
 19188  003BA2                     u7900:
 19189  003BA2  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 19190  003BA4  5001               	movf	??_USBStdGetDscHandler,w,c
 19191  003BA6  0100               	movlb	0	; () banked
 19192  003BA8  6F6A               	movwf	(_inPipes+4)& (0+255),b
 19193  003BAA  6B6B               	clrf	(_inPipes+5)& (0+255),b
 19194                           
 19195                           ;usb_device.c: 2094: }
 19196  003BAC  0012               	return	
 19197  003BAE                     l275:
 19198                           
 19199                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 19200                           
 19201                           ; BSR set to: 0
 19202  003BAE  0E00               	movlw	0
 19203  003BB0  0100               	movlb	0	; () banked
 19204  003BB2  6F69               	movwf	(_inPipes+3)& (0+255),b
 19205                           
 19206                           ; BSR set to: 0
 19207                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 19208  003BB4  0012               	return	
 19209  003BB6                     
 19210                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 19211                           
 19212                           ; BSR set to: 0
 19213  003BB6  0E00               	movlw	0
 19214  003BB8  0100               	movlb	0	; () banked
 19215  003BBA  6F69               	movwf	(_inPipes+3)& (0+255),b
 19216                           
 19217                           ; BSR set to: 0
 19218                           ;usb_device.c: 2112: }
 19219                           
 19220                           ;usb_device.c: 2111: break;
 19221  003BBC  0012               	return	
 19222  003BBE                     l268:
 19223                           
 19224                           ; BSR set to: 0
 19225                           
 19226                           ; BSR set to: 0
 19227  003BBE  010D               	movlb	13	; () banked
 19228  003BC0  5133               	movf	51,w,b	;volatile
 19229                           
 19230                           ; Switch size 1, requested type "space"
 19231                           ; Number of cases is 3, Range of values is 1 to 3
 19232                           ; switch strategies available:
 19233                           ; Name         Instructions Cycles
 19234                           ; simple_byte           10     6 (average)
 19235                           ;	Chosen strategy is simple_byte
 19236  003BC2  0A01               	xorlw	1	; case 1
 19237  003BC4  B4D8               	btfsc	status,2,c
 19238  003BC6  D773               	goto	l269
 19239  003BC8  0A03               	xorlw	3	; case 2
 19240  003BCA  B4D8               	btfsc	status,2,c
 19241  003BCC  D77A               	goto	l271
 19242  003BCE  0A01               	xorlw	1	; case 3
 19243  003BD0  B4D8               	btfsc	status,2,c
 19244  003BD2  D7C2               	goto	l274
 19245  003BD4  D7F0               	goto	l277
 19246  003BD6                     __end_of_USBStdGetDscHandler:
 19247                           	opt stack 0
 19248                           tblptru	equ	0xFF8
 19249                           tblptrh	equ	0xFF7
 19250                           tblptrl	equ	0xFF6
 19251                           tablat	equ	0xFF5
 19252                           prodh	equ	0xFF4
 19253                           prodl	equ	0xFF3
 19254                           intcon	equ	0xFF2
 19255                           intcon2	equ	0xFF1
 19256                           intcon3	equ	0xFF0
 19257                           indf0	equ	0xFEF
 19258                           postinc0	equ	0xFEE
 19259                           fsr0h	equ	0xFEA
 19260                           fsr0l	equ	0xFE9
 19261                           wreg	equ	0xFE8
 19262                           indf1	equ	0xFE7
 19263                           postdec1	equ	0xFE5
 19264                           plusw1	equ	0xFE3
 19265                           fsr1h	equ	0xFE2
 19266                           fsr1l	equ	0xFE1
 19267                           indf2	equ	0xFDF
 19268                           postinc2	equ	0xFDE
 19269                           postdec2	equ	0xFDD
 19270                           plusw2	equ	0xFDB
 19271                           fsr2h	equ	0xFDA
 19272                           fsr2l	equ	0xFD9
 19273                           status	equ	0xFD8
 19274                           
 19275 ;; *************** function _USBStdFeatureReqHandler *****************
 19276 ;; Defined at:
 19277 ;;		line 2756 in file "usb_device.c"
 19278 ;; Parameters:    Size  Location     Type
 19279 ;;		None
 19280 ;; Auto vars:     Size  Location     Type
 19281 ;;  p               2   27[COMRAM] PTR struct __BDT
 19282 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 19283 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 19284 ;;		 -> UEP0(1), 
 19285 ;;  current_ep_d    1   26[COMRAM] struct .
 19286 ;; Return value:  Size  Location     Type
 19287 ;;                  1    wreg      void 
 19288 ;; Registers used:
 19289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 19290 ;; Tracked objects:
 19291 ;;		On entry : 0/0
 19292 ;;		On exit  : 0/0
 19293 ;;		Unchanged: 0/0
 19294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19296 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19297 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19298 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19299 ;;Total ram usage:        6 bytes
 19300 ;; Hardware stack levels used:    1
 19301 ;; Hardware stack levels required when called:    4
 19302 ;; This function calls:
 19303 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19304 ;; This function is called by:
 19305 ;;		_USBCheckStdRequest
 19306 ;; This function uses a non-reentrant model
 19307 ;;
 19308                           
 19309                           	psect	text89
 19310  0017B2                     __ptext89:
 19311                           	opt stack 0
 19312  0017B2                     _USBStdFeatureReqHandler:
 19313                           	opt stack 22
 19314                           
 19315                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 19316                           
 19317                           ;incstack = 0
 19318  0017B2  010D               	movlb	13	; () banked
 19319  0017B4  0532               	decf	50,w,b	;volatile
 19320  0017B6  A4D8               	btfss	status,2,c
 19321  0017B8  D011               	goto	l361
 19322                           
 19323                           ; BSR set to: 13
 19324  0017BA  5130               	movf	48,w,b	;volatile
 19325  0017BC  0B1F               	andlw	31
 19326  0017BE  0900               	iorlw	0
 19327  0017C0  A4D8               	btfss	status,2,c
 19328  0017C2  D00C               	goto	l361
 19329                           
 19330                           ; BSR set to: 13
 19331                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 19332  0017C4  0100               	movlb	0	; () banked
 19333  0017C6  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 19334                           
 19335                           ; BSR set to: 0
 19336                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 19337  0017C8  0E03               	movlw	3
 19338  0017CA  010D               	movlb	13	; () banked
 19339  0017CC  1931               	xorwf	49,w,b	;volatile
 19340  0017CE  A4D8               	btfss	status,2,c
 19341  0017D0  D002               	goto	l360
 19342                           
 19343                           ; BSR set to: 13
 19344                           ;usb_device.c: 2806: RemoteWakeup = 1;
 19345  0017D2  0E01               	movlw	1
 19346  0017D4  D001               	goto	L7
 19347  0017D6                     l360:
 19348                           
 19349                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 19350                           
 19351                           ; BSR set to: 0
 19352  0017D6  0E00               	movlw	0
 19353  0017D8                     L7:
 19354  0017D8  0100               	movlb	0	; () banked
 19355  0017DA  6FAD               	movwf	_RemoteWakeup& (0+255),b
 19356  0017DC                     l361:
 19357                           
 19358                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 19359                           
 19360                           ; BSR set to: 0
 19361  0017DC  010D               	movlb	13	; () banked
 19362  0017DE  5132               	movf	50,w,b	;volatile
 19363  0017E0  A4D8               	btfss	status,2,c
 19364  0017E2  0012               	return	
 19365                           
 19366                           ; BSR set to: 13
 19367  0017E4  5130               	movf	48,w,b	;volatile
 19368  0017E6  0B1F               	andlw	31
 19369  0017E8  0A02               	xorlw	2
 19370  0017EA  A4D8               	btfss	status,2,c
 19371  0017EC  0012               	return	
 19372                           
 19373                           ; BSR set to: 13
 19374  0017EE  5134               	movf	52,w,b	;volatile
 19375  0017F0  0B0F               	andlw	15
 19376  0017F2  0900               	iorlw	0
 19377  0017F4  B4D8               	btfsc	status,2,c
 19378  0017F6  0012               	return	
 19379                           
 19380                           ; BSR set to: 13
 19381  0017F8  5134               	movf	52,w,b	;volatile
 19382  0017FA  0B0F               	andlw	15
 19383  0017FC  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19384  0017FE  0E03               	movlw	3
 19385  001800  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 19386  001802  0012               	return	
 19387                           
 19388                           ; BSR set to: 13
 19389  001804  0E20               	movlw	32
 19390  001806  0100               	movlb	0	; () banked
 19391  001808  19B0               	xorwf	_USBDeviceState& (0+255),w,b
 19392  00180A  A4D8               	btfss	status,2,c
 19393  00180C  0012               	return	
 19394                           
 19395                           ; BSR set to: 0
 19396                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 19397  00180E  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 19398                           
 19399                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 19400  001810  010D               	movlb	13	; () banked
 19401  001812  BF34               	btfsc	52,7,b	;volatile
 19402  001814  D019               	goto	l363
 19403                           
 19404                           ; BSR set to: 13
 19405                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 19406  001816  5134               	movf	52,w,b	;volatile
 19407  001818  0B0F               	andlw	15
 19408  00181A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19409  00181C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19410  00181E  0D02               	mullw	2
 19411  001820  0E72               	movlw	low _pBDTEntryOut
 19412  001822  24F3               	addwf	prodl,w,c
 19413  001824  6ED9               	movwf	fsr2l,c
 19414  001826  0E00               	movlw	high _pBDTEntryOut
 19415  001828  20F4               	addwfc	prodh,w,c
 19416  00182A  6EDA               	movwf	fsr2h,c
 19417  00182C  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 19418  001830  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 19419                           
 19420                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 19421  001834  5134               	movf	52,w,b	;volatile
 19422  001836  0B0F               	andlw	15
 19423  001838  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19424  00183A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19425  00183C  0D01               	mullw	1
 19426  00183E  0E5E               	movlw	low _ep_data_out
 19427  001840  24F3               	addwf	prodl,w,c
 19428  001842  6ED9               	movwf	fsr2l,c
 19429  001844  0E01               	movlw	high _ep_data_out
 19430  001846  D018               	goto	L8
 19431  001848                     l363:
 19432                           
 19433                           ; BSR set to: 13
 19434                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 19435                           
 19436                           ; BSR set to: 13
 19437  001848  5134               	movf	52,w,b	;volatile
 19438  00184A  0B0F               	andlw	15
 19439  00184C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19440  00184E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19441  001850  0D02               	mullw	2
 19442  001852  0E6C               	movlw	low _pBDTEntryIn
 19443  001854  24F3               	addwf	prodl,w,c
 19444  001856  6ED9               	movwf	fsr2l,c
 19445  001858  0E00               	movlw	high _pBDTEntryIn
 19446  00185A  20F4               	addwfc	prodh,w,c
 19447  00185C  6EDA               	movwf	fsr2h,c
 19448  00185E  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 19449  001862  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 19450                           
 19451                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 19452  001866  5134               	movf	52,w,b	;volatile
 19453  001868  0B0F               	andlw	15
 19454  00186A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19455  00186C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19456  00186E  0D01               	mullw	1
 19457  001870  0E61               	movlw	low _ep_data_in
 19458  001872  24F3               	addwf	prodl,w,c
 19459  001874  6ED9               	movwf	fsr2l,c
 19460  001876  0E01               	movlw	high _ep_data_in
 19461  001878                     L8:
 19462  001878  20F4               	addwfc	prodh,w,c
 19463  00187A  6EDA               	movwf	fsr2h,c
 19464  00187C  50DF               	movf	indf2,w,c
 19465  00187E  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 19466                           
 19467                           ; BSR set to: 13
 19468                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 19469                           
 19470                           ; BSR set to: 13
 19471  001880  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 19472  001882  D006               	goto	l365
 19473                           
 19474                           ; BSR set to: 13
 19475                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 19476  001884  0EFB               	movlw	251
 19477  001886  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 19478  001888  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 19479  00188A  0EFF               	movlw	255
 19480  00188C  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 19481  00188E  D004               	goto	L9
 19482  001890                     l365:
 19483                           
 19484                           ; BSR set to: 13
 19485                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 19486                           
 19487                           ; BSR set to: 13
 19488  001890  0E04               	movlw	4
 19489  001892  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 19490  001894  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 19491  001896  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 19492  001898                     L9:
 19493  001898  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 19494                           
 19495                           ; BSR set to: 13
 19496                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 19497                           
 19498                           ; BSR set to: 13
 19499  00189A  BF34               	btfsc	52,7,b	;volatile
 19500  00189C  D00A               	goto	l367
 19501                           
 19502                           ; BSR set to: 13
 19503                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 19504  00189E  5134               	movf	52,w,b	;volatile
 19505  0018A0  0B0F               	andlw	15
 19506  0018A2  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19507  0018A4  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19508  0018A6  0D02               	mullw	2
 19509  0018A8  0E72               	movlw	low _pBDTEntryOut
 19510  0018AA  24F3               	addwf	prodl,w,c
 19511  0018AC  6ED9               	movwf	fsr2l,c
 19512  0018AE  0E00               	movlw	high _pBDTEntryOut
 19513  0018B0  D009               	goto	L10
 19514  0018B2                     l367:
 19515                           
 19516                           ; BSR set to: 13
 19517                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 19518                           
 19519                           ; BSR set to: 13
 19520  0018B2  5134               	movf	52,w,b	;volatile
 19521  0018B4  0B0F               	andlw	15
 19522  0018B6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19523  0018B8  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19524  0018BA  0D02               	mullw	2
 19525  0018BC  0E6C               	movlw	low _pBDTEntryIn
 19526  0018BE  24F3               	addwf	prodl,w,c
 19527  0018C0  6ED9               	movwf	fsr2l,c
 19528  0018C2  0E00               	movlw	high _pBDTEntryIn
 19529  0018C4                     L10:
 19530  0018C4  20F4               	addwfc	prodh,w,c
 19531  0018C6  6EDA               	movwf	fsr2h,c
 19532  0018C8  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 19533  0018CC  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 19534                           
 19535                           ; BSR set to: 13
 19536                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 19537                           
 19538                           ; BSR set to: 13
 19539  0018D0  0E03               	movlw	3
 19540  0018D2  1931               	xorwf	49,w,b	;volatile
 19541  0018D4  A4D8               	btfss	status,2,c
 19542  0018D6  D02D               	goto	l369
 19543                           
 19544                           ; BSR set to: 13
 19545                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 19546  0018D8  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19547  0018DC  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19548  0018E0  AEDF               	btfss	indf2,7,c
 19549  0018E2  D01A               	goto	l372
 19550                           
 19551                           ; BSR set to: 13
 19552                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 19553  0018E4  BF34               	btfsc	52,7,b	;volatile
 19554  0018E6  D00A               	goto	l371
 19555                           
 19556                           ; BSR set to: 13
 19557                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 19558  0018E8  5134               	movf	52,w,b	;volatile
 19559  0018EA  0B0F               	andlw	15
 19560  0018EC  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19561  0018EE  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19562  0018F0  0D01               	mullw	1
 19563  0018F2  0E5E               	movlw	low _ep_data_out
 19564  0018F4  24F3               	addwf	prodl,w,c
 19565  0018F6  6ED9               	movwf	fsr2l,c
 19566  0018F8  0E01               	movlw	high _ep_data_out
 19567  0018FA  D00A               	goto	L11
 19568  0018FC                     l371:
 19569                           
 19570                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 19571                           
 19572                           ; BSR set to: 1
 19573  0018FC  010D               	movlb	13	; () banked
 19574  0018FE  5134               	movf	52,w,b	;volatile
 19575  001900  0B0F               	andlw	15
 19576  001902  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19577  001904  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19578  001906  0D01               	mullw	1
 19579  001908  0E61               	movlw	low _ep_data_in
 19580  00190A  24F3               	addwf	prodl,w,c
 19581  00190C  6ED9               	movwf	fsr2l,c
 19582  00190E  0E01               	movlw	high _ep_data_in
 19583  001910                     L11:
 19584  001910  20F4               	addwfc	prodh,w,c
 19585  001912  6EDA               	movwf	fsr2h,c
 19586  001914  0101               	movlb	1	; () banked
 19587  001916  82DF               	bsf	indf2,1,c
 19588  001918                     l372:
 19589                           
 19590                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 19591                           
 19592                           ; BSR set to: 1
 19593                           
 19594                           ; BSR set to: 1
 19595  001918  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19596  00191C  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19597  001920  0E00               	movlw	0
 19598  001922  84DB               	bsf	plusw2,2,c
 19599                           
 19600                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 19601  001924  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19602  001928  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19603  00192C  0E00               	movlw	0
 19604  00192E  8EDB               	bsf	plusw2,7,c
 19605                           
 19606                           ;usb_device.c: 2878: }
 19607  001930  0012               	return	
 19608  001932                     l369:
 19609                           
 19610                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 19611  001932  0E04               	movlw	4
 19612  001934  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 19613  001936  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 19614  001938  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 19615  00193A  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 19616                           
 19617                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 19618  00193C  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19619  001940  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19620  001944  AEDF               	btfss	indf2,7,c
 19621  001946  D01B               	goto	l374
 19622                           
 19623                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 19624  001948  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19625  00194C  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19626  001950  0E7F               	movlw	127
 19627  001952  16DF               	andwf	indf2,f,c
 19628                           
 19629                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 19630  001954  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19631  001958  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19632  00195C  0E00               	movlw	0
 19633  00195E  8CDB               	bsf	plusw2,6,c
 19634                           
 19635                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 19636  001960  0E00               	movlw	0
 19637  001962  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19638  001964  0E05               	movlw	5
 19639  001966  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19640  001968  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 19641  00196C  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 19642  001970  0E00               	movlw	0
 19643  001972  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19644  001974  0E02               	movlw	2
 19645  001976  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19646  001978  ECE5  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19647                           
 19648                           ;usb_device.c: 2893: }
 19649  00197C  D006               	goto	l375
 19650  00197E                     l374:
 19651                           
 19652                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 19653  00197E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19654  001982  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19655  001986  0E00               	movlw	0
 19656  001988  8CDB               	bsf	plusw2,6,c
 19657  00198A                     l375:
 19658                           
 19659                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 19660  00198A  0E04               	movlw	4
 19661  00198C  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 19662  00198E  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 19663  001990  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 19664  001992  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 19665                           
 19666                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 19667  001994  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 19668  001996  D006               	goto	u8120
 19669  001998  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19670  00199C  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19671  0019A0  AEDF               	btfss	indf2,7,c
 19672  0019A2  D030               	goto	l376
 19673  0019A4                     u8120:
 19674                           
 19675                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 19676  0019A4  010D               	movlb	13	; () banked
 19677  0019A6  BF34               	btfsc	52,7,b	;volatile
 19678  0019A8  D00A               	goto	l379
 19679                           
 19680                           ; BSR set to: 13
 19681                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 19682  0019AA  5134               	movf	52,w,b	;volatile
 19683  0019AC  0B0F               	andlw	15
 19684  0019AE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19685  0019B0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19686  0019B2  0D01               	mullw	1
 19687  0019B4  0E5E               	movlw	low _ep_data_out
 19688  0019B6  24F3               	addwf	prodl,w,c
 19689  0019B8  6ED9               	movwf	fsr2l,c
 19690  0019BA  0E01               	movlw	high _ep_data_out
 19691  0019BC  D00A               	goto	L12
 19692  0019BE                     l379:
 19693                           
 19694                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 19695                           
 19696                           ; BSR set to: 1
 19697  0019BE  010D               	movlb	13	; () banked
 19698  0019C0  5134               	movf	52,w,b	;volatile
 19699  0019C2  0B0F               	andlw	15
 19700  0019C4  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19701  0019C6  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19702  0019C8  0D01               	mullw	1
 19703  0019CA  0E61               	movlw	low _ep_data_in
 19704  0019CC  24F3               	addwf	prodl,w,c
 19705  0019CE  6ED9               	movwf	fsr2l,c
 19706  0019D0  0E01               	movlw	high _ep_data_in
 19707  0019D2                     L12:
 19708  0019D2  20F4               	addwfc	prodh,w,c
 19709  0019D4  6EDA               	movwf	fsr2h,c
 19710  0019D6  0101               	movlb	1	; () banked
 19711  0019D8  92DF               	bcf	indf2,1,c
 19712                           
 19713                           ; BSR set to: 1
 19714                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 19715                           
 19716                           ; BSR set to: 1
 19717  0019DA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19718  0019DE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19719  0019E2  0E3B               	movlw	59
 19720  0019E4  16DF               	andwf	indf2,f,c
 19721                           
 19722                           ; BSR set to: 1
 19723                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 19724  0019E6  0E00               	movlw	0
 19725  0019E8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19726  0019EA  0E05               	movlw	5
 19727  0019EC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19728  0019EE  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 19729  0019F2  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 19730  0019F6  0E00               	movlw	0
 19731  0019F8  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19732  0019FA  0E02               	movlw	2
 19733  0019FC  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19734  0019FE  ECE5  F030         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19735                           
 19736                           ;usb_device.c: 2923: }
 19737  001A02  D006               	goto	l381
 19738  001A04                     l376:
 19739                           
 19740                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 19741  001A04  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 19742  001A08  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 19743  001A0C  0E3B               	movlw	59
 19744  001A0E  16DF               	andwf	indf2,f,c
 19745  001A10                     l381:
 19746                           
 19747                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 19748  001A10  010D               	movlb	13	; () banked
 19749  001A12  5134               	movf	52,w,b	;volatile
 19750  001A14  0B0F               	andlw	15
 19751  001A16  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19752  001A18  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19753  001A1A  0D01               	mullw	1
 19754  001A1C  0E26               	movlw	38
 19755  001A1E  24F3               	addwf	prodl,w,c
 19756  001A20  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 19757  001A22  0E0F               	movlw	15
 19758  001A24  20F4               	addwfc	prodh,w,c
 19759  001A26  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 19760                           
 19761                           ; BSR set to: 13
 19762                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 19763  001A28  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 19764  001A2C  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 19765  001A30  0EFE               	movlw	254
 19766  001A32  16DF               	andwf	indf2,f,c
 19767                           
 19768                           ; BSR set to: 13
 19769  001A34  0012               	return	
 19770  001A36                     __end_of_USBStdFeatureReqHandler:
 19771                           	opt stack 0
 19772                           tblptru	equ	0xFF8
 19773                           tblptrh	equ	0xFF7
 19774                           tblptrl	equ	0xFF6
 19775                           tablat	equ	0xFF5
 19776                           prodh	equ	0xFF4
 19777                           prodl	equ	0xFF3
 19778                           intcon	equ	0xFF2
 19779                           intcon2	equ	0xFF1
 19780                           intcon3	equ	0xFF0
 19781                           indf0	equ	0xFEF
 19782                           postinc0	equ	0xFEE
 19783                           fsr0h	equ	0xFEA
 19784                           fsr0l	equ	0xFE9
 19785                           wreg	equ	0xFE8
 19786                           indf1	equ	0xFE7
 19787                           postdec1	equ	0xFE5
 19788                           plusw1	equ	0xFE3
 19789                           fsr1h	equ	0xFE2
 19790                           fsr1l	equ	0xFE1
 19791                           indf2	equ	0xFDF
 19792                           postinc2	equ	0xFDE
 19793                           postdec2	equ	0xFDD
 19794                           plusw2	equ	0xFDB
 19795                           fsr2h	equ	0xFDA
 19796                           fsr2l	equ	0xFD9
 19797                           status	equ	0xFD8
 19798                           
 19799 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 19800 ;; Defined at:
 19801 ;;		line 54 in file "usb_events.c"
 19802 ;; Parameters:    Size  Location     Type
 19803 ;;  event           2   15[COMRAM] enum E6832
 19804 ;;  pdata           2   17[COMRAM] PTR void 
 19805 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 19806 ;;		 -> BDT(48), 
 19807 ;;  size            2   19[COMRAM] unsigned int 
 19808 ;; Auto vars:     Size  Location     Type
 19809 ;;		None
 19810 ;; Return value:  Size  Location     Type
 19811 ;;                  1    wreg      unsigned char 
 19812 ;; Registers used:
 19813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 19814 ;; Tracked objects:
 19815 ;;		On entry : 0/0
 19816 ;;		On exit  : 0/0
 19817 ;;		Unchanged: 0/0
 19818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19819 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19821 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19822 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19823 ;;Total ram usage:        8 bytes
 19824 ;; Hardware stack levels used:    1
 19825 ;; Hardware stack levels required when called:    3
 19826 ;; This function calls:
 19827 ;;		_APP_DeviceCustomHIDInitialize
 19828 ;;		_APP_DeviceMSDInitialize
 19829 ;;		_MSDTransferTerminated
 19830 ;;		_SYSTEM_Initialize
 19831 ;;		_USBCheckHIDRequest
 19832 ;;		_USBCheckMSDRequest
 19833 ;; This function is called by:
 19834 ;;		_USBDeviceTasks
 19835 ;;		_USBStdSetCfgHandler
 19836 ;;		_USBSuspend
 19837 ;;		_USBWakeFromSuspend
 19838 ;;		_USBCtrlTrfSetupHandler
 19839 ;;		_USBCheckStdRequest
 19840 ;;		_USBStdFeatureReqHandler
 19841 ;; This function uses a non-reentrant model
 19842 ;;
 19843                           
 19844                           	psect	text90
 19845  0061CA                     __ptext90:
 19846                           	opt stack 0
 19847  0061CA                     _USER_USB_CALLBACK_EVENT_HANDLER:
 19848                           	opt stack 26
 19849                           
 19850                           ;usb_events.c: 56: switch((int)event)
 19851                           
 19852                           ;incstack = 0
 19853  0061CA  D019               	goto	l800
 19854  0061CC                     
 19855                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 19856  0061CC  0E01               	movlw	1
 19857  0061CE  ECCE  F038         	call	_SYSTEM_Initialize
 19858                           
 19859                           ;usb_events.c: 79: break;
 19860  0061D2  0012               	return	
 19861  0061D4                     
 19862                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 19863  0061D4  0E02               	movlw	2
 19864  0061D6  ECCE  F038         	call	_SYSTEM_Initialize
 19865                           
 19866                           ;usb_events.c: 90: break;
 19867  0061DA  0012               	return	
 19868  0061DC                     
 19869                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 19870  0061DC  EC1D  F03C         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 19871                           
 19872                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 19873  0061E0  ECAC  F03E         	call	_APP_DeviceMSDInitialize	;wreg free
 19874                           
 19875                           ;usb_events.c: 100: break;
 19876                           
 19877                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 19878                           
 19879                           ;usb_events.c: 97: break;
 19880  0061E4  0012               	return	
 19881  0061E6                     
 19882                           ;usb_events.c: 105: USBCheckHIDRequest();
 19883  0061E6  EC15  F024         	call	_USBCheckHIDRequest	;wreg free
 19884                           
 19885                           ;usb_events.c: 108: USBCheckMSDRequest();
 19886  0061EA  ECA3  F028         	call	_USBCheckMSDRequest	;wreg free
 19887                           
 19888                           ;usb_events.c: 112: break;
 19889                           
 19890                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 19891                           
 19892                           ;usb_events.c: 109: break;
 19893  0061EE  0012               	return	
 19894  0061F0                     
 19895                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 19896  0061F0  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 19897  0061F4  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 19898  0061F8  EC4D  F038         	call	_MSDTransferTerminated	;wreg free
 19899                           
 19900                           ;usb_events.c: 129: }
 19901                           
 19902                           ;usb_events.c: 128: break;
 19903                           
 19904                           ;usb_events.c: 127: default:
 19905                           
 19906                           ;usb_events.c: 125: break;
 19907  0061FC  0012               	return	
 19908  0061FE                     l800:
 19909  0061FE  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 19910  006202  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 19911                           
 19912                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 19913                           ; Switch size 1, requested type "space"
 19914                           ; Number of cases is 2, Range of values is 0 to 127
 19915                           ; switch strategies available:
 19916                           ; Name         Instructions Cycles
 19917                           ; simple_byte            7     4 (average)
 19918                           ;	Chosen strategy is simple_byte
 19919  006206  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 19920  006208  0A00               	xorlw	0	; case 0
 19921  00620A  B4D8               	btfsc	status,2,c
 19922  00620C  D004               	goto	l14970
 19923  00620E  0A7F               	xorlw	127	; case 127
 19924  006210  A4D8               	btfss	status,2,c
 19925  006212  0012               	return	
 19926  006214  D01A               	goto	l14972
 19927  006216                     l14970:
 19928                           
 19929                           ; Switch size 1, requested type "space"
 19930                           ; Number of cases is 8, Range of values is 1 to 117
 19931                           ; switch strategies available:
 19932                           ; Name         Instructions Cycles
 19933                           ; simple_byte           25    13 (average)
 19934                           ;	Chosen strategy is simple_byte
 19935  006216  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 19936  006218  0A01               	xorlw	1	; case 1
 19937  00621A  B4D8               	btfsc	status,2,c
 19938  00621C  D7DF               	goto	l806
 19939  00621E  0A03               	xorlw	3	; case 2
 19940  006220  B4D8               	btfsc	status,2,c
 19941  006222  0012               	return	
 19942  006224  0A01               	xorlw	1	; case 3
 19943  006226  B4D8               	btfsc	status,2,c
 19944  006228  D7DE               	goto	l808
 19945  00622A  0A06               	xorlw	6	; case 5
 19946  00622C  B4D8               	btfsc	status,2,c
 19947  00622E  D7E0               	goto	l810
 19948  006230  0A77               	xorlw	119	; case 114
 19949  006232  B4D8               	btfsc	status,2,c
 19950  006234  0012               	return	
 19951  006236  0A01               	xorlw	1	; case 115
 19952  006238  B4D8               	btfsc	status,2,c
 19953  00623A  0012               	return	
 19954  00623C  0A07               	xorlw	7	; case 116
 19955  00623E  B4D8               	btfsc	status,2,c
 19956  006240  D7C9               	goto	l805
 19957  006242  0A01               	xorlw	1	; case 117
 19958  006244  A4D8               	btfss	status,2,c
 19959  006246  0012               	return	
 19960  006248  D7C1               	goto	l804
 19961  00624A                     l14972:
 19962                           
 19963                           ; Switch size 1, requested type "space"
 19964                           ; Number of cases is 1, Range of values is 255 to 255
 19965                           ; switch strategies available:
 19966                           ; Name         Instructions Cycles
 19967                           ; simple_byte            4     3 (average)
 19968                           ;	Chosen strategy is simple_byte
 19969  00624A  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 19970  00624C  0AFF               	xorlw	255	; case 255
 19971  00624E  0012               	return	
 19972  006250                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 19973                           	opt stack 0
 19974                           tblptru	equ	0xFF8
 19975                           tblptrh	equ	0xFF7
 19976                           tblptrl	equ	0xFF6
 19977                           tablat	equ	0xFF5
 19978                           prodh	equ	0xFF4
 19979                           prodl	equ	0xFF3
 19980                           intcon	equ	0xFF2
 19981                           intcon2	equ	0xFF1
 19982                           intcon3	equ	0xFF0
 19983                           indf0	equ	0xFEF
 19984                           postinc0	equ	0xFEE
 19985                           fsr0h	equ	0xFEA
 19986                           fsr0l	equ	0xFE9
 19987                           wreg	equ	0xFE8
 19988                           indf1	equ	0xFE7
 19989                           postdec1	equ	0xFE5
 19990                           plusw1	equ	0xFE3
 19991                           fsr1h	equ	0xFE2
 19992                           fsr1l	equ	0xFE1
 19993                           indf2	equ	0xFDF
 19994                           postinc2	equ	0xFDE
 19995                           postdec2	equ	0xFDD
 19996                           plusw2	equ	0xFDB
 19997                           fsr2h	equ	0xFDA
 19998                           fsr2l	equ	0xFD9
 19999                           status	equ	0xFD8
 20000                           
 20001 ;; *************** function _USBCheckMSDRequest *****************
 20002 ;; Defined at:
 20003 ;;		line 218 in file "usb_device_msd.c"
 20004 ;; Parameters:    Size  Location     Type
 20005 ;;		None
 20006 ;; Auto vars:     Size  Location     Type
 20007 ;;		None
 20008 ;; Return value:  Size  Location     Type
 20009 ;;                  1    wreg      void 
 20010 ;; Registers used:
 20011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20012 ;; Tracked objects:
 20013 ;;		On entry : 0/0
 20014 ;;		On exit  : 0/0
 20015 ;;		Unchanged: 0/0
 20016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20018 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20020 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20021 ;;Total ram usage:        4 bytes
 20022 ;; Hardware stack levels used:    1
 20023 ;; Hardware stack levels required when called:    1
 20024 ;; This function calls:
 20025 ;;		_USBTransferOnePacket
 20026 ;; This function is called by:
 20027 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20028 ;; This function uses a non-reentrant model
 20029 ;;
 20030                           
 20031                           	psect	text91
 20032  005146                     __ptext91:
 20033                           	opt stack 0
 20034  005146                     _USBCheckMSDRequest:
 20035                           	opt stack 27
 20036                           
 20037                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 20038                           
 20039                           ;incstack = 0
 20040  005146  010D               	movlb	13	; () banked
 20041  005148  5130               	movf	48,w,b	;volatile
 20042  00514A  0B1F               	andlw	31
 20043  00514C  06E8               	decf	wreg,f,c
 20044  00514E  A4D8               	btfss	status,2,c
 20045  005150  0012               	return	
 20046                           
 20047                           ; BSR set to: 13
 20048                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 20049                           
 20050                           ; BSR set to: 13
 20051                           
 20052                           ; BSR set to: 13
 20053                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 20054  005152  5134               	movf	52,w,b	;volatile
 20055  005154  A4D8               	btfss	status,2,c
 20056  005156  0012               	return	
 20057  005158  D04E               	goto	l529
 20058  00515A                     
 20059                           ; BSR set to: 13
 20060                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 20061                           
 20062                           ; BSR set to: 13
 20063  00515A  5132               	movf	50,w,b	;volatile
 20064  00515C  1133               	iorwf	51,w,b	;volatile
 20065  00515E  A4D8               	btfss	status,2,c
 20066  005160  0012               	return	
 20067                           
 20068                           ; BSR set to: 13
 20069  005162  5136               	movf	54,w,b	;volatile
 20070  005164  1137               	iorwf	55,w,b	;volatile
 20071  005166  A4D8               	btfss	status,2,c
 20072  005168  0012               	return	
 20073                           
 20074                           ; BSR set to: 13
 20075                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 20076                           
 20077                           ; BSR set to: 13
 20078                           
 20079                           ; BSR set to: 13
 20080                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 20081  00516A  0E00               	movlw	0
 20082  00516C  0100               	movlb	0	; () banked
 20083  00516E  6FA2               	movwf	_MSD_State& (0+255),b
 20084                           
 20085                           ; BSR set to: 0
 20086                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 20087  005170  69A1               	setf	_MSDCommandState& (0+255),b
 20088                           
 20089                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 20090  005172  0E00               	movlw	0
 20091  005174  6FA0               	movwf	_MSDReadState& (0+255),b
 20092                           
 20093                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 20094  005176  0E00               	movlw	0
 20095  005178  6F9F               	movwf	_MSDWriteState& (0+255),b
 20096                           
 20097                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 20098  00517A  0E01               	movlw	1
 20099  00517C  6F9A               	movwf	_MSDCBWValid& (0+255),b
 20100                           
 20101                           ; BSR set to: 0
 20102                           
 20103                           ; BSR set to: 0
 20104                           
 20105                           ; BSR set to: 0
 20106                           
 20107                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 20108  00517E  C076  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2319
 20109  005182  C077  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2319+1
 20110                           
 20111                           ; BSR set to: 0
 20112  005186  500C               	movf	_USBCheckMSDRequest$2319,w,c
 20113  005188  100D               	iorwf	_USBCheckMSDRequest$2319+1,w,c
 20114  00518A  B4D8               	btfsc	status,2,c
 20115  00518C  D00A               	goto	u6540
 20116                           
 20117                           ; BSR set to: 0
 20118                           
 20119                           ; BSR set to: 0
 20120                           
 20121                           ; BSR set to: 0
 20122                           
 20123                           ; BSR set to: 0
 20124  00518E  C076  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2320
 20125  005192  C077  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2320+1
 20126                           
 20127                           ; BSR set to: 0
 20128                           
 20129                           ; BSR set to: 0
 20130  005196  C00E  FFD9         	movff	_USBCheckMSDRequest$2320,fsr2l
 20131  00519A  C00F  FFDA         	movff	_USBCheckMSDRequest$2320+1,fsr2h
 20132  00519E  BEDF               	btfsc	indf2,7,c
 20133  0051A0  D00F               	goto	l534
 20134  0051A2                     u6540:
 20135                           
 20136                           ; BSR set to: 0
 20137                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 20138                           
 20139                           ; BSR set to: 0
 20140  0051A2  0E00               	movlw	0
 20141  0051A4  6E01               	movwf	USBTransferOnePacket@dir,c
 20142  0051A6  0E40               	movlw	64
 20143  0051A8  6E02               	movwf	USBTransferOnePacket@data,c
 20144  0051AA  0E0D               	movlw	13
 20145  0051AC  6E03               	movwf	USBTransferOnePacket@data+1,c
 20146  0051AE  0E40               	movlw	64
 20147  0051B0  6E04               	movwf	USBTransferOnePacket@len,c
 20148  0051B2  0E02               	movlw	2
 20149  0051B4  EC32  F022         	call	_USBTransferOnePacket
 20150  0051B8  C001  F08A         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 20151  0051BC  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 20152  0051C0                     l534:
 20153                           
 20154                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 20155  0051C0  0E80               	movlw	128
 20156  0051C2  0100               	movlb	0	; () banked
 20157  0051C4  6F69               	movwf	(_inPipes+3)& (0+255),b
 20158                           
 20159                           ;usb_device_msd.c: 263: break;
 20160  0051C6  0012               	return	
 20161  0051C8                     
 20162                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 20163                           
 20164                           ; BSR set to: 0
 20165  0051C8  010D               	movlb	13	; () banked
 20166  0051CA  5132               	movf	50,w,b	;volatile
 20167  0051CC  1133               	iorwf	51,w,b	;volatile
 20168  0051CE  A4D8               	btfss	status,2,c
 20169  0051D0  0012               	return	
 20170                           
 20171                           ; BSR set to: 13
 20172  0051D2  0536               	decf	54,w,b	;volatile
 20173  0051D4  1137               	iorwf	55,w,b	;volatile
 20174  0051D6  A4D8               	btfss	status,2,c
 20175  0051D8  0012               	return	
 20176                           
 20177                           ; BSR set to: 13
 20178                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 20179                           
 20180                           ; BSR set to: 13
 20181                           
 20182                           ; BSR set to: 13
 20183                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 20184  0051DA  0E00               	movlw	0
 20185  0051DC  6F38               	movwf	56,b	;volatile
 20186                           
 20187                           ; BSR set to: 13
 20188                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 20189  0051DE  0E38               	movlw	56
 20190  0051E0  0100               	movlb	0	; () banked
 20191  0051E2  6F66               	movwf	_inPipes& (0+255),b
 20192  0051E4  0E0D               	movlw	13
 20193  0051E6  6F67               	movwf	(_inPipes+1)& (0+255),b
 20194                           
 20195                           ; BSR set to: 0
 20196  0051E8  0E00               	movlw	0
 20197  0051EA  6F6B               	movwf	(_inPipes+5)& (0+255),b
 20198  0051EC  0E01               	movlw	1
 20199  0051EE  6F6A               	movwf	(_inPipes+4)& (0+255),b
 20200                           
 20201                           ; BSR set to: 0
 20202  0051F0  0EC1               	movlw	193
 20203  0051F2  6F69               	movwf	(_inPipes+3)& (0+255),b
 20204                           
 20205                           ; BSR set to: 0
 20206                           ;usb_device_msd.c: 278: }
 20207                           
 20208                           ;usb_device_msd.c: 277: break;
 20209  0051F4  0012               	return	
 20210  0051F6                     l529:
 20211                           
 20212                           ; BSR set to: 0
 20213  0051F6  010D               	movlb	13	; () banked
 20214  0051F8  5131               	movf	49,w,b	;volatile
 20215                           
 20216                           ; Switch size 1, requested type "space"
 20217                           ; Number of cases is 2, Range of values is 254 to 255
 20218                           ; switch strategies available:
 20219                           ; Name         Instructions Cycles
 20220                           ; simple_byte            7     4 (average)
 20221                           ;	Chosen strategy is simple_byte
 20222  0051FA  0AFE               	xorlw	254	; case 254
 20223  0051FC  B4D8               	btfsc	status,2,c
 20224  0051FE  D7E4               	goto	l546
 20225  005200  0A01               	xorlw	1	; case 255
 20226  005202  A4D8               	btfss	status,2,c
 20227  005204  0012               	return	
 20228  005206  D7A9               	goto	l530
 20229  005208                     __end_of_USBCheckMSDRequest:
 20230                           	opt stack 0
 20231                           tblptru	equ	0xFF8
 20232                           tblptrh	equ	0xFF7
 20233                           tblptrl	equ	0xFF6
 20234                           tablat	equ	0xFF5
 20235                           prodh	equ	0xFF4
 20236                           prodl	equ	0xFF3
 20237                           intcon	equ	0xFF2
 20238                           intcon2	equ	0xFF1
 20239                           intcon3	equ	0xFF0
 20240                           indf0	equ	0xFEF
 20241                           postinc0	equ	0xFEE
 20242                           fsr0h	equ	0xFEA
 20243                           fsr0l	equ	0xFE9
 20244                           wreg	equ	0xFE8
 20245                           indf1	equ	0xFE7
 20246                           postdec1	equ	0xFE5
 20247                           plusw1	equ	0xFE3
 20248                           fsr1h	equ	0xFE2
 20249                           fsr1l	equ	0xFE1
 20250                           indf2	equ	0xFDF
 20251                           postinc2	equ	0xFDE
 20252                           postdec2	equ	0xFDD
 20253                           plusw2	equ	0xFDB
 20254                           fsr2h	equ	0xFDA
 20255                           fsr2l	equ	0xFD9
 20256                           status	equ	0xFD8
 20257                           
 20258 ;; *************** function _USBCheckHIDRequest *****************
 20259 ;; Defined at:
 20260 ;;		line 153 in file "usb_device_hid.c"
 20261 ;; Parameters:    Size  Location     Type
 20262 ;;		None
 20263 ;; Auto vars:     Size  Location     Type
 20264 ;;		None
 20265 ;; Return value:  Size  Location     Type
 20266 ;;                  1    wreg      void 
 20267 ;; Registers used:
 20268 ;;		wreg, status,2, status,0
 20269 ;; Tracked objects:
 20270 ;;		On entry : 0/0
 20271 ;;		On exit  : 0/0
 20272 ;;		Unchanged: 0/0
 20273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20278 ;;Total ram usage:        0 bytes
 20279 ;; Hardware stack levels used:    1
 20280 ;; This function calls:
 20281 ;;		Nothing
 20282 ;; This function is called by:
 20283 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20284 ;; This function uses a non-reentrant model
 20285 ;;
 20286                           
 20287                           	psect	text92
 20288  00482A                     __ptext92:
 20289                           	opt stack 0
 20290  00482A                     _USBCheckHIDRequest:
 20291                           	opt stack 28
 20292                           
 20293                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 20294                           
 20295                           ;incstack = 0
 20296  00482A  010D               	movlb	13	; () banked
 20297  00482C  5130               	movf	48,w,b	;volatile
 20298  00482E  0B1F               	andlw	31
 20299  004830  06E8               	decf	wreg,f,c
 20300  004832  A4D8               	btfss	status,2,c
 20301  004834  0012               	return	
 20302                           
 20303                           ; BSR set to: 13
 20304                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 20305                           
 20306                           ; BSR set to: 13
 20307                           
 20308                           ; BSR set to: 13
 20309  004836  5134               	movf	52,w,b	;volatile
 20310  004838  A4D8               	btfss	status,2,c
 20311  00483A  0012               	return	
 20312                           
 20313                           ; BSR set to: 13
 20314                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 20315                           
 20316                           ; BSR set to: 13
 20317                           
 20318                           ; BSR set to: 13
 20319  00483C  0E06               	movlw	6
 20320  00483E  1931               	xorwf	49,w,b	;volatile
 20321  004840  B4D8               	btfsc	status,2,c
 20322  004842  D01A               	goto	l411
 20323  004844  D022               	goto	l414
 20324  004846                     
 20325                           ; BSR set to: 13
 20326                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 20327                           
 20328                           ; BSR set to: 13
 20329  004846  0100               	movlb	0	; () banked
 20330  004848  05B4               	decf	_USBActiveConfiguration& (0+255),w,b
 20331  00484A  A4D8               	btfss	status,2,c
 20332  00484C  D01E               	goto	l414
 20333                           
 20334                           ; BSR set to: 0
 20335                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 20336  00484E  0EB9               	movlw	low (_configDescriptor1+18)
 20337  004850  6F66               	movwf	_inPipes& (0+255),b
 20338  004852  0E8E               	movlw	high (_configDescriptor1+18)
 20339  004854  6F67               	movwf	(_inPipes+1)& (0+255),b
 20340                           
 20341                           ; BSR set to: 0
 20342  004856  0E00               	movlw	0
 20343  004858  6F6B               	movwf	(_inPipes+5)& (0+255),b
 20344  00485A  0E09               	movlw	9
 20345  00485C  D00B               	goto	L13
 20346  00485E                     l9848:
 20347                           
 20348                           ; BSR set to: 0
 20349  00485E  0EC0               	movlw	192
 20350  004860  6F69               	movwf	(_inPipes+3)& (0+255),b
 20351                           
 20352                           ; BSR set to: 0
 20353                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 20354  004862  D013               	goto	l414
 20355  004864                     
 20356                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 20357                           
 20358                           ; BSR set to: 0
 20359  004864  0E6D               	movlw	low _hid_rpt01
 20360  004866  0100               	movlb	0	; () banked
 20361  004868  6F66               	movwf	_inPipes& (0+255),b
 20362  00486A  0E8F               	movlw	high _hid_rpt01
 20363  00486C  6F67               	movwf	(_inPipes+1)& (0+255),b
 20364                           
 20365                           ; BSR set to: 0
 20366  00486E  0E00               	movlw	0
 20367  004870  6F6B               	movwf	(_inPipes+5)& (0+255),b
 20368  004872  0E1D               	movlw	29
 20369  004874                     L13:
 20370  004874  6F6A               	movwf	(_inPipes+4)& (0+255),b
 20371  004876  D7F3               	goto	l9848
 20372  004878                     l411:
 20373                           
 20374                           ; BSR set to: 0
 20375  004878  010D               	movlb	13	; () banked
 20376  00487A  5133               	movf	51,w,b	;volatile
 20377                           
 20378                           ; Switch size 1, requested type "space"
 20379                           ; Number of cases is 3, Range of values is 33 to 35
 20380                           ; switch strategies available:
 20381                           ; Name         Instructions Cycles
 20382                           ; simple_byte           10     6 (average)
 20383                           ;	Chosen strategy is simple_byte
 20384  00487C  0A21               	xorlw	33	; case 33
 20385  00487E  B4D8               	btfsc	status,2,c
 20386  004880  D7E2               	goto	l412
 20387  004882  0A03               	xorlw	3	; case 34
 20388  004884  B4D8               	btfsc	status,2,c
 20389  004886  D7EE               	goto	l415
 20390  004888  0A01               	xorlw	1	; case 35
 20391  00488A                     l414:
 20392                           
 20393                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 20394                           
 20395                           ; BSR set to: 13
 20396                           
 20397                           ; BSR set to: 13
 20398  00488A  010D               	movlb	13	; () banked
 20399  00488C  3930               	swapf	48,w,b	;volatile
 20400  00488E  32E8               	rrcf	wreg,f,c
 20401  004890  0B03               	andlw	3
 20402  004892  06E8               	decf	wreg,f,c
 20403  004894  A4D8               	btfss	status,2,c
 20404  004896  0012               	return	
 20405  004898  D024               	goto	l418
 20406  00489A                     
 20407                           ; BSR set to: 13
 20408                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 20409                           
 20410                           ; BSR set to: 13
 20411  00489A  0EB2               	movlw	low _idle_rate
 20412  00489C  0100               	movlb	0	; () banked
 20413  00489E  6F66               	movwf	_inPipes& (0+255),b
 20414  0048A0  0E00               	movlw	high _idle_rate
 20415  0048A2  6F67               	movwf	(_inPipes+1)& (0+255),b
 20416                           
 20417                           ; BSR set to: 0
 20418  0048A4  0E00               	movlw	0
 20419  0048A6  6F6B               	movwf	(_inPipes+5)& (0+255),b
 20420  0048A8  0E01               	movlw	1
 20421  0048AA  6F6A               	movwf	(_inPipes+4)& (0+255),b
 20422                           
 20423                           ; BSR set to: 0
 20424  0048AC  0EC1               	movlw	193
 20425  0048AE  6F69               	movwf	(_inPipes+3)& (0+255),b
 20426                           
 20427                           ;usb_device_hid.c: 223: break;
 20428  0048B0  0012               	return	
 20429  0048B2                     
 20430                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 20431                           
 20432                           ; BSR set to: 0
 20433  0048B2  0E80               	movlw	128
 20434  0048B4  0100               	movlb	0	; () banked
 20435  0048B6  6F69               	movwf	(_inPipes+3)& (0+255),b
 20436                           
 20437                           ; BSR set to: 0
 20438                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 20439  0048B8  CD33 F0B2          	movff	3379,_idle_rate	;volatile
 20440                           
 20441                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 20442  0048BC  0012               	return	
 20443  0048BE                     
 20444                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 20445                           
 20446                           ; BSR set to: 0
 20447  0048BE  0EB1               	movlw	low _active_protocol
 20448  0048C0  0100               	movlb	0	; () banked
 20449  0048C2  6F66               	movwf	_inPipes& (0+255),b
 20450  0048C4  0E00               	movlw	high _active_protocol
 20451  0048C6  6F67               	movwf	(_inPipes+1)& (0+255),b
 20452                           
 20453                           ; BSR set to: 0
 20454  0048C8  0E00               	movlw	0
 20455  0048CA  6F6B               	movwf	(_inPipes+5)& (0+255),b
 20456  0048CC  0E01               	movlw	1
 20457  0048CE  6F6A               	movwf	(_inPipes+4)& (0+255),b
 20458                           
 20459                           ; BSR set to: 0
 20460  0048D0  0E81               	movlw	129
 20461  0048D2  6F69               	movwf	(_inPipes+3)& (0+255),b
 20462                           
 20463                           ;usb_device_hid.c: 234: break;
 20464  0048D4  0012               	return	
 20465  0048D6                     
 20466                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 20467                           
 20468                           ; BSR set to: 0
 20469  0048D6  0E80               	movlw	128
 20470  0048D8  0100               	movlb	0	; () banked
 20471  0048DA  6F69               	movwf	(_inPipes+3)& (0+255),b
 20472                           
 20473                           ; BSR set to: 0
 20474                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 20475  0048DC  CD32 F0B1          	movff	3378,_active_protocol	;volatile
 20476                           
 20477                           ; BSR set to: 0
 20478                           ;usb_device_hid.c: 239: }
 20479                           
 20480                           ;usb_device_hid.c: 238: break;
 20481  0048E0  0012               	return	
 20482  0048E2                     l418:
 20483                           
 20484                           ; BSR set to: 0
 20485  0048E2  010D               	movlb	13	; () banked
 20486  0048E4  5131               	movf	49,w,b	;volatile
 20487                           
 20488                           ; Switch size 1, requested type "space"
 20489                           ; Number of cases is 6, Range of values is 1 to 11
 20490                           ; switch strategies available:
 20491                           ; Name         Instructions Cycles
 20492                           ; simple_byte           19    10 (average)
 20493                           ;	Chosen strategy is simple_byte
 20494  0048E6  0A01               	xorlw	1	; case 1
 20495  0048E8  B4D8               	btfsc	status,2,c
 20496  0048EA  0012               	return	
 20497  0048EC  0A03               	xorlw	3	; case 2
 20498  0048EE  B4D8               	btfsc	status,2,c
 20499  0048F0  D7D4               	goto	l422
 20500  0048F2  0A01               	xorlw	1	; case 3
 20501  0048F4  B4D8               	btfsc	status,2,c
 20502  0048F6  D7E3               	goto	l424
 20503  0048F8  0A0A               	xorlw	10	; case 9
 20504  0048FA  B4D8               	btfsc	status,2,c
 20505  0048FC  0012               	return	
 20506  0048FE  0A03               	xorlw	3	; case 10
 20507  004900  B4D8               	btfsc	status,2,c
 20508  004902  D7D7               	goto	l423
 20509  004904  0A01               	xorlw	1	; case 11
 20510  004906  A4D8               	btfss	status,2,c
 20511  004908  0012               	return	
 20512  00490A  D7E5               	goto	l425
 20513  00490C                     __end_of_USBCheckHIDRequest:
 20514                           	opt stack 0
 20515                           tblptru	equ	0xFF8
 20516                           tblptrh	equ	0xFF7
 20517                           tblptrl	equ	0xFF6
 20518                           tablat	equ	0xFF5
 20519                           prodh	equ	0xFF4
 20520                           prodl	equ	0xFF3
 20521                           intcon	equ	0xFF2
 20522                           intcon2	equ	0xFF1
 20523                           intcon3	equ	0xFF0
 20524                           indf0	equ	0xFEF
 20525                           postinc0	equ	0xFEE
 20526                           fsr0h	equ	0xFEA
 20527                           fsr0l	equ	0xFE9
 20528                           wreg	equ	0xFE8
 20529                           indf1	equ	0xFE7
 20530                           postdec1	equ	0xFE5
 20531                           plusw1	equ	0xFE3
 20532                           fsr1h	equ	0xFE2
 20533                           fsr1l	equ	0xFE1
 20534                           indf2	equ	0xFDF
 20535                           postinc2	equ	0xFDE
 20536                           postdec2	equ	0xFDD
 20537                           plusw2	equ	0xFDB
 20538                           fsr2h	equ	0xFDA
 20539                           fsr2l	equ	0xFD9
 20540                           status	equ	0xFD8
 20541                           
 20542 ;; *************** function _SYSTEM_Initialize *****************
 20543 ;; Defined at:
 20544 ;;		line 80 in file "system.c"
 20545 ;; Parameters:    Size  Location     Type
 20546 ;;  state           1    wreg     enum E6623
 20547 ;; Auto vars:     Size  Location     Type
 20548 ;;  state           1    4[COMRAM] enum E6623
 20549 ;;  pll_startup_    2    2[COMRAM] unsigned int 
 20550 ;;  pll_startup_    2    0[COMRAM] unsigned int 
 20551 ;; Return value:  Size  Location     Type
 20552 ;;                  1    wreg      void 
 20553 ;; Registers used:
 20554 ;;		wreg, status,2, status,0
 20555 ;; Tracked objects:
 20556 ;;		On entry : 0/0
 20557 ;;		On exit  : 0/0
 20558 ;;		Unchanged: 0/0
 20559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20561 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20563 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20564 ;;Total ram usage:        5 bytes
 20565 ;; Hardware stack levels used:    1
 20566 ;; This function calls:
 20567 ;;		Nothing
 20568 ;; This function is called by:
 20569 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20570 ;;		_main
 20571 ;; This function uses a non-reentrant model
 20572 ;;
 20573                           
 20574                           	psect	text93
 20575  00719C                     __ptext93:
 20576                           	opt stack 0
 20577  00719C                     _SYSTEM_Initialize:
 20578                           	opt stack 28
 20579                           
 20580                           ;incstack = 0
 20581                           ;SYSTEM_Initialize@state stored from wreg
 20582  00719C  6E05               	movwf	SYSTEM_Initialize@state,c
 20583                           
 20584                           ;system.c: 82: switch(state)
 20585  00719E  D01D               	goto	l920
 20586  0071A0                     
 20587                           ;system.c: 91: {;system.c: 92: unsigned int pll_startup_counter = 600;
 20588  0071A0  0E02               	movlw	2
 20589  0071A2  6E02               	movwf	SYSTEM_Initialize@pll_startup_counter+1,c
 20590  0071A4  0E58               	movlw	88
 20591  0071A6  6E01               	movwf	SYSTEM_Initialize@pll_startup_counter,c
 20592                           
 20593                           ;system.c: 93: OSCTUNEbits.PLLEN = 1;
 20594  0071A8  8C9B               	bsf	3995,6,c	;volatile
 20595  0071AA                     l10034:
 20596  0071AA  0601               	decf	SYSTEM_Initialize@pll_startup_counter,f,c
 20597  0071AC  A0D8               	btfss	status,0,c
 20598  0071AE  0602               	decf	SYSTEM_Initialize@pll_startup_counter+1,f,c
 20599  0071B0  2801               	incf	SYSTEM_Initialize@pll_startup_counter,w,c
 20600  0071B2  E1FB               	bnz	l10034
 20601  0071B4  2802               	incf	SYSTEM_Initialize@pll_startup_counter+1,w,c
 20602  0071B6  B4D8               	btfsc	status,2,c
 20603  0071B8  0012               	return	
 20604  0071BA  D7F7               	goto	l923
 20605  0071BC                     
 20606                           ;system.c: 119: OSCCON = 0x70;
 20607  0071BC  0E70               	movlw	112
 20608  0071BE  6ED3               	movwf	4051,c	;volatile
 20609                           
 20610                           ;system.c: 125: {;system.c: 126: unsigned int pll_startup_counter = 800;
 20611  0071C0  0E03               	movlw	3
 20612  0071C2  6E04               	movwf	SYSTEM_Initialize@pll_startup_counter_3026+1,c
 20613  0071C4  0E20               	movlw	32
 20614  0071C6  6E03               	movwf	SYSTEM_Initialize@pll_startup_counter_3026,c
 20615  0071C8                     l10038:
 20616  0071C8  0603               	decf	SYSTEM_Initialize@pll_startup_counter_3026,f,c
 20617  0071CA  A0D8               	btfss	status,0,c
 20618  0071CC  0604               	decf	SYSTEM_Initialize@pll_startup_counter_3026+1,f,c
 20619  0071CE  2803               	incf	SYSTEM_Initialize@pll_startup_counter_3026,w,c
 20620  0071D0  E1FB               	bnz	l10038
 20621  0071D2  2804               	incf	SYSTEM_Initialize@pll_startup_counter_3026+1,w,c
 20622  0071D4  B4D8               	btfsc	status,2,c
 20623  0071D6  0012               	return	
 20624  0071D8  D7F7               	goto	l929
 20625  0071DA                     l920:
 20626  0071DA  5005               	movf	SYSTEM_Initialize@state,w,c
 20627                           
 20628                           ; Switch size 1, requested type "space"
 20629                           ; Number of cases is 3, Range of values is 0 to 2
 20630                           ; switch strategies available:
 20631                           ; Name         Instructions Cycles
 20632                           ; simple_byte           10     6 (average)
 20633                           ;	Chosen strategy is simple_byte
 20634  0071DC  0A00               	xorlw	0	; case 0
 20635  0071DE  B4D8               	btfsc	status,2,c
 20636  0071E0  D7DF               	goto	l921
 20637  0071E2  0A01               	xorlw	1	; case 1
 20638  0071E4  B4D8               	btfsc	status,2,c
 20639  0071E6  0012               	return	
 20640  0071E8  0A03               	xorlw	3	; case 2
 20641  0071EA  A4D8               	btfss	status,2,c
 20642  0071EC  0012               	return	
 20643  0071EE  D7E6               	goto	l927
 20644  0071F0                     __end_of_SYSTEM_Initialize:
 20645                           	opt stack 0
 20646                           tblptru	equ	0xFF8
 20647                           tblptrh	equ	0xFF7
 20648                           tblptrl	equ	0xFF6
 20649                           tablat	equ	0xFF5
 20650                           prodh	equ	0xFF4
 20651                           prodl	equ	0xFF3
 20652                           intcon	equ	0xFF2
 20653                           intcon2	equ	0xFF1
 20654                           intcon3	equ	0xFF0
 20655                           indf0	equ	0xFEF
 20656                           postinc0	equ	0xFEE
 20657                           fsr0h	equ	0xFEA
 20658                           fsr0l	equ	0xFE9
 20659                           wreg	equ	0xFE8
 20660                           indf1	equ	0xFE7
 20661                           postdec1	equ	0xFE5
 20662                           plusw1	equ	0xFE3
 20663                           fsr1h	equ	0xFE2
 20664                           fsr1l	equ	0xFE1
 20665                           indf2	equ	0xFDF
 20666                           postinc2	equ	0xFDE
 20667                           postdec2	equ	0xFDD
 20668                           plusw2	equ	0xFDB
 20669                           fsr2h	equ	0xFDA
 20670                           fsr2l	equ	0xFD9
 20671                           status	equ	0xFD8
 20672                           
 20673 ;; *************** function _MSDTransferTerminated *****************
 20674 ;; Defined at:
 20675 ;;		line 1674 in file "usb_device_msd.c"
 20676 ;; Parameters:    Size  Location     Type
 20677 ;;  handle          2   11[COMRAM] PTR void 
 20678 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 20679 ;;		 -> BDT(48), 
 20680 ;; Auto vars:     Size  Location     Type
 20681 ;;		None
 20682 ;; Return value:  Size  Location     Type
 20683 ;;                  1    wreg      void 
 20684 ;; Registers used:
 20685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20686 ;; Tracked objects:
 20687 ;;		On entry : 0/0
 20688 ;;		On exit  : 0/0
 20689 ;;		Unchanged: 0/0
 20690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20691 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20692 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20694 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20695 ;;Total ram usage:        4 bytes
 20696 ;; Hardware stack levels used:    1
 20697 ;; Hardware stack levels required when called:    1
 20698 ;; This function calls:
 20699 ;;		_USBStallEndpoint
 20700 ;;		_USBTransferOnePacket
 20701 ;; This function is called by:
 20702 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20703 ;; This function uses a non-reentrant model
 20704 ;;
 20705                           
 20706                           	psect	text94
 20707  00709A                     __ptext94:
 20708                           	opt stack 0
 20709  00709A                     _MSDTransferTerminated:
 20710                           	opt stack 27
 20711                           
 20712                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 20713                           
 20714                           ;incstack = 0
 20715  00709A  0100               	movlb	0	; () banked
 20716  00709C  519A               	movf	_MSDCBWValid& (0+255),w,b
 20717  00709E  A4D8               	btfss	status,2,c
 20718  0070A0  D00B               	goto	l764
 20719                           
 20720                           ; BSR set to: 0
 20721                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 20722  0070A2  0E01               	movlw	1
 20723  0070A4  6E01               	movwf	USBStallEndpoint@dir,c
 20724  0070A6  0E02               	movlw	2
 20725  0070A8  EC26  F020         	call	_USBStallEndpoint
 20726                           
 20727                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 20728  0070AC  0E00               	movlw	0
 20729  0070AE  6E01               	movwf	USBStallEndpoint@dir,c
 20730  0070B0  0E02               	movlw	2
 20731  0070B2  EC26  F020         	call	_USBStallEndpoint
 20732                           
 20733                           ;usb_device_msd.c: 1681: }
 20734  0070B6  0012               	return	
 20735  0070B8                     l764:
 20736  0070B8  C076  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2407
 20737  0070BC  C077  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2407+1
 20738  0070C0  500E               	movf	_MSDTransferTerminated$2407,w,c
 20739  0070C2  180C               	xorwf	MSDTransferTerminated@handle,w,c
 20740  0070C4  E114               	bnz	l767
 20741  0070C6  500F               	movf	_MSDTransferTerminated$2407+1,w,c
 20742  0070C8  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 20743  0070CA  A4D8               	btfss	status,2,c
 20744  0070CC  0012               	return	
 20745                           
 20746                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 20747  0070CE  0E00               	movlw	0
 20748  0070D0  6E01               	movwf	USBTransferOnePacket@dir,c
 20749  0070D2  0E40               	movlw	64
 20750  0070D4  6E02               	movwf	USBTransferOnePacket@data,c
 20751  0070D6  0E0D               	movlw	13
 20752  0070D8  6E03               	movwf	USBTransferOnePacket@data+1,c
 20753  0070DA  0E40               	movlw	64
 20754  0070DC  6E04               	movwf	USBTransferOnePacket@len,c
 20755  0070DE  0E02               	movlw	2
 20756  0070E0  EC32  F022         	call	_USBTransferOnePacket
 20757  0070E4  C001  F08A         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 20758  0070E8  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 20759  0070EC  0012               	return	
 20760  0070EE                     l767:
 20761  0070EE  0012               	return		;funcret
 20762  0070F0                     __end_of_MSDTransferTerminated:
 20763                           	opt stack 0
 20764                           tblptru	equ	0xFF8
 20765                           tblptrh	equ	0xFF7
 20766                           tblptrl	equ	0xFF6
 20767                           tablat	equ	0xFF5
 20768                           prodh	equ	0xFF4
 20769                           prodl	equ	0xFF3
 20770                           intcon	equ	0xFF2
 20771                           intcon2	equ	0xFF1
 20772                           intcon3	equ	0xFF0
 20773                           indf0	equ	0xFEF
 20774                           postinc0	equ	0xFEE
 20775                           fsr0h	equ	0xFEA
 20776                           fsr0l	equ	0xFE9
 20777                           wreg	equ	0xFE8
 20778                           indf1	equ	0xFE7
 20779                           postdec1	equ	0xFE5
 20780                           plusw1	equ	0xFE3
 20781                           fsr1h	equ	0xFE2
 20782                           fsr1l	equ	0xFE1
 20783                           indf2	equ	0xFDF
 20784                           postinc2	equ	0xFDE
 20785                           postdec2	equ	0xFDD
 20786                           plusw2	equ	0xFDB
 20787                           fsr2h	equ	0xFDA
 20788                           fsr2l	equ	0xFD9
 20789                           status	equ	0xFD8
 20790                           
 20791 ;; *************** function _APP_DeviceMSDInitialize *****************
 20792 ;; Defined at:
 20793 ;;		line 84 in file "app_device_msd.c"
 20794 ;; Parameters:    Size  Location     Type
 20795 ;;		None
 20796 ;; Auto vars:     Size  Location     Type
 20797 ;;		None
 20798 ;; Return value:  Size  Location     Type
 20799 ;;                  1    wreg      void 
 20800 ;; Registers used:
 20801 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20802 ;; Tracked objects:
 20803 ;;		On entry : 0/0
 20804 ;;		On exit  : 0/0
 20805 ;;		Unchanged: 0/0
 20806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20811 ;;Total ram usage:        0 bytes
 20812 ;; Hardware stack levels used:    1
 20813 ;; Hardware stack levels required when called:    2
 20814 ;; This function calls:
 20815 ;;		_USBEnableEndpoint
 20816 ;;		_USBMSDInit
 20817 ;; This function is called by:
 20818 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20819 ;; This function uses a non-reentrant model
 20820 ;;
 20821                           
 20822                           	psect	text95
 20823  007D58                     __ptext95:
 20824                           	opt stack 0
 20825  007D58                     _APP_DeviceMSDInitialize:
 20826                           	opt stack 26
 20827                           
 20828                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 20829                           
 20830                           ;incstack = 0
 20831  007D58  0E1E               	movlw	30
 20832  007D5A  6E09               	movwf	USBEnableEndpoint@options,c
 20833  007D5C  0E02               	movlw	2
 20834  007D5E  ECE9  F03A         	call	_USBEnableEndpoint
 20835                           
 20836                           ;app_device_msd.c: 93: USBMSDInit();
 20837  007D62  ECAA  F020         	call	_USBMSDInit	;wreg free
 20838  007D66  0012               	return		;funcret
 20839  007D68                     __end_of_APP_DeviceMSDInitialize:
 20840                           	opt stack 0
 20841                           tblptru	equ	0xFF8
 20842                           tblptrh	equ	0xFF7
 20843                           tblptrl	equ	0xFF6
 20844                           tablat	equ	0xFF5
 20845                           prodh	equ	0xFF4
 20846                           prodl	equ	0xFF3
 20847                           intcon	equ	0xFF2
 20848                           intcon2	equ	0xFF1
 20849                           intcon3	equ	0xFF0
 20850                           indf0	equ	0xFEF
 20851                           postinc0	equ	0xFEE
 20852                           fsr0h	equ	0xFEA
 20853                           fsr0l	equ	0xFE9
 20854                           wreg	equ	0xFE8
 20855                           indf1	equ	0xFE7
 20856                           postdec1	equ	0xFE5
 20857                           plusw1	equ	0xFE3
 20858                           fsr1h	equ	0xFE2
 20859                           fsr1l	equ	0xFE1
 20860                           indf2	equ	0xFDF
 20861                           postinc2	equ	0xFDE
 20862                           postdec2	equ	0xFDD
 20863                           plusw2	equ	0xFDB
 20864                           fsr2h	equ	0xFDA
 20865                           fsr2l	equ	0xFD9
 20866                           status	equ	0xFD8
 20867                           
 20868 ;; *************** function _USBMSDInit *****************
 20869 ;; Defined at:
 20870 ;;		line 142 in file "usb_device_msd.c"
 20871 ;; Parameters:    Size  Location     Type
 20872 ;;		None
 20873 ;; Auto vars:     Size  Location     Type
 20874 ;;		None
 20875 ;; Return value:  Size  Location     Type
 20876 ;;                  1    wreg      void 
 20877 ;; Registers used:
 20878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20879 ;; Tracked objects:
 20880 ;;		On entry : 0/0
 20881 ;;		On exit  : 0/0
 20882 ;;		Unchanged: 0/0
 20883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20886 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20887 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20888 ;;Total ram usage:        3 bytes
 20889 ;; Hardware stack levels used:    1
 20890 ;; Hardware stack levels required when called:    1
 20891 ;; This function calls:
 20892 ;;		_ExternalFlash_MediaDetect
 20893 ;;		_ExternalFlash_MediaInitialize
 20894 ;;		_ResetSenseData
 20895 ;;		_USBTransferOnePacket
 20896 ;; This function is called by:
 20897 ;;		_APP_DeviceMSDInitialize
 20898 ;; This function uses a non-reentrant model
 20899 ;;
 20900                           
 20901                           	psect	text96
 20902  004154                     __ptext96:
 20903                           	opt stack 0
 20904  004154                     _USBMSDInit:
 20905                           	opt stack 26
 20906                           
 20907                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 20908                           
 20909                           ;incstack = 0
 20910  004154  0E00               	movlw	0
 20911  004156  6E01               	movwf	USBTransferOnePacket@dir,c
 20912  004158  0E40               	movlw	64
 20913  00415A  6E02               	movwf	USBTransferOnePacket@data,c
 20914  00415C  0E0D               	movlw	13
 20915  00415E  6E03               	movwf	USBTransferOnePacket@data+1,c
 20916  004160  0E40               	movlw	64
 20917  004162  6E04               	movwf	USBTransferOnePacket@len,c
 20918  004164  0E02               	movlw	2
 20919  004166  EC32  F022         	call	_USBTransferOnePacket
 20920  00416A  C001  F08A         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 20921  00416E  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 20922  004172  C070  F088         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 20923  004176  C071  F089         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 20924                           
 20925                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 20926  00417A  0E00               	movlw	0
 20927  00417C  0100               	movlb	0	; () banked
 20928  00417E  6FA2               	movwf	_MSD_State& (0+255),b
 20929                           
 20930                           ; BSR set to: 0
 20931                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 20932  004180  69A1               	setf	_MSDCommandState& (0+255),b
 20933                           
 20934                           ; BSR set to: 0
 20935                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 20936  004182  0E00               	movlw	0
 20937  004184  6FA0               	movwf	_MSDReadState& (0+255),b
 20938                           
 20939                           ; BSR set to: 0
 20940                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 20941  004186  0E00               	movlw	0
 20942  004188  6F9F               	movwf	_MSDWriteState& (0+255),b
 20943                           
 20944                           ; BSR set to: 0
 20945                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 20946  00418A  0E00               	movlw	0
 20947  00418C  6F9B               	movwf	_MSDHostNoData& (0+255),b
 20948                           
 20949                           ; BSR set to: 0
 20950                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 20951  00418E  0E00               	movlw	0
 20952  004190  0101               	movlb	1	; () banked
 20953  004192  6F50               	movwf	_gblNumBLKS& (0+255),b
 20954  004194  0E00               	movlw	0
 20955  004196  6F51               	movwf	(_gblNumBLKS+1)& (0+255),b
 20956  004198  0E00               	movlw	0
 20957  00419A  6F52               	movwf	(_gblNumBLKS+2)& (0+255),b
 20958  00419C  0E00               	movlw	0
 20959  00419E  6F53               	movwf	(_gblNumBLKS+3)& (0+255),b
 20960                           
 20961                           ; BSR set to: 1
 20962                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 20963  0041A0  0E00               	movlw	0
 20964  0041A2  6F4C               	movwf	_gblBLKLen& (0+255),b
 20965  0041A4  0E00               	movlw	0
 20966  0041A6  6F4D               	movwf	(_gblBLKLen+1)& (0+255),b
 20967  0041A8  0E00               	movlw	0
 20968  0041AA  6F4E               	movwf	(_gblBLKLen+2)& (0+255),b
 20969  0041AC  0E00               	movlw	0
 20970  0041AE  6F4F               	movwf	(_gblBLKLen+3)& (0+255),b
 20971                           
 20972                           ; BSR set to: 1
 20973                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 20974  0041B0  0E01               	movlw	1
 20975  0041B2  0100               	movlb	0	; () banked
 20976  0041B4  6F9A               	movwf	_MSDCBWValid& (0+255),b
 20977                           
 20978                           ; BSR set to: 0
 20979                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 20980  0041B6  0E00               	movlw	0
 20981  0041B8  0101               	movlb	1	; () banked
 20982  0041BA  6F71               	movwf	(_gblMediaPresent+1)& (0+255),b
 20983  0041BC  0E00               	movlw	0
 20984  0041BE  6F70               	movwf	_gblMediaPresent& (0+255),b
 20985                           
 20986                           ; BSR set to: 1
 20987                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 20988  0041C0  0E00               	movlw	0
 20989  0041C2  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 20990  0041C4  D046               	goto	l518
 20991  0041C6                     
 20992                           ; BSR set to: 1
 20993                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 20994                           
 20995                           ; BSR set to: 1
 20996  0041C6  510D               	movf	(_gblCBW+13)& (0+255),w,b
 20997  0041C8  0D01               	mullw	1
 20998  0041CA  0E9C               	movlw	low _SoftDetach
 20999  0041CC  24F3               	addwf	prodl,w,c
 21000  0041CE  6ED9               	movwf	fsr2l,c
 21001  0041D0  0E00               	movlw	high _SoftDetach
 21002  0041D2  20F4               	addwfc	prodh,w,c
 21003  0041D4  6EDA               	movwf	fsr2h,c
 21004  0041D6  0E00               	movlw	0
 21005  0041D8  6EDF               	movwf	indf2,c
 21006                           
 21007                           ; BSR set to: 1
 21008                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 21009  0041DA  C1F0  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 21010  0041DE  C1F1  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 21011  0041E2  D801               	call	u6278
 21012  0041E4  D009               	goto	u6279
 21013  0041E6                     u6278:
 21014  0041E6  0005               	push	
 21015  0041E8  6EFA               	movwf	pclath,c
 21016  0041EA  51E8               	movf	(_LUN+6)& (0+255),w,b
 21017  0041EC  6EFD               	movwf	tosl,c
 21018  0041EE  51E9               	movf	(_LUN+7)& (0+255),w,b
 21019  0041F0  6EFE               	movwf	tosh,c
 21020  0041F2  6AFF               	clrf	tosu,c
 21021  0041F4  50FA               	movf	pclath,w,c
 21022  0041F6  0012               	return		;indir
 21023  0041F8                     u6279:
 21024  0041F8  0900               	iorlw	0
 21025  0041FA  B4D8               	btfsc	status,2,c
 21026  0041FC  D026               	goto	l521
 21027                           
 21028                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 21029  0041FE  C1F0  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 21030  004202  C1F1  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 21031  004206  D801               	call	u6298
 21032  004208  D00A               	goto	u6299
 21033  00420A                     u6298:
 21034  00420A  0005               	push	
 21035  00420C  6EFA               	movwf	pclath,c
 21036  00420E  0101               	movlb	1	; () banked
 21037  004210  51E2               	movf	_LUN& (0+255),w,b
 21038  004212  6EFD               	movwf	tosl,c
 21039  004214  51E3               	movf	(_LUN+1)& (0+255),w,b
 21040  004216  6EFE               	movwf	tosh,c
 21041  004218  6AFF               	clrf	tosu,c
 21042  00421A  50FA               	movf	pclath,w,c
 21043  00421C  0012               	return		;indir
 21044  00421E                     u6299:
 21045  00421E  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 21046  004220  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 21047  004222  B4D8               	btfsc	status,2,c
 21048  004224  D012               	goto	l521
 21049                           
 21050                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 21051  004226  C10D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 21052  00422A  0E01               	movlw	1
 21053  00422C  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 21054  00422E  0E00               	movlw	0
 21055  004230  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 21056  004232  2A0C               	incf	??_USBMSDInit,f,c
 21057  004234  D003               	goto	u6314
 21058  004236                     u6315:
 21059  004236  90D8               	bcf	status,0,c
 21060  004238  360D               	rlcf	??_USBMSDInit+1,f,c
 21061  00423A  360E               	rlcf	??_USBMSDInit+2,f,c
 21062  00423C                     u6314:
 21063  00423C  2E0C               	decfsz	??_USBMSDInit,f,c
 21064  00423E  D7FB               	goto	u6315
 21065  004240  500D               	movf	??_USBMSDInit+1,w,c
 21066  004242  0101               	movlb	1	; () banked
 21067  004244  1370               	iorwf	_gblMediaPresent& (0+255),f,b
 21068  004246  500E               	movf	??_USBMSDInit+2,w,c
 21069  004248  1371               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 21070  00424A                     l521:
 21071                           
 21072                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 21073                           
 21074                           ; BSR set to: 1
 21075                           
 21076                           ; BSR set to: 1
 21077  00424A  EC03  F036         	call	_ResetSenseData	;wreg free
 21078  00424E  0101               	movlb	1	; () banked
 21079  004250  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 21080  004252                     l518:
 21081                           
 21082                           ; BSR set to: 1
 21083                           
 21084                           ; BSR set to: 1
 21085  004252  510D               	movf	(_gblCBW+13)& (0+255),w,b
 21086  004254  A4D8               	btfss	status,2,c
 21087  004256  0012               	return	
 21088  004258  D7B6               	goto	l519
 21089  00425A                     __end_of_USBMSDInit:
 21090                           	opt stack 0
 21091                           tosu	equ	0xFFF
 21092                           tosh	equ	0xFFE
 21093                           tosl	equ	0xFFD
 21094                           pclath	equ	0xFFA
 21095                           tblptru	equ	0xFF8
 21096                           tblptrh	equ	0xFF7
 21097                           tblptrl	equ	0xFF6
 21098                           tablat	equ	0xFF5
 21099                           prodh	equ	0xFF4
 21100                           prodl	equ	0xFF3
 21101                           intcon	equ	0xFF2
 21102                           intcon2	equ	0xFF1
 21103                           intcon3	equ	0xFF0
 21104                           indf0	equ	0xFEF
 21105                           postinc0	equ	0xFEE
 21106                           fsr0h	equ	0xFEA
 21107                           fsr0l	equ	0xFE9
 21108                           wreg	equ	0xFE8
 21109                           indf1	equ	0xFE7
 21110                           postdec1	equ	0xFE5
 21111                           plusw1	equ	0xFE3
 21112                           fsr1h	equ	0xFE2
 21113                           fsr1l	equ	0xFE1
 21114                           indf2	equ	0xFDF
 21115                           postinc2	equ	0xFDE
 21116                           postdec2	equ	0xFDD
 21117                           plusw2	equ	0xFDB
 21118                           fsr2h	equ	0xFDA
 21119                           fsr2l	equ	0xFD9
 21120                           status	equ	0xFD8
 21121                           
 21122 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 21123 ;; Defined at:
 21124 ;;		line 47 in file "app_device_custom_hid.c"
 21125 ;; Parameters:    Size  Location     Type
 21126 ;;		None
 21127 ;; Auto vars:     Size  Location     Type
 21128 ;;		None
 21129 ;; Return value:  Size  Location     Type
 21130 ;;                  1    wreg      void 
 21131 ;; Registers used:
 21132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21133 ;; Tracked objects:
 21134 ;;		On entry : 0/0
 21135 ;;		On exit  : 0/0
 21136 ;;		Unchanged: 0/0
 21137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21142 ;;Total ram usage:        0 bytes
 21143 ;; Hardware stack levels used:    1
 21144 ;; Hardware stack levels required when called:    2
 21145 ;; This function calls:
 21146 ;;		_USBEnableEndpoint
 21147 ;;		_USBTransferOnePacket
 21148 ;; This function is called by:
 21149 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21150 ;; This function uses a non-reentrant model
 21151 ;;
 21152                           
 21153                           	psect	text97
 21154  00783A                     __ptext97:
 21155                           	opt stack 0
 21156  00783A                     _APP_DeviceCustomHIDInitialize:
 21157                           	opt stack 26
 21158                           
 21159                           ;app_device_custom_hid.c: 51: USBInHandle = 0;
 21160                           
 21161                           ; BSR set to: 1
 21162                           ;incstack = 0
 21163  00783A  0E00               	movlw	0
 21164  00783C  0101               	movlb	1	; () banked
 21165  00783E  6F6E               	movwf	_USBInHandle& (0+255),b
 21166  007840  0E00               	movlw	0
 21167  007842  6F6F               	movwf	(_USBInHandle+1)& (0+255),b
 21168                           
 21169                           ; BSR set to: 1
 21170                           ;app_device_custom_hid.c: 54: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 21171  007844  0E1E               	movlw	30
 21172  007846  6E09               	movwf	USBEnableEndpoint@options,c
 21173  007848  0E01               	movlw	1
 21174  00784A  ECE9  F03A         	call	_USBEnableEndpoint
 21175                           
 21176                           ;app_device_custom_hid.c: 57: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 21177  00784E  0E00               	movlw	0
 21178  007850  6E01               	movwf	USBTransferOnePacket@dir,c
 21179  007852  0E80               	movlw	low _ReceivedDataBuffer
 21180  007854  6E02               	movwf	USBTransferOnePacket@data,c
 21181  007856  0E02               	movlw	high _ReceivedDataBuffer
 21182  007858  6E03               	movwf	USBTransferOnePacket@data+1,c
 21183  00785A  0E40               	movlw	64
 21184  00785C  6E04               	movwf	USBTransferOnePacket@len,c
 21185  00785E  0E01               	movlw	1
 21186  007860  EC32  F022         	call	_USBTransferOnePacket
 21187  007864  C001  F084         	movff	?_USBTransferOnePacket,_USBOutHandle
 21188  007868  C002  F085         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 21189  00786C  0012               	return		;funcret
 21190  00786E                     __end_of_APP_DeviceCustomHIDInitialize:
 21191                           	opt stack 0
 21192                           tosu	equ	0xFFF
 21193                           tosh	equ	0xFFE
 21194                           tosl	equ	0xFFD
 21195                           pclath	equ	0xFFA
 21196                           tblptru	equ	0xFF8
 21197                           tblptrh	equ	0xFF7
 21198                           tblptrl	equ	0xFF6
 21199                           tablat	equ	0xFF5
 21200                           prodh	equ	0xFF4
 21201                           prodl	equ	0xFF3
 21202                           intcon	equ	0xFF2
 21203                           intcon2	equ	0xFF1
 21204                           intcon3	equ	0xFF0
 21205                           indf0	equ	0xFEF
 21206                           postinc0	equ	0xFEE
 21207                           fsr0h	equ	0xFEA
 21208                           fsr0l	equ	0xFE9
 21209                           wreg	equ	0xFE8
 21210                           indf1	equ	0xFE7
 21211                           postdec1	equ	0xFE5
 21212                           plusw1	equ	0xFE3
 21213                           fsr1h	equ	0xFE2
 21214                           fsr1l	equ	0xFE1
 21215                           indf2	equ	0xFDF
 21216                           postinc2	equ	0xFDE
 21217                           postdec2	equ	0xFDD
 21218                           plusw2	equ	0xFDB
 21219                           fsr2h	equ	0xFDA
 21220                           fsr2l	equ	0xFD9
 21221                           status	equ	0xFD8
 21222                           
 21223 ;; *************** function _USBEnableEndpoint *****************
 21224 ;; Defined at:
 21225 ;;		line 878 in file "usb_device.c"
 21226 ;; Parameters:    Size  Location     Type
 21227 ;;  ep              1    wreg     unsigned char 
 21228 ;;  options         1    8[COMRAM] unsigned char 
 21229 ;; Auto vars:     Size  Location     Type
 21230 ;;  ep              1   11[COMRAM] unsigned char 
 21231 ;;  p               2    9[COMRAM] PTR unsigned char 
 21232 ;;		 -> UEP0(1), 
 21233 ;; Return value:  Size  Location     Type
 21234 ;;                  1    wreg      void 
 21235 ;; Registers used:
 21236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21237 ;; Tracked objects:
 21238 ;;		On entry : 0/0
 21239 ;;		On exit  : 0/0
 21240 ;;		Unchanged: 0/0
 21241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21242 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21243 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21245 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21246 ;;Total ram usage:        4 bytes
 21247 ;; Hardware stack levels used:    1
 21248 ;; Hardware stack levels required when called:    1
 21249 ;; This function calls:
 21250 ;;		_USBConfigureEndpoint
 21251 ;; This function is called by:
 21252 ;;		_APP_DeviceCustomHIDInitialize
 21253 ;;		_APP_DeviceMSDInitialize
 21254 ;; This function uses a non-reentrant model
 21255 ;;
 21256                           
 21257                           	psect	text98
 21258  0075D2                     __ptext98:
 21259                           	opt stack 0
 21260  0075D2                     _USBEnableEndpoint:
 21261                           	opt stack 26
 21262                           
 21263                           ;incstack = 0
 21264                           ;USBEnableEndpoint@ep stored from wreg
 21265  0075D2  6E0C               	movwf	USBEnableEndpoint@ep,c
 21266                           
 21267                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 21268  0075D4  A409               	btfss	USBEnableEndpoint@options,2,c
 21269  0075D6  D005               	goto	l178
 21270                           
 21271                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 21272  0075D8  0E00               	movlw	0
 21273  0075DA  6E01               	movwf	USBConfigureEndpoint@direction,c
 21274  0075DC  500C               	movf	USBEnableEndpoint@ep,w,c
 21275  0075DE  ECAA  F02E         	call	_USBConfigureEndpoint
 21276  0075E2                     l178:
 21277                           
 21278                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 21279  0075E2  A209               	btfss	USBEnableEndpoint@options,1,c
 21280  0075E4  D005               	goto	l179
 21281                           
 21282                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 21283  0075E6  0E01               	movlw	1
 21284  0075E8  6E01               	movwf	USBConfigureEndpoint@direction,c
 21285  0075EA  500C               	movf	USBEnableEndpoint@ep,w,c
 21286  0075EC  ECAA  F02E         	call	_USBConfigureEndpoint
 21287  0075F0                     l179:
 21288                           
 21289                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 21290  0075F0  500C               	movf	USBEnableEndpoint@ep,w,c
 21291  0075F2  0D01               	mullw	1
 21292  0075F4  0E26               	movlw	38
 21293  0075F6  24F3               	addwf	prodl,w,c
 21294  0075F8  6E0A               	movwf	USBEnableEndpoint@p,c
 21295  0075FA  0E0F               	movlw	15
 21296  0075FC  20F4               	addwfc	prodh,w,c
 21297  0075FE  6E0B               	movwf	USBEnableEndpoint@p+1,c
 21298                           
 21299                           ;usb_device.c: 901: *p = options;
 21300  007600  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 21301  007604  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 21302  007608  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 21303  00760C  0012               	return		;funcret
 21304  00760E                     __end_of_USBEnableEndpoint:
 21305                           	opt stack 0
 21306                           tosu	equ	0xFFF
 21307                           tosh	equ	0xFFE
 21308                           tosl	equ	0xFFD
 21309                           pclath	equ	0xFFA
 21310                           tblptru	equ	0xFF8
 21311                           tblptrh	equ	0xFF7
 21312                           tblptrl	equ	0xFF6
 21313                           tablat	equ	0xFF5
 21314                           prodh	equ	0xFF4
 21315                           prodl	equ	0xFF3
 21316                           intcon	equ	0xFF2
 21317                           intcon2	equ	0xFF1
 21318                           intcon3	equ	0xFF0
 21319                           indf0	equ	0xFEF
 21320                           postinc0	equ	0xFEE
 21321                           fsr0h	equ	0xFEA
 21322                           fsr0l	equ	0xFE9
 21323                           wreg	equ	0xFE8
 21324                           indf1	equ	0xFE7
 21325                           postdec1	equ	0xFE5
 21326                           plusw1	equ	0xFE3
 21327                           fsr1h	equ	0xFE2
 21328                           fsr1l	equ	0xFE1
 21329                           indf2	equ	0xFDF
 21330                           postinc2	equ	0xFDE
 21331                           postdec2	equ	0xFDD
 21332                           plusw2	equ	0xFDB
 21333                           fsr2h	equ	0xFDA
 21334                           fsr2l	equ	0xFD9
 21335                           status	equ	0xFD8
 21336                           
 21337 ;; *************** function _USBConfigureEndpoint *****************
 21338 ;; Defined at:
 21339 ;;		line 1545 in file "usb_device.c"
 21340 ;; Parameters:    Size  Location     Type
 21341 ;;  EPNum           1    wreg     unsigned char 
 21342 ;;  direction       1    0[COMRAM] unsigned char 
 21343 ;; Auto vars:     Size  Location     Type
 21344 ;;  EPNum           1    5[COMRAM] unsigned char 
 21345 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 21346 ;;		 -> BDT(48), 
 21347 ;; Return value:  Size  Location     Type
 21348 ;;                  1    wreg      void 
 21349 ;; Registers used:
 21350 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21351 ;; Tracked objects:
 21352 ;;		On entry : 0/0
 21353 ;;		On exit  : 0/0
 21354 ;;		Unchanged: 0/0
 21355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21356 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21357 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21358 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21359 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21360 ;;Total ram usage:        8 bytes
 21361 ;; Hardware stack levels used:    1
 21362 ;; This function calls:
 21363 ;;		Nothing
 21364 ;; This function is called by:
 21365 ;;		_USBEnableEndpoint
 21366 ;; This function uses a non-reentrant model
 21367 ;;
 21368                           
 21369                           	psect	text99
 21370  005D54                     __ptext99:
 21371                           	opt stack 0
 21372  005D54                     _USBConfigureEndpoint:
 21373                           	opt stack 26
 21374                           
 21375                           ;incstack = 0
 21376                           ;USBConfigureEndpoint@EPNum stored from wreg
 21377  005D54  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 21378                           
 21379                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 21380  005D56  0E00               	movlw	0
 21381  005D58  6E07               	movwf	USBConfigureEndpoint@handle,c
 21382  005D5A  0E0D               	movlw	13
 21383  005D5C  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 21384                           
 21385                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 21386  005D5E  5001               	movf	USBConfigureEndpoint@direction,w,c
 21387  005D60  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 21388  005D62  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 21389  005D64  90D8               	bcf	status,0,c
 21390  005D66  3602               	rlcf	??_USBConfigureEndpoint,f,c
 21391  005D68  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 21392  005D6A  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 21393  005D6C  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 21394  005D6E  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 21395  005D70  90D8               	bcf	status,0,c
 21396  005D72  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 21397  005D74  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 21398  005D76  90D8               	bcf	status,0,c
 21399  005D78  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 21400  005D7A  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 21401  005D7C  5002               	movf	??_USBConfigureEndpoint,w,c
 21402  005D7E  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 21403  005D80  5003               	movf	??_USBConfigureEndpoint+1,w,c
 21404  005D82  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 21405  005D84  90D8               	bcf	status,0,c
 21406  005D86  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 21407  005D88  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 21408  005D8A  90D8               	bcf	status,0,c
 21409  005D8C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 21410  005D8E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 21411  005D90  5004               	movf	??_USBConfigureEndpoint+2,w,c
 21412  005D92  2607               	addwf	USBConfigureEndpoint@handle,f,c
 21413  005D94  5005               	movf	??_USBConfigureEndpoint+3,w,c
 21414  005D96  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 21415                           
 21416                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 21417  005D98  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 21418  005D9C  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 21419  005DA0  9EDF               	bcf	indf2,7,c
 21420                           
 21421                           ;usb_device.c: 1559: if(direction == 0)
 21422  005DA2  5001               	movf	USBConfigureEndpoint@direction,w,c
 21423  005DA4  A4D8               	btfss	status,2,c
 21424  005DA6  D007               	goto	l214
 21425                           
 21426                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 21427  005DA8  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 21428  005DAA  0D02               	mullw	2
 21429  005DAC  0E72               	movlw	low _pBDTEntryOut
 21430  005DAE  24F3               	addwf	prodl,w,c
 21431  005DB0  6ED9               	movwf	fsr2l,c
 21432  005DB2  0E00               	movlw	high _pBDTEntryOut
 21433  005DB4  D006               	goto	L14
 21434  005DB6                     l214:
 21435                           
 21436                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 21437  005DB6  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 21438  005DB8  0D02               	mullw	2
 21439  005DBA  0E6C               	movlw	low _pBDTEntryIn
 21440  005DBC  24F3               	addwf	prodl,w,c
 21441  005DBE  6ED9               	movwf	fsr2l,c
 21442  005DC0  0E00               	movlw	high _pBDTEntryIn
 21443  005DC2                     L14:
 21444  005DC2  20F4               	addwfc	prodh,w,c
 21445  005DC4  6EDA               	movwf	fsr2h,c
 21446  005DC6  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 21447  005DCA  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 21448                           
 21449                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 21450  005DCE  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 21451  005DD2  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 21452  005DD6  9CDF               	bcf	indf2,6,c
 21453                           
 21454                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 21455  005DD8  EE20 F004          	lfsr	2,4
 21456  005DDC  5007               	movf	USBConfigureEndpoint@handle,w,c
 21457  005DDE  26D9               	addwf	fsr2l,f,c
 21458  005DE0  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 21459  005DE2  22DA               	addwfc	fsr2h,f,c
 21460  005DE4  8CDF               	bsf	indf2,6,c
 21461  005DE6  0012               	return		;funcret
 21462  005DE8                     __end_of_USBConfigureEndpoint:
 21463                           	opt stack 0
 21464                           tosu	equ	0xFFF
 21465                           tosh	equ	0xFFE
 21466                           tosl	equ	0xFFD
 21467                           pclath	equ	0xFFA
 21468                           tblptru	equ	0xFF8
 21469                           tblptrh	equ	0xFF7
 21470                           tblptrl	equ	0xFF6
 21471                           tablat	equ	0xFF5
 21472                           prodh	equ	0xFF4
 21473                           prodl	equ	0xFF3
 21474                           intcon	equ	0xFF2
 21475                           intcon2	equ	0xFF1
 21476                           intcon3	equ	0xFF0
 21477                           indf0	equ	0xFEF
 21478                           postinc0	equ	0xFEE
 21479                           fsr0h	equ	0xFEA
 21480                           fsr0l	equ	0xFE9
 21481                           wreg	equ	0xFE8
 21482                           indf1	equ	0xFE7
 21483                           postdec1	equ	0xFE5
 21484                           plusw1	equ	0xFE3
 21485                           fsr1h	equ	0xFE2
 21486                           fsr1l	equ	0xFE1
 21487                           indf2	equ	0xFDF
 21488                           postinc2	equ	0xFDE
 21489                           postdec2	equ	0xFDD
 21490                           plusw2	equ	0xFDB
 21491                           fsr2h	equ	0xFDA
 21492                           fsr2l	equ	0xFD9
 21493                           status	equ	0xFD8
 21494                           
 21495 ;; *************** function _USBCtrlTrfOutHandler *****************
 21496 ;; Defined at:
 21497 ;;		line 2540 in file "usb_device.c"
 21498 ;; Parameters:    Size  Location     Type
 21499 ;;		None
 21500 ;; Auto vars:     Size  Location     Type
 21501 ;;		None
 21502 ;; Return value:  Size  Location     Type
 21503 ;;                  1    wreg      void 
 21504 ;; Registers used:
 21505 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21506 ;; Tracked objects:
 21507 ;;		On entry : 0/0
 21508 ;;		On exit  : 0/0
 21509 ;;		Unchanged: 0/0
 21510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21512 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21514 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21515 ;;Total ram usage:        0 bytes
 21516 ;; Hardware stack levels used:    1
 21517 ;; Hardware stack levels required when called:    2
 21518 ;; This function calls:
 21519 ;;		_USBCtrlTrfRxService
 21520 ;; This function is called by:
 21521 ;;		_USBCtrlEPService
 21522 ;; This function uses a non-reentrant model
 21523 ;;
 21524                           
 21525                           	psect	text100
 21526  006CC8                     __ptext100:
 21527                           	opt stack 0
 21528  006CC8                     _USBCtrlTrfOutHandler:
 21529                           	opt stack 26
 21530                           
 21531                           ;usb_device.c: 2542: if(controlTransferState == 2)
 21532                           
 21533                           ;incstack = 0
 21534  006CC8  0E02               	movlw	2
 21535  006CCA  0100               	movlb	0	; () banked
 21536  006CCC  19AE               	xorwf	_controlTransferState& (0+255),w,b
 21537  006CCE  A4D8               	btfss	status,2,c
 21538  006CD0  D003               	goto	l320
 21539                           
 21540                           ; BSR set to: 0
 21541                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 21542  006CD2  EC11  F01F         	call	_USBCtrlTrfRxService	;wreg free
 21543                           
 21544                           ;usb_device.c: 2545: }
 21545  006CD6  0012               	return	
 21546  006CD8                     l320:
 21547                           
 21548                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 21549  006CD8  0E00               	movlw	0
 21550  006CDA  0100               	movlb	0	; () banked
 21551  006CDC  6FAE               	movwf	_controlTransferState& (0+255),b
 21552                           
 21553                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 21554  006CDE  51AA               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 21555  006CE0  A4D8               	btfss	status,2,c
 21556  006CE2  D01F               	goto	l322
 21557                           
 21558                           ; BSR set to: 0
 21559                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 21560  006CE4  EE20 F001          	lfsr	2,1
 21561  006CE8  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21562  006CEA  26D9               	addwf	fsr2l,f,c
 21563  006CEC  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21564  006CEE  22DA               	addwfc	fsr2h,f,c
 21565  006CF0  0E08               	movlw	8
 21566  006CF2  6EDF               	movwf	indf2,c
 21567                           
 21568                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21569  006CF4  EE20 F002          	lfsr	2,2
 21570  006CF8  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21571  006CFA  26D9               	addwf	fsr2l,f,c
 21572  006CFC  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21573  006CFE  22DA               	addwfc	fsr2h,f,c
 21574  006D00  0E30               	movlw	48
 21575  006D02  6EDE               	movwf	postinc2,c
 21576  006D04  0E0D               	movlw	13
 21577  006D06  6EDD               	movwf	postdec2,c
 21578                           
 21579                           ; BSR set to: 0
 21580                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 21581  006D08  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21582  006D0C  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21583  006D10  0E0C               	movlw	12
 21584  006D12  6EDF               	movwf	indf2,c
 21585                           
 21586                           ; BSR set to: 0
 21587                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21588  006D14  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21589  006D18  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21590  006D1C  0E00               	movlw	0
 21591  006D1E  8EDB               	bsf	plusw2,7,c
 21592                           
 21593                           ;usb_device.c: 2563: }
 21594  006D20  0012               	return	
 21595  006D22                     l322:
 21596                           
 21597                           ; BSR set to: 0
 21598                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 21599                           
 21600                           ; BSR set to: 0
 21601  006D22  0E00               	movlw	0
 21602  006D24  6FAA               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 21603                           
 21604                           ; BSR set to: 0
 21605  006D26  0012               	return	
 21606  006D28                     __end_of_USBCtrlTrfOutHandler:
 21607                           	opt stack 0
 21608                           tosu	equ	0xFFF
 21609                           tosh	equ	0xFFE
 21610                           tosl	equ	0xFFD
 21611                           pclath	equ	0xFFA
 21612                           tblptru	equ	0xFF8
 21613                           tblptrh	equ	0xFF7
 21614                           tblptrl	equ	0xFF6
 21615                           tablat	equ	0xFF5
 21616                           prodh	equ	0xFF4
 21617                           prodl	equ	0xFF3
 21618                           intcon	equ	0xFF2
 21619                           intcon2	equ	0xFF1
 21620                           intcon3	equ	0xFF0
 21621                           indf0	equ	0xFEF
 21622                           postinc0	equ	0xFEE
 21623                           fsr0h	equ	0xFEA
 21624                           fsr0l	equ	0xFE9
 21625                           wreg	equ	0xFE8
 21626                           indf1	equ	0xFE7
 21627                           postdec1	equ	0xFE5
 21628                           plusw1	equ	0xFE3
 21629                           fsr1h	equ	0xFE2
 21630                           fsr1l	equ	0xFE1
 21631                           indf2	equ	0xFDF
 21632                           postinc2	equ	0xFDE
 21633                           postdec2	equ	0xFDD
 21634                           plusw2	equ	0xFDB
 21635                           fsr2h	equ	0xFDA
 21636                           fsr2l	equ	0xFD9
 21637                           status	equ	0xFD8
 21638                           
 21639 ;; *************** function _USBCtrlTrfRxService *****************
 21640 ;; Defined at:
 21641 ;;		line 1854 in file "usb_device.c"
 21642 ;; Parameters:    Size  Location     Type
 21643 ;;		None
 21644 ;; Auto vars:     Size  Location     Type
 21645 ;;  byteToRead      1    1[COMRAM] unsigned char 
 21646 ;;  i               1    0[COMRAM] unsigned char 
 21647 ;; Return value:  Size  Location     Type
 21648 ;;                  1    wreg      void 
 21649 ;; Registers used:
 21650 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21651 ;; Tracked objects:
 21652 ;;		On entry : 0/0
 21653 ;;		On exit  : 0/0
 21654 ;;		Unchanged: 0/0
 21655 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21657 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21659 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21660 ;;Total ram usage:        2 bytes
 21661 ;; Hardware stack levels used:    1
 21662 ;; Hardware stack levels required when called:    1
 21663 ;; This function calls:
 21664 ;;		_USBCtrlEPAllowStatusStage
 21665 ;; This function is called by:
 21666 ;;		_USBCtrlTrfOutHandler
 21667 ;; This function uses a non-reentrant model
 21668 ;;
 21669                           
 21670                           	psect	text101
 21671  003E22                     __ptext101:
 21672                           	opt stack 0
 21673  003E22                     _USBCtrlTrfRxService:
 21674                           	opt stack 26
 21675                           
 21676                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 21677                           
 21678                           ;incstack = 0
 21679  003E22  0100               	movlb	0	; () banked
 21680  003E24  EE20 F001          	lfsr	2,1
 21681  003E28  5192               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 21682  003E2A  26D9               	addwf	fsr2l,f,c
 21683  003E2C  5193               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 21684  003E2E  22DA               	addwfc	fsr2h,f,c
 21685  003E30  50DF               	movf	indf2,w,c
 21686  003E32  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 21687                           
 21688                           ; BSR set to: 0
 21689                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 21690  003E34  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 21691  003E36  0101               	movlb	1	; () banked
 21692  003E38  5D35               	subwf	(_outPipes+4)& (0+255),w,b
 21693  003E3A  0E00               	movlw	0
 21694  003E3C  5936               	subwfb	(_outPipes+5)& (0+255),w,b
 21695  003E3E  A0D8               	btfss	status,0,c
 21696                           
 21697                           ; BSR set to: 1
 21698                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 21699  003E40  C135  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 21700                           
 21701                           ; BSR set to: 1
 21702                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 21703                           
 21704                           ; BSR set to: 1
 21705  003E44  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 21706  003E46  5F35               	subwf	(_outPipes+4)& (0+255),f,b
 21707  003E48  0E00               	movlw	0
 21708  003E4A  5B36               	subwfb	(_outPipes+5)& (0+255),f,b
 21709                           
 21710                           ; BSR set to: 1
 21711                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 21712  003E4C  0E00               	movlw	0
 21713  003E4E  6E01               	movwf	USBCtrlTrfRxService@i,c
 21714  003E50  D011               	goto	l248
 21715  003E52                     
 21716                           ; BSR set to: 1
 21717                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 21718                           
 21719                           ; BSR set to: 1
 21720  003E52  5001               	movf	USBCtrlTrfRxService@i,w,c
 21721  003E54  0D01               	mullw	1
 21722  003E56  0E38               	movlw	56
 21723  003E58  24F3               	addwf	prodl,w,c
 21724  003E5A  6ED9               	movwf	fsr2l,c
 21725  003E5C  0E0D               	movlw	13
 21726  003E5E  20F4               	addwfc	prodh,w,c
 21727  003E60  6EDA               	movwf	fsr2h,c
 21728  003E62  C131  FFE1         	movff	_outPipes,fsr1l
 21729  003E66  C132  FFE2         	movff	_outPipes+1,fsr1h
 21730  003E6A  CFDF FFE7          	movff	indf2,indf1
 21731                           
 21732                           ; BSR set to: 1
 21733  003E6E  4B31               	infsnz	_outPipes& (0+255),f,b
 21734  003E70  2B32               	incf	(_outPipes+1)& (0+255),f,b
 21735                           
 21736                           ; BSR set to: 1
 21737  003E72  2A01               	incf	USBCtrlTrfRxService@i,f,c
 21738  003E74                     l248:
 21739                           
 21740                           ; BSR set to: 1
 21741                           
 21742                           ; BSR set to: 1
 21743  003E74  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 21744  003E76  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 21745  003E78  A0D8               	btfss	status,0,c
 21746  003E7A  D7EB               	goto	l249
 21747                           
 21748                           ; BSR set to: 1
 21749                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 21750                           
 21751                           ; BSR set to: 1
 21752  003E7C  5135               	movf	(_outPipes+4)& (0+255),w,b
 21753  003E7E  1136               	iorwf	(_outPipes+5)& (0+255),w,b
 21754  003E80  B4D8               	btfsc	status,2,c
 21755  003E82  D033               	goto	l251
 21756                           
 21757                           ; BSR set to: 1
 21758                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 21759  003E84  0100               	movlb	0	; () banked
 21760  003E86  EE20 F001          	lfsr	2,1
 21761  003E8A  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21762  003E8C  26D9               	addwf	fsr2l,f,c
 21763  003E8E  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21764  003E90  22DA               	addwfc	fsr2h,f,c
 21765  003E92  0E08               	movlw	8
 21766  003E94  6EDF               	movwf	indf2,c
 21767                           
 21768                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 21769  003E96  EE20 F002          	lfsr	2,2
 21770  003E9A  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21771  003E9C  26D9               	addwf	fsr2l,f,c
 21772  003E9E  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21773  003EA0  22DA               	addwfc	fsr2h,f,c
 21774  003EA2  0E38               	movlw	56
 21775  003EA4  6EDE               	movwf	postinc2,c
 21776  003EA6  0E0D               	movlw	13
 21777  003EA8  6EDD               	movwf	postdec2,c
 21778                           
 21779                           ; BSR set to: 0
 21780                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 21781  003EAA  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 21782  003EAE  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 21783  003EB2  BCDF               	btfsc	indf2,6,c
 21784  003EB4  D00D               	goto	l252
 21785                           
 21786                           ; BSR set to: 0
 21787                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 21788  003EB6  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21789  003EBA  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21790  003EBE  0E48               	movlw	72
 21791  003EC0  6EDF               	movwf	indf2,c
 21792                           
 21793                           ; BSR set to: 0
 21794                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21795  003EC2  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21796  003EC6  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21797  003ECA  0E00               	movlw	0
 21798  003ECC  8EDB               	bsf	plusw2,7,c
 21799                           
 21800                           ;usb_device.c: 1891: }
 21801  003ECE  0012               	return	
 21802  003ED0                     l252:
 21803                           
 21804                           ; BSR set to: 0
 21805                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 21806                           
 21807                           ; BSR set to: 0
 21808  003ED0  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21809  003ED4  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21810  003ED8  0E08               	movlw	8
 21811  003EDA  6EDF               	movwf	indf2,c
 21812                           
 21813                           ; BSR set to: 0
 21814                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21815  003EDC  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21816  003EE0  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21817  003EE4  0E00               	movlw	0
 21818  003EE6  8EDB               	bsf	plusw2,7,c
 21819                           
 21820                           ; BSR set to: 0
 21821                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 21822  003EE8  0012               	return	
 21823  003EEA                     l251:
 21824                           
 21825                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 21826                           
 21827                           ; BSR set to: 0
 21828  003EEA  0100               	movlb	0	; () banked
 21829  003EEC  EE20 F001          	lfsr	2,1
 21830  003EF0  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21831  003EF2  26D9               	addwf	fsr2l,f,c
 21832  003EF4  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21833  003EF6  22DA               	addwfc	fsr2h,f,c
 21834  003EF8  0E08               	movlw	8
 21835  003EFA  6EDF               	movwf	indf2,c
 21836                           
 21837                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21838  003EFC  EE20 F002          	lfsr	2,2
 21839  003F00  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21840  003F02  26D9               	addwf	fsr2l,f,c
 21841  003F04  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21842  003F06  22DA               	addwfc	fsr2h,f,c
 21843  003F08  0E30               	movlw	48
 21844  003F0A  6EDE               	movwf	postinc2,c
 21845  003F0C  0E0D               	movlw	13
 21846  003F0E  6EDD               	movwf	postdec2,c
 21847                           
 21848                           ; BSR set to: 0
 21849                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 21850  003F10  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21851  003F14  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21852  003F18  0E04               	movlw	4
 21853  003F1A  6EDF               	movwf	indf2,c
 21854                           
 21855                           ; BSR set to: 0
 21856                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21857  003F1C  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21858  003F20  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21859  003F24  0E00               	movlw	0
 21860  003F26  8EDB               	bsf	plusw2,7,c
 21861                           
 21862                           ; BSR set to: 0
 21863                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 21864                           
 21865                           ; BSR set to: 0
 21866  003F28  0101               	movlb	1	; () banked
 21867  003F2A  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 21868                           
 21869                           ; BSR set to: 1
 21870                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 21871  003F2C  0100               	movlb	0	; () banked
 21872  003F2E  51A8               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 21873  003F30  A4D8               	btfss	status,2,c
 21874  003F32  0012               	return	
 21875                           
 21876                           ; BSR set to: 0
 21877                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 21878  003F34  EC41  F028         	call	_USBCtrlEPAllowStatusStage	;wreg free
 21879  003F38  0012               	return	
 21880  003F3A                     __end_of_USBCtrlTrfRxService:
 21881                           	opt stack 0
 21882                           tosu	equ	0xFFF
 21883                           tosh	equ	0xFFE
 21884                           tosl	equ	0xFFD
 21885                           pclath	equ	0xFFA
 21886                           tblptru	equ	0xFF8
 21887                           tblptrh	equ	0xFF7
 21888                           tblptrl	equ	0xFF6
 21889                           tablat	equ	0xFF5
 21890                           prodh	equ	0xFF4
 21891                           prodl	equ	0xFF3
 21892                           intcon	equ	0xFF2
 21893                           intcon2	equ	0xFF1
 21894                           intcon3	equ	0xFF0
 21895                           indf0	equ	0xFEF
 21896                           postinc0	equ	0xFEE
 21897                           fsr0h	equ	0xFEA
 21898                           fsr0l	equ	0xFE9
 21899                           wreg	equ	0xFE8
 21900                           indf1	equ	0xFE7
 21901                           postdec1	equ	0xFE5
 21902                           plusw1	equ	0xFE3
 21903                           fsr1h	equ	0xFE2
 21904                           fsr1l	equ	0xFE1
 21905                           indf2	equ	0xFDF
 21906                           postinc2	equ	0xFDE
 21907                           postdec2	equ	0xFDD
 21908                           plusw2	equ	0xFDB
 21909                           fsr2h	equ	0xFDA
 21910                           fsr2l	equ	0xFD9
 21911                           status	equ	0xFD8
 21912                           
 21913 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 21914 ;; Defined at:
 21915 ;;		line 1418 in file "usb_device.c"
 21916 ;; Parameters:    Size  Location     Type
 21917 ;;		None
 21918 ;; Auto vars:     Size  Location     Type
 21919 ;;		None
 21920 ;; Return value:  Size  Location     Type
 21921 ;;                  1    wreg      void 
 21922 ;; Registers used:
 21923 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21924 ;; Tracked objects:
 21925 ;;		On entry : 0/0
 21926 ;;		On exit  : 0/0
 21927 ;;		Unchanged: 0/0
 21928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21933 ;;Total ram usage:        0 bytes
 21934 ;; Hardware stack levels used:    1
 21935 ;; This function calls:
 21936 ;;		Nothing
 21937 ;; This function is called by:
 21938 ;;		_USBDeviceTasks
 21939 ;;		_USBCtrlEPServiceComplete
 21940 ;;		_USBCtrlTrfRxService
 21941 ;; This function uses a non-reentrant model
 21942 ;;
 21943                           
 21944                           	psect	text102
 21945  005082                     __ptext102:
 21946                           	opt stack 0
 21947  005082                     _USBCtrlEPAllowStatusStage:
 21948                           	opt stack 26
 21949                           
 21950                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 21951                           
 21952                           ;incstack = 0
 21953  005082  0100               	movlb	0	; () banked
 21954  005084  51A7               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 21955  005086  A4D8               	btfss	status,2,c
 21956  005088  0012               	return	
 21957                           
 21958                           ; BSR set to: 0
 21959                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 21960  00508A  0E01               	movlw	1
 21961  00508C  6FA7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 21962                           
 21963                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 21964  00508E  51A6               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 21965  005090  A4D8               	btfss	status,2,c
 21966  005092  0012               	return	
 21967                           
 21968                           ; BSR set to: 0
 21969                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 21970  005094  0E01               	movlw	1
 21971  005096  6FA6               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 21972                           
 21973                           ; BSR set to: 0
 21974                           ;usb_device.c: 1434: if(controlTransferState == 2)
 21975  005098  0E02               	movlw	2
 21976  00509A  19AE               	xorwf	_controlTransferState& (0+255),w,b
 21977  00509C  A4D8               	btfss	status,2,c
 21978  00509E  D015               	goto	l202
 21979                           
 21980                           ; BSR set to: 0
 21981                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 21982  0050A0  EE20 F001          	lfsr	2,1
 21983  0050A4  516C               	movf	_pBDTEntryIn& (0+255),w,b
 21984  0050A6  26D9               	addwf	fsr2l,f,c
 21985  0050A8  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 21986  0050AA  22DA               	addwfc	fsr2h,f,c
 21987  0050AC  0E00               	movlw	0
 21988  0050AE  6EDF               	movwf	indf2,c
 21989                           
 21990                           ; BSR set to: 0
 21991                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 21992  0050B0  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 21993  0050B4  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21994  0050B8  0E48               	movlw	72
 21995  0050BA  6EDF               	movwf	indf2,c
 21996                           
 21997                           ; BSR set to: 0
 21998                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21999  0050BC  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 22000  0050C0  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22001  0050C4  0E00               	movlw	0
 22002  0050C6  8EDB               	bsf	plusw2,7,c
 22003                           
 22004                           ;usb_device.c: 1439: }
 22005  0050C8  0012               	return	
 22006  0050CA                     l202:
 22007                           
 22008                           ; BSR set to: 0
 22009                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 22010                           
 22011                           ; BSR set to: 0
 22012  0050CA  05AE               	decf	_controlTransferState& (0+255),w,b
 22013  0050CC  A4D8               	btfss	status,2,c
 22014  0050CE  0012               	return	
 22015                           
 22016                           ; BSR set to: 0
 22017                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 22018  0050D0  0E00               	movlw	0
 22019  0050D2  6FAA               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 22020                           
 22021                           ; BSR set to: 0
 22022                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 22023  0050D4  EE20 F001          	lfsr	2,1
 22024  0050D8  5192               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 22025  0050DA  26D9               	addwf	fsr2l,f,c
 22026  0050DC  5193               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 22027  0050DE  22DA               	addwfc	fsr2h,f,c
 22028  0050E0  0E08               	movlw	8
 22029  0050E2  6EDF               	movwf	indf2,c
 22030                           
 22031                           ; BSR set to: 0
 22032                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 22033  0050E4  EE20 F002          	lfsr	2,2
 22034  0050E8  5192               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 22035  0050EA  26D9               	addwf	fsr2l,f,c
 22036  0050EC  5193               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 22037  0050EE  22DA               	addwfc	fsr2h,f,c
 22038  0050F0  0E30               	movlw	48
 22039  0050F2  6EDE               	movwf	postinc2,c
 22040  0050F4  0E0D               	movlw	13
 22041  0050F6  6EDD               	movwf	postdec2,c
 22042                           
 22043                           ; BSR set to: 0
 22044                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 22045  0050F8  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 22046  0050FC  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 22047  005100  0E04               	movlw	4
 22048  005102  6EDF               	movwf	indf2,c
 22049                           
 22050                           ; BSR set to: 0
 22051                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 22052  005104  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 22053  005108  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 22054  00510C  0E00               	movlw	0
 22055  00510E  8EDB               	bsf	plusw2,7,c
 22056                           
 22057                           ; BSR set to: 0
 22058                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 22059  005110  0E01               	movlw	1
 22060  005112  6FAA               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 22061                           
 22062                           ; BSR set to: 0
 22063                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 22064  005114  EE20 F001          	lfsr	2,1
 22065  005118  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 22066  00511A  26D9               	addwf	fsr2l,f,c
 22067  00511C  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 22068  00511E  22DA               	addwfc	fsr2h,f,c
 22069  005120  0E08               	movlw	8
 22070  005122  6EDF               	movwf	indf2,c
 22071                           
 22072                           ; BSR set to: 0
 22073                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 22074  005124  EE20 F002          	lfsr	2,2
 22075  005128  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 22076  00512A  26D9               	addwf	fsr2l,f,c
 22077  00512C  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 22078  00512E  22DA               	addwfc	fsr2h,f,c
 22079  005130  0E30               	movlw	48
 22080  005132  6EDE               	movwf	postinc2,c
 22081  005134  0E0D               	movlw	13
 22082  005136  6EDD               	movwf	postdec2,c
 22083                           
 22084                           ; BSR set to: 0
 22085                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 22086  005138  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22087  00513C  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22088  005140  0E80               	movlw	128
 22089  005142  6EDF               	movwf	indf2,c
 22090                           
 22091                           ; BSR set to: 0
 22092                           
 22093                           ; BSR set to: 0
 22094                           
 22095                           ; BSR set to: 0
 22096  005144  0012               	return	
 22097  005146                     __end_of_USBCtrlEPAllowStatusStage:
 22098                           	opt stack 0
 22099                           tosu	equ	0xFFF
 22100                           tosh	equ	0xFFE
 22101                           tosl	equ	0xFFD
 22102                           pclath	equ	0xFFA
 22103                           tblptru	equ	0xFF8
 22104                           tblptrh	equ	0xFF7
 22105                           tblptrl	equ	0xFF6
 22106                           tablat	equ	0xFF5
 22107                           prodh	equ	0xFF4
 22108                           prodl	equ	0xFF3
 22109                           intcon	equ	0xFF2
 22110                           intcon2	equ	0xFF1
 22111                           intcon3	equ	0xFF0
 22112                           indf0	equ	0xFEF
 22113                           postinc0	equ	0xFEE
 22114                           fsr0h	equ	0xFEA
 22115                           fsr0l	equ	0xFE9
 22116                           wreg	equ	0xFE8
 22117                           indf1	equ	0xFE7
 22118                           postdec1	equ	0xFE5
 22119                           plusw1	equ	0xFE3
 22120                           fsr1h	equ	0xFE2
 22121                           fsr1l	equ	0xFE1
 22122                           indf2	equ	0xFDF
 22123                           postinc2	equ	0xFDE
 22124                           postdec2	equ	0xFDD
 22125                           plusw2	equ	0xFDB
 22126                           fsr2h	equ	0xFDA
 22127                           fsr2l	equ	0xFD9
 22128                           status	equ	0xFD8
 22129                           
 22130 ;; *************** function _USBCtrlTrfInHandler *****************
 22131 ;; Defined at:
 22132 ;;		line 2594 in file "usb_device.c"
 22133 ;; Parameters:    Size  Location     Type
 22134 ;;		None
 22135 ;; Auto vars:     Size  Location     Type
 22136 ;;  lastDTS         1    1[COMRAM] unsigned char 
 22137 ;; Return value:  Size  Location     Type
 22138 ;;                  1    wreg      void 
 22139 ;; Registers used:
 22140 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22141 ;; Tracked objects:
 22142 ;;		On entry : 0/0
 22143 ;;		On exit  : 0/0
 22144 ;;		Unchanged: 0/0
 22145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22147 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22149 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22150 ;;Total ram usage:        1 bytes
 22151 ;; Hardware stack levels used:    1
 22152 ;; Hardware stack levels required when called:    1
 22153 ;; This function calls:
 22154 ;;		_USBCtrlTrfTxService
 22155 ;; This function is called by:
 22156 ;;		_USBCtrlEPService
 22157 ;; This function uses a non-reentrant model
 22158 ;;
 22159                           
 22160                           	psect	text103
 22161  004EF6                     __ptext103:
 22162                           	opt stack 0
 22163  004EF6                     _USBCtrlTrfInHandler:
 22164                           	opt stack 27
 22165                           
 22166                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 22167                           
 22168                           ; BSR set to: 0
 22169                           ;incstack = 0
 22170  004EF6  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 22171  004EFA  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22172  004EFE  0100               	movlb	0	; () banked
 22173  004F00  0E00               	movlw	0
 22174  004F02  BCDF               	btfsc	indf2,6,c
 22175  004F04  0E01               	movlw	1
 22176  004F06  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 22177                           
 22178                           ; BSR set to: 0
 22179                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 22180  004F08  0E04               	movlw	4
 22181  004F0A  196C               	xorwf	_pBDTEntryIn& (0+255),w,b
 22182  004F0C  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 22183  004F0E  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 22184  004F10  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 22185                           
 22186                           ; BSR set to: 0
 22187                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 22188  004F12  0E08               	movlw	8
 22189  004F14  19B0               	xorwf	_USBDeviceState& (0+255),w,b
 22190  004F16  A4D8               	btfss	status,2,c
 22191  004F18  D00D               	goto	l329
 22192                           
 22193                           ; BSR set to: 0
 22194                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 22195  004F1A  010D               	movlb	13	; () banked
 22196  004F1C  5132               	movf	50,w,b	;volatile
 22197  004F1E  0B7F               	andlw	127
 22198  004F20  010F               	movlb	15	; () banked
 22199  004F22  6F38               	movwf	56,b	;volatile
 22200                           
 22201                           ; BSR set to: 15
 22202                           ;usb_device.c: 2609: if(UADDR != 0u)
 22203  004F24  5138               	movf	56,w,b	;volatile
 22204  004F26  B4D8               	btfsc	status,2,c
 22205  004F28  D002               	goto	l328
 22206                           
 22207                           ; BSR set to: 15
 22208                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 22209  004F2A  0E10               	movlw	16
 22210  004F2C  D001               	goto	L15
 22211  004F2E                     l328:
 22212                           
 22213                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 22214                           
 22215                           ; BSR set to: 0
 22216  004F2E  0E04               	movlw	4
 22217  004F30                     L15:
 22218  004F30  0100               	movlb	0	; () banked
 22219  004F32  6FB0               	movwf	_USBDeviceState& (0+255),b
 22220  004F34                     l329:
 22221                           
 22222                           ; BSR set to: 0
 22223                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 22224                           
 22225                           ; BSR set to: 0
 22226                           
 22227                           ; BSR set to: 0
 22228  004F34  05AE               	decf	_controlTransferState& (0+255),w,b
 22229  004F36  A4D8               	btfss	status,2,c
 22230  004F38  D03B               	goto	l330
 22231                           
 22232                           ; BSR set to: 0
 22233                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 22234  004F3A  EE20 F002          	lfsr	2,2
 22235  004F3E  516C               	movf	_pBDTEntryIn& (0+255),w,b
 22236  004F40  26D9               	addwf	fsr2l,f,c
 22237  004F42  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 22238  004F44  22DA               	addwfc	fsr2h,f,c
 22239  004F46  0E38               	movlw	56
 22240  004F48  6EDE               	movwf	postinc2,c
 22241  004F4A  0E0D               	movlw	13
 22242  004F4C  6EDD               	movwf	postdec2,c
 22243                           
 22244                           ; BSR set to: 0
 22245                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 22246  004F4E  EC15  F027         	call	_USBCtrlTrfTxService	;wreg free
 22247                           
 22248                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 22249  004F52  0E02               	movlw	2
 22250  004F54  0100               	movlb	0	; () banked
 22251  004F56  19AF               	xorwf	_shortPacketStatus& (0+255),w,b
 22252  004F58  A4D8               	btfss	status,2,c
 22253  004F5A  D00D               	goto	l331
 22254                           
 22255                           ; BSR set to: 0
 22256                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 22257  004F5C  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 22258  004F60  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22259  004F64  0E04               	movlw	4
 22260  004F66  6EDF               	movwf	indf2,c
 22261                           
 22262                           ; BSR set to: 0
 22263                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22264  004F68  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 22265  004F6C  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22266  004F70  0E00               	movlw	0
 22267  004F72  8EDB               	bsf	plusw2,7,c
 22268                           
 22269                           ;usb_device.c: 2635: }
 22270  004F74  0012               	return	
 22271  004F76                     l331:
 22272                           
 22273                           ; BSR set to: 0
 22274                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 22275                           
 22276                           ; BSR set to: 0
 22277  004F76  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 22278  004F78  A4D8               	btfss	status,2,c
 22279  004F7A  D00D               	goto	l333
 22280                           
 22281                           ; BSR set to: 0
 22282                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 22283  004F7C  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 22284  004F80  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22285  004F84  0E48               	movlw	72
 22286  004F86  6EDF               	movwf	indf2,c
 22287                           
 22288                           ; BSR set to: 0
 22289                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22290  004F88  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 22291  004F8C  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22292  004F90  0E00               	movlw	0
 22293  004F92  8EDB               	bsf	plusw2,7,c
 22294                           
 22295                           ;usb_device.c: 2642: }
 22296  004F94  0012               	return	
 22297  004F96                     l333:
 22298                           
 22299                           ; BSR set to: 0
 22300                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 22301                           
 22302                           ; BSR set to: 0
 22303  004F96  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 22304  004F9A  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22305  004F9E  0E08               	movlw	8
 22306  004FA0  6EDF               	movwf	indf2,c
 22307                           
 22308                           ; BSR set to: 0
 22309                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22310  004FA2  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 22311  004FA6  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22312  004FAA  0E00               	movlw	0
 22313  004FAC  8EDB               	bsf	plusw2,7,c
 22314                           
 22315                           ; BSR set to: 0
 22316                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 22317                           
 22318                           ; BSR set to: 0
 22319  004FAE  0012               	return	
 22320  004FB0                     l330:
 22321                           
 22322                           ; BSR set to: 0
 22323                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 22324  004FB0  0101               	movlb	1	; () banked
 22325  004FB2  BF34               	btfsc	(_outPipes+3)& (0+255),7,b
 22326                           
 22327                           ; BSR set to: 1
 22328                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 22329                           
 22330                           ; BSR set to: 1
 22331  004FB4  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 22332                           
 22333                           ; BSR set to: 1
 22334                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 22335                           
 22336                           ; BSR set to: 1
 22337  004FB6  0E00               	movlw	0
 22338  004FB8  0100               	movlb	0	; () banked
 22339  004FBA  6FAE               	movwf	_controlTransferState& (0+255),b
 22340  004FBC  0012               	return	
 22341  004FBE                     __end_of_USBCtrlTrfInHandler:
 22342                           	opt stack 0
 22343                           tosu	equ	0xFFF
 22344                           tosh	equ	0xFFE
 22345                           tosl	equ	0xFFD
 22346                           pclath	equ	0xFFA
 22347                           tblptru	equ	0xFF8
 22348                           tblptrh	equ	0xFF7
 22349                           tblptrl	equ	0xFF6
 22350                           tablat	equ	0xFF5
 22351                           prodh	equ	0xFF4
 22352                           prodl	equ	0xFF3
 22353                           intcon	equ	0xFF2
 22354                           intcon2	equ	0xFF1
 22355                           intcon3	equ	0xFF0
 22356                           indf0	equ	0xFEF
 22357                           postinc0	equ	0xFEE
 22358                           fsr0h	equ	0xFEA
 22359                           fsr0l	equ	0xFE9
 22360                           wreg	equ	0xFE8
 22361                           indf1	equ	0xFE7
 22362                           postdec1	equ	0xFE5
 22363                           plusw1	equ	0xFE3
 22364                           fsr1h	equ	0xFE2
 22365                           fsr1l	equ	0xFE1
 22366                           indf2	equ	0xFDF
 22367                           postinc2	equ	0xFDE
 22368                           postdec2	equ	0xFDD
 22369                           plusw2	equ	0xFDB
 22370                           fsr2h	equ	0xFDA
 22371                           fsr2l	equ	0xFD9
 22372                           status	equ	0xFD8
 22373                           
 22374 ;; *************** function _USBCtrlTrfTxService *****************
 22375 ;; Defined at:
 22376 ;;		line 1773 in file "usb_device.c"
 22377 ;; Parameters:    Size  Location     Type
 22378 ;;		None
 22379 ;; Auto vars:     Size  Location     Type
 22380 ;;  byteToSend      1    0[COMRAM] unsigned char 
 22381 ;; Return value:  Size  Location     Type
 22382 ;;                  1    wreg      void 
 22383 ;; Registers used:
 22384 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 22385 ;; Tracked objects:
 22386 ;;		On entry : 0/0
 22387 ;;		On exit  : 0/0
 22388 ;;		Unchanged: 0/0
 22389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22391 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22393 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22394 ;;Total ram usage:        1 bytes
 22395 ;; Hardware stack levels used:    1
 22396 ;; This function calls:
 22397 ;;		Nothing
 22398 ;; This function is called by:
 22399 ;;		_USBCtrlEPAllowDataStage
 22400 ;;		_USBCtrlTrfInHandler
 22401 ;; This function uses a non-reentrant model
 22402 ;;
 22403                           
 22404                           	psect	text104
 22405  004E2A                     __ptext104:
 22406                           	opt stack 0
 22407  004E2A                     _USBCtrlTrfTxService:
 22408                           	opt stack 25
 22409                           
 22410                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 22411                           
 22412                           ; BSR set to: 0
 22413                           ;incstack = 0
 22414  004E2A  0E08               	movlw	8
 22415  004E2C  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 22416                           
 22417                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 22418  004E2E  0100               	movlb	0	; () banked
 22419  004E30  516B               	movf	(_inPipes+5)& (0+255),w,b
 22420  004E32  E110               	bnz	l10230
 22421  004E34  0E08               	movlw	8
 22422  004E36  5D6A               	subwf	(_inPipes+4)& (0+255),w,b
 22423  004E38  B0D8               	btfsc	status,0,c
 22424  004E3A  D00C               	goto	l235
 22425                           
 22426                           ; BSR set to: 0
 22427                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 22428  004E3C  C06A  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 22429                           
 22430                           ; BSR set to: 0
 22431                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 22432  004E40  51AF               	movf	_shortPacketStatus& (0+255),w,b
 22433  004E42  A4D8               	btfss	status,2,c
 22434  004E44  D002               	goto	l233
 22435                           
 22436                           ; BSR set to: 0
 22437                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 22438  004E46  0E01               	movlw	1
 22439  004E48  D004               	goto	L16
 22440  004E4A                     l233:
 22441                           
 22442                           ; BSR set to: 0
 22443                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 22444                           
 22445                           ; BSR set to: 0
 22446  004E4A  05AF               	decf	_shortPacketStatus& (0+255),w,b
 22447  004E4C  A4D8               	btfss	status,2,c
 22448  004E4E  D002               	goto	l235
 22449                           
 22450                           ; BSR set to: 0
 22451                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 22452  004E50  0E02               	movlw	2
 22453  004E52                     L16:
 22454  004E52  6FAF               	movwf	_shortPacketStatus& (0+255),b
 22455  004E54                     l235:
 22456  004E54                     l10230:
 22457                           
 22458                           ; BSR set to: 0
 22459                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 22460  004E54  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 22461  004E56  5F6A               	subwf	(_inPipes+4)& (0+255),f,b
 22462  004E58  0E00               	movlw	0
 22463  004E5A  5B6B               	subwfb	(_inPipes+5)& (0+255),f,b
 22464                           
 22465                           ; BSR set to: 0
 22466                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 22467  004E5C  EE20 F001          	lfsr	2,1
 22468  004E60  516C               	movf	_pBDTEntryIn& (0+255),w,b
 22469  004E62  26D9               	addwf	fsr2l,f,c
 22470  004E64  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 22471  004E66  22DA               	addwfc	fsr2h,f,c
 22472  004E68  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 22473                           
 22474                           ; BSR set to: 0
 22475                           ;usb_device.c: 1810: pDst = ( uint8_t*)CtrlTrfData;
 22476  004E6C  0E38               	movlw	56
 22477  004E6E  6F8E               	movwf	_pDst& (0+255),b
 22478  004E70  0E0D               	movlw	13
 22479  004E72  6F8F               	movwf	(_pDst+1)& (0+255),b
 22480                           
 22481                           ; BSR set to: 0
 22482                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 22483  004E74  A169               	btfss	(_inPipes+3)& (0+255),0,b
 22484  004E76  D01C               	goto	l237
 22485  004E78  D03A               	goto	l241
 22486  004E7A                     
 22487                           ; BSR set to: 0
 22488                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 22489                           
 22490                           ; BSR set to: 0
 22491  004E7A  C066  FFF6         	movff	_inPipes,tblptrl
 22492  004E7E  C067  FFF7         	movff	_inPipes+1,tblptrh
 22493  004E82  6AF8               	clrf	tblptru,c
 22494  004E84  C08E  FFD9         	movff	_pDst,fsr2l
 22495  004E88  C08F  FFDA         	movff	_pDst+1,fsr2h
 22496  004E8C  0E0E               	movlw	(high __ramtop+-1)
 22497  004E8E  64F7               	cpfsgt	tblptrh,c
 22498  004E90  D003               	bra	u7037
 22499  004E92  0008               	tblrd		*
 22500  004E94  50F5               	movf	tablat,w,c
 22501  004E96  D005               	bra	u7030
 22502  004E98                     u7037:
 22503  004E98  CFF6 FFE9          	movff	tblptrl,fsr0l
 22504  004E9C  CFF7 FFEA          	movff	tblptrh,fsr0h
 22505  004EA0  50EF               	movf	indf0,w,c
 22506  004EA2                     u7030:
 22507  004EA2  6EDF               	movwf	indf2,c
 22508  004EA4  0100               	movlb	0	; () banked
 22509  004EA6  4B66               	infsnz	_inPipes& (0+255),f,b
 22510  004EA8  2B67               	incf	(_inPipes+1)& (0+255),f,b
 22511                           
 22512                           ; BSR set to: 0
 22513  004EAA  4B8E               	infsnz	_pDst& (0+255),f,b
 22514  004EAC  2B8F               	incf	(_pDst+1)& (0+255),f,b
 22515                           
 22516                           ; BSR set to: 0
 22517                           ;usb_device.c: 1816: byteToSend--;
 22518  004EAE  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 22519  004EB0                     l237:
 22520                           
 22521                           ; BSR set to: 0
 22522                           
 22523                           ; BSR set to: 0
 22524  004EB0  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 22525  004EB2  B4D8               	btfsc	status,2,c
 22526  004EB4  0012               	return	
 22527  004EB6  D7E1               	goto	l238
 22528  004EB8                     
 22529                           ; BSR set to: 0
 22530                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 22531                           
 22532                           ; BSR set to: 0
 22533  004EB8  C066  FFF6         	movff	_inPipes,tblptrl
 22534  004EBC  C067  FFF7         	movff	_inPipes+1,tblptrh
 22535  004EC0  6AF8               	clrf	tblptru,c
 22536  004EC2  C08E  FFD9         	movff	_pDst,fsr2l
 22537  004EC6  C08F  FFDA         	movff	_pDst+1,fsr2h
 22538  004ECA  0E0E               	movlw	(high __ramtop+-1)
 22539  004ECC  64F7               	cpfsgt	tblptrh,c
 22540  004ECE  D003               	bra	u7057
 22541  004ED0  0008               	tblrd		*
 22542  004ED2  50F5               	movf	tablat,w,c
 22543  004ED4  D005               	bra	u7050
 22544  004ED6                     u7057:
 22545  004ED6  CFF6 FFE9          	movff	tblptrl,fsr0l
 22546  004EDA  CFF7 FFEA          	movff	tblptrh,fsr0h
 22547  004EDE  50EF               	movf	indf0,w,c
 22548  004EE0                     u7050:
 22549  004EE0  6EDF               	movwf	indf2,c
 22550  004EE2  0100               	movlb	0	; () banked
 22551  004EE4  4B66               	infsnz	_inPipes& (0+255),f,b
 22552  004EE6  2B67               	incf	(_inPipes+1)& (0+255),f,b
 22553                           
 22554                           ; BSR set to: 0
 22555  004EE8  4B8E               	infsnz	_pDst& (0+255),f,b
 22556  004EEA  2B8F               	incf	(_pDst+1)& (0+255),f,b
 22557                           
 22558                           ; BSR set to: 0
 22559                           ;usb_device.c: 1824: byteToSend--;
 22560  004EEC  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 22561  004EEE                     l241:
 22562                           
 22563                           ; BSR set to: 0
 22564                           
 22565                           ; BSR set to: 0
 22566  004EEE  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 22567  004EF0  B4D8               	btfsc	status,2,c
 22568  004EF2  0012               	return	
 22569  004EF4  D7E1               	goto	l242
 22570  004EF6                     __end_of_USBCtrlTrfTxService:
 22571                           	opt stack 0
 22572                           tosu	equ	0xFFF
 22573                           tosh	equ	0xFFE
 22574                           tosl	equ	0xFFD
 22575                           pclath	equ	0xFFA
 22576                           tblptru	equ	0xFF8
 22577                           tblptrh	equ	0xFF7
 22578                           tblptrl	equ	0xFF6
 22579                           tablat	equ	0xFF5
 22580                           prodh	equ	0xFF4
 22581                           prodl	equ	0xFF3
 22582                           intcon	equ	0xFF2
 22583                           intcon2	equ	0xFF1
 22584                           intcon3	equ	0xFF0
 22585                           indf0	equ	0xFEF
 22586                           postinc0	equ	0xFEE
 22587                           fsr0h	equ	0xFEA
 22588                           fsr0l	equ	0xFE9
 22589                           wreg	equ	0xFE8
 22590                           indf1	equ	0xFE7
 22591                           postdec1	equ	0xFE5
 22592                           plusw1	equ	0xFE3
 22593                           fsr1h	equ	0xFE2
 22594                           fsr1l	equ	0xFE1
 22595                           indf2	equ	0xFDF
 22596                           postinc2	equ	0xFDE
 22597                           postdec2	equ	0xFDD
 22598                           plusw2	equ	0xFDB
 22599                           fsr2h	equ	0xFDA
 22600                           fsr2l	equ	0xFD9
 22601                           status	equ	0xFD8
 22602                           
 22603 ;; *************** function _APP_DeviceMSDTasks *****************
 22604 ;; Defined at:
 22605 ;;		line 110 in file "app_device_msd.c"
 22606 ;; Parameters:    Size  Location     Type
 22607 ;;		None
 22608 ;; Auto vars:     Size  Location     Type
 22609 ;;		None
 22610 ;; Return value:  Size  Location     Type
 22611 ;;                  1    wreg      void 
 22612 ;; Registers used:
 22613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 22614 ;; Tracked objects:
 22615 ;;		On entry : 0/0
 22616 ;;		On exit  : 0/0
 22617 ;;		Unchanged: 0/0
 22618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22623 ;;Total ram usage:        0 bytes
 22624 ;; Hardware stack levels used:    1
 22625 ;; Hardware stack levels required when called:   11
 22626 ;; This function calls:
 22627 ;;		_MSDTasks
 22628 ;; This function is called by:
 22629 ;;		_main
 22630 ;; This function uses a non-reentrant model
 22631 ;;
 22632                           
 22633                           	psect	text105
 22634  007D00                     __ptext105:
 22635                           	opt stack 0
 22636  007D00                     _APP_DeviceMSDTasks:
 22637                           	opt stack 19
 22638                           
 22639                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 22640                           
 22641                           ; BSR set to: 0
 22642                           ;incstack = 0
 22643  007D00  0E20               	movlw	32
 22644  007D02  0100               	movlb	0	; () banked
 22645  007D04  61B0               	cpfslt	_USBDeviceState& (0+255),b
 22646  007D06  D001               	goto	l1002
 22647  007D08  0012               	return	
 22648  007D0A                     l1002:
 22649                           
 22650                           ; BSR set to: 0
 22651                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 22652  007D0A  B265               	btfsc	3941,1,c	;volatile
 22653  007D0C  0012               	return	
 22654                           
 22655                           ; BSR set to: 0
 22656                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 22657                           
 22658                           ; BSR set to: 0
 22659                           
 22660                           ; BSR set to: 0
 22661                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 22662  007D0E  EC4F  F00E         	call	_MSDTasks	;wreg free
 22663  007D12  0012               	return		;funcret
 22664  007D14                     __end_of_APP_DeviceMSDTasks:
 22665                           	opt stack 0
 22666                           tosu	equ	0xFFF
 22667                           tosh	equ	0xFFE
 22668                           tosl	equ	0xFFD
 22669                           pclath	equ	0xFFA
 22670                           tblptru	equ	0xFF8
 22671                           tblptrh	equ	0xFF7
 22672                           tblptrl	equ	0xFF6
 22673                           tablat	equ	0xFF5
 22674                           prodh	equ	0xFF4
 22675                           prodl	equ	0xFF3
 22676                           intcon	equ	0xFF2
 22677                           intcon2	equ	0xFF1
 22678                           intcon3	equ	0xFF0
 22679                           indf0	equ	0xFEF
 22680                           postinc0	equ	0xFEE
 22681                           fsr0h	equ	0xFEA
 22682                           fsr0l	equ	0xFE9
 22683                           wreg	equ	0xFE8
 22684                           indf1	equ	0xFE7
 22685                           postdec1	equ	0xFE5
 22686                           plusw1	equ	0xFE3
 22687                           fsr1h	equ	0xFE2
 22688                           fsr1l	equ	0xFE1
 22689                           indf2	equ	0xFDF
 22690                           postinc2	equ	0xFDE
 22691                           postdec2	equ	0xFDD
 22692                           plusw2	equ	0xFDB
 22693                           fsr2h	equ	0xFDA
 22694                           fsr2l	equ	0xFD9
 22695                           status	equ	0xFD8
 22696                           
 22697 ;; *************** function _MSDTasks *****************
 22698 ;; Defined at:
 22699 ;;		line 335 in file "usb_device_msd.c"
 22700 ;; Parameters:    Size  Location     Type
 22701 ;;		None
 22702 ;; Auto vars:     Size  Location     Type
 22703 ;;  i               1   81[COMRAM] unsigned char 
 22704 ;; Return value:  Size  Location     Type
 22705 ;;                  1    wreg      unsigned char 
 22706 ;; Registers used:
 22707 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 22708 ;; Tracked objects:
 22709 ;;		On entry : 0/0
 22710 ;;		On exit  : 0/0
 22711 ;;		Unchanged: 0/0
 22712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22714 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22715 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22716 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22717 ;;Total ram usage:        6 bytes
 22718 ;; Hardware stack levels used:    1
 22719 ;; Hardware stack levels required when called:   10
 22720 ;; This function calls:
 22721 ;;		_MSDProcessCommand
 22722 ;;		_USBStallEndpoint
 22723 ;;		_USBTransferOnePacket
 22724 ;; This function is called by:
 22725 ;;		_APP_DeviceMSDTasks
 22726 ;; This function uses a non-reentrant model
 22727 ;;
 22728                           
 22729                           	psect	text106
 22730  001C9E                     __ptext106:
 22731                           	opt stack 0
 22732  001C9E                     _MSDTasks:
 22733                           	opt stack 19
 22734                           
 22735                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 22736                           
 22737                           ;incstack = 0
 22738  001C9E  0E20               	movlw	32
 22739  001CA0  0100               	movlb	0	; () banked
 22740  001CA2  19B0               	xorwf	_USBDeviceState& (0+255),w,b
 22741  001CA4  A4D8               	btfss	status,2,c
 22742  001CA6  0012               	return	
 22743  001CA8  D117               	goto	l554
 22744  001CAA                     
 22745                           ; BSR set to: 0
 22746                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 22747                           
 22748                           ; BSR set to: 0
 22749  001CAA  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 22750  001CAC  118B               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 22751  001CAE  B4D8               	btfsc	status,2,c
 22752  001CB0  D006               	goto	u10160
 22753                           
 22754                           ; BSR set to: 0
 22755  001CB2  C08A  FFD9         	movff	_USBMSDOutHandle,fsr2l
 22756  001CB6  C08B  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 22757  001CBA  BEDF               	btfsc	indf2,7,c
 22758  001CBC  0012               	return	
 22759  001CBE                     u10160:
 22760                           
 22761                           ; BSR set to: 0
 22762                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 22763                           
 22764                           ; BSR set to: 0
 22765  001CBE  0E00               	movlw	0
 22766  001CC0  6E52               	movwf	MSDTasks@i,c
 22767  001CC2                     l13306:
 22768                           
 22769                           ; BSR set to: 0
 22770  001CC2  0E1E               	movlw	30
 22771  001CC4  6452               	cpfsgt	MSDTasks@i,c
 22772  001CC6  D001               	goto	l559
 22773  001CC8  D014               	goto	u10180
 22774  001CCA                     l559:
 22775                           
 22776                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 22777                           
 22778                           ; BSR set to: 0
 22779  001CCA  5052               	movf	MSDTasks@i,w,c
 22780  001CCC  0D01               	mullw	1
 22781  001CCE  0E40               	movlw	64
 22782  001CD0  24F3               	addwf	prodl,w,c
 22783  001CD2  6ED9               	movwf	fsr2l,c
 22784  001CD4  0E0D               	movlw	13
 22785  001CD6  20F4               	addwfc	prodh,w,c
 22786  001CD8  6EDA               	movwf	fsr2h,c
 22787  001CDA  5052               	movf	MSDTasks@i,w,c
 22788  001CDC  0D01               	mullw	1
 22789  001CDE  0E00               	movlw	low _gblCBW
 22790  001CE0  24F3               	addwf	prodl,w,c
 22791  001CE2  6EE1               	movwf	fsr1l,c
 22792  001CE4  0E01               	movlw	high _gblCBW
 22793  001CE6  20F4               	addwfc	prodh,w,c
 22794  001CE8  6EE2               	movwf	fsr1h,c
 22795  001CEA  CFDF FFE7          	movff	indf2,indf1
 22796  001CEE  2A52               	incf	MSDTasks@i,f,c
 22797  001CF0  D7E8               	goto	l13306
 22798  001CF2                     u10180:
 22799                           
 22800                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 22801  001CF2  0100               	movlb	0	; () banked
 22802  001CF4  EE20 F001          	lfsr	2,1
 22803  001CF8  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 22804  001CFA  26D9               	addwf	fsr2l,f,c
 22805  001CFC  518B               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 22806  001CFE  22DA               	addwfc	fsr2h,f,c
 22807  001D00  0E1F               	movlw	31
 22808  001D02  18DE               	xorwf	postinc2,w,c
 22809  001D04  A4D8               	btfss	status,2,c
 22810  001D06  D072               	goto	l561
 22811                           
 22812                           ; BSR set to: 0
 22813  001D08  0E55               	movlw	85
 22814  001D0A  0101               	movlb	1	; () banked
 22815  001D0C  1900               	xorwf	_gblCBW& (0+255),w,b
 22816  001D0E  E16E               	bnz	l561
 22817  001D10  0E53               	movlw	83
 22818  001D12  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 22819  001D14  E16B               	bnz	l561
 22820  001D16  0E42               	movlw	66
 22821  001D18  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 22822  001D1A  E168               	bnz	l561
 22823  001D1C  0E43               	movlw	67
 22824  001D1E  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 22825  001D20  A4D8               	btfss	status,2,c
 22826  001D22  D064               	goto	l561
 22827                           
 22828                           ; BSR set to: 1
 22829                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 22830  001D24  0E01               	movlw	1
 22831  001D26  0100               	movlb	0	; () banked
 22832  001D28  6F9A               	movwf	_MSDCBWValid& (0+255),b
 22833                           
 22834                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 22835  001D2A  0101               	movlb	1	; () banked
 22836  001D2C  510D               	movf	(_gblCBW+13)& (0+255),w,b
 22837  001D2E  A4D8               	btfss	status,2,c
 22838  001D30  D052               	goto	l562
 22839                           
 22840                           ; BSR set to: 1
 22841  001D32  0E11               	movlw	17
 22842  001D34  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 22843  001D36  D04F               	goto	l562
 22844                           
 22845                           ; BSR set to: 1
 22846  001D38  510E               	movf	(_gblCBW+14)& (0+255),w,b
 22847  001D3A  B4D8               	btfsc	status,2,c
 22848  001D3C  D04C               	goto	l562
 22849                           
 22850                           ; BSR set to: 1
 22851  001D3E  C10C  F04D         	movff	_gblCBW+12,??_MSDTasks
 22852  001D42  0E3F               	movlw	63
 22853  001D44  164D               	andwf	??_MSDTasks,f,c
 22854  001D46  A4D8               	btfss	status,2,c
 22855  001D48  D046               	goto	l562
 22856                           
 22857                           ; BSR set to: 1
 22858                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 22859  001D4A  0E55               	movlw	85
 22860  001D4C  010D               	movlb	13	; () banked
 22861  001D4E  6F80               	movwf	128,b	;volatile
 22862  001D50  0E53               	movlw	83
 22863  001D52  6F81               	movwf	129,b	;volatile
 22864  001D54  0E42               	movlw	66
 22865  001D56  6F82               	movwf	130,b	;volatile
 22866  001D58  0E53               	movlw	83
 22867  001D5A  6F83               	movwf	131,b	;volatile
 22868                           
 22869                           ; BSR set to: 13
 22870                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 22871  001D5C  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 22872  001D60  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 22873  001D64  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 22874  001D68  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 22875                           
 22876                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 22877  001D6C  0E00               	movlw	0
 22878  001D6E  6F88               	movwf	136,b	;volatile
 22879  001D70  0E00               	movlw	0
 22880  001D72  6F89               	movwf	137,b	;volatile
 22881  001D74  0E00               	movlw	0
 22882  001D76  6F8A               	movwf	138,b	;volatile
 22883  001D78  0E00               	movlw	0
 22884  001D7A  6F8B               	movwf	139,b	;volatile
 22885                           
 22886                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 22887  001D7C  0E00               	movlw	0
 22888  001D7E  6F8C               	movwf	140,b	;volatile
 22889                           
 22890                           ; BSR set to: 13
 22891                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 22892  001D80  0100               	movlb	0	; () banked
 22893  001D82  69A1               	setf	_MSDCommandState& (0+255),b
 22894                           
 22895                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 22896  001D84  0E00               	movlw	0
 22897  001D86  6FA0               	movwf	_MSDReadState& (0+255),b
 22898                           
 22899                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 22900  001D88  0E00               	movlw	0
 22901  001D8A  6F9F               	movwf	_MSDWriteState& (0+255),b
 22902                           
 22903                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 22904  001D8C  0E00               	movlw	0
 22905  001D8E  6F9E               	movwf	_MSDRetryAttempt& (0+255),b
 22906                           
 22907                           ; BSR set to: 0
 22908                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 22909  001D90  0E03               	movlw	3
 22910  001D92  0101               	movlb	1	; () banked
 22911  001D94  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 22912  001D96  B4D8               	btfsc	status,2,c
 22913  001D98  D008               	goto	l563
 22914                           
 22915                           ; BSR set to: 1
 22916                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 22917  001D9A  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 22918  001D9C  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 22919  001D9E  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 22920  001DA0  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 22921                           
 22922                           ; BSR set to: 1
 22923                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 22924  001DA2  0E00               	movlw	0
 22925  001DA4  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 22926                           
 22927                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 22928  001DA6  0E00               	movlw	0
 22929  001DA8  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 22930  001DAA                     l563:
 22931                           
 22932                           ; BSR set to: 1
 22933                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 22934                           
 22935                           ; BSR set to: 1
 22936  001DAA  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 22937  001DAC  D002               	goto	l564
 22938                           
 22939                           ; BSR set to: 1
 22940                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 22941  001DAE  0E01               	movlw	1
 22942  001DB0  D001               	goto	L17
 22943  001DB2                     l564:
 22944                           
 22945                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 22946                           
 22947                           ; BSR set to: 0
 22948  001DB2  0E02               	movlw	2
 22949  001DB4                     L17:
 22950  001DB4  0100               	movlb	0	; () banked
 22951  001DB6  6FA2               	movwf	_MSD_State& (0+255),b
 22952                           
 22953                           ; BSR set to: 0
 22954                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 22955                           
 22956                           ; BSR set to: 0
 22957  001DB8  0101               	movlb	1	; () banked
 22958  001DBA  5108               	movf	(_gblCBW+8)& (0+255),w,b
 22959  001DBC  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 22960  001DBE  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 22961  001DC0  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 22962  001DC2  B4D8               	btfsc	status,2,c
 22963  001DC4  D002               	goto	l566
 22964                           
 22965                           ; BSR set to: 1
 22966                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 22967  001DC6  0E00               	movlw	0
 22968  001DC8  D001               	goto	L18
 22969  001DCA                     l566:
 22970                           
 22971                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 22972                           
 22973                           ; BSR set to: 0
 22974  001DCA  0E01               	movlw	1
 22975  001DCC                     L18:
 22976  001DCC  0100               	movlb	0	; () banked
 22977  001DCE  6F9B               	movwf	_MSDHostNoData& (0+255),b
 22978                           
 22979                           ; BSR set to: 0
 22980                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 22981                           
 22982                           ; BSR set to: 0
 22983  001DD0  C10F  F0A1         	movff	_gblCBW+15,_MSDCommandState
 22984                           
 22985                           ;usb_device_msd.c: 454: }
 22986  001DD4  0012               	return	
 22987  001DD6                     l562:
 22988                           
 22989                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 22990                           
 22991                           ; BSR set to: 0
 22992  001DD6  0E01               	movlw	1
 22993  001DD8  6E01               	movwf	USBStallEndpoint@dir,c
 22994  001DDA  0E02               	movlw	2
 22995  001DDC  EC26  F020         	call	_USBStallEndpoint
 22996                           
 22997                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 22998  001DE0  0E00               	movlw	0
 22999  001DE2  6E01               	movwf	USBStallEndpoint@dir,c
 23000  001DE4  0E02               	movlw	2
 23001  001DE6  EC26  F020         	call	_USBStallEndpoint
 23002                           
 23003                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 23004  001DEA  0012               	return	
 23005  001DEC                     l561:
 23006                           
 23007                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 23008  001DEC  0E01               	movlw	1
 23009  001DEE  6E01               	movwf	USBStallEndpoint@dir,c
 23010  001DF0  0E02               	movlw	2
 23011  001DF2  EC26  F020         	call	_USBStallEndpoint
 23012                           
 23013                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 23014  001DF6  0E00               	movlw	0
 23015  001DF8  6E01               	movwf	USBStallEndpoint@dir,c
 23016  001DFA  0E02               	movlw	2
 23017  001DFC  EC26  F020         	call	_USBStallEndpoint
 23018                           
 23019                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 23020  001E00  0E00               	movlw	0
 23021  001E02  0100               	movlb	0	; () banked
 23022  001E04  6F9A               	movwf	_MSDCBWValid& (0+255),b
 23023                           
 23024                           ; BSR set to: 0
 23025                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 23026                           
 23027                           ; BSR set to: 0
 23028  001E06  0012               	return	
 23029  001E08                     
 23030                           ; BSR set to: 0
 23031                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 23032                           
 23033                           ; BSR set to: 0
 23034  001E08  EC9D  F01F         	call	_MSDProcessCommand	;wreg free
 23035  001E0C  0AFF               	xorlw	255
 23036  001E0E  A4D8               	btfss	status,2,c
 23037  001E10  0012               	return	
 23038                           
 23039                           ;usb_device_msd.c: 480: {;usb_device_msd.c: 482: MSD_State = 0x03;
 23040  001E12  0E03               	movlw	3
 23041  001E14  0100               	movlb	0	; () banked
 23042  001E16  6FA2               	movwf	_MSD_State& (0+255),b
 23043                           
 23044                           ; BSR set to: 0
 23045                           ;usb_device_msd.c: 483: };usb_device_msd.c: 484: break;
 23046  001E18  0012               	return	
 23047  001E1A                     
 23048                           ; BSR set to: 0
 23049                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 23050                           
 23051                           ; BSR set to: 0
 23052  001E1A  EC9D  F01F         	call	_MSDProcessCommand	;wreg free
 23053  001E1E  0AFF               	xorlw	255
 23054  001E20  A4D8               	btfss	status,2,c
 23055  001E22  0012               	return	
 23056                           
 23057                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 23058  001E24  010D               	movlb	13	; () banked
 23059  001E26  518C               	movf	140,w,b	;volatile
 23060  001E28  A4D8               	btfss	status,2,c
 23061  001E2A  D008               	goto	l575
 23062                           
 23063                           ; BSR set to: 13
 23064  001E2C  5188               	movf	136,w,b	;volatile
 23065  001E2E  1189               	iorwf	137,w,b	;volatile
 23066  001E30  118A               	iorwf	138,w,b	;volatile
 23067  001E32  118B               	iorwf	139,w,b	;volatile
 23068  001E34  B4D8               	btfsc	status,2,c
 23069  001E36  D002               	goto	l575
 23070                           
 23071                           ; BSR set to: 13
 23072                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 23073  001E38  0E02               	movlw	2
 23074  001E3A  6F8C               	movwf	140,b	;volatile
 23075  001E3C                     l575:
 23076                           
 23077                           ; BSR set to: 13
 23078                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 23079  001E3C  0E03               	movlw	3
 23080  001E3E  0100               	movlb	0	; () banked
 23081  001E40  6FA2               	movwf	_MSD_State& (0+255),b
 23082                           
 23083                           ; BSR set to: 0
 23084                           ;usb_device_msd.c: 494: };usb_device_msd.c: 495: break;
 23085  001E42  0012               	return	
 23086  001E44                     
 23087                           ; BSR set to: 0
 23088                           
 23089                           ; BSR set to: 0
 23090  001E44  C070  F04E         	movff	_pBDTEntryIn+4,_MSDTasks$2372
 23091  001E48  C071  F04F         	movff	_pBDTEntryIn+5,_MSDTasks$2372+1
 23092                           
 23093                           ; BSR set to: 0
 23094                           
 23095                           ; BSR set to: 0
 23096                           
 23097                           ; BSR set to: 0
 23098  001E4C  504E               	movf	_MSDTasks$2372,w,c
 23099  001E4E  104F               	iorwf	_MSDTasks$2372+1,w,c
 23100  001E50  B4D8               	btfsc	status,2,c
 23101  001E52  D00A               	goto	l577
 23102                           
 23103                           ; BSR set to: 0
 23104  001E54  C070  F050         	movff	_pBDTEntryIn+4,_MSDTasks$2373
 23105  001E58  C071  F051         	movff	_pBDTEntryIn+5,_MSDTasks$2373+1
 23106                           
 23107                           ; BSR set to: 0
 23108                           
 23109                           ; BSR set to: 0
 23110                           
 23111                           ; BSR set to: 0
 23112                           
 23113                           ; BSR set to: 0
 23114  001E5C  C050  FFD9         	movff	_MSDTasks$2373,fsr2l
 23115  001E60  C051  FFDA         	movff	_MSDTasks$2373+1,fsr2h
 23116  001E64  BEDF               	btfsc	indf2,7,c
 23117  001E66  0012               	return	
 23118  001E68                     l577:
 23119                           
 23120                           ; BSR set to: 0
 23121                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 23122                           
 23123                           ; BSR set to: 0
 23124  001E68  0E01               	movlw	1
 23125  001E6A  6E01               	movwf	USBTransferOnePacket@dir,c
 23126  001E6C  0E80               	movlw	128
 23127  001E6E  6E02               	movwf	USBTransferOnePacket@data,c
 23128  001E70  0E0D               	movlw	13
 23129  001E72  6E03               	movwf	USBTransferOnePacket@data+1,c
 23130  001E74  0E0D               	movlw	13
 23131  001E76  6E04               	movwf	USBTransferOnePacket@len,c
 23132  001E78  0E02               	movlw	2
 23133  001E7A  EC32  F022         	call	_USBTransferOnePacket
 23134  001E7E  C001  F088         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 23135  001E82  C002  F089         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 23136                           
 23137                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 23138  001E86  0100               	movlb	0	; () banked
 23139  001E88  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 23140  001E8A  118B               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 23141  001E8C  B4D8               	btfsc	status,2,c
 23142  001E8E  D006               	goto	u10350
 23143                           
 23144                           ; BSR set to: 0
 23145  001E90  C08A  FFD9         	movff	_USBMSDOutHandle,fsr2l
 23146  001E94  C08B  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 23147  001E98  BEDF               	btfsc	indf2,7,c
 23148  001E9A  D00F               	goto	l586
 23149  001E9C                     u10350:
 23150                           
 23151                           ; BSR set to: 0
 23152                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 23153                           
 23154                           ; BSR set to: 0
 23155  001E9C  0E00               	movlw	0
 23156  001E9E  6E01               	movwf	USBTransferOnePacket@dir,c
 23157  001EA0  0E40               	movlw	64
 23158  001EA2  6E02               	movwf	USBTransferOnePacket@data,c
 23159  001EA4  0E0D               	movlw	13
 23160  001EA6  6E03               	movwf	USBTransferOnePacket@data+1,c
 23161  001EA8  0E40               	movlw	64
 23162  001EAA  6E04               	movwf	USBTransferOnePacket@len,c
 23163  001EAC  0E02               	movlw	2
 23164  001EAE  EC32  F022         	call	_USBTransferOnePacket
 23165  001EB2  C001  F08A         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 23166  001EB6  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 23167  001EBA                     l586:
 23168                           
 23169                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 23170  001EBA  0E00               	movlw	0
 23171  001EBC  0100               	movlb	0	; () banked
 23172  001EBE  6FA2               	movwf	_MSD_State& (0+255),b
 23173                           
 23174                           ;usb_device_msd.c: 513: break;
 23175  001EC0  0012               	return	
 23176  001EC2                     
 23177                           ; BSR set to: 0
 23178                           ;usb_device_msd.c: 518: MSD_State=0x00;
 23179                           
 23180                           ; BSR set to: 0
 23181  001EC2  0E00               	movlw	0
 23182  001EC4  6FA2               	movwf	_MSD_State& (0+255),b
 23183                           
 23184                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 23185  001EC6  0E02               	movlw	2
 23186  001EC8  010D               	movlb	13	; () banked
 23187  001ECA  6F8C               	movwf	140,b	;volatile
 23188                           
 23189                           ; BSR set to: 13
 23190                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 23191  001ECC  0E00               	movlw	0
 23192  001ECE  6E01               	movwf	USBStallEndpoint@dir,c
 23193  001ED0  0E02               	movlw	2
 23194  001ED2  EC26  F020         	call	_USBStallEndpoint
 23195                           
 23196                           ;usb_device_msd.c: 521: }
 23197  001ED6  0012               	return	
 23198  001ED8                     l554:
 23199  001ED8  0100               	movlb	0	; () banked
 23200  001EDA  51A2               	movf	_MSD_State& (0+255),w,b
 23201                           
 23202                           ; Switch size 1, requested type "space"
 23203                           ; Number of cases is 4, Range of values is 0 to 3
 23204                           ; switch strategies available:
 23205                           ; Name         Instructions Cycles
 23206                           ; simple_byte           13     7 (average)
 23207                           ;	Chosen strategy is simple_byte
 23208  001EDC  0A00               	xorlw	0	; case 0
 23209  001EDE  B4D8               	btfsc	status,2,c
 23210  001EE0  D6E4               	goto	l555
 23211  001EE2  0A01               	xorlw	1	; case 1
 23212  001EE4  B4D8               	btfsc	status,2,c
 23213  001EE6  D790               	goto	l571
 23214  001EE8  0A03               	xorlw	3	; case 2
 23215  001EEA  B4D8               	btfsc	status,2,c
 23216  001EEC  D796               	goto	l573
 23217  001EEE  0A01               	xorlw	1	; case 3
 23218  001EF0  B4D8               	btfsc	status,2,c
 23219  001EF2  D7A8               	goto	l576
 23220  001EF4  D7E6               	goto	l589
 23221  001EF6                     __end_of_MSDTasks:
 23222                           	opt stack 0
 23223                           tosu	equ	0xFFF
 23224                           tosh	equ	0xFFE
 23225                           tosl	equ	0xFFD
 23226                           pclath	equ	0xFFA
 23227                           tblptru	equ	0xFF8
 23228                           tblptrh	equ	0xFF7
 23229                           tblptrl	equ	0xFF6
 23230                           tablat	equ	0xFF5
 23231                           prodh	equ	0xFF4
 23232                           prodl	equ	0xFF3
 23233                           intcon	equ	0xFF2
 23234                           intcon2	equ	0xFF1
 23235                           intcon3	equ	0xFF0
 23236                           indf0	equ	0xFEF
 23237                           postinc0	equ	0xFEE
 23238                           fsr0h	equ	0xFEA
 23239                           fsr0l	equ	0xFE9
 23240                           wreg	equ	0xFE8
 23241                           indf1	equ	0xFE7
 23242                           postdec1	equ	0xFE5
 23243                           plusw1	equ	0xFE3
 23244                           fsr1h	equ	0xFE2
 23245                           fsr1l	equ	0xFE1
 23246                           indf2	equ	0xFDF
 23247                           postinc2	equ	0xFDE
 23248                           postdec2	equ	0xFDD
 23249                           plusw2	equ	0xFDB
 23250                           fsr2h	equ	0xFDA
 23251                           fsr2l	equ	0xFD9
 23252                           status	equ	0xFD8
 23253                           
 23254 ;; *************** function _MSDProcessCommand *****************
 23255 ;; Defined at:
 23256 ;;		line 553 in file "usb_device_msd.c"
 23257 ;; Parameters:    Size  Location     Type
 23258 ;;		None
 23259 ;; Auto vars:     Size  Location     Type
 23260 ;;		None
 23261 ;; Return value:  Size  Location     Type
 23262 ;;                  1    wreg      unsigned char 
 23263 ;; Registers used:
 23264 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 23265 ;; Tracked objects:
 23266 ;;		On entry : 0/0
 23267 ;;		On exit  : 0/0
 23268 ;;		Unchanged: 0/0
 23269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23272 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23273 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23274 ;;Total ram usage:        5 bytes
 23275 ;; Hardware stack levels used:    1
 23276 ;; Hardware stack levels required when called:    9
 23277 ;; This function calls:
 23278 ;;		_ExternalFlash_MediaDetect
 23279 ;;		_ExternalFlash_MediaInitialize
 23280 ;;		_MSDProcessCommandMediaAbsent
 23281 ;;		_MSDProcessCommandMediaPresent
 23282 ;; This function is called by:
 23283 ;;		_MSDTasks
 23284 ;; This function uses a non-reentrant model
 23285 ;;
 23286                           
 23287                           	psect	text107
 23288  003F3A                     __ptext107:
 23289                           	opt stack 0
 23290  003F3A                     _MSDProcessCommand:
 23291                           	opt stack 19
 23292                           
 23293                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 23294                           
 23295                           ;incstack = 0
 23296  003F3A  C1F0  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 23297  003F3E  C1F1  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 23298  003F42  D801               	call	u9258
 23299  003F44  D00A               	goto	u9259
 23300  003F46                     u9258:
 23301  003F46  0005               	push	
 23302  003F48  6EFA               	movwf	pclath,c
 23303  003F4A  0101               	movlb	1	; () banked
 23304  003F4C  51E8               	movf	(_LUN+6)& (0+255),w,b
 23305  003F4E  6EFD               	movwf	tosl,c
 23306  003F50  51E9               	movf	(_LUN+7)& (0+255),w,b
 23307  003F52  6EFE               	movwf	tosh,c
 23308  003F54  6AFF               	clrf	tosu,c
 23309  003F56  50FA               	movf	pclath,w,c
 23310  003F58  0012               	return		;indir
 23311  003F5A                     u9259:
 23312  003F5A  0900               	iorlw	0
 23313  003F5C  B4D8               	btfsc	status,2,c
 23314  003F5E  D00C               	goto	u9270
 23315  003F60  0101               	movlb	1	; () banked
 23316  003F62  510D               	movf	(_gblCBW+13)& (0+255),w,b
 23317  003F64  0D01               	mullw	1
 23318  003F66  0E9C               	movlw	low _SoftDetach
 23319  003F68  24F3               	addwf	prodl,w,c
 23320  003F6A  6ED9               	movwf	fsr2l,c
 23321  003F6C  0E00               	movlw	high _SoftDetach
 23322  003F6E  20F4               	addwfc	prodh,w,c
 23323  003F70  6EDA               	movwf	fsr2h,c
 23324  003F72  04DE               	decf	postinc2,w,c
 23325  003F74  A4D8               	btfss	status,2,c
 23326  003F76  D019               	goto	l592
 23327  003F78                     u9270:
 23328                           
 23329                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 23330                           
 23331                           ; BSR set to: 1
 23332  003F78  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 23333  003F7C  0E01               	movlw	1
 23334  003F7E  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 23335  003F80  0E00               	movlw	0
 23336  003F82  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 23337  003F84  2A48               	incf	??_MSDProcessCommand,f,c
 23338  003F86  D003               	goto	u9284
 23339  003F88                     u9285:
 23340  003F88  90D8               	bcf	status,0,c
 23341  003F8A  3649               	rlcf	??_MSDProcessCommand+1,f,c
 23342  003F8C  364A               	rlcf	??_MSDProcessCommand+2,f,c
 23343  003F8E                     u9284:
 23344  003F8E  2E48               	decfsz	??_MSDProcessCommand,f,c
 23345  003F90  D7FB               	goto	u9285
 23346  003F92  1C49               	comf	??_MSDProcessCommand+1,w,c
 23347  003F94  6E4B               	movwf	(??_MSDProcessCommand+3)& (0+255),c
 23348  003F96  1C4A               	comf	??_MSDProcessCommand+2,w,c
 23349  003F98  6E4C               	movwf	(??_MSDProcessCommand+4)& (0+255),c
 23350  003F9A  504B               	movf	??_MSDProcessCommand+3,w,c
 23351  003F9C  0101               	movlb	1	; () banked
 23352  003F9E  1770               	andwf	_gblMediaPresent& (0+255),f,b
 23353  003FA0  504C               	movf	??_MSDProcessCommand+4,w,c
 23354  003FA2  1771               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 23355                           
 23356                           ; BSR set to: 1
 23357                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 23358  003FA4  ECD2  F035         	call	_MSDProcessCommandMediaAbsent	;wreg free
 23359                           
 23360                           ;usb_device_msd.c: 563: }
 23361  003FA8  D04E               	goto	l599
 23362  003FAA                     l592:
 23363                           
 23364                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 23365  003FAA  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 23366  003FAE  0E01               	movlw	1
 23367  003FB0  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 23368  003FB2  0E00               	movlw	0
 23369  003FB4  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 23370  003FB6  2A48               	incf	??_MSDProcessCommand,f,c
 23371  003FB8  D003               	goto	u9294
 23372  003FBA                     u9295:
 23373  003FBA  90D8               	bcf	status,0,c
 23374  003FBC  3649               	rlcf	??_MSDProcessCommand+1,f,c
 23375  003FBE  364A               	rlcf	??_MSDProcessCommand+2,f,c
 23376  003FC0                     u9294:
 23377  003FC0  2E48               	decfsz	??_MSDProcessCommand,f,c
 23378  003FC2  D7FB               	goto	u9295
 23379  003FC4  0101               	movlb	1	; () banked
 23380  003FC6  5170               	movf	_gblMediaPresent& (0+255),w,b
 23381  003FC8  1649               	andwf	??_MSDProcessCommand+1,f,c
 23382  003FCA  5171               	movf	(_gblMediaPresent+1)& (0+255),w,b
 23383  003FCC  164A               	andwf	??_MSDProcessCommand+2,f,c
 23384  003FCE  5049               	movf	??_MSDProcessCommand+1,w,c
 23385  003FD0  104A               	iorwf	??_MSDProcessCommand+2,w,c
 23386  003FD2  A4D8               	btfss	status,2,c
 23387  003FD4  D036               	goto	l596
 23388                           
 23389                           ; BSR set to: 1
 23390                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 23391  003FD6  C1F0  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 23392  003FDA  C1F1  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 23393  003FDE  D801               	call	u9318
 23394  003FE0  D009               	goto	u9319
 23395  003FE2                     u9318:
 23396  003FE2  0005               	push	
 23397  003FE4  6EFA               	movwf	pclath,c
 23398  003FE6  51E2               	movf	_LUN& (0+255),w,b
 23399  003FE8  6EFD               	movwf	tosl,c
 23400  003FEA  51E3               	movf	(_LUN+1)& (0+255),w,b
 23401  003FEC  6EFE               	movwf	tosh,c
 23402  003FEE  6AFF               	clrf	tosu,c
 23403  003FF0  50FA               	movf	pclath,w,c
 23404  003FF2  0012               	return		;indir
 23405  003FF4                     u9319:
 23406  003FF4  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 23407  003FF6  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 23408  003FF8  B4D8               	btfsc	status,2,c
 23409  003FFA  D020               	goto	l597
 23410                           
 23411                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 23412  003FFC  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 23413  004000  0E01               	movlw	1
 23414  004002  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 23415  004004  0E00               	movlw	0
 23416  004006  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 23417  004008  2A48               	incf	??_MSDProcessCommand,f,c
 23418  00400A  D003               	goto	u9334
 23419  00400C                     u9335:
 23420  00400C  90D8               	bcf	status,0,c
 23421  00400E  3649               	rlcf	??_MSDProcessCommand+1,f,c
 23422  004010  364A               	rlcf	??_MSDProcessCommand+2,f,c
 23423  004012                     u9334:
 23424  004012  2E48               	decfsz	??_MSDProcessCommand,f,c
 23425  004014  D7FB               	goto	u9335
 23426  004016  5049               	movf	??_MSDProcessCommand+1,w,c
 23427  004018  0101               	movlb	1	; () banked
 23428  00401A  1370               	iorwf	_gblMediaPresent& (0+255),f,b
 23429  00401C  504A               	movf	??_MSDProcessCommand+2,w,c
 23430  00401E  1371               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 23431                           
 23432                           ; BSR set to: 1
 23433                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 23434  004020  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 23435  004022  0BF0               	andlw	-16
 23436  004024  0906               	iorlw	6
 23437  004026  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 23438                           
 23439                           ; BSR set to: 1
 23440                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 23441  004028  0E28               	movlw	40
 23442  00402A  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 23443                           
 23444                           ; BSR set to: 1
 23445                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 23446  00402C  0E00               	movlw	0
 23447  00402E  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 23448                           
 23449                           ; BSR set to: 1
 23450                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 23451  004030  0E01               	movlw	1
 23452  004032  010D               	movlb	13	; () banked
 23453  004034  6F8C               	movwf	140,b	;volatile
 23454                           
 23455                           ; BSR set to: 13
 23456                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 23457  004036  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 23458                           
 23459                           ;usb_device_msd.c: 589: }
 23460  00403A  D005               	goto	l599
 23461  00403C                     l597:
 23462                           
 23463                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 23464  00403C  ECD2  F035         	call	_MSDProcessCommandMediaAbsent	;wreg free
 23465                           
 23466                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 23467  004040  D002               	goto	l599
 23468  004042                     l596:
 23469                           
 23470                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 23471  004042  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 23472  004046                     l599:
 23473                           
 23474                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 23475  004046  0100               	movlb	0	; () banked
 23476  004048  51A1               	movf	_MSDCommandState& (0+255),w,b
 23477  00404A  0012               	return	
 23478  00404C                     __end_of_MSDProcessCommand:
 23479                           	opt stack 0
 23480                           tosu	equ	0xFFF
 23481                           tosh	equ	0xFFE
 23482                           tosl	equ	0xFFD
 23483                           pclath	equ	0xFFA
 23484                           tblptru	equ	0xFF8
 23485                           tblptrh	equ	0xFF7
 23486                           tblptrl	equ	0xFF6
 23487                           tablat	equ	0xFF5
 23488                           prodh	equ	0xFF4
 23489                           prodl	equ	0xFF3
 23490                           intcon	equ	0xFF2
 23491                           intcon2	equ	0xFF1
 23492                           intcon3	equ	0xFF0
 23493                           indf0	equ	0xFEF
 23494                           postinc0	equ	0xFEE
 23495                           fsr0h	equ	0xFEA
 23496                           fsr0l	equ	0xFE9
 23497                           wreg	equ	0xFE8
 23498                           indf1	equ	0xFE7
 23499                           postdec1	equ	0xFE5
 23500                           plusw1	equ	0xFE3
 23501                           fsr1h	equ	0xFE2
 23502                           fsr1l	equ	0xFE1
 23503                           indf2	equ	0xFDF
 23504                           postinc2	equ	0xFDE
 23505                           postdec2	equ	0xFDD
 23506                           plusw2	equ	0xFDB
 23507                           fsr2h	equ	0xFDA
 23508                           fsr2l	equ	0xFD9
 23509                           status	equ	0xFD8
 23510                           
 23511 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 23512 ;; Defined at:
 23513 ;;		line 635 in file "usb_device_msd.c"
 23514 ;; Parameters:    Size  Location     Type
 23515 ;;		None
 23516 ;; Auto vars:     Size  Location     Type
 23517 ;;		None
 23518 ;; Return value:  Size  Location     Type
 23519 ;;                  1    wreg      void 
 23520 ;; Registers used:
 23521 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 23522 ;; Tracked objects:
 23523 ;;		On entry : 0/0
 23524 ;;		On exit  : 0/0
 23525 ;;		Unchanged: 0/0
 23526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23531 ;;Total ram usage:        0 bytes
 23532 ;; Hardware stack levels used:    1
 23533 ;; Hardware stack levels required when called:    8
 23534 ;; This function calls:
 23535 ;;		_MSDErrorHandler
 23536 ;;		_MSDProcessCommandMediaPresent
 23537 ;;		_ResetSenseData
 23538 ;; This function is called by:
 23539 ;;		_MSDProcessCommand
 23540 ;; This function uses a non-reentrant model
 23541 ;;
 23542                           
 23543                           	psect	text108
 23544  006BA4                     __ptext108:
 23545                           	opt stack 0
 23546  006BA4                     _MSDProcessCommandMediaAbsent:
 23547                           	opt stack 19
 23548                           
 23549                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 23550                           
 23551                           ; BSR set to: 0
 23552                           ;incstack = 0
 23553  006BA4  D01E               	goto	l603
 23554  006BA6                     
 23555                           ;usb_device_msd.c: 646: ResetSenseData();
 23556  006BA6  EC03  F036         	call	_ResetSenseData	;wreg free
 23557                           
 23558                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 23559  006BAA  0101               	movlb	1	; () banked
 23560  006BAC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 23561  006BAE  0BF0               	andlw	-16
 23562  006BB0  0902               	iorlw	2
 23563  006BB2  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 23564                           
 23565                           ; BSR set to: 1
 23566                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 23567  006BB4  0E3A               	movlw	58
 23568  006BB6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 23569                           
 23570                           ; BSR set to: 1
 23571                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 23572  006BB8  0E00               	movlw	0
 23573  006BBA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 23574                           
 23575                           ; BSR set to: 1
 23576                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 23577  006BBC  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 23578                           
 23579                           ;usb_device_msd.c: 655: break;
 23580  006BC0  0012               	return	
 23581  006BC2                     
 23582                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 23583  006BC2  0E01               	movlw	1
 23584  006BC4  010D               	movlb	13	; () banked
 23585  006BC6  6F8C               	movwf	140,b	;volatile
 23586                           
 23587                           ; BSR set to: 13
 23588                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 23589  006BC8  0100               	movlb	0	; () banked
 23590  006BCA  69A1               	setf	_MSDCommandState& (0+255),b
 23591                           
 23592                           ;usb_device_msd.c: 665: break;
 23593  006BCC  0012               	return	
 23594  006BCE                     
 23595                           ; BSR set to: 0
 23596                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 23597                           
 23598                           ; BSR set to: 0
 23599  006BCE  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 23600                           
 23601                           ;usb_device_msd.c: 671: break;
 23602  006BD2  0012               	return	
 23603  006BD4                     
 23604                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 23605  006BD4  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 23606                           
 23607                           ;usb_device_msd.c: 677: break;
 23608  006BD8  0012               	return	
 23609  006BDA                     
 23610                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 23611  006BDA  0E7F               	movlw	127
 23612  006BDC  EC2D  F021         	call	_MSDErrorHandler
 23613                           
 23614                           ;usb_device_msd.c: 685: }
 23615                           
 23616                           ;usb_device_msd.c: 684: break;
 23617  006BE0  0012               	return	
 23618  006BE2                     l603:
 23619  006BE2  0100               	movlb	0	; () banked
 23620  006BE4  51A1               	movf	_MSDCommandState& (0+255),w,b
 23621                           
 23622                           ; Switch size 1, requested type "space"
 23623                           ; Number of cases is 5, Range of values is 0 to 253
 23624                           ; switch strategies available:
 23625                           ; Name         Instructions Cycles
 23626                           ; simple_byte           16     9 (average)
 23627                           ;	Chosen strategy is simple_byte
 23628  006BE6  0A00               	xorlw	0	; case 0
 23629  006BE8  B4D8               	btfsc	status,2,c
 23630  006BEA  D7EB               	goto	l606
 23631  006BEC  0A03               	xorlw	3	; case 3
 23632  006BEE  B4D8               	btfsc	status,2,c
 23633  006BF0  D7DA               	goto	l604
 23634  006BF2  0A11               	xorlw	17	; case 18
 23635  006BF4  B4D8               	btfsc	status,2,c
 23636  006BF6  D7EB               	goto	l608
 23637  006BF8  0A0C               	xorlw	12	; case 30
 23638  006BFA  B4D8               	btfsc	status,2,c
 23639  006BFC  D7E2               	goto	l606
 23640  006BFE  0AE3               	xorlw	227	; case 253
 23641  006C00  B4D8               	btfsc	status,2,c
 23642  006C02  D7E8               	goto	l609
 23643  006C04  D7EA               	goto	l610
 23644  006C06                     __end_of_MSDProcessCommandMediaAbsent:
 23645                           	opt stack 0
 23646                           tosu	equ	0xFFF
 23647                           tosh	equ	0xFFE
 23648                           tosl	equ	0xFFD
 23649                           pclath	equ	0xFFA
 23650                           tblptru	equ	0xFF8
 23651                           tblptrh	equ	0xFF7
 23652                           tblptrl	equ	0xFF6
 23653                           tablat	equ	0xFF5
 23654                           prodh	equ	0xFF4
 23655                           prodl	equ	0xFF3
 23656                           intcon	equ	0xFF2
 23657                           intcon2	equ	0xFF1
 23658                           intcon3	equ	0xFF0
 23659                           indf0	equ	0xFEF
 23660                           postinc0	equ	0xFEE
 23661                           fsr0h	equ	0xFEA
 23662                           fsr0l	equ	0xFE9
 23663                           wreg	equ	0xFE8
 23664                           indf1	equ	0xFE7
 23665                           postdec1	equ	0xFE5
 23666                           plusw1	equ	0xFE3
 23667                           fsr1h	equ	0xFE2
 23668                           fsr1l	equ	0xFE1
 23669                           indf2	equ	0xFDF
 23670                           postinc2	equ	0xFDE
 23671                           postdec2	equ	0xFDD
 23672                           plusw2	equ	0xFDB
 23673                           fsr2h	equ	0xFDA
 23674                           fsr2l	equ	0xFD9
 23675                           status	equ	0xFD8
 23676                           
 23677 ;; *************** function _MSDProcessCommandMediaPresent *****************
 23678 ;; Defined at:
 23679 ;;		line 712 in file "usb_device_msd.c"
 23680 ;; Parameters:    Size  Location     Type
 23681 ;;		None
 23682 ;; Auto vars:     Size  Location     Type
 23683 ;;  capacity        4   66[COMRAM] struct .
 23684 ;;  sectorSize      4   62[COMRAM] struct .
 23685 ;;  i               1   70[COMRAM] unsigned char 
 23686 ;;  NumBytesInPa    1   61[COMRAM] unsigned char 
 23687 ;; Return value:  Size  Location     Type
 23688 ;;                  1    wreg      void 
 23689 ;; Registers used:
 23690 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 23691 ;; Tracked objects:
 23692 ;;		On entry : 0/0
 23693 ;;		On exit  : 0/0
 23694 ;;		Unchanged: 0/0
 23695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23697 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23698 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23699 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23700 ;;Total ram usage:       14 bytes
 23701 ;; Hardware stack levels used:    1
 23702 ;; Hardware stack levels required when called:    7
 23703 ;; This function calls:
 23704 ;;		_ExternalFlash_CapacityRead
 23705 ;;		_ExternalFlash_SectorSizeRead
 23706 ;;		_ExternalFlash_WriteProtectStateGet
 23707 ;;		_MSDCheckForErrorCases
 23708 ;;		_MSDComputeDeviceInAndResidue
 23709 ;;		_MSDErrorHandler
 23710 ;;		_MSDReadHandler
 23711 ;;		_MSDWriteHandler
 23712 ;;		_ResetSenseData
 23713 ;;		_USBTransferOnePacket
 23714 ;;		_memcpy
 23715 ;; This function is called by:
 23716 ;;		_MSDProcessCommand
 23717 ;;		_MSDProcessCommandMediaAbsent
 23718 ;; This function uses a non-reentrant model
 23719 ;;
 23720                           
 23721                           	psect	text109
 23722  00049C                     __ptext109:
 23723                           	opt stack 0
 23724  00049C                     _MSDProcessCommandMediaPresent:
 23725                           	opt stack 20
 23726                           
 23727                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 23728                           
 23729                           ;incstack = 0
 23730  00049C  D1B9               	goto	l614
 23731  00049E                     
 23732                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 23733  00049E  EC8E  F015         	call	_MSDReadHandler	;wreg free
 23734  0004A2  0900               	iorlw	0
 23735  0004A4  A4D8               	btfss	status,2,c
 23736  0004A6  0012               	return	
 23737                           
 23738                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 23739  0004A8  0100               	movlb	0	; () banked
 23740  0004AA  69A1               	setf	_MSDCommandState& (0+255),b
 23741                           
 23742                           ; BSR set to: 0
 23743                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 23744  0004AC  0012               	return	
 23745  0004AE                     
 23746                           ; BSR set to: 0
 23747                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 23748                           
 23749                           ; BSR set to: 0
 23750  0004AE  EC7F  F00A         	call	_MSDWriteHandler	;wreg free
 23751  0004B2  0900               	iorlw	0
 23752  0004B4  A4D8               	btfss	status,2,c
 23753  0004B6  0012               	return	
 23754                           
 23755                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 23756  0004B8  0100               	movlb	0	; () banked
 23757  0004BA  69A1               	setf	_MSDCommandState& (0+255),b
 23758                           
 23759                           ; BSR set to: 0
 23760                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 23761  0004BC  0012               	return	
 23762  0004BE                     
 23763                           ; BSR set to: 0
 23764                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 23765                           
 23766                           ; BSR set to: 0
 23767  0004BE  059B               	decf	_MSDHostNoData& (0+255),w,b
 23768  0004C0  A4D8               	btfss	status,2,c
 23769  0004C2  D002               	goto	l621
 23770                           
 23771                           ; BSR set to: 0
 23772                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 23773  0004C4  69A1               	setf	_MSDCommandState& (0+255),b
 23774                           
 23775                           ;usb_device_msd.c: 751: break;
 23776  0004C6  0012               	return	
 23777  0004C8                     l621:
 23778                           
 23779                           ; BSR set to: 0
 23780                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 23781  0004C8  C112  F087         	movff	_gblCBW+18,_TransferLength+1
 23782                           
 23783                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 23784  0004CC  C113  F086         	movff	_gblCBW+19,_TransferLength
 23785                           
 23786                           ; BSR set to: 0
 23787                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 23788  0004D0  C086  F00B         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 23789  0004D4  C087  F00C         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 23790  0004D8  6A0D               	clrf	MSDCheckForErrorCases@DeviceBytes+2,c
 23791  0004DA  6A0E               	clrf	MSDCheckForErrorCases@DeviceBytes+3,c
 23792  0004DC  EC86  F024         	call	_MSDCheckForErrorCases	;wreg free
 23793  0004E0  0900               	iorlw	0
 23794  0004E2  A4D8               	btfss	status,2,c
 23795  0004E4  0012               	return	
 23796                           
 23797                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 23798                           
 23799                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 23800  0004E6  0E00               	movlw	0
 23801  0004E8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 23802  0004EA  0E24               	movlw	36
 23803  0004EC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 23804  0004EE  EC11  F02E         	call	_MSDComputeDeviceInAndResidue	;wreg free
 23805                           
 23806                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 23807  0004F2  0E00               	movlw	0
 23808  0004F4  6E01               	movwf	memcpy@d1,c
 23809  0004F6  0E06               	movlw	6
 23810  0004F8  6E02               	movwf	memcpy@d1+1,c
 23811  0004FA  0E49               	movlw	low _inq_resp
 23812  0004FC  6E03               	movwf	memcpy@s1,c
 23813  0004FE  0E8F               	movlw	high _inq_resp
 23814  000500  6E04               	movwf	memcpy@s1+1,c
 23815  000502  5003               	movf	memcpy@s1,w,c
 23816  000504  1004               	iorwf	memcpy@s1+1,w,c
 23817  000506  A4D8               	btfss	status,2,c
 23818  000508  0E00               	movlw	low (__mediumconst shr (0+16))
 23819  00050A  6E05               	movwf	memcpy@s1+2,c
 23820  00050C  0E00               	movlw	0
 23821  00050E  6E07               	movwf	memcpy@n+1,c
 23822  000510  0E24               	movlw	36
 23823  000512  6E06               	movwf	memcpy@n,c
 23824  000514  EC9F  F035         	call	_memcpy	;wreg free
 23825                           
 23826                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 23827  000518  0EFD               	movlw	253
 23828  00051A  0100               	movlb	0	; () banked
 23829  00051C  6FA1               	movwf	_MSDCommandState& (0+255),b
 23830                           
 23831                           ;usb_device_msd.c: 773: break;
 23832  00051E  0012               	return	
 23833  000520                     
 23834                           ; BSR set to: 0
 23835                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 23836                           
 23837                           ; BSR set to: 0
 23838  000520  C1F0  F001         	movff	_LUN+14,ExternalFlash_CapacityRead@config
 23839  000524  C1F1  F002         	movff	_LUN+15,ExternalFlash_CapacityRead@config+1
 23840  000528  D801               	call	u8188
 23841  00052A  D00A               	goto	u8189
 23842  00052C                     u8188:
 23843  00052C  0005               	push	
 23844  00052E  6EFA               	movwf	pclath,c
 23845  000530  0101               	movlb	1	; () banked
 23846  000532  51E4               	movf	(_LUN+2)& (0+255),w,b
 23847  000534  6EFD               	movwf	tosl,c
 23848  000536  51E5               	movf	(_LUN+3)& (0+255),w,b
 23849  000538  6EFE               	movwf	tosh,c
 23850  00053A  6AFF               	clrf	tosu,c
 23851  00053C  50FA               	movf	pclath,w,c
 23852  00053E  0012               	return		;indir
 23853  000540                     u8189:
 23854  000540  C001  F043         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 23855  000544  C002  F044         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 23856  000548  C003  F045         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 23857  00054C  C004  F046         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 23858                           
 23859                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 23860  000550  C1F0  F001         	movff	_LUN+14,ExternalFlash_SectorSizeRead@config
 23861  000554  C1F1  F002         	movff	_LUN+15,ExternalFlash_SectorSizeRead@config+1
 23862  000558  D801               	call	u8198
 23863  00055A  D00A               	goto	u8199
 23864  00055C                     u8198:
 23865  00055C  0005               	push	
 23866  00055E  6EFA               	movwf	pclath,c
 23867  000560  0101               	movlb	1	; () banked
 23868  000562  51E6               	movf	(_LUN+4)& (0+255),w,b
 23869  000564  6EFD               	movwf	tosl,c
 23870  000566  51E7               	movf	(_LUN+5)& (0+255),w,b
 23871  000568  6EFE               	movwf	tosh,c
 23872  00056A  6AFF               	clrf	tosu,c
 23873  00056C  50FA               	movf	pclath,w,c
 23874  00056E  0012               	return		;indir
 23875  000570                     u8199:
 23876  000570  C001  F03F         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 23877  000574  C002  F040         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 23878  000578  6A41               	clrf	MSDProcessCommandMediaPresent@sectorSize+2,c
 23879  00057A  6A42               	clrf	MSDProcessCommandMediaPresent@sectorSize+3,c
 23880                           
 23881                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 23882  00057C  EE26 F000          	lfsr	2,1536
 23883  000580  C046  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 23884                           
 23885                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 23886  000584  EE26 F001          	lfsr	2,1537	;volatile
 23887  000588  C045  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 23888                           
 23889                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 23890  00058C  EE26 F002          	lfsr	2,1538	;volatile
 23891  000590  C044  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 23892                           
 23893                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 23894  000594  EE26 F003          	lfsr	2,1539	;volatile
 23895  000598  C043  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 23896                           
 23897                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 23898  00059C  EE26 F004          	lfsr	2,1540	;volatile
 23899  0005A0  C042  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 23900                           
 23901                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 23902  0005A4  EE26 F005          	lfsr	2,1541	;volatile
 23903  0005A8  C041  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 23904                           
 23905                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 23906  0005AC  EE26 F006          	lfsr	2,1542	;volatile
 23907  0005B0  C040  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 23908                           
 23909                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 23910  0005B4  EE26 F007          	lfsr	2,1543	;volatile
 23911  0005B8  C03F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 23912                           
 23913                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 23914  0005BC  0E00               	movlw	0
 23915  0005BE  0100               	movlb	0	; () banked
 23916  0005C0  6F87               	movwf	(_TransferLength+1)& (0+255),b
 23917  0005C2  0E08               	movlw	8
 23918  0005C4  6F86               	movwf	_TransferLength& (0+255),b
 23919                           
 23920                           ; BSR set to: 0
 23921                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 23922  0005C6  0E00               	movlw	0
 23923  0005C8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 23924  0005CA  0E08               	movlw	8
 23925  0005CC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 23926  0005CE  EC11  F02E         	call	_MSDComputeDeviceInAndResidue	;wreg free
 23927                           
 23928                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 23929  0005D2  0EFD               	movlw	253
 23930  0005D4  0100               	movlb	0	; () banked
 23931  0005D6  6FA1               	movwf	_MSDCommandState& (0+255),b
 23932                           
 23933                           ;usb_device_msd.c: 802: break;
 23934  0005D8  0012               	return	
 23935  0005DA                     
 23936                           ; BSR set to: 0
 23937                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 23938                           
 23939                           ; BSR set to: 0
 23940  0005DA  059B               	decf	_MSDHostNoData& (0+255),w,b
 23941  0005DC  A4D8               	btfss	status,2,c
 23942  0005DE  D002               	goto	l625
 23943                           
 23944                           ; BSR set to: 0
 23945                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 23946  0005E0  69A1               	setf	_MSDCommandState& (0+255),b
 23947                           
 23948                           ;usb_device_msd.c: 814: break;
 23949  0005E2  0012               	return	
 23950  0005E4                     l625:
 23951                           
 23952                           ; BSR set to: 0
 23953                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 23954                           
 23955                           ; BSR set to: 0
 23956  0005E4  0E00               	movlw	0
 23957  0005E6  6F87               	movwf	(_TransferLength+1)& (0+255),b
 23958  0005E8  0E12               	movlw	18
 23959  0005EA  6F86               	movwf	_TransferLength& (0+255),b
 23960                           
 23961                           ; BSR set to: 0
 23962                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 23963  0005EC  0E00               	movlw	0
 23964  0005EE  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 23965  0005F0  0E12               	movlw	18
 23966  0005F2  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 23967  0005F4  EC11  F02E         	call	_MSDComputeDeviceInAndResidue	;wreg free
 23968                           
 23969                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 23970  0005F8  0E00               	movlw	0
 23971  0005FA  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 23972  0005FC                     l10986:
 23973  0005FC  0E11               	movlw	17
 23974  0005FE  6447               	cpfsgt	MSDProcessCommandMediaPresent@i,c
 23975  000600  D001               	goto	l626
 23976  000602  D014               	goto	u8220
 23977  000604                     l626:
 23978                           
 23979                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 23980  000604  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 23981  000606  0D01               	mullw	1
 23982  000608  0E1F               	movlw	low _gblSenseData
 23983  00060A  24F3               	addwf	prodl,w,c
 23984  00060C  6ED9               	movwf	fsr2l,c
 23985  00060E  0E01               	movlw	high _gblSenseData
 23986  000610  20F4               	addwfc	prodh,w,c
 23987  000612  6EDA               	movwf	fsr2h,c
 23988  000614  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 23989  000616  0D01               	mullw	1
 23990  000618  0E00               	movlw	0
 23991  00061A  24F3               	addwf	prodl,w,c
 23992  00061C  6EE1               	movwf	fsr1l,c
 23993  00061E  0E06               	movlw	6
 23994  000620  20F4               	addwfc	prodh,w,c
 23995  000622  6EE2               	movwf	fsr1h,c
 23996  000624  CFDF FFE7          	movff	indf2,indf1
 23997  000628  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 23998  00062A  D7E8               	goto	l10986
 23999  00062C                     u8220:
 24000                           
 24001                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 24002  00062C  0EFD               	movlw	253
 24003  00062E  0100               	movlb	0	; () banked
 24004  000630  6FA1               	movwf	_MSDCommandState& (0+255),b
 24005                           
 24006                           ;usb_device_msd.c: 827: break;
 24007  000632  0012               	return	
 24008  000634                     l628:
 24009                           
 24010                           ; BSR set to: 0
 24011                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 24012  000634  0E03               	movlw	3
 24013  000636  CFE8 F600          	movff	wreg,1536
 24014                           
 24015                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 24016  00063A  0E00               	movlw	0
 24017  00063C  CFE8 F601          	movff	wreg,1537	;volatile
 24018                           
 24019                           ; BSR set to: 0
 24020                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 24021  000640  C1F0  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 24022  000644  C1F1  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 24023  000648  D801               	call	u8238
 24024  00064A  D00A               	goto	u8239
 24025  00064C                     u8238:
 24026  00064C  0005               	push	
 24027  00064E  6EFA               	movwf	pclath,c
 24028  000650  0101               	movlb	1	; () banked
 24029  000652  51EC               	movf	(_LUN+10)& (0+255),w,b
 24030  000654  6EFD               	movwf	tosl,c
 24031  000656  51ED               	movf	(_LUN+11)& (0+255),w,b
 24032  000658  6EFE               	movwf	tosh,c
 24033  00065A  6AFF               	clrf	tosu,c
 24034  00065C  50FA               	movf	pclath,w,c
 24035  00065E  0012               	return		;indir
 24036  000660                     u8239:
 24037  000660  0900               	iorlw	0
 24038  000662  A4D8               	btfss	status,2,c
 24039  000664  D004               	goto	l630
 24040  000666  0E00               	movlw	0
 24041  000668  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 24042  00066A  0E00               	movlw	0
 24043  00066C  D003               	goto	L19
 24044  00066E                     l630:
 24045  00066E  0E00               	movlw	0
 24046  000670  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 24047  000672  0E80               	movlw	128
 24048  000674                     L19:
 24049  000674  6E3C               	movwf	_MSDProcessCommandMediaPresent$2390,c
 24050  000676  EE26 F002          	lfsr	2,1538	;volatile
 24051  00067A  C03C  FFDF         	movff	_MSDProcessCommandMediaPresent$2390,indf2
 24052                           
 24053                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 24054  00067E  0E00               	movlw	0
 24055  000680  CFE8 F603          	movff	wreg,1539	;volatile
 24056                           
 24057                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 24058  000684  0E00               	movlw	0
 24059  000686  0100               	movlb	0	; () banked
 24060  000688  6F87               	movwf	(_TransferLength+1)& (0+255),b
 24061  00068A  0E04               	movlw	4
 24062  00068C  6F86               	movwf	_TransferLength& (0+255),b
 24063                           
 24064                           ; BSR set to: 0
 24065                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 24066  00068E  0E00               	movlw	0
 24067  000690  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 24068  000692  0E04               	movlw	4
 24069  000694  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 24070  000696  EC11  F02E         	call	_MSDComputeDeviceInAndResidue	;wreg free
 24071                           
 24072                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 24073  00069A  0EFD               	movlw	253
 24074  00069C  0100               	movlb	0	; () banked
 24075  00069E  6FA1               	movwf	_MSDCommandState& (0+255),b
 24076                           
 24077                           ;usb_device_msd.c: 839: break;
 24078  0006A0  0012               	return	
 24079  0006A2                     
 24080                           ; BSR set to: 0
 24081                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 24082                           
 24083                           ; BSR set to: 0
 24084  0006A2  0101               	movlb	1	; () banked
 24085  0006A4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24086  0006A6  0BF0               	andlw	-16
 24087  0006A8  0905               	iorlw	5
 24088  0006AA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 24089                           
 24090                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 24091  0006AC  0E20               	movlw	32
 24092  0006AE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24093                           
 24094                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 24095  0006B0  0E00               	movlw	0
 24096  0006B2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24097                           
 24098                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 24099  0006B4  0E01               	movlw	1
 24100  0006B6  010D               	movlb	13	; () banked
 24101  0006B8  6F8C               	movwf	140,b	;volatile
 24102                           
 24103                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 24104  0006BA  0E00               	movlw	0
 24105  0006BC  6F88               	movwf	136,b	;volatile
 24106  0006BE  0E00               	movlw	0
 24107  0006C0  6F89               	movwf	137,b	;volatile
 24108  0006C2  0E00               	movlw	0
 24109  0006C4  6F8A               	movwf	138,b	;volatile
 24110  0006C6  0E00               	movlw	0
 24111  0006C8  6F8B               	movwf	139,b	;volatile
 24112                           
 24113                           ; BSR set to: 13
 24114                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 24115  0006CA  0100               	movlb	0	; () banked
 24116  0006CC  69A1               	setf	_MSDCommandState& (0+255),b
 24117                           
 24118                           ;usb_device_msd.c: 848: break;
 24119  0006CE  0012               	return	
 24120  0006D0                     
 24121                           ; BSR set to: 0
 24122                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 24123                           
 24124                           ; BSR set to: 0
 24125  0006D0  0E00               	movlw	0
 24126  0006D2  6E0B               	movwf	MSDCheckForErrorCases@DeviceBytes,c
 24127  0006D4  0E00               	movlw	0
 24128  0006D6  6E0C               	movwf	MSDCheckForErrorCases@DeviceBytes+1,c
 24129  0006D8  0E00               	movlw	0
 24130  0006DA  6E0D               	movwf	MSDCheckForErrorCases@DeviceBytes+2,c
 24131  0006DC  0E00               	movlw	0
 24132  0006DE  6E0E               	movwf	MSDCheckForErrorCases@DeviceBytes+3,c
 24133  0006E0  EC86  F024         	call	_MSDCheckForErrorCases	;wreg free
 24134  0006E4  0900               	iorlw	0
 24135  0006E6  A4D8               	btfss	status,2,c
 24136  0006E8  0012               	return	
 24137                           
 24138                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 24139                           
 24140                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 24141  0006EA  0101               	movlb	1	; () banked
 24142  0006EC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24143  0006EE  0B0F               	andlw	15
 24144  0006F0  0A06               	xorlw	6
 24145  0006F2  A4D8               	btfss	status,2,c
 24146  0006F4  D007               	goto	l636
 24147                           
 24148                           ; BSR set to: 1
 24149  0006F6  010D               	movlb	13	; () banked
 24150  0006F8  058C               	decf	140,w,b	;volatile
 24151  0006FA  A4D8               	btfss	status,2,c
 24152  0006FC  D003               	goto	l636
 24153                           
 24154                           ; BSR set to: 13
 24155                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 24156  0006FE  0100               	movlb	0	; () banked
 24157  000700  69A1               	setf	_MSDCommandState& (0+255),b
 24158                           
 24159                           ;usb_device_msd.c: 870: }
 24160  000702  0012               	return	
 24161  000704                     l636:
 24162                           
 24163                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 24164                           
 24165                           ; BSR set to: 0
 24166  000704  EC03  F036         	call	_ResetSenseData	;wreg free
 24167                           
 24168                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 24169  000708  0E00               	movlw	0
 24170  00070A  010D               	movlb	13	; () banked
 24171  00070C  6F88               	movwf	136,b	;volatile
 24172  00070E  0E00               	movlw	0
 24173  000710  6F89               	movwf	137,b	;volatile
 24174  000712  0E00               	movlw	0
 24175  000714  6F8A               	movwf	138,b	;volatile
 24176  000716  0E00               	movlw	0
 24177  000718  6F8B               	movwf	139,b	;volatile
 24178                           
 24179                           ; BSR set to: 13
 24180                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 24181  00071A  0100               	movlb	0	; () banked
 24182  00071C  69A1               	setf	_MSDCommandState& (0+255),b
 24183                           
 24184                           ; BSR set to: 0
 24185                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 24186  00071E  0012               	return	
 24187  000720                     
 24188                           ; BSR set to: 0
 24189                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 24190                           
 24191                           ; BSR set to: 0
 24192                           
 24193                           ; BSR set to: 0
 24194  000720  0E00               	movlw	0
 24195  000722  010D               	movlb	13	; () banked
 24196  000724  6F88               	movwf	136,b	;volatile
 24197  000726  0E00               	movlw	0
 24198  000728  6F89               	movwf	137,b	;volatile
 24199  00072A  0E00               	movlw	0
 24200  00072C  6F8A               	movwf	138,b	;volatile
 24201  00072E  0E00               	movlw	0
 24202  000730  6F8B               	movwf	139,b	;volatile
 24203                           
 24204                           ; BSR set to: 13
 24205                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 24206  000732  0100               	movlb	0	; () banked
 24207  000734  69A1               	setf	_MSDCommandState& (0+255),b
 24208                           
 24209                           ;usb_device_msd.c: 885: break;
 24210  000736  0012               	return	
 24211  000738                     
 24212                           ; BSR set to: 0
 24213                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 24214                           
 24215                           ; BSR set to: 0
 24216  000738  5188               	movf	_USBMSDInHandle& (0+255),w,b
 24217  00073A  1189               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 24218  00073C  B4D8               	btfsc	status,2,c
 24219  00073E  D006               	goto	u8290
 24220                           
 24221                           ; BSR set to: 0
 24222  000740  C088  FFD9         	movff	_USBMSDInHandle,fsr2l
 24223  000744  C089  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 24224  000748  BEDF               	btfsc	indf2,7,c
 24225  00074A  0012               	return	
 24226  00074C                     u8290:
 24227                           
 24228                           ; BSR set to: 0
 24229                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 24230                           
 24231                           ; BSR set to: 0
 24232  00074C  0101               	movlb	1	; () banked
 24233  00074E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 24234  000750  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 24235  000752  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 24236  000754  E104               	bnz	u8300
 24237  000756  0E40               	movlw	64
 24238  000758  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 24239  00075A  A0D8               	btfss	status,0,c
 24240  00075C  D009               	goto	l644
 24241  00075E                     u8300:
 24242                           
 24243                           ; BSR set to: 1
 24244                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 24245  00075E  0E40               	movlw	64
 24246  000760  6E3E               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket,c
 24247                           
 24248                           ; BSR set to: 1
 24249                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 24250  000762  0E40               	movlw	64
 24251  000764  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 24252  000766  0E00               	movlw	0
 24253  000768  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 24254  00076A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 24255  00076C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 24256                           
 24257                           ;usb_device_msd.c: 900: }
 24258  00076E  D00A               	goto	l645
 24259  000770                     l644:
 24260                           
 24261                           ; BSR set to: 1
 24262                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 24263  000770  C108  F03E         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 24264                           
 24265                           ; BSR set to: 1
 24266                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 24267  000774  0E00               	movlw	0
 24268  000776  6F08               	movwf	(_gblCBW+8)& (0+255),b
 24269  000778  0E00               	movlw	0
 24270  00077A  6F09               	movwf	(_gblCBW+9)& (0+255),b
 24271  00077C  0E00               	movlw	0
 24272  00077E  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 24273  000780  0E00               	movlw	0
 24274  000782  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 24275  000784                     l645:
 24276                           
 24277                           ; BSR set to: 1
 24278                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 24279                           
 24280                           ; BSR set to: 1
 24281  000784  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 24282  000786  6E3A               	movwf	??_MSDProcessCommandMediaPresent& (0+255),c
 24283  000788  6A3B               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),c
 24284  00078A  503A               	movf	??_MSDProcessCommandMediaPresent,w,c
 24285  00078C  0100               	movlb	0	; () banked
 24286  00078E  5D86               	subwf	_TransferLength& (0+255),w,b
 24287  000790  503B               	movf	??_MSDProcessCommandMediaPresent+1,w,c
 24288  000792  5987               	subwfb	(_TransferLength+1)& (0+255),w,b
 24289  000794  A0D8               	btfss	status,0,c
 24290  000796  D005               	goto	l646
 24291                           
 24292                           ; BSR set to: 0
 24293                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 24294  000798  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 24295  00079A  5F86               	subwf	_TransferLength& (0+255),f,b
 24296  00079C  0E00               	movlw	0
 24297  00079E  5B87               	subwfb	(_TransferLength+1)& (0+255),f,b
 24298                           
 24299                           ;usb_device_msd.c: 918: }
 24300  0007A0  D01A               	goto	u8330
 24301  0007A2                     l646:
 24302                           
 24303                           ; BSR set to: 0
 24304                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 24305                           
 24306                           ; BSR set to: 0
 24307  0007A2  0E00               	movlw	0
 24308  0007A4  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 24309  0007A6  D013               	goto	l648
 24310  0007A8                     
 24311                           ; BSR set to: 0
 24312                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 24313                           
 24314                           ; BSR set to: 0
 24315  0007A8  5186               	movf	_TransferLength& (0+255),w,b
 24316  0007AA  1187               	iorwf	(_TransferLength+1)& (0+255),w,b
 24317  0007AC  B4D8               	btfsc	status,2,c
 24318  0007AE  D004               	goto	l650
 24319                           
 24320                           ; BSR set to: 0
 24321                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 24322  0007B0  0786               	decf	_TransferLength& (0+255),f,b
 24323  0007B2  A0D8               	btfss	status,0,c
 24324  0007B4  0787               	decf	(_TransferLength+1)& (0+255),f,b
 24325                           
 24326                           ;usb_device_msd.c: 932: }
 24327  0007B6  D00A               	goto	l651
 24328  0007B8                     l650:
 24329                           
 24330                           ; BSR set to: 0
 24331                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 24332                           
 24333                           ; BSR set to: 0
 24334  0007B8  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 24335  0007BA  0D01               	mullw	1
 24336  0007BC  0E00               	movlw	0
 24337  0007BE  24F3               	addwf	prodl,w,c
 24338  0007C0  6ED9               	movwf	fsr2l,c
 24339  0007C2  0E06               	movlw	6
 24340  0007C4  20F4               	addwfc	prodh,w,c
 24341  0007C6  6EDA               	movwf	fsr2h,c
 24342  0007C8  0E00               	movlw	0
 24343  0007CA  6EDF               	movwf	indf2,c
 24344  0007CC                     l651:
 24345                           
 24346                           ; BSR set to: 0
 24347                           
 24348                           ; BSR set to: 0
 24349  0007CC  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 24350  0007CE                     l648:
 24351                           
 24352                           ; BSR set to: 0
 24353                           
 24354                           ; BSR set to: 0
 24355  0007CE  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 24356  0007D0  5C47               	subwf	MSDProcessCommandMediaPresent@i,w,c
 24357  0007D2  A0D8               	btfss	status,0,c
 24358  0007D4  D7E9               	goto	l649
 24359  0007D6                     u8330:
 24360                           
 24361                           ; BSR set to: 0
 24362                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 24363                           
 24364                           ; BSR set to: 0
 24365                           
 24366                           ; BSR set to: 0
 24367  0007D6  0E01               	movlw	1
 24368  0007D8  6E01               	movwf	USBTransferOnePacket@dir,c
 24369  0007DA  0E00               	movlw	0
 24370  0007DC  6E02               	movwf	USBTransferOnePacket@data,c
 24371  0007DE  0E06               	movlw	6
 24372  0007E0  6E03               	movwf	USBTransferOnePacket@data+1,c
 24373  0007E2  C03E  F004         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 24374  0007E6  0E02               	movlw	2
 24375  0007E8  EC32  F022         	call	_USBTransferOnePacket
 24376  0007EC  C001  F088         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 24377  0007F0  C002  F089         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 24378                           
 24379                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 24380  0007F4  0101               	movlb	1	; () banked
 24381  0007F6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 24382  0007F8  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 24383  0007FA  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 24384  0007FC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 24385  0007FE  A4D8               	btfss	status,2,c
 24386  000800  0012               	return	
 24387                           
 24388                           ; BSR set to: 1
 24389                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 24390  000802  0100               	movlb	0	; () banked
 24391  000804  69A1               	setf	_MSDCommandState& (0+255),b
 24392                           
 24393                           ; BSR set to: 0
 24394                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 24395                           
 24396                           ; BSR set to: 0
 24397                           
 24398                           ;usb_device_msd.c: 949: break;
 24399  000806  0012               	return	
 24400  000808                     
 24401                           ; BSR set to: 0
 24402                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 24403                           
 24404                           ; BSR set to: 0
 24405                           
 24406                           ;usb_device_msd.c: 954: default:
 24407                           
 24408                           ; BSR set to: 0
 24409  000808  0E7F               	movlw	127
 24410  00080A  EC2D  F021         	call	_MSDErrorHandler
 24411                           
 24412                           ;usb_device_msd.c: 960: }
 24413                           
 24414                           ;usb_device_msd.c: 959: break;
 24415  00080E  0012               	return	
 24416  000810                     l614:
 24417  000810  0100               	movlb	0	; () banked
 24418  000812  51A1               	movf	_MSDCommandState& (0+255),w,b
 24419                           
 24420                           ; Switch size 1, requested type "space"
 24421                           ; Number of cases is 12, Range of values is 0 to 254
 24422                           ; switch strategies available:
 24423                           ; Name         Instructions Cycles
 24424                           ; simple_byte           37    19 (average)
 24425                           ;	Chosen strategy is simple_byte
 24426  000814  0A00               	xorlw	0	; case 0
 24427  000816  B4D8               	btfsc	status,2,c
 24428  000818  D75B               	goto	l634
 24429  00081A  0A03               	xorlw	3	; case 3
 24430  00081C  B4D8               	btfsc	status,2,c
 24431  00081E  D6DD               	goto	l624
 24432  000820  0A11               	xorlw	17	; case 18
 24433  000822  B4D8               	btfsc	status,2,c
 24434  000824  D64C               	goto	l620
 24435  000826  0A08               	xorlw	8	; case 26
 24436  000828  B4D8               	btfsc	status,2,c
 24437  00082A  D704               	goto	l628
 24438  00082C  0A01               	xorlw	1	; case 27
 24439  00082E  B4D8               	btfsc	status,2,c
 24440  000830  D777               	goto	l638
 24441  000832  0A05               	xorlw	5	; case 30
 24442  000834  B4D8               	btfsc	status,2,c
 24443  000836  D735               	goto	l633
 24444  000838  0A3B               	xorlw	59	; case 37
 24445  00083A  B4D8               	btfsc	status,2,c
 24446  00083C  D671               	goto	l623
 24447  00083E  0A0D               	xorlw	13	; case 40
 24448  000840  B4D8               	btfsc	status,2,c
 24449  000842  D62D               	goto	l615
 24450  000844  0A02               	xorlw	2	; case 42
 24451  000846  B4D8               	btfsc	status,2,c
 24452  000848  D632               	goto	l618
 24453  00084A  0A05               	xorlw	5	; case 47
 24454  00084C  B4D8               	btfsc	status,2,c
 24455  00084E  D768               	goto	l638
 24456  000850  0AD2               	xorlw	210	; case 253
 24457  000852  B4D8               	btfsc	status,2,c
 24458  000854  D771               	goto	l640
 24459  000856  0A03               	xorlw	3	; case 254
 24460  000858  D7D7               	goto	l654
 24461  00085A                     __end_of_MSDProcessCommandMediaPresent:
 24462                           	opt stack 0
 24463                           tosu	equ	0xFFF
 24464                           tosh	equ	0xFFE
 24465                           tosl	equ	0xFFD
 24466                           pclath	equ	0xFFA
 24467                           tblptru	equ	0xFF8
 24468                           tblptrh	equ	0xFF7
 24469                           tblptrl	equ	0xFF6
 24470                           tablat	equ	0xFF5
 24471                           prodh	equ	0xFF4
 24472                           prodl	equ	0xFF3
 24473                           intcon	equ	0xFF2
 24474                           intcon2	equ	0xFF1
 24475                           intcon3	equ	0xFF0
 24476                           indf0	equ	0xFEF
 24477                           postinc0	equ	0xFEE
 24478                           fsr0h	equ	0xFEA
 24479                           fsr0l	equ	0xFE9
 24480                           wreg	equ	0xFE8
 24481                           indf1	equ	0xFE7
 24482                           postdec1	equ	0xFE5
 24483                           plusw1	equ	0xFE3
 24484                           fsr1h	equ	0xFE2
 24485                           fsr1l	equ	0xFE1
 24486                           indf2	equ	0xFDF
 24487                           postinc2	equ	0xFDE
 24488                           postdec2	equ	0xFDD
 24489                           plusw2	equ	0xFDB
 24490                           fsr2h	equ	0xFDA
 24491                           fsr2l	equ	0xFD9
 24492                           status	equ	0xFD8
 24493                           
 24494 ;; *************** function _MSDWriteHandler *****************
 24495 ;; Defined at:
 24496 ;;		line 1188 in file "usb_device_msd.c"
 24497 ;; Parameters:    Size  Location     Type
 24498 ;;		None
 24499 ;; Auto vars:     Size  Location     Type
 24500 ;;		None
 24501 ;; Return value:  Size  Location     Type
 24502 ;;                  1    wreg      unsigned char 
 24503 ;; Registers used:
 24504 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 24505 ;; Tracked objects:
 24506 ;;		On entry : 0/0
 24507 ;;		On exit  : 0/0
 24508 ;;		Unchanged: 0/0
 24509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24512 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24513 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24514 ;;Total ram usage:        5 bytes
 24515 ;; Hardware stack levels used:    1
 24516 ;; Hardware stack levels required when called:    6
 24517 ;; This function calls:
 24518 ;;		_ExternalFlash_SectorWrite
 24519 ;;		_ExternalFlash_WriteProtectStateGet
 24520 ;;		_MSDCheckForErrorCases
 24521 ;;		_USBStallEndpoint
 24522 ;;		_USBTransferOnePacket
 24523 ;; This function is called by:
 24524 ;;		_MSDProcessCommandMediaPresent
 24525 ;; This function uses a non-reentrant model
 24526 ;;
 24527                           
 24528                           	psect	text110
 24529  0014FE                     __ptext110:
 24530                           	opt stack 0
 24531  0014FE                     _MSDWriteHandler:
 24532                           	opt stack 20
 24533                           
 24534                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 24535                           
 24536                           ;incstack = 0
 24537  0014FE  D144               	goto	l684
 24538  001500                     l685:
 24539                           
 24540                           ; BSR set to: 0
 24541                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 24542  001500  C111  F083         	movff	_gblCBW+17,_LBA+3
 24543                           
 24544                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 24545  001504  C112  F082         	movff	_gblCBW+18,_LBA+2
 24546                           
 24547                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 24548  001508  C113  F081         	movff	_gblCBW+19,_LBA+1
 24549                           
 24550                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 24551  00150C  C114  F080         	movff	_gblCBW+20,_LBA
 24552                           
 24553                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 24554  001510  C116  F087         	movff	_gblCBW+22,_TransferLength+1
 24555                           
 24556                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 24557  001514  C117  F086         	movff	_gblCBW+23,_TransferLength
 24558                           
 24559                           ; BSR set to: 0
 24560                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 24561  001518  5186               	movf	_TransferLength& (0+255),w,b
 24562  00151A  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 24563  00151C  5187               	movf	(_TransferLength+1)& (0+255),w,b
 24564  00151E  6E31               	movwf	(??_MSDWriteHandler+1)& (0+255),c
 24565  001520  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 24566  001522  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 24567  001524  0E09               	movlw	9
 24568  001526                     u7205:
 24569  001526  90D8               	bcf	status,0,c
 24570  001528  3630               	rlcf	??_MSDWriteHandler,f,c
 24571  00152A  3631               	rlcf	??_MSDWriteHandler+1,f,c
 24572  00152C  3632               	rlcf	??_MSDWriteHandler+2,f,c
 24573  00152E  3633               	rlcf	??_MSDWriteHandler+3,f,c
 24574  001530  2EE8               	decfsz	wreg,f,c
 24575  001532  D7F9               	goto	u7205
 24576  001534  C030  F00B         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 24577  001538  C031  F00C         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 24578  00153C  C032  F00D         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 24579  001540  C033  F00E         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 24580  001544  EC86  F024         	call	_MSDCheckForErrorCases	;wreg free
 24581  001548  0900               	iorlw	0
 24582  00154A  A4D8               	btfss	status,2,c
 24583  00154C  D12F               	goto	l687
 24584                           
 24585                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 24586                           
 24587                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 24588  00154E  C1F0  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 24589  001552  C1F1  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 24590  001556  D801               	call	u7228
 24591  001558  D00A               	goto	u7229
 24592  00155A                     u7228:
 24593  00155A  0005               	push	
 24594  00155C  6EFA               	movwf	pclath,c
 24595  00155E  0101               	movlb	1	; () banked
 24596  001560  51EC               	movf	(_LUN+10)& (0+255),w,b
 24597  001562  6EFD               	movwf	tosl,c
 24598  001564  51ED               	movf	(_LUN+11)& (0+255),w,b
 24599  001566  6EFE               	movwf	tosh,c
 24600  001568  6AFF               	clrf	tosu,c
 24601  00156A  50FA               	movf	pclath,w,c
 24602  00156C  0012               	return		;indir
 24603  00156E                     u7229:
 24604  00156E  0900               	iorlw	0
 24605  001570  B4D8               	btfsc	status,2,c
 24606  001572  D016               	goto	l688
 24607                           
 24608                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 24609  001574  0E01               	movlw	1
 24610  001576  010D               	movlb	13	; () banked
 24611  001578  6F8C               	movwf	140,b	;volatile
 24612                           
 24613                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 24614  00157A  0101               	movlb	1	; () banked
 24615  00157C  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24616  00157E  0BF0               	andlw	-16
 24617  001580  0907               	iorlw	7
 24618  001582  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 24619                           
 24620                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 24621  001584  0E27               	movlw	39
 24622  001586  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24623                           
 24624                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 24625  001588  0E00               	movlw	0
 24626  00158A  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24627                           
 24628                           ; BSR set to: 1
 24629                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 24630  00158C  0E00               	movlw	0
 24631  00158E  6E01               	movwf	USBStallEndpoint@dir,c
 24632  001590  0E02               	movlw	2
 24633  001592  EC26  F020         	call	_USBStallEndpoint
 24634                           
 24635                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 24636  001596  0E00               	movlw	0
 24637  001598  0100               	movlb	0	; () banked
 24638  00159A  6F9F               	movwf	_MSDWriteState& (0+255),b
 24639                           
 24640                           ; BSR set to: 0
 24641                           ;usb_device_msd.c: 1228: return MSDWriteState;
 24642  00159C  519F               	movf	_MSDWriteState& (0+255),w,b
 24643                           
 24644                           ; BSR set to: 0
 24645  00159E  0012               	return	
 24646  0015A0                     l688:
 24647                           
 24648                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 24649                           
 24650                           ; BSR set to: 0
 24651  0015A0  0E01               	movlw	1
 24652  0015A2  0100               	movlb	0	; () banked
 24653  0015A4  6FA2               	movwf	_MSD_State& (0+255),b
 24654  0015A6                     
 24655                           ; BSR set to: 0
 24656                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 24657                           
 24658                           ; BSR set to: 0
 24659  0015A6  5186               	movf	_TransferLength& (0+255),w,b
 24660  0015A8  1187               	iorwf	(_TransferLength+1)& (0+255),w,b
 24661  0015AA  A4D8               	btfss	status,2,c
 24662  0015AC  D002               	goto	l691
 24663                           
 24664                           ; BSR set to: 0
 24665                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 24666  0015AE  0E00               	movlw	0
 24667  0015B0  D0E9               	goto	L23
 24668  0015B2                     l691:
 24669                           
 24670                           ; BSR set to: 0
 24671                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 24672                           
 24673                           ; BSR set to: 0
 24674  0015B2  0E03               	movlw	3
 24675  0015B4  6F9F               	movwf	_MSDWriteState& (0+255),b
 24676                           
 24677                           ; BSR set to: 0
 24678                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 24679  0015B6  0E00               	movlw	0
 24680  0015B8  6F8C               	movwf	_ptrNextData& (0+255),b
 24681  0015BA  0E06               	movlw	6
 24682  0015BC  6F8D               	movwf	(_ptrNextData+1)& (0+255),b
 24683                           
 24684                           ; BSR set to: 0
 24685                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 24686  0015BE  0E00               	movlw	0
 24687  0015C0  010D               	movlb	13	; () banked
 24688  0015C2  6F88               	movwf	136,b	;volatile
 24689  0015C4  0E02               	movlw	2
 24690  0015C6  6F89               	movwf	137,b	;volatile
 24691  0015C8  0E00               	movlw	0
 24692  0015CA  6F8A               	movwf	138,b	;volatile
 24693  0015CC  0E00               	movlw	0
 24694  0015CE  6F8B               	movwf	139,b	;volatile
 24695  0015D0                     l692:
 24696                           
 24697                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 24698  0015D0  010D               	movlb	13	; () banked
 24699  0015D2  5188               	movf	136,w,b	;volatile
 24700  0015D4  1189               	iorwf	137,w,b	;volatile
 24701  0015D6  118A               	iorwf	138,w,b	;volatile
 24702  0015D8  118B               	iorwf	139,w,b	;volatile
 24703  0015DA  B4D8               	btfsc	status,2,c
 24704  0015DC  D01E               	goto	l693
 24705                           
 24706                           ; BSR set to: 13
 24707                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 24708  0015DE  0100               	movlb	0	; () banked
 24709  0015E0  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 24710  0015E2  118B               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 24711  0015E4  B4D8               	btfsc	status,2,c
 24712  0015E6  D006               	goto	l694
 24713                           
 24714                           ; BSR set to: 0
 24715  0015E8  C08A  FFD9         	movff	_USBMSDOutHandle,fsr2l
 24716  0015EC  C08B  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 24717  0015F0  BEDF               	btfsc	indf2,7,c
 24718  0015F2  D0DC               	goto	l687
 24719  0015F4                     l694:
 24720                           
 24721                           ; BSR set to: 0
 24722                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 24723                           
 24724                           ; BSR set to: 0
 24725  0015F4  0E00               	movlw	0
 24726  0015F6  6E01               	movwf	USBTransferOnePacket@dir,c
 24727  0015F8  C08C  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 24728  0015FC  C08D  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 24729  001600  0E40               	movlw	64
 24730  001602  6E04               	movwf	USBTransferOnePacket@len,c
 24731  001604  0E02               	movlw	2
 24732  001606  EC32  F022         	call	_USBTransferOnePacket
 24733  00160A  C001  F08A         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 24734  00160E  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 24735                           
 24736                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 24737  001612  0E04               	movlw	4
 24738  001614  0100               	movlb	0	; () banked
 24739  001616  6F9F               	movwf	_MSDWriteState& (0+255),b
 24740                           
 24741                           ;usb_device_msd.c: 1260: }
 24742  001618  D021               	goto	l695
 24743  00161A                     l693:
 24744                           
 24745                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 24746                           
 24747                           ; BSR set to: 0
 24748  00161A  C1F0  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 24749  00161E  C1F1  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 24750  001622  D801               	call	u7288
 24751  001624  D00A               	goto	u7289
 24752  001626                     u7288:
 24753  001626  0005               	push	
 24754  001628  6EFA               	movwf	pclath,c
 24755  00162A  0101               	movlb	1	; () banked
 24756  00162C  51EC               	movf	(_LUN+10)& (0+255),w,b
 24757  00162E  6EFD               	movwf	tosl,c
 24758  001630  51ED               	movf	(_LUN+11)& (0+255),w,b
 24759  001632  6EFE               	movwf	tosh,c
 24760  001634  6AFF               	clrf	tosu,c
 24761  001636  50FA               	movf	pclath,w,c
 24762  001638  0012               	return		;indir
 24763  00163A                     u7289:
 24764  00163A  0900               	iorlw	0
 24765  00163C  B4D8               	btfsc	status,2,c
 24766  00163E  D00C               	goto	l696
 24767                           
 24768                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 24769  001640  0E01               	movlw	1
 24770  001642  010D               	movlb	13	; () banked
 24771  001644  6F8C               	movwf	140,b	;volatile
 24772                           
 24773                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 24774  001646  0101               	movlb	1	; () banked
 24775  001648  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24776  00164A  0BF0               	andlw	-16
 24777  00164C  0902               	iorlw	2
 24778  00164E  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 24779                           
 24780                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 24781  001650  0E27               	movlw	39
 24782  001652  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24783                           
 24784                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 24785  001654  0E00               	movlw	0
 24786  001656  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24787  001658                     l696:
 24788                           
 24789                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 24790  001658  0E02               	movlw	2
 24791  00165A  D093               	goto	L43
 24792  00165C                     l695:
 24793                           
 24794                           ; BSR set to: 0
 24795                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 24796                           
 24797                           ; BSR set to: 0
 24798                           
 24799                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 24800                           
 24801                           ; BSR set to: 0
 24802  00165C  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 24803  00165E  118B               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 24804  001660  B4D8               	btfsc	status,2,c
 24805  001662  D006               	goto	l698
 24806                           
 24807                           ; BSR set to: 0
 24808  001664  C08A  FFD9         	movff	_USBMSDOutHandle,fsr2l
 24809  001668  C08B  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 24810  00166C  BEDF               	btfsc	indf2,7,c
 24811  00166E  D09E               	goto	l687
 24812  001670                     l698:
 24813                           
 24814                           ; BSR set to: 0
 24815                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 24816                           
 24817                           ; BSR set to: 0
 24818  001670  EE20 F001          	lfsr	2,1
 24819  001674  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 24820  001676  26D9               	addwf	fsr2l,f,c
 24821  001678  518B               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 24822  00167A  22DA               	addwfc	fsr2h,f,c
 24823  00167C  50DF               	movf	indf2,w,c
 24824  00167E  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 24825  001680  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 24826  001684  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 24827  001686  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 24828  001688  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 24829  00168A  5031               	movf	??_MSDWriteHandler+1,w,c
 24830  00168C  0101               	movlb	1	; () banked
 24831  00168E  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 24832  001690  5032               	movf	??_MSDWriteHandler+2,w,c
 24833  001692  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 24834  001694  5033               	movf	??_MSDWriteHandler+3,w,c
 24835  001696  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 24836  001698  5034               	movf	??_MSDWriteHandler+4,w,c
 24837  00169A  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 24838                           
 24839                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 24840  00169C  0100               	movlb	0	; () banked
 24841  00169E  EE20 F001          	lfsr	2,1
 24842  0016A2  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 24843  0016A4  26D9               	addwf	fsr2l,f,c
 24844  0016A6  518B               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 24845  0016A8  22DA               	addwfc	fsr2h,f,c
 24846  0016AA  50DF               	movf	indf2,w,c
 24847  0016AC  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 24848  0016AE  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 24849  0016B2  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 24850  0016B4  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 24851  0016B6  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 24852  0016B8  5031               	movf	??_MSDWriteHandler+1,w,c
 24853  0016BA  010D               	movlb	13	; () banked
 24854  0016BC  5F88               	subwf	136,f,b	;volatile
 24855  0016BE  5032               	movf	??_MSDWriteHandler+2,w,c
 24856  0016C0  5B89               	subwfb	137,f,b	;volatile
 24857  0016C2  5033               	movf	??_MSDWriteHandler+3,w,c
 24858  0016C4  5B8A               	subwfb	138,f,b	;volatile
 24859  0016C6  5034               	movf	??_MSDWriteHandler+4,w,c
 24860  0016C8  5B8B               	subwfb	139,f,b	;volatile
 24861                           
 24862                           ; BSR set to: 13
 24863                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 24864  0016CA  0E40               	movlw	64
 24865  0016CC  0100               	movlb	0	; () banked
 24866  0016CE  278C               	addwf	_ptrNextData& (0+255),f,b
 24867  0016D0  0E00               	movlw	0
 24868  0016D2  238D               	addwfc	(_ptrNextData+1)& (0+255),f,b
 24869                           
 24870                           ; BSR set to: 0
 24871                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 24872  0016D4  0E03               	movlw	3
 24873  0016D6  D056               	goto	L23
 24874  0016D8                     
 24875                           ; BSR set to: 0
 24876                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 24877                           
 24878                           ; BSR set to: 0
 24879  0016D8  010D               	movlb	13	; () banked
 24880  0016DA  518C               	movf	140,w,b	;volatile
 24881  0016DC  A4D8               	btfss	status,2,c
 24882  0016DE  D03C               	goto	l703
 24883                           
 24884                           ; BSR set to: 13
 24885                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 24886  0016E0  C1F0  F025         	movff	_LUN+14,ExternalFlash_SectorWrite@config
 24887  0016E4  C1F1  F026         	movff	_LUN+15,ExternalFlash_SectorWrite@config+1
 24888  0016E8  C080  F027         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 24889  0016EC  C081  F028         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 24890  0016F0  C082  F029         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 24891  0016F4  C083  F02A         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 24892  0016F8  0E00               	movlw	0
 24893  0016FA  6E2B               	movwf	ExternalFlash_SectorWrite@buffer,c
 24894  0016FC  0E06               	movlw	6
 24895  0016FE  6E2C               	movwf	ExternalFlash_SectorWrite@buffer+1,c
 24896  001700  0100               	movlb	0	; () banked
 24897  001702  5180               	movf	_LBA& (0+255),w,b
 24898  001704  1181               	iorwf	(_LBA+1)& (0+255),w,b
 24899  001706  1182               	iorwf	(_LBA+2)& (0+255),w,b
 24900  001708  1183               	iorwf	(_LBA+3)& (0+255),w,b
 24901  00170A  A4D8               	btfss	status,2,c
 24902  00170C  D002               	goto	u7330
 24903  00170E  0E01               	movlw	1
 24904  001710  D001               	goto	u7340
 24905  001712                     u7330:
 24906  001712  0E00               	movlw	0
 24907  001714                     u7340:
 24908  001714  6E2D               	movwf	ExternalFlash_SectorWrite@allowWriteToZero,c
 24909  001716  D801               	call	u7358
 24910  001718  D00A               	goto	u7359
 24911  00171A                     u7358:
 24912  00171A  0005               	push	
 24913  00171C  6EFA               	movwf	pclath,c
 24914  00171E  0101               	movlb	1	; () banked
 24915  001720  51EE               	movf	(_LUN+12)& (0+255),w,b
 24916  001722  6EFD               	movwf	tosl,c
 24917  001724  51EF               	movf	(_LUN+13)& (0+255),w,b
 24918  001726  6EFE               	movwf	tosh,c
 24919  001728  6AFF               	clrf	tosu,c
 24920  00172A  50FA               	movf	pclath,w,c
 24921  00172C  0012               	return		;indir
 24922  00172E                     u7359:
 24923  00172E  06E8               	decf	wreg,f,c
 24924  001730  B4D8               	btfsc	status,2,c
 24925  001732  D012               	goto	l703
 24926                           
 24927                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 24928  001734  0E64               	movlw	100
 24929  001736  0100               	movlb	0	; () banked
 24930  001738  619E               	cpfslt	_MSDRetryAttempt& (0+255),b
 24931  00173A  D002               	goto	l702
 24932                           
 24933                           ; BSR set to: 0
 24934                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 24935  00173C  2B9E               	incf	_MSDRetryAttempt& (0+255),f,b
 24936                           
 24937                           ;usb_device_msd.c: 1314: break;
 24938  00173E  D036               	goto	l687
 24939  001740                     l702:
 24940                           
 24941                           ; BSR set to: 0
 24942                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 24943                           
 24944                           ; BSR set to: 0
 24945  001740  0E01               	movlw	1
 24946  001742  010D               	movlb	13	; () banked
 24947  001744  6F8C               	movwf	140,b	;volatile
 24948                           
 24949                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 24950  001746  0101               	movlb	1	; () banked
 24951  001748  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24952  00174A  0BF0               	andlw	-16
 24953  00174C  0903               	iorlw	3
 24954  00174E  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 24955                           
 24956                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 24957  001750  0E00               	movlw	0
 24958  001752  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24959                           
 24960                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 24961  001754  0E00               	movlw	0
 24962  001756  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24963  001758                     l703:
 24964                           
 24965                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 24966                           
 24967                           ; BSR set to: 1
 24968                           
 24969                           ; BSR set to: 1
 24970                           
 24971                           ; BSR set to: 1
 24972  001758  0E01               	movlw	1
 24973  00175A  0100               	movlb	0	; () banked
 24974  00175C  2780               	addwf	_LBA& (0+255),f,b
 24975  00175E  0E00               	movlw	0
 24976  001760  2381               	addwfc	(_LBA+1)& (0+255),f,b
 24977  001762  2382               	addwfc	(_LBA+2)& (0+255),f,b
 24978  001764  2383               	addwfc	(_LBA+3)& (0+255),f,b
 24979                           
 24980                           ; BSR set to: 0
 24981                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 24982  001766  0786               	decf	_TransferLength& (0+255),f,b
 24983  001768  A0D8               	btfss	status,0,c
 24984  00176A  0787               	decf	(_TransferLength+1)& (0+255),f,b
 24985                           
 24986                           ; BSR set to: 0
 24987                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 24988  00176C  0E01               	movlw	1
 24989  00176E  D00A               	goto	L23
 24990  001770                     
 24991                           ; BSR set to: 0
 24992                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 24993                           
 24994                           ; BSR set to: 0
 24995  001770  0E02               	movlw	2
 24996  001772  010D               	movlb	13	; () banked
 24997  001774  6F8C               	movwf	140,b	;volatile
 24998                           
 24999                           ; BSR set to: 13
 25000                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 25001  001776  0E00               	movlw	0
 25002  001778  6E01               	movwf	USBStallEndpoint@dir,c
 25003  00177A  0E02               	movlw	2
 25004  00177C  EC26  F020         	call	_USBStallEndpoint
 25005                           
 25006                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 25007  001780  0E00               	movlw	0
 25008  001782                     L43:
 25009  001782  0100               	movlb	0	; () banked
 25010  001784                     L23:
 25011  001784  6F9F               	movwf	_MSDWriteState& (0+255),b
 25012                           
 25013                           ; BSR set to: 0
 25014                           ;usb_device_msd.c: 1345: }
 25015                           
 25016                           ;usb_device_msd.c: 1344: break;
 25017  001786  D012               	goto	l687
 25018  001788                     l684:
 25019                           
 25020                           ; BSR set to: 0
 25021  001788  0100               	movlb	0	; () banked
 25022  00178A  519F               	movf	_MSDWriteState& (0+255),w,b
 25023                           
 25024                           ; Switch size 1, requested type "space"
 25025                           ; Number of cases is 5, Range of values is 0 to 4
 25026                           ; switch strategies available:
 25027                           ; Name         Instructions Cycles
 25028                           ; simple_byte           16     9 (average)
 25029                           ;	Chosen strategy is simple_byte
 25030  00178C  0A00               	xorlw	0	; case 0
 25031  00178E  B4D8               	btfsc	status,2,c
 25032  001790  D6B7               	goto	l685
 25033  001792  0A01               	xorlw	1	; case 1
 25034  001794  B4D8               	btfsc	status,2,c
 25035  001796  D707               	goto	l690
 25036  001798  0A03               	xorlw	3	; case 2
 25037  00179A  B4D8               	btfsc	status,2,c
 25038  00179C  D79D               	goto	l699
 25039  00179E  0A01               	xorlw	1	; case 3
 25040  0017A0  B4D8               	btfsc	status,2,c
 25041  0017A2  D716               	goto	l692
 25042  0017A4  0A07               	xorlw	7	; case 4
 25043  0017A6  B4D8               	btfsc	status,2,c
 25044  0017A8  D759               	goto	l695
 25045  0017AA  D7E2               	goto	l704
 25046  0017AC                     l687:
 25047                           
 25048                           ;usb_device_msd.c: 1347: return MSDWriteState;
 25049                           
 25050                           ; BSR set to: 0
 25051  0017AC  0100               	movlb	0	; () banked
 25052  0017AE  519F               	movf	_MSDWriteState& (0+255),w,b
 25053  0017B0  0012               	return	
 25054  0017B2                     __end_of_MSDWriteHandler:
 25055                           	opt stack 0
 25056                           tosu	equ	0xFFF
 25057                           tosh	equ	0xFFE
 25058                           tosl	equ	0xFFD
 25059                           pclath	equ	0xFFA
 25060                           tblptru	equ	0xFF8
 25061                           tblptrh	equ	0xFF7
 25062                           tblptrl	equ	0xFF6
 25063                           tablat	equ	0xFF5
 25064                           prodh	equ	0xFF4
 25065                           prodl	equ	0xFF3
 25066                           intcon	equ	0xFF2
 25067                           intcon2	equ	0xFF1
 25068                           intcon3	equ	0xFF0
 25069                           indf0	equ	0xFEF
 25070                           postinc0	equ	0xFEE
 25071                           fsr0h	equ	0xFEA
 25072                           fsr0l	equ	0xFE9
 25073                           wreg	equ	0xFE8
 25074                           indf1	equ	0xFE7
 25075                           postdec1	equ	0xFE5
 25076                           plusw1	equ	0xFE3
 25077                           fsr1h	equ	0xFE2
 25078                           fsr1l	equ	0xFE1
 25079                           indf2	equ	0xFDF
 25080                           postinc2	equ	0xFDE
 25081                           postdec2	equ	0xFDD
 25082                           plusw2	equ	0xFDB
 25083                           fsr2h	equ	0xFDA
 25084                           fsr2l	equ	0xFD9
 25085                           status	equ	0xFD8
 25086                           
 25087 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 25088 ;; Defined at:
 25089 ;;		line 34 in file "external_flash.c"
 25090 ;; Parameters:    Size  Location     Type
 25091 ;;  config          2    0[COMRAM] PTR void 
 25092 ;;		 -> NULL(0), 
 25093 ;; Auto vars:     Size  Location     Type
 25094 ;;		None
 25095 ;; Return value:  Size  Location     Type
 25096 ;;                  1    wreg      unsigned char 
 25097 ;; Registers used:
 25098 ;;		wreg
 25099 ;; Tracked objects:
 25100 ;;		On entry : 0/0
 25101 ;;		On exit  : 0/0
 25102 ;;		Unchanged: 0/0
 25103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25104 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25107 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25108 ;;Total ram usage:        2 bytes
 25109 ;; Hardware stack levels used:    1
 25110 ;; This function calls:
 25111 ;;		Nothing
 25112 ;; This function is called by:
 25113 ;;		_MSDWriteHandler
 25114 ;;		_MSDProcessCommandMediaPresent
 25115 ;; This function uses a non-reentrant model
 25116 ;;
 25117                           
 25118                           	psect	text111
 25119  007E4C                     __ptext111:
 25120                           	opt stack 0
 25121  007E4C                     _ExternalFlash_WriteProtectStateGet:
 25122                           	opt stack 25
 25123                           
 25124                           ;external_flash.c: 37: return 0;
 25125                           
 25126                           ; BSR set to: 0
 25127                           ;incstack = 0
 25128  007E4C  0E00               	movlw	0
 25129  007E4E  0012               	return	
 25130  007E50                     __end_of_ExternalFlash_WriteProtectStateGet:
 25131                           	opt stack 0
 25132                           tosu	equ	0xFFF
 25133                           tosh	equ	0xFFE
 25134                           tosl	equ	0xFFD
 25135                           pclath	equ	0xFFA
 25136                           tblptru	equ	0xFF8
 25137                           tblptrh	equ	0xFF7
 25138                           tblptrl	equ	0xFF6
 25139                           tablat	equ	0xFF5
 25140                           prodh	equ	0xFF4
 25141                           prodl	equ	0xFF3
 25142                           intcon	equ	0xFF2
 25143                           intcon2	equ	0xFF1
 25144                           intcon3	equ	0xFF0
 25145                           indf0	equ	0xFEF
 25146                           postinc0	equ	0xFEE
 25147                           fsr0h	equ	0xFEA
 25148                           fsr0l	equ	0xFE9
 25149                           wreg	equ	0xFE8
 25150                           indf1	equ	0xFE7
 25151                           postdec1	equ	0xFE5
 25152                           plusw1	equ	0xFE3
 25153                           fsr1h	equ	0xFE2
 25154                           fsr1l	equ	0xFE1
 25155                           indf2	equ	0xFDF
 25156                           postinc2	equ	0xFDE
 25157                           postdec2	equ	0xFDD
 25158                           plusw2	equ	0xFDB
 25159                           fsr2h	equ	0xFDA
 25160                           fsr2l	equ	0xFD9
 25161                           status	equ	0xFD8
 25162                           
 25163 ;; *************** function _ExternalFlash_SectorWrite *****************
 25164 ;; Defined at:
 25165 ;;		line 56 in file "external_flash.c"
 25166 ;; Parameters:    Size  Location     Type
 25167 ;;  config          2   36[COMRAM] PTR void 
 25168 ;;		 -> NULL(0), 
 25169 ;;  sector_addr     4   38[COMRAM] unsigned long 
 25170 ;;  buffer          2   42[COMRAM] PTR unsigned char 
 25171 ;;		 -> msd_buffer(512), 
 25172 ;;  allowWriteTo    1   44[COMRAM] unsigned char 
 25173 ;; Auto vars:     Size  Location     Type
 25174 ;;  page            2   45[COMRAM] unsigned int 
 25175 ;; Return value:  Size  Location     Type
 25176 ;;                  1    wreg      unsigned char 
 25177 ;; Registers used:
 25178 ;;		wreg, status,2, status,0, cstack
 25179 ;; Tracked objects:
 25180 ;;		On entry : 0/0
 25181 ;;		On exit  : 0/0
 25182 ;;		Unchanged: 0/0
 25183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25184 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25185 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25187 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25188 ;;Total ram usage:       11 bytes
 25189 ;; Hardware stack levels used:    1
 25190 ;; Hardware stack levels required when called:    5
 25191 ;; This function calls:
 25192 ;;		_flash_page_write
 25193 ;; This function is called by:
 25194 ;;		_MSDWriteHandler
 25195 ;; This function uses a non-reentrant model
 25196 ;;
 25197                           
 25198                           	psect	text112
 25199  007766                     __ptext112:
 25200                           	opt stack 0
 25201  007766                     _ExternalFlash_SectorWrite:
 25202                           	opt stack 20
 25203                           
 25204                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 25205                           
 25206                           ;incstack = 0
 25207  007766  C027  F02E         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 25208  00776A  C028  F02F         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 25209                           
 25210                           ;external_flash.c: 61: if(sector_addr >= 8196)
 25211  00776E  502A               	movf	ExternalFlash_SectorWrite@sector_addr+3,w,c
 25212  007770  1029               	iorwf	ExternalFlash_SectorWrite@sector_addr+2,w,c
 25213  007772  E106               	bnz	u6820
 25214  007774  0E04               	movlw	4
 25215  007776  5C27               	subwf	ExternalFlash_SectorWrite@sector_addr,w,c
 25216  007778  0E20               	movlw	32
 25217  00777A  5828               	subwfb	ExternalFlash_SectorWrite@sector_addr+1,w,c
 25218  00777C  A0D8               	btfss	status,0,c
 25219  00777E  D002               	goto	l1820
 25220  007780                     u6820:
 25221                           
 25222                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 25223  007780  0E00               	movlw	0
 25224  007782  0012               	return	
 25225  007784                     l1820:
 25226                           
 25227                           ;external_flash.c: 64: };external_flash.c: 67: flash_page_write(page, buffer);
 25228  007784  C02E  F020         	movff	ExternalFlash_SectorWrite@page,flash_page_write@page
 25229  007788  C02F  F021         	movff	ExternalFlash_SectorWrite@page+1,flash_page_write@page+1
 25230  00778C  C02B  F022         	movff	ExternalFlash_SectorWrite@buffer,flash_page_write@data
 25231  007790  C02C  F023         	movff	ExternalFlash_SectorWrite@buffer+1,flash_page_write@data+1
 25232  007794  EC78  F038         	call	_flash_page_write	;wreg free
 25233                           
 25234                           ;external_flash.c: 69: return 1;
 25235  007798  0E01               	movlw	1
 25236  00779A  0012               	return	
 25237  00779C                     __end_of_ExternalFlash_SectorWrite:
 25238                           	opt stack 0
 25239                           tosu	equ	0xFFF
 25240                           tosh	equ	0xFFE
 25241                           tosl	equ	0xFFD
 25242                           pclath	equ	0xFFA
 25243                           tblptru	equ	0xFF8
 25244                           tblptrh	equ	0xFF7
 25245                           tblptrl	equ	0xFF6
 25246                           tablat	equ	0xFF5
 25247                           prodh	equ	0xFF4
 25248                           prodl	equ	0xFF3
 25249                           intcon	equ	0xFF2
 25250                           intcon2	equ	0xFF1
 25251                           intcon3	equ	0xFF0
 25252                           indf0	equ	0xFEF
 25253                           postinc0	equ	0xFEE
 25254                           fsr0h	equ	0xFEA
 25255                           fsr0l	equ	0xFE9
 25256                           wreg	equ	0xFE8
 25257                           indf1	equ	0xFE7
 25258                           postdec1	equ	0xFE5
 25259                           plusw1	equ	0xFE3
 25260                           fsr1h	equ	0xFE2
 25261                           fsr1l	equ	0xFE1
 25262                           indf2	equ	0xFDF
 25263                           postinc2	equ	0xFDE
 25264                           postdec2	equ	0xFDD
 25265                           plusw2	equ	0xFDB
 25266                           fsr2h	equ	0xFDA
 25267                           fsr2l	equ	0xFD9
 25268                           status	equ	0xFD8
 25269                           
 25270 ;; *************** function _flash_page_write *****************
 25271 ;; Defined at:
 25272 ;;		line 433 in file "flash.c"
 25273 ;; Parameters:    Size  Location     Type
 25274 ;;  page            2   31[COMRAM] unsigned int 
 25275 ;;  data            2   33[COMRAM] PTR unsigned char 
 25276 ;;		 -> buffer(512), msd_buffer(512), 
 25277 ;; Auto vars:     Size  Location     Type
 25278 ;;  match           1   35[COMRAM] enum E6878
 25279 ;; Return value:  Size  Location     Type
 25280 ;;                  1    wreg      void 
 25281 ;; Registers used:
 25282 ;;		wreg, status,2, status,0, cstack
 25283 ;; Tracked objects:
 25284 ;;		On entry : 0/0
 25285 ;;		On exit  : 0/0
 25286 ;;		Unchanged: 0/0
 25287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25288 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25289 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25291 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25292 ;;Total ram usage:        5 bytes
 25293 ;; Hardware stack levels used:    1
 25294 ;; Hardware stack levels required when called:    4
 25295 ;; This function calls:
 25296 ;;		__flash_compare_page_to_buffer
 25297 ;;		__flash_write_page_from_buffer
 25298 ;;		__flash_write_to_buffer
 25299 ;;		_spi_set_configuration
 25300 ;; This function is called by:
 25301 ;;		_ExternalFlash_SectorWrite
 25302 ;;		_fat_format
 25303 ;; This function uses a non-reentrant model
 25304 ;;
 25305                           
 25306                           	psect	text113
 25307  0070F0                     __ptext113:
 25308                           	opt stack 0
 25309  0070F0                     _flash_page_write:
 25310                           	opt stack 23
 25311                           
 25312                           ;flash.c: 435: flashMatchResult_t match;;flash.c: 438: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 25313                           
 25314                           ;incstack = 0
 25315  0070F0  0E00               	movlw	0
 25316  0070F2  ECB0  F021         	call	_spi_set_configuration
 25317                           
 25318                           ;flash.c: 441: _flash_write_to_buffer(0, data, 512, FLASH_BUFFER_1);
 25319  0070F6  0E00               	movlw	0
 25320  0070F8  6E15               	movwf	__flash_write_to_buffer@start+1,c
 25321  0070FA  0E00               	movlw	0
 25322  0070FC  6E14               	movwf	__flash_write_to_buffer@start,c
 25323  0070FE  C022  F016         	movff	flash_page_write@data,__flash_write_to_buffer@data
 25324  007102  C023  F017         	movff	flash_page_write@data+1,__flash_write_to_buffer@data+1
 25325  007106  0E02               	movlw	2
 25326  007108  6E19               	movwf	__flash_write_to_buffer@data_length+1,c
 25327  00710A  0E00               	movlw	0
 25328  00710C  6E18               	movwf	__flash_write_to_buffer@data_length,c
 25329  00710E  0E00               	movlw	0
 25330  007110  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 25331  007112  EC72  F039         	call	__flash_write_to_buffer	;wreg free
 25332                           
 25333                           ;flash.c: 444: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 25334  007116  C020  F014         	movff	flash_page_write@page,__flash_compare_page_to_buffer@page
 25335  00711A  C021  F015         	movff	flash_page_write@page+1,__flash_compare_page_to_buffer@page+1
 25336  00711E  0E00               	movlw	0
 25337  007120  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 25338  007122  EC26  F032         	call	__flash_compare_page_to_buffer	;wreg free
 25339  007126  6E24               	movwf	flash_page_write@match,c
 25340                           
 25341                           ;flash.c: 447: if(match==DATA_DOES_NOT_MATCH)
 25342  007128  0424               	decf	flash_page_write@match,w,c
 25343  00712A  A4D8               	btfss	status,2,c
 25344  00712C  D008               	goto	l1777
 25345                           
 25346                           ;flash.c: 448: {;flash.c: 449: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 25347  00712E  C020  F014         	movff	flash_page_write@page,__flash_write_page_from_buffer@page
 25348  007132  C021  F015         	movff	flash_page_write@page+1,__flash_write_page_from_buffer@page+1
 25349  007136  0E00               	movlw	0
 25350  007138  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 25351  00713A  EC73  F037         	call	__flash_write_page_from_buffer	;wreg free
 25352  00713E                     l1777:
 25353                           
 25354                           ;flash.c: 450: };flash.c: 453: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 25355  00713E  0E01               	movlw	1
 25356  007140  ECB0  F021         	call	_spi_set_configuration
 25357  007144  0012               	return		;funcret
 25358  007146                     __end_of_flash_page_write:
 25359                           	opt stack 0
 25360                           tosu	equ	0xFFF
 25361                           tosh	equ	0xFFE
 25362                           tosl	equ	0xFFD
 25363                           pclath	equ	0xFFA
 25364                           tblptru	equ	0xFF8
 25365                           tblptrh	equ	0xFF7
 25366                           tblptrl	equ	0xFF6
 25367                           tablat	equ	0xFF5
 25368                           prodh	equ	0xFF4
 25369                           prodl	equ	0xFF3
 25370                           intcon	equ	0xFF2
 25371                           intcon2	equ	0xFF1
 25372                           intcon3	equ	0xFF0
 25373                           indf0	equ	0xFEF
 25374                           postinc0	equ	0xFEE
 25375                           fsr0h	equ	0xFEA
 25376                           fsr0l	equ	0xFE9
 25377                           wreg	equ	0xFE8
 25378                           indf1	equ	0xFE7
 25379                           postdec1	equ	0xFE5
 25380                           plusw1	equ	0xFE3
 25381                           fsr1h	equ	0xFE2
 25382                           fsr1l	equ	0xFE1
 25383                           indf2	equ	0xFDF
 25384                           postinc2	equ	0xFDE
 25385                           postdec2	equ	0xFDD
 25386                           plusw2	equ	0xFDB
 25387                           fsr2h	equ	0xFDA
 25388                           fsr2l	equ	0xFD9
 25389                           status	equ	0xFD8
 25390                           
 25391 ;; *************** function _MSDReadHandler *****************
 25392 ;; Defined at:
 25393 ;;		line 1038 in file "usb_device_msd.c"
 25394 ;; Parameters:    Size  Location     Type
 25395 ;;		None
 25396 ;; Auto vars:     Size  Location     Type
 25397 ;;		None
 25398 ;; Return value:  Size  Location     Type
 25399 ;;                  1    wreg      unsigned char 
 25400 ;; Registers used:
 25401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 25402 ;; Tracked objects:
 25403 ;;		On entry : 0/0
 25404 ;;		On exit  : 0/0
 25405 ;;		Unchanged: 0/0
 25406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25409 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25410 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25411 ;;Total ram usage:        4 bytes
 25412 ;; Hardware stack levels used:    1
 25413 ;; Hardware stack levels required when called:    6
 25414 ;; This function calls:
 25415 ;;		_ExternalFlash_SectorRead
 25416 ;;		_MSDCheckForErrorCases
 25417 ;;		_USBStallEndpoint
 25418 ;;		_USBTransferOnePacket
 25419 ;; This function is called by:
 25420 ;;		_MSDProcessCommandMediaPresent
 25421 ;; This function uses a non-reentrant model
 25422 ;;
 25423                           
 25424                           	psect	text114
 25425  002B1C                     __ptext114:
 25426                           	opt stack 0
 25427  002B1C                     _MSDReadHandler:
 25428                           	opt stack 20
 25429                           
 25430                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 25431                           
 25432                           ;incstack = 0
 25433  002B1C  D0D6               	goto	l665
 25434  002B1E                     l666:
 25435                           
 25436                           ; BSR set to: 0
 25437                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 25438  002B1E  C111  F083         	movff	_gblCBW+17,_LBA+3
 25439                           
 25440                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 25441  002B22  C112  F082         	movff	_gblCBW+18,_LBA+2
 25442                           
 25443                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 25444  002B26  C113  F081         	movff	_gblCBW+19,_LBA+1
 25445                           
 25446                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 25447  002B2A  C114  F080         	movff	_gblCBW+20,_LBA
 25448                           
 25449                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 25450  002B2E  C116  F087         	movff	_gblCBW+22,_TransferLength+1
 25451                           
 25452                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 25453  002B32  C117  F086         	movff	_gblCBW+23,_TransferLength
 25454                           
 25455                           ; BSR set to: 0
 25456                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 25457  002B36  5186               	movf	_TransferLength& (0+255),w,b
 25458  002B38  6E36               	movwf	??_MSDReadHandler& (0+255),c
 25459  002B3A  5187               	movf	(_TransferLength+1)& (0+255),w,b
 25460  002B3C  6E37               	movwf	(??_MSDReadHandler+1)& (0+255),c
 25461  002B3E  6A38               	clrf	(??_MSDReadHandler+2)& (0+255),c
 25462  002B40  6A39               	clrf	(??_MSDReadHandler+3)& (0+255),c
 25463  002B42  0E09               	movlw	9
 25464  002B44                     u7095:
 25465  002B44  90D8               	bcf	status,0,c
 25466  002B46  3636               	rlcf	??_MSDReadHandler,f,c
 25467  002B48  3637               	rlcf	??_MSDReadHandler+1,f,c
 25468  002B4A  3638               	rlcf	??_MSDReadHandler+2,f,c
 25469  002B4C  3639               	rlcf	??_MSDReadHandler+3,f,c
 25470  002B4E  2EE8               	decfsz	wreg,f,c
 25471  002B50  D7F9               	goto	u7095
 25472  002B52  C036  F00B         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 25473  002B56  C037  F00C         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 25474  002B5A  C038  F00D         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 25475  002B5E  C039  F00E         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 25476  002B62  EC86  F024         	call	_MSDCheckForErrorCases	;wreg free
 25477  002B66  0900               	iorlw	0
 25478  002B68  A4D8               	btfss	status,2,c
 25479  002B6A  D0C1               	goto	l668
 25480                           
 25481                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 25482                           
 25483                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 25484  002B6C  0E01               	movlw	1
 25485  002B6E  0100               	movlb	0	; () banked
 25486  002B70  6FA0               	movwf	_MSDReadState& (0+255),b
 25487  002B72                     
 25488                           ; BSR set to: 0
 25489                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 25490                           
 25491                           ; BSR set to: 0
 25492  002B72  5186               	movf	_TransferLength& (0+255),w,b
 25493  002B74  1187               	iorwf	(_TransferLength+1)& (0+255),w,b
 25494  002B76  A4D8               	btfss	status,2,c
 25495  002B78  D002               	goto	l670
 25496                           
 25497                           ; BSR set to: 0
 25498                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 25499  002B7A  0E00               	movlw	0
 25500  002B7C  D046               	goto	L24
 25501  002B7E                     l670:
 25502                           
 25503                           ; BSR set to: 0
 25504                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 25505                           
 25506                           ; BSR set to: 0
 25507  002B7E  0786               	decf	_TransferLength& (0+255),f,b
 25508  002B80  A0D8               	btfss	status,0,c
 25509  002B82  0787               	decf	(_TransferLength+1)& (0+255),f,b
 25510                           
 25511                           ; BSR set to: 0
 25512                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 25513  002B84  0E02               	movlw	2
 25514  002B86  6FA0               	movwf	_MSDReadState& (0+255),b
 25515  002B88                     
 25516                           ; BSR set to: 0
 25517                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 25518                           
 25519                           ; BSR set to: 0
 25520  002B88  5188               	movf	_USBMSDInHandle& (0+255),w,b
 25521  002B8A  1189               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 25522  002B8C  B4D8               	btfsc	status,2,c
 25523  002B8E  D006               	goto	l672
 25524                           
 25525                           ; BSR set to: 0
 25526  002B90  C088  FFD9         	movff	_USBMSDInHandle,fsr2l
 25527  002B94  C089  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 25528  002B98  BEDF               	btfsc	indf2,7,c
 25529  002B9A  D0A9               	goto	l668
 25530  002B9C                     l672:
 25531                           
 25532                           ; BSR set to: 0
 25533                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 25534                           
 25535                           ; BSR set to: 0
 25536  002B9C  C1F0  F02C         	movff	_LUN+14,ExternalFlash_SectorRead@config
 25537  002BA0  C1F1  F02D         	movff	_LUN+15,ExternalFlash_SectorRead@config+1
 25538  002BA4  C080  F02E         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 25539  002BA8  C081  F02F         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 25540  002BAC  C082  F030         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 25541  002BB0  C083  F031         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 25542  002BB4  0E00               	movlw	0
 25543  002BB6  6E32               	movwf	ExternalFlash_SectorRead@buffer,c
 25544  002BB8  0E06               	movlw	6
 25545  002BBA  6E33               	movwf	ExternalFlash_SectorRead@buffer+1,c
 25546  002BBC  D801               	call	u7148
 25547  002BBE  D00A               	goto	u7149
 25548  002BC0                     u7148:
 25549  002BC0  0005               	push	
 25550  002BC2  6EFA               	movwf	pclath,c
 25551  002BC4  0101               	movlb	1	; () banked
 25552  002BC6  51EA               	movf	(_LUN+8)& (0+255),w,b
 25553  002BC8  6EFD               	movwf	tosl,c
 25554  002BCA  51EB               	movf	(_LUN+9)& (0+255),w,b
 25555  002BCC  6EFE               	movwf	tosh,c
 25556  002BCE  6AFF               	clrf	tosu,c
 25557  002BD0  50FA               	movf	pclath,w,c
 25558  002BD2  0012               	return		;indir
 25559  002BD4                     u7149:
 25560  002BD4  06E8               	decf	wreg,f,c
 25561  002BD6  B4D8               	btfsc	status,2,c
 25562  002BD8  D01A               	goto	l675
 25563                           
 25564                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 25565  002BDA  0E64               	movlw	100
 25566  002BDC  0100               	movlb	0	; () banked
 25567  002BDE  619E               	cpfslt	_MSDRetryAttempt& (0+255),b
 25568  002BE0  D002               	goto	l674
 25569                           
 25570                           ; BSR set to: 0
 25571                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 25572  002BE2  2B9E               	incf	_MSDRetryAttempt& (0+255),f,b
 25573                           
 25574                           ;usb_device_msd.c: 1088: break;
 25575  002BE4  D084               	goto	l668
 25576  002BE6                     l674:
 25577                           
 25578                           ; BSR set to: 0
 25579                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 25580                           
 25581                           ; BSR set to: 0
 25582  002BE6  0E02               	movlw	2
 25583  002BE8  010D               	movlb	13	; () banked
 25584  002BEA  6F8C               	movwf	140,b	;volatile
 25585                           
 25586                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 25587  002BEC  0101               	movlb	1	; () banked
 25588  002BEE  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 25589  002BF0  0BF0               	andlw	-16
 25590  002BF2  0903               	iorlw	3
 25591  002BF4  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 25592                           
 25593                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 25594  002BF6  0E00               	movlw	0
 25595  002BF8  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 25596                           
 25597                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 25598  002BFA  0E00               	movlw	0
 25599  002BFC  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 25600                           
 25601                           ; BSR set to: 1
 25602                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 25603  002BFE  0E01               	movlw	1
 25604  002C00  6E01               	movwf	USBStallEndpoint@dir,c
 25605  002C02  0E02               	movlw	2
 25606  002C04  EC26  F020         	call	_USBStallEndpoint
 25607  002C08  D05D               	goto	l10340
 25608  002C0A                     L24:
 25609  002C0A  6FA0               	movwf	_MSDReadState& (0+255),b
 25610                           
 25611                           ;usb_device_msd.c: 1109: break;
 25612  002C0C  D070               	goto	l668
 25613  002C0E                     l675:
 25614                           
 25615                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 25616                           
 25617                           ; BSR set to: 0
 25618                           
 25619                           ; BSR set to: 0
 25620  002C0E  0E01               	movlw	1
 25621  002C10  0100               	movlb	0	; () banked
 25622  002C12  2780               	addwf	_LBA& (0+255),f,b
 25623  002C14  0E00               	movlw	0
 25624  002C16  2381               	addwfc	(_LBA+1)& (0+255),f,b
 25625  002C18  2382               	addwfc	(_LBA+2)& (0+255),f,b
 25626  002C1A  2383               	addwfc	(_LBA+3)& (0+255),f,b
 25627                           
 25628                           ; BSR set to: 0
 25629                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 25630  002C1C  0E00               	movlw	0
 25631  002C1E  010D               	movlb	13	; () banked
 25632  002C20  6F88               	movwf	136,b	;volatile
 25633  002C22  0E02               	movlw	2
 25634  002C24  6F89               	movwf	137,b	;volatile
 25635  002C26  0E00               	movlw	0
 25636  002C28  6F8A               	movwf	138,b	;volatile
 25637  002C2A  0E00               	movlw	0
 25638  002C2C  6F8B               	movwf	139,b	;volatile
 25639                           
 25640                           ; BSR set to: 13
 25641                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 25642  002C2E  0E00               	movlw	0
 25643  002C30  0100               	movlb	0	; () banked
 25644  002C32  6F8C               	movwf	_ptrNextData& (0+255),b
 25645  002C34  0E06               	movlw	6
 25646  002C36  6F8D               	movwf	(_ptrNextData+1)& (0+255),b
 25647                           
 25648                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 25649  002C38  0E03               	movlw	3
 25650  002C3A  6FA0               	movwf	_MSDReadState& (0+255),b
 25651  002C3C                     
 25652                           ; BSR set to: 0
 25653                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 25654                           
 25655                           ; BSR set to: 0
 25656  002C3C  010D               	movlb	13	; () banked
 25657  002C3E  5188               	movf	136,w,b	;volatile
 25658  002C40  1189               	iorwf	137,w,b	;volatile
 25659  002C42  118A               	iorwf	138,w,b	;volatile
 25660  002C44  118B               	iorwf	139,w,b	;volatile
 25661  002C46  A4D8               	btfss	status,2,c
 25662  002C48  D002               	goto	l677
 25663                           
 25664                           ; BSR set to: 13
 25665                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 25666  002C4A  0E01               	movlw	1
 25667  002C4C  D03C               	goto	L26
 25668  002C4E                     l677:
 25669                           
 25670                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 25671                           
 25672                           ; BSR set to: 0
 25673  002C4E  0E04               	movlw	4
 25674  002C50  0100               	movlb	0	; () banked
 25675  002C52  6FA0               	movwf	_MSDReadState& (0+255),b
 25676  002C54                     
 25677                           ; BSR set to: 0
 25678                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 25679                           
 25680                           ; BSR set to: 0
 25681  002C54  5188               	movf	_USBMSDInHandle& (0+255),w,b
 25682  002C56  1189               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 25683  002C58  B4D8               	btfsc	status,2,c
 25684  002C5A  D006               	goto	l679
 25685                           
 25686                           ; BSR set to: 0
 25687  002C5C  C088  FFD9         	movff	_USBMSDInHandle,fsr2l
 25688  002C60  C089  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 25689  002C64  BEDF               	btfsc	indf2,7,c
 25690  002C66  D043               	goto	l668
 25691  002C68                     l679:
 25692                           
 25693                           ; BSR set to: 0
 25694                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 25695                           
 25696                           ; BSR set to: 0
 25697  002C68  0E01               	movlw	1
 25698  002C6A  6E01               	movwf	USBTransferOnePacket@dir,c
 25699  002C6C  C08C  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 25700  002C70  C08D  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 25701  002C74  0E40               	movlw	64
 25702  002C76  6E04               	movwf	USBTransferOnePacket@len,c
 25703  002C78  0E02               	movlw	2
 25704  002C7A  EC32  F022         	call	_USBTransferOnePacket
 25705  002C7E  C001  F088         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 25706  002C82  C002  F089         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 25707                           
 25708                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 25709  002C86  0E03               	movlw	3
 25710  002C88  0100               	movlb	0	; () banked
 25711  002C8A  6FA0               	movwf	_MSDReadState& (0+255),b
 25712                           
 25713                           ; BSR set to: 0
 25714                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 25715  002C8C  0E40               	movlw	64
 25716  002C8E  0101               	movlb	1	; () banked
 25717  002C90  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 25718  002C92  0E00               	movlw	0
 25719  002C94  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 25720  002C96  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 25721  002C98  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 25722                           
 25723                           ; BSR set to: 1
 25724                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 25725  002C9A  0E40               	movlw	64
 25726  002C9C  010D               	movlb	13	; () banked
 25727  002C9E  5F88               	subwf	136,f,b	;volatile
 25728  002CA0  0E00               	movlw	0
 25729  002CA2  5B89               	subwfb	137,f,b	;volatile
 25730  002CA4  5B8A               	subwfb	138,f,b	;volatile
 25731  002CA6  5B8B               	subwfb	139,f,b	;volatile
 25732                           
 25733                           ; BSR set to: 13
 25734                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 25735  002CA8  0E40               	movlw	64
 25736  002CAA  0100               	movlb	0	; () banked
 25737  002CAC  278C               	addwf	_ptrNextData& (0+255),f,b
 25738  002CAE  0E00               	movlw	0
 25739  002CB0  238D               	addwfc	(_ptrNextData+1)& (0+255),f,b
 25740                           
 25741                           ;usb_device_msd.c: 1149: break;
 25742  002CB2  D01D               	goto	l668
 25743  002CB4                     
 25744                           ; BSR set to: 0
 25745                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 25746                           
 25747                           ; BSR set to: 0
 25748  002CB4  0E02               	movlw	2
 25749  002CB6  010D               	movlb	13	; () banked
 25750  002CB8  6F8C               	movwf	140,b	;volatile
 25751                           
 25752                           ; BSR set to: 13
 25753                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 25754  002CBA  0E01               	movlw	1
 25755  002CBC  6E01               	movwf	USBStallEndpoint@dir,c
 25756  002CBE  0E02               	movlw	2
 25757  002CC0  EC26  F020         	call	_USBStallEndpoint
 25758  002CC4                     l10340:
 25759                           
 25760                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 25761  002CC4  0E00               	movlw	0
 25762  002CC6                     L26:
 25763  002CC6  0100               	movlb	0	; () banked
 25764  002CC8  D7A0               	goto	L24
 25765  002CCA                     l665:
 25766                           
 25767                           ; BSR set to: 0
 25768  002CCA  0100               	movlb	0	; () banked
 25769  002CCC  51A0               	movf	_MSDReadState& (0+255),w,b
 25770                           
 25771                           ; Switch size 1, requested type "space"
 25772                           ; Number of cases is 5, Range of values is 0 to 4
 25773                           ; switch strategies available:
 25774                           ; Name         Instructions Cycles
 25775                           ; simple_byte           16     9 (average)
 25776                           ;	Chosen strategy is simple_byte
 25777  002CCE  0A00               	xorlw	0	; case 0
 25778  002CD0  B4D8               	btfsc	status,2,c
 25779  002CD2  D725               	goto	l666
 25780  002CD4  0A01               	xorlw	1	; case 1
 25781  002CD6  B4D8               	btfsc	status,2,c
 25782  002CD8  D74C               	goto	l669
 25783  002CDA  0A03               	xorlw	3	; case 2
 25784  002CDC  B4D8               	btfsc	status,2,c
 25785  002CDE  D754               	goto	l671
 25786  002CE0  0A01               	xorlw	1	; case 3
 25787  002CE2  B4D8               	btfsc	status,2,c
 25788  002CE4  D7AB               	goto	l676
 25789  002CE6  0A07               	xorlw	7	; case 4
 25790  002CE8  B4D8               	btfsc	status,2,c
 25791  002CEA  D7B4               	goto	l678
 25792  002CEC  D7E3               	goto	l680
 25793  002CEE                     l668:
 25794                           
 25795                           ;usb_device_msd.c: 1161: return MSDReadState;
 25796                           
 25797                           ; BSR set to: 0
 25798  002CEE  0100               	movlb	0	; () banked
 25799  002CF0  51A0               	movf	_MSDReadState& (0+255),w,b
 25800  002CF2  0012               	return	
 25801  002CF4                     __end_of_MSDReadHandler:
 25802                           	opt stack 0
 25803                           tosu	equ	0xFFF
 25804                           tosh	equ	0xFFE
 25805                           tosl	equ	0xFFD
 25806                           pclath	equ	0xFFA
 25807                           tblptru	equ	0xFF8
 25808                           tblptrh	equ	0xFF7
 25809                           tblptrl	equ	0xFF6
 25810                           tablat	equ	0xFF5
 25811                           prodh	equ	0xFF4
 25812                           prodl	equ	0xFF3
 25813                           intcon	equ	0xFF2
 25814                           intcon2	equ	0xFF1
 25815                           intcon3	equ	0xFF0
 25816                           indf0	equ	0xFEF
 25817                           postinc0	equ	0xFEE
 25818                           fsr0h	equ	0xFEA
 25819                           fsr0l	equ	0xFE9
 25820                           wreg	equ	0xFE8
 25821                           indf1	equ	0xFE7
 25822                           postdec1	equ	0xFE5
 25823                           plusw1	equ	0xFE3
 25824                           fsr1h	equ	0xFE2
 25825                           fsr1l	equ	0xFE1
 25826                           indf2	equ	0xFDF
 25827                           postinc2	equ	0xFDE
 25828                           postdec2	equ	0xFDD
 25829                           plusw2	equ	0xFDB
 25830                           fsr2h	equ	0xFDA
 25831                           fsr2l	equ	0xFD9
 25832                           status	equ	0xFD8
 25833                           
 25834 ;; *************** function _MSDCheckForErrorCases *****************
 25835 ;; Defined at:
 25836 ;;		line 1434 in file "usb_device_msd.c"
 25837 ;; Parameters:    Size  Location     Type
 25838 ;;  DeviceBytes     4   10[COMRAM] unsigned long 
 25839 ;; Auto vars:     Size  Location     Type
 25840 ;;  DeviceNoData    1   16[COMRAM] unsigned char 
 25841 ;;  MSDErrorCase    1   15[COMRAM] unsigned char 
 25842 ;;  HostMoreData    1   14[COMRAM] unsigned char 
 25843 ;; Return value:  Size  Location     Type
 25844 ;;                  1    wreg      unsigned char 
 25845 ;; Registers used:
 25846 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25847 ;; Tracked objects:
 25848 ;;		On entry : 0/0
 25849 ;;		On exit  : 0/0
 25850 ;;		Unchanged: 0/0
 25851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25852 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25853 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25855 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25856 ;;Total ram usage:        7 bytes
 25857 ;; Hardware stack levels used:    1
 25858 ;; Hardware stack levels required when called:    2
 25859 ;; This function calls:
 25860 ;;		_MSDErrorHandler
 25861 ;; This function is called by:
 25862 ;;		_MSDProcessCommandMediaPresent
 25863 ;;		_MSDReadHandler
 25864 ;;		_MSDWriteHandler
 25865 ;; This function uses a non-reentrant model
 25866 ;;
 25867                           
 25868                           	psect	text115
 25869  00490C                     __ptext115:
 25870                           	opt stack 0
 25871  00490C                     _MSDCheckForErrorCases:
 25872                           	opt stack 23
 25873                           
 25874                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 25875                           
 25876                           ; BSR set to: 0
 25877                           ;incstack = 0
 25878  00490C  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 25879  00490E  100C               	iorwf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 25880  004910  100D               	iorwf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 25881  004912  100E               	iorwf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 25882  004914  A4D8               	btfss	status,2,c
 25883  004916  D002               	goto	l710
 25884                           
 25885                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 25886  004918  0E01               	movlw	1
 25887  00491A  D001               	goto	L27
 25888  00491C                     l710:
 25889                           
 25890                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 25891  00491C  0E00               	movlw	0
 25892  00491E                     L27:
 25893  00491E  6E11               	movwf	MSDCheckForErrorCases@DeviceNoData,c
 25894                           
 25895                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 25896  004920  0100               	movlb	0	; () banked
 25897  004922  059B               	decf	_MSDHostNoData& (0+255),w,b
 25898  004924  A4D8               	btfss	status,2,c
 25899  004926  D005               	goto	l712
 25900                           
 25901                           ; BSR set to: 0
 25902  004928  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 25903  00492A  A4D8               	btfss	status,2,c
 25904  00492C  D002               	goto	l712
 25905                           
 25906                           ; BSR set to: 0
 25907                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 25908  00492E  0E00               	movlw	0
 25909                           
 25910                           ; BSR set to: 0
 25911  004930  0012               	return	
 25912  004932                     l712:
 25913                           
 25914                           ; BSR set to: 0
 25915                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 25916                           
 25917                           ; BSR set to: 0
 25918  004932  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 25919  004934  0101               	movlb	1	; () banked
 25920  004936  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 25921  004938  E11A               	bnz	l9966
 25922  00493A  500C               	movf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 25923  00493C  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 25924  00493E  E117               	bnz	l9966
 25925  004940  500D               	movf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 25926  004942  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 25927  004944  E114               	bnz	l9966
 25928  004946  500E               	movf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 25929  004948  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 25930  00494A  A4D8               	btfss	status,2,c
 25931  00494C  D010               	goto	l718
 25932                           
 25933                           ; BSR set to: 1
 25934                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 25935  00494E  0100               	movlb	0	; () banked
 25936  004950  05A2               	decf	_MSD_State& (0+255),w,b
 25937  004952  A4D8               	btfss	status,2,c
 25938  004954  D006               	goto	l715
 25939                           
 25940                           ; BSR set to: 0
 25941                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 25942  004956  0E2A               	movlw	42
 25943  004958  19A1               	xorwf	_MSDCommandState& (0+255),w,b
 25944  00495A  B4D8               	btfsc	status,2,c
 25945  00495C  D008               	goto	l718
 25946                           
 25947                           ; BSR set to: 0
 25948                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 25949  00495E  0E00               	movlw	0
 25950                           
 25951                           ; BSR set to: 0
 25952  004960  0012               	return	
 25953  004962                     l715:
 25954                           
 25955                           ; BSR set to: 0
 25956                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 25957                           
 25958                           ; BSR set to: 0
 25959  004962  0E2A               	movlw	42
 25960  004964  19A1               	xorwf	_MSDCommandState& (0+255),w,b
 25961  004966  A4D8               	btfss	status,2,c
 25962  004968  D002               	goto	l718
 25963                           
 25964                           ; BSR set to: 0
 25965                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 25966  00496A  0E00               	movlw	0
 25967                           
 25968                           ; BSR set to: 0
 25969  00496C  0012               	return	
 25970  00496E                     l718:
 25971  00496E                     l9966:
 25972                           
 25973                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 25974  00496E  0101               	movlb	1	; () banked
 25975  004970  5108               	movf	(_gblCBW+8)& (0+255),w,b
 25976  004972  5C0B               	subwf	MSDCheckForErrorCases@DeviceBytes,w,c
 25977  004974  5109               	movf	(_gblCBW+9)& (0+255),w,b
 25978  004976  580C               	subwfb	MSDCheckForErrorCases@DeviceBytes+1,w,c
 25979  004978  510A               	movf	(_gblCBW+10)& (0+255),w,b
 25980  00497A  580D               	subwfb	MSDCheckForErrorCases@DeviceBytes+2,w,c
 25981  00497C  510B               	movf	(_gblCBW+11)& (0+255),w,b
 25982  00497E  580E               	subwfb	MSDCheckForErrorCases@DeviceBytes+3,w,c
 25983  004980  B0D8               	btfsc	status,0,c
 25984  004982  D002               	goto	l719
 25985                           
 25986                           ; BSR set to: 1
 25987                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 25988  004984  0E01               	movlw	1
 25989  004986  D001               	goto	L28
 25990  004988                     l719:
 25991                           
 25992                           ; BSR set to: 1
 25993                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 25994                           
 25995                           ; BSR set to: 1
 25996  004988  0E00               	movlw	0
 25997  00498A                     L28:
 25998  00498A  6E0F               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice,c
 25999                           
 26000                           ; BSR set to: 1
 26001                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 26002                           
 26003                           ; BSR set to: 1
 26004  00498C  0E02               	movlw	2
 26005  00498E  0100               	movlb	0	; () banked
 26006  004990  19A2               	xorwf	_MSD_State& (0+255),w,b
 26007  004992  A4D8               	btfss	status,2,c
 26008  004994  D014               	goto	l721
 26009                           
 26010                           ; BSR set to: 0
 26011                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 26012  004996  0E2A               	movlw	42
 26013  004998  19A1               	xorwf	_MSDCommandState& (0+255),w,b
 26014  00499A  B4D8               	btfsc	status,2,c
 26015  00499C  D005               	goto	l722
 26016                           
 26017                           ; BSR set to: 0
 26018  00499E  5011               	movf	MSDCheckForErrorCases@DeviceNoData,w,c
 26019  0049A0  A4D8               	btfss	status,2,c
 26020  0049A2  D002               	goto	l722
 26021  0049A4                     u6670:
 26022                           
 26023                           ; BSR set to: 0
 26024                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 26025  0049A4  0E05               	movlw	5
 26026  0049A6  D01D               	goto	L31
 26027  0049A8                     l722:
 26028                           
 26029                           ; BSR set to: 0
 26030                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 26031                           
 26032                           ; BSR set to: 0
 26033  0049A8  059B               	decf	_MSDHostNoData& (0+255),w,b
 26034  0049AA  B4D8               	btfsc	status,2,c
 26035  0049AC  D00F               	goto	u6720
 26036                           
 26037                           ; BSR set to: 0
 26038                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 26039                           
 26040                           ; BSR set to: 0
 26041                           
 26042                           ; BSR set to: 0
 26043                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 26044  0049AE  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 26045  0049B0  B4D8               	btfsc	status,2,c
 26046  0049B2  D003               	goto	u6700
 26047                           
 26048                           ; BSR set to: 0
 26049                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 26050                           
 26051                           ; BSR set to: 0
 26052                           
 26053                           ; BSR set to: 0
 26054                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 26055  0049B4  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 26056  0049B6  A4D8               	btfss	status,2,c
 26057  0049B8  D7F5               	goto	u6670
 26058  0049BA                     u6700:
 26059                           
 26060                           ; BSR set to: 0
 26061                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 26062  0049BA  0E04               	movlw	4
 26063  0049BC  D012               	goto	L31
 26064  0049BE                     l721:
 26065                           
 26066                           ; BSR set to: 0
 26067                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 26068                           
 26069                           ; BSR set to: 0
 26070  0049BE  0E2A               	movlw	42
 26071  0049C0  19A1               	xorwf	_MSDCommandState& (0+255),w,b
 26072  0049C2  B4D8               	btfsc	status,2,c
 26073  0049C4  D00D               	goto	l737
 26074                           
 26075                           ; BSR set to: 0
 26076                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 26077                           
 26078                           ; BSR set to: 0
 26079                           
 26080                           ; BSR set to: 0
 26081                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 26082  0049C6  059B               	decf	_MSDHostNoData& (0+255),w,b
 26083  0049C8  A4D8               	btfss	status,2,c
 26084  0049CA  D002               	goto	l733
 26085  0049CC                     u6720:
 26086                           
 26087                           ; BSR set to: 0
 26088                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 26089  0049CC  0E01               	movlw	1
 26090  0049CE  D009               	goto	L31
 26091  0049D0                     l733:
 26092                           
 26093                           ; BSR set to: 0
 26094                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 26095                           
 26096                           ; BSR set to: 0
 26097  0049D0  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 26098  0049D2  B4D8               	btfsc	status,2,c
 26099  0049D4  D003               	goto	u6740
 26100                           
 26101                           ; BSR set to: 0
 26102                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 26103                           
 26104                           ; BSR set to: 0
 26105                           
 26106                           ; BSR set to: 0
 26107                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 26108  0049D6  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 26109  0049D8  A4D8               	btfss	status,2,c
 26110  0049DA  D002               	goto	l737
 26111  0049DC                     u6740:
 26112                           
 26113                           ; BSR set to: 0
 26114                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 26115  0049DC  0E02               	movlw	2
 26116  0049DE  D001               	goto	L31
 26117  0049E0                     l737:
 26118                           
 26119                           ; BSR set to: 0
 26120                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 26121                           
 26122                           ; BSR set to: 0
 26123  0049E0  0E03               	movlw	3
 26124  0049E2                     L31:
 26125  0049E2  6E10               	movwf	MSDCheckForErrorCases@MSDErrorCase,c
 26126                           
 26127                           ; BSR set to: 0
 26128                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 26129                           
 26130                           ; BSR set to: 0
 26131                           
 26132                           ; BSR set to: 0
 26133                           
 26134                           ; BSR set to: 0
 26135                           
 26136                           ; BSR set to: 0
 26137                           
 26138                           ; BSR set to: 0
 26139  0049E4  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 26140  0049E6  EC2D  F021         	call	_MSDErrorHandler
 26141                           
 26142                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 26143  0049EA  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 26144  0049EC  0012               	return	
 26145  0049EE                     __end_of_MSDCheckForErrorCases:
 26146                           	opt stack 0
 26147                           tosu	equ	0xFFF
 26148                           tosh	equ	0xFFE
 26149                           tosl	equ	0xFFD
 26150                           pclath	equ	0xFFA
 26151                           tblptru	equ	0xFF8
 26152                           tblptrh	equ	0xFF7
 26153                           tblptrl	equ	0xFF6
 26154                           tablat	equ	0xFF5
 26155                           prodh	equ	0xFF4
 26156                           prodl	equ	0xFF3
 26157                           intcon	equ	0xFF2
 26158                           intcon2	equ	0xFF1
 26159                           intcon3	equ	0xFF0
 26160                           indf0	equ	0xFEF
 26161                           postinc0	equ	0xFEE
 26162                           fsr0h	equ	0xFEA
 26163                           fsr0l	equ	0xFE9
 26164                           wreg	equ	0xFE8
 26165                           indf1	equ	0xFE7
 26166                           postdec1	equ	0xFE5
 26167                           plusw1	equ	0xFE3
 26168                           fsr1h	equ	0xFE2
 26169                           fsr1l	equ	0xFE1
 26170                           indf2	equ	0xFDF
 26171                           postinc2	equ	0xFDE
 26172                           postdec2	equ	0xFDD
 26173                           plusw2	equ	0xFDB
 26174                           fsr2h	equ	0xFDA
 26175                           fsr2l	equ	0xFD9
 26176                           status	equ	0xFD8
 26177                           
 26178 ;; *************** function _MSDErrorHandler *****************
 26179 ;; Defined at:
 26180 ;;		line 1577 in file "usb_device_msd.c"
 26181 ;; Parameters:    Size  Location     Type
 26182 ;;  ErrorCase       1    wreg     unsigned char 
 26183 ;; Auto vars:     Size  Location     Type
 26184 ;;  ErrorCase       1    8[COMRAM] unsigned char 
 26185 ;;  OldMSD_State    1    9[COMRAM] unsigned char 
 26186 ;; Return value:  Size  Location     Type
 26187 ;;                  1    wreg      void 
 26188 ;; Registers used:
 26189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26190 ;; Tracked objects:
 26191 ;;		On entry : 0/0
 26192 ;;		On exit  : 0/0
 26193 ;;		Unchanged: 0/0
 26194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26196 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26198 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26199 ;;Total ram usage:        2 bytes
 26200 ;; Hardware stack levels used:    1
 26201 ;; Hardware stack levels required when called:    1
 26202 ;; This function calls:
 26203 ;;		_ResetSenseData
 26204 ;;		_USBStallEndpoint
 26205 ;; This function is called by:
 26206 ;;		_MSDProcessCommandMediaAbsent
 26207 ;;		_MSDProcessCommandMediaPresent
 26208 ;;		_MSDCheckForErrorCases
 26209 ;; This function uses a non-reentrant model
 26210 ;;
 26211                           
 26212                           	psect	text116
 26213  00425A                     __ptext116:
 26214                           	opt stack 0
 26215  00425A                     _MSDErrorHandler:
 26216                           	opt stack 23
 26217                           
 26218                           ;incstack = 0
 26219                           ;MSDErrorHandler@ErrorCase stored from wreg
 26220  00425A  6E09               	movwf	MSDErrorHandler@ErrorCase,c
 26221                           
 26222                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 26223  00425C  0100               	movlb	0	; () banked
 26224  00425E  5188               	movf	_USBMSDInHandle& (0+255),w,b
 26225  004260  1189               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 26226  004262  B4D8               	btfsc	status,2,c
 26227  004264  D006               	goto	u6340
 26228                           
 26229                           ; BSR set to: 0
 26230  004266  C088  FFD9         	movff	_USBMSDInHandle,fsr2l
 26231  00426A  C089  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 26232  00426E  BEDF               	btfsc	indf2,7,c
 26233  004270  0012               	return	
 26234  004272                     u6340:
 26235                           
 26236                           ; BSR set to: 0
 26237                           
 26238                           ; BSR set to: 0
 26239  004272  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 26240  004274  118B               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 26241  004276  B4D8               	btfsc	status,2,c
 26242  004278  D006               	goto	l741
 26243                           
 26244                           ; BSR set to: 0
 26245  00427A  C08A  FFD9         	movff	_USBMSDOutHandle,fsr2l
 26246  00427E  C08B  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 26247  004282  BEDF               	btfsc	indf2,7,c
 26248  004284  0012               	return	
 26249  004286                     l741:
 26250                           
 26251                           ; BSR set to: 0
 26252                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 26253  004286  C0A2  F00A         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 26254                           
 26255                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 26256  00428A  69A1               	setf	_MSDCommandState& (0+255),b
 26257                           
 26258                           ; BSR set to: 0
 26259                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 26260  00428C  0E00               	movlw	0
 26261  00428E  6FA0               	movwf	_MSDReadState& (0+255),b
 26262                           
 26263                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 26264  004290  0E00               	movlw	0
 26265  004292  6F9F               	movwf	_MSDWriteState& (0+255),b
 26266                           
 26267                           ; BSR set to: 0
 26268                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 26269  004294  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 26270  004298  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 26271  00429C  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 26272  0042A0  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 26273                           
 26274                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 26275  0042A4  0E01               	movlw	1
 26276  0042A6  010D               	movlb	13	; () banked
 26277  0042A8  6F8C               	movwf	140,b	;volatile
 26278                           
 26279                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 26280  0042AA  0E03               	movlw	3
 26281  0042AC  0100               	movlb	0	; () banked
 26282  0042AE  6FA2               	movwf	_MSD_State& (0+255),b
 26283                           
 26284                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 26285  0042B0  D043               	goto	l747
 26286  0042B2                     
 26287                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 26288                           
 26289                           ; BSR set to: 0
 26290  0042B2  0E02               	movlw	2
 26291  0042B4  010D               	movlb	13	; () banked
 26292  0042B6  6F8C               	movwf	140,b	;volatile
 26293                           
 26294                           ;usb_device_msd.c: 1607: break;
 26295  0042B8  0012               	return	
 26296  0042BA                     
 26297                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 26298                           
 26299                           ; BSR set to: 13
 26300  0042BA  0E01               	movlw	1
 26301  0042BC  6E01               	movwf	USBStallEndpoint@dir,c
 26302  0042BE  0E02               	movlw	2
 26303  0042C0  EC26  F020         	call	_USBStallEndpoint
 26304                           
 26305                           ;usb_device_msd.c: 1611: break;
 26306  0042C4  0012               	return	
 26307  0042C6                     
 26308                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 26309  0042C6  0E02               	movlw	2
 26310  0042C8  010D               	movlb	13	; () banked
 26311  0042CA  6F8C               	movwf	140,b	;volatile
 26312                           
 26313                           ; BSR set to: 13
 26314                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 26315  0042CC  0E01               	movlw	1
 26316  0042CE  6E01               	movwf	USBStallEndpoint@dir,c
 26317  0042D0  0E02               	movlw	2
 26318  0042D2  EC26  F020         	call	_USBStallEndpoint
 26319                           
 26320                           ;usb_device_msd.c: 1616: break;
 26321  0042D6  0012               	return	
 26322  0042D8                     
 26323                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 26324  0042D8  0E00               	movlw	0
 26325  0042DA  6E01               	movwf	USBStallEndpoint@dir,c
 26326  0042DC  0E02               	movlw	2
 26327  0042DE  EC26  F020         	call	_USBStallEndpoint
 26328                           
 26329                           ;usb_device_msd.c: 1620: break;
 26330  0042E2  0012               	return	
 26331  0042E4                     
 26332                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 26333  0042E4  0E02               	movlw	2
 26334  0042E6  010D               	movlb	13	; () banked
 26335  0042E8  6F8C               	movwf	140,b	;volatile
 26336                           
 26337                           ; BSR set to: 13
 26338                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 26339  0042EA  0E00               	movlw	0
 26340  0042EC  6E01               	movwf	USBStallEndpoint@dir,c
 26341  0042EE  0E02               	movlw	2
 26342  0042F0  EC26  F020         	call	_USBStallEndpoint
 26343                           
 26344                           ;usb_device_msd.c: 1625: break;
 26345  0042F4  0012               	return	
 26346  0042F6                     
 26347                           ;usb_device_msd.c: 1628: ResetSenseData();
 26348  0042F6  EC03  F036         	call	_ResetSenseData	;wreg free
 26349                           
 26350                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 26351  0042FA  0101               	movlb	1	; () banked
 26352  0042FC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 26353  0042FE  0BF0               	andlw	-16
 26354  004300  0905               	iorlw	5
 26355  004302  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 26356                           
 26357                           ; BSR set to: 1
 26358                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 26359  004304  0E20               	movlw	32
 26360  004306  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 26361                           
 26362                           ; BSR set to: 1
 26363                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 26364  004308  0E00               	movlw	0
 26365  00430A  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 26366                           
 26367                           ; BSR set to: 1
 26368                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 26369  00430C  0E02               	movlw	2
 26370  00430E  180A               	xorwf	MSDErrorHandler@OldMSD_State,w,c
 26371  004310  A4D8               	btfss	status,2,c
 26372  004312  D00C               	goto	l755
 26373                           
 26374                           ; BSR set to: 1
 26375  004314  5108               	movf	(_gblCBW+8)& (0+255),w,b
 26376  004316  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 26377  004318  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 26378  00431A  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 26379  00431C  B4D8               	btfsc	status,2,c
 26380  00431E  D006               	goto	l755
 26381                           
 26382                           ; BSR set to: 1
 26383                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 26384  004320  0E00               	movlw	0
 26385  004322  6E01               	movwf	USBStallEndpoint@dir,c
 26386  004324  0E02               	movlw	2
 26387  004326  EC26  F020         	call	_USBStallEndpoint
 26388                           
 26389                           ;usb_device_msd.c: 1636: }
 26390  00432A  0012               	return	
 26391  00432C                     l755:
 26392                           
 26393                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 26394  00432C  0E01               	movlw	1
 26395  00432E  6E01               	movwf	USBStallEndpoint@dir,c
 26396  004330  0E02               	movlw	2
 26397  004332  EC26  F020         	call	_USBStallEndpoint
 26398                           
 26399                           ;usb_device_msd.c: 1644: }
 26400                           
 26401                           ;usb_device_msd.c: 1643: break;
 26402                           
 26403                           ;usb_device_msd.c: 1642: default:
 26404                           
 26405                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 26406  004336  0012               	return	
 26407  004338                     l747:
 26408  004338  5009               	movf	MSDErrorHandler@ErrorCase,w,c
 26409                           
 26410                           ; Switch size 1, requested type "space"
 26411                           ; Number of cases is 6, Range of values is 1 to 127
 26412                           ; switch strategies available:
 26413                           ; Name         Instructions Cycles
 26414                           ; simple_byte           19    10 (average)
 26415                           ;	Chosen strategy is simple_byte
 26416  00433A  0A01               	xorlw	1	; case 1
 26417  00433C  B4D8               	btfsc	status,2,c
 26418  00433E  D7B9               	goto	l748
 26419  004340  0A03               	xorlw	3	; case 2
 26420  004342  B4D8               	btfsc	status,2,c
 26421  004344  D7BA               	goto	l750
 26422  004346  0A01               	xorlw	1	; case 3
 26423  004348  B4D8               	btfsc	status,2,c
 26424  00434A  D7BD               	goto	l751
 26425  00434C  0A07               	xorlw	7	; case 4
 26426  00434E  B4D8               	btfsc	status,2,c
 26427  004350  D7C3               	goto	l752
 26428  004352  0A01               	xorlw	1	; case 5
 26429  004354  B4D8               	btfsc	status,2,c
 26430  004356  D7C6               	goto	l753
 26431  004358  0A7A               	xorlw	122	; case 127
 26432  00435A  A4D8               	btfss	status,2,c
 26433  00435C  0012               	return	
 26434  00435E  D7CB               	goto	l754
 26435  004360                     __end_of_MSDErrorHandler:
 26436                           	opt stack 0
 26437                           tosu	equ	0xFFF
 26438                           tosh	equ	0xFFE
 26439                           tosl	equ	0xFFD
 26440                           pclath	equ	0xFFA
 26441                           tblptru	equ	0xFF8
 26442                           tblptrh	equ	0xFF7
 26443                           tblptrl	equ	0xFF6
 26444                           tablat	equ	0xFF5
 26445                           prodh	equ	0xFF4
 26446                           prodl	equ	0xFF3
 26447                           intcon	equ	0xFF2
 26448                           intcon2	equ	0xFF1
 26449                           intcon3	equ	0xFF0
 26450                           indf0	equ	0xFEF
 26451                           postinc0	equ	0xFEE
 26452                           fsr0h	equ	0xFEA
 26453                           fsr0l	equ	0xFE9
 26454                           wreg	equ	0xFE8
 26455                           indf1	equ	0xFE7
 26456                           postdec1	equ	0xFE5
 26457                           plusw1	equ	0xFE3
 26458                           fsr1h	equ	0xFE2
 26459                           fsr1l	equ	0xFE1
 26460                           indf2	equ	0xFDF
 26461                           postinc2	equ	0xFDE
 26462                           postdec2	equ	0xFDD
 26463                           plusw2	equ	0xFDB
 26464                           fsr2h	equ	0xFDA
 26465                           fsr2l	equ	0xFD9
 26466                           status	equ	0xFD8
 26467                           
 26468 ;; *************** function _USBStallEndpoint *****************
 26469 ;; Defined at:
 26470 ;;		line 1073 in file "usb_device.c"
 26471 ;; Parameters:    Size  Location     Type
 26472 ;;  ep              1    wreg     unsigned char 
 26473 ;;  dir             1    0[COMRAM] unsigned char 
 26474 ;; Auto vars:     Size  Location     Type
 26475 ;;  ep              1    5[COMRAM] unsigned char 
 26476 ;;  p               2    6[COMRAM] PTR struct __BDT
 26477 ;;		 -> BDT(48), 
 26478 ;; Return value:  Size  Location     Type
 26479 ;;                  1    wreg      void 
 26480 ;; Registers used:
 26481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26482 ;; Tracked objects:
 26483 ;;		On entry : 0/0
 26484 ;;		On exit  : 0/0
 26485 ;;		Unchanged: 0/0
 26486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26487 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26488 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26489 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26490 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26491 ;;Total ram usage:        8 bytes
 26492 ;; Hardware stack levels used:    1
 26493 ;; This function calls:
 26494 ;;		Nothing
 26495 ;; This function is called by:
 26496 ;;		_MSDTasks
 26497 ;;		_MSDReadHandler
 26498 ;;		_MSDWriteHandler
 26499 ;;		_MSDErrorHandler
 26500 ;;		_MSDTransferTerminated
 26501 ;; This function uses a non-reentrant model
 26502 ;;
 26503                           
 26504                           	psect	text117
 26505  00404C                     __ptext117:
 26506                           	opt stack 0
 26507  00404C                     _USBStallEndpoint:
 26508                           	opt stack 27
 26509                           
 26510                           ;incstack = 0
 26511                           ;USBStallEndpoint@ep stored from wreg
 26512  00404C  6E06               	movwf	USBStallEndpoint@ep,c
 26513                           
 26514                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 26515  00404E  5006               	movf	USBStallEndpoint@ep,w,c
 26516  004050  A4D8               	btfss	status,2,c
 26517  004052  D02C               	goto	l191
 26518                           
 26519                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 26520  004054  0100               	movlb	0	; () banked
 26521  004056  EE20 F001          	lfsr	2,1
 26522  00405A  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 26523  00405C  26D9               	addwf	fsr2l,f,c
 26524  00405E  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 26525  004060  22DA               	addwfc	fsr2h,f,c
 26526  004062  0E08               	movlw	8
 26527  004064  6EDF               	movwf	indf2,c
 26528                           
 26529                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 26530  004066  EE20 F002          	lfsr	2,2
 26531  00406A  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 26532  00406C  26D9               	addwf	fsr2l,f,c
 26533  00406E  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 26534  004070  22DA               	addwfc	fsr2h,f,c
 26535  004072  0E30               	movlw	48
 26536  004074  6EDE               	movwf	postinc2,c
 26537  004076  0E0D               	movlw	13
 26538  004078  6EDD               	movwf	postdec2,c
 26539                           
 26540                           ; BSR set to: 0
 26541                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 26542  00407A  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26543  00407E  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26544  004082  0E0C               	movlw	12
 26545  004084  6EDF               	movwf	indf2,c
 26546                           
 26547                           ; BSR set to: 0
 26548                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 26549  004086  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 26550  00408A  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 26551  00408E  0E00               	movlw	0
 26552  004090  8EDB               	bsf	plusw2,7,c
 26553                           
 26554                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 26555  004092  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 26556  004096  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26557  00409A  0E04               	movlw	4
 26558  00409C  6EDF               	movwf	indf2,c
 26559                           
 26560                           ; BSR set to: 0
 26561                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 26562  00409E  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 26563  0040A2  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 26564  0040A6  0E00               	movlw	0
 26565  0040A8  8EDB               	bsf	plusw2,7,c
 26566                           
 26567                           ;usb_device.c: 1089: }
 26568  0040AA  0012               	return	
 26569  0040AC                     l191:
 26570                           
 26571                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 26572                           
 26573                           ; BSR set to: 0
 26574  0040AC  5001               	movf	USBStallEndpoint@dir,w,c
 26575  0040AE  6E02               	movwf	??_USBStallEndpoint& (0+255),c
 26576  0040B0  6A03               	clrf	(??_USBStallEndpoint+1)& (0+255),c
 26577  0040B2  90D8               	bcf	status,0,c
 26578  0040B4  3602               	rlcf	??_USBStallEndpoint,f,c
 26579  0040B6  3603               	rlcf	??_USBStallEndpoint+1,f,c
 26580  0040B8  5006               	movf	USBStallEndpoint@ep,w,c
 26581  0040BA  6E04               	movwf	(??_USBStallEndpoint+2)& (0+255),c
 26582  0040BC  6A05               	clrf	(??_USBStallEndpoint+3)& (0+255),c
 26583  0040BE  90D8               	bcf	status,0,c
 26584  0040C0  3604               	rlcf	??_USBStallEndpoint+2,f,c
 26585  0040C2  3605               	rlcf	??_USBStallEndpoint+3,f,c
 26586  0040C4  90D8               	bcf	status,0,c
 26587  0040C6  3604               	rlcf	??_USBStallEndpoint+2,f,c
 26588  0040C8  3605               	rlcf	??_USBStallEndpoint+3,f,c
 26589  0040CA  5002               	movf	??_USBStallEndpoint,w,c
 26590  0040CC  2604               	addwf	??_USBStallEndpoint+2,f,c
 26591  0040CE  5003               	movf	??_USBStallEndpoint+1,w,c
 26592  0040D0  2205               	addwfc	??_USBStallEndpoint+3,f,c
 26593  0040D2  90D8               	bcf	status,0,c
 26594  0040D4  3604               	rlcf	??_USBStallEndpoint+2,f,c
 26595  0040D6  3605               	rlcf	??_USBStallEndpoint+3,f,c
 26596  0040D8  90D8               	bcf	status,0,c
 26597  0040DA  3604               	rlcf	??_USBStallEndpoint+2,f,c
 26598  0040DC  3605               	rlcf	??_USBStallEndpoint+3,f,c
 26599  0040DE  0E00               	movlw	0
 26600  0040E0  2404               	addwf	??_USBStallEndpoint+2,w,c
 26601  0040E2  6E07               	movwf	USBStallEndpoint@p,c
 26602  0040E4  0E0D               	movlw	13
 26603  0040E6  2005               	addwfc	??_USBStallEndpoint+3,w,c
 26604  0040E8  6E08               	movwf	USBStallEndpoint@p+1,c
 26605                           
 26606                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 26607  0040EA  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 26608  0040EE  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 26609  0040F2  0E00               	movlw	0
 26610  0040F4  84DB               	bsf	plusw2,2,c
 26611                           
 26612                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 26613  0040F6  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 26614  0040FA  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 26615  0040FE  0E00               	movlw	0
 26616  004100  8EDB               	bsf	plusw2,7,c
 26617                           
 26618                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 26619  004102  5006               	movf	USBStallEndpoint@ep,w,c
 26620  004104  0D04               	mullw	4
 26621  004106  CFF3 F002          	movff	prodl,??_USBStallEndpoint
 26622  00410A  CFF4 F003          	movff	prodh,??_USBStallEndpoint+1
 26623  00410E  5001               	movf	USBStallEndpoint@dir,w,c
 26624  004110  0D02               	mullw	2
 26625  004112  50F3               	movf	prodl,w,c
 26626  004114  2602               	addwf	??_USBStallEndpoint,f,c
 26627  004116  50F4               	movf	prodh,w,c
 26628  004118  2203               	addwfc	??_USBStallEndpoint+1,f,c
 26629  00411A  90D8               	bcf	status,0,c
 26630  00411C  3602               	rlcf	??_USBStallEndpoint,f,c
 26631  00411E  3603               	rlcf	??_USBStallEndpoint+1,f,c
 26632  004120  90D8               	bcf	status,0,c
 26633  004122  3602               	rlcf	??_USBStallEndpoint,f,c
 26634  004124  3603               	rlcf	??_USBStallEndpoint+1,f,c
 26635  004126  0E04               	movlw	4
 26636  004128  2602               	addwf	??_USBStallEndpoint,f,c
 26637  00412A  0E00               	movlw	0
 26638  00412C  2203               	addwfc	??_USBStallEndpoint+1,f,c
 26639  00412E  0E00               	movlw	0
 26640  004130  2402               	addwf	??_USBStallEndpoint,w,c
 26641  004132  6E07               	movwf	USBStallEndpoint@p,c
 26642  004134  0E0D               	movlw	13
 26643  004136  2003               	addwfc	??_USBStallEndpoint+1,w,c
 26644  004138  6E08               	movwf	USBStallEndpoint@p+1,c
 26645                           
 26646                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 26647  00413A  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 26648  00413E  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 26649  004142  0E00               	movlw	0
 26650  004144  84DB               	bsf	plusw2,2,c
 26651                           
 26652                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 26653  004146  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 26654  00414A  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 26655  00414E  0E00               	movlw	0
 26656  004150  8EDB               	bsf	plusw2,7,c
 26657  004152  0012               	return	
 26658  004154                     __end_of_USBStallEndpoint:
 26659                           	opt stack 0
 26660                           tosu	equ	0xFFF
 26661                           tosh	equ	0xFFE
 26662                           tosl	equ	0xFFD
 26663                           pclath	equ	0xFFA
 26664                           tblptru	equ	0xFF8
 26665                           tblptrh	equ	0xFF7
 26666                           tblptrl	equ	0xFF6
 26667                           tablat	equ	0xFF5
 26668                           prodh	equ	0xFF4
 26669                           prodl	equ	0xFF3
 26670                           intcon	equ	0xFF2
 26671                           intcon2	equ	0xFF1
 26672                           intcon3	equ	0xFF0
 26673                           indf0	equ	0xFEF
 26674                           postinc0	equ	0xFEE
 26675                           fsr0h	equ	0xFEA
 26676                           fsr0l	equ	0xFE9
 26677                           wreg	equ	0xFE8
 26678                           indf1	equ	0xFE7
 26679                           postdec1	equ	0xFE5
 26680                           plusw1	equ	0xFE3
 26681                           fsr1h	equ	0xFE2
 26682                           fsr1l	equ	0xFE1
 26683                           indf2	equ	0xFDF
 26684                           postinc2	equ	0xFDE
 26685                           postdec2	equ	0xFDD
 26686                           plusw2	equ	0xFDB
 26687                           fsr2h	equ	0xFDA
 26688                           fsr2l	equ	0xFD9
 26689                           status	equ	0xFD8
 26690                           
 26691 ;; *************** function _ResetSenseData *****************
 26692 ;; Defined at:
 26693 ;;		line 1373 in file "usb_device_msd.c"
 26694 ;; Parameters:    Size  Location     Type
 26695 ;;		None
 26696 ;; Auto vars:     Size  Location     Type
 26697 ;;		None
 26698 ;; Return value:  Size  Location     Type
 26699 ;;                  1    wreg      void 
 26700 ;; Registers used:
 26701 ;;		wreg, status,2
 26702 ;; Tracked objects:
 26703 ;;		On entry : 0/0
 26704 ;;		On exit  : 0/0
 26705 ;;		Unchanged: 0/0
 26706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26711 ;;Total ram usage:        0 bytes
 26712 ;; Hardware stack levels used:    1
 26713 ;; This function calls:
 26714 ;;		Nothing
 26715 ;; This function is called by:
 26716 ;;		_USBMSDInit
 26717 ;;		_MSDProcessCommandMediaAbsent
 26718 ;;		_MSDProcessCommandMediaPresent
 26719 ;;		_MSDErrorHandler
 26720 ;; This function uses a non-reentrant model
 26721 ;;
 26722                           
 26723                           	psect	text118
 26724  006C06                     __ptext118:
 26725                           	opt stack 0
 26726  006C06                     _ResetSenseData:
 26727                           	opt stack 26
 26728                           
 26729                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 26730                           
 26731                           ;incstack = 0
 26732  006C06  0101               	movlb	1	; () banked
 26733  006C08  911F               	bcf	_gblSenseData& (0+255),0,b
 26734  006C0A  931F               	bcf	_gblSenseData& (0+255),1,b
 26735  006C0C  951F               	bcf	_gblSenseData& (0+255),2,b
 26736  006C0E  971F               	bcf	_gblSenseData& (0+255),3,b
 26737  006C10  891F               	bsf	_gblSenseData& (0+255),4,b
 26738  006C12  8B1F               	bsf	_gblSenseData& (0+255),5,b
 26739  006C14  8D1F               	bsf	_gblSenseData& (0+255),6,b
 26740                           
 26741                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 26742  006C16  9F1F               	bcf	_gblSenseData& (0+255),7,b
 26743                           
 26744                           ; BSR set to: 1
 26745                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 26746  006C18  0E00               	movlw	0
 26747  006C1A  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 26748                           
 26749                           ; BSR set to: 1
 26750                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 26751  006C1C  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 26752  006C1E  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 26753  006C20  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 26754  006C22  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 26755                           
 26756                           ; BSR set to: 1
 26757                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 26758  006C24  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 26759                           
 26760                           ; BSR set to: 1
 26761                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 26762  006C26  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 26763                           
 26764                           ; BSR set to: 1
 26765                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 26766  006C28  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 26767                           
 26768                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 26769  006C2A  0E00               	movlw	0
 26770  006C2C  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 26771                           
 26772                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 26773  006C2E  0E00               	movlw	0
 26774  006C30  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 26775                           
 26776                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 26777  006C32  0E00               	movlw	0
 26778  006C34  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 26779                           
 26780                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 26781  006C36  0E00               	movlw	0
 26782  006C38  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 26783                           
 26784                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 26785  006C3A  0E0A               	movlw	10
 26786  006C3C  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 26787                           
 26788                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 26789  006C3E  0E00               	movlw	0
 26790  006C40  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 26791  006C42  0E00               	movlw	0
 26792  006C44  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 26793  006C46  0E00               	movlw	0
 26794  006C48  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 26795  006C4A  0E00               	movlw	0
 26796  006C4C  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 26797                           
 26798                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 26799  006C4E  0E00               	movlw	0
 26800  006C50  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 26801                           
 26802                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 26803  006C52  0E00               	movlw	0
 26804  006C54  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 26805                           
 26806                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 26807  006C56  0E00               	movlw	0
 26808  006C58  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 26809                           
 26810                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 26811  006C5A  0E00               	movlw	0
 26812  006C5C  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 26813                           
 26814                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 26815  006C5E  0E00               	movlw	0
 26816  006C60  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 26817                           
 26818                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 26819  006C62  0E00               	movlw	0
 26820  006C64  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 26821                           
 26822                           ; BSR set to: 1
 26823  006C66  0012               	return		;funcret
 26824  006C68                     __end_of_ResetSenseData:
 26825                           	opt stack 0
 26826                           tosu	equ	0xFFF
 26827                           tosh	equ	0xFFE
 26828                           tosl	equ	0xFFD
 26829                           pclath	equ	0xFFA
 26830                           tblptru	equ	0xFF8
 26831                           tblptrh	equ	0xFF7
 26832                           tblptrl	equ	0xFF6
 26833                           tablat	equ	0xFF5
 26834                           prodh	equ	0xFF4
 26835                           prodl	equ	0xFF3
 26836                           intcon	equ	0xFF2
 26837                           intcon2	equ	0xFF1
 26838                           intcon3	equ	0xFF0
 26839                           indf0	equ	0xFEF
 26840                           postinc0	equ	0xFEE
 26841                           fsr0h	equ	0xFEA
 26842                           fsr0l	equ	0xFE9
 26843                           wreg	equ	0xFE8
 26844                           indf1	equ	0xFE7
 26845                           postdec1	equ	0xFE5
 26846                           plusw1	equ	0xFE3
 26847                           fsr1h	equ	0xFE2
 26848                           fsr1l	equ	0xFE1
 26849                           indf2	equ	0xFDF
 26850                           postinc2	equ	0xFDE
 26851                           postdec2	equ	0xFDD
 26852                           plusw2	equ	0xFDB
 26853                           fsr2h	equ	0xFDA
 26854                           fsr2l	equ	0xFD9
 26855                           status	equ	0xFD8
 26856                           
 26857 ;; *************** function _ExternalFlash_SectorRead *****************
 26858 ;; Defined at:
 26859 ;;		line 40 in file "external_flash.c"
 26860 ;; Parameters:    Size  Location     Type
 26861 ;;  config          2   43[COMRAM] PTR void 
 26862 ;;		 -> NULL(0), 
 26863 ;;  sector_addr     4   45[COMRAM] unsigned long 
 26864 ;;  buffer          2   49[COMRAM] PTR unsigned char 
 26865 ;;		 -> msd_buffer(512), 
 26866 ;; Auto vars:     Size  Location     Type
 26867 ;;  page            2   51[COMRAM] unsigned int 
 26868 ;; Return value:  Size  Location     Type
 26869 ;;                  1    wreg      unsigned char 
 26870 ;; Registers used:
 26871 ;;		wreg, status,2, status,0, cstack
 26872 ;; Tracked objects:
 26873 ;;		On entry : 0/0
 26874 ;;		On exit  : 0/0
 26875 ;;		Unchanged: 0/0
 26876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26877 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26878 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26880 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26881 ;;Total ram usage:       10 bytes
 26882 ;; Hardware stack levels used:    1
 26883 ;; Hardware stack levels required when called:    5
 26884 ;; This function calls:
 26885 ;;		_flash_page_read
 26886 ;; This function is called by:
 26887 ;;		_MSDReadHandler
 26888 ;; This function uses a non-reentrant model
 26889 ;;
 26890                           
 26891                           	psect	text119
 26892  00779C                     __ptext119:
 26893                           	opt stack 0
 26894  00779C                     _ExternalFlash_SectorRead:
 26895                           	opt stack 20
 26896                           
 26897                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 26898                           
 26899                           ; BSR set to: 1
 26900                           ;incstack = 0
 26901  00779C  C02E  F034         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 26902  0077A0  C02F  F035         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 26903                           
 26904                           ;external_flash.c: 45: if(sector_addr >= 8196)
 26905  0077A4  5031               	movf	ExternalFlash_SectorRead@sector_addr+3,w,c
 26906  0077A6  1030               	iorwf	ExternalFlash_SectorRead@sector_addr+2,w,c
 26907  0077A8  E106               	bnz	u6810
 26908  0077AA  0E04               	movlw	4
 26909  0077AC  5C2E               	subwf	ExternalFlash_SectorRead@sector_addr,w,c
 26910  0077AE  0E20               	movlw	32
 26911  0077B0  582F               	subwfb	ExternalFlash_SectorRead@sector_addr+1,w,c
 26912  0077B2  A0D8               	btfss	status,0,c
 26913  0077B4  D002               	goto	l1816
 26914  0077B6                     u6810:
 26915                           
 26916                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 26917  0077B6  0E00               	movlw	0
 26918  0077B8  0012               	return	
 26919  0077BA                     l1816:
 26920                           
 26921                           ;external_flash.c: 48: };external_flash.c: 51: flash_page_read(page, buffer);
 26922  0077BA  C034  F028         	movff	ExternalFlash_SectorRead@page,flash_page_read@page
 26923  0077BE  C035  F029         	movff	ExternalFlash_SectorRead@page+1,flash_page_read@page+1
 26924  0077C2  C032  F02A         	movff	ExternalFlash_SectorRead@buffer,flash_page_read@data
 26925  0077C6  C033  F02B         	movff	ExternalFlash_SectorRead@buffer+1,flash_page_read@data+1
 26926  0077CA  EC37  F03C         	call	_flash_page_read	;wreg free
 26927                           
 26928                           ;external_flash.c: 53: return 1;
 26929  0077CE  0E01               	movlw	1
 26930  0077D0  0012               	return	
 26931  0077D2                     __end_of_ExternalFlash_SectorRead:
 26932                           	opt stack 0
 26933                           tosu	equ	0xFFF
 26934                           tosh	equ	0xFFE
 26935                           tosl	equ	0xFFD
 26936                           pclath	equ	0xFFA
 26937                           tblptru	equ	0xFF8
 26938                           tblptrh	equ	0xFF7
 26939                           tblptrl	equ	0xFF6
 26940                           tablat	equ	0xFF5
 26941                           prodh	equ	0xFF4
 26942                           prodl	equ	0xFF3
 26943                           intcon	equ	0xFF2
 26944                           intcon2	equ	0xFF1
 26945                           intcon3	equ	0xFF0
 26946                           indf0	equ	0xFEF
 26947                           postinc0	equ	0xFEE
 26948                           fsr0h	equ	0xFEA
 26949                           fsr0l	equ	0xFE9
 26950                           wreg	equ	0xFE8
 26951                           indf1	equ	0xFE7
 26952                           postdec1	equ	0xFE5
 26953                           plusw1	equ	0xFE3
 26954                           fsr1h	equ	0xFE2
 26955                           fsr1l	equ	0xFE1
 26956                           indf2	equ	0xFDF
 26957                           postinc2	equ	0xFDE
 26958                           postdec2	equ	0xFDD
 26959                           plusw2	equ	0xFDB
 26960                           fsr2h	equ	0xFDA
 26961                           fsr2l	equ	0xFD9
 26962                           status	equ	0xFD8
 26963                           
 26964 ;; *************** function _flash_page_read *****************
 26965 ;; Defined at:
 26966 ;;		line 419 in file "flash.c"
 26967 ;; Parameters:    Size  Location     Type
 26968 ;;  page            2   39[COMRAM] unsigned int 
 26969 ;;  data            2   41[COMRAM] PTR unsigned char 
 26970 ;;		 -> buffer(512), msd_buffer(512), 
 26971 ;; Auto vars:     Size  Location     Type
 26972 ;;		None
 26973 ;; Return value:  Size  Location     Type
 26974 ;;                  1    wreg      void 
 26975 ;; Registers used:
 26976 ;;		wreg, status,2, status,0, cstack
 26977 ;; Tracked objects:
 26978 ;;		On entry : 0/0
 26979 ;;		On exit  : 0/0
 26980 ;;		Unchanged: 0/0
 26981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26982 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26985 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26986 ;;Total ram usage:        4 bytes
 26987 ;; Hardware stack levels used:    1
 26988 ;; Hardware stack levels required when called:    4
 26989 ;; This function calls:
 26990 ;;		__flash_partial_read
 26991 ;;		_spi_set_configuration
 26992 ;; This function is called by:
 26993 ;;		_ExternalFlash_SectorRead
 26994 ;;		_fat_get_format_status
 26995 ;; This function uses a non-reentrant model
 26996 ;;
 26997                           
 26998                           	psect	text120
 26999  00786E                     __ptext120:
 27000                           	opt stack 0
 27001  00786E                     _flash_page_read:
 27002                           	opt stack 23
 27003                           
 27004                           ;flash.c: 422: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 27005                           
 27006                           ;incstack = 0
 27007  00786E  0E00               	movlw	0
 27008  007870  ECB0  F021         	call	_spi_set_configuration
 27009                           
 27010                           ;flash.c: 425: _flash_partial_read(page, 0, 512, data);
 27011  007874  C028  F014         	movff	flash_page_read@page,__flash_partial_read@page
 27012  007878  C029  F015         	movff	flash_page_read@page+1,__flash_partial_read@page+1
 27013  00787C  0E00               	movlw	0
 27014  00787E  6E17               	movwf	__flash_partial_read@start+1,c
 27015  007880  0E00               	movlw	0
 27016  007882  6E16               	movwf	__flash_partial_read@start,c
 27017  007884  0E02               	movlw	2
 27018  007886  6E19               	movwf	__flash_partial_read@length+1,c
 27019  007888  0E00               	movlw	0
 27020  00788A  6E18               	movwf	__flash_partial_read@length,c
 27021  00788C  C02A  F01A         	movff	flash_page_read@data,__flash_partial_read@data
 27022  007890  C02B  F01B         	movff	flash_page_read@data+1,__flash_partial_read@data+1
 27023  007894  EC62  F032         	call	__flash_partial_read	;wreg free
 27024                           
 27025                           ;flash.c: 428: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 27026  007898  0E01               	movlw	1
 27027  00789A  ECB0  F021         	call	_spi_set_configuration
 27028  00789E  0012               	return		;funcret
 27029  0078A0                     __end_of_flash_page_read:
 27030                           	opt stack 0
 27031                           tosu	equ	0xFFF
 27032                           tosh	equ	0xFFE
 27033                           tosl	equ	0xFFD
 27034                           pclath	equ	0xFFA
 27035                           tblptru	equ	0xFF8
 27036                           tblptrh	equ	0xFF7
 27037                           tblptrl	equ	0xFF6
 27038                           tablat	equ	0xFF5
 27039                           prodh	equ	0xFF4
 27040                           prodl	equ	0xFF3
 27041                           intcon	equ	0xFF2
 27042                           intcon2	equ	0xFF1
 27043                           intcon3	equ	0xFF0
 27044                           indf0	equ	0xFEF
 27045                           postinc0	equ	0xFEE
 27046                           fsr0h	equ	0xFEA
 27047                           fsr0l	equ	0xFE9
 27048                           wreg	equ	0xFE8
 27049                           indf1	equ	0xFE7
 27050                           postdec1	equ	0xFE5
 27051                           plusw1	equ	0xFE3
 27052                           fsr1h	equ	0xFE2
 27053                           fsr1l	equ	0xFE1
 27054                           indf2	equ	0xFDF
 27055                           postinc2	equ	0xFDE
 27056                           postdec2	equ	0xFDD
 27057                           plusw2	equ	0xFDB
 27058                           fsr2h	equ	0xFDA
 27059                           fsr2l	equ	0xFD9
 27060                           status	equ	0xFD8
 27061                           
 27062 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 27063 ;; Defined at:
 27064 ;;		line 993 in file "usb_device_msd.c"
 27065 ;; Parameters:    Size  Location     Type
 27066 ;;  DiExpected      2    0[COMRAM] unsigned int 
 27067 ;; Auto vars:     Size  Location     Type
 27068 ;;		None
 27069 ;; Return value:  Size  Location     Type
 27070 ;;                  1    wreg      void 
 27071 ;; Registers used:
 27072 ;;		wreg, status,2, status,0
 27073 ;; Tracked objects:
 27074 ;;		On entry : 0/0
 27075 ;;		On exit  : 0/0
 27076 ;;		Unchanged: 0/0
 27077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27078 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27080 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27081 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27082 ;;Total ram usage:        6 bytes
 27083 ;; Hardware stack levels used:    1
 27084 ;; This function calls:
 27085 ;;		Nothing
 27086 ;; This function is called by:
 27087 ;;		_MSDProcessCommandMediaPresent
 27088 ;; This function uses a non-reentrant model
 27089 ;;
 27090                           
 27091                           	psect	text121
 27092  005C22                     __ptext121:
 27093                           	opt stack 0
 27094  005C22                     _MSDComputeDeviceInAndResidue:
 27095                           	opt stack 26
 27096                           
 27097                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 27098                           
 27099                           ;incstack = 0
 27100  005C22  5001               	movf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 27101  005C24  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 27102  005C26  5002               	movf	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 27103  005C28  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 27104  005C2A  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 27105  005C2C  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 27106  005C2E  5003               	movf	??_MSDComputeDeviceInAndResidue,w,c
 27107  005C30  0101               	movlb	1	; () banked
 27108  005C32  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 27109  005C34  5004               	movf	??_MSDComputeDeviceInAndResidue+1,w,c
 27110  005C36  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 27111  005C38  5005               	movf	??_MSDComputeDeviceInAndResidue+2,w,c
 27112  005C3A  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 27113  005C3C  5006               	movf	??_MSDComputeDeviceInAndResidue+3,w,c
 27114  005C3E  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 27115  005C40  B0D8               	btfsc	status,0,c
 27116  005C42  D00E               	goto	l659
 27117                           
 27118                           ; BSR set to: 1
 27119                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 27120  005C44  0E00               	movlw	0
 27121  005C46  010D               	movlb	13	; () banked
 27122  005C48  6F88               	movwf	136,b	;volatile
 27123  005C4A  0E00               	movlw	0
 27124  005C4C  6F89               	movwf	137,b	;volatile
 27125  005C4E  0E00               	movlw	0
 27126  005C50  6F8A               	movwf	138,b	;volatile
 27127  005C52  0E00               	movlw	0
 27128  005C54  6F8B               	movwf	139,b	;volatile
 27129                           
 27130                           ; BSR set to: 13
 27131                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 27132  005C56  C108  F086         	movff	_gblCBW+8,_TransferLength
 27133  005C5A  C109  F087         	movff	_gblCBW+9,_TransferLength+1
 27134                           
 27135                           ;usb_device_msd.c: 1002: }
 27136  005C5E  0012               	return	
 27137  005C60                     l659:
 27138                           
 27139                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 27140                           
 27141                           ; BSR set to: 13
 27142  005C60  0100               	movlb	0	; () banked
 27143  005C62  5186               	movf	_TransferLength& (0+255),w,b
 27144  005C64  5C01               	subwf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 27145  005C66  5187               	movf	(_TransferLength+1)& (0+255),w,b
 27146  005C68  5802               	subwfb	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 27147  005C6A  B0D8               	btfsc	status,0,c
 27148  005C6C  D004               	goto	l661
 27149                           
 27150                           ; BSR set to: 0
 27151                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 27152  005C6E  C001  F086         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 27153  005C72  C002  F087         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 27154  005C76                     l661:
 27155                           
 27156                           ; BSR set to: 0
 27157                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 27158                           
 27159                           ; BSR set to: 0
 27160  005C76  5186               	movf	_TransferLength& (0+255),w,b
 27161  005C78  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 27162  005C7A  5187               	movf	(_TransferLength+1)& (0+255),w,b
 27163  005C7C  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 27164  005C7E  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 27165  005C80  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 27166  005C82  1E03               	comf	??_MSDComputeDeviceInAndResidue,f,c
 27167  005C84  1E04               	comf	??_MSDComputeDeviceInAndResidue+1,f,c
 27168  005C86  1E05               	comf	??_MSDComputeDeviceInAndResidue+2,f,c
 27169  005C88  1E06               	comf	??_MSDComputeDeviceInAndResidue+3,f,c
 27170  005C8A  2A03               	incf	??_MSDComputeDeviceInAndResidue,f,c
 27171  005C8C  0E00               	movlw	0
 27172  005C8E  2204               	addwfc	??_MSDComputeDeviceInAndResidue+1,f,c
 27173  005C90  2205               	addwfc	??_MSDComputeDeviceInAndResidue+2,f,c
 27174  005C92  2206               	addwfc	??_MSDComputeDeviceInAndResidue+3,f,c
 27175  005C94  0101               	movlb	1	; () banked
 27176  005C96  5108               	movf	(_gblCBW+8)& (0+255),w,b
 27177  005C98  2403               	addwf	??_MSDComputeDeviceInAndResidue,w,c
 27178  005C9A  010D               	movlb	13	; () banked
 27179  005C9C  6F88               	movwf	136,b	;volatile
 27180  005C9E  0101               	movlb	1	; () banked
 27181  005CA0  5109               	movf	(_gblCBW+9)& (0+255),w,b
 27182  005CA2  2004               	addwfc	??_MSDComputeDeviceInAndResidue+1,w,c
 27183  005CA4  010D               	movlb	13	; () banked
 27184  005CA6  6F89               	movwf	137,b	;volatile
 27185  005CA8  0101               	movlb	1	; () banked
 27186  005CAA  510A               	movf	(_gblCBW+10)& (0+255),w,b
 27187  005CAC  2005               	addwfc	??_MSDComputeDeviceInAndResidue+2,w,c
 27188  005CAE  010D               	movlb	13	; () banked
 27189  005CB0  6F8A               	movwf	138,b	;volatile
 27190  005CB2  0101               	movlb	1	; () banked
 27191  005CB4  510B               	movf	(_gblCBW+11)& (0+255),w,b
 27192  005CB6  2006               	addwfc	??_MSDComputeDeviceInAndResidue+3,w,c
 27193  005CB8  010D               	movlb	13	; () banked
 27194  005CBA  6F8B               	movwf	139,b	;volatile
 27195  005CBC  0012               	return	
 27196  005CBE                     __end_of_MSDComputeDeviceInAndResidue:
 27197                           	opt stack 0
 27198                           tosu	equ	0xFFF
 27199                           tosh	equ	0xFFE
 27200                           tosl	equ	0xFFD
 27201                           pclath	equ	0xFFA
 27202                           tblptru	equ	0xFF8
 27203                           tblptrh	equ	0xFF7
 27204                           tblptrl	equ	0xFF6
 27205                           tablat	equ	0xFF5
 27206                           prodh	equ	0xFF4
 27207                           prodl	equ	0xFF3
 27208                           intcon	equ	0xFF2
 27209                           intcon2	equ	0xFF1
 27210                           intcon3	equ	0xFF0
 27211                           indf0	equ	0xFEF
 27212                           postinc0	equ	0xFEE
 27213                           fsr0h	equ	0xFEA
 27214                           fsr0l	equ	0xFE9
 27215                           wreg	equ	0xFE8
 27216                           indf1	equ	0xFE7
 27217                           postdec1	equ	0xFE5
 27218                           plusw1	equ	0xFE3
 27219                           fsr1h	equ	0xFE2
 27220                           fsr1l	equ	0xFE1
 27221                           indf2	equ	0xFDF
 27222                           postinc2	equ	0xFDE
 27223                           postdec2	equ	0xFDD
 27224                           plusw2	equ	0xFDB
 27225                           fsr2h	equ	0xFDA
 27226                           fsr2l	equ	0xFD9
 27227                           status	equ	0xFD8
 27228                           
 27229 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 27230 ;; Defined at:
 27231 ;;		line 18 in file "external_flash.c"
 27232 ;; Parameters:    Size  Location     Type
 27233 ;;  config          2    0[COMRAM] PTR void 
 27234 ;;		 -> NULL(0), 
 27235 ;; Auto vars:     Size  Location     Type
 27236 ;;		None
 27237 ;; Return value:  Size  Location     Type
 27238 ;;                  2    0[COMRAM] unsigned int 
 27239 ;; Registers used:
 27240 ;;		wreg, status,2
 27241 ;; Tracked objects:
 27242 ;;		On entry : 0/0
 27243 ;;		On exit  : 0/0
 27244 ;;		Unchanged: 0/0
 27245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27246 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27249 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27250 ;;Total ram usage:        2 bytes
 27251 ;; Hardware stack levels used:    1
 27252 ;; This function calls:
 27253 ;;		Nothing
 27254 ;; This function is called by:
 27255 ;;		_MSDProcessCommandMediaPresent
 27256 ;; This function uses a non-reentrant model
 27257 ;;
 27258                           
 27259                           	psect	text122
 27260  007DBE                     __ptext122:
 27261                           	opt stack 0
 27262  007DBE                     _ExternalFlash_SectorSizeRead:
 27263                           	opt stack 26
 27264                           
 27265                           ;external_flash.c: 20: return 512;
 27266                           
 27267                           ; BSR set to: 13
 27268                           ;incstack = 0
 27269  007DBE  0E02               	movlw	2
 27270  007DC0  6E02               	movwf	?_ExternalFlash_SectorSizeRead+1,c
 27271  007DC2  0E00               	movlw	0
 27272  007DC4  6E01               	movwf	?_ExternalFlash_SectorSizeRead,c
 27273  007DC6  0012               	return	
 27274  007DC8                     __end_of_ExternalFlash_SectorSizeRead:
 27275                           	opt stack 0
 27276                           tosu	equ	0xFFF
 27277                           tosh	equ	0xFFE
 27278                           tosl	equ	0xFFD
 27279                           pclath	equ	0xFFA
 27280                           tblptru	equ	0xFF8
 27281                           tblptrh	equ	0xFF7
 27282                           tblptrl	equ	0xFF6
 27283                           tablat	equ	0xFF5
 27284                           prodh	equ	0xFF4
 27285                           prodl	equ	0xFF3
 27286                           intcon	equ	0xFF2
 27287                           intcon2	equ	0xFF1
 27288                           intcon3	equ	0xFF0
 27289                           indf0	equ	0xFEF
 27290                           postinc0	equ	0xFEE
 27291                           fsr0h	equ	0xFEA
 27292                           fsr0l	equ	0xFE9
 27293                           wreg	equ	0xFE8
 27294                           indf1	equ	0xFE7
 27295                           postdec1	equ	0xFE5
 27296                           plusw1	equ	0xFE3
 27297                           fsr1h	equ	0xFE2
 27298                           fsr1l	equ	0xFE1
 27299                           indf2	equ	0xFDF
 27300                           postinc2	equ	0xFDE
 27301                           postdec2	equ	0xFDD
 27302                           plusw2	equ	0xFDB
 27303                           fsr2h	equ	0xFDA
 27304                           fsr2l	equ	0xFD9
 27305                           status	equ	0xFD8
 27306                           
 27307 ;; *************** function _ExternalFlash_CapacityRead *****************
 27308 ;; Defined at:
 27309 ;;		line 23 in file "external_flash.c"
 27310 ;; Parameters:    Size  Location     Type
 27311 ;;  config          2    0[COMRAM] PTR void 
 27312 ;;		 -> NULL(0), 
 27313 ;; Auto vars:     Size  Location     Type
 27314 ;;		None
 27315 ;; Return value:  Size  Location     Type
 27316 ;;                  4    0[COMRAM] unsigned long 
 27317 ;; Registers used:
 27318 ;;		wreg, status,2
 27319 ;; Tracked objects:
 27320 ;;		On entry : 0/0
 27321 ;;		On exit  : 0/0
 27322 ;;		Unchanged: 0/0
 27323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27324 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27327 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27328 ;;Total ram usage:        4 bytes
 27329 ;; Hardware stack levels used:    1
 27330 ;; This function calls:
 27331 ;;		Nothing
 27332 ;; This function is called by:
 27333 ;;		_MSDProcessCommandMediaPresent
 27334 ;; This function uses a non-reentrant model
 27335 ;;
 27336                           
 27337                           	psect	text123
 27338  007D14                     __ptext123:
 27339                           	opt stack 0
 27340  007D14                     _ExternalFlash_CapacityRead:
 27341                           	opt stack 26
 27342                           
 27343                           ;external_flash.c: 26: return ((uint32_t) 8196 - 1);
 27344                           
 27345                           ;incstack = 0
 27346  007D14  0E03               	movlw	3
 27347  007D16  6E01               	movwf	?_ExternalFlash_CapacityRead,c
 27348  007D18  0E20               	movlw	32
 27349  007D1A  6E02               	movwf	?_ExternalFlash_CapacityRead+1,c
 27350  007D1C  0E00               	movlw	0
 27351  007D1E  6E03               	movwf	?_ExternalFlash_CapacityRead+2,c
 27352  007D20  0E00               	movlw	0
 27353  007D22  6E04               	movwf	?_ExternalFlash_CapacityRead+3,c
 27354  007D24  0012               	return	
 27355  007D26                     __end_of_ExternalFlash_CapacityRead:
 27356                           	opt stack 0
 27357                           tosu	equ	0xFFF
 27358                           tosh	equ	0xFFE
 27359                           tosl	equ	0xFFD
 27360                           pclath	equ	0xFFA
 27361                           tblptru	equ	0xFF8
 27362                           tblptrh	equ	0xFF7
 27363                           tblptrl	equ	0xFF6
 27364                           tablat	equ	0xFF5
 27365                           prodh	equ	0xFF4
 27366                           prodl	equ	0xFF3
 27367                           intcon	equ	0xFF2
 27368                           intcon2	equ	0xFF1
 27369                           intcon3	equ	0xFF0
 27370                           indf0	equ	0xFEF
 27371                           postinc0	equ	0xFEE
 27372                           fsr0h	equ	0xFEA
 27373                           fsr0l	equ	0xFE9
 27374                           wreg	equ	0xFE8
 27375                           indf1	equ	0xFE7
 27376                           postdec1	equ	0xFE5
 27377                           plusw1	equ	0xFE3
 27378                           fsr1h	equ	0xFE2
 27379                           fsr1l	equ	0xFE1
 27380                           indf2	equ	0xFDF
 27381                           postinc2	equ	0xFDE
 27382                           postdec2	equ	0xFDD
 27383                           plusw2	equ	0xFDB
 27384                           fsr2h	equ	0xFDA
 27385                           fsr2l	equ	0xFD9
 27386                           status	equ	0xFD8
 27387                           
 27388 ;; *************** function _ExternalFlash_MediaInitialize *****************
 27389 ;; Defined at:
 27390 ;;		line 10 in file "external_flash.c"
 27391 ;; Parameters:    Size  Location     Type
 27392 ;;  config          2    0[COMRAM] PTR void 
 27393 ;;		 -> NULL(0), 
 27394 ;; Auto vars:     Size  Location     Type
 27395 ;;		None
 27396 ;; Return value:  Size  Location     Type
 27397 ;;                  2    0[COMRAM] PTR struct .
 27398 ;; Registers used:
 27399 ;;		wreg, status,2, status,0
 27400 ;; Tracked objects:
 27401 ;;		On entry : 0/0
 27402 ;;		On exit  : 0/0
 27403 ;;		Unchanged: 0/0
 27404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27405 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27408 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27409 ;;Total ram usage:        2 bytes
 27410 ;; Hardware stack levels used:    1
 27411 ;; This function calls:
 27412 ;;		Nothing
 27413 ;; This function is called by:
 27414 ;;		_USBMSDInit
 27415 ;;		_MSDProcessCommand
 27416 ;; This function uses a non-reentrant model
 27417 ;;
 27418                           
 27419                           	psect	text124
 27420  007C8E                     __ptext124:
 27421                           	opt stack 0
 27422  007C8E                     _ExternalFlash_MediaInitialize:
 27423                           	opt stack 26
 27424                           
 27425                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 27426                           
 27427                           ;incstack = 0
 27428  007C8E  0101               	movlb	1	; () banked
 27429  007C90  81DC               	bsf	(_mediaInformation+1)& (0+255),0,b
 27430                           
 27431                           ; BSR set to: 1
 27432                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 27433  007C92  0E02               	movlw	2
 27434  007C94  6FDE               	movwf	(_mediaInformation+3)& (0+255),b
 27435  007C96  0E00               	movlw	0
 27436  007C98  6FDD               	movwf	(_mediaInformation+2)& (0+255),b
 27437                           
 27438                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 27439  007C9A  0E00               	movlw	0
 27440  007C9C  6FDB               	movwf	_mediaInformation& (0+255),b
 27441                           
 27442                           ; BSR set to: 1
 27443                           ;external_flash.c: 15: return &mediaInformation;
 27444  007C9E  0EDB               	movlw	low _mediaInformation
 27445  007CA0  6E01               	movwf	?_ExternalFlash_MediaInitialize,c
 27446  007CA2  0E01               	movlw	high _mediaInformation
 27447  007CA4  6E02               	movwf	?_ExternalFlash_MediaInitialize+1,c
 27448  007CA6  0012               	return	
 27449  007CA8                     __end_of_ExternalFlash_MediaInitialize:
 27450                           	opt stack 0
 27451                           tosu	equ	0xFFF
 27452                           tosh	equ	0xFFE
 27453                           tosl	equ	0xFFD
 27454                           pclath	equ	0xFFA
 27455                           tblptru	equ	0xFF8
 27456                           tblptrh	equ	0xFF7
 27457                           tblptrl	equ	0xFF6
 27458                           tablat	equ	0xFF5
 27459                           prodh	equ	0xFF4
 27460                           prodl	equ	0xFF3
 27461                           intcon	equ	0xFF2
 27462                           intcon2	equ	0xFF1
 27463                           intcon3	equ	0xFF0
 27464                           indf0	equ	0xFEF
 27465                           postinc0	equ	0xFEE
 27466                           fsr0h	equ	0xFEA
 27467                           fsr0l	equ	0xFE9
 27468                           wreg	equ	0xFE8
 27469                           indf1	equ	0xFE7
 27470                           postdec1	equ	0xFE5
 27471                           plusw1	equ	0xFE3
 27472                           fsr1h	equ	0xFE2
 27473                           fsr1l	equ	0xFE1
 27474                           indf2	equ	0xFDF
 27475                           postinc2	equ	0xFDE
 27476                           postdec2	equ	0xFDD
 27477                           plusw2	equ	0xFDB
 27478                           fsr2h	equ	0xFDA
 27479                           fsr2l	equ	0xFD9
 27480                           status	equ	0xFD8
 27481                           
 27482 ;; *************** function _ExternalFlash_MediaDetect *****************
 27483 ;; Defined at:
 27484 ;;		line 29 in file "external_flash.c"
 27485 ;; Parameters:    Size  Location     Type
 27486 ;;  config          2    0[COMRAM] PTR void 
 27487 ;;		 -> NULL(0), 
 27488 ;; Auto vars:     Size  Location     Type
 27489 ;;		None
 27490 ;; Return value:  Size  Location     Type
 27491 ;;                  1    wreg      unsigned char 
 27492 ;; Registers used:
 27493 ;;		wreg
 27494 ;; Tracked objects:
 27495 ;;		On entry : 0/0
 27496 ;;		On exit  : 0/0
 27497 ;;		Unchanged: 0/0
 27498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27499 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27502 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27503 ;;Total ram usage:        2 bytes
 27504 ;; Hardware stack levels used:    1
 27505 ;; This function calls:
 27506 ;;		Nothing
 27507 ;; This function is called by:
 27508 ;;		_USBMSDInit
 27509 ;;		_MSDProcessCommand
 27510 ;; This function uses a non-reentrant model
 27511 ;;
 27512                           
 27513                           	psect	text125
 27514  007E50                     __ptext125:
 27515                           	opt stack 0
 27516  007E50                     _ExternalFlash_MediaDetect:
 27517                           	opt stack 26
 27518                           
 27519                           ;external_flash.c: 31: return 1;
 27520                           
 27521                           ; BSR set to: 1
 27522                           ;incstack = 0
 27523  007E50  0E01               	movlw	1
 27524  007E52  0012               	return	
 27525  007E54                     __end_of_ExternalFlash_MediaDetect:
 27526                           	opt stack 0
 27527                           tosu	equ	0xFFF
 27528                           tosh	equ	0xFFE
 27529                           tosl	equ	0xFFD
 27530                           pclath	equ	0xFFA
 27531                           tblptru	equ	0xFF8
 27532                           tblptrh	equ	0xFF7
 27533                           tblptrl	equ	0xFF6
 27534                           tablat	equ	0xFF5
 27535                           prodh	equ	0xFF4
 27536                           prodl	equ	0xFF3
 27537                           intcon	equ	0xFF2
 27538                           intcon2	equ	0xFF1
 27539                           intcon3	equ	0xFF0
 27540                           indf0	equ	0xFEF
 27541                           postinc0	equ	0xFEE
 27542                           fsr0h	equ	0xFEA
 27543                           fsr0l	equ	0xFE9
 27544                           wreg	equ	0xFE8
 27545                           indf1	equ	0xFE7
 27546                           postdec1	equ	0xFE5
 27547                           plusw1	equ	0xFE3
 27548                           fsr1h	equ	0xFE2
 27549                           fsr1l	equ	0xFE1
 27550                           indf2	equ	0xFDF
 27551                           postinc2	equ	0xFDE
 27552                           postdec2	equ	0xFDD
 27553                           plusw2	equ	0xFDB
 27554                           fsr2h	equ	0xFDA
 27555                           fsr2l	equ	0xFD9
 27556                           status	equ	0xFD8
 27557                           
 27558 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 27559 ;; Defined at:
 27560 ;;		line 74 in file "app_device_custom_hid.c"
 27561 ;; Parameters:    Size  Location     Type
 27562 ;;		None
 27563 ;; Auto vars:     Size  Location     Type
 27564 ;;  idx             1    0        unsigned char 
 27565 ;; Return value:  Size  Location     Type
 27566 ;;                  1    wreg      void 
 27567 ;; Registers used:
 27568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27569 ;; Tracked objects:
 27570 ;;		On entry : 0/0
 27571 ;;		On exit  : 0/0
 27572 ;;		Unchanged: 0/0
 27573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27576 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27577 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27578 ;;Total ram usage:        4 bytes
 27579 ;; Hardware stack levels used:    1
 27580 ;; Hardware stack levels required when called:   11
 27581 ;; This function calls:
 27582 ;;		_USBTransferOnePacket
 27583 ;;		_api_parse
 27584 ;;		_api_prepare
 27585 ;; This function is called by:
 27586 ;;		_main
 27587 ;; This function uses a non-reentrant model
 27588 ;;
 27589                           
 27590                           	psect	text126
 27591  0057B2                     __ptext126:
 27592                           	opt stack 0
 27593  0057B2                     _APP_DeviceCustomHIDTasks:
 27594                           	opt stack 19
 27595                           
 27596                           ;app_device_custom_hid.c: 76: uint8_t idx;;app_device_custom_hid.c: 81: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 27597                           
 27598                           ;incstack = 0
 27599  0057B2  0E20               	movlw	32
 27600  0057B4  0100               	movlb	0	; () banked
 27601  0057B6  61B0               	cpfslt	_USBDeviceState& (0+255),b
 27602  0057B8  D001               	goto	l960
 27603  0057BA  0012               	return	
 27604  0057BC                     l960:
 27605                           
 27606                           ; BSR set to: 0
 27607                           ;app_device_custom_hid.c: 84: };app_device_custom_hid.c: 90: if( UCONbits.SUSPND== 1 )
 27608  0057BC  B265               	btfsc	3941,1,c	;volatile
 27609  0057BE  0012               	return	
 27610                           
 27611                           ; BSR set to: 0
 27612                           ;app_device_custom_hid.c: 93: };app_device_custom_hid.c: 96: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 27613                           
 27614                           ; BSR set to: 0
 27615                           
 27616                           ; BSR set to: 0
 27617                           ;app_device_custom_hid.c: 91: {;app_device_custom_hid.c: 92: return;
 27618  0057C0  5184               	movf	_USBOutHandle& (0+255),w,b
 27619  0057C2  1185               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 27620  0057C4  B4D8               	btfsc	status,2,c
 27621  0057C6  D006               	goto	u11400
 27622                           
 27623                           ; BSR set to: 0
 27624  0057C8  C084  FFD9         	movff	_USBOutHandle,fsr2l
 27625  0057CC  C085  FFDA         	movff	_USBOutHandle+1,fsr2h
 27626  0057D0  BEDF               	btfsc	indf2,7,c
 27627  0057D2  0012               	return	
 27628  0057D4                     u11400:
 27629                           
 27630                           ; BSR set to: 0
 27631                           ;app_device_custom_hid.c: 97: {;app_device_custom_hid.c: 102: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 27632                           
 27633                           ; BSR set to: 0
 27634  0057D4  0101               	movlb	1	; () banked
 27635  0057D6  516E               	movf	_USBInHandle& (0+255),w,b
 27636  0057D8  116F               	iorwf	(_USBInHandle+1)& (0+255),w,b
 27637  0057DA  B4D8               	btfsc	status,2,c
 27638  0057DC  D006               	goto	u11420
 27639                           
 27640                           ; BSR set to: 1
 27641  0057DE  C16E  FFD9         	movff	_USBInHandle,fsr2l
 27642  0057E2  C16F  FFDA         	movff	_USBInHandle+1,fsr2h
 27643  0057E6  BEDF               	btfsc	indf2,7,c
 27644  0057E8  D020               	goto	l966
 27645  0057EA                     u11420:
 27646                           
 27647                           ; BSR set to: 1
 27648                           ;app_device_custom_hid.c: 103: {;app_device_custom_hid.c: 105: api_prepare((uint8_t) Rec
      +                          eivedDataBuffer, (uint8_t) ToSendDataBuffer);
 27649                           
 27650                           ; BSR set to: 1
 27651  0057EA  0E80               	movlw	_ReceivedDataBuffer& (0+255)
 27652  0057EC  0100               	movlb	0	; () banked
 27653  0057EE  6FF2               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 27654  0057F0  6BF3               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 27655  0057F2  C0F2  F0EE         	movff	??_APP_DeviceCustomHIDTasks,api_prepare@inBuffer
 27656  0057F6  C0F3  F0EF         	movff	??_APP_DeviceCustomHIDTasks+1,api_prepare@inBuffer+1
 27657  0057FA  0E00               	movlw	_ToSendDataBuffer& (0+255)
 27658  0057FC  6FF4               	movwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),b
 27659  0057FE  6BF5               	clrf	(??_APP_DeviceCustomHIDTasks+3)& (0+255),b
 27660  005800  C0F4  F0F0         	movff	??_APP_DeviceCustomHIDTasks+2,api_prepare@outBuffer
 27661  005804  C0F5  F0F1         	movff	??_APP_DeviceCustomHIDTasks+3,api_prepare@outBuffer+1
 27662  005808  EC81  F01E         	call	_api_prepare	;wreg free
 27663                           
 27664                           ;app_device_custom_hid.c: 107: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 27665  00580C  0E01               	movlw	1
 27666  00580E  6E01               	movwf	USBTransferOnePacket@dir,c
 27667  005810  0E00               	movlw	low _ToSendDataBuffer
 27668  005812  6E02               	movwf	USBTransferOnePacket@data,c
 27669  005814  0E03               	movlw	high _ToSendDataBuffer
 27670  005816  6E03               	movwf	USBTransferOnePacket@data+1,c
 27671  005818  0E40               	movlw	64
 27672  00581A  6E04               	movwf	USBTransferOnePacket@len,c
 27673  00581C  0E01               	movlw	1
 27674  00581E  EC32  F022         	call	_USBTransferOnePacket
 27675  005822  C001  F16E         	movff	?_USBTransferOnePacket,_USBInHandle
 27676  005826  C002  F16F         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 27677  00582A                     l966:
 27678                           
 27679                           ;app_device_custom_hid.c: 108: };app_device_custom_hid.c: 111: api_parse(ReceivedDataBuf
      +                          fer, 64);
 27680  00582A  0E80               	movlw	low _ReceivedDataBuffer
 27681  00582C  0100               	movlb	0	; () banked
 27682  00582E  6FE8               	movwf	api_parse@inBuffer& (0+255),b
 27683  005830  0E02               	movlw	high _ReceivedDataBuffer
 27684  005832  6FE9               	movwf	(api_parse@inBuffer+1)& (0+255),b
 27685  005834  0E40               	movlw	64
 27686  005836  6FEA               	movwf	api_parse@receivedDataLength& (0+255),b
 27687  005838  EC45  F026         	call	_api_parse	;wreg free
 27688                           
 27689                           ;app_device_custom_hid.c: 115: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 27690  00583C  0E00               	movlw	0
 27691  00583E  6E01               	movwf	USBTransferOnePacket@dir,c
 27692  005840  0E80               	movlw	low _ReceivedDataBuffer
 27693  005842  6E02               	movwf	USBTransferOnePacket@data,c
 27694  005844  0E02               	movlw	high _ReceivedDataBuffer
 27695  005846  6E03               	movwf	USBTransferOnePacket@data+1,c
 27696  005848  0E40               	movlw	64
 27697  00584A  6E04               	movwf	USBTransferOnePacket@len,c
 27698  00584C  0E01               	movlw	1
 27699  00584E  EC32  F022         	call	_USBTransferOnePacket
 27700  005852  C001  F084         	movff	?_USBTransferOnePacket,_USBOutHandle
 27701  005856  C002  F085         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 27702  00585A  0012               	return	
 27703  00585C                     __end_of_APP_DeviceCustomHIDTasks:
 27704                           	opt stack 0
 27705                           tosu	equ	0xFFF
 27706                           tosh	equ	0xFFE
 27707                           tosl	equ	0xFFD
 27708                           pclath	equ	0xFFA
 27709                           tblptru	equ	0xFF8
 27710                           tblptrh	equ	0xFF7
 27711                           tblptrl	equ	0xFF6
 27712                           tablat	equ	0xFF5
 27713                           prodh	equ	0xFF4
 27714                           prodl	equ	0xFF3
 27715                           intcon	equ	0xFF2
 27716                           intcon2	equ	0xFF1
 27717                           intcon3	equ	0xFF0
 27718                           indf0	equ	0xFEF
 27719                           postinc0	equ	0xFEE
 27720                           fsr0h	equ	0xFEA
 27721                           fsr0l	equ	0xFE9
 27722                           wreg	equ	0xFE8
 27723                           indf1	equ	0xFE7
 27724                           postdec1	equ	0xFE5
 27725                           plusw1	equ	0xFE3
 27726                           fsr1h	equ	0xFE2
 27727                           fsr1l	equ	0xFE1
 27728                           indf2	equ	0xFDF
 27729                           postinc2	equ	0xFDE
 27730                           postdec2	equ	0xFDD
 27731                           plusw2	equ	0xFDB
 27732                           fsr2h	equ	0xFDA
 27733                           fsr2l	equ	0xFD9
 27734                           status	equ	0xFD8
 27735                           
 27736 ;; *************** function _api_prepare *****************
 27737 ;; Defined at:
 27738 ;;		line 52 in file "api.c"
 27739 ;; Parameters:    Size  Location     Type
 27740 ;;  inBuffer        2   57[BANK0 ] PTR unsigned char 
 27741 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 27742 ;;  outBuffer       2   59[BANK0 ] PTR unsigned char 
 27743 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 27744 ;; Auto vars:     Size  Location     Type
 27745 ;;  command         1   92[COMRAM] enum E6715
 27746 ;; Return value:  Size  Location     Type
 27747 ;;                  1    wreg      void 
 27748 ;; Registers used:
 27749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27750 ;; Tracked objects:
 27751 ;;		On entry : 0/0
 27752 ;;		On exit  : 0/0
 27753 ;;		Unchanged: 0/0
 27754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27755 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27756 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27758 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27759 ;;Total ram usage:        5 bytes
 27760 ;; Hardware stack levels used:    1
 27761 ;; Hardware stack levels required when called:    9
 27762 ;; This function calls:
 27763 ;;		__fill_buffer_find_file
 27764 ;;		__fill_buffer_get_bootloader_details
 27765 ;;		__fill_buffer_get_configuration
 27766 ;;		__fill_buffer_get_display
 27767 ;;		__fill_buffer_get_file_details
 27768 ;;		__fill_buffer_get_status
 27769 ;;		__fill_buffer_read_file
 27770 ;;		_flash_is_busy
 27771 ;;		_memcpy
 27772 ;; This function is called by:
 27773 ;;		_main
 27774 ;;		_APP_DeviceCustomHIDTasks
 27775 ;; This function uses a non-reentrant model
 27776 ;;
 27777                           
 27778                           	psect	text127
 27779  003D02                     __ptext127:
 27780                           	opt stack 0
 27781  003D02                     _api_prepare:
 27782                           	opt stack 21
 27783                           
 27784                           ;api.c: 54: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 27785                           
 27786                           ;incstack = 0
 27787  003D02  C0EE  FFD9         	movff	api_prepare@inBuffer,fsr2l
 27788  003D06  C0EF  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 27789  003D0A  50DF               	movf	indf2,w,c
 27790  003D0C  6E5D               	movwf	api_prepare@command,c
 27791                           
 27792                           ;api.c: 56: if(command>0x7F)
 27793  003D0E  0E7F               	movlw	127
 27794  003D10  645D               	cpfsgt	api_prepare@command,c
 27795  003D12  D073               	goto	l2514
 27796                           
 27797                           ;api.c: 57: {;api.c: 61: if(flash_is_busy())
 27798  003D14  EC6B  F03E         	call	_flash_is_busy	;wreg free
 27799  003D18  0900               	iorlw	0
 27800  003D1A  B4D8               	btfsc	status,2,c
 27801  003D1C  D028               	goto	l2508
 27802                           
 27803                           ;api.c: 62: {;api.c: 63: _fill_buffer_get_status(outBuffer);
 27804  003D1E  C0F0  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 27805  003D22  C0F1  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 27806  003D26  ECF7  F024         	call	__fill_buffer_get_status	;wreg free
 27807                           
 27808                           ;api.c: 64: return;
 27809  003D2A  0012               	return	
 27810  003D2C                     
 27811                           ;api.c: 72: _fill_buffer_get_file_details(inBuffer, outBuffer);
 27812  003D2C  C0EE  F03F         	movff	api_prepare@inBuffer,__fill_buffer_get_file_details@inBuffer
 27813  003D30  C0EF  F040         	movff	api_prepare@inBuffer+1,__fill_buffer_get_file_details@inBuffer+1
 27814  003D34  C0F0  F041         	movff	api_prepare@outBuffer,__fill_buffer_get_file_details@outBuffer
 27815  003D38  C0F1  F042         	movff	api_prepare@outBuffer+1,__fill_buffer_get_file_details@outBuffer+1
 27816  003D3C  ECF6  F033         	call	__fill_buffer_get_file_details	;wreg free
 27817                           
 27818                           ;api.c: 73: break;
 27819  003D40  0012               	return	
 27820  003D42                     
 27821                           ;api.c: 77: _fill_buffer_find_file(inBuffer, outBuffer);
 27822  003D42  C0EE  F044         	movff	api_prepare@inBuffer,__fill_buffer_find_file@inBuffer
 27823  003D46  C0EF  F045         	movff	api_prepare@inBuffer+1,__fill_buffer_find_file@inBuffer+1
 27824  003D4A  C0F0  F046         	movff	api_prepare@outBuffer,__fill_buffer_find_file@outBuffer
 27825  003D4E  C0F1  F047         	movff	api_prepare@outBuffer+1,__fill_buffer_find_file@outBuffer+1
 27826  003D52  ECD2  F02C         	call	__fill_buffer_find_file	;wreg free
 27827                           
 27828                           ;api.c: 78: break;
 27829  003D56  0012               	return	
 27830  003D58                     
 27831                           ;api.c: 82: _fill_buffer_read_file(inBuffer, outBuffer);
 27832  003D58  C0EE  F055         	movff	api_prepare@inBuffer,__fill_buffer_read_file@inBuffer
 27833  003D5C  C0EF  F056         	movff	api_prepare@inBuffer+1,__fill_buffer_read_file@inBuffer+1
 27834  003D60  C0F0  F057         	movff	api_prepare@outBuffer,__fill_buffer_read_file@outBuffer
 27835  003D64  C0F1  F058         	movff	api_prepare@outBuffer+1,__fill_buffer_read_file@outBuffer+1
 27836  003D68  EC9E  F011         	call	__fill_buffer_read_file	;wreg free
 27837                           
 27838                           ;api.c: 84: }
 27839                           
 27840                           ;api.c: 83: break;
 27841  003D6C  0012               	return	
 27842  003D6E                     l2508:
 27843  003D6E  505D               	movf	api_prepare@command,w,c
 27844                           
 27845                           ; Switch size 1, requested type "space"
 27846                           ; Number of cases is 3, Range of values is 128 to 130
 27847                           ; switch strategies available:
 27848                           ; Name         Instructions Cycles
 27849                           ; simple_byte           10     6 (average)
 27850                           ;	Chosen strategy is simple_byte
 27851  003D70  0A80               	xorlw	128	; case 128
 27852  003D72  B4D8               	btfsc	status,2,c
 27853  003D74  D7DB               	goto	l2509
 27854  003D76  0A01               	xorlw	1	; case 129
 27855  003D78  B4D8               	btfsc	status,2,c
 27856  003D7A  D7E3               	goto	l2511
 27857  003D7C  0A03               	xorlw	3	; case 130
 27858  003D7E  A4D8               	btfss	status,2,c
 27859                           
 27860                           ;api.c: 85: }
 27861  003D80  0012               	return	
 27862  003D82  D7EA               	goto	l2512
 27863  003D84                     
 27864                           ;api.c: 93: _fill_buffer_get_status(outBuffer);
 27865  003D84  C0F0  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 27866  003D88  C0F1  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 27867  003D8C  ECF7  F024         	call	__fill_buffer_get_status	;wreg free
 27868                           
 27869                           ;api.c: 94: break;
 27870  003D90  0012               	return	
 27871  003D92                     
 27872                           ;api.c: 98: _fill_buffer_get_display(outBuffer, 0);
 27873  003D92  C0F0  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 27874  003D96  C0F1  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 27875  003D9A  0E00               	movlw	0
 27876  003D9C  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 27877  003D9E  EC7C  F02A         	call	__fill_buffer_get_display	;wreg free
 27878                           
 27879                           ;api.c: 99: break;
 27880  003DA2  0012               	return	
 27881  003DA4                     
 27882                           ;api.c: 103: _fill_buffer_get_display(outBuffer, 1);
 27883  003DA4  C0F0  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 27884  003DA8  C0F1  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 27885  003DAC  0E01               	movlw	1
 27886  003DAE  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 27887  003DB0  EC7C  F02A         	call	__fill_buffer_get_display	;wreg free
 27888                           
 27889                           ;api.c: 104: break;
 27890  003DB4  0012               	return	
 27891  003DB6                     
 27892                           ;api.c: 108: _fill_buffer_get_bootloader_details(outBuffer);
 27893  003DB6  C0F0  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_bootloader_details@outBuffer
 27894  003DBA  C0F1  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_bootloader_details@outBuffer+1
 27895  003DBE  ECA8  F013         	call	__fill_buffer_get_bootloader_details	;wreg free
 27896                           
 27897                           ;api.c: 109: break;
 27898  003DC2  0012               	return	
 27899  003DC4                     
 27900                           ;api.c: 113: _fill_buffer_get_configuration(outBuffer);
 27901  003DC4  C0F0  F001         	movff	api_prepare@outBuffer,__fill_buffer_get_configuration@outBuffer
 27902  003DC8  C0F1  F002         	movff	api_prepare@outBuffer+1,__fill_buffer_get_configuration@outBuffer+1
 27903  003DCC  ECC2  F02D         	call	__fill_buffer_get_configuration	;wreg free
 27904                           
 27905                           ;api.c: 114: break;
 27906  003DD0  0012               	return	
 27907  003DD2                     
 27908                           ;api.c: 118: memcpy(outBuffer, inBuffer, 64);
 27909  003DD2  C0F0  F001         	movff	api_prepare@outBuffer,memcpy@d1
 27910  003DD6  C0F1  F002         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 27911  003DDA  C0EE  F003         	movff	api_prepare@inBuffer,memcpy@s1
 27912  003DDE  C0EF  F004         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 27913  003DE2  5003               	movf	memcpy@s1,w,c
 27914  003DE4  1004               	iorwf	memcpy@s1+1,w,c
 27915  003DE6  A4D8               	btfss	status,2,c
 27916  003DE8  0E20               	movlw	32
 27917  003DEA  6E05               	movwf	memcpy@s1+2,c
 27918  003DEC  0E00               	movlw	0
 27919  003DEE  6E07               	movwf	memcpy@n+1,c
 27920  003DF0  0E40               	movlw	64
 27921  003DF2  6E06               	movwf	memcpy@n,c
 27922  003DF4  EC9F  F035         	call	_memcpy	;wreg free
 27923                           
 27924                           ;api.c: 120: }
 27925                           
 27926                           ;api.c: 119: break;
 27927  003DF8  0012               	return	
 27928  003DFA                     l2514:
 27929  003DFA  505D               	movf	api_prepare@command,w,c
 27930                           
 27931                           ; Switch size 1, requested type "space"
 27932                           ; Number of cases is 6, Range of values is 16 to 32
 27933                           ; switch strategies available:
 27934                           ; Name         Instructions Cycles
 27935                           ; simple_byte           19    10 (average)
 27936                           ;	Chosen strategy is simple_byte
 27937  003DFC  0A10               	xorlw	16	; case 16
 27938  003DFE  B4D8               	btfsc	status,2,c
 27939  003E00  D7C1               	goto	l2515
 27940  003E02  0A01               	xorlw	1	; case 17
 27941  003E04  B4D8               	btfsc	status,2,c
 27942  003E06  D7C5               	goto	l2517
 27943  003E08  0A03               	xorlw	3	; case 18
 27944  003E0A  B4D8               	btfsc	status,2,c
 27945  003E0C  D7CB               	goto	l2518
 27946  003E0E  0A01               	xorlw	1	; case 19
 27947  003E10  B4D8               	btfsc	status,2,c
 27948  003E12  D7D1               	goto	l2519
 27949  003E14  0A07               	xorlw	7	; case 20
 27950  003E16  B4D8               	btfsc	status,2,c
 27951  003E18  D7D5               	goto	l2520
 27952  003E1A  0A34               	xorlw	52	; case 32
 27953  003E1C  A4D8               	btfss	status,2,c
 27954  003E1E  0012               	return	
 27955  003E20  D7D8               	goto	l2521
 27956  003E22                     __end_of_api_prepare:
 27957                           	opt stack 0
 27958                           tosu	equ	0xFFF
 27959                           tosh	equ	0xFFE
 27960                           tosl	equ	0xFFD
 27961                           pclath	equ	0xFFA
 27962                           tblptru	equ	0xFF8
 27963                           tblptrh	equ	0xFF7
 27964                           tblptrl	equ	0xFF6
 27965                           tablat	equ	0xFF5
 27966                           prodh	equ	0xFF4
 27967                           prodl	equ	0xFF3
 27968                           intcon	equ	0xFF2
 27969                           intcon2	equ	0xFF1
 27970                           intcon3	equ	0xFF0
 27971                           indf0	equ	0xFEF
 27972                           postinc0	equ	0xFEE
 27973                           fsr0h	equ	0xFEA
 27974                           fsr0l	equ	0xFE9
 27975                           wreg	equ	0xFE8
 27976                           indf1	equ	0xFE7
 27977                           postdec1	equ	0xFE5
 27978                           plusw1	equ	0xFE3
 27979                           fsr1h	equ	0xFE2
 27980                           fsr1l	equ	0xFE1
 27981                           indf2	equ	0xFDF
 27982                           postinc2	equ	0xFDE
 27983                           postdec2	equ	0xFDD
 27984                           plusw2	equ	0xFDB
 27985                           fsr2h	equ	0xFDA
 27986                           fsr2l	equ	0xFD9
 27987                           status	equ	0xFD8
 27988                           
 27989 ;; *************** function __fill_buffer_read_file *****************
 27990 ;; Defined at:
 27991 ;;		line 367 in file "api.c"
 27992 ;; Parameters:    Size  Location     Type
 27993 ;;  inBuffer        2   84[COMRAM] PTR unsigned char 
 27994 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 27995 ;;  outBuffer       2   86[COMRAM] PTR unsigned char 
 27996 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 27997 ;; Auto vars:     Size  Location     Type
 27998 ;;  start           4   53[BANK0 ] unsigned long 
 27999 ;;  data_length     4   49[BANK0 ] unsigned long 
 28000 ;;  file_size       4   45[BANK0 ] unsigned long 
 28001 ;; Return value:  Size  Location     Type
 28002 ;;                  1    wreg      void 
 28003 ;; Registers used:
 28004 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28005 ;; Tracked objects:
 28006 ;;		On entry : 0/0
 28007 ;;		On exit  : 0/0
 28008 ;;		Unchanged: 0/0
 28009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28010 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28011 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28012 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28013 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28014 ;;Total ram usage:       20 bytes
 28015 ;; Hardware stack levels used:    1
 28016 ;; Hardware stack levels required when called:    8
 28017 ;; This function calls:
 28018 ;;		_fat_get_file_size
 28019 ;;		_fat_read_from_file
 28020 ;; This function is called by:
 28021 ;;		_api_prepare
 28022 ;; This function uses a non-reentrant model
 28023 ;;
 28024                           
 28025                           	psect	text128
 28026  00233C                     __ptext128:
 28027                           	opt stack 0
 28028  00233C                     __fill_buffer_read_file:
 28029                           	opt stack 21
 28030                           
 28031                           ;api.c: 369: uint32_t start;;api.c: 370: uint32_t file_size;;api.c: 371: uint32_t data_l
      +                          ength;;api.c: 374: outBuffer[0] = DATAREQUEST_FIND_FILE;
 28032                           
 28033                           ;incstack = 0
 28034  00233C  C057  FFD9         	movff	__fill_buffer_read_file@outBuffer,fsr2l
 28035  002340  C058  FFDA         	movff	__fill_buffer_read_file@outBuffer+1,fsr2h
 28036  002344  0E81               	movlw	129
 28037  002346  6EDF               	movwf	indf2,c
 28038                           
 28039                           ;api.c: 377: outBuffer[1] = (uint8_t) 0xC125;
 28040  002348  EE20 F001          	lfsr	2,1
 28041  00234C  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 28042  00234E  26D9               	addwf	fsr2l,f,c
 28043  002350  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 28044  002352  22DA               	addwfc	fsr2h,f,c
 28045  002354  0E25               	movlw	37
 28046  002356  6EDF               	movwf	indf2,c
 28047                           
 28048                           ;api.c: 378: outBuffer[2] = 0xC125 >> 8;
 28049  002358  EE20 F002          	lfsr	2,2
 28050  00235C  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 28051  00235E  26D9               	addwf	fsr2l,f,c
 28052  002360  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 28053  002362  22DA               	addwfc	fsr2h,f,c
 28054  002364  0EC1               	movlw	193
 28055  002366  6EDF               	movwf	indf2,c
 28056                           
 28057                           ;api.c: 381: outBuffer[3] = inBuffer[1];
 28058  002368  EE20 F001          	lfsr	2,1
 28059  00236C  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28060  00236E  26D9               	addwf	fsr2l,f,c
 28061  002370  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28062  002372  22DA               	addwfc	fsr2h,f,c
 28063  002374  EE10 F003          	lfsr	1,3
 28064  002378  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 28065  00237A  26E1               	addwf	fsr1l,f,c
 28066  00237C  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 28067  00237E  22E2               	addwfc	fsr1h,f,c
 28068  002380  CFDF FFE7          	movff	indf2,indf1
 28069                           
 28070                           ;api.c: 384: outBuffer[4] = inBuffer[1];
 28071  002384  EE20 F001          	lfsr	2,1
 28072  002388  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28073  00238A  26D9               	addwf	fsr2l,f,c
 28074  00238C  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28075  00238E  22DA               	addwfc	fsr2h,f,c
 28076  002390  EE10 F004          	lfsr	1,4
 28077  002394  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 28078  002396  26E1               	addwf	fsr1l,f,c
 28079  002398  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 28080  00239A  22E2               	addwfc	fsr1h,f,c
 28081  00239C  CFDF FFE7          	movff	indf2,indf1
 28082                           
 28083                           ;api.c: 385: outBuffer[5] = inBuffer[2];
 28084  0023A0  EE20 F002          	lfsr	2,2
 28085  0023A4  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28086  0023A6  26D9               	addwf	fsr2l,f,c
 28087  0023A8  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28088  0023AA  22DA               	addwfc	fsr2h,f,c
 28089  0023AC  EE10 F005          	lfsr	1,5
 28090  0023B0  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 28091  0023B2  26E1               	addwf	fsr1l,f,c
 28092  0023B4  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 28093  0023B6  22E2               	addwfc	fsr1h,f,c
 28094  0023B8  CFDF FFE7          	movff	indf2,indf1
 28095                           
 28096                           ;api.c: 386: outBuffer[6] = inBuffer[3];
 28097  0023BC  EE20 F003          	lfsr	2,3
 28098  0023C0  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28099  0023C2  26D9               	addwf	fsr2l,f,c
 28100  0023C4  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28101  0023C6  22DA               	addwfc	fsr2h,f,c
 28102  0023C8  EE10 F006          	lfsr	1,6
 28103  0023CC  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 28104  0023CE  26E1               	addwf	fsr1l,f,c
 28105  0023D0  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 28106  0023D2  22E2               	addwfc	fsr1h,f,c
 28107  0023D4  CFDF FFE7          	movff	indf2,indf1
 28108                           
 28109                           ;api.c: 387: outBuffer[7] = inBuffer[4];
 28110  0023D8  EE20 F004          	lfsr	2,4
 28111  0023DC  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28112  0023DE  26D9               	addwf	fsr2l,f,c
 28113  0023E0  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28114  0023E2  22DA               	addwfc	fsr2h,f,c
 28115  0023E4  EE10 F007          	lfsr	1,7
 28116  0023E8  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 28117  0023EA  26E1               	addwf	fsr1l,f,c
 28118  0023EC  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 28119  0023EE  22E2               	addwfc	fsr1h,f,c
 28120  0023F0  CFDF FFE7          	movff	indf2,indf1
 28121                           
 28122                           ;api.c: 390: start = inBuffer[4];
 28123  0023F4  EE20 F004          	lfsr	2,4
 28124  0023F8  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28125  0023FA  26D9               	addwf	fsr2l,f,c
 28126  0023FC  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28127  0023FE  22DA               	addwfc	fsr2h,f,c
 28128  002400  50DF               	movf	indf2,w,c
 28129  002402  6E59               	movwf	??__fill_buffer_read_file& (0+255),c
 28130  002404  5059               	movf	??__fill_buffer_read_file,w,c
 28131  002406  0100               	movlb	0	; () banked
 28132  002408  6FEA               	movwf	__fill_buffer_read_file@start& (0+255),b
 28133  00240A  6BEB               	clrf	(__fill_buffer_read_file@start+1)& (0+255),b
 28134  00240C  6BEC               	clrf	(__fill_buffer_read_file@start+2)& (0+255),b
 28135  00240E  6BED               	clrf	(__fill_buffer_read_file@start+3)& (0+255),b
 28136                           
 28137                           ; BSR set to: 0
 28138                           ;api.c: 391: start <<= 8;
 28139  002410  C0EC  F0ED         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 28140  002414  C0EB  F0EC         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 28141  002418  C0EA  F0EB         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 28142  00241C  6BEA               	clrf	__fill_buffer_read_file@start& (0+255),b
 28143                           
 28144                           ; BSR set to: 0
 28145                           ;api.c: 392: start |= inBuffer[3];
 28146  00241E  EE20 F003          	lfsr	2,3
 28147  002422  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28148  002424  26D9               	addwf	fsr2l,f,c
 28149  002426  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28150  002428  22DA               	addwfc	fsr2h,f,c
 28151  00242A  50DF               	movf	indf2,w,c
 28152  00242C  6E59               	movwf	??__fill_buffer_read_file& (0+255),c
 28153  00242E  5059               	movf	??__fill_buffer_read_file,w,c
 28154  002430  13EA               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 28155                           
 28156                           ; BSR set to: 0
 28157                           ;api.c: 393: start <<= 8;
 28158  002432  C0EC  F0ED         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 28159  002436  C0EB  F0EC         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 28160  00243A  C0EA  F0EB         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 28161  00243E  6BEA               	clrf	__fill_buffer_read_file@start& (0+255),b
 28162                           
 28163                           ; BSR set to: 0
 28164                           ;api.c: 394: start |= inBuffer[2];
 28165  002440  EE20 F002          	lfsr	2,2
 28166  002444  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28167  002446  26D9               	addwf	fsr2l,f,c
 28168  002448  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28169  00244A  22DA               	addwfc	fsr2h,f,c
 28170  00244C  50DF               	movf	indf2,w,c
 28171  00244E  6E59               	movwf	??__fill_buffer_read_file& (0+255),c
 28172  002450  5059               	movf	??__fill_buffer_read_file,w,c
 28173  002452  13EA               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 28174                           
 28175                           ; BSR set to: 0
 28176                           ;api.c: 395: start <<= 8;
 28177  002454  C0EC  F0ED         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 28178  002458  C0EB  F0EC         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 28179  00245C  C0EA  F0EB         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 28180  002460  6BEA               	clrf	__fill_buffer_read_file@start& (0+255),b
 28181                           
 28182                           ; BSR set to: 0
 28183                           ;api.c: 396: start |= inBuffer[1];
 28184  002462  EE20 F001          	lfsr	2,1
 28185  002466  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28186  002468  26D9               	addwf	fsr2l,f,c
 28187  00246A  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28188  00246C  22DA               	addwfc	fsr2h,f,c
 28189  00246E  50DF               	movf	indf2,w,c
 28190  002470  6E59               	movwf	??__fill_buffer_read_file& (0+255),c
 28191  002472  5059               	movf	??__fill_buffer_read_file,w,c
 28192  002474  13EA               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 28193                           
 28194                           ; BSR set to: 0
 28195                           ;api.c: 399: file_size = fat_get_file_size(inBuffer[1]);
 28196  002476  EE20 F001          	lfsr	2,1
 28197  00247A  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28198  00247C  26D9               	addwf	fsr2l,f,c
 28199  00247E  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28200  002480  22DA               	addwfc	fsr2h,f,c
 28201  002482  50DF               	movf	indf2,w,c
 28202  002484  EC4D  F033         	call	_fat_get_file_size
 28203  002488  C030  F0E2         	movff	?_fat_get_file_size,__fill_buffer_read_file@file_size
 28204  00248C  C031  F0E3         	movff	?_fat_get_file_size+1,__fill_buffer_read_file@file_size+1
 28205  002490  C032  F0E4         	movff	?_fat_get_file_size+2,__fill_buffer_read_file@file_size+2
 28206  002494  C033  F0E5         	movff	?_fat_get_file_size+3,__fill_buffer_read_file@file_size+3
 28207                           
 28208                           ;api.c: 400: data_length = file_size - start;
 28209  002498  C0EA  F059         	movff	__fill_buffer_read_file@start,??__fill_buffer_read_file
 28210  00249C  C0EB  F05A         	movff	__fill_buffer_read_file@start+1,??__fill_buffer_read_file+1
 28211  0024A0  C0EC  F05B         	movff	__fill_buffer_read_file@start+2,??__fill_buffer_read_file+2
 28212  0024A4  C0ED  F05C         	movff	__fill_buffer_read_file@start+3,??__fill_buffer_read_file+3
 28213  0024A8  1E59               	comf	??__fill_buffer_read_file,f,c
 28214  0024AA  1E5A               	comf	??__fill_buffer_read_file+1,f,c
 28215  0024AC  1E5B               	comf	??__fill_buffer_read_file+2,f,c
 28216  0024AE  1E5C               	comf	??__fill_buffer_read_file+3,f,c
 28217  0024B0  2A59               	incf	??__fill_buffer_read_file,f,c
 28218  0024B2  0E00               	movlw	0
 28219  0024B4  225A               	addwfc	??__fill_buffer_read_file+1,f,c
 28220  0024B6  225B               	addwfc	??__fill_buffer_read_file+2,f,c
 28221  0024B8  225C               	addwfc	??__fill_buffer_read_file+3,f,c
 28222  0024BA  0100               	movlb	0	; () banked
 28223  0024BC  51E2               	movf	__fill_buffer_read_file@file_size& (0+255),w,b
 28224  0024BE  2459               	addwf	??__fill_buffer_read_file,w,c
 28225  0024C0  6FE6               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 28226  0024C2  51E3               	movf	(__fill_buffer_read_file@file_size+1)& (0+255),w,b
 28227  0024C4  205A               	addwfc	??__fill_buffer_read_file+1,w,c
 28228  0024C6  6FE7               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 28229  0024C8  51E4               	movf	(__fill_buffer_read_file@file_size+2)& (0+255),w,b
 28230  0024CA  205B               	addwfc	??__fill_buffer_read_file+2,w,c
 28231  0024CC  6FE8               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 28232  0024CE  51E5               	movf	(__fill_buffer_read_file@file_size+3)& (0+255),w,b
 28233  0024D0  205C               	addwfc	??__fill_buffer_read_file+3,w,c
 28234  0024D2  6FE9               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 28235                           
 28236                           ; BSR set to: 0
 28237                           ;api.c: 401: if(data_length>54)
 28238  0024D4  51E9               	movf	(__fill_buffer_read_file@data_length+3)& (0+255),w,b
 28239  0024D6  11E8               	iorwf	(__fill_buffer_read_file@data_length+2)& (0+255),w,b
 28240  0024D8  11E7               	iorwf	(__fill_buffer_read_file@data_length+1)& (0+255),w,b
 28241  0024DA  E104               	bnz	u9920
 28242  0024DC  0E37               	movlw	55
 28243  0024DE  5DE6               	subwf	__fill_buffer_read_file@data_length& (0+255),w,b
 28244  0024E0  A0D8               	btfss	status,0,c
 28245  0024E2  D008               	goto	l2571
 28246  0024E4                     u9920:
 28247                           
 28248                           ; BSR set to: 0
 28249                           ;api.c: 402: {;api.c: 404: data_length = 54;
 28250  0024E4  0E36               	movlw	54
 28251  0024E6  6FE6               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 28252  0024E8  0E00               	movlw	0
 28253  0024EA  6FE7               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 28254  0024EC  0E00               	movlw	0
 28255  0024EE  6FE8               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 28256  0024F0  0E00               	movlw	0
 28257  0024F2  6FE9               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 28258  0024F4                     l2571:
 28259                           
 28260                           ; BSR set to: 0
 28261                           ;api.c: 405: };api.c: 408: outBuffer[8] = (uint8_t) data_length;
 28262                           
 28263                           ; BSR set to: 0
 28264  0024F4  EE20 F008          	lfsr	2,8
 28265  0024F8  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 28266  0024FA  26D9               	addwf	fsr2l,f,c
 28267  0024FC  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 28268  0024FE  22DA               	addwfc	fsr2h,f,c
 28269  002500  C0E6  FFDF         	movff	__fill_buffer_read_file@data_length,indf2
 28270                           
 28271                           ; BSR set to: 0
 28272                           ;api.c: 411: outBuffer[9] = fat_read_from_file(inBuffer[1], start, data_length, &outBuff
      +                          er[10]);
 28273  002504  EE20 F009          	lfsr	2,9
 28274  002508  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 28275  00250A  26D9               	addwf	fsr2l,f,c
 28276  00250C  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 28277  00250E  22DA               	addwfc	fsr2h,f,c
 28278  002510  C0EA  F03F         	movff	__fill_buffer_read_file@start,fat_read_from_file@start_byte
 28279  002514  C0EB  F040         	movff	__fill_buffer_read_file@start+1,fat_read_from_file@start_byte+1
 28280  002518  C0EC  F041         	movff	__fill_buffer_read_file@start+2,fat_read_from_file@start_byte+2
 28281  00251C  C0ED  F042         	movff	__fill_buffer_read_file@start+3,fat_read_from_file@start_byte+3
 28282  002520  C0E6  F043         	movff	__fill_buffer_read_file@data_length,fat_read_from_file@length
 28283  002524  C0E7  F044         	movff	__fill_buffer_read_file@data_length+1,fat_read_from_file@length+1
 28284  002528  C0E8  F045         	movff	__fill_buffer_read_file@data_length+2,fat_read_from_file@length+2
 28285  00252C  C0E9  F046         	movff	__fill_buffer_read_file@data_length+3,fat_read_from_file@length+3
 28286  002530  0E0A               	movlw	10
 28287  002532  2457               	addwf	__fill_buffer_read_file@outBuffer,w,c
 28288  002534  6E47               	movwf	fat_read_from_file@data,c
 28289  002536  0E00               	movlw	0
 28290  002538  2058               	addwfc	__fill_buffer_read_file@outBuffer+1,w,c
 28291  00253A  6E48               	movwf	fat_read_from_file@data+1,c
 28292  00253C  EE10 F001          	lfsr	1,1
 28293  002540  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28294  002542  26E1               	addwf	fsr1l,f,c
 28295  002544  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28296  002546  22E2               	addwfc	fsr1h,f,c
 28297  002548  50E7               	movf	indf1,w,c
 28298  00254A  EC7B  F00F         	call	_fat_read_from_file
 28299  00254E  6EDF               	movwf	indf2,c
 28300  002550  0012               	return		;funcret
 28301  002552                     __end_of__fill_buffer_read_file:
 28302                           	opt stack 0
 28303                           tosu	equ	0xFFF
 28304                           tosh	equ	0xFFE
 28305                           tosl	equ	0xFFD
 28306                           pclath	equ	0xFFA
 28307                           tblptru	equ	0xFF8
 28308                           tblptrh	equ	0xFF7
 28309                           tblptrl	equ	0xFF6
 28310                           tablat	equ	0xFF5
 28311                           prodh	equ	0xFF4
 28312                           prodl	equ	0xFF3
 28313                           intcon	equ	0xFF2
 28314                           intcon2	equ	0xFF1
 28315                           intcon3	equ	0xFF0
 28316                           indf0	equ	0xFEF
 28317                           postinc0	equ	0xFEE
 28318                           fsr0h	equ	0xFEA
 28319                           fsr0l	equ	0xFE9
 28320                           wreg	equ	0xFE8
 28321                           indf1	equ	0xFE7
 28322                           postdec1	equ	0xFE5
 28323                           plusw1	equ	0xFE3
 28324                           fsr1h	equ	0xFE2
 28325                           fsr1l	equ	0xFE1
 28326                           indf2	equ	0xFDF
 28327                           postinc2	equ	0xFDE
 28328                           postdec2	equ	0xFDD
 28329                           plusw2	equ	0xFDB
 28330                           fsr2h	equ	0xFDA
 28331                           fsr2l	equ	0xFD9
 28332                           status	equ	0xFD8
 28333                           
 28334 ;; *************** function _fat_read_from_file *****************
 28335 ;; Defined at:
 28336 ;;		line 559 in file "fat16.c"
 28337 ;; Parameters:    Size  Location     Type
 28338 ;;  file_number     1    wreg     unsigned char 
 28339 ;;  start_byte      4   62[COMRAM] unsigned long 
 28340 ;;  length          4   66[COMRAM] unsigned long 
 28341 ;;  data            2   70[COMRAM] PTR unsigned char 
 28342 ;;		 -> _spi_external_tx_buffer(64), file_buffer(50), RAM(3759), 
 28343 ;; Auto vars:     Size  Location     Type
 28344 ;;  file_number     1    2[BANK0 ] unsigned char 
 28345 ;;  root           32    3[BANK0 ] struct .
 28346 ;;  position        4   41[BANK0 ] unsigned long 
 28347 ;;  read_length     2   39[BANK0 ] unsigned int 
 28348 ;;  offset          2   37[BANK0 ] unsigned int 
 28349 ;;  cluster         2   35[BANK0 ] unsigned int 
 28350 ;;  sector          2    0[BANK0 ] unsigned int 
 28351 ;; Return value:  Size  Location     Type
 28352 ;;                  1    wreg      unsigned char 
 28353 ;; Registers used:
 28354 ;;		wreg, status,2, status,0, cstack
 28355 ;; Tracked objects:
 28356 ;;		On entry : 0/0
 28357 ;;		On exit  : 0/0
 28358 ;;		Unchanged: 0/0
 28359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28360 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28361 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28362 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28363 ;;      Totals:        22      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28364 ;;Total ram usage:       67 bytes
 28365 ;; Hardware stack levels used:    1
 28366 ;; Hardware stack levels required when called:    7
 28367 ;; This function calls:
 28368 ;;		__read_fat
 28369 ;;		__sector_from_cluster
 28370 ;;		_fat_get_file_information
 28371 ;;		_flash_partial_read
 28372 ;; This function is called by:
 28373 ;;		__bootloader_verify_file
 28374 ;;		__bootloader_program
 28375 ;;		__fill_buffer_read_file
 28376 ;; This function uses a non-reentrant model
 28377 ;;
 28378                           
 28379                           	psect	text129
 28380  001EF6                     __ptext129:
 28381                           	opt stack 0
 28382  001EF6                     _fat_read_from_file:
 28383                           	opt stack 21
 28384                           
 28385                           ;incstack = 0
 28386                           ;fat_read_from_file@file_number stored from wreg
 28387  001EF6  0100               	movlb	0	; () banked
 28388  001EF8  6FB7               	movwf	fat_read_from_file@file_number& (0+255),b
 28389                           
 28390                           ;fat16.c: 561: rootEntry_t root;;fat16.c: 562: uint32_t position;;fat16.c: 563: uint16_t
      +                           cluster;;fat16.c: 564: uint16_t offset;;fat16.c: 565: uint16_t sector;;fat16.c: 566: ui
      +                          nt16_t read_length;;fat16.c: 569: fat_get_file_information(file_number, &root);
 28391  001EFA  0EB8               	movlw	low fat_read_from_file@root
 28392  001EFC  6E37               	movwf	fat_get_file_information@data,c
 28393  001EFE  0E00               	movlw	high fat_read_from_file@root
 28394  001F00  6E38               	movwf	fat_get_file_information@data+1,c
 28395  001F02  0100               	movlb	0	; () banked
 28396  001F04  51B7               	movf	fat_read_from_file@file_number& (0+255),w,b
 28397  001F06  ECD9  F032         	call	_fat_get_file_information
 28398                           
 28399                           ;fat16.c: 570: cluster = root.firstCluster;
 28400  001F0A  C0D2  F0D8         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 28401  001F0E  C0D3  F0D9         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 28402                           
 28403                           ;fat16.c: 573: if(start_byte+length > root.fileSize)
 28404  001F12  5043               	movf	fat_read_from_file@length,w,c
 28405  001F14  243F               	addwf	fat_read_from_file@start_byte,w,c
 28406  001F16  6E49               	movwf	??_fat_read_from_file& (0+255),c
 28407  001F18  5044               	movf	fat_read_from_file@length+1,w,c
 28408  001F1A  2040               	addwfc	fat_read_from_file@start_byte+1,w,c
 28409  001F1C  6E4A               	movwf	(??_fat_read_from_file+1)& (0+255),c
 28410  001F1E  5045               	movf	fat_read_from_file@length+2,w,c
 28411  001F20  2041               	addwfc	fat_read_from_file@start_byte+2,w,c
 28412  001F22  6E4B               	movwf	(??_fat_read_from_file+2)& (0+255),c
 28413  001F24  5046               	movf	fat_read_from_file@length+3,w,c
 28414  001F26  2042               	addwfc	fat_read_from_file@start_byte+3,w,c
 28415  001F28  6E4C               	movwf	(??_fat_read_from_file+3)& (0+255),c
 28416  001F2A  5049               	movf	??_fat_read_from_file,w,c
 28417  001F2C  0100               	movlb	0	; () banked
 28418  001F2E  5DD4               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 28419  001F30  504A               	movf	??_fat_read_from_file+1,w,c
 28420  001F32  59D5               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 28421  001F34  504B               	movf	??_fat_read_from_file+2,w,c
 28422  001F36  59D6               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 28423  001F38  504C               	movf	??_fat_read_from_file+3,w,c
 28424  001F3A  59D7               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 28425  001F3C  B0D8               	btfsc	status,0,c
 28426  001F3E  D002               	goto	l1961
 28427                           
 28428                           ; BSR set to: 0
 28429                           ;fat16.c: 574: {;fat16.c: 576: return 0xFF;
 28430  001F40  0EFF               	movlw	255
 28431                           
 28432                           ; BSR set to: 0
 28433  001F42  0012               	return	
 28434  001F44                     l1961:
 28435                           
 28436                           ; BSR set to: 0
 28437                           ;fat16.c: 577: };fat16.c: 580: position = 0;
 28438                           
 28439                           ; BSR set to: 0
 28440  001F44  0E00               	movlw	0
 28441  001F46  6FDE               	movwf	fat_read_from_file@position& (0+255),b
 28442  001F48  0E00               	movlw	0
 28443  001F4A  6FDF               	movwf	(fat_read_from_file@position+1)& (0+255),b
 28444  001F4C  0E00               	movlw	0
 28445  001F4E  6FE0               	movwf	(fat_read_from_file@position+2)& (0+255),b
 28446  001F50  0E00               	movlw	0
 28447  001F52  6FE1               	movwf	(fat_read_from_file@position+3)& (0+255),b
 28448                           
 28449                           ;fat16.c: 581: while((start_byte-position) >= 512)
 28450  001F54  D013               	goto	l1963
 28451  001F56                     l11604:
 28452                           
 28453                           ; BSR set to: 0
 28454                           ;fat16.c: 582: {;fat16.c: 583: cluster = _read_fat(cluster);
 28455  001F56  C0D8  F030         	movff	fat_read_from_file@cluster,__read_fat@cluster
 28456  001F5A  C0D9  F031         	movff	fat_read_from_file@cluster+1,__read_fat@cluster+1
 28457  001F5E  ECE2  F039         	call	__read_fat	;wreg free
 28458  001F62  C030  F0D8         	movff	?__read_fat,fat_read_from_file@cluster
 28459  001F66  C031  F0D9         	movff	?__read_fat+1,fat_read_from_file@cluster+1
 28460                           
 28461                           ;fat16.c: 584: position += 512;
 28462  001F6A  0E00               	movlw	0
 28463  001F6C  0100               	movlb	0	; () banked
 28464  001F6E  27DE               	addwf	fat_read_from_file@position& (0+255),f,b
 28465  001F70  0E02               	movlw	2
 28466  001F72  23DF               	addwfc	(fat_read_from_file@position+1)& (0+255),f,b
 28467  001F74  0E00               	movlw	0
 28468  001F76  23E0               	addwfc	(fat_read_from_file@position+2)& (0+255),f,b
 28469  001F78  0E00               	movlw	0
 28470  001F7A  23E1               	addwfc	(fat_read_from_file@position+3)& (0+255),f,b
 28471  001F7C                     l1963:
 28472                           
 28473                           ; BSR set to: 0
 28474                           
 28475                           ; BSR set to: 0
 28476  001F7C  C0DE  F049         	movff	fat_read_from_file@position,??_fat_read_from_file
 28477  001F80  C0DF  F04A         	movff	fat_read_from_file@position+1,??_fat_read_from_file+1
 28478  001F84  C0E0  F04B         	movff	fat_read_from_file@position+2,??_fat_read_from_file+2
 28479  001F88  C0E1  F04C         	movff	fat_read_from_file@position+3,??_fat_read_from_file+3
 28480  001F8C  1E49               	comf	??_fat_read_from_file,f,c
 28481  001F8E  1E4A               	comf	??_fat_read_from_file+1,f,c
 28482  001F90  1E4B               	comf	??_fat_read_from_file+2,f,c
 28483  001F92  1E4C               	comf	??_fat_read_from_file+3,f,c
 28484  001F94  2A49               	incf	??_fat_read_from_file,f,c
 28485  001F96  0E00               	movlw	0
 28486  001F98  224A               	addwfc	??_fat_read_from_file+1,f,c
 28487  001F9A  224B               	addwfc	??_fat_read_from_file+2,f,c
 28488  001F9C  224C               	addwfc	??_fat_read_from_file+3,f,c
 28489  001F9E  503F               	movf	fat_read_from_file@start_byte,w,c
 28490  001FA0  2449               	addwf	??_fat_read_from_file,w,c
 28491  001FA2  6E4D               	movwf	(??_fat_read_from_file+4)& (0+255),c
 28492  001FA4  5040               	movf	fat_read_from_file@start_byte+1,w,c
 28493  001FA6  204A               	addwfc	??_fat_read_from_file+1,w,c
 28494  001FA8  6E4E               	movwf	(??_fat_read_from_file+5)& (0+255),c
 28495  001FAA  5041               	movf	fat_read_from_file@start_byte+2,w,c
 28496  001FAC  204B               	addwfc	??_fat_read_from_file+2,w,c
 28497  001FAE  6E4F               	movwf	(??_fat_read_from_file+6)& (0+255),c
 28498  001FB0  5042               	movf	fat_read_from_file@start_byte+3,w,c
 28499  001FB2  204C               	addwfc	??_fat_read_from_file+3,w,c
 28500  001FB4  6E50               	movwf	(??_fat_read_from_file+7)& (0+255),c
 28501  001FB6  5050               	movf	??_fat_read_from_file+7,w,c
 28502  001FB8  104F               	iorwf	??_fat_read_from_file+6,w,c
 28503  001FBA  E1CD               	bnz	l11604
 28504  001FBC  0E02               	movlw	2
 28505  001FBE  5C4E               	subwf	??_fat_read_from_file+5,w,c
 28506  001FC0  B0D8               	btfsc	status,0,c
 28507  001FC2  D7C9               	goto	l1964
 28508                           
 28509                           ; BSR set to: 0
 28510                           ;fat16.c: 585: };fat16.c: 588: offset = start_byte - position;
 28511                           
 28512                           ; BSR set to: 0
 28513  001FC4  C0DE  F049         	movff	fat_read_from_file@position,??_fat_read_from_file
 28514  001FC8  C0DF  F04A         	movff	fat_read_from_file@position+1,??_fat_read_from_file+1
 28515  001FCC  1E49               	comf	??_fat_read_from_file,f,c
 28516  001FCE  1E4A               	comf	??_fat_read_from_file+1,f,c
 28517  001FD0  4A49               	infsnz	??_fat_read_from_file,f,c
 28518  001FD2  2A4A               	incf	??_fat_read_from_file+1,f,c
 28519  001FD4  503F               	movf	fat_read_from_file@start_byte,w,c
 28520  001FD6  2449               	addwf	??_fat_read_from_file,w,c
 28521  001FD8  6FDA               	movwf	fat_read_from_file@offset& (0+255),b
 28522  001FDA  5040               	movf	fat_read_from_file@start_byte+1,w,c
 28523  001FDC  204A               	addwfc	??_fat_read_from_file+1,w,c
 28524  001FDE  6FDB               	movwf	(fat_read_from_file@offset+1)& (0+255),b
 28525                           
 28526                           ; BSR set to: 0
 28527                           ;fat16.c: 591: position = 0;
 28528  001FE0  0E00               	movlw	0
 28529  001FE2  6FDE               	movwf	fat_read_from_file@position& (0+255),b
 28530  001FE4  0E00               	movlw	0
 28531  001FE6  6FDF               	movwf	(fat_read_from_file@position+1)& (0+255),b
 28532  001FE8  0E00               	movlw	0
 28533  001FEA  6FE0               	movwf	(fat_read_from_file@position+2)& (0+255),b
 28534  001FEC  0E00               	movlw	0
 28535  001FEE  6FE1               	movwf	(fat_read_from_file@position+3)& (0+255),b
 28536                           
 28537                           ;fat16.c: 592: while(position < length)
 28538  001FF0  D089               	goto	l1966
 28539  001FF2                     
 28540                           ; BSR set to: 0
 28541                           ;fat16.c: 593: {;fat16.c: 595: if(offset==512)
 28542                           
 28543                           ; BSR set to: 0
 28544  001FF2  0E02               	movlw	2
 28545  001FF4  19DB               	xorwf	(fat_read_from_file@offset+1)& (0+255),w,b
 28546  001FF6  11DA               	iorwf	fat_read_from_file@offset& (0+255),w,b
 28547  001FF8  A4D8               	btfss	status,2,c
 28548  001FFA  D00F               	goto	l1968
 28549                           
 28550                           ; BSR set to: 0
 28551                           ;fat16.c: 596: {;fat16.c: 598: cluster = _read_fat(cluster);
 28552  001FFC  C0D8  F030         	movff	fat_read_from_file@cluster,__read_fat@cluster
 28553  002000  C0D9  F031         	movff	fat_read_from_file@cluster+1,__read_fat@cluster+1
 28554  002004  ECE2  F039         	call	__read_fat	;wreg free
 28555  002008  C030  F0D8         	movff	?__read_fat,fat_read_from_file@cluster
 28556  00200C  C031  F0D9         	movff	?__read_fat+1,fat_read_from_file@cluster+1
 28557                           
 28558                           ;fat16.c: 599: offset = 0;
 28559  002010  0E00               	movlw	0
 28560  002012  0100               	movlb	0	; () banked
 28561  002014  6FDB               	movwf	(fat_read_from_file@offset+1)& (0+255),b
 28562  002016  0E00               	movlw	0
 28563  002018  6FDA               	movwf	fat_read_from_file@offset& (0+255),b
 28564  00201A                     l1968:
 28565                           
 28566                           ; BSR set to: 0
 28567                           ;fat16.c: 600: };fat16.c: 603: sector = _sector_from_cluster(cluster);
 28568                           
 28569                           ; BSR set to: 0
 28570  00201A  C0D8  F001         	movff	fat_read_from_file@cluster,__sector_from_cluster@fat_cluster
 28571  00201E  C0D9  F002         	movff	fat_read_from_file@cluster+1,__sector_from_cluster@fat_cluster+1
 28572  002022  ECB4  F03E         	call	__sector_from_cluster	;wreg free
 28573  002026  C001  F0B5         	movff	?__sector_from_cluster,fat_read_from_file@sector
 28574  00202A  C002  F0B6         	movff	?__sector_from_cluster+1,fat_read_from_file@sector+1
 28575                           
 28576                           ;fat16.c: 606: read_length = 512 - offset;
 28577  00202E  C0DA  F049         	movff	fat_read_from_file@offset,??_fat_read_from_file
 28578  002032  C0DB  F04A         	movff	fat_read_from_file@offset+1,??_fat_read_from_file+1
 28579  002036  1E49               	comf	??_fat_read_from_file,f,c
 28580  002038  1E4A               	comf	??_fat_read_from_file+1,f,c
 28581  00203A  4A49               	infsnz	??_fat_read_from_file,f,c
 28582  00203C  2A4A               	incf	??_fat_read_from_file+1,f,c
 28583  00203E  0E00               	movlw	0
 28584  002040  2449               	addwf	??_fat_read_from_file,w,c
 28585  002042  0100               	movlb	0	; () banked
 28586  002044  6FDC               	movwf	fat_read_from_file@read_length& (0+255),b
 28587  002046  0E02               	movlw	2
 28588  002048  204A               	addwfc	??_fat_read_from_file+1,w,c
 28589  00204A  6FDD               	movwf	(fat_read_from_file@read_length+1)& (0+255),b
 28590                           
 28591                           ; BSR set to: 0
 28592                           ;fat16.c: 607: if(read_length > (length-position))
 28593  00204C  51DC               	movf	fat_read_from_file@read_length& (0+255),w,b
 28594  00204E  6E49               	movwf	??_fat_read_from_file& (0+255),c
 28595  002050  51DD               	movf	(fat_read_from_file@read_length+1)& (0+255),w,b
 28596  002052  6E4A               	movwf	(??_fat_read_from_file+1)& (0+255),c
 28597  002054  6A4B               	clrf	(??_fat_read_from_file+2)& (0+255),c
 28598  002056  6A4C               	clrf	(??_fat_read_from_file+3)& (0+255),c
 28599  002058  C0DE  F04D         	movff	fat_read_from_file@position,??_fat_read_from_file+4
 28600  00205C  C0DF  F04E         	movff	fat_read_from_file@position+1,??_fat_read_from_file+5
 28601  002060  C0E0  F04F         	movff	fat_read_from_file@position+2,??_fat_read_from_file+6
 28602  002064  C0E1  F050         	movff	fat_read_from_file@position+3,??_fat_read_from_file+7
 28603  002068  1E4D               	comf	??_fat_read_from_file+4,f,c
 28604  00206A  1E4E               	comf	??_fat_read_from_file+5,f,c
 28605  00206C  1E4F               	comf	??_fat_read_from_file+6,f,c
 28606  00206E  1E50               	comf	??_fat_read_from_file+7,f,c
 28607  002070  2A4D               	incf	??_fat_read_from_file+4,f,c
 28608  002072  0E00               	movlw	0
 28609  002074  224E               	addwfc	??_fat_read_from_file+5,f,c
 28610  002076  224F               	addwfc	??_fat_read_from_file+6,f,c
 28611  002078  2250               	addwfc	??_fat_read_from_file+7,f,c
 28612  00207A  5043               	movf	fat_read_from_file@length,w,c
 28613  00207C  244D               	addwf	??_fat_read_from_file+4,w,c
 28614  00207E  6E51               	movwf	(??_fat_read_from_file+8)& (0+255),c
 28615  002080  5044               	movf	fat_read_from_file@length+1,w,c
 28616  002082  204E               	addwfc	??_fat_read_from_file+5,w,c
 28617  002084  6E52               	movwf	(??_fat_read_from_file+9)& (0+255),c
 28618  002086  5045               	movf	fat_read_from_file@length+2,w,c
 28619  002088  204F               	addwfc	??_fat_read_from_file+6,w,c
 28620  00208A  6E53               	movwf	(??_fat_read_from_file+10)& (0+255),c
 28621  00208C  5046               	movf	fat_read_from_file@length+3,w,c
 28622  00208E  2050               	addwfc	??_fat_read_from_file+7,w,c
 28623  002090  6E54               	movwf	(??_fat_read_from_file+11)& (0+255),c
 28624  002092  5049               	movf	??_fat_read_from_file,w,c
 28625  002094  5C51               	subwf	??_fat_read_from_file+8,w,c
 28626  002096  504A               	movf	??_fat_read_from_file+1,w,c
 28627  002098  5852               	subwfb	??_fat_read_from_file+9,w,c
 28628  00209A  504B               	movf	??_fat_read_from_file+2,w,c
 28629  00209C  5853               	subwfb	??_fat_read_from_file+10,w,c
 28630  00209E  504C               	movf	??_fat_read_from_file+3,w,c
 28631  0020A0  5854               	subwfb	??_fat_read_from_file+11,w,c
 28632  0020A2  B0D8               	btfsc	status,0,c
 28633  0020A4  D00E               	goto	l1969
 28634                           
 28635                           ; BSR set to: 0
 28636                           ;fat16.c: 608: {;fat16.c: 610: read_length = length - position;
 28637  0020A6  C0DE  F049         	movff	fat_read_from_file@position,??_fat_read_from_file
 28638  0020AA  C0DF  F04A         	movff	fat_read_from_file@position+1,??_fat_read_from_file+1
 28639  0020AE  1E49               	comf	??_fat_read_from_file,f,c
 28640  0020B0  1E4A               	comf	??_fat_read_from_file+1,f,c
 28641  0020B2  4A49               	infsnz	??_fat_read_from_file,f,c
 28642  0020B4  2A4A               	incf	??_fat_read_from_file+1,f,c
 28643  0020B6  5043               	movf	fat_read_from_file@length,w,c
 28644  0020B8  2449               	addwf	??_fat_read_from_file,w,c
 28645  0020BA  6FDC               	movwf	fat_read_from_file@read_length& (0+255),b
 28646  0020BC  5044               	movf	fat_read_from_file@length+1,w,c
 28647  0020BE  204A               	addwfc	??_fat_read_from_file+1,w,c
 28648  0020C0  6FDD               	movwf	(fat_read_from_file@read_length+1)& (0+255),b
 28649  0020C2                     l1969:
 28650                           
 28651                           ; BSR set to: 0
 28652                           ;fat16.c: 611: };fat16.c: 614: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 28653                           
 28654                           ; BSR set to: 0
 28655  0020C2  C0B5  F028         	movff	fat_read_from_file@sector,flash_partial_read@page
 28656  0020C6  C0B6  F029         	movff	fat_read_from_file@sector+1,flash_partial_read@page+1
 28657  0020CA  C0DA  F02A         	movff	fat_read_from_file@offset,flash_partial_read@start
 28658  0020CE  C0DB  F02B         	movff	fat_read_from_file@offset+1,flash_partial_read@start+1
 28659  0020D2  C0DC  F02C         	movff	fat_read_from_file@read_length,flash_partial_read@length
 28660  0020D6  C0DD  F02D         	movff	fat_read_from_file@read_length+1,flash_partial_read@length+1
 28661  0020DA  51DE               	movf	fat_read_from_file@position& (0+255),w,b
 28662  0020DC  2447               	addwf	fat_read_from_file@data,w,c
 28663  0020DE  6E2E               	movwf	flash_partial_read@data,c
 28664  0020E0  51DF               	movf	(fat_read_from_file@position+1)& (0+255),w,b
 28665  0020E2  2048               	addwfc	fat_read_from_file@data+1,w,c
 28666  0020E4  6E2F               	movwf	flash_partial_read@data+1,c
 28667  0020E6  EC69  F03C         	call	_flash_partial_read	;wreg free
 28668                           
 28669                           ;fat16.c: 617: position += read_length;
 28670  0020EA  0100               	movlb	0	; () banked
 28671  0020EC  51DC               	movf	fat_read_from_file@read_length& (0+255),w,b
 28672  0020EE  27DE               	addwf	fat_read_from_file@position& (0+255),f,b
 28673  0020F0  51DD               	movf	(fat_read_from_file@read_length+1)& (0+255),w,b
 28674  0020F2  23DF               	addwfc	(fat_read_from_file@position+1)& (0+255),f,b
 28675  0020F4  0E00               	movlw	0
 28676  0020F6  23E0               	addwfc	(fat_read_from_file@position+2)& (0+255),f,b
 28677  0020F8  0E00               	movlw	0
 28678  0020FA  23E1               	addwfc	(fat_read_from_file@position+3)& (0+255),f,b
 28679                           
 28680                           ; BSR set to: 0
 28681                           ;fat16.c: 618: offset += read_length;
 28682  0020FC  51DC               	movf	fat_read_from_file@read_length& (0+255),w,b
 28683  0020FE  27DA               	addwf	fat_read_from_file@offset& (0+255),f,b
 28684  002100  51DD               	movf	(fat_read_from_file@read_length+1)& (0+255),w,b
 28685  002102  23DB               	addwfc	(fat_read_from_file@offset+1)& (0+255),f,b
 28686  002104                     l1966:
 28687                           
 28688                           ; BSR set to: 0
 28689                           
 28690                           ; BSR set to: 0
 28691  002104  5043               	movf	fat_read_from_file@length,w,c
 28692  002106  5DDE               	subwf	fat_read_from_file@position& (0+255),w,b
 28693  002108  5044               	movf	fat_read_from_file@length+1,w,c
 28694  00210A  59DF               	subwfb	(fat_read_from_file@position+1)& (0+255),w,b
 28695  00210C  5045               	movf	fat_read_from_file@length+2,w,c
 28696  00210E  59E0               	subwfb	(fat_read_from_file@position+2)& (0+255),w,b
 28697  002110  5046               	movf	fat_read_from_file@length+3,w,c
 28698  002112  59E1               	subwfb	(fat_read_from_file@position+3)& (0+255),w,b
 28699  002114  A0D8               	btfss	status,0,c
 28700  002116  D76D               	goto	l1967
 28701                           
 28702                           ; BSR set to: 0
 28703                           ;fat16.c: 619: };fat16.c: 622: return 0x00;
 28704                           
 28705                           ; BSR set to: 0
 28706  002118  0E00               	movlw	0
 28707  00211A  0012               	return	
 28708  00211C                     __end_of_fat_read_from_file:
 28709                           	opt stack 0
 28710                           tosu	equ	0xFFF
 28711                           tosh	equ	0xFFE
 28712                           tosl	equ	0xFFD
 28713                           pclath	equ	0xFFA
 28714                           tblptru	equ	0xFF8
 28715                           tblptrh	equ	0xFF7
 28716                           tblptrl	equ	0xFF6
 28717                           tablat	equ	0xFF5
 28718                           prodh	equ	0xFF4
 28719                           prodl	equ	0xFF3
 28720                           intcon	equ	0xFF2
 28721                           intcon2	equ	0xFF1
 28722                           intcon3	equ	0xFF0
 28723                           indf0	equ	0xFEF
 28724                           postinc0	equ	0xFEE
 28725                           fsr0h	equ	0xFEA
 28726                           fsr0l	equ	0xFE9
 28727                           wreg	equ	0xFE8
 28728                           indf1	equ	0xFE7
 28729                           postdec1	equ	0xFE5
 28730                           plusw1	equ	0xFE3
 28731                           fsr1h	equ	0xFE2
 28732                           fsr1l	equ	0xFE1
 28733                           indf2	equ	0xFDF
 28734                           postinc2	equ	0xFDE
 28735                           postdec2	equ	0xFDD
 28736                           plusw2	equ	0xFDB
 28737                           fsr2h	equ	0xFDA
 28738                           fsr2l	equ	0xFD9
 28739                           status	equ	0xFD8
 28740                           
 28741 ;; *************** function _fat_get_file_size *****************
 28742 ;; Defined at:
 28743 ;;		line 294 in file "fat16.c"
 28744 ;; Parameters:    Size  Location     Type
 28745 ;;  file_number     1    wreg     unsigned char 
 28746 ;; Auto vars:     Size  Location     Type
 28747 ;;  file_number     1   60[COMRAM] unsigned char 
 28748 ;;  file_size       4   54[COMRAM] unsigned long 
 28749 ;;  offset          2   58[COMRAM] unsigned int 
 28750 ;;  sector          2   52[COMRAM] unsigned int 
 28751 ;; Return value:  Size  Location     Type
 28752 ;;                  4   47[COMRAM] unsigned long 
 28753 ;; Registers used:
 28754 ;;		wreg, status,2, status,0, cstack
 28755 ;; Tracked objects:
 28756 ;;		On entry : 0/0
 28757 ;;		On exit  : 0/0
 28758 ;;		Unchanged: 0/0
 28759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28760 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28761 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28762 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28763 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28764 ;;Total ram usage:       14 bytes
 28765 ;; Hardware stack levels used:    1
 28766 ;; Hardware stack levels required when called:    5
 28767 ;; This function calls:
 28768 ;;		_flash_partial_read
 28769 ;; This function is called by:
 28770 ;;		__bootloader_find_file
 28771 ;;		__bootloader_verify_file
 28772 ;;		__fill_buffer_read_file
 28773 ;; This function uses a non-reentrant model
 28774 ;;
 28775                           
 28776                           	psect	text130
 28777  00669A                     __ptext130:
 28778                           	opt stack 0
 28779  00669A                     _fat_get_file_size:
 28780                           	opt stack 23
 28781                           
 28782                           ; BSR set to: 0
 28783                           ;incstack = 0
 28784                           ;fat_get_file_size@file_number stored from wreg
 28785  00669A  6E3D               	movwf	fat_get_file_size@file_number,c
 28786                           
 28787                           ;fat16.c: 296: uint16_t sector;;fat16.c: 297: uint16_t offset;;fat16.c: 298: uint32_t fi
      +                          le_size;;fat16.c: 299: sector = file_number >> 4;
 28788  00669C  C03D  F034         	movff	fat_get_file_size@file_number,??_fat_get_file_size
 28789  0066A0  3A34               	swapf	??_fat_get_file_size,f,c
 28790  0066A2  0E0F               	movlw	15
 28791  0066A4  1634               	andwf	??_fat_get_file_size,f,c
 28792  0066A6  5034               	movf	??_fat_get_file_size,w,c
 28793  0066A8  6E35               	movwf	fat_get_file_size@sector,c
 28794  0066AA  6A36               	clrf	fat_get_file_size@sector+1,c
 28795                           
 28796                           ;fat16.c: 300: sector += 18;
 28797  0066AC  0E12               	movlw	18
 28798  0066AE  2635               	addwf	fat_get_file_size@sector,f,c
 28799  0066B0  0E00               	movlw	0
 28800  0066B2  2236               	addwfc	fat_get_file_size@sector+1,f,c
 28801                           
 28802                           ;fat16.c: 301: offset = file_number;
 28803  0066B4  C03D  F03B         	movff	fat_get_file_size@file_number,fat_get_file_size@offset
 28804  0066B8  6A3C               	clrf	fat_get_file_size@offset+1,c
 28805                           
 28806                           ;fat16.c: 302: offset <<= 5;
 28807  0066BA  0E05               	movlw	5
 28808  0066BC                     u8815:
 28809  0066BC  90D8               	bcf	status,0,c
 28810  0066BE  363B               	rlcf	fat_get_file_size@offset,f,c
 28811  0066C0  363C               	rlcf	fat_get_file_size@offset+1,f,c
 28812  0066C2  2EE8               	decfsz	wreg,f,c
 28813  0066C4  D7FB               	goto	u8815
 28814                           
 28815                           ;fat16.c: 303: offset &= 0b111111111;
 28816  0066C6  0EFF               	movlw	255
 28817  0066C8  163B               	andwf	fat_get_file_size@offset,f,c
 28818  0066CA  0E01               	movlw	1
 28819  0066CC  163C               	andwf	fat_get_file_size@offset+1,f,c
 28820                           
 28821                           ;fat16.c: 304: offset += 28;
 28822  0066CE  0E1C               	movlw	28
 28823  0066D0  263B               	addwf	fat_get_file_size@offset,f,c
 28824  0066D2  0E00               	movlw	0
 28825  0066D4  223C               	addwfc	fat_get_file_size@offset+1,f,c
 28826                           
 28827                           ;fat16.c: 305: flash_partial_read(sector, offset, 4, &file_size);
 28828  0066D6  C035  F028         	movff	fat_get_file_size@sector,flash_partial_read@page
 28829  0066DA  C036  F029         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 28830  0066DE  C03B  F02A         	movff	fat_get_file_size@offset,flash_partial_read@start
 28831  0066E2  C03C  F02B         	movff	fat_get_file_size@offset+1,flash_partial_read@start+1
 28832  0066E6  0E00               	movlw	0
 28833  0066E8  6E2D               	movwf	flash_partial_read@length+1,c
 28834  0066EA  0E04               	movlw	4
 28835  0066EC  6E2C               	movwf	flash_partial_read@length,c
 28836  0066EE  0E37               	movlw	low fat_get_file_size@file_size
 28837  0066F0  6E2E               	movwf	flash_partial_read@data,c
 28838  0066F2  0E00               	movlw	high fat_get_file_size@file_size
 28839  0066F4  6E2F               	movwf	flash_partial_read@data+1,c
 28840  0066F6  EC69  F03C         	call	_flash_partial_read	;wreg free
 28841                           
 28842                           ;fat16.c: 306: return file_size;
 28843  0066FA  C037  F030         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 28844  0066FE  C038  F031         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 28845  006702  C039  F032         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 28846  006706  C03A  F033         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 28847  00670A  0012               	return	
 28848  00670C                     __end_of_fat_get_file_size:
 28849                           	opt stack 0
 28850                           tosu	equ	0xFFF
 28851                           tosh	equ	0xFFE
 28852                           tosl	equ	0xFFD
 28853                           pclath	equ	0xFFA
 28854                           tblptru	equ	0xFF8
 28855                           tblptrh	equ	0xFF7
 28856                           tblptrl	equ	0xFF6
 28857                           tablat	equ	0xFF5
 28858                           prodh	equ	0xFF4
 28859                           prodl	equ	0xFF3
 28860                           intcon	equ	0xFF2
 28861                           intcon2	equ	0xFF1
 28862                           intcon3	equ	0xFF0
 28863                           indf0	equ	0xFEF
 28864                           postinc0	equ	0xFEE
 28865                           fsr0h	equ	0xFEA
 28866                           fsr0l	equ	0xFE9
 28867                           wreg	equ	0xFE8
 28868                           indf1	equ	0xFE7
 28869                           postdec1	equ	0xFE5
 28870                           plusw1	equ	0xFE3
 28871                           fsr1h	equ	0xFE2
 28872                           fsr1l	equ	0xFE1
 28873                           indf2	equ	0xFDF
 28874                           postinc2	equ	0xFDE
 28875                           postdec2	equ	0xFDD
 28876                           plusw2	equ	0xFDB
 28877                           fsr2h	equ	0xFDA
 28878                           fsr2l	equ	0xFD9
 28879                           status	equ	0xFD8
 28880                           
 28881 ;; *************** function __fill_buffer_get_status *****************
 28882 ;; Defined at:
 28883 ;;		line 176 in file "api.c"
 28884 ;; Parameters:    Size  Location     Type
 28885 ;;  outBuffer       2   20[COMRAM] PTR unsigned char 
 28886 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 28887 ;; Auto vars:     Size  Location     Type
 28888 ;;		None
 28889 ;; Return value:  Size  Location     Type
 28890 ;;                  1    wreg      void 
 28891 ;; Registers used:
 28892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28893 ;; Tracked objects:
 28894 ;;		On entry : 0/0
 28895 ;;		On exit  : 0/0
 28896 ;;		Unchanged: 0/0
 28897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28898 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28901 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28902 ;;Total ram usage:        2 bytes
 28903 ;; Hardware stack levels used:    1
 28904 ;; Hardware stack levels required when called:    4
 28905 ;; This function calls:
 28906 ;;		_flash_is_busy
 28907 ;;		_ui_get_status
 28908 ;; This function is called by:
 28909 ;;		_api_prepare
 28910 ;; This function uses a non-reentrant model
 28911 ;;
 28912                           
 28913                           	psect	text131
 28914  0049EE                     __ptext131:
 28915                           	opt stack 0
 28916  0049EE                     __fill_buffer_get_status:
 28917                           	opt stack 25
 28918                           
 28919                           ;api.c: 179: outBuffer[0] = DATAREQUEST_GET_STATUS;
 28920                           
 28921                           ;incstack = 0
 28922  0049EE  C015  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 28923  0049F2  C016  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 28924  0049F6  0E10               	movlw	16
 28925  0049F8  6EDF               	movwf	indf2,c
 28926                           
 28927                           ;api.c: 182: outBuffer[1] = (uint8_t) 0xC125;
 28928  0049FA  EE20 F001          	lfsr	2,1
 28929  0049FE  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28930  004A00  26D9               	addwf	fsr2l,f,c
 28931  004A02  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28932  004A04  22DA               	addwfc	fsr2h,f,c
 28933  004A06  0E25               	movlw	37
 28934  004A08  6EDF               	movwf	indf2,c
 28935                           
 28936                           ;api.c: 183: outBuffer[2] = 0xC125 >> 8;
 28937  004A0A  EE20 F002          	lfsr	2,2
 28938  004A0E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28939  004A10  26D9               	addwf	fsr2l,f,c
 28940  004A12  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28941  004A14  22DA               	addwfc	fsr2h,f,c
 28942  004A16  0EC1               	movlw	193
 28943  004A18  6EDF               	movwf	indf2,c
 28944                           
 28945                           ;api.c: 186: outBuffer[3] = (uint8_t) flash_is_busy();
 28946  004A1A  EE20 F003          	lfsr	2,3
 28947  004A1E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28948  004A20  26D9               	addwf	fsr2l,f,c
 28949  004A22  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28950  004A24  22DA               	addwfc	fsr2h,f,c
 28951  004A26  EC6B  F03E         	call	_flash_is_busy	;wreg free
 28952  004A2A  6EDF               	movwf	indf2,c
 28953                           
 28954                           ;api.c: 189: outBuffer[4] = 0x00;
 28955  004A2C  EE20 F004          	lfsr	2,4
 28956  004A30  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28957  004A32  26D9               	addwf	fsr2l,f,c
 28958  004A34  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28959  004A36  22DA               	addwfc	fsr2h,f,c
 28960  004A38  0E00               	movlw	0
 28961  004A3A  6EDF               	movwf	indf2,c
 28962                           
 28963                           ;api.c: 190: outBuffer[5] = 0x01;
 28964  004A3C  EE20 F005          	lfsr	2,5
 28965  004A40  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28966  004A42  26D9               	addwf	fsr2l,f,c
 28967  004A44  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28968  004A46  22DA               	addwfc	fsr2h,f,c
 28969  004A48  0E01               	movlw	1
 28970  004A4A  6EDF               	movwf	indf2,c
 28971                           
 28972                           ;api.c: 191: outBuffer[6] = 0x00;
 28973  004A4C  EE20 F006          	lfsr	2,6
 28974  004A50  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28975  004A52  26D9               	addwf	fsr2l,f,c
 28976  004A54  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28977  004A56  22DA               	addwfc	fsr2h,f,c
 28978  004A58  0E00               	movlw	0
 28979  004A5A  6EDF               	movwf	indf2,c
 28980                           
 28981                           ;api.c: 194: outBuffer[7] = ui_get_status();
 28982  004A5C  EE20 F007          	lfsr	2,7
 28983  004A60  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28984  004A62  26D9               	addwf	fsr2l,f,c
 28985  004A64  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28986  004A66  22DA               	addwfc	fsr2h,f,c
 28987  004A68  EC17  F03F         	call	_ui_get_status	;wreg free
 28988  004A6C  6EDF               	movwf	indf2,c
 28989                           
 28990                           ;api.c: 197: outBuffer[8] = os.encoderCount;
 28991  004A6E  EE20 F008          	lfsr	2,8
 28992  004A72  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 28993  004A74  26D9               	addwf	fsr2l,f,c
 28994  004A76  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 28995  004A78  22DA               	addwfc	fsr2h,f,c
 28996  004A7A  C060  FFDF         	movff	_os,indf2	;volatile
 28997                           
 28998                           ;api.c: 198: outBuffer[9] = os.buttonCount;
 28999  004A7E  EE20 F009          	lfsr	2,9
 29000  004A82  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 29001  004A84  26D9               	addwf	fsr2l,f,c
 29002  004A86  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 29003  004A88  22DA               	addwfc	fsr2h,f,c
 29004  004A8A  C061  FFDF         	movff	_os+1,indf2	;volatile
 29005                           
 29006                           ;api.c: 199: outBuffer[10] = os.timeSlot;
 29007  004A8E  EE20 F00A          	lfsr	2,10
 29008  004A92  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 29009  004A94  26D9               	addwf	fsr2l,f,c
 29010  004A96  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 29011  004A98  22DA               	addwfc	fsr2h,f,c
 29012  004A9A  C062  FFDF         	movff	_os+2,indf2	;volatile
 29013                           
 29014                           ;api.c: 200: outBuffer[11] = os.done;
 29015  004A9E  EE20 F00B          	lfsr	2,11
 29016  004AA2  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 29017  004AA4  26D9               	addwf	fsr2l,f,c
 29018  004AA6  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 29019  004AA8  22DA               	addwfc	fsr2h,f,c
 29020  004AAA  C063  FFDF         	movff	_os+3,indf2	;volatile
 29021                           
 29022                           ;api.c: 201: outBuffer[12] = os.bootloader_mode;
 29023  004AAE  EE20 F00C          	lfsr	2,12
 29024  004AB2  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 29025  004AB4  26D9               	addwf	fsr2l,f,c
 29026  004AB6  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 29027  004AB8  22DA               	addwfc	fsr2h,f,c
 29028  004ABA  C064  FFDF         	movff	_os+4,indf2	;volatile
 29029                           
 29030                           ;api.c: 202: outBuffer[13] = os.display_mode;
 29031  004ABE  EE20 F00D          	lfsr	2,13
 29032  004AC2  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 29033  004AC4  26D9               	addwf	fsr2l,f,c
 29034  004AC6  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 29035  004AC8  22DA               	addwfc	fsr2h,f,c
 29036  004ACA  C065  FFDF         	movff	_os+5,indf2	;volatile
 29037  004ACE  0012               	return		;funcret
 29038  004AD0                     __end_of__fill_buffer_get_status:
 29039                           	opt stack 0
 29040                           tosu	equ	0xFFF
 29041                           tosh	equ	0xFFE
 29042                           tosl	equ	0xFFD
 29043                           pclath	equ	0xFFA
 29044                           tblptru	equ	0xFF8
 29045                           tblptrh	equ	0xFF7
 29046                           tblptrl	equ	0xFF6
 29047                           tablat	equ	0xFF5
 29048                           prodh	equ	0xFF4
 29049                           prodl	equ	0xFF3
 29050                           intcon	equ	0xFF2
 29051                           intcon2	equ	0xFF1
 29052                           intcon3	equ	0xFF0
 29053                           indf0	equ	0xFEF
 29054                           postinc0	equ	0xFEE
 29055                           fsr0h	equ	0xFEA
 29056                           fsr0l	equ	0xFE9
 29057                           wreg	equ	0xFE8
 29058                           indf1	equ	0xFE7
 29059                           postdec1	equ	0xFE5
 29060                           plusw1	equ	0xFE3
 29061                           fsr1h	equ	0xFE2
 29062                           fsr1l	equ	0xFE1
 29063                           indf2	equ	0xFDF
 29064                           postinc2	equ	0xFDE
 29065                           postdec2	equ	0xFDD
 29066                           plusw2	equ	0xFDB
 29067                           fsr2h	equ	0xFDA
 29068                           fsr2l	equ	0xFD9
 29069                           status	equ	0xFD8
 29070                           
 29071 ;; *************** function _ui_get_status *****************
 29072 ;; Defined at:
 29073 ;;		line 85 in file "ui.c"
 29074 ;; Parameters:    Size  Location     Type
 29075 ;;		None
 29076 ;; Auto vars:     Size  Location     Type
 29077 ;;		None
 29078 ;; Return value:  Size  Location     Type
 29079 ;;                  1    wreg      enum E7920
 29080 ;; Registers used:
 29081 ;;		wreg, status,2
 29082 ;; Tracked objects:
 29083 ;;		On entry : 0/0
 29084 ;;		On exit  : 0/0
 29085 ;;		Unchanged: 0/0
 29086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29091 ;;Total ram usage:        0 bytes
 29092 ;; Hardware stack levels used:    1
 29093 ;; This function calls:
 29094 ;;		Nothing
 29095 ;; This function is called by:
 29096 ;;		_main
 29097 ;;		__fill_buffer_get_status
 29098 ;; This function uses a non-reentrant model
 29099 ;;
 29100                           
 29101                           	psect	text132
 29102  007E2E                     __ptext132:
 29103                           	opt stack 0
 29104  007E2E                     _ui_get_status:
 29105                           	opt stack 30
 29106                           
 29107                           ;ui.c: 87: return userInterfaceStatus;
 29108                           
 29109                           ;incstack = 0
 29110  007E2E  0100               	movlb	0	; () banked
 29111  007E30  5198               	movf	_userInterfaceStatus& (0+255),w,b
 29112  007E32  0012               	return	
 29113  007E34                     __end_of_ui_get_status:
 29114                           	opt stack 0
 29115                           tosu	equ	0xFFF
 29116                           tosh	equ	0xFFE
 29117                           tosl	equ	0xFFD
 29118                           pclath	equ	0xFFA
 29119                           tblptru	equ	0xFF8
 29120                           tblptrh	equ	0xFF7
 29121                           tblptrl	equ	0xFF6
 29122                           tablat	equ	0xFF5
 29123                           prodh	equ	0xFF4
 29124                           prodl	equ	0xFF3
 29125                           intcon	equ	0xFF2
 29126                           intcon2	equ	0xFF1
 29127                           intcon3	equ	0xFF0
 29128                           indf0	equ	0xFEF
 29129                           postinc0	equ	0xFEE
 29130                           fsr0h	equ	0xFEA
 29131                           fsr0l	equ	0xFE9
 29132                           wreg	equ	0xFE8
 29133                           indf1	equ	0xFE7
 29134                           postdec1	equ	0xFE5
 29135                           plusw1	equ	0xFE3
 29136                           fsr1h	equ	0xFE2
 29137                           fsr1l	equ	0xFE1
 29138                           indf2	equ	0xFDF
 29139                           postinc2	equ	0xFDE
 29140                           postdec2	equ	0xFDD
 29141                           plusw2	equ	0xFDB
 29142                           fsr2h	equ	0xFDA
 29143                           fsr2l	equ	0xFD9
 29144                           status	equ	0xFD8
 29145                           
 29146 ;; *************** function __fill_buffer_get_file_details *****************
 29147 ;; Defined at:
 29148 ;;		line 328 in file "api.c"
 29149 ;; Parameters:    Size  Location     Type
 29150 ;;  inBuffer        2   62[COMRAM] PTR unsigned char 
 29151 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 29152 ;;  outBuffer       2   64[COMRAM] PTR unsigned char 
 29153 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 29154 ;; Auto vars:     Size  Location     Type
 29155 ;;  file_number     1   66[COMRAM] unsigned char 
 29156 ;; Return value:  Size  Location     Type
 29157 ;;                  1    wreg      void 
 29158 ;; Registers used:
 29159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29160 ;; Tracked objects:
 29161 ;;		On entry : 0/0
 29162 ;;		On exit  : 0/0
 29163 ;;		Unchanged: 0/0
 29164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29165 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29166 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29168 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29169 ;;Total ram usage:        5 bytes
 29170 ;; Hardware stack levels used:    1
 29171 ;; Hardware stack levels required when called:    7
 29172 ;; This function calls:
 29173 ;;		_fat_get_file_information
 29174 ;; This function is called by:
 29175 ;;		_api_prepare
 29176 ;; This function uses a non-reentrant model
 29177 ;;
 29178                           
 29179                           	psect	text133
 29180  0067EC                     __ptext133:
 29181                           	opt stack 0
 29182  0067EC                     __fill_buffer_get_file_details:
 29183                           	opt stack 22
 29184                           
 29185                           ;api.c: 330: uint8_t file_number = inBuffer[2];
 29186                           
 29187                           ; BSR set to: 0
 29188                           ;incstack = 0
 29189  0067EC  EE20 F002          	lfsr	2,2
 29190  0067F0  503F               	movf	__fill_buffer_get_file_details@inBuffer,w,c
 29191  0067F2  26D9               	addwf	fsr2l,f,c
 29192  0067F4  5040               	movf	__fill_buffer_get_file_details@inBuffer+1,w,c
 29193  0067F6  22DA               	addwfc	fsr2h,f,c
 29194  0067F8  50DF               	movf	indf2,w,c
 29195  0067FA  6E43               	movwf	__fill_buffer_get_file_details@file_number,c
 29196                           
 29197                           ;api.c: 333: outBuffer[0] = DATAREQUEST_GET_FILE_DETAILS;
 29198  0067FC  C041  FFD9         	movff	__fill_buffer_get_file_details@outBuffer,fsr2l
 29199  006800  C042  FFDA         	movff	__fill_buffer_get_file_details@outBuffer+1,fsr2h
 29200  006804  0E80               	movlw	128
 29201  006806  6EDF               	movwf	indf2,c
 29202                           
 29203                           ;api.c: 336: outBuffer[1] = (uint8_t) 0xC125;
 29204  006808  EE20 F001          	lfsr	2,1
 29205  00680C  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 29206  00680E  26D9               	addwf	fsr2l,f,c
 29207  006810  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 29208  006812  22DA               	addwfc	fsr2h,f,c
 29209  006814  0E25               	movlw	37
 29210  006816  6EDF               	movwf	indf2,c
 29211                           
 29212                           ;api.c: 337: outBuffer[2] = 0xC125 >> 8;
 29213  006818  EE20 F002          	lfsr	2,2
 29214  00681C  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 29215  00681E  26D9               	addwf	fsr2l,f,c
 29216  006820  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 29217  006822  22DA               	addwfc	fsr2h,f,c
 29218  006824  0EC1               	movlw	193
 29219  006826  6EDF               	movwf	indf2,c
 29220                           
 29221                           ;api.c: 340: outBuffer[3] = file_number;
 29222  006828  EE20 F003          	lfsr	2,3
 29223  00682C  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 29224  00682E  26D9               	addwf	fsr2l,f,c
 29225  006830  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 29226  006832  22DA               	addwfc	fsr2h,f,c
 29227  006834  C043  FFDF         	movff	__fill_buffer_get_file_details@file_number,indf2
 29228                           
 29229                           ;api.c: 343: outBuffer[4] = fat_get_file_information(file_number, (rootEntry_t*) &outBuf
      +                          fer[5]);
 29230  006838  EE20 F004          	lfsr	2,4
 29231  00683C  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 29232  00683E  26D9               	addwf	fsr2l,f,c
 29233  006840  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 29234  006842  22DA               	addwfc	fsr2h,f,c
 29235  006844  0E05               	movlw	5
 29236  006846  2441               	addwf	__fill_buffer_get_file_details@outBuffer,w,c
 29237  006848  6E37               	movwf	fat_get_file_information@data,c
 29238  00684A  0E00               	movlw	0
 29239  00684C  2042               	addwfc	__fill_buffer_get_file_details@outBuffer+1,w,c
 29240  00684E  6E38               	movwf	fat_get_file_information@data+1,c
 29241  006850  5043               	movf	__fill_buffer_get_file_details@file_number,w,c
 29242  006852  ECD9  F032         	call	_fat_get_file_information
 29243  006856  6EDF               	movwf	indf2,c
 29244  006858  0012               	return		;funcret
 29245  00685A                     __end_of__fill_buffer_get_file_details:
 29246                           	opt stack 0
 29247                           tosu	equ	0xFFF
 29248                           tosh	equ	0xFFE
 29249                           tosl	equ	0xFFD
 29250                           pclath	equ	0xFFA
 29251                           tblptru	equ	0xFF8
 29252                           tblptrh	equ	0xFF7
 29253                           tblptrl	equ	0xFF6
 29254                           tablat	equ	0xFF5
 29255                           prodh	equ	0xFF4
 29256                           prodl	equ	0xFF3
 29257                           intcon	equ	0xFF2
 29258                           intcon2	equ	0xFF1
 29259                           intcon3	equ	0xFF0
 29260                           indf0	equ	0xFEF
 29261                           postinc0	equ	0xFEE
 29262                           fsr0h	equ	0xFEA
 29263                           fsr0l	equ	0xFE9
 29264                           wreg	equ	0xFE8
 29265                           indf1	equ	0xFE7
 29266                           postdec1	equ	0xFE5
 29267                           plusw1	equ	0xFE3
 29268                           fsr1h	equ	0xFE2
 29269                           fsr1l	equ	0xFE1
 29270                           indf2	equ	0xFDF
 29271                           postinc2	equ	0xFDE
 29272                           postdec2	equ	0xFDD
 29273                           plusw2	equ	0xFDB
 29274                           fsr2h	equ	0xFDA
 29275                           fsr2l	equ	0xFD9
 29276                           status	equ	0xFD8
 29277                           
 29278 ;; *************** function __fill_buffer_get_display *****************
 29279 ;; Defined at:
 29280 ;;		line 206 in file "api.c"
 29281 ;; Parameters:    Size  Location     Type
 29282 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 29283 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 29284 ;;  secondHalf      1    6[COMRAM] unsigned char 
 29285 ;; Auto vars:     Size  Location     Type
 29286 ;;  position        1   15[COMRAM] unsigned char 
 29287 ;;  start_line      1   14[COMRAM] unsigned char 
 29288 ;;  line            1   13[COMRAM] unsigned char 
 29289 ;;  cntr            1   12[COMRAM] unsigned char 
 29290 ;; Return value:  Size  Location     Type
 29291 ;;                  1    wreg      void 
 29292 ;; Registers used:
 29293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29294 ;; Tracked objects:
 29295 ;;		On entry : 0/0
 29296 ;;		On exit  : 0/0
 29297 ;;		Unchanged: 0/0
 29298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29299 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29300 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29301 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29302 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29303 ;;Total ram usage:       12 bytes
 29304 ;; Hardware stack levels used:    1
 29305 ;; Hardware stack levels required when called:    1
 29306 ;; This function calls:
 29307 ;;		_display_get_character
 29308 ;; This function is called by:
 29309 ;;		_api_prepare
 29310 ;; This function uses a non-reentrant model
 29311 ;;
 29312                           
 29313                           	psect	text134
 29314  0054F8                     __ptext134:
 29315                           	opt stack 0
 29316  0054F8                     __fill_buffer_get_display:
 29317                           	opt stack 28
 29318                           
 29319                           ;api.c: 208: uint8_t cntr;;api.c: 209: uint8_t line;;api.c: 210: uint8_t start_line;;api
      +                          .c: 211: uint8_t position;;api.c: 214: if(secondHalf)
 29320                           
 29321                           ;incstack = 0
 29322  0054F8  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 29323  0054FA  B4D8               	btfsc	status,2,c
 29324  0054FC  D006               	goto	l2541
 29325                           
 29326                           ;api.c: 215: {;api.c: 216: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 29327  0054FE  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 29328  005502  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 29329  005506  0E12               	movlw	18
 29330  005508  D005               	goto	L32
 29331  00550A                     l2541:
 29332                           
 29333                           ;api.c: 218: else;api.c: 219: {;api.c: 220: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 29334  00550A  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 29335  00550E  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 29336  005512  0E11               	movlw	17
 29337  005514                     L32:
 29338  005514  6EDF               	movwf	indf2,c
 29339                           
 29340                           ;api.c: 221: };api.c: 224: outBuffer[1] = (uint8_t) 0xC125;
 29341  005516  EE20 F001          	lfsr	2,1
 29342  00551A  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 29343  00551C  26D9               	addwf	fsr2l,f,c
 29344  00551E  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 29345  005520  22DA               	addwfc	fsr2h,f,c
 29346  005522  0E25               	movlw	37
 29347  005524  6EDF               	movwf	indf2,c
 29348                           
 29349                           ;api.c: 225: outBuffer[2] = 0xC125 >> 8;
 29350  005526  EE20 F002          	lfsr	2,2
 29351  00552A  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 29352  00552C  26D9               	addwf	fsr2l,f,c
 29353  00552E  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 29354  005530  22DA               	addwfc	fsr2h,f,c
 29355  005532  0EC1               	movlw	193
 29356  005534  6EDF               	movwf	indf2,c
 29357                           
 29358                           ;api.c: 228: cntr = 3;
 29359  005536  0E03               	movlw	3
 29360  005538  6E0D               	movwf	__fill_buffer_get_display@cntr,c
 29361                           
 29362                           ;api.c: 229: if(secondHalf)
 29363  00553A  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 29364  00553C  B4D8               	btfsc	status,2,c
 29365  00553E  D002               	goto	l2543
 29366                           
 29367                           ;api.c: 230: {;api.c: 231: start_line = 2;
 29368  005540  0E02               	movlw	2
 29369  005542  D001               	goto	L33
 29370  005544                     l2543:
 29371                           
 29372                           ;api.c: 233: else;api.c: 234: {;api.c: 235: start_line = 0;
 29373  005544  0E00               	movlw	0
 29374  005546                     L33:
 29375  005546  6E0F               	movwf	__fill_buffer_get_display@start_line,c
 29376                           
 29377                           ;api.c: 236: };api.c: 237: for(line=start_line; line<start_line+2; ++line)
 29378  005548  C00F  F00E         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 29379  00554C  D01A               	goto	l2545
 29380  00554E                     
 29381                           ;api.c: 238: {;api.c: 239: for(position=0; position<20; ++position)
 29382  00554E  0E00               	movlw	0
 29383  005550  6E10               	movwf	__fill_buffer_get_display@position,c
 29384  005552                     l13002:
 29385  005552  0E13               	movlw	19
 29386  005554  6410               	cpfsgt	__fill_buffer_get_display@position,c
 29387  005556  D001               	goto	l2547
 29388  005558  D013               	goto	u9960
 29389  00555A                     l2547:
 29390                           
 29391                           ;api.c: 240: {;api.c: 241: outBuffer[cntr] = display_get_character(line, position);
 29392  00555A  C010  F001         	movff	__fill_buffer_get_display@position,display_get_character@position
 29393  00555E  500E               	movf	__fill_buffer_get_display@line,w,c
 29394  005560  EC22  F03D         	call	_display_get_character
 29395  005564  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 29396  005566  500D               	movf	__fill_buffer_get_display@cntr,w,c
 29397  005568  0D01               	mullw	1
 29398  00556A  50F3               	movf	prodl,w,c
 29399  00556C  2405               	addwf	__fill_buffer_get_display@outBuffer,w,c
 29400  00556E  6ED9               	movwf	fsr2l,c
 29401  005570  50F4               	movf	prodh,w,c
 29402  005572  2006               	addwfc	__fill_buffer_get_display@outBuffer+1,w,c
 29403  005574  6EDA               	movwf	fsr2h,c
 29404  005576  C008  FFDF         	movff	??__fill_buffer_get_display,indf2
 29405                           
 29406                           ;api.c: 242: ++cntr;
 29407  00557A  2A0D               	incf	__fill_buffer_get_display@cntr,f,c
 29408  00557C  2A10               	incf	__fill_buffer_get_display@position,f,c
 29409  00557E  D7E9               	goto	l13002
 29410  005580                     u9960:
 29411  005580  2A0E               	incf	__fill_buffer_get_display@line,f,c
 29412  005582                     l2545:
 29413  005582  500F               	movf	__fill_buffer_get_display@start_line,w,c
 29414  005584  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 29415  005586  6A09               	clrf	(??__fill_buffer_get_display+1)& (0+255),c
 29416  005588  0E02               	movlw	2
 29417  00558A  2608               	addwf	??__fill_buffer_get_display,f,c
 29418  00558C  0E00               	movlw	0
 29419  00558E  2209               	addwfc	??__fill_buffer_get_display+1,f,c
 29420  005590  500E               	movf	__fill_buffer_get_display@line,w,c
 29421  005592  6E0A               	movwf	(??__fill_buffer_get_display+2)& (0+255),c
 29422  005594  6A0B               	clrf	(??__fill_buffer_get_display+3)& (0+255),c
 29423  005596  5008               	movf	??__fill_buffer_get_display,w,c
 29424  005598  5C0A               	subwf	??__fill_buffer_get_display+2,w,c
 29425  00559A  500B               	movf	??__fill_buffer_get_display+3,w,c
 29426  00559C  0A80               	xorlw	128
 29427  00559E  6E0C               	movwf	(??__fill_buffer_get_display+4)& (0+255),c
 29428  0055A0  5009               	movf	??__fill_buffer_get_display+1,w,c
 29429  0055A2  0A80               	xorlw	128
 29430  0055A4  580C               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,c
 29431  0055A6  B0D8               	btfsc	status,0,c
 29432  0055A8  0012               	return	
 29433  0055AA  D7D1               	goto	l2546
 29434  0055AC                     __end_of__fill_buffer_get_display:
 29435                           	opt stack 0
 29436                           tosu	equ	0xFFF
 29437                           tosh	equ	0xFFE
 29438                           tosl	equ	0xFFD
 29439                           pclath	equ	0xFFA
 29440                           tblptru	equ	0xFF8
 29441                           tblptrh	equ	0xFF7
 29442                           tblptrl	equ	0xFF6
 29443                           tablat	equ	0xFF5
 29444                           prodh	equ	0xFF4
 29445                           prodl	equ	0xFF3
 29446                           intcon	equ	0xFF2
 29447                           intcon2	equ	0xFF1
 29448                           intcon3	equ	0xFF0
 29449                           indf0	equ	0xFEF
 29450                           postinc0	equ	0xFEE
 29451                           fsr0h	equ	0xFEA
 29452                           fsr0l	equ	0xFE9
 29453                           wreg	equ	0xFE8
 29454                           indf1	equ	0xFE7
 29455                           postdec1	equ	0xFE5
 29456                           plusw1	equ	0xFE3
 29457                           fsr1h	equ	0xFE2
 29458                           fsr1l	equ	0xFE1
 29459                           indf2	equ	0xFDF
 29460                           postinc2	equ	0xFDE
 29461                           postdec2	equ	0xFDD
 29462                           plusw2	equ	0xFDB
 29463                           fsr2h	equ	0xFDA
 29464                           fsr2l	equ	0xFD9
 29465                           status	equ	0xFD8
 29466                           
 29467 ;; *************** function _display_get_character *****************
 29468 ;; Defined at:
 29469 ;;		line 61 in file "display.c"
 29470 ;; Parameters:    Size  Location     Type
 29471 ;;  line            1    wreg     unsigned char 
 29472 ;;  position        1    0[COMRAM] unsigned char 
 29473 ;; Auto vars:     Size  Location     Type
 29474 ;;  line            1    3[COMRAM] unsigned char 
 29475 ;; Return value:  Size  Location     Type
 29476 ;;                  1    wreg      unsigned char 
 29477 ;; Registers used:
 29478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29479 ;; Tracked objects:
 29480 ;;		On entry : 0/0
 29481 ;;		On exit  : 0/0
 29482 ;;		Unchanged: 0/0
 29483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29484 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29485 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29486 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29487 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29488 ;;Total ram usage:        4 bytes
 29489 ;; Hardware stack levels used:    1
 29490 ;; This function calls:
 29491 ;;		Nothing
 29492 ;; This function is called by:
 29493 ;;		__fill_buffer_get_display
 29494 ;; This function uses a non-reentrant model
 29495 ;;
 29496                           
 29497                           	psect	text135
 29498  007A44                     __ptext135:
 29499                           	opt stack 0
 29500  007A44                     _display_get_character:
 29501                           	opt stack 28
 29502                           
 29503                           ;incstack = 0
 29504                           ;display_get_character@line stored from wreg
 29505  007A44  6E04               	movwf	display_get_character@line,c
 29506                           
 29507                           ;display.c: 63: return display_content[line][position];
 29508  007A46  5004               	movf	display_get_character@line,w,c
 29509  007A48  0D14               	mullw	20
 29510  007A4A  0E74               	movlw	low _display_content
 29511  007A4C  6E02               	movwf	??_display_get_character& (0+255),c
 29512  007A4E  0E01               	movlw	high _display_content
 29513  007A50  6E03               	movwf	(??_display_get_character+1)& (0+255),c
 29514  007A52  50F3               	movf	prodl,w,c
 29515  007A54  2602               	addwf	??_display_get_character,f,c
 29516  007A56  50F4               	movf	prodh,w,c
 29517  007A58  2203               	addwfc	??_display_get_character+1,f,c
 29518  007A5A  5001               	movf	display_get_character@position,w,c
 29519  007A5C  0D01               	mullw	1
 29520  007A5E  50F3               	movf	prodl,w,c
 29521  007A60  2402               	addwf	??_display_get_character,w,c
 29522  007A62  6ED9               	movwf	fsr2l,c
 29523  007A64  50F4               	movf	prodh,w,c
 29524  007A66  2003               	addwfc	??_display_get_character+1,w,c
 29525  007A68  6EDA               	movwf	fsr2h,c
 29526  007A6A  50DF               	movf	indf2,w,c
 29527  007A6C  0012               	return	
 29528  007A6E                     __end_of_display_get_character:
 29529                           	opt stack 0
 29530                           tosu	equ	0xFFF
 29531                           tosh	equ	0xFFE
 29532                           tosl	equ	0xFFD
 29533                           pclath	equ	0xFFA
 29534                           tblptru	equ	0xFF8
 29535                           tblptrh	equ	0xFF7
 29536                           tblptrl	equ	0xFF6
 29537                           tablat	equ	0xFF5
 29538                           prodh	equ	0xFF4
 29539                           prodl	equ	0xFF3
 29540                           intcon	equ	0xFF2
 29541                           intcon2	equ	0xFF1
 29542                           intcon3	equ	0xFF0
 29543                           indf0	equ	0xFEF
 29544                           postinc0	equ	0xFEE
 29545                           fsr0h	equ	0xFEA
 29546                           fsr0l	equ	0xFE9
 29547                           wreg	equ	0xFE8
 29548                           indf1	equ	0xFE7
 29549                           postdec1	equ	0xFE5
 29550                           plusw1	equ	0xFE3
 29551                           fsr1h	equ	0xFE2
 29552                           fsr1l	equ	0xFE1
 29553                           indf2	equ	0xFDF
 29554                           postinc2	equ	0xFDE
 29555                           postdec2	equ	0xFDD
 29556                           plusw2	equ	0xFDB
 29557                           fsr2h	equ	0xFDA
 29558                           fsr2l	equ	0xFD9
 29559                           status	equ	0xFD8
 29560                           
 29561 ;; *************** function __fill_buffer_get_configuration *****************
 29562 ;; Defined at:
 29563 ;;		line 307 in file "api.c"
 29564 ;; Parameters:    Size  Location     Type
 29565 ;;  outBuffer       2    0[COMRAM] PTR unsigned char 
 29566 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 29567 ;; Auto vars:     Size  Location     Type
 29568 ;;		None
 29569 ;; Return value:  Size  Location     Type
 29570 ;;                  1    wreg      void 
 29571 ;; Registers used:
 29572 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29573 ;; Tracked objects:
 29574 ;;		On entry : 0/0
 29575 ;;		On exit  : 0/0
 29576 ;;		Unchanged: 0/0
 29577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29578 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29581 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29582 ;;Total ram usage:        2 bytes
 29583 ;; Hardware stack levels used:    1
 29584 ;; This function calls:
 29585 ;;		Nothing
 29586 ;; This function is called by:
 29587 ;;		_api_prepare
 29588 ;; This function uses a non-reentrant model
 29589 ;;
 29590                           
 29591                           	psect	text136
 29592  005B84                     __ptext136:
 29593                           	opt stack 0
 29594  005B84                     __fill_buffer_get_configuration:
 29595                           	opt stack 29
 29596                           
 29597                           ;api.c: 310: outBuffer[0] = DATAREQUEST_GET_STATUS;
 29598                           
 29599                           ;incstack = 0
 29600  005B84  C001  FFD9         	movff	__fill_buffer_get_configuration@outBuffer,fsr2l
 29601  005B88  C002  FFDA         	movff	__fill_buffer_get_configuration@outBuffer+1,fsr2h
 29602  005B8C  0E10               	movlw	16
 29603  005B8E  6EDF               	movwf	indf2,c
 29604                           
 29605                           ;api.c: 313: outBuffer[1] = (uint8_t) 0xC125;
 29606  005B90  EE20 F001          	lfsr	2,1
 29607  005B94  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29608  005B96  26D9               	addwf	fsr2l,f,c
 29609  005B98  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29610  005B9A  22DA               	addwfc	fsr2h,f,c
 29611  005B9C  0E25               	movlw	37
 29612  005B9E  6EDF               	movwf	indf2,c
 29613                           
 29614                           ;api.c: 314: outBuffer[2] = 0xC125 >> 8;
 29615  005BA0  EE20 F002          	lfsr	2,2
 29616  005BA4  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29617  005BA6  26D9               	addwf	fsr2l,f,c
 29618  005BA8  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29619  005BAA  22DA               	addwfc	fsr2h,f,c
 29620  005BAC  0EC1               	movlw	193
 29621  005BAE  6EDF               	movwf	indf2,c
 29622                           
 29623                           ;api.c: 317: outBuffer[3] = communicationSettings.spiMode;
 29624  005BB0  EE20 F003          	lfsr	2,3
 29625  005BB4  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29626  005BB6  26D9               	addwf	fsr2l,f,c
 29627  005BB8  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29628  005BBA  22DA               	addwfc	fsr2h,f,c
 29629  005BBC  C139  FFDF         	movff	_communicationSettings,indf2
 29630                           
 29631                           ;api.c: 318: outBuffer[4] = communicationSettings.spiFrequency;
 29632  005BC0  EE20 F004          	lfsr	2,4
 29633  005BC4  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29634  005BC6  26D9               	addwf	fsr2l,f,c
 29635  005BC8  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29636  005BCA  22DA               	addwfc	fsr2h,f,c
 29637  005BCC  C13A  FFDF         	movff	_communicationSettings+1,indf2
 29638                           
 29639                           ;api.c: 319: outBuffer[5] = communicationSettings.spiPolarity;
 29640  005BD0  EE20 F005          	lfsr	2,5
 29641  005BD4  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29642  005BD6  26D9               	addwf	fsr2l,f,c
 29643  005BD8  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29644  005BDA  22DA               	addwfc	fsr2h,f,c
 29645  005BDC  C13B  FFDF         	movff	_communicationSettings+2,indf2
 29646                           
 29647                           ;api.c: 322: outBuffer[6] = communicationSettings.i2cMode;
 29648  005BE0  EE20 F006          	lfsr	2,6
 29649  005BE4  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29650  005BE6  26D9               	addwf	fsr2l,f,c
 29651  005BE8  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29652  005BEA  22DA               	addwfc	fsr2h,f,c
 29653  005BEC  C13C  FFDF         	movff	_communicationSettings+3,indf2
 29654                           
 29655                           ;api.c: 323: outBuffer[7] = communicationSettings.i2cFrequency;
 29656  005BF0  EE20 F007          	lfsr	2,7
 29657  005BF4  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29658  005BF6  26D9               	addwf	fsr2l,f,c
 29659  005BF8  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29660  005BFA  22DA               	addwfc	fsr2h,f,c
 29661  005BFC  C13D  FFDF         	movff	_communicationSettings+4,indf2
 29662                           
 29663                           ;api.c: 324: outBuffer[8] = communicationSettings.i2cSlaveModeSlaveAddress;
 29664  005C00  EE20 F008          	lfsr	2,8
 29665  005C04  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29666  005C06  26D9               	addwf	fsr2l,f,c
 29667  005C08  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29668  005C0A  22DA               	addwfc	fsr2h,f,c
 29669  005C0C  C13E  FFDF         	movff	_communicationSettings+5,indf2
 29670                           
 29671                           ;api.c: 325: outBuffer[9] = communicationSettings.i2cMasterModeSlaveAddress;
 29672  005C10  EE20 F009          	lfsr	2,9
 29673  005C14  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 29674  005C16  26D9               	addwf	fsr2l,f,c
 29675  005C18  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 29676  005C1A  22DA               	addwfc	fsr2h,f,c
 29677  005C1C  C13F  FFDF         	movff	_communicationSettings+6,indf2
 29678  005C20  0012               	return		;funcret
 29679  005C22                     __end_of__fill_buffer_get_configuration:
 29680                           	opt stack 0
 29681                           tosu	equ	0xFFF
 29682                           tosh	equ	0xFFE
 29683                           tosl	equ	0xFFD
 29684                           pclath	equ	0xFFA
 29685                           tblptru	equ	0xFF8
 29686                           tblptrh	equ	0xFF7
 29687                           tblptrl	equ	0xFF6
 29688                           tablat	equ	0xFF5
 29689                           prodh	equ	0xFF4
 29690                           prodl	equ	0xFF3
 29691                           intcon	equ	0xFF2
 29692                           intcon2	equ	0xFF1
 29693                           intcon3	equ	0xFF0
 29694                           indf0	equ	0xFEF
 29695                           postinc0	equ	0xFEE
 29696                           fsr0h	equ	0xFEA
 29697                           fsr0l	equ	0xFE9
 29698                           wreg	equ	0xFE8
 29699                           indf1	equ	0xFE7
 29700                           postdec1	equ	0xFE5
 29701                           plusw1	equ	0xFE3
 29702                           fsr1h	equ	0xFE2
 29703                           fsr1l	equ	0xFE1
 29704                           indf2	equ	0xFDF
 29705                           postinc2	equ	0xFDE
 29706                           postdec2	equ	0xFDD
 29707                           plusw2	equ	0xFDB
 29708                           fsr2h	equ	0xFDA
 29709                           fsr2l	equ	0xFD9
 29710                           status	equ	0xFD8
 29711                           
 29712 ;; *************** function __fill_buffer_get_bootloader_details *****************
 29713 ;; Defined at:
 29714 ;;		line 247 in file "api.c"
 29715 ;; Parameters:    Size  Location     Type
 29716 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 29717 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 29718 ;; Auto vars:     Size  Location     Type
 29719 ;;  buffer_large    4   11[COMRAM] unsigned long 
 29720 ;;  buffer_small    2   15[COMRAM] unsigned int 
 29721 ;;  cntr            1   10[COMRAM] unsigned char 
 29722 ;;  data_length     1    9[COMRAM] unsigned char 
 29723 ;; Return value:  Size  Location     Type
 29724 ;;                  1    wreg      void 
 29725 ;; Registers used:
 29726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29727 ;; Tracked objects:
 29728 ;;		On entry : 0/0
 29729 ;;		On exit  : 0/0
 29730 ;;		Unchanged: 0/0
 29731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29732 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29733 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29734 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29735 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29736 ;;Total ram usage:       13 bytes
 29737 ;; Hardware stack levels used:    1
 29738 ;; Hardware stack levels required when called:    1
 29739 ;; This function calls:
 29740 ;;		_bootloader_get_entries
 29741 ;;		_bootloader_get_error
 29742 ;;		_bootloader_get_file_size
 29743 ;;		_bootloader_get_flashPagesWritten
 29744 ;;		_bootloader_get_rec_address
 29745 ;;		_bootloader_get_rec_checksum
 29746 ;;		_bootloader_get_rec_checksumCheck
 29747 ;;		_bootloader_get_rec_data
 29748 ;;		_bootloader_get_rec_dataLength
 29749 ;;		_bootloader_get_rec_recordType
 29750 ;;		_bootloader_get_total_entries
 29751 ;; This function is called by:
 29752 ;;		_api_prepare
 29753 ;; This function uses a non-reentrant model
 29754 ;;
 29755                           
 29756                           	psect	text137
 29757  002750                     __ptext137:
 29758                           	opt stack 0
 29759  002750                     __fill_buffer_get_bootloader_details:
 29760                           	opt stack 28
 29761                           
 29762                           ;api.c: 249: uint8_t cntr;;api.c: 250: uint8_t data_length;;api.c: 251: uint16_t buffer_
      +                          small;;api.c: 252: uint32_t buffer_large;;api.c: 255: outBuffer[0] = DATAREQUEST_GET_STA
      +                          TUS;
 29763                           
 29764                           ;incstack = 0
 29765  002750  C005  FFD9         	movff	__fill_buffer_get_bootloader_details@outBuffer,fsr2l
 29766  002754  C006  FFDA         	movff	__fill_buffer_get_bootloader_details@outBuffer+1,fsr2h
 29767  002758  0E10               	movlw	16
 29768  00275A  6EDF               	movwf	indf2,c
 29769                           
 29770                           ;api.c: 258: outBuffer[1] = (uint8_t) 0xC125;
 29771  00275C  EE20 F001          	lfsr	2,1
 29772  002760  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29773  002762  26D9               	addwf	fsr2l,f,c
 29774  002764  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29775  002766  22DA               	addwfc	fsr2h,f,c
 29776  002768  0E25               	movlw	37
 29777  00276A  6EDF               	movwf	indf2,c
 29778                           
 29779                           ;api.c: 259: outBuffer[2] = 0xC125 >> 8;
 29780  00276C  EE20 F002          	lfsr	2,2
 29781  002770  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29782  002772  26D9               	addwf	fsr2l,f,c
 29783  002774  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29784  002776  22DA               	addwfc	fsr2h,f,c
 29785  002778  0EC1               	movlw	193
 29786  00277A  6EDF               	movwf	indf2,c
 29787                           
 29788                           ;api.c: 262: buffer_large = bootloader_get_file_size();
 29789  00277C  EC93  F03E         	call	_bootloader_get_file_size	;wreg free
 29790  002780  C001  F00C         	movff	?_bootloader_get_file_size,__fill_buffer_get_bootloader_details@buffer_large
 29791  002784  C002  F00D         	movff	?_bootloader_get_file_size+1,__fill_buffer_get_bootloader_details@buffer_large+1
 29792  002788  C003  F00E         	movff	?_bootloader_get_file_size+2,__fill_buffer_get_bootloader_details@buffer_large+2
 29793  00278C  C004  F00F         	movff	?_bootloader_get_file_size+3,__fill_buffer_get_bootloader_details@buffer_large+3
 29794                           
 29795                           ;api.c: 263: outBuffer[3] = (uint8_t) buffer_large;
 29796  002790  EE20 F003          	lfsr	2,3
 29797  002794  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29798  002796  26D9               	addwf	fsr2l,f,c
 29799  002798  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29800  00279A  22DA               	addwfc	fsr2h,f,c
 29801  00279C  C00C  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large,indf2
 29802                           
 29803                           ;api.c: 264: outBuffer[4] = (uint8_t) (buffer_large>>8);
 29804  0027A0  EE20 F004          	lfsr	2,4
 29805  0027A4  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29806  0027A6  26D9               	addwf	fsr2l,f,c
 29807  0027A8  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29808  0027AA  22DA               	addwfc	fsr2h,f,c
 29809  0027AC  C00D  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large+1,indf2
 29810                           
 29811                           ;api.c: 265: outBuffer[5] = (uint8_t) (buffer_large>>16);
 29812  0027B0  EE20 F005          	lfsr	2,5
 29813  0027B4  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29814  0027B6  26D9               	addwf	fsr2l,f,c
 29815  0027B8  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29816  0027BA  22DA               	addwfc	fsr2h,f,c
 29817  0027BC  C00E  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large+2,indf2
 29818                           
 29819                           ;api.c: 266: outBuffer[6] = (uint8_t) (buffer_large>>32);
 29820  0027C0  EE20 F006          	lfsr	2,6
 29821  0027C4  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29822  0027C6  26D9               	addwf	fsr2l,f,c
 29823  0027C8  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29824  0027CA  22DA               	addwfc	fsr2h,f,c
 29825  0027CC  C00C  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large,indf2
 29826                           
 29827                           ;api.c: 268: buffer_small = bootloader_get_entries();
 29828  0027D0  ECF8  F03E         	call	_bootloader_get_entries	;wreg free
 29829  0027D4  C001  F010         	movff	?_bootloader_get_entries,__fill_buffer_get_bootloader_details@buffer_small
 29830  0027D8  C002  F011         	movff	?_bootloader_get_entries+1,__fill_buffer_get_bootloader_details@buffer_small+1
 29831                           
 29832                           ;api.c: 269: outBuffer[7] = (uint8_t) buffer_small;
 29833  0027DC  EE20 F007          	lfsr	2,7
 29834  0027E0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29835  0027E2  26D9               	addwf	fsr2l,f,c
 29836  0027E4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29837  0027E6  22DA               	addwfc	fsr2h,f,c
 29838  0027E8  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 29839                           
 29840                           ;api.c: 270: outBuffer[8] = (uint8_t) (buffer_small>>8);
 29841  0027EC  EE20 F008          	lfsr	2,8
 29842  0027F0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29843  0027F2  26D9               	addwf	fsr2l,f,c
 29844  0027F4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29845  0027F6  22DA               	addwfc	fsr2h,f,c
 29846  0027F8  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 29847  0027FA  6EDF               	movwf	indf2,c
 29848                           
 29849                           ;api.c: 272: buffer_small = bootloader_get_total_entries();
 29850  0027FC  ECE4  F03E         	call	_bootloader_get_total_entries	;wreg free
 29851  002800  C001  F010         	movff	?_bootloader_get_total_entries,__fill_buffer_get_bootloader_details@buffer_small
 29852  002804  C002  F011         	movff	?_bootloader_get_total_entries+1,__fill_buffer_get_bootloader_details@buffer_smal
      +                          l+1
 29853                           
 29854                           ;api.c: 273: outBuffer[9] = (uint8_t) buffer_small;
 29855  002808  EE20 F009          	lfsr	2,9
 29856  00280C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29857  00280E  26D9               	addwf	fsr2l,f,c
 29858  002810  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29859  002812  22DA               	addwfc	fsr2h,f,c
 29860  002814  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 29861                           
 29862                           ;api.c: 274: outBuffer[10] = (uint8_t) (buffer_small>>8);
 29863  002818  EE20 F00A          	lfsr	2,10
 29864  00281C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29865  00281E  26D9               	addwf	fsr2l,f,c
 29866  002820  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29867  002822  22DA               	addwfc	fsr2h,f,c
 29868  002824  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 29869  002826  6EDF               	movwf	indf2,c
 29870                           
 29871                           ;api.c: 276: outBuffer[11] = (uint8_t) bootloader_get_error();
 29872  002828  EE20 F00B          	lfsr	2,11
 29873  00282C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29874  00282E  26D9               	addwf	fsr2l,f,c
 29875  002830  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29876  002832  22DA               	addwfc	fsr2h,f,c
 29877  002834  EC23  F03F         	call	_bootloader_get_error	;wreg free
 29878  002838  6EDF               	movwf	indf2,c
 29879                           
 29880                           ;api.c: 278: buffer_small = bootloader_get_flashPagesWritten();
 29881  00283A  ECF3  F03E         	call	_bootloader_get_flashPagesWritten	;wreg free
 29882  00283E  C001  F010         	movff	?_bootloader_get_flashPagesWritten,__fill_buffer_get_bootloader_details@buffer_sm
      +                          all
 29883  002842  C002  F011         	movff	?_bootloader_get_flashPagesWritten+1,__fill_buffer_get_bootloader_details@buffer_
      +                          small+1
 29884                           
 29885                           ;api.c: 279: outBuffer[12] = (uint8_t) buffer_small;
 29886  002846  EE20 F00C          	lfsr	2,12
 29887  00284A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29888  00284C  26D9               	addwf	fsr2l,f,c
 29889  00284E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29890  002850  22DA               	addwfc	fsr2h,f,c
 29891  002852  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 29892                           
 29893                           ;api.c: 280: outBuffer[13] = (uint8_t) (buffer_small>>8);
 29894  002856  EE20 F00D          	lfsr	2,13
 29895  00285A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29896  00285C  26D9               	addwf	fsr2l,f,c
 29897  00285E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29898  002860  22DA               	addwfc	fsr2h,f,c
 29899  002862  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 29900  002864  6EDF               	movwf	indf2,c
 29901                           
 29902                           ;api.c: 283: buffer_small = bootloader_get_rec_dataLength();
 29903  002866  ECE9  F03E         	call	_bootloader_get_rec_dataLength	;wreg free
 29904  00286A  C001  F010         	movff	?_bootloader_get_rec_dataLength,__fill_buffer_get_bootloader_details@buffer_small
 29905  00286E  C002  F011         	movff	?_bootloader_get_rec_dataLength+1,__fill_buffer_get_bootloader_details@buffer_sma
      +                          ll+1
 29906                           
 29907                           ;api.c: 284: outBuffer[14] = (uint8_t) buffer_small;
 29908  002872  EE20 F00E          	lfsr	2,14
 29909  002876  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29910  002878  26D9               	addwf	fsr2l,f,c
 29911  00287A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29912  00287C  22DA               	addwfc	fsr2h,f,c
 29913  00287E  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 29914                           
 29915                           ;api.c: 285: outBuffer[15] = (uint8_t) (buffer_small>>8);
 29916  002882  EE20 F00F          	lfsr	2,15
 29917  002886  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29918  002888  26D9               	addwf	fsr2l,f,c
 29919  00288A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29920  00288C  22DA               	addwfc	fsr2h,f,c
 29921  00288E  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 29922  002890  6EDF               	movwf	indf2,c
 29923                           
 29924                           ;api.c: 287: buffer_small = bootloader_get_rec_address();
 29925  002892  ECEE  F03E         	call	_bootloader_get_rec_address	;wreg free
 29926  002896  C001  F010         	movff	?_bootloader_get_rec_address,__fill_buffer_get_bootloader_details@buffer_small
 29927  00289A  C002  F011         	movff	?_bootloader_get_rec_address+1,__fill_buffer_get_bootloader_details@buffer_small+
      +                          1
 29928                           
 29929                           ;api.c: 288: outBuffer[16] = (uint8_t) buffer_small;
 29930  00289E  EE20 F010          	lfsr	2,16
 29931  0028A2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29932  0028A4  26D9               	addwf	fsr2l,f,c
 29933  0028A6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29934  0028A8  22DA               	addwfc	fsr2h,f,c
 29935  0028AA  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 29936                           
 29937                           ;api.c: 289: outBuffer[17] = (uint8_t) (buffer_small>>8);
 29938  0028AE  EE20 F011          	lfsr	2,17
 29939  0028B2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29940  0028B4  26D9               	addwf	fsr2l,f,c
 29941  0028B6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29942  0028B8  22DA               	addwfc	fsr2h,f,c
 29943  0028BA  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 29944  0028BC  6EDF               	movwf	indf2,c
 29945                           
 29946                           ;api.c: 291: outBuffer[18] = (uint8_t) bootloader_get_rec_recordType();
 29947  0028BE  EE20 F012          	lfsr	2,18
 29948  0028C2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29949  0028C4  26D9               	addwf	fsr2l,f,c
 29950  0028C6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29951  0028C8  22DA               	addwfc	fsr2h,f,c
 29952  0028CA  EC1A  F03F         	call	_bootloader_get_rec_recordType	;wreg free
 29953  0028CE  6EDF               	movwf	indf2,c
 29954                           
 29955                           ;api.c: 292: outBuffer[19] = bootloader_get_rec_checksum();
 29956  0028D0  EE20 F013          	lfsr	2,19
 29957  0028D4  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29958  0028D6  26D9               	addwf	fsr2l,f,c
 29959  0028D8  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29960  0028DA  22DA               	addwfc	fsr2h,f,c
 29961  0028DC  EC20  F03F         	call	_bootloader_get_rec_checksum	;wreg free
 29962  0028E0  6EDF               	movwf	indf2,c
 29963                           
 29964                           ;api.c: 293: outBuffer[20] = bootloader_get_rec_checksumCheck();
 29965  0028E2  EE20 F014          	lfsr	2,20
 29966  0028E6  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 29967  0028E8  26D9               	addwf	fsr2l,f,c
 29968  0028EA  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 29969  0028EC  22DA               	addwfc	fsr2h,f,c
 29970  0028EE  EC1D  F03F         	call	_bootloader_get_rec_checksumCheck	;wreg free
 29971  0028F2  6EDF               	movwf	indf2,c
 29972                           
 29973                           ;api.c: 295: data_length = (uint8_t) bootloader_get_rec_dataLength();
 29974  0028F4  ECE9  F03E         	call	_bootloader_get_rec_dataLength	;wreg free
 29975  0028F8  5001               	movf	?_bootloader_get_rec_dataLength,w,c
 29976  0028FA  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 29977                           
 29978                           ;api.c: 296: if(data_length>43)
 29979  0028FC  0E2B               	movlw	43
 29980  0028FE  640A               	cpfsgt	__fill_buffer_get_bootloader_details@data_length,c
 29981  002900  D002               	goto	l2553
 29982                           
 29983                           ;api.c: 297: {;api.c: 299: data_length = 43;
 29984  002902  0E2B               	movlw	43
 29985  002904  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 29986  002906                     l2553:
 29987                           
 29988                           ;api.c: 300: };api.c: 301: for(cntr=0; cntr<data_length; ++cntr)
 29989  002906  0E00               	movlw	0
 29990  002908  6E0B               	movwf	__fill_buffer_get_bootloader_details@cntr,c
 29991  00290A  D014               	goto	l2554
 29992  00290C                     
 29993                           ;api.c: 302: {;api.c: 303: outBuffer[21+cntr] = bootloader_get_rec_data(cntr);
 29994  00290C  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 29995  00290E  EC60  F03E         	call	_bootloader_get_rec_data
 29996  002912  6E07               	movwf	??__fill_buffer_get_bootloader_details& (0+255),c
 29997  002914  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 29998  002916  6E08               	movwf	(??__fill_buffer_get_bootloader_details+1)& (0+255),c
 29999  002918  6A09               	clrf	(??__fill_buffer_get_bootloader_details+2)& (0+255),c
 30000  00291A  0E15               	movlw	21
 30001  00291C  2608               	addwf	??__fill_buffer_get_bootloader_details+1,f,c
 30002  00291E  0E00               	movlw	0
 30003  002920  2209               	addwfc	??__fill_buffer_get_bootloader_details+2,f,c
 30004  002922  5008               	movf	??__fill_buffer_get_bootloader_details+1,w,c
 30005  002924  2405               	addwf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 30006  002926  6ED9               	movwf	fsr2l,c
 30007  002928  5009               	movf	??__fill_buffer_get_bootloader_details+2,w,c
 30008  00292A  2006               	addwfc	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 30009  00292C  6EDA               	movwf	fsr2h,c
 30010  00292E  C007  FFDF         	movff	??__fill_buffer_get_bootloader_details,indf2
 30011  002932  2A0B               	incf	__fill_buffer_get_bootloader_details@cntr,f,c
 30012  002934                     l2554:
 30013  002934  500A               	movf	__fill_buffer_get_bootloader_details@data_length,w,c
 30014  002936  5C0B               	subwf	__fill_buffer_get_bootloader_details@cntr,w,c
 30015  002938  B0D8               	btfsc	status,0,c
 30016  00293A  0012               	return	
 30017  00293C  D7E7               	goto	l2555
 30018  00293E                     __end_of__fill_buffer_get_bootloader_details:
 30019                           	opt stack 0
 30020                           tosu	equ	0xFFF
 30021                           tosh	equ	0xFFE
 30022                           tosl	equ	0xFFD
 30023                           pclath	equ	0xFFA
 30024                           tblptru	equ	0xFF8
 30025                           tblptrh	equ	0xFF7
 30026                           tblptrl	equ	0xFF6
 30027                           tablat	equ	0xFF5
 30028                           prodh	equ	0xFF4
 30029                           prodl	equ	0xFF3
 30030                           intcon	equ	0xFF2
 30031                           intcon2	equ	0xFF1
 30032                           intcon3	equ	0xFF0
 30033                           indf0	equ	0xFEF
 30034                           postinc0	equ	0xFEE
 30035                           fsr0h	equ	0xFEA
 30036                           fsr0l	equ	0xFE9
 30037                           wreg	equ	0xFE8
 30038                           indf1	equ	0xFE7
 30039                           postdec1	equ	0xFE5
 30040                           plusw1	equ	0xFE3
 30041                           fsr1h	equ	0xFE2
 30042                           fsr1l	equ	0xFE1
 30043                           indf2	equ	0xFDF
 30044                           postinc2	equ	0xFDE
 30045                           postdec2	equ	0xFDD
 30046                           plusw2	equ	0xFDB
 30047                           fsr2h	equ	0xFDA
 30048                           fsr2l	equ	0xFD9
 30049                           status	equ	0xFD8
 30050                           
 30051 ;; *************** function _bootloader_get_total_entries *****************
 30052 ;; Defined at:
 30053 ;;		line 438 in file "bootloader.c"
 30054 ;; Parameters:    Size  Location     Type
 30055 ;;		None
 30056 ;; Auto vars:     Size  Location     Type
 30057 ;;		None
 30058 ;; Return value:  Size  Location     Type
 30059 ;;                  2    0[COMRAM] unsigned int 
 30060 ;; Registers used:
 30061 ;;		None
 30062 ;; Tracked objects:
 30063 ;;		On entry : 0/0
 30064 ;;		On exit  : 0/0
 30065 ;;		Unchanged: 0/0
 30066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30067 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30070 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30071 ;;Total ram usage:        2 bytes
 30072 ;; Hardware stack levels used:    1
 30073 ;; This function calls:
 30074 ;;		Nothing
 30075 ;; This function is called by:
 30076 ;;		__display_checked
 30077 ;;		__display_programming
 30078 ;;		__fill_buffer_get_bootloader_details
 30079 ;; This function uses a non-reentrant model
 30080 ;;
 30081                           
 30082                           	psect	text138
 30083  007DC8                     __ptext138:
 30084                           	opt stack 0
 30085  007DC8                     _bootloader_get_total_entries:
 30086                           	opt stack 28
 30087                           
 30088                           ;bootloader.c: 440: return total_hex_file_entries;
 30089                           
 30090                           ;incstack = 0
 30091  007DC8  C168  F001         	movff	_total_hex_file_entries,?_bootloader_get_total_entries
 30092  007DCC  C169  F002         	movff	_total_hex_file_entries+1,?_bootloader_get_total_entries+1
 30093  007DD0  0012               	return		;funcret
 30094  007DD2                     __end_of_bootloader_get_total_entries:
 30095                           	opt stack 0
 30096                           tosu	equ	0xFFF
 30097                           tosh	equ	0xFFE
 30098                           tosl	equ	0xFFD
 30099                           pclath	equ	0xFFA
 30100                           tblptru	equ	0xFF8
 30101                           tblptrh	equ	0xFF7
 30102                           tblptrl	equ	0xFF6
 30103                           tablat	equ	0xFF5
 30104                           prodh	equ	0xFF4
 30105                           prodl	equ	0xFF3
 30106                           intcon	equ	0xFF2
 30107                           intcon2	equ	0xFF1
 30108                           intcon3	equ	0xFF0
 30109                           indf0	equ	0xFEF
 30110                           postinc0	equ	0xFEE
 30111                           fsr0h	equ	0xFEA
 30112                           fsr0l	equ	0xFE9
 30113                           wreg	equ	0xFE8
 30114                           indf1	equ	0xFE7
 30115                           postdec1	equ	0xFE5
 30116                           plusw1	equ	0xFE3
 30117                           fsr1h	equ	0xFE2
 30118                           fsr1l	equ	0xFE1
 30119                           indf2	equ	0xFDF
 30120                           postinc2	equ	0xFDE
 30121                           postdec2	equ	0xFDD
 30122                           plusw2	equ	0xFDB
 30123                           fsr2h	equ	0xFDA
 30124                           fsr2l	equ	0xFD9
 30125                           status	equ	0xFD8
 30126                           
 30127 ;; *************** function _bootloader_get_rec_recordType *****************
 30128 ;; Defined at:
 30129 ;;		line 459 in file "bootloader.c"
 30130 ;; Parameters:    Size  Location     Type
 30131 ;;		None
 30132 ;; Auto vars:     Size  Location     Type
 30133 ;;		None
 30134 ;; Return value:  Size  Location     Type
 30135 ;;                  1    wreg      enum E6760
 30136 ;; Registers used:
 30137 ;;		wreg, status,2
 30138 ;; Tracked objects:
 30139 ;;		On entry : 0/0
 30140 ;;		On exit  : 0/0
 30141 ;;		Unchanged: 0/0
 30142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30147 ;;Total ram usage:        0 bytes
 30148 ;; Hardware stack levels used:    1
 30149 ;; This function calls:
 30150 ;;		Nothing
 30151 ;; This function is called by:
 30152 ;;		__fill_buffer_get_bootloader_details
 30153 ;; This function uses a non-reentrant model
 30154 ;;
 30155                           
 30156                           	psect	text139
 30157  007E34                     __ptext139:
 30158                           	opt stack 0
 30159  007E34                     _bootloader_get_rec_recordType:
 30160                           	opt stack 28
 30161                           
 30162                           ;bootloader.c: 461: return hex_file_entry.recordType;
 30163                           
 30164                           ;incstack = 0
 30165  007E34  0101               	movlb	1	; () banked
 30166  007E36  51C8               	movf	(_hex_file_entry+4)& (0+255),w,b
 30167  007E38  0012               	return	
 30168  007E3A                     __end_of_bootloader_get_rec_recordType:
 30169                           	opt stack 0
 30170                           tosu	equ	0xFFF
 30171                           tosh	equ	0xFFE
 30172                           tosl	equ	0xFFD
 30173                           pclath	equ	0xFFA
 30174                           tblptru	equ	0xFF8
 30175                           tblptrh	equ	0xFF7
 30176                           tblptrl	equ	0xFF6
 30177                           tablat	equ	0xFF5
 30178                           prodh	equ	0xFF4
 30179                           prodl	equ	0xFF3
 30180                           intcon	equ	0xFF2
 30181                           intcon2	equ	0xFF1
 30182                           intcon3	equ	0xFF0
 30183                           indf0	equ	0xFEF
 30184                           postinc0	equ	0xFEE
 30185                           fsr0h	equ	0xFEA
 30186                           fsr0l	equ	0xFE9
 30187                           wreg	equ	0xFE8
 30188                           indf1	equ	0xFE7
 30189                           postdec1	equ	0xFE5
 30190                           plusw1	equ	0xFE3
 30191                           fsr1h	equ	0xFE2
 30192                           fsr1l	equ	0xFE1
 30193                           indf2	equ	0xFDF
 30194                           postinc2	equ	0xFDE
 30195                           postdec2	equ	0xFDD
 30196                           plusw2	equ	0xFDB
 30197                           fsr2h	equ	0xFDA
 30198                           fsr2l	equ	0xFD9
 30199                           status	equ	0xFD8
 30200                           
 30201 ;; *************** function _bootloader_get_rec_dataLength *****************
 30202 ;; Defined at:
 30203 ;;		line 448 in file "bootloader.c"
 30204 ;; Parameters:    Size  Location     Type
 30205 ;;		None
 30206 ;; Auto vars:     Size  Location     Type
 30207 ;;		None
 30208 ;; Return value:  Size  Location     Type
 30209 ;;                  2    0[COMRAM] unsigned int 
 30210 ;; Registers used:
 30211 ;;		None
 30212 ;; Tracked objects:
 30213 ;;		On entry : 0/0
 30214 ;;		On exit  : 0/0
 30215 ;;		Unchanged: 0/0
 30216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30217 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30220 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30221 ;;Total ram usage:        2 bytes
 30222 ;; Hardware stack levels used:    1
 30223 ;; This function calls:
 30224 ;;		Nothing
 30225 ;; This function is called by:
 30226 ;;		__fill_buffer_get_bootloader_details
 30227 ;; This function uses a non-reentrant model
 30228 ;;
 30229                           
 30230                           	psect	text140
 30231  007DD2                     __ptext140:
 30232                           	opt stack 0
 30233  007DD2                     _bootloader_get_rec_dataLength:
 30234                           	opt stack 28
 30235                           
 30236                           ;bootloader.c: 450: return hex_file_entry.dataLength;
 30237                           
 30238                           ; BSR set to: 1
 30239                           ;incstack = 0
 30240  007DD2  C1C4  F001         	movff	_hex_file_entry,?_bootloader_get_rec_dataLength
 30241  007DD6  C1C5  F002         	movff	_hex_file_entry+1,?_bootloader_get_rec_dataLength+1
 30242  007DDA  0012               	return		;funcret
 30243  007DDC                     __end_of_bootloader_get_rec_dataLength:
 30244                           	opt stack 0
 30245                           tosu	equ	0xFFF
 30246                           tosh	equ	0xFFE
 30247                           tosl	equ	0xFFD
 30248                           pclath	equ	0xFFA
 30249                           tblptru	equ	0xFF8
 30250                           tblptrh	equ	0xFF7
 30251                           tblptrl	equ	0xFF6
 30252                           tablat	equ	0xFF5
 30253                           prodh	equ	0xFF4
 30254                           prodl	equ	0xFF3
 30255                           intcon	equ	0xFF2
 30256                           intcon2	equ	0xFF1
 30257                           intcon3	equ	0xFF0
 30258                           indf0	equ	0xFEF
 30259                           postinc0	equ	0xFEE
 30260                           fsr0h	equ	0xFEA
 30261                           fsr0l	equ	0xFE9
 30262                           wreg	equ	0xFE8
 30263                           indf1	equ	0xFE7
 30264                           postdec1	equ	0xFE5
 30265                           plusw1	equ	0xFE3
 30266                           fsr1h	equ	0xFE2
 30267                           fsr1l	equ	0xFE1
 30268                           indf2	equ	0xFDF
 30269                           postinc2	equ	0xFDE
 30270                           postdec2	equ	0xFDD
 30271                           plusw2	equ	0xFDB
 30272                           fsr2h	equ	0xFDA
 30273                           fsr2l	equ	0xFD9
 30274                           status	equ	0xFD8
 30275                           
 30276 ;; *************** function _bootloader_get_rec_data *****************
 30277 ;; Defined at:
 30278 ;;		line 464 in file "bootloader.c"
 30279 ;; Parameters:    Size  Location     Type
 30280 ;;  index           1    wreg     unsigned char 
 30281 ;; Auto vars:     Size  Location     Type
 30282 ;;  index           1    0[COMRAM] unsigned char 
 30283 ;; Return value:  Size  Location     Type
 30284 ;;                  1    wreg      unsigned char 
 30285 ;; Registers used:
 30286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30287 ;; Tracked objects:
 30288 ;;		On entry : 0/0
 30289 ;;		On exit  : 0/0
 30290 ;;		Unchanged: 0/0
 30291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30293 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30295 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30296 ;;Total ram usage:        1 bytes
 30297 ;; Hardware stack levels used:    1
 30298 ;; This function calls:
 30299 ;;		Nothing
 30300 ;; This function is called by:
 30301 ;;		__fill_buffer_get_bootloader_details
 30302 ;; This function uses a non-reentrant model
 30303 ;;
 30304                           
 30305                           	psect	text141
 30306  007CC0                     __ptext141:
 30307                           	opt stack 0
 30308  007CC0                     _bootloader_get_rec_data:
 30309                           	opt stack 28
 30310                           
 30311                           ;incstack = 0
 30312                           ;bootloader_get_rec_data@index stored from wreg
 30313  007CC0  6E01               	movwf	bootloader_get_rec_data@index,c
 30314                           
 30315                           ;bootloader.c: 466: return hex_file_entry.data[index];
 30316  007CC2  5001               	movf	bootloader_get_rec_data@index,w,c
 30317  007CC4  0D01               	mullw	1
 30318  007CC6  0EC9               	movlw	low (_hex_file_entry+5)
 30319  007CC8  24F3               	addwf	prodl,w,c
 30320  007CCA  6ED9               	movwf	fsr2l,c
 30321  007CCC  0E01               	movlw	high (_hex_file_entry+5)
 30322  007CCE  20F4               	addwfc	prodh,w,c
 30323  007CD0  6EDA               	movwf	fsr2h,c
 30324  007CD2  50DF               	movf	indf2,w,c
 30325  007CD4  0012               	return	
 30326  007CD6                     __end_of_bootloader_get_rec_data:
 30327                           	opt stack 0
 30328                           tosu	equ	0xFFF
 30329                           tosh	equ	0xFFE
 30330                           tosl	equ	0xFFD
 30331                           pclath	equ	0xFFA
 30332                           tblptru	equ	0xFF8
 30333                           tblptrh	equ	0xFF7
 30334                           tblptrl	equ	0xFF6
 30335                           tablat	equ	0xFF5
 30336                           prodh	equ	0xFF4
 30337                           prodl	equ	0xFF3
 30338                           intcon	equ	0xFF2
 30339                           intcon2	equ	0xFF1
 30340                           intcon3	equ	0xFF0
 30341                           indf0	equ	0xFEF
 30342                           postinc0	equ	0xFEE
 30343                           fsr0h	equ	0xFEA
 30344                           fsr0l	equ	0xFE9
 30345                           wreg	equ	0xFE8
 30346                           indf1	equ	0xFE7
 30347                           postdec1	equ	0xFE5
 30348                           plusw1	equ	0xFE3
 30349                           fsr1h	equ	0xFE2
 30350                           fsr1l	equ	0xFE1
 30351                           indf2	equ	0xFDF
 30352                           postinc2	equ	0xFDE
 30353                           postdec2	equ	0xFDD
 30354                           plusw2	equ	0xFDB
 30355                           fsr2h	equ	0xFDA
 30356                           fsr2l	equ	0xFD9
 30357                           status	equ	0xFD8
 30358                           
 30359 ;; *************** function _bootloader_get_rec_checksumCheck *****************
 30360 ;; Defined at:
 30361 ;;		line 474 in file "bootloader.c"
 30362 ;; Parameters:    Size  Location     Type
 30363 ;;		None
 30364 ;; Auto vars:     Size  Location     Type
 30365 ;;		None
 30366 ;; Return value:  Size  Location     Type
 30367 ;;                  1    wreg      unsigned char 
 30368 ;; Registers used:
 30369 ;;		wreg, status,2
 30370 ;; Tracked objects:
 30371 ;;		On entry : 0/0
 30372 ;;		On exit  : 0/0
 30373 ;;		Unchanged: 0/0
 30374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30379 ;;Total ram usage:        0 bytes
 30380 ;; Hardware stack levels used:    1
 30381 ;; This function calls:
 30382 ;;		Nothing
 30383 ;; This function is called by:
 30384 ;;		__fill_buffer_get_bootloader_details
 30385 ;; This function uses a non-reentrant model
 30386 ;;
 30387                           
 30388                           	psect	text142
 30389  007E3A                     __ptext142:
 30390                           	opt stack 0
 30391  007E3A                     _bootloader_get_rec_checksumCheck:
 30392                           	opt stack 28
 30393                           
 30394                           ;bootloader.c: 476: return hex_file_entry.checksumCheck;
 30395                           
 30396                           ;incstack = 0
 30397  007E3A  0101               	movlb	1	; () banked
 30398  007E3C  51DA               	movf	(_hex_file_entry+22)& (0+255),w,b
 30399  007E3E  0012               	return	
 30400  007E40                     __end_of_bootloader_get_rec_checksumCheck:
 30401                           	opt stack 0
 30402                           tosu	equ	0xFFF
 30403                           tosh	equ	0xFFE
 30404                           tosl	equ	0xFFD
 30405                           pclath	equ	0xFFA
 30406                           tblptru	equ	0xFF8
 30407                           tblptrh	equ	0xFF7
 30408                           tblptrl	equ	0xFF6
 30409                           tablat	equ	0xFF5
 30410                           prodh	equ	0xFF4
 30411                           prodl	equ	0xFF3
 30412                           intcon	equ	0xFF2
 30413                           intcon2	equ	0xFF1
 30414                           intcon3	equ	0xFF0
 30415                           indf0	equ	0xFEF
 30416                           postinc0	equ	0xFEE
 30417                           fsr0h	equ	0xFEA
 30418                           fsr0l	equ	0xFE9
 30419                           wreg	equ	0xFE8
 30420                           indf1	equ	0xFE7
 30421                           postdec1	equ	0xFE5
 30422                           plusw1	equ	0xFE3
 30423                           fsr1h	equ	0xFE2
 30424                           fsr1l	equ	0xFE1
 30425                           indf2	equ	0xFDF
 30426                           postinc2	equ	0xFDE
 30427                           postdec2	equ	0xFDD
 30428                           plusw2	equ	0xFDB
 30429                           fsr2h	equ	0xFDA
 30430                           fsr2l	equ	0xFD9
 30431                           status	equ	0xFD8
 30432                           
 30433 ;; *************** function _bootloader_get_rec_checksum *****************
 30434 ;; Defined at:
 30435 ;;		line 469 in file "bootloader.c"
 30436 ;; Parameters:    Size  Location     Type
 30437 ;;		None
 30438 ;; Auto vars:     Size  Location     Type
 30439 ;;		None
 30440 ;; Return value:  Size  Location     Type
 30441 ;;                  1    wreg      unsigned char 
 30442 ;; Registers used:
 30443 ;;		wreg, status,2
 30444 ;; Tracked objects:
 30445 ;;		On entry : 0/0
 30446 ;;		On exit  : 0/0
 30447 ;;		Unchanged: 0/0
 30448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30453 ;;Total ram usage:        0 bytes
 30454 ;; Hardware stack levels used:    1
 30455 ;; This function calls:
 30456 ;;		Nothing
 30457 ;; This function is called by:
 30458 ;;		__fill_buffer_get_bootloader_details
 30459 ;; This function uses a non-reentrant model
 30460 ;;
 30461                           
 30462                           	psect	text143
 30463  007E40                     __ptext143:
 30464                           	opt stack 0
 30465  007E40                     _bootloader_get_rec_checksum:
 30466                           	opt stack 28
 30467                           
 30468                           ;bootloader.c: 471: return hex_file_entry.checksum;
 30469                           
 30470                           ; BSR set to: 1
 30471                           ;incstack = 0
 30472  007E40  0101               	movlb	1	; () banked
 30473  007E42  51D9               	movf	(_hex_file_entry+21)& (0+255),w,b
 30474  007E44  0012               	return	
 30475  007E46                     __end_of_bootloader_get_rec_checksum:
 30476                           	opt stack 0
 30477                           tosu	equ	0xFFF
 30478                           tosh	equ	0xFFE
 30479                           tosl	equ	0xFFD
 30480                           pclath	equ	0xFFA
 30481                           tblptru	equ	0xFF8
 30482                           tblptrh	equ	0xFF7
 30483                           tblptrl	equ	0xFF6
 30484                           tablat	equ	0xFF5
 30485                           prodh	equ	0xFF4
 30486                           prodl	equ	0xFF3
 30487                           intcon	equ	0xFF2
 30488                           intcon2	equ	0xFF1
 30489                           intcon3	equ	0xFF0
 30490                           indf0	equ	0xFEF
 30491                           postinc0	equ	0xFEE
 30492                           fsr0h	equ	0xFEA
 30493                           fsr0l	equ	0xFE9
 30494                           wreg	equ	0xFE8
 30495                           indf1	equ	0xFE7
 30496                           postdec1	equ	0xFE5
 30497                           plusw1	equ	0xFE3
 30498                           fsr1h	equ	0xFE2
 30499                           fsr1l	equ	0xFE1
 30500                           indf2	equ	0xFDF
 30501                           postinc2	equ	0xFDE
 30502                           postdec2	equ	0xFDD
 30503                           plusw2	equ	0xFDB
 30504                           fsr2h	equ	0xFDA
 30505                           fsr2l	equ	0xFD9
 30506                           status	equ	0xFD8
 30507                           
 30508 ;; *************** function _bootloader_get_rec_address *****************
 30509 ;; Defined at:
 30510 ;;		line 453 in file "bootloader.c"
 30511 ;; Parameters:    Size  Location     Type
 30512 ;;		None
 30513 ;; Auto vars:     Size  Location     Type
 30514 ;;		None
 30515 ;; Return value:  Size  Location     Type
 30516 ;;                  2    0[COMRAM] unsigned int 
 30517 ;; Registers used:
 30518 ;;		None
 30519 ;; Tracked objects:
 30520 ;;		On entry : 0/0
 30521 ;;		On exit  : 0/0
 30522 ;;		Unchanged: 0/0
 30523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30527 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30528 ;;Total ram usage:        2 bytes
 30529 ;; Hardware stack levels used:    1
 30530 ;; This function calls:
 30531 ;;		Nothing
 30532 ;; This function is called by:
 30533 ;;		__display_failed
 30534 ;;		__fill_buffer_get_bootloader_details
 30535 ;; This function uses a non-reentrant model
 30536 ;;
 30537                           
 30538                           	psect	text144
 30539  007DDC                     __ptext144:
 30540                           	opt stack 0
 30541  007DDC                     _bootloader_get_rec_address:
 30542                           	opt stack 28
 30543                           
 30544                           ;bootloader.c: 456: return hex_file_entry.address;
 30545                           
 30546                           ; BSR set to: 1
 30547                           ;incstack = 0
 30548  007DDC  C1C6  F001         	movff	_hex_file_entry+2,?_bootloader_get_rec_address
 30549  007DE0  C1C7  F002         	movff	_hex_file_entry+3,?_bootloader_get_rec_address+1
 30550  007DE4  0012               	return		;funcret
 30551  007DE6                     __end_of_bootloader_get_rec_address:
 30552                           	opt stack 0
 30553                           tosu	equ	0xFFF
 30554                           tosh	equ	0xFFE
 30555                           tosl	equ	0xFFD
 30556                           pclath	equ	0xFFA
 30557                           tblptru	equ	0xFF8
 30558                           tblptrh	equ	0xFF7
 30559                           tblptrl	equ	0xFF6
 30560                           tablat	equ	0xFF5
 30561                           prodh	equ	0xFF4
 30562                           prodl	equ	0xFF3
 30563                           intcon	equ	0xFF2
 30564                           intcon2	equ	0xFF1
 30565                           intcon3	equ	0xFF0
 30566                           indf0	equ	0xFEF
 30567                           postinc0	equ	0xFEE
 30568                           fsr0h	equ	0xFEA
 30569                           fsr0l	equ	0xFE9
 30570                           wreg	equ	0xFE8
 30571                           indf1	equ	0xFE7
 30572                           postdec1	equ	0xFE5
 30573                           plusw1	equ	0xFE3
 30574                           fsr1h	equ	0xFE2
 30575                           fsr1l	equ	0xFE1
 30576                           indf2	equ	0xFDF
 30577                           postinc2	equ	0xFDE
 30578                           postdec2	equ	0xFDD
 30579                           plusw2	equ	0xFDB
 30580                           fsr2h	equ	0xFDA
 30581                           fsr2l	equ	0xFD9
 30582                           status	equ	0xFD8
 30583                           
 30584 ;; *************** function _bootloader_get_flashPagesWritten *****************
 30585 ;; Defined at:
 30586 ;;		line 479 in file "bootloader.c"
 30587 ;; Parameters:    Size  Location     Type
 30588 ;;		None
 30589 ;; Auto vars:     Size  Location     Type
 30590 ;;		None
 30591 ;; Return value:  Size  Location     Type
 30592 ;;                  2    0[COMRAM] unsigned int 
 30593 ;; Registers used:
 30594 ;;		None
 30595 ;; Tracked objects:
 30596 ;;		On entry : 0/0
 30597 ;;		On exit  : 0/0
 30598 ;;		Unchanged: 0/0
 30599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30600 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30603 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30604 ;;Total ram usage:        2 bytes
 30605 ;; Hardware stack levels used:    1
 30606 ;; This function calls:
 30607 ;;		Nothing
 30608 ;; This function is called by:
 30609 ;;		__display_programming
 30610 ;;		__display_done
 30611 ;;		__fill_buffer_get_bootloader_details
 30612 ;; This function uses a non-reentrant model
 30613 ;;
 30614                           
 30615                           	psect	text145
 30616  007DE6                     __ptext145:
 30617                           	opt stack 0
 30618  007DE6                     _bootloader_get_flashPagesWritten:
 30619                           	opt stack 28
 30620                           
 30621                           ;bootloader.c: 481: return flash_pages_written;
 30622                           
 30623                           ;incstack = 0
 30624  007DE6  C166  F001         	movff	_flash_pages_written,?_bootloader_get_flashPagesWritten
 30625  007DEA  C167  F002         	movff	_flash_pages_written+1,?_bootloader_get_flashPagesWritten+1
 30626  007DEE  0012               	return		;funcret
 30627  007DF0                     __end_of_bootloader_get_flashPagesWritten:
 30628                           	opt stack 0
 30629                           tosu	equ	0xFFF
 30630                           tosh	equ	0xFFE
 30631                           tosl	equ	0xFFD
 30632                           pclath	equ	0xFFA
 30633                           tblptru	equ	0xFF8
 30634                           tblptrh	equ	0xFF7
 30635                           tblptrl	equ	0xFF6
 30636                           tablat	equ	0xFF5
 30637                           prodh	equ	0xFF4
 30638                           prodl	equ	0xFF3
 30639                           intcon	equ	0xFF2
 30640                           intcon2	equ	0xFF1
 30641                           intcon3	equ	0xFF0
 30642                           indf0	equ	0xFEF
 30643                           postinc0	equ	0xFEE
 30644                           fsr0h	equ	0xFEA
 30645                           fsr0l	equ	0xFE9
 30646                           wreg	equ	0xFE8
 30647                           indf1	equ	0xFE7
 30648                           postdec1	equ	0xFE5
 30649                           plusw1	equ	0xFE3
 30650                           fsr1h	equ	0xFE2
 30651                           fsr1l	equ	0xFE1
 30652                           indf2	equ	0xFDF
 30653                           postinc2	equ	0xFDE
 30654                           postdec2	equ	0xFDD
 30655                           plusw2	equ	0xFDB
 30656                           fsr2h	equ	0xFDA
 30657                           fsr2l	equ	0xFD9
 30658                           status	equ	0xFD8
 30659                           
 30660 ;; *************** function _bootloader_get_file_size *****************
 30661 ;; Defined at:
 30662 ;;		line 428 in file "bootloader.c"
 30663 ;; Parameters:    Size  Location     Type
 30664 ;;		None
 30665 ;; Auto vars:     Size  Location     Type
 30666 ;;		None
 30667 ;; Return value:  Size  Location     Type
 30668 ;;                  4    0[COMRAM] unsigned long 
 30669 ;; Registers used:
 30670 ;;		None
 30671 ;; Tracked objects:
 30672 ;;		On entry : 0/0
 30673 ;;		On exit  : 0/0
 30674 ;;		Unchanged: 0/0
 30675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30676 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30679 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30680 ;;Total ram usage:        4 bytes
 30681 ;; Hardware stack levels used:    1
 30682 ;; This function calls:
 30683 ;;		Nothing
 30684 ;; This function is called by:
 30685 ;;		__display_found
 30686 ;;		__fill_buffer_get_bootloader_details
 30687 ;; This function uses a non-reentrant model
 30688 ;;
 30689                           
 30690                           	psect	text146
 30691  007D26                     __ptext146:
 30692                           	opt stack 0
 30693  007D26                     _bootloader_get_file_size:
 30694                           	opt stack 28
 30695                           
 30696                           ;bootloader.c: 430: return hex_file_size;
 30697                           
 30698                           ;incstack = 0
 30699  007D26  C078  F001         	movff	_hex_file_size,?_bootloader_get_file_size
 30700  007D2A  C079  F002         	movff	_hex_file_size+1,?_bootloader_get_file_size+1
 30701  007D2E  C07A  F003         	movff	_hex_file_size+2,?_bootloader_get_file_size+2
 30702  007D32  C07B  F004         	movff	_hex_file_size+3,?_bootloader_get_file_size+3
 30703  007D36  0012               	return		;funcret
 30704  007D38                     __end_of_bootloader_get_file_size:
 30705                           	opt stack 0
 30706                           tosu	equ	0xFFF
 30707                           tosh	equ	0xFFE
 30708                           tosl	equ	0xFFD
 30709                           pclath	equ	0xFFA
 30710                           tblptru	equ	0xFF8
 30711                           tblptrh	equ	0xFF7
 30712                           tblptrl	equ	0xFF6
 30713                           tablat	equ	0xFF5
 30714                           prodh	equ	0xFF4
 30715                           prodl	equ	0xFF3
 30716                           intcon	equ	0xFF2
 30717                           intcon2	equ	0xFF1
 30718                           intcon3	equ	0xFF0
 30719                           indf0	equ	0xFEF
 30720                           postinc0	equ	0xFEE
 30721                           fsr0h	equ	0xFEA
 30722                           fsr0l	equ	0xFE9
 30723                           wreg	equ	0xFE8
 30724                           indf1	equ	0xFE7
 30725                           postdec1	equ	0xFE5
 30726                           plusw1	equ	0xFE3
 30727                           fsr1h	equ	0xFE2
 30728                           fsr1l	equ	0xFE1
 30729                           indf2	equ	0xFDF
 30730                           postinc2	equ	0xFDE
 30731                           postdec2	equ	0xFDD
 30732                           plusw2	equ	0xFDB
 30733                           fsr2h	equ	0xFDA
 30734                           fsr2l	equ	0xFD9
 30735                           status	equ	0xFD8
 30736                           
 30737 ;; *************** function _bootloader_get_error *****************
 30738 ;; Defined at:
 30739 ;;		line 443 in file "bootloader.c"
 30740 ;; Parameters:    Size  Location     Type
 30741 ;;		None
 30742 ;; Auto vars:     Size  Location     Type
 30743 ;;		None
 30744 ;; Return value:  Size  Location     Type
 30745 ;;                  1    wreg      enum E7002
 30746 ;; Registers used:
 30747 ;;		wreg, status,2
 30748 ;; Tracked objects:
 30749 ;;		On entry : 0/0
 30750 ;;		On exit  : 0/0
 30751 ;;		Unchanged: 0/0
 30752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30757 ;;Total ram usage:        0 bytes
 30758 ;; Hardware stack levels used:    1
 30759 ;; This function calls:
 30760 ;;		Nothing
 30761 ;; This function is called by:
 30762 ;;		__display_failed
 30763 ;;		__fill_buffer_get_bootloader_details
 30764 ;; This function uses a non-reentrant model
 30765 ;;
 30766                           
 30767                           	psect	text147
 30768  007E46                     __ptext147:
 30769                           	opt stack 0
 30770  007E46                     _bootloader_get_error:
 30771                           	opt stack 28
 30772                           
 30773                           ;bootloader.c: 445: return last_error;
 30774                           
 30775                           ;incstack = 0
 30776  007E46  0100               	movlb	0	; () banked
 30777  007E48  5196               	movf	_last_error& (0+255),w,b
 30778  007E4A  0012               	return	
 30779  007E4C                     __end_of_bootloader_get_error:
 30780                           	opt stack 0
 30781                           tosu	equ	0xFFF
 30782                           tosh	equ	0xFFE
 30783                           tosl	equ	0xFFD
 30784                           pclath	equ	0xFFA
 30785                           tblptru	equ	0xFF8
 30786                           tblptrh	equ	0xFF7
 30787                           tblptrl	equ	0xFF6
 30788                           tablat	equ	0xFF5
 30789                           prodh	equ	0xFF4
 30790                           prodl	equ	0xFF3
 30791                           intcon	equ	0xFF2
 30792                           intcon2	equ	0xFF1
 30793                           intcon3	equ	0xFF0
 30794                           indf0	equ	0xFEF
 30795                           postinc0	equ	0xFEE
 30796                           fsr0h	equ	0xFEA
 30797                           fsr0l	equ	0xFE9
 30798                           wreg	equ	0xFE8
 30799                           indf1	equ	0xFE7
 30800                           postdec1	equ	0xFE5
 30801                           plusw1	equ	0xFE3
 30802                           fsr1h	equ	0xFE2
 30803                           fsr1l	equ	0xFE1
 30804                           indf2	equ	0xFDF
 30805                           postinc2	equ	0xFDE
 30806                           postdec2	equ	0xFDD
 30807                           plusw2	equ	0xFDB
 30808                           fsr2h	equ	0xFDA
 30809                           fsr2l	equ	0xFD9
 30810                           status	equ	0xFD8
 30811                           
 30812 ;; *************** function _bootloader_get_entries *****************
 30813 ;; Defined at:
 30814 ;;		line 433 in file "bootloader.c"
 30815 ;; Parameters:    Size  Location     Type
 30816 ;;		None
 30817 ;; Auto vars:     Size  Location     Type
 30818 ;;		None
 30819 ;; Return value:  Size  Location     Type
 30820 ;;                  2    0[COMRAM] unsigned int 
 30821 ;; Registers used:
 30822 ;;		None
 30823 ;; Tracked objects:
 30824 ;;		On entry : 0/0
 30825 ;;		On exit  : 0/0
 30826 ;;		Unchanged: 0/0
 30827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30828 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30831 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30832 ;;Total ram usage:        2 bytes
 30833 ;; Hardware stack levels used:    1
 30834 ;; This function calls:
 30835 ;;		Nothing
 30836 ;; This function is called by:
 30837 ;;		__display_verify
 30838 ;;		__display_failed
 30839 ;;		__display_programming
 30840 ;;		__fill_buffer_get_bootloader_details
 30841 ;; This function uses a non-reentrant model
 30842 ;;
 30843                           
 30844                           	psect	text148
 30845  007DF0                     __ptext148:
 30846                           	opt stack 0
 30847  007DF0                     _bootloader_get_entries:
 30848                           	opt stack 28
 30849                           
 30850                           ;bootloader.c: 435: return hex_file_entries;
 30851                           
 30852                           ; BSR set to: 0
 30853                           ;incstack = 0
 30854  007DF0  C16A  F001         	movff	_hex_file_entries,?_bootloader_get_entries
 30855  007DF4  C16B  F002         	movff	_hex_file_entries+1,?_bootloader_get_entries+1
 30856  007DF8  0012               	return		;funcret
 30857  007DFA                     __end_of_bootloader_get_entries:
 30858                           	opt stack 0
 30859                           tosu	equ	0xFFF
 30860                           tosh	equ	0xFFE
 30861                           tosl	equ	0xFFD
 30862                           pclath	equ	0xFFA
 30863                           tblptru	equ	0xFF8
 30864                           tblptrh	equ	0xFF7
 30865                           tblptrl	equ	0xFF6
 30866                           tablat	equ	0xFF5
 30867                           prodh	equ	0xFF4
 30868                           prodl	equ	0xFF3
 30869                           intcon	equ	0xFF2
 30870                           intcon2	equ	0xFF1
 30871                           intcon3	equ	0xFF0
 30872                           indf0	equ	0xFEF
 30873                           postinc0	equ	0xFEE
 30874                           fsr0h	equ	0xFEA
 30875                           fsr0l	equ	0xFE9
 30876                           wreg	equ	0xFE8
 30877                           indf1	equ	0xFE7
 30878                           postdec1	equ	0xFE5
 30879                           plusw1	equ	0xFE3
 30880                           fsr1h	equ	0xFE2
 30881                           fsr1l	equ	0xFE1
 30882                           indf2	equ	0xFDF
 30883                           postinc2	equ	0xFDE
 30884                           postdec2	equ	0xFDD
 30885                           plusw2	equ	0xFDB
 30886                           fsr2h	equ	0xFDA
 30887                           fsr2l	equ	0xFD9
 30888                           status	equ	0xFD8
 30889                           
 30890 ;; *************** function __fill_buffer_find_file *****************
 30891 ;; Defined at:
 30892 ;;		line 346 in file "api.c"
 30893 ;; Parameters:    Size  Location     Type
 30894 ;;  inBuffer        2   67[COMRAM] PTR unsigned char 
 30895 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 30896 ;;  outBuffer       2   69[COMRAM] PTR unsigned char 
 30897 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 30898 ;; Auto vars:     Size  Location     Type
 30899 ;;  cntr            1   75[COMRAM] unsigned char 
 30900 ;; Return value:  Size  Location     Type
 30901 ;;                  1    wreg      void 
 30902 ;; Registers used:
 30903 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30904 ;; Tracked objects:
 30905 ;;		On entry : 0/0
 30906 ;;		On exit  : 0/0
 30907 ;;		Unchanged: 0/0
 30908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30909 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30910 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30911 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30912 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30913 ;;Total ram usage:        9 bytes
 30914 ;; Hardware stack levels used:    1
 30915 ;; Hardware stack levels required when called:    6
 30916 ;; This function calls:
 30917 ;;		_fat_find_file
 30918 ;; This function is called by:
 30919 ;;		_api_prepare
 30920 ;; This function uses a non-reentrant model
 30921 ;;
 30922                           
 30923                           	psect	text149
 30924  0059A4                     __ptext149:
 30925                           	opt stack 0
 30926  0059A4                     __fill_buffer_find_file:
 30927                           	opt stack 23
 30928                           
 30929                           ;api.c: 348: uint8_t cntr;;api.c: 351: outBuffer[0] = DATAREQUEST_FIND_FILE;
 30930                           
 30931                           ;incstack = 0
 30932  0059A4  C046  FFD9         	movff	__fill_buffer_find_file@outBuffer,fsr2l
 30933  0059A8  C047  FFDA         	movff	__fill_buffer_find_file@outBuffer+1,fsr2h
 30934  0059AC  0E81               	movlw	129
 30935  0059AE  6EDF               	movwf	indf2,c
 30936                           
 30937                           ;api.c: 354: outBuffer[1] = (uint8_t) 0xC125;
 30938  0059B0  EE20 F001          	lfsr	2,1
 30939  0059B4  5046               	movf	__fill_buffer_find_file@outBuffer,w,c
 30940  0059B6  26D9               	addwf	fsr2l,f,c
 30941  0059B8  5047               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 30942  0059BA  22DA               	addwfc	fsr2h,f,c
 30943  0059BC  0E25               	movlw	37
 30944  0059BE  6EDF               	movwf	indf2,c
 30945                           
 30946                           ;api.c: 355: outBuffer[2] = 0xC125 >> 8;
 30947  0059C0  EE20 F002          	lfsr	2,2
 30948  0059C4  5046               	movf	__fill_buffer_find_file@outBuffer,w,c
 30949  0059C6  26D9               	addwf	fsr2l,f,c
 30950  0059C8  5047               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 30951  0059CA  22DA               	addwfc	fsr2h,f,c
 30952  0059CC  0EC1               	movlw	193
 30953  0059CE  6EDF               	movwf	indf2,c
 30954                           
 30955                           ;api.c: 358: outBuffer[3] = fat_find_file(&inBuffer[1], &inBuffer[9]);
 30956  0059D0  0E01               	movlw	1
 30957  0059D2  2444               	addwf	__fill_buffer_find_file@inBuffer,w,c
 30958  0059D4  6E30               	movwf	fat_find_file@name,c
 30959  0059D6  0E00               	movlw	0
 30960  0059D8  2045               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 30961  0059DA  6E31               	movwf	fat_find_file@name+1,c
 30962  0059DC  0E09               	movlw	9
 30963  0059DE  2444               	addwf	__fill_buffer_find_file@inBuffer,w,c
 30964  0059E0  6E32               	movwf	fat_find_file@extension,c
 30965  0059E2  0E00               	movlw	0
 30966  0059E4  2045               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 30967  0059E6  6E33               	movwf	fat_find_file@extension+1,c
 30968  0059E8  EC65  F029         	call	_fat_find_file	;wreg free
 30969  0059EC  6E48               	movwf	??__fill_buffer_find_file& (0+255),c
 30970  0059EE  EE20 F003          	lfsr	2,3
 30971  0059F2  5046               	movf	__fill_buffer_find_file@outBuffer,w,c
 30972  0059F4  26D9               	addwf	fsr2l,f,c
 30973  0059F6  5047               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 30974  0059F8  22DA               	addwfc	fsr2h,f,c
 30975  0059FA  C048  FFDF         	movff	??__fill_buffer_find_file,indf2
 30976                           
 30977                           ;api.c: 361: for(cntr=0; cntr<11; ++cntr)
 30978  0059FE  0E00               	movlw	0
 30979  005A00  6E4C               	movwf	__fill_buffer_find_file@cntr,c
 30980  005A02                     l12928:
 30981  005A02  0E0A               	movlw	10
 30982  005A04  644C               	cpfsgt	__fill_buffer_find_file@cntr,c
 30983  005A06  D001               	goto	l2566
 30984  005A08  0012               	return	
 30985  005A0A                     l2566:
 30986                           
 30987                           ;api.c: 362: {;api.c: 363: outBuffer[cntr+12] = inBuffer[cntr+1];
 30988  005A0A  504C               	movf	__fill_buffer_find_file@cntr,w,c
 30989  005A0C  6E48               	movwf	??__fill_buffer_find_file& (0+255),c
 30990  005A0E  6A49               	clrf	(??__fill_buffer_find_file+1)& (0+255),c
 30991  005A10  0E01               	movlw	1
 30992  005A12  2648               	addwf	??__fill_buffer_find_file,f,c
 30993  005A14  0E00               	movlw	0
 30994  005A16  2249               	addwfc	??__fill_buffer_find_file+1,f,c
 30995  005A18  5048               	movf	??__fill_buffer_find_file,w,c
 30996  005A1A  2444               	addwf	__fill_buffer_find_file@inBuffer,w,c
 30997  005A1C  6ED9               	movwf	fsr2l,c
 30998  005A1E  5049               	movf	??__fill_buffer_find_file+1,w,c
 30999  005A20  2045               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 31000  005A22  6EDA               	movwf	fsr2h,c
 31001  005A24  504C               	movf	__fill_buffer_find_file@cntr,w,c
 31002  005A26  6E4A               	movwf	(??__fill_buffer_find_file+2)& (0+255),c
 31003  005A28  6A4B               	clrf	(??__fill_buffer_find_file+3)& (0+255),c
 31004  005A2A  0E0C               	movlw	12
 31005  005A2C  264A               	addwf	??__fill_buffer_find_file+2,f,c
 31006  005A2E  0E00               	movlw	0
 31007  005A30  224B               	addwfc	??__fill_buffer_find_file+3,f,c
 31008  005A32  504A               	movf	??__fill_buffer_find_file+2,w,c
 31009  005A34  2446               	addwf	__fill_buffer_find_file@outBuffer,w,c
 31010  005A36  6EE1               	movwf	fsr1l,c
 31011  005A38  504B               	movf	??__fill_buffer_find_file+3,w,c
 31012  005A3A  2047               	addwfc	__fill_buffer_find_file@outBuffer+1,w,c
 31013  005A3C  6EE2               	movwf	fsr1h,c
 31014  005A3E  CFDF FFE7          	movff	indf2,indf1
 31015  005A42  2A4C               	incf	__fill_buffer_find_file@cntr,f,c
 31016  005A44  D7DE               	goto	l12928
 31017  005A46                     __end_of__fill_buffer_find_file:
 31018                           	opt stack 0
 31019                           tosu	equ	0xFFF
 31020                           tosh	equ	0xFFE
 31021                           tosl	equ	0xFFD
 31022                           pclath	equ	0xFFA
 31023                           tblptru	equ	0xFF8
 31024                           tblptrh	equ	0xFF7
 31025                           tblptrl	equ	0xFF6
 31026                           tablat	equ	0xFF5
 31027                           prodh	equ	0xFF4
 31028                           prodl	equ	0xFF3
 31029                           intcon	equ	0xFF2
 31030                           intcon2	equ	0xFF1
 31031                           intcon3	equ	0xFF0
 31032                           indf0	equ	0xFEF
 31033                           postinc0	equ	0xFEE
 31034                           fsr0h	equ	0xFEA
 31035                           fsr0l	equ	0xFE9
 31036                           wreg	equ	0xFE8
 31037                           indf1	equ	0xFE7
 31038                           postdec1	equ	0xFE5
 31039                           plusw1	equ	0xFE3
 31040                           fsr1h	equ	0xFE2
 31041                           fsr1l	equ	0xFE1
 31042                           indf2	equ	0xFDF
 31043                           postinc2	equ	0xFDE
 31044                           postdec2	equ	0xFDD
 31045                           plusw2	equ	0xFDB
 31046                           fsr2h	equ	0xFDA
 31047                           fsr2l	equ	0xFD9
 31048                           status	equ	0xFD8
 31049                           
 31050 ;; *************** function _api_parse *****************
 31051 ;; Defined at:
 31052 ;;		line 124 in file "api.c"
 31053 ;; Parameters:    Size  Location     Type
 31054 ;;  inBuffer        2   51[BANK0 ] PTR unsigned char 
 31055 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 31056 ;;  receivedData    1   53[BANK0 ] unsigned char 
 31057 ;; Auto vars:     Size  Location     Type
 31058 ;;  idx             1   87[COMRAM] unsigned char 
 31059 ;; Return value:  Size  Location     Type
 31060 ;;                  1    wreg      void 
 31061 ;; Registers used:
 31062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31063 ;; Tracked objects:
 31064 ;;		On entry : 0/0
 31065 ;;		On exit  : 0/0
 31066 ;;		Unchanged: 0/0
 31067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31068 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31069 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31070 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31071 ;;      Totals:         3       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31072 ;;Total ram usage:        6 bytes
 31073 ;; Hardware stack levels used:    1
 31074 ;; Hardware stack levels required when called:   10
 31075 ;; This function calls:
 31076 ;;		__parse_command_long
 31077 ;;		__parse_command_short
 31078 ;; This function is called by:
 31079 ;;		_main
 31080 ;;		_APP_DeviceCustomHIDTasks
 31081 ;; This function uses a non-reentrant model
 31082 ;;
 31083                           
 31084                           	psect	text150
 31085  004C8A                     __ptext150:
 31086                           	opt stack 0
 31087  004C8A                     _api_parse:
 31088                           	opt stack 20
 31089                           
 31090                           ;api.c: 128: uint8_t idx;;api.c: 130: if(inBuffer[0]>0x7F)
 31091                           
 31092                           ;incstack = 0
 31093  004C8A  C0E8  FFD9         	movff	api_parse@inBuffer,fsr2l
 31094  004C8E  C0E9  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 31095  004C92  0E7F               	movlw	127
 31096  004C94  64DF               	cpfsgt	indf2,c
 31097  004C96  D001               	goto	l2524
 31098  004C98  0012               	return	
 31099  004C9A                     l2524:
 31100                           
 31101                           ;api.c: 135: };api.c: 137: idx = 1;
 31102  004C9A  0E01               	movlw	1
 31103  004C9C  6E58               	movwf	api_parse@idx,c
 31104                           
 31105                           ;api.c: 138: while(idx<receivedDataLength)
 31106  004C9E  D058               	goto	l2531
 31107  004CA0                     
 31108                           ;api.c: 139: {;api.c: 141: if(inBuffer[idx]==COMMAND_STOP_PARSING)
 31109  004CA0  5058               	movf	api_parse@idx,w,c
 31110  004CA2  0D01               	mullw	1
 31111  004CA4  50F3               	movf	prodl,w,c
 31112  004CA6  0100               	movlb	0	; () banked
 31113  004CA8  25E8               	addwf	api_parse@inBuffer& (0+255),w,b
 31114  004CAA  6ED9               	movwf	fsr2l,c
 31115  004CAC  50F4               	movf	prodh,w,c
 31116  004CAE  21E9               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 31117  004CB0  6EDA               	movwf	fsr2h,c
 31118  004CB2  0E99               	movlw	153
 31119  004CB4  18DE               	xorwf	postinc2,w,c
 31120  004CB6  B4D8               	btfsc	status,2,c
 31121  004CB8  0012               	return	
 31122  004CBA  D02E               	goto	l2529
 31123  004CBC                     
 31124                           ; BSR set to: 0
 31125                           ;api.c: 149: _parse_command_short(inBuffer[idx]);
 31126                           
 31127                           ; BSR set to: 0
 31128  004CBC  5058               	movf	api_parse@idx,w,c
 31129  004CBE  0D01               	mullw	1
 31130  004CC0  50F3               	movf	prodl,w,c
 31131  004CC2  25E8               	addwf	api_parse@inBuffer& (0+255),w,b
 31132  004CC4  6ED9               	movwf	fsr2l,c
 31133  004CC6  50F4               	movf	prodh,w,c
 31134  004CC8  21E9               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 31135  004CCA  6EDA               	movwf	fsr2h,c
 31136  004CCC  50DF               	movf	indf2,w,c
 31137  004CCE  ECA1  F030         	call	__parse_command_short
 31138  004CD2  D00C               	goto	l13452
 31139  004CD4                     
 31140                           ;api.c: 154: _parse_command_short(inBuffer[idx]);
 31141  004CD4  5058               	movf	api_parse@idx,w,c
 31142  004CD6  0D01               	mullw	1
 31143  004CD8  50F3               	movf	prodl,w,c
 31144  004CDA  0100               	movlb	0	; () banked
 31145  004CDC  25E8               	addwf	api_parse@inBuffer& (0+255),w,b
 31146  004CDE  6ED9               	movwf	fsr2l,c
 31147  004CE0  50F4               	movf	prodh,w,c
 31148  004CE2  21E9               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 31149  004CE4  6EDA               	movwf	fsr2h,c
 31150  004CE6  50DF               	movf	indf2,w,c
 31151  004CE8  ECA1  F030         	call	__parse_command_short
 31152  004CEC                     l13452:
 31153                           
 31154                           ;api.c: 155: ++idx;
 31155  004CEC  2A58               	incf	api_parse@idx,f,c
 31156                           
 31157                           ;api.c: 156: break;
 31158  004CEE  D030               	goto	l2531
 31159  004CF0                     
 31160                           ;api.c: 159: idx += _parse_command_long(inBuffer[idx]);
 31161  004CF0  5058               	movf	api_parse@idx,w,c
 31162  004CF2  0D01               	mullw	1
 31163  004CF4  50F3               	movf	prodl,w,c
 31164  004CF6  0100               	movlb	0	; () banked
 31165  004CF8  25E8               	addwf	api_parse@inBuffer& (0+255),w,b
 31166  004CFA  6ED9               	movwf	fsr2l,c
 31167  004CFC  50F4               	movf	prodh,w,c
 31168  004CFE  21E9               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 31169  004D00  6EDA               	movwf	fsr2h,c
 31170  004D02  50DF               	movf	indf2,w,c
 31171  004D04  6E56               	movwf	??_api_parse& (0+255),c
 31172  004D06  6A57               	clrf	(??_api_parse+1)& (0+255),c
 31173  004D08  C056  F053         	movff	??_api_parse,__parse_command_long@data
 31174  004D0C  C057  F054         	movff	??_api_parse+1,__parse_command_long@data+1
 31175  004D10  EC87  F02F         	call	__parse_command_long	;wreg free
 31176  004D14  2658               	addwf	api_parse@idx,f,c
 31177                           
 31178                           ;api.c: 160: break;
 31179  004D16  D01C               	goto	l2531
 31180  004D18                     l2529:
 31181  004D18  5058               	movf	api_parse@idx,w,c
 31182  004D1A  0D01               	mullw	1
 31183  004D1C  50F3               	movf	prodl,w,c
 31184  004D1E  0100               	movlb	0	; () banked
 31185  004D20  25E8               	addwf	api_parse@inBuffer& (0+255),w,b
 31186  004D22  6ED9               	movwf	fsr2l,c
 31187  004D24  50F4               	movf	prodh,w,c
 31188  004D26  21E9               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 31189  004D28  6EDA               	movwf	fsr2h,c
 31190  004D2A  50DF               	movf	indf2,w,c
 31191  004D2C  0BF0               	andlw	240
 31192  004D2E  6E56               	movwf	??_api_parse& (0+255),c
 31193  004D30  6A57               	clrf	(??_api_parse+1)& (0+255),c
 31194                           
 31195                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31196                           ; Switch size 1, requested type "space"
 31197                           ; Number of cases is 1, Range of values is 0 to 0
 31198                           ; switch strategies available:
 31199                           ; Name         Instructions Cycles
 31200                           ; simple_byte            4     3 (average)
 31201                           ;	Chosen strategy is simple_byte
 31202  004D32  5057               	movf	??_api_parse+1,w,c
 31203  004D34  0A00               	xorlw	0	; case 0
 31204  004D36  A4D8               	btfss	status,2,c
 31205  004D38  0012               	return	
 31206                           
 31207                           ; BSR set to: 0
 31208                           ; Switch size 1, requested type "space"
 31209                           ; Number of cases is 3, Range of values is 32 to 80
 31210                           ; switch strategies available:
 31211                           ; Name         Instructions Cycles
 31212                           ; simple_byte           10     6 (average)
 31213                           ;	Chosen strategy is simple_byte
 31214  004D3A  5056               	movf	??_api_parse,w,c
 31215  004D3C  0A20               	xorlw	32	; case 32
 31216  004D3E  B4D8               	btfsc	status,2,c
 31217  004D40  D7BD               	goto	l2530
 31218  004D42  0A10               	xorlw	16	; case 48
 31219  004D44  B4D8               	btfsc	status,2,c
 31220  004D46  D7C6               	goto	l2532
 31221  004D48  0A60               	xorlw	96	; case 80
 31222  004D4A  A4D8               	btfss	status,2,c
 31223  004D4C  0012               	return	
 31224  004D4E  D7D0               	goto	l2533
 31225  004D50                     l2531:
 31226                           
 31227                           ; BSR set to: 0
 31228                           
 31229                           ; BSR set to: 0
 31230  004D50  0100               	movlb	0	; () banked
 31231  004D52  51EA               	movf	api_parse@receivedDataLength& (0+255),w,b
 31232  004D54  5C58               	subwf	api_parse@idx,w,c
 31233  004D56  B0D8               	btfsc	status,0,c
 31234  004D58  0012               	return	
 31235  004D5A  D7A2               	goto	l2527
 31236  004D5C                     __end_of_api_parse:
 31237                           	opt stack 0
 31238                           tosu	equ	0xFFF
 31239                           tosh	equ	0xFFE
 31240                           tosl	equ	0xFFD
 31241                           pclath	equ	0xFFA
 31242                           tblptru	equ	0xFF8
 31243                           tblptrh	equ	0xFF7
 31244                           tblptrl	equ	0xFF6
 31245                           tablat	equ	0xFF5
 31246                           prodh	equ	0xFF4
 31247                           prodl	equ	0xFF3
 31248                           intcon	equ	0xFF2
 31249                           intcon2	equ	0xFF1
 31250                           intcon3	equ	0xFF0
 31251                           indf0	equ	0xFEF
 31252                           postinc0	equ	0xFEE
 31253                           fsr0h	equ	0xFEA
 31254                           fsr0l	equ	0xFE9
 31255                           wreg	equ	0xFE8
 31256                           indf1	equ	0xFE7
 31257                           postdec1	equ	0xFE5
 31258                           plusw1	equ	0xFE3
 31259                           fsr1h	equ	0xFE2
 31260                           fsr1l	equ	0xFE1
 31261                           indf2	equ	0xFDF
 31262                           postinc2	equ	0xFDE
 31263                           postdec2	equ	0xFDD
 31264                           plusw2	equ	0xFDB
 31265                           fsr2h	equ	0xFDA
 31266                           fsr2l	equ	0xFD9
 31267                           status	equ	0xFD8
 31268                           
 31269 ;; *************** function __parse_command_short *****************
 31270 ;; Defined at:
 31271 ;;		line 415 in file "api.c"
 31272 ;; Parameters:    Size  Location     Type
 31273 ;;  cmd             1    wreg     unsigned char 
 31274 ;; Auto vars:     Size  Location     Type
 31275 ;;  cmd             1   19[COMRAM] unsigned char 
 31276 ;; Return value:  Size  Location     Type
 31277 ;;                  1    wreg      void 
 31278 ;; Registers used:
 31279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31280 ;; Tracked objects:
 31281 ;;		On entry : 0/0
 31282 ;;		On exit  : 0/0
 31283 ;;		Unchanged: 0/0
 31284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31286 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31288 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31289 ;;Total ram usage:        1 bytes
 31290 ;; Hardware stack levels used:    1
 31291 ;; Hardware stack levels required when called:    3
 31292 ;; This function calls:
 31293 ;;		_i2c_eeprom_writeByte
 31294 ;;		_jump_to_main_program
 31295 ;;		_jump_to_zero
 31296 ;;		_system_delay_ms
 31297 ;; This function is called by:
 31298 ;;		_api_parse
 31299 ;; This function uses a non-reentrant model
 31300 ;;
 31301                           
 31302                           	psect	text151
 31303  006142                     __ptext151:
 31304                           	opt stack 0
 31305  006142                     __parse_command_short:
 31306                           	opt stack 26
 31307                           
 31308                           ;incstack = 0
 31309                           ;__parse_command_short@cmd stored from wreg
 31310  006142  6E14               	movwf	__parse_command_short@cmd,c
 31311                           
 31312                           ;api.c: 417: switch(cmd)
 31313  006144  D02B               	goto	l2575
 31314  006146                     
 31315                           ;api.c: 420: jump_to_zero();
 31316  006146  EC07  F03B         	call	_jump_to_zero	;wreg free
 31317                           
 31318                           ;api.c: 421: break;
 31319  00614A  0012               	return	
 31320  00614C                     
 31321                           ;api.c: 424: i2c_eeprom_writeByte(0x100, 0x94);
 31322  00614C  0E01               	movlw	1
 31323  00614E  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 31324  006150  0E00               	movlw	0
 31325  006152  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 31326  006154  0E94               	movlw	148
 31327  006156  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 31328  006158  EC8B  F03A         	call	_i2c_eeprom_writeByte	;wreg free
 31329                           
 31330                           ;api.c: 425: system_delay_ms(10);
 31331  00615C  0E0A               	movlw	10
 31332  00615E  EC97  F03D         	call	_system_delay_ms
 31333                           
 31334                           ;api.c: 426: jump_to_zero();
 31335  006162  EC07  F03B         	call	_jump_to_zero	;wreg free
 31336                           
 31337                           ;api.c: 427: break;
 31338  006166  0012               	return	
 31339  006168                     
 31340                           ;api.c: 430: i2c_eeprom_writeByte(0x100, 0x78);
 31341  006168  0E01               	movlw	1
 31342  00616A  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 31343  00616C  0E00               	movlw	0
 31344  00616E  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 31345  006170  0E78               	movlw	120
 31346  006172  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 31347  006174  EC8B  F03A         	call	_i2c_eeprom_writeByte	;wreg free
 31348                           
 31349                           ;api.c: 431: system_delay_ms(10);
 31350  006178  0E0A               	movlw	10
 31351  00617A  EC97  F03D         	call	_system_delay_ms
 31352                           
 31353                           ;api.c: 432: jump_to_zero();
 31354  00617E  EC07  F03B         	call	_jump_to_zero	;wreg free
 31355                           
 31356                           ;api.c: 433: break;
 31357  006182  0012               	return	
 31358  006184                     
 31359                           ;api.c: 436: jump_to_main_program();
 31360  006184  EC25  F03B         	call	_jump_to_main_program	;wreg free
 31361                           
 31362                           ;api.c: 437: break;
 31363  006188  0012               	return	
 31364  00618A                     
 31365                           ;api.c: 440: --os.encoderCount;
 31366  00618A  0100               	movlb	0	; () banked
 31367  00618C  0760               	decf	_os& (0+255),f,b	;volatile
 31368                           
 31369                           ;api.c: 441: break;
 31370  00618E  0012               	return	
 31371  006190                     
 31372                           ;api.c: 444: ++os.encoderCount;
 31373                           
 31374                           ; BSR set to: 0
 31375  006190  0100               	movlb	0	; () banked
 31376  006192  2B60               	incf	_os& (0+255),f,b	;volatile
 31377                           
 31378                           ;api.c: 445: break;
 31379  006194  0012               	return	
 31380  006196                     
 31381                           ;api.c: 448: ++os.buttonCount;
 31382                           
 31383                           ; BSR set to: 0
 31384  006196  0100               	movlb	0	; () banked
 31385  006198  2B61               	incf	(_os+1)& (0+255),f,b	;volatile
 31386                           
 31387                           ; BSR set to: 0
 31388                           ;api.c: 450: }
 31389                           
 31390                           ;api.c: 449: break;
 31391  00619A  0012               	return	
 31392  00619C                     l2575:
 31393                           
 31394                           ; BSR set to: 0
 31395  00619C  5014               	movf	__parse_command_short@cmd,w,c
 31396                           
 31397                           ; Switch size 1, requested type "space"
 31398                           ; Number of cases is 7, Range of values is 32 to 62
 31399                           ; switch strategies available:
 31400                           ; Name         Instructions Cycles
 31401                           ; simple_byte           22    12 (average)
 31402                           ;	Chosen strategy is simple_byte
 31403  00619E  0A20               	xorlw	32	; case 32
 31404  0061A0  B4D8               	btfsc	status,2,c
 31405  0061A2  D7D1               	goto	l2576
 31406  0061A4  0A01               	xorlw	1	; case 33
 31407  0061A6  B4D8               	btfsc	status,2,c
 31408  0061A8  D7D1               	goto	l2578
 31409  0061AA  0A03               	xorlw	3	; case 34
 31410  0061AC  B4D8               	btfsc	status,2,c
 31411  0061AE  D7DC               	goto	l2579
 31412  0061B0  0A01               	xorlw	1	; case 35
 31413  0061B2  B4D8               	btfsc	status,2,c
 31414  0061B4  D7E7               	goto	l2580
 31415  0061B6  0A1F               	xorlw	31	; case 60
 31416  0061B8  B4D8               	btfsc	status,2,c
 31417  0061BA  D7E7               	goto	l2581
 31418  0061BC  0A01               	xorlw	1	; case 61
 31419  0061BE  B4D8               	btfsc	status,2,c
 31420  0061C0  D7E7               	goto	l2582
 31421  0061C2  0A03               	xorlw	3	; case 62
 31422  0061C4  A4D8               	btfss	status,2,c
 31423  0061C6  0012               	return	
 31424  0061C8  D7E6               	goto	l2583
 31425  0061CA                     __end_of__parse_command_short:
 31426                           	opt stack 0
 31427                           tosu	equ	0xFFF
 31428                           tosh	equ	0xFFE
 31429                           tosl	equ	0xFFD
 31430                           pclath	equ	0xFFA
 31431                           tblptru	equ	0xFF8
 31432                           tblptrh	equ	0xFF7
 31433                           tblptrl	equ	0xFF6
 31434                           tablat	equ	0xFF5
 31435                           prodh	equ	0xFF4
 31436                           prodl	equ	0xFF3
 31437                           intcon	equ	0xFF2
 31438                           intcon2	equ	0xFF1
 31439                           intcon3	equ	0xFF0
 31440                           indf0	equ	0xFEF
 31441                           postinc0	equ	0xFEE
 31442                           fsr0h	equ	0xFEA
 31443                           fsr0l	equ	0xFE9
 31444                           wreg	equ	0xFE8
 31445                           indf1	equ	0xFE7
 31446                           postdec1	equ	0xFE5
 31447                           plusw1	equ	0xFE3
 31448                           fsr1h	equ	0xFE2
 31449                           fsr1l	equ	0xFE1
 31450                           indf2	equ	0xFDF
 31451                           postinc2	equ	0xFDE
 31452                           postdec2	equ	0xFDD
 31453                           plusw2	equ	0xFDB
 31454                           fsr2h	equ	0xFDA
 31455                           fsr2l	equ	0xFD9
 31456                           status	equ	0xFD8
 31457                           
 31458 ;; *************** function _system_delay_ms *****************
 31459 ;; Defined at:
 31460 ;;		line 62 in file "os.c"
 31461 ;; Parameters:    Size  Location     Type
 31462 ;;  ms              1    wreg     unsigned char 
 31463 ;; Auto vars:     Size  Location     Type
 31464 ;;  ms              1    1[COMRAM] unsigned char 
 31465 ;;  cntr            1    2[COMRAM] unsigned char 
 31466 ;; Return value:  Size  Location     Type
 31467 ;;                  1    wreg      void 
 31468 ;; Registers used:
 31469 ;;		wreg, status,2, status,0, cstack
 31470 ;; Tracked objects:
 31471 ;;		On entry : 0/0
 31472 ;;		On exit  : 0/0
 31473 ;;		Unchanged: 0/0
 31474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31476 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31477 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31478 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31479 ;;Total ram usage:        3 bytes
 31480 ;; Hardware stack levels used:    1
 31481 ;; This function calls:
 31482 ;;		Nothing
 31483 ;; This function is called by:
 31484 ;;		__parse_command_short
 31485 ;; This function uses a non-reentrant model
 31486 ;;
 31487                           
 31488                           	psect	text152
 31489  007B2E                     __ptext152:
 31490                           	opt stack 0
 31491  007B2E                     _system_delay_ms:
 31492                           	opt stack 28
 31493                           
 31494                           ;incstack = 0
 31495                           ;system_delay_ms@ms stored from wreg
 31496  007B2E  6E02               	movwf	system_delay_ms@ms,c
 31497                           
 31498                           ;os.c: 64: uint8_t cntr;;os.c: 65: for(cntr=0; cntr<ms; ++cntr)
 31499  007B30  0E00               	movlw	0
 31500  007B32  6E03               	movwf	system_delay_ms@cntr,c
 31501  007B34  D009               	goto	l1092
 31502  007B36                     
 31503                           ;os.c: 66: {;os.c: 67: _delay((unsigned long)((6)*(8000000/4000.0)));
 31504  007B36  0E10               	movlw	16
 31505  007B38  6E01               	movwf	??_system_delay_ms& (0+255),c
 31506  007B3A  0E94               	movlw	148
 31507  007B3C                     u11917:
 31508  007B3C  2EE8               	decfsz	wreg,f,c
 31509  007B3E  D7FE               	bra	u11917
 31510  007B40  2E01               	decfsz	??_system_delay_ms& (0+255),f,c
 31511  007B42  D7FC               	bra	u11917
 31512  007B44  D000               	nop2	
 31513  007B46  2A03               	incf	system_delay_ms@cntr,f,c
 31514  007B48                     l1092:
 31515  007B48  5002               	movf	system_delay_ms@ms,w,c
 31516  007B4A  5C03               	subwf	system_delay_ms@cntr,w,c
 31517  007B4C  B0D8               	btfsc	status,0,c
 31518  007B4E  0012               	return	
 31519  007B50  D7F2               	goto	l1093
 31520  007B52                     __end_of_system_delay_ms:
 31521                           	opt stack 0
 31522                           tosu	equ	0xFFF
 31523                           tosh	equ	0xFFE
 31524                           tosl	equ	0xFFD
 31525                           pclath	equ	0xFFA
 31526                           tblptru	equ	0xFF8
 31527                           tblptrh	equ	0xFF7
 31528                           tblptrl	equ	0xFF6
 31529                           tablat	equ	0xFF5
 31530                           prodh	equ	0xFF4
 31531                           prodl	equ	0xFF3
 31532                           intcon	equ	0xFF2
 31533                           intcon2	equ	0xFF1
 31534                           intcon3	equ	0xFF0
 31535                           indf0	equ	0xFEF
 31536                           postinc0	equ	0xFEE
 31537                           fsr0h	equ	0xFEA
 31538                           fsr0l	equ	0xFE9
 31539                           wreg	equ	0xFE8
 31540                           indf1	equ	0xFE7
 31541                           postdec1	equ	0xFE5
 31542                           plusw1	equ	0xFE3
 31543                           fsr1h	equ	0xFE2
 31544                           fsr1l	equ	0xFE1
 31545                           indf2	equ	0xFDF
 31546                           postinc2	equ	0xFDE
 31547                           postdec2	equ	0xFDD
 31548                           plusw2	equ	0xFDB
 31549                           fsr2h	equ	0xFDA
 31550                           fsr2l	equ	0xFD9
 31551                           status	equ	0xFD8
 31552                           
 31553 ;; *************** function _jump_to_zero *****************
 31554 ;; Defined at:
 31555 ;;		line 241 in file "os.c"
 31556 ;; Parameters:    Size  Location     Type
 31557 ;;		None
 31558 ;; Auto vars:     Size  Location     Type
 31559 ;;		None
 31560 ;; Return value:  Size  Location     Type
 31561 ;;                  1    wreg      void 
 31562 ;; Registers used:
 31563 ;;		wreg, status,2
 31564 ;; Tracked objects:
 31565 ;;		On entry : 0/0
 31566 ;;		On exit  : 0/0
 31567 ;;		Unchanged: 0/0
 31568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31573 ;;Total ram usage:        0 bytes
 31574 ;; Hardware stack levels used:    1
 31575 ;; This function calls:
 31576 ;;		Nothing
 31577 ;; This function is called by:
 31578 ;;		__parse_command_short
 31579 ;; This function uses a non-reentrant model
 31580 ;;
 31581                           
 31582                           	psect	text153
 31583  00760E                     __ptext153:
 31584                           	opt stack 0
 31585  00760E                     _jump_to_zero:
 31586                           	opt stack 28
 31587                           
 31588                           ;os.c: 244: DMACON1bits.DMAEN = 0;
 31589                           
 31590                           ;incstack = 0
 31591  00760E  9088               	bcf	3976,0,c	;volatile
 31592                           
 31593                           ;os.c: 245: SSP2CON1bits.SSPEN = 0;
 31594  007610  9A72               	bcf	3954,5,c	;volatile
 31595                           
 31596                           ;os.c: 246: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 31597  007612  0E55               	movlw	85
 31598  007614  6EA7               	movwf	4007,c	;volsfr
 31599  007616  0EAA               	movlw	170
 31600  007618  6EA7               	movwf	4007,c	;volsfr
 31601  00761A  010E               	movlb	14	; () banked
 31602  00761C  91BF               	bcf	191,0,b	;volatile
 31603                           
 31604                           ;os.c: 247: RPOR23 = 0b00000;
 31605  00761E  0E00               	movlw	0
 31606  007620  6FD7               	movwf	215,b	;volatile
 31607                           
 31608                           ;os.c: 248: RPINR21 = 0b11111;
 31609  007622  0E1F               	movlw	31
 31610  007624  6FFC               	movwf	252,b	;volatile
 31611                           
 31612                           ;os.c: 249: RPINR23 = 0b11111;
 31613  007626  0E1F               	movlw	31
 31614  007628  6FFE               	movwf	254,b	;volatile
 31615                           
 31616                           ;os.c: 250: RPINR21 = 0b11111;
 31617  00762A  0E1F               	movlw	31
 31618  00762C  6FFC               	movwf	252,b	;volatile
 31619                           
 31620                           ;os.c: 251: RPOR21 = 0b00000;
 31621  00762E  0E00               	movlw	0
 31622  007630  6FD5               	movwf	213,b	;volatile
 31623                           
 31624                           ;os.c: 252: RPOR22 = 0b00000;
 31625  007632  0E00               	movlw	0
 31626  007634  6FD6               	movwf	214,b	;volatile
 31627                           
 31628                           ;os.c: 253: RPINR22 = 0b11111;
 31629  007636  0E1F               	movlw	31
 31630  007638  6FFD               	movwf	253,b	;volatile
 31631                           
 31632                           ;os.c: 254: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 31633  00763A  0E55               	movlw	85
 31634  00763C  6EA7               	movwf	4007,c	;volsfr
 31635  00763E  0EAA               	movlw	170
 31636  007640  6EA7               	movwf	4007,c	;volsfr
 31637                           
 31638                           ; BSR set to: 14
 31639  007642  81BF               	bsf	191,0,b	;volatile
 31640  007644  EF00 F000          	goto	0	; ;# 
 31641  007648  0012               	return		;funcret
 31642  00764A                     __end_of_jump_to_zero:
 31643                           	opt stack 0
 31644                           tosu	equ	0xFFF
 31645                           tosh	equ	0xFFE
 31646                           tosl	equ	0xFFD
 31647                           pclath	equ	0xFFA
 31648                           tblptru	equ	0xFF8
 31649                           tblptrh	equ	0xFF7
 31650                           tblptrl	equ	0xFF6
 31651                           tablat	equ	0xFF5
 31652                           prodh	equ	0xFF4
 31653                           prodl	equ	0xFF3
 31654                           intcon	equ	0xFF2
 31655                           intcon2	equ	0xFF1
 31656                           intcon3	equ	0xFF0
 31657                           indf0	equ	0xFEF
 31658                           postinc0	equ	0xFEE
 31659                           fsr0h	equ	0xFEA
 31660                           fsr0l	equ	0xFE9
 31661                           wreg	equ	0xFE8
 31662                           indf1	equ	0xFE7
 31663                           postdec1	equ	0xFE5
 31664                           plusw1	equ	0xFE3
 31665                           fsr1h	equ	0xFE2
 31666                           fsr1l	equ	0xFE1
 31667                           indf2	equ	0xFDF
 31668                           postinc2	equ	0xFDE
 31669                           postdec2	equ	0xFDD
 31670                           plusw2	equ	0xFDB
 31671                           fsr2h	equ	0xFDA
 31672                           fsr2l	equ	0xFD9
 31673                           status	equ	0xFD8
 31674                           
 31675 ;; *************** function _jump_to_main_program *****************
 31676 ;; Defined at:
 31677 ;;		line 220 in file "os.c"
 31678 ;; Parameters:    Size  Location     Type
 31679 ;;		None
 31680 ;; Auto vars:     Size  Location     Type
 31681 ;;		None
 31682 ;; Return value:  Size  Location     Type
 31683 ;;                  1    wreg      void 
 31684 ;; Registers used:
 31685 ;;		wreg, status,2
 31686 ;; Tracked objects:
 31687 ;;		On entry : 0/0
 31688 ;;		On exit  : 0/0
 31689 ;;		Unchanged: 0/0
 31690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31695 ;;Total ram usage:        0 bytes
 31696 ;; Hardware stack levels used:    1
 31697 ;; This function calls:
 31698 ;;		Nothing
 31699 ;; This function is called by:
 31700 ;;		_main
 31701 ;;		__ui_encoder
 31702 ;;		__parse_command_short
 31703 ;; This function uses a non-reentrant model
 31704 ;;
 31705                           
 31706                           	psect	text154
 31707  00764A                     __ptext154:
 31708                           	opt stack 0
 31709  00764A                     _jump_to_main_program:
 31710                           	opt stack 28
 31711                           
 31712                           ;os.c: 223: DMACON1bits.DMAEN = 0;
 31713                           
 31714                           ;incstack = 0
 31715  00764A  9088               	bcf	3976,0,c	;volatile
 31716                           
 31717                           ;os.c: 224: SSP2CON1bits.SSPEN = 0;
 31718  00764C  9A72               	bcf	3954,5,c	;volatile
 31719                           
 31720                           ;os.c: 225: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 31721  00764E  0E55               	movlw	85
 31722  007650  6EA7               	movwf	4007,c	;volsfr
 31723  007652  0EAA               	movlw	170
 31724  007654  6EA7               	movwf	4007,c	;volsfr
 31725  007656  010E               	movlb	14	; () banked
 31726  007658  91BF               	bcf	191,0,b	;volatile
 31727                           
 31728                           ;os.c: 226: RPOR23 = 0b00000;
 31729  00765A  0E00               	movlw	0
 31730  00765C  6FD7               	movwf	215,b	;volatile
 31731                           
 31732                           ;os.c: 227: RPINR21 = 0b11111;
 31733  00765E  0E1F               	movlw	31
 31734  007660  6FFC               	movwf	252,b	;volatile
 31735                           
 31736                           ;os.c: 228: RPINR23 = 0b11111;
 31737  007662  0E1F               	movlw	31
 31738  007664  6FFE               	movwf	254,b	;volatile
 31739                           
 31740                           ;os.c: 229: RPINR21 = 0b11111;
 31741  007666  0E1F               	movlw	31
 31742  007668  6FFC               	movwf	252,b	;volatile
 31743                           
 31744                           ;os.c: 230: RPOR21 = 0b00000;
 31745  00766A  0E00               	movlw	0
 31746  00766C  6FD5               	movwf	213,b	;volatile
 31747                           
 31748                           ;os.c: 231: RPOR22 = 0b00000;
 31749  00766E  0E00               	movlw	0
 31750  007670  6FD6               	movwf	214,b	;volatile
 31751                           
 31752                           ;os.c: 232: RPINR22 = 0b11111;
 31753  007672  0E1F               	movlw	31
 31754  007674  6FFD               	movwf	253,b	;volatile
 31755                           
 31756                           ;os.c: 233: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 31757  007676  0E55               	movlw	85
 31758  007678  6EA7               	movwf	4007,c	;volsfr
 31759  00767A  0EAA               	movlw	170
 31760  00767C  6EA7               	movwf	4007,c	;volsfr
 31761                           
 31762                           ; BSR set to: 14
 31763  00767E  81BF               	bsf	191,0,b	;volatile
 31764  007680  EF00 F048          	goto	36864	; ;# 
 31765  007684  0012               	return		;funcret
 31766  007686                     __end_of_jump_to_main_program:
 31767                           	opt stack 0
 31768                           tosu	equ	0xFFF
 31769                           tosh	equ	0xFFE
 31770                           tosl	equ	0xFFD
 31771                           pclath	equ	0xFFA
 31772                           tblptru	equ	0xFF8
 31773                           tblptrh	equ	0xFF7
 31774                           tblptrl	equ	0xFF6
 31775                           tablat	equ	0xFF5
 31776                           prodh	equ	0xFF4
 31777                           prodl	equ	0xFF3
 31778                           intcon	equ	0xFF2
 31779                           intcon2	equ	0xFF1
 31780                           intcon3	equ	0xFF0
 31781                           indf0	equ	0xFEF
 31782                           postinc0	equ	0xFEE
 31783                           fsr0h	equ	0xFEA
 31784                           fsr0l	equ	0xFE9
 31785                           wreg	equ	0xFE8
 31786                           indf1	equ	0xFE7
 31787                           postdec1	equ	0xFE5
 31788                           plusw1	equ	0xFE3
 31789                           fsr1h	equ	0xFE2
 31790                           fsr1l	equ	0xFE1
 31791                           indf2	equ	0xFDF
 31792                           postinc2	equ	0xFDE
 31793                           postdec2	equ	0xFDD
 31794                           plusw2	equ	0xFDB
 31795                           fsr2h	equ	0xFDA
 31796                           fsr2l	equ	0xFD9
 31797                           status	equ	0xFD8
 31798                           
 31799 ;; *************** function _i2c_eeprom_writeByte *****************
 31800 ;; Defined at:
 31801 ;;		line 344 in file "i2c.c"
 31802 ;; Parameters:    Size  Location     Type
 31803 ;;  address         2   10[COMRAM] unsigned int 
 31804 ;;  data            1   12[COMRAM] unsigned char 
 31805 ;; Auto vars:     Size  Location     Type
 31806 ;;  dat             2   16[COMRAM] unsigned char [2]
 31807 ;;  slave_addres    1   18[COMRAM] unsigned char 
 31808 ;; Return value:  Size  Location     Type
 31809 ;;                  1    wreg      void 
 31810 ;; Registers used:
 31811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31812 ;; Tracked objects:
 31813 ;;		On entry : 0/0
 31814 ;;		On exit  : 0/0
 31815 ;;		Unchanged: 0/0
 31816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31817 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31818 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31819 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31820 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31821 ;;Total ram usage:        9 bytes
 31822 ;; Hardware stack levels used:    1
 31823 ;; Hardware stack levels required when called:    2
 31824 ;; This function calls:
 31825 ;;		__i2c_write
 31826 ;;		_i2c_set_frequency
 31827 ;; This function is called by:
 31828 ;;		__normal_mode
 31829 ;;		__parse_command_short
 31830 ;; This function uses a non-reentrant model
 31831 ;;
 31832                           
 31833                           	psect	text155
 31834  007516                     __ptext155:
 31835                           	opt stack 0
 31836  007516                     _i2c_eeprom_writeByte:
 31837                           	opt stack 26
 31838                           
 31839                           ;i2c.c: 346: uint8_t slave_address;;i2c.c: 347: uint8_t dat[2];;i2c.c: 349: slave_addres
      +                          s = 0b10100000 | ((address&0b0000011100000000)>>7);
 31840                           
 31841                           ;incstack = 0
 31842  007516  C00B  F00E         	movff	i2c_eeprom_writeByte@address,??_i2c_eeprom_writeByte
 31843  00751A  C00C  F00F         	movff	i2c_eeprom_writeByte@address+1,??_i2c_eeprom_writeByte+1
 31844  00751E  0E07               	movlw	7
 31845  007520  6E10               	movwf	(??_i2c_eeprom_writeByte+2)& (0+255),c
 31846  007522                     u8725:
 31847  007522  90D8               	bcf	status,0,c
 31848  007524  320F               	rrcf	??_i2c_eeprom_writeByte+1,f,c
 31849  007526  320E               	rrcf	??_i2c_eeprom_writeByte,f,c
 31850  007528  2E10               	decfsz	(??_i2c_eeprom_writeByte+2)& (0+255),f,c
 31851  00752A  D7FB               	goto	u8725
 31852  00752C  500E               	movf	??_i2c_eeprom_writeByte,w,c
 31853  00752E  0B0E               	andlw	14
 31854  007530  09A0               	iorlw	160
 31855  007532  6E13               	movwf	i2c_eeprom_writeByte@slave_address,c
 31856                           
 31857                           ;i2c.c: 350: dat[0] = address & 0xFF;
 31858  007534  C00B  F011         	movff	i2c_eeprom_writeByte@address,i2c_eeprom_writeByte@dat
 31859                           
 31860                           ;i2c.c: 351: dat[1] = data;
 31861  007538  C00D  F012         	movff	i2c_eeprom_writeByte@data,i2c_eeprom_writeByte@dat+1
 31862                           
 31863                           ;i2c.c: 354: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 31864  00753C  0E02               	movlw	2
 31865  00753E  EC0C  F03D         	call	_i2c_set_frequency
 31866                           
 31867                           ;i2c.c: 356: _i2c_write(slave_address, &dat[0], 2);
 31868  007542  0E11               	movlw	low i2c_eeprom_writeByte@dat
 31869  007544  6E06               	movwf	__i2c_write@data,c
 31870  007546  0E00               	movlw	high i2c_eeprom_writeByte@dat
 31871  007548  6E07               	movwf	__i2c_write@data+1,c
 31872  00754A  0E02               	movlw	2
 31873  00754C  6E08               	movwf	__i2c_write@length,c
 31874  00754E  5013               	movf	i2c_eeprom_writeByte@slave_address,w,c
 31875  007550  ECBE  F039         	call	__i2c_write
 31876  007554  0012               	return		;funcret
 31877  007556                     __end_of_i2c_eeprom_writeByte:
 31878                           	opt stack 0
 31879                           tosu	equ	0xFFF
 31880                           tosh	equ	0xFFE
 31881                           tosl	equ	0xFFD
 31882                           pclath	equ	0xFFA
 31883                           tblptru	equ	0xFF8
 31884                           tblptrh	equ	0xFF7
 31885                           tblptrl	equ	0xFF6
 31886                           tablat	equ	0xFF5
 31887                           prodh	equ	0xFF4
 31888                           prodl	equ	0xFF3
 31889                           intcon	equ	0xFF2
 31890                           intcon2	equ	0xFF1
 31891                           intcon3	equ	0xFF0
 31892                           indf0	equ	0xFEF
 31893                           postinc0	equ	0xFEE
 31894                           fsr0h	equ	0xFEA
 31895                           fsr0l	equ	0xFE9
 31896                           wreg	equ	0xFE8
 31897                           indf1	equ	0xFE7
 31898                           postdec1	equ	0xFE5
 31899                           plusw1	equ	0xFE3
 31900                           fsr1h	equ	0xFE2
 31901                           fsr1l	equ	0xFE1
 31902                           indf2	equ	0xFDF
 31903                           postinc2	equ	0xFDE
 31904                           postdec2	equ	0xFDD
 31905                           plusw2	equ	0xFDB
 31906                           fsr2h	equ	0xFDA
 31907                           fsr2l	equ	0xFD9
 31908                           status	equ	0xFD8
 31909                           
 31910 ;; *************** function _i2c_set_frequency *****************
 31911 ;; Defined at:
 31912 ;;		line 115 in file "i2c.c"
 31913 ;; Parameters:    Size  Location     Type
 31914 ;;  frequency       1    wreg     enum E6622
 31915 ;; Auto vars:     Size  Location     Type
 31916 ;;  frequency       1    0[COMRAM] enum E6622
 31917 ;; Return value:  Size  Location     Type
 31918 ;;                  1    wreg      void 
 31919 ;; Registers used:
 31920 ;;		wreg, status,2, status,0
 31921 ;; Tracked objects:
 31922 ;;		On entry : 0/0
 31923 ;;		On exit  : 0/0
 31924 ;;		Unchanged: 0/0
 31925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31927 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31929 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31930 ;;Total ram usage:        1 bytes
 31931 ;; Hardware stack levels used:    1
 31932 ;; This function calls:
 31933 ;;		Nothing
 31934 ;; This function is called by:
 31935 ;;		_i2c_init
 31936 ;;		__ic2_display_set_address
 31937 ;;		_i2c_display_send_init_sequence
 31938 ;;		_i2c_display_cursor
 31939 ;;		_i2c_display_write_fixed
 31940 ;;		_i2c_digipot_reset_on
 31941 ;;		_i2c_digipot_reset_off
 31942 ;;		_i2c_digipot_backlight
 31943 ;;		_i2c_eeprom_writeByte
 31944 ;;		_i2c_eeprom_readByte
 31945 ;;		_i2c_display_write
 31946 ;;		_i2c_eeprom_write
 31947 ;;		_i2c_eeprom_read
 31948 ;; This function uses a non-reentrant model
 31949 ;;
 31950                           
 31951                           	psect	text156
 31952  007A18                     __ptext156:
 31953                           	opt stack 0
 31954  007A18                     _i2c_set_frequency:
 31955                           	opt stack 28
 31956                           
 31957                           ;incstack = 0
 31958                           ;i2c_set_frequency@frequency stored from wreg
 31959  007A18  6E01               	movwf	i2c_set_frequency@frequency,c
 31960                           
 31961                           ;i2c.c: 117: switch(frequency)
 31962  007A1A  D007               	goto	l1182
 31963  007A1C                     
 31964                           ;i2c.c: 120: SSP1ADD = 119;
 31965  007A1C  0E77               	movlw	119
 31966  007A1E  D003               	goto	L35
 31967  007A20                     
 31968                           ;i2c.c: 123: SSP1ADD = 59;
 31969  007A20  0E3B               	movlw	59
 31970  007A22  D001               	goto	L35
 31971  007A24                     
 31972                           ;i2c.c: 126: SSP1ADD = 29;
 31973  007A24  0E1D               	movlw	29
 31974  007A26                     L35:
 31975  007A26  6EC8               	movwf	4040,c	;volatile
 31976                           
 31977                           ;i2c.c: 128: }
 31978                           
 31979                           ;i2c.c: 127: break;
 31980  007A28  D00A               	goto	l1184
 31981  007A2A                     l1182:
 31982  007A2A  5001               	movf	i2c_set_frequency@frequency,w,c
 31983                           
 31984                           ; Switch size 1, requested type "space"
 31985                           ; Number of cases is 3, Range of values is 0 to 2
 31986                           ; switch strategies available:
 31987                           ; Name         Instructions Cycles
 31988                           ; simple_byte           10     6 (average)
 31989                           ;	Chosen strategy is simple_byte
 31990  007A2C  0A00               	xorlw	0	; case 0
 31991  007A2E  B4D8               	btfsc	status,2,c
 31992  007A30  D7F5               	goto	l1183
 31993  007A32  0A01               	xorlw	1	; case 1
 31994  007A34  B4D8               	btfsc	status,2,c
 31995  007A36  D7F4               	goto	l1185
 31996  007A38  0A03               	xorlw	3	; case 2
 31997  007A3A  B4D8               	btfsc	status,2,c
 31998  007A3C  D7F3               	goto	l1186
 31999  007A3E                     l1184:
 32000                           
 32001                           ;i2c.c: 130: i2c_frequency = frequency;
 32002  007A3E  C001  F099         	movff	i2c_set_frequency@frequency,_i2c_frequency
 32003  007A42  0012               	return		;funcret
 32004  007A44                     __end_of_i2c_set_frequency:
 32005                           	opt stack 0
 32006                           tosu	equ	0xFFF
 32007                           tosh	equ	0xFFE
 32008                           tosl	equ	0xFFD
 32009                           pclath	equ	0xFFA
 32010                           tblptru	equ	0xFF8
 32011                           tblptrh	equ	0xFF7
 32012                           tblptrl	equ	0xFF6
 32013                           tablat	equ	0xFF5
 32014                           prodh	equ	0xFF4
 32015                           prodl	equ	0xFF3
 32016                           intcon	equ	0xFF2
 32017                           intcon2	equ	0xFF1
 32018                           intcon3	equ	0xFF0
 32019                           indf0	equ	0xFEF
 32020                           postinc0	equ	0xFEE
 32021                           fsr0h	equ	0xFEA
 32022                           fsr0l	equ	0xFE9
 32023                           wreg	equ	0xFE8
 32024                           indf1	equ	0xFE7
 32025                           postdec1	equ	0xFE5
 32026                           plusw1	equ	0xFE3
 32027                           fsr1h	equ	0xFE2
 32028                           fsr1l	equ	0xFE1
 32029                           indf2	equ	0xFDF
 32030                           postinc2	equ	0xFDE
 32031                           postdec2	equ	0xFDD
 32032                           plusw2	equ	0xFDB
 32033                           fsr2h	equ	0xFDA
 32034                           fsr2l	equ	0xFD9
 32035                           status	equ	0xFD8
 32036                           
 32037 ;; *************** function __i2c_write *****************
 32038 ;; Defined at:
 32039 ;;		line 134 in file "i2c.c"
 32040 ;; Parameters:    Size  Location     Type
 32041 ;;  slave_addres    1    wreg     unsigned char 
 32042 ;;  data            2    5[COMRAM] PTR unsigned char 
 32043 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 32044 ;;		 -> i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2), i2c_digipot_reset_on@data_array(2), i2
      +c_display_send_init_sequence@init_sequence(9), 
 32045 ;;		 -> _ic2_display_set_address@data_array(2), 
 32046 ;;  length          1    7[COMRAM] unsigned char 
 32047 ;; Auto vars:     Size  Location     Type
 32048 ;;  slave_addres    1    8[COMRAM] unsigned char 
 32049 ;;  cntr            1    9[COMRAM] unsigned char 
 32050 ;; Return value:  Size  Location     Type
 32051 ;;                  1    wreg      void 
 32052 ;; Registers used:
 32053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32054 ;; Tracked objects:
 32055 ;;		On entry : 0/0
 32056 ;;		On exit  : 0/0
 32057 ;;		Unchanged: 0/0
 32058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32059 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32060 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32062 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32063 ;;Total ram usage:        5 bytes
 32064 ;; Hardware stack levels used:    1
 32065 ;; Hardware stack levels required when called:    1
 32066 ;; This function calls:
 32067 ;;		__i2c_send
 32068 ;;		__i2c_start
 32069 ;;		__i2c_stop
 32070 ;;		__i2c_wait_idle
 32071 ;; This function is called by:
 32072 ;;		__ic2_display_set_address
 32073 ;;		_i2c_display_send_init_sequence
 32074 ;;		_i2c_digipot_reset_on
 32075 ;;		_i2c_digipot_reset_off
 32076 ;;		_i2c_digipot_backlight
 32077 ;;		_i2c_eeprom_writeByte
 32078 ;;		_i2c_eeprom_readByte
 32079 ;;		_i2c_eeprom_write
 32080 ;;		_i2c_eeprom_read
 32081 ;; This function uses a non-reentrant model
 32082 ;;
 32083                           
 32084                           	psect	text157
 32085  00737C                     __ptext157:
 32086                           	opt stack 0
 32087  00737C                     __i2c_write:
 32088                           	opt stack 27
 32089                           
 32090                           ;incstack = 0
 32091                           ;__i2c_write@slave_address stored from wreg
 32092  00737C  6E09               	movwf	__i2c_write@slave_address,c
 32093                           
 32094                           ;i2c.c: 136: uint8_t cntr;;i2c.c: 138: _i2c_wait_idle();
 32095  00737E  EC1B  F037         	call	__i2c_wait_idle	;wreg free
 32096                           
 32097                           ;i2c.c: 139: _i2c_start();
 32098  007382  EC0F  F03F         	call	__i2c_start	;wreg free
 32099                           
 32100                           ;i2c.c: 140: _i2c_wait_idle();
 32101  007386  EC1B  F037         	call	__i2c_wait_idle	;wreg free
 32102                           
 32103                           ;i2c.c: 141: _i2c_send(slave_address);
 32104  00738A  5009               	movf	__i2c_write@slave_address,w,c
 32105  00738C  EC13  F03F         	call	__i2c_send
 32106                           
 32107                           ;i2c.c: 142: _i2c_wait_idle();
 32108  007390  EC1B  F037         	call	__i2c_wait_idle	;wreg free
 32109                           
 32110                           ;i2c.c: 144: for(cntr=0; cntr<length; ++cntr)
 32111  007394  0E00               	movlw	0
 32112  007396  6E0A               	movwf	__i2c_write@cntr,c
 32113  007398  D00E               	goto	l1190
 32114  00739A                     
 32115                           ;i2c.c: 145: {;i2c.c: 146: _i2c_send(data[cntr]);
 32116  00739A  500A               	movf	__i2c_write@cntr,w,c
 32117  00739C  0D01               	mullw	1
 32118  00739E  50F3               	movf	prodl,w,c
 32119  0073A0  2406               	addwf	__i2c_write@data,w,c
 32120  0073A2  6ED9               	movwf	fsr2l,c
 32121  0073A4  50F4               	movf	prodh,w,c
 32122  0073A6  2007               	addwfc	__i2c_write@data+1,w,c
 32123  0073A8  6EDA               	movwf	fsr2h,c
 32124  0073AA  50DF               	movf	indf2,w,c
 32125  0073AC  EC13  F03F         	call	__i2c_send
 32126                           
 32127                           ;i2c.c: 147: _i2c_wait_idle();
 32128  0073B0  EC1B  F037         	call	__i2c_wait_idle	;wreg free
 32129  0073B4  2A0A               	incf	__i2c_write@cntr,f,c
 32130  0073B6                     l1190:
 32131  0073B6  5008               	movf	__i2c_write@length,w,c
 32132  0073B8  5C0A               	subwf	__i2c_write@cntr,w,c
 32133  0073BA  A0D8               	btfss	status,0,c
 32134  0073BC  D7EE               	goto	l1191
 32135                           
 32136                           ;i2c.c: 148: };i2c.c: 150: _i2c_stop();
 32137  0073BE  EC0B  F03F         	call	__i2c_stop	;wreg free
 32138  0073C2  0012               	return		;funcret
 32139  0073C4                     __end_of__i2c_write:
 32140                           	opt stack 0
 32141                           tosu	equ	0xFFF
 32142                           tosh	equ	0xFFE
 32143                           tosl	equ	0xFFD
 32144                           pclath	equ	0xFFA
 32145                           tblptru	equ	0xFF8
 32146                           tblptrh	equ	0xFF7
 32147                           tblptrl	equ	0xFF6
 32148                           tablat	equ	0xFF5
 32149                           prodh	equ	0xFF4
 32150                           prodl	equ	0xFF3
 32151                           intcon	equ	0xFF2
 32152                           intcon2	equ	0xFF1
 32153                           intcon3	equ	0xFF0
 32154                           indf0	equ	0xFEF
 32155                           postinc0	equ	0xFEE
 32156                           fsr0h	equ	0xFEA
 32157                           fsr0l	equ	0xFE9
 32158                           wreg	equ	0xFE8
 32159                           indf1	equ	0xFE7
 32160                           postdec1	equ	0xFE5
 32161                           plusw1	equ	0xFE3
 32162                           fsr1h	equ	0xFE2
 32163                           fsr1l	equ	0xFE1
 32164                           indf2	equ	0xFDF
 32165                           postinc2	equ	0xFDE
 32166                           postdec2	equ	0xFDD
 32167                           plusw2	equ	0xFDB
 32168                           fsr2h	equ	0xFDA
 32169                           fsr2l	equ	0xFD9
 32170                           status	equ	0xFD8
 32171                           
 32172 ;; *************** function __i2c_wait_idle *****************
 32173 ;; Defined at:
 32174 ;;		line 48 in file "i2c.c"
 32175 ;; Parameters:    Size  Location     Type
 32176 ;;		None
 32177 ;; Auto vars:     Size  Location     Type
 32178 ;;		None
 32179 ;; Return value:  Size  Location     Type
 32180 ;;                  1    wreg      void 
 32181 ;; Registers used:
 32182 ;;		wreg, status,2, status,0
 32183 ;; Tracked objects:
 32184 ;;		On entry : 0/0
 32185 ;;		On exit  : 0/0
 32186 ;;		Unchanged: 0/0
 32187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32188 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32189 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32190 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32191 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32192 ;;Total ram usage:        5 bytes
 32193 ;; Hardware stack levels used:    1
 32194 ;; This function calls:
 32195 ;;		Nothing
 32196 ;; This function is called by:
 32197 ;;		__i2c_write
 32198 ;;		__i2c_read
 32199 ;;		_i2c_display_write_fixed
 32200 ;;		_i2c_display_write
 32201 ;; This function uses a non-reentrant model
 32202 ;;
 32203                           
 32204                           	psect	text158
 32205  006E36                     __ptext158:
 32206                           	opt stack 0
 32207  006E36                     __i2c_wait_idle:
 32208                           	opt stack 27
 32209                           
 32210                           ;i2c.c: 50: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 32211                           
 32212                           ;incstack = 0
 32213  006E36  A4C7               	btfss	4039,2,c	;volatile
 32214  006E38  D003               	goto	u7400
 32215  006E3A  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 32216  006E3C  2A01               	incf	??__i2c_wait_idle& (0+255),f,c
 32217  006E3E  D001               	goto	u7408
 32218  006E40                     u7400:
 32219  006E40  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 32220  006E42                     u7408:
 32221  006E42  A0C5               	btfss	4037,0,c	;volatile
 32222  006E44  D003               	goto	u7410
 32223  006E46  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 32224  006E48  2A02               	incf	(??__i2c_wait_idle+1)& (0+255),f,c
 32225  006E4A  D001               	goto	u7418
 32226  006E4C                     u7410:
 32227  006E4C  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 32228  006E4E                     u7418:
 32229  006E4E  A2C5               	btfss	4037,1,c	;volatile
 32230  006E50  D003               	goto	u7420
 32231  006E52  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 32232  006E54  2A03               	incf	(??__i2c_wait_idle+2)& (0+255),f,c
 32233  006E56  D001               	goto	u7428
 32234  006E58                     u7420:
 32235  006E58  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 32236  006E5A                     u7428:
 32237  006E5A  A4C5               	btfss	4037,2,c	;volatile
 32238  006E5C  D003               	goto	u7430
 32239  006E5E  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 32240  006E60  2A04               	incf	(??__i2c_wait_idle+3)& (0+255),f,c
 32241  006E62  D001               	goto	u7438
 32242  006E64                     u7430:
 32243  006E64  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 32244  006E66                     u7438:
 32245  006E66  A6C5               	btfss	4037,3,c	;volatile
 32246  006E68  D003               	goto	u7440
 32247  006E6A  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 32248  006E6C  2A05               	incf	(??__i2c_wait_idle+4)& (0+255),f,c
 32249  006E6E  D001               	goto	u7448
 32250  006E70                     u7440:
 32251  006E70  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 32252  006E72                     u7448:
 32253  006E72  A8C5               	btfss	4037,4,c	;volatile
 32254  006E74  D002               	goto	u7450
 32255  006E76  0E01               	movlw	1
 32256  006E78  D001               	goto	u7456
 32257  006E7A                     u7450:
 32258  006E7A  0E00               	movlw	0
 32259  006E7C                     u7456:
 32260  006E7C  1005               	iorwf	??__i2c_wait_idle+4,w,c
 32261  006E7E  1004               	iorwf	??__i2c_wait_idle+3,w,c
 32262  006E80  1003               	iorwf	??__i2c_wait_idle+2,w,c
 32263  006E82  1002               	iorwf	??__i2c_wait_idle+1,w,c
 32264  006E84  1001               	iorwf	??__i2c_wait_idle,w,c
 32265  006E86  0900               	iorlw	0
 32266  006E88  B4D8               	btfsc	status,2,c
 32267  006E8A  0012               	return	
 32268  006E8C  D7D4               	goto	__i2c_wait_idle
 32269  006E8E                     __end_of__i2c_wait_idle:
 32270                           	opt stack 0
 32271                           tosu	equ	0xFFF
 32272                           tosh	equ	0xFFE
 32273                           tosl	equ	0xFFD
 32274                           pclath	equ	0xFFA
 32275                           tblptru	equ	0xFF8
 32276                           tblptrh	equ	0xFF7
 32277                           tblptrl	equ	0xFF6
 32278                           tablat	equ	0xFF5
 32279                           prodh	equ	0xFF4
 32280                           prodl	equ	0xFF3
 32281                           intcon	equ	0xFF2
 32282                           intcon2	equ	0xFF1
 32283                           intcon3	equ	0xFF0
 32284                           indf0	equ	0xFEF
 32285                           postinc0	equ	0xFEE
 32286                           fsr0h	equ	0xFEA
 32287                           fsr0l	equ	0xFE9
 32288                           wreg	equ	0xFE8
 32289                           indf1	equ	0xFE7
 32290                           postdec1	equ	0xFE5
 32291                           plusw1	equ	0xFE3
 32292                           fsr1h	equ	0xFE2
 32293                           fsr1l	equ	0xFE1
 32294                           indf2	equ	0xFDF
 32295                           postinc2	equ	0xFDE
 32296                           postdec2	equ	0xFDD
 32297                           plusw2	equ	0xFDB
 32298                           fsr2h	equ	0xFDA
 32299                           fsr2l	equ	0xFD9
 32300                           status	equ	0xFD8
 32301                           
 32302 ;; *************** function __i2c_stop *****************
 32303 ;; Defined at:
 32304 ;;		line 75 in file "i2c.c"
 32305 ;; Parameters:    Size  Location     Type
 32306 ;;		None
 32307 ;; Auto vars:     Size  Location     Type
 32308 ;;		None
 32309 ;; Return value:  Size  Location     Type
 32310 ;;                  1    wreg      void 
 32311 ;; Registers used:
 32312 ;;		None
 32313 ;; Tracked objects:
 32314 ;;		On entry : 0/0
 32315 ;;		On exit  : 0/0
 32316 ;;		Unchanged: 0/0
 32317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32322 ;;Total ram usage:        0 bytes
 32323 ;; Hardware stack levels used:    1
 32324 ;; This function calls:
 32325 ;;		Nothing
 32326 ;; This function is called by:
 32327 ;;		__i2c_write
 32328 ;;		__i2c_read
 32329 ;;		_i2c_display_write_fixed
 32330 ;;		_i2c_display_write
 32331 ;; This function uses a non-reentrant model
 32332 ;;
 32333                           
 32334                           	psect	text159
 32335  007E16                     __ptext159:
 32336                           	opt stack 0
 32337  007E16                     __i2c_stop:
 32338                           	opt stack 27
 32339                           
 32340                           ;i2c.c: 77: SSP1CON2bits.PEN = 1;
 32341                           
 32342                           ;incstack = 0
 32343  007E16  84C5               	bsf	4037,2,c	;volatile
 32344  007E18  A4C5               	btfss	4037,2,c	;volatile
 32345  007E1A  0012               	return	
 32346  007E1C  D7FD               	goto	l1159
 32347  007E1E                     __end_of__i2c_stop:
 32348                           	opt stack 0
 32349                           tosu	equ	0xFFF
 32350                           tosh	equ	0xFFE
 32351                           tosl	equ	0xFFD
 32352                           pclath	equ	0xFFA
 32353                           tblptru	equ	0xFF8
 32354                           tblptrh	equ	0xFF7
 32355                           tblptrl	equ	0xFF6
 32356                           tablat	equ	0xFF5
 32357                           prodh	equ	0xFF4
 32358                           prodl	equ	0xFF3
 32359                           intcon	equ	0xFF2
 32360                           intcon2	equ	0xFF1
 32361                           intcon3	equ	0xFF0
 32362                           indf0	equ	0xFEF
 32363                           postinc0	equ	0xFEE
 32364                           fsr0h	equ	0xFEA
 32365                           fsr0l	equ	0xFE9
 32366                           wreg	equ	0xFE8
 32367                           indf1	equ	0xFE7
 32368                           postdec1	equ	0xFE5
 32369                           plusw1	equ	0xFE3
 32370                           fsr1h	equ	0xFE2
 32371                           fsr1l	equ	0xFE1
 32372                           indf2	equ	0xFDF
 32373                           postinc2	equ	0xFDE
 32374                           postdec2	equ	0xFDD
 32375                           plusw2	equ	0xFDB
 32376                           fsr2h	equ	0xFDA
 32377                           fsr2l	equ	0xFD9
 32378                           status	equ	0xFD8
 32379                           
 32380 ;; *************** function __i2c_start *****************
 32381 ;; Defined at:
 32382 ;;		line 54 in file "i2c.c"
 32383 ;; Parameters:    Size  Location     Type
 32384 ;;		None
 32385 ;; Auto vars:     Size  Location     Type
 32386 ;;		None
 32387 ;; Return value:  Size  Location     Type
 32388 ;;                  1    wreg      void 
 32389 ;; Registers used:
 32390 ;;		None
 32391 ;; Tracked objects:
 32392 ;;		On entry : 0/0
 32393 ;;		On exit  : 0/0
 32394 ;;		Unchanged: 0/0
 32395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32400 ;;Total ram usage:        0 bytes
 32401 ;; Hardware stack levels used:    1
 32402 ;; This function calls:
 32403 ;;		Nothing
 32404 ;; This function is called by:
 32405 ;;		__i2c_write
 32406 ;;		__i2c_read
 32407 ;;		_i2c_display_write_fixed
 32408 ;;		_i2c_display_write
 32409 ;; This function uses a non-reentrant model
 32410 ;;
 32411                           
 32412                           	psect	text160
 32413  007E1E                     __ptext160:
 32414                           	opt stack 0
 32415  007E1E                     __i2c_start:
 32416                           	opt stack 27
 32417                           
 32418                           ;i2c.c: 56: SSP1CON2bits.SEN=1;
 32419                           
 32420                           ;incstack = 0
 32421  007E1E  80C5               	bsf	4037,0,c	;volatile
 32422  007E20  A0C5               	btfss	4037,0,c	;volatile
 32423  007E22  0012               	return	
 32424  007E24  D7FD               	goto	l1144
 32425  007E26                     __end_of__i2c_start:
 32426                           	opt stack 0
 32427                           tosu	equ	0xFFF
 32428                           tosh	equ	0xFFE
 32429                           tosl	equ	0xFFD
 32430                           pclath	equ	0xFFA
 32431                           tblptru	equ	0xFF8
 32432                           tblptrh	equ	0xFF7
 32433                           tblptrl	equ	0xFF6
 32434                           tablat	equ	0xFF5
 32435                           prodh	equ	0xFF4
 32436                           prodl	equ	0xFF3
 32437                           intcon	equ	0xFF2
 32438                           intcon2	equ	0xFF1
 32439                           intcon3	equ	0xFF0
 32440                           indf0	equ	0xFEF
 32441                           postinc0	equ	0xFEE
 32442                           fsr0h	equ	0xFEA
 32443                           fsr0l	equ	0xFE9
 32444                           wreg	equ	0xFE8
 32445                           indf1	equ	0xFE7
 32446                           postdec1	equ	0xFE5
 32447                           plusw1	equ	0xFE3
 32448                           fsr1h	equ	0xFE2
 32449                           fsr1l	equ	0xFE1
 32450                           indf2	equ	0xFDF
 32451                           postinc2	equ	0xFDE
 32452                           postdec2	equ	0xFDD
 32453                           plusw2	equ	0xFDB
 32454                           fsr2h	equ	0xFDA
 32455                           fsr2l	equ	0xFD9
 32456                           status	equ	0xFD8
 32457                           
 32458 ;; *************** function __i2c_send *****************
 32459 ;; Defined at:
 32460 ;;		line 61 in file "i2c.c"
 32461 ;; Parameters:    Size  Location     Type
 32462 ;;  dat             1    wreg     unsigned char 
 32463 ;; Auto vars:     Size  Location     Type
 32464 ;;  dat             1    0[COMRAM] unsigned char 
 32465 ;; Return value:  Size  Location     Type
 32466 ;;                  1    wreg      void 
 32467 ;; Registers used:
 32468 ;;		wreg
 32469 ;; Tracked objects:
 32470 ;;		On entry : 0/0
 32471 ;;		On exit  : 0/0
 32472 ;;		Unchanged: 0/0
 32473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32475 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32477 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32478 ;;Total ram usage:        1 bytes
 32479 ;; Hardware stack levels used:    1
 32480 ;; This function calls:
 32481 ;;		Nothing
 32482 ;; This function is called by:
 32483 ;;		__i2c_write
 32484 ;;		__i2c_read
 32485 ;;		_i2c_display_write_fixed
 32486 ;;		_i2c_display_write
 32487 ;; This function uses a non-reentrant model
 32488 ;;
 32489                           
 32490                           	psect	text161
 32491  007E26                     __ptext161:
 32492                           	opt stack 0
 32493  007E26                     __i2c_send:
 32494                           	opt stack 27
 32495                           
 32496                           ;incstack = 0
 32497                           ;__i2c_send@dat stored from wreg
 32498  007E26  6E01               	movwf	__i2c_send@dat,c
 32499                           
 32500                           ;i2c.c: 63: SSP1BUF = dat;
 32501  007E28  C001  FFC9         	movff	__i2c_send@dat,4041	;volatile
 32502  007E2C  0012               	return		;funcret
 32503  007E2E                     __end_of__i2c_send:
 32504                           	opt stack 0
 32505                           tosu	equ	0xFFF
 32506                           tosh	equ	0xFFE
 32507                           tosl	equ	0xFFD
 32508                           pclath	equ	0xFFA
 32509                           tblptru	equ	0xFF8
 32510                           tblptrh	equ	0xFF7
 32511                           tblptrl	equ	0xFF6
 32512                           tablat	equ	0xFF5
 32513                           prodh	equ	0xFF4
 32514                           prodl	equ	0xFF3
 32515                           intcon	equ	0xFF2
 32516                           intcon2	equ	0xFF1
 32517                           intcon3	equ	0xFF0
 32518                           indf0	equ	0xFEF
 32519                           postinc0	equ	0xFEE
 32520                           fsr0h	equ	0xFEA
 32521                           fsr0l	equ	0xFE9
 32522                           wreg	equ	0xFE8
 32523                           indf1	equ	0xFE7
 32524                           postdec1	equ	0xFE5
 32525                           plusw1	equ	0xFE3
 32526                           fsr1h	equ	0xFE2
 32527                           fsr1l	equ	0xFE1
 32528                           indf2	equ	0xFDF
 32529                           postinc2	equ	0xFDE
 32530                           postdec2	equ	0xFDD
 32531                           plusw2	equ	0xFDB
 32532                           fsr2h	equ	0xFDA
 32533                           fsr2l	equ	0xFD9
 32534                           status	equ	0xFD8
 32535                           
 32536 ;; *************** function __parse_command_long *****************
 32537 ;; Defined at:
 32538 ;;		line 453 in file "api.c"
 32539 ;; Parameters:    Size  Location     Type
 32540 ;;  data            2   82[COMRAM] PTR unsigned char 
 32541 ;;		 -> RAM(3759), 
 32542 ;; Auto vars:     Size  Location     Type
 32543 ;;  length          1   84[COMRAM] unsigned char 
 32544 ;; Return value:  Size  Location     Type
 32545 ;;                  1    wreg      unsigned char 
 32546 ;; Registers used:
 32547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32548 ;; Tracked objects:
 32549 ;;		On entry : 0/0
 32550 ;;		On exit  : 0/0
 32551 ;;		Unchanged: 0/0
 32552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32553 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32554 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32556 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32557 ;;Total ram usage:        3 bytes
 32558 ;; Hardware stack levels used:    1
 32559 ;; Hardware stack levels required when called:    9
 32560 ;; This function calls:
 32561 ;;		__parse_file_append
 32562 ;;		__parse_file_create
 32563 ;;		__parse_file_delete
 32564 ;;		__parse_file_modify
 32565 ;;		__parse_file_rename
 32566 ;;		__parse_file_truncate
 32567 ;; This function is called by:
 32568 ;;		_api_parse
 32569 ;; This function uses a non-reentrant model
 32570 ;;
 32571                           
 32572                           	psect	text162
 32573  005F0E                     __ptext162:
 32574                           	opt stack 0
 32575  005F0E                     __parse_command_long:
 32576                           	opt stack 20
 32577                           
 32578                           ;api.c: 455: uint8_t length = 65;
 32579                           
 32580                           ;incstack = 0
 32581  005F0E  0E41               	movlw	65
 32582  005F10  6E55               	movwf	__parse_command_long@length,c
 32583                           
 32584                           ;api.c: 457: switch(data[0])
 32585  005F12  D02B               	goto	l2587
 32586  005F14                     
 32587                           ;api.c: 460: length = _parse_file_truncate(data);
 32588  005F14  C053  F001         	movff	__parse_command_long@data,__parse_file_truncate@data
 32589  005F18  C054  F002         	movff	__parse_command_long@data+1,__parse_file_truncate@data+1
 32590  005F1C  EC2A  F03F         	call	__parse_file_truncate	;wreg free
 32591  005F20  D022               	goto	L40
 32592  005F22                     
 32593                           ;api.c: 464: length = _parse_file_delete(data);
 32594  005F22  C053  F03F         	movff	__parse_command_long@data,__parse_file_delete@data
 32595  005F26  C054  F040         	movff	__parse_command_long@data+1,__parse_file_delete@data+1
 32596  005F2A  EC21  F039         	call	__parse_file_delete	;wreg free
 32597  005F2E  D01B               	goto	L40
 32598  005F30                     
 32599                           ;api.c: 468: length = _parse_file_create(data);
 32600  005F30  C053  F050         	movff	__parse_command_long@data,__parse_file_create@data
 32601  005F34  C054  F051         	movff	__parse_command_long@data+1,__parse_file_create@data+1
 32602  005F38  EC2D  F034         	call	__parse_file_create	;wreg free
 32603  005F3C  D014               	goto	L40
 32604  005F3E                     
 32605                           ;api.c: 472: length = _parse_file_rename(data);
 32606  005F3E  C053  F043         	movff	__parse_command_long@data,__parse_file_rename@data
 32607  005F42  C054  F044         	movff	__parse_command_long@data+1,__parse_file_rename@data+1
 32608  005F46  ECCD  F034         	call	__parse_file_rename	;wreg free
 32609  005F4A  D00D               	goto	L40
 32610  005F4C                     
 32611                           ;api.c: 476: length = _parse_file_append(data);
 32612  005F4C  C053  F04B         	movff	__parse_command_long@data,__parse_file_append@data
 32613  005F50  C054  F04C         	movff	__parse_command_long@data+1,__parse_file_append@data+1
 32614  005F54  EC69  F031         	call	__parse_file_append	;wreg free
 32615  005F58  D006               	goto	L40
 32616  005F5A                     
 32617                           ;api.c: 480: length = _parse_file_modify(data);
 32618  005F5A  C053  F001         	movff	__parse_command_long@data,__parse_file_modify@data
 32619  005F5E  C054  F002         	movff	__parse_command_long@data+1,__parse_file_modify@data+1
 32620  005F62  EC2C  F03F         	call	__parse_file_modify	;wreg free
 32621  005F66                     L40:
 32622  005F66  6E55               	movwf	__parse_command_long@length,c
 32623                           
 32624                           ;api.c: 482: }
 32625                           
 32626                           ;api.c: 481: break;
 32627  005F68  D017               	goto	l2589
 32628  005F6A                     l2587:
 32629  005F6A  C053  FFD9         	movff	__parse_command_long@data,fsr2l
 32630  005F6E  C054  FFDA         	movff	__parse_command_long@data+1,fsr2h
 32631  005F72  50DF               	movf	indf2,w,c
 32632                           
 32633                           ; Switch size 1, requested type "space"
 32634                           ; Number of cases is 6, Range of values is 80 to 85
 32635                           ; switch strategies available:
 32636                           ; Name         Instructions Cycles
 32637                           ; simple_byte           19    10 (average)
 32638                           ;	Chosen strategy is simple_byte
 32639  005F74  0A50               	xorlw	80	; case 80
 32640  005F76  B4D8               	btfsc	status,2,c
 32641  005F78  D7CD               	goto	l2588
 32642  005F7A  0A01               	xorlw	1	; case 81
 32643  005F7C  B4D8               	btfsc	status,2,c
 32644  005F7E  D7D1               	goto	l2590
 32645  005F80  0A03               	xorlw	3	; case 82
 32646  005F82  B4D8               	btfsc	status,2,c
 32647  005F84  D7D5               	goto	l2591
 32648  005F86  0A01               	xorlw	1	; case 83
 32649  005F88  B4D8               	btfsc	status,2,c
 32650  005F8A  D7D9               	goto	l2592
 32651  005F8C  0A07               	xorlw	7	; case 84
 32652  005F8E  B4D8               	btfsc	status,2,c
 32653  005F90  D7DD               	goto	l2593
 32654  005F92  0A01               	xorlw	1	; case 85
 32655  005F94  B4D8               	btfsc	status,2,c
 32656  005F96  D7E1               	goto	l2594
 32657  005F98                     l2589:
 32658                           
 32659                           ;api.c: 484: return length;
 32660  005F98  5055               	movf	__parse_command_long@length,w,c
 32661  005F9A  0012               	return	
 32662  005F9C                     __end_of__parse_command_long:
 32663                           	opt stack 0
 32664                           tosu	equ	0xFFF
 32665                           tosh	equ	0xFFE
 32666                           tosl	equ	0xFFD
 32667                           pclath	equ	0xFFA
 32668                           tblptru	equ	0xFF8
 32669                           tblptrh	equ	0xFF7
 32670                           tblptrl	equ	0xFF6
 32671                           tablat	equ	0xFF5
 32672                           prodh	equ	0xFF4
 32673                           prodl	equ	0xFF3
 32674                           intcon	equ	0xFF2
 32675                           intcon2	equ	0xFF1
 32676                           intcon3	equ	0xFF0
 32677                           indf0	equ	0xFEF
 32678                           postinc0	equ	0xFEE
 32679                           fsr0h	equ	0xFEA
 32680                           fsr0l	equ	0xFE9
 32681                           wreg	equ	0xFE8
 32682                           indf1	equ	0xFE7
 32683                           postdec1	equ	0xFE5
 32684                           plusw1	equ	0xFE3
 32685                           fsr1h	equ	0xFE2
 32686                           fsr1l	equ	0xFE1
 32687                           indf2	equ	0xFDF
 32688                           postinc2	equ	0xFDE
 32689                           postdec2	equ	0xFDD
 32690                           plusw2	equ	0xFDB
 32691                           fsr2h	equ	0xFDA
 32692                           fsr2l	equ	0xFD9
 32693                           status	equ	0xFD8
 32694                           
 32695 ;; *************** function __parse_file_truncate *****************
 32696 ;; Defined at:
 32697 ;;		line 487 in file "api.c"
 32698 ;; Parameters:    Size  Location     Type
 32699 ;;  data            2    0[COMRAM] PTR unsigned char 
 32700 ;;		 -> RAM(3759), 
 32701 ;; Auto vars:     Size  Location     Type
 32702 ;;		None
 32703 ;; Return value:  Size  Location     Type
 32704 ;;                  1    wreg      unsigned char 
 32705 ;; Registers used:
 32706 ;;		wreg
 32707 ;; Tracked objects:
 32708 ;;		On entry : 0/0
 32709 ;;		On exit  : 0/0
 32710 ;;		Unchanged: 0/0
 32711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32712 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32713 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32715 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32716 ;;Total ram usage:        2 bytes
 32717 ;; Hardware stack levels used:    1
 32718 ;; This function calls:
 32719 ;;		Nothing
 32720 ;; This function is called by:
 32721 ;;		__parse_command_long
 32722 ;; This function uses a non-reentrant model
 32723 ;;
 32724                           
 32725                           	psect	text163
 32726  007E54                     __ptext163:
 32727                           	opt stack 0
 32728  007E54                     __parse_file_truncate:
 32729                           	opt stack 28
 32730                           
 32731                           ;api.c: 491: return 65;
 32732                           
 32733                           ;incstack = 0
 32734  007E54  0E41               	movlw	65
 32735  007E56  0012               	return	
 32736  007E58                     __end_of__parse_file_truncate:
 32737                           	opt stack 0
 32738                           tosu	equ	0xFFF
 32739                           tosh	equ	0xFFE
 32740                           tosl	equ	0xFFD
 32741                           pclath	equ	0xFFA
 32742                           tblptru	equ	0xFF8
 32743                           tblptrh	equ	0xFF7
 32744                           tblptrl	equ	0xFF6
 32745                           tablat	equ	0xFF5
 32746                           prodh	equ	0xFF4
 32747                           prodl	equ	0xFF3
 32748                           intcon	equ	0xFF2
 32749                           intcon2	equ	0xFF1
 32750                           intcon3	equ	0xFF0
 32751                           indf0	equ	0xFEF
 32752                           postinc0	equ	0xFEE
 32753                           fsr0h	equ	0xFEA
 32754                           fsr0l	equ	0xFE9
 32755                           wreg	equ	0xFE8
 32756                           indf1	equ	0xFE7
 32757                           postdec1	equ	0xFE5
 32758                           plusw1	equ	0xFE3
 32759                           fsr1h	equ	0xFE2
 32760                           fsr1l	equ	0xFE1
 32761                           indf2	equ	0xFDF
 32762                           postinc2	equ	0xFDE
 32763                           postdec2	equ	0xFDD
 32764                           plusw2	equ	0xFDB
 32765                           fsr2h	equ	0xFDA
 32766                           fsr2l	equ	0xFD9
 32767                           status	equ	0xFD8
 32768                           
 32769 ;; *************** function __parse_file_rename *****************
 32770 ;; Defined at:
 32771 ;;		line 520 in file "api.c"
 32772 ;; Parameters:    Size  Location     Type
 32773 ;;  data            2   66[COMRAM] PTR unsigned char 
 32774 ;;		 -> RAM(3759), 
 32775 ;; Auto vars:     Size  Location     Type
 32776 ;;		None
 32777 ;; Return value:  Size  Location     Type
 32778 ;;                  1    wreg      unsigned char 
 32779 ;; Registers used:
 32780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32781 ;; Tracked objects:
 32782 ;;		On entry : 0/0
 32783 ;;		On exit  : 0/0
 32784 ;;		Unchanged: 0/0
 32785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32786 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32788 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32789 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32790 ;;Total ram usage:        3 bytes
 32791 ;; Hardware stack levels used:    1
 32792 ;; Hardware stack levels required when called:    8
 32793 ;; This function calls:
 32794 ;;		_fat_rename_file
 32795 ;; This function is called by:
 32796 ;;		__parse_command_long
 32797 ;; This function uses a non-reentrant model
 32798 ;;
 32799                           
 32800                           	psect	text164
 32801  00699A                     __ptext164:
 32802                           	opt stack 0
 32803  00699A                     __parse_file_rename:
 32804                           	opt stack 20
 32805                           
 32806                           ;api.c: 523: if((data[0]!=COMMAND_FILE_RENAME) || (data[13]!=0x7E) || (data[14]!=0x18))
 32807                           
 32808                           ;incstack = 0
 32809  00699A  C043  FFD9         	movff	__parse_file_rename@data,fsr2l
 32810  00699E  C044  FFDA         	movff	__parse_file_rename@data+1,fsr2h
 32811  0069A2  0E53               	movlw	83
 32812  0069A4  18DE               	xorwf	postinc2,w,c
 32813  0069A6  A4D8               	btfss	status,2,c
 32814  0069A8  D014               	goto	u9070
 32815  0069AA  EE20 F00D          	lfsr	2,13
 32816  0069AE  5043               	movf	__parse_file_rename@data,w,c
 32817  0069B0  26D9               	addwf	fsr2l,f,c
 32818  0069B2  5044               	movf	__parse_file_rename@data+1,w,c
 32819  0069B4  22DA               	addwfc	fsr2h,f,c
 32820  0069B6  0E7E               	movlw	126
 32821  0069B8  18DE               	xorwf	postinc2,w,c
 32822  0069BA  A4D8               	btfss	status,2,c
 32823  0069BC  D00A               	goto	u9070
 32824  0069BE  EE20 F00E          	lfsr	2,14
 32825  0069C2  5043               	movf	__parse_file_rename@data,w,c
 32826  0069C4  26D9               	addwf	fsr2l,f,c
 32827  0069C6  5044               	movf	__parse_file_rename@data+1,w,c
 32828  0069C8  22DA               	addwfc	fsr2h,f,c
 32829  0069CA  0E18               	movlw	24
 32830  0069CC  18DE               	xorwf	postinc2,w,c
 32831  0069CE  B4D8               	btfsc	status,2,c
 32832  0069D0  D002               	goto	l2613
 32833  0069D2                     u9070:
 32834                           
 32835                           ;api.c: 524: {;api.c: 525: return 15;
 32836  0069D2  0E0F               	movlw	15
 32837  0069D4  0012               	return	
 32838  0069D6                     l2613:
 32839                           
 32840                           ;api.c: 526: };api.c: 529: fat_rename_file(data[1], &data[2], &data[10]);
 32841  0069D6  0E02               	movlw	2
 32842  0069D8  2443               	addwf	__parse_file_rename@data,w,c
 32843  0069DA  6E3F               	movwf	fat_rename_file@name,c
 32844  0069DC  0E00               	movlw	0
 32845  0069DE  2044               	addwfc	__parse_file_rename@data+1,w,c
 32846  0069E0  6E40               	movwf	fat_rename_file@name+1,c
 32847  0069E2  0E0A               	movlw	10
 32848  0069E4  2443               	addwf	__parse_file_rename@data,w,c
 32849  0069E6  6E41               	movwf	fat_rename_file@extension,c
 32850  0069E8  0E00               	movlw	0
 32851  0069EA  2044               	addwfc	__parse_file_rename@data+1,w,c
 32852  0069EC  6E42               	movwf	fat_rename_file@extension+1,c
 32853  0069EE  EE20 F001          	lfsr	2,1
 32854  0069F2  5043               	movf	__parse_file_rename@data,w,c
 32855  0069F4  26D9               	addwf	fsr2l,f,c
 32856  0069F6  5044               	movf	__parse_file_rename@data+1,w,c
 32857  0069F8  22DA               	addwfc	fsr2h,f,c
 32858  0069FA  50DF               	movf	indf2,w,c
 32859  0069FC  EC5F  F02E         	call	_fat_rename_file
 32860                           
 32861                           ;api.c: 530: return 15;
 32862  006A00  0E0F               	movlw	15
 32863  006A02  0012               	return	
 32864  006A04                     __end_of__parse_file_rename:
 32865                           	opt stack 0
 32866                           tosu	equ	0xFFF
 32867                           tosh	equ	0xFFE
 32868                           tosl	equ	0xFFD
 32869                           pclath	equ	0xFFA
 32870                           tblptru	equ	0xFF8
 32871                           tblptrh	equ	0xFF7
 32872                           tblptrl	equ	0xFF6
 32873                           tablat	equ	0xFF5
 32874                           prodh	equ	0xFF4
 32875                           prodl	equ	0xFF3
 32876                           intcon	equ	0xFF2
 32877                           intcon2	equ	0xFF1
 32878                           intcon3	equ	0xFF0
 32879                           indf0	equ	0xFEF
 32880                           postinc0	equ	0xFEE
 32881                           fsr0h	equ	0xFEA
 32882                           fsr0l	equ	0xFE9
 32883                           wreg	equ	0xFE8
 32884                           indf1	equ	0xFE7
 32885                           postdec1	equ	0xFE5
 32886                           plusw1	equ	0xFE3
 32887                           fsr1h	equ	0xFE2
 32888                           fsr1l	equ	0xFE1
 32889                           indf2	equ	0xFDF
 32890                           postinc2	equ	0xFDE
 32891                           postdec2	equ	0xFDD
 32892                           plusw2	equ	0xFDB
 32893                           fsr2h	equ	0xFDA
 32894                           fsr2l	equ	0xFD9
 32895                           status	equ	0xFD8
 32896                           
 32897 ;; *************** function _fat_rename_file *****************
 32898 ;; Defined at:
 32899 ;;		line 536 in file "fat16.c"
 32900 ;; Parameters:    Size  Location     Type
 32901 ;;  file_number     1    wreg     unsigned char 
 32902 ;;  name            2   62[COMRAM] PTR unsigned char 
 32903 ;;		 -> RAM(3759), 
 32904 ;;  extension       2   64[COMRAM] PTR unsigned char 
 32905 ;;		 -> RAM(3759), 
 32906 ;; Auto vars:     Size  Location     Type
 32907 ;;  file_number     1    0[BANK0 ] unsigned char 
 32908 ;;  root           32    1[BANK0 ] struct .
 32909 ;;  cntr            1   33[BANK0 ] unsigned char 
 32910 ;; Return value:  Size  Location     Type
 32911 ;;                  1    wreg      void 
 32912 ;; Registers used:
 32913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32914 ;; Tracked objects:
 32915 ;;		On entry : 0/0
 32916 ;;		On exit  : 0/0
 32917 ;;		Unchanged: 0/0
 32918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32919 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32920 ;;      Locals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32922 ;;      Totals:         4      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32923 ;;Total ram usage:       38 bytes
 32924 ;; Hardware stack levels used:    1
 32925 ;; Hardware stack levels required when called:    7
 32926 ;; This function calls:
 32927 ;;		__write_root
 32928 ;;		_fat_get_file_information
 32929 ;; This function is called by:
 32930 ;;		__parse_file_rename
 32931 ;; This function uses a non-reentrant model
 32932 ;;
 32933                           
 32934                           	psect	text165
 32935  005CBE                     __ptext165:
 32936                           	opt stack 0
 32937  005CBE                     _fat_rename_file:
 32938                           	opt stack 20
 32939                           
 32940                           ;incstack = 0
 32941                           ;fat_rename_file@file_number stored from wreg
 32942  005CBE  0100               	movlb	0	; () banked
 32943  005CC0  6FB5               	movwf	fat_rename_file@file_number& (0+255),b
 32944                           
 32945                           ;fat16.c: 538: rootEntry_t root;;fat16.c: 539: uint8_t cntr;;fat16.c: 542: fat_get_file_
      +                          information(file_number, &root);
 32946  005CC2  0EB6               	movlw	low fat_rename_file@root
 32947  005CC4  6E37               	movwf	fat_get_file_information@data,c
 32948  005CC6  0E00               	movlw	high fat_rename_file@root
 32949  005CC8  6E38               	movwf	fat_get_file_information@data+1,c
 32950  005CCA  0100               	movlb	0	; () banked
 32951  005CCC  51B5               	movf	fat_rename_file@file_number& (0+255),w,b
 32952  005CCE  ECD9  F032         	call	_fat_get_file_information
 32953                           
 32954                           ;fat16.c: 545: for(cntr=0; cntr<8; ++cntr)
 32955  005CD2  0E00               	movlw	0
 32956  005CD4  0100               	movlb	0	; () banked
 32957  005CD6  6FD6               	movwf	fat_rename_file@cntr& (0+255),b
 32958  005CD8                     l11264:
 32959                           
 32960                           ; BSR set to: 0
 32961  005CD8  0E07               	movlw	7
 32962  005CDA  65D6               	cpfsgt	fat_rename_file@cntr& (0+255),b
 32963  005CDC  D001               	goto	l1954
 32964  005CDE  D014               	goto	u8530
 32965  005CE0                     l1954:
 32966                           
 32967                           ; BSR set to: 0
 32968                           ;fat16.c: 546: {;fat16.c: 547: root.fileName[cntr] = name[cntr];
 32969                           
 32970                           ; BSR set to: 0
 32971  005CE0  51D6               	movf	fat_rename_file@cntr& (0+255),w,b
 32972  005CE2  0D01               	mullw	1
 32973  005CE4  50F3               	movf	prodl,w,c
 32974  005CE6  243F               	addwf	fat_rename_file@name,w,c
 32975  005CE8  6ED9               	movwf	fsr2l,c
 32976  005CEA  50F4               	movf	prodh,w,c
 32977  005CEC  2040               	addwfc	fat_rename_file@name+1,w,c
 32978  005CEE  6EDA               	movwf	fsr2h,c
 32979  005CF0  51D6               	movf	fat_rename_file@cntr& (0+255),w,b
 32980  005CF2  0D01               	mullw	1
 32981  005CF4  0EB6               	movlw	low fat_rename_file@root
 32982  005CF6  24F3               	addwf	prodl,w,c
 32983  005CF8  6EE1               	movwf	fsr1l,c
 32984  005CFA  0E00               	movlw	high fat_rename_file@root
 32985  005CFC  20F4               	addwfc	prodh,w,c
 32986  005CFE  6EE2               	movwf	fsr1h,c
 32987  005D00  CFDF FFE7          	movff	indf2,indf1
 32988                           
 32989                           ; BSR set to: 0
 32990  005D04  2BD6               	incf	fat_rename_file@cntr& (0+255),f,b
 32991  005D06  D7E8               	goto	l11264
 32992  005D08                     u8530:
 32993                           
 32994                           ; BSR set to: 0
 32995                           ;fat16.c: 548: };fat16.c: 551: for(cntr=0; cntr<3; ++cntr)
 32996                           
 32997                           ; BSR set to: 0
 32998  005D08  0E00               	movlw	0
 32999  005D0A  6FD6               	movwf	fat_rename_file@cntr& (0+255),b
 33000  005D0C                     l11276:
 33001                           
 33002                           ; BSR set to: 0
 33003  005D0C  0E02               	movlw	2
 33004  005D0E  65D6               	cpfsgt	fat_rename_file@cntr& (0+255),b
 33005  005D10  D001               	goto	l1956
 33006  005D12  D018               	goto	u8550
 33007  005D14                     l1956:
 33008                           
 33009                           ; BSR set to: 0
 33010                           ;fat16.c: 552: {;fat16.c: 553: root.fileExtension[cntr] = extension[cntr];
 33011                           
 33012                           ; BSR set to: 0
 33013  005D14  51D6               	movf	fat_rename_file@cntr& (0+255),w,b
 33014  005D16  0D01               	mullw	1
 33015  005D18  50F3               	movf	prodl,w,c
 33016  005D1A  2441               	addwf	fat_rename_file@extension,w,c
 33017  005D1C  6ED9               	movwf	fsr2l,c
 33018  005D1E  50F4               	movf	prodh,w,c
 33019  005D20  2042               	addwfc	fat_rename_file@extension+1,w,c
 33020  005D22  6EDA               	movwf	fsr2h,c
 33021  005D24  51D6               	movf	fat_rename_file@cntr& (0+255),w,b
 33022  005D26  0D01               	mullw	1
 33023  005D28  0E08               	movlw	8
 33024  005D2A  26F3               	addwf	prodl,f,c
 33025  005D2C  0E00               	movlw	0
 33026  005D2E  22F4               	addwfc	prodh,f,c
 33027  005D30  0EB6               	movlw	low fat_rename_file@root
 33028  005D32  24F3               	addwf	prodl,w,c
 33029  005D34  6EE1               	movwf	fsr1l,c
 33030  005D36  0E00               	movlw	high fat_rename_file@root
 33031  005D38  20F4               	addwfc	prodh,w,c
 33032  005D3A  6EE2               	movwf	fsr1h,c
 33033  005D3C  CFDF FFE7          	movff	indf2,indf1
 33034                           
 33035                           ; BSR set to: 0
 33036  005D40  2BD6               	incf	fat_rename_file@cntr& (0+255),f,b
 33037  005D42  D7E4               	goto	l11276
 33038  005D44                     u8550:
 33039                           
 33040                           ; BSR set to: 0
 33041                           ;fat16.c: 554: };fat16.c: 556: _write_root(file_number, &root);
 33042                           
 33043                           ; BSR set to: 0
 33044  005D44  0EB6               	movlw	low fat_rename_file@root
 33045  005D46  6E29               	movwf	__write_root@data,c
 33046  005D48  0E00               	movlw	high fat_rename_file@root
 33047  005D4A  6E2A               	movwf	__write_root@data+1,c
 33048  005D4C  51B5               	movf	fat_rename_file@file_number& (0+255),w,b
 33049  005D4E  EC47  F037         	call	__write_root
 33050  005D52  0012               	return		;funcret
 33051  005D54                     __end_of_fat_rename_file:
 33052                           	opt stack 0
 33053                           tosu	equ	0xFFF
 33054                           tosh	equ	0xFFE
 33055                           tosl	equ	0xFFD
 33056                           pclath	equ	0xFFA
 33057                           tblptru	equ	0xFF8
 33058                           tblptrh	equ	0xFF7
 33059                           tblptrl	equ	0xFF6
 33060                           tablat	equ	0xFF5
 33061                           prodh	equ	0xFF4
 33062                           prodl	equ	0xFF3
 33063                           intcon	equ	0xFF2
 33064                           intcon2	equ	0xFF1
 33065                           intcon3	equ	0xFF0
 33066                           indf0	equ	0xFEF
 33067                           postinc0	equ	0xFEE
 33068                           fsr0h	equ	0xFEA
 33069                           fsr0l	equ	0xFE9
 33070                           wreg	equ	0xFE8
 33071                           indf1	equ	0xFE7
 33072                           postdec1	equ	0xFE5
 33073                           plusw1	equ	0xFE3
 33074                           fsr1h	equ	0xFE2
 33075                           fsr1l	equ	0xFE1
 33076                           indf2	equ	0xFDF
 33077                           postinc2	equ	0xFDE
 33078                           postdec2	equ	0xFDD
 33079                           plusw2	equ	0xFDB
 33080                           fsr2h	equ	0xFDA
 33081                           fsr2l	equ	0xFD9
 33082                           status	equ	0xFD8
 33083                           
 33084 ;; *************** function __parse_file_modify *****************
 33085 ;; Defined at:
 33086 ;;		line 546 in file "api.c"
 33087 ;; Parameters:    Size  Location     Type
 33088 ;;  data            2    0[COMRAM] PTR unsigned char 
 33089 ;;		 -> RAM(3759), 
 33090 ;; Auto vars:     Size  Location     Type
 33091 ;;		None
 33092 ;; Return value:  Size  Location     Type
 33093 ;;                  1    wreg      unsigned char 
 33094 ;; Registers used:
 33095 ;;		wreg
 33096 ;; Tracked objects:
 33097 ;;		On entry : 0/0
 33098 ;;		On exit  : 0/0
 33099 ;;		Unchanged: 0/0
 33100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33101 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33104 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33105 ;;Total ram usage:        2 bytes
 33106 ;; Hardware stack levels used:    1
 33107 ;; This function calls:
 33108 ;;		Nothing
 33109 ;; This function is called by:
 33110 ;;		__parse_command_long
 33111 ;; This function uses a non-reentrant model
 33112 ;;
 33113                           
 33114                           	psect	text166
 33115  007E58                     __ptext166:
 33116                           	opt stack 0
 33117  007E58                     __parse_file_modify:
 33118                           	opt stack 28
 33119                           
 33120                           ;api.c: 550: return 65;
 33121                           
 33122                           ;incstack = 0
 33123  007E58  0E41               	movlw	65
 33124  007E5A  0012               	return	
 33125  007E5C                     __end_of__parse_file_modify:
 33126                           	opt stack 0
 33127                           tosu	equ	0xFFF
 33128                           tosh	equ	0xFFE
 33129                           tosl	equ	0xFFD
 33130                           pclath	equ	0xFFA
 33131                           tblptru	equ	0xFF8
 33132                           tblptrh	equ	0xFF7
 33133                           tblptrl	equ	0xFF6
 33134                           tablat	equ	0xFF5
 33135                           prodh	equ	0xFF4
 33136                           prodl	equ	0xFF3
 33137                           intcon	equ	0xFF2
 33138                           intcon2	equ	0xFF1
 33139                           intcon3	equ	0xFF0
 33140                           indf0	equ	0xFEF
 33141                           postinc0	equ	0xFEE
 33142                           fsr0h	equ	0xFEA
 33143                           fsr0l	equ	0xFE9
 33144                           wreg	equ	0xFE8
 33145                           indf1	equ	0xFE7
 33146                           postdec1	equ	0xFE5
 33147                           plusw1	equ	0xFE3
 33148                           fsr1h	equ	0xFE2
 33149                           fsr1l	equ	0xFE1
 33150                           indf2	equ	0xFDF
 33151                           postinc2	equ	0xFDE
 33152                           postdec2	equ	0xFDD
 33153                           plusw2	equ	0xFDB
 33154                           fsr2h	equ	0xFDA
 33155                           fsr2l	equ	0xFD9
 33156                           status	equ	0xFD8
 33157                           
 33158 ;; *************** function __parse_file_delete *****************
 33159 ;; Defined at:
 33160 ;;		line 494 in file "api.c"
 33161 ;; Parameters:    Size  Location     Type
 33162 ;;  data            2   62[COMRAM] PTR unsigned char 
 33163 ;;		 -> RAM(3759), 
 33164 ;; Auto vars:     Size  Location     Type
 33165 ;;		None
 33166 ;; Return value:  Size  Location     Type
 33167 ;;                  1    wreg      unsigned char 
 33168 ;; Registers used:
 33169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33170 ;; Tracked objects:
 33171 ;;		On entry : 0/0
 33172 ;;		On exit  : 0/0
 33173 ;;		Unchanged: 0/0
 33174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33175 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33177 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33178 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33179 ;;Total ram usage:        3 bytes
 33180 ;; Hardware stack levels used:    1
 33181 ;; Hardware stack levels required when called:    7
 33182 ;; This function calls:
 33183 ;;		_fat_delete_file
 33184 ;; This function is called by:
 33185 ;;		__parse_command_long
 33186 ;; This function uses a non-reentrant model
 33187 ;;
 33188                           
 33189                           	psect	text167
 33190  007242                     __ptext167:
 33191                           	opt stack 0
 33192  007242                     __parse_file_delete:
 33193                           	opt stack 21
 33194                           
 33195                           ;api.c: 497: if((data[0]!=COMMAND_FILE_DELETE) || (data[2]!=0x66) || (data[3]!=0xA0))
 33196                           
 33197                           ;incstack = 0
 33198  007242  C03F  FFD9         	movff	__parse_file_delete@data,fsr2l
 33199  007246  C040  FFDA         	movff	__parse_file_delete@data+1,fsr2h
 33200  00724A  0E51               	movlw	81
 33201  00724C  18DE               	xorwf	postinc2,w,c
 33202  00724E  A4D8               	btfss	status,2,c
 33203  007250  D014               	goto	u9010
 33204  007252  EE20 F002          	lfsr	2,2
 33205  007256  503F               	movf	__parse_file_delete@data,w,c
 33206  007258  26D9               	addwf	fsr2l,f,c
 33207  00725A  5040               	movf	__parse_file_delete@data+1,w,c
 33208  00725C  22DA               	addwfc	fsr2h,f,c
 33209  00725E  0E66               	movlw	102
 33210  007260  18DE               	xorwf	postinc2,w,c
 33211  007262  A4D8               	btfss	status,2,c
 33212  007264  D00A               	goto	u9010
 33213  007266  EE20 F003          	lfsr	2,3
 33214  00726A  503F               	movf	__parse_file_delete@data,w,c
 33215  00726C  26D9               	addwf	fsr2l,f,c
 33216  00726E  5040               	movf	__parse_file_delete@data+1,w,c
 33217  007270  22DA               	addwfc	fsr2h,f,c
 33218  007272  0EA0               	movlw	160
 33219  007274  18DE               	xorwf	postinc2,w,c
 33220  007276  B4D8               	btfsc	status,2,c
 33221  007278  D002               	goto	l2601
 33222  00727A                     u9010:
 33223                           
 33224                           ;api.c: 498: {;api.c: 499: return 4;
 33225  00727A  0E04               	movlw	4
 33226  00727C  0012               	return	
 33227  00727E                     l2601:
 33228                           
 33229                           ;api.c: 500: };api.c: 503: fat_delete_file(data[1]);
 33230  00727E  EE20 F001          	lfsr	2,1
 33231  007282  503F               	movf	__parse_file_delete@data,w,c
 33232  007284  26D9               	addwf	fsr2l,f,c
 33233  007286  5040               	movf	__parse_file_delete@data+1,w,c
 33234  007288  22DA               	addwfc	fsr2h,f,c
 33235  00728A  50DF               	movf	indf2,w,c
 33236  00728C  EC02  F035         	call	_fat_delete_file
 33237                           
 33238                           ;api.c: 504: return 4;
 33239  007290  0E04               	movlw	4
 33240  007292  0012               	return	
 33241  007294                     __end_of__parse_file_delete:
 33242                           	opt stack 0
 33243                           tosu	equ	0xFFF
 33244                           tosh	equ	0xFFE
 33245                           tosl	equ	0xFFD
 33246                           pclath	equ	0xFFA
 33247                           tblptru	equ	0xFF8
 33248                           tblptrh	equ	0xFF7
 33249                           tblptrl	equ	0xFF6
 33250                           tablat	equ	0xFF5
 33251                           prodh	equ	0xFF4
 33252                           prodl	equ	0xFF3
 33253                           intcon	equ	0xFF2
 33254                           intcon2	equ	0xFF1
 33255                           intcon3	equ	0xFF0
 33256                           indf0	equ	0xFEF
 33257                           postinc0	equ	0xFEE
 33258                           fsr0h	equ	0xFEA
 33259                           fsr0l	equ	0xFE9
 33260                           wreg	equ	0xFE8
 33261                           indf1	equ	0xFE7
 33262                           postdec1	equ	0xFE5
 33263                           plusw1	equ	0xFE3
 33264                           fsr1h	equ	0xFE2
 33265                           fsr1l	equ	0xFE1
 33266                           indf2	equ	0xFDF
 33267                           postinc2	equ	0xFDE
 33268                           postdec2	equ	0xFDD
 33269                           plusw2	equ	0xFDB
 33270                           fsr2h	equ	0xFDA
 33271                           fsr2l	equ	0xFD9
 33272                           status	equ	0xFD8
 33273                           
 33274 ;; *************** function _fat_delete_file *****************
 33275 ;; Defined at:
 33276 ;;		line 391 in file "fat16.c"
 33277 ;; Parameters:    Size  Location     Type
 33278 ;;  file_number     1    wreg     unsigned char 
 33279 ;; Auto vars:     Size  Location     Type
 33280 ;;  file_number     1   61[COMRAM] unsigned char 
 33281 ;;  first_cluste    2   59[COMRAM] unsigned int 
 33282 ;;  next_cluster    2   57[COMRAM] unsigned int 
 33283 ;; Return value:  Size  Location     Type
 33284 ;;                  1    wreg      void 
 33285 ;; Registers used:
 33286 ;;		wreg, status,2, status,0, cstack
 33287 ;; Tracked objects:
 33288 ;;		On entry : 0/0
 33289 ;;		On exit  : 0/0
 33290 ;;		Unchanged: 0/0
 33291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33293 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33295 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33296 ;;Total ram usage:        5 bytes
 33297 ;; Hardware stack levels used:    1
 33298 ;; Hardware stack levels required when called:    6
 33299 ;; This function calls:
 33300 ;;		__delete_root
 33301 ;;		__get_first_cluster
 33302 ;;		__read_fat
 33303 ;;		__root_is_available
 33304 ;;		__write_fat
 33305 ;; This function is called by:
 33306 ;;		__parse_file_delete
 33307 ;; This function uses a non-reentrant model
 33308 ;;
 33309                           
 33310                           	psect	text168
 33311  006A04                     __ptext168:
 33312                           	opt stack 0
 33313  006A04                     _fat_delete_file:
 33314                           	opt stack 21
 33315                           
 33316                           ;incstack = 0
 33317                           ;fat_delete_file@file_number stored from wreg
 33318  006A04  6E3E               	movwf	fat_delete_file@file_number,c
 33319                           
 33320                           ;fat16.c: 393: uint16_t first_cluster;;fat16.c: 394: uint16_t next_cluster;;fat16.c: 397
      +                          : if(file_number>=64)
 33321  006A06  0E3F               	movlw	63
 33322  006A08  643E               	cpfsgt	fat_delete_file@file_number,c
 33323  006A0A  D001               	goto	l1928
 33324  006A0C  0012               	return	
 33325  006A0E                     l1928:
 33326                           
 33327                           ;fat16.c: 401: };fat16.c: 404: if(_root_is_available(file_number))
 33328  006A0E  503E               	movf	fat_delete_file@file_number,w,c
 33329  006A10  EC9E  F032         	call	__root_is_available
 33330  006A14  0900               	iorlw	0
 33331  006A16  A4D8               	btfss	status,2,c
 33332  006A18  0012               	return	
 33333                           
 33334                           ;fat16.c: 408: };fat16.c: 411: first_cluster = _get_first_cluster(file_number);
 33335                           
 33336                           ;fat16.c: 405: {;fat16.c: 407: return;
 33337  006A1A  503E               	movf	fat_delete_file@file_number,w,c
 33338  006A1C  EC37  F035         	call	__get_first_cluster
 33339  006A20  C030  F03C         	movff	?__get_first_cluster,fat_delete_file@first_cluster
 33340  006A24  C031  F03D         	movff	?__get_first_cluster+1,fat_delete_file@first_cluster+1
 33341  006A28                     l1931:
 33342                           
 33343                           ;fat16.c: 415: {;fat16.c: 418: next_cluster = _read_fat(first_cluster);
 33344  006A28  C03C  F030         	movff	fat_delete_file@first_cluster,__read_fat@cluster
 33345  006A2C  C03D  F031         	movff	fat_delete_file@first_cluster+1,__read_fat@cluster+1
 33346  006A30  ECE2  F039         	call	__read_fat	;wreg free
 33347  006A34  C030  F03A         	movff	?__read_fat,fat_delete_file@next_cluster
 33348  006A38  C031  F03B         	movff	?__read_fat+1,fat_delete_file@next_cluster+1
 33349                           
 33350                           ;fat16.c: 425: _write_fat(first_cluster, 0x0000);
 33351  006A3C  C03C  F029         	movff	fat_delete_file@first_cluster,__write_fat@cluster
 33352  006A40  C03D  F02A         	movff	fat_delete_file@first_cluster+1,__write_fat@cluster+1
 33353  006A44  0E00               	movlw	0
 33354  006A46  6E2C               	movwf	__write_fat@value+1,c
 33355  006A48  0E00               	movlw	0
 33356  006A4A  6E2B               	movwf	__write_fat@value,c
 33357  006A4C  ECAB  F03A         	call	__write_fat	;wreg free
 33358                           
 33359                           ;fat16.c: 427: if(next_cluster>0xFFF0)
 33360  006A50  0EF1               	movlw	241
 33361  006A52  5C3A               	subwf	fat_delete_file@next_cluster,w,c
 33362  006A54  0EFF               	movlw	255
 33363  006A56  583B               	subwfb	fat_delete_file@next_cluster+1,w,c
 33364  006A58  B0D8               	btfsc	status,0,c
 33365  006A5A  D005               	goto	l1933
 33366                           
 33367                           ;fat16.c: 432: else;fat16.c: 433: {;fat16.c: 434: first_cluster = next_cluster;
 33368                           
 33369                           ;fat16.c: 430: }
 33370                           
 33371                           ;fat16.c: 428: {;fat16.c: 429: break;
 33372  006A5C  C03A  F03C         	movff	fat_delete_file@next_cluster,fat_delete_file@first_cluster
 33373  006A60  C03B  F03D         	movff	fat_delete_file@next_cluster+1,fat_delete_file@first_cluster+1
 33374  006A64  D7E1               	goto	l1931
 33375  006A66                     l1933:
 33376                           
 33377                           ;fat16.c: 435: };fat16.c: 436: };fat16.c: 440: _delete_root(file_number);
 33378  006A66  503E               	movf	fat_delete_file@file_number,w,c
 33379  006A68  EC94  F036         	call	__delete_root
 33380  006A6C  0012               	return		;funcret
 33381  006A6E                     __end_of_fat_delete_file:
 33382                           	opt stack 0
 33383                           tosu	equ	0xFFF
 33384                           tosh	equ	0xFFE
 33385                           tosl	equ	0xFFD
 33386                           pclath	equ	0xFFA
 33387                           tblptru	equ	0xFF8
 33388                           tblptrh	equ	0xFF7
 33389                           tblptrl	equ	0xFF6
 33390                           tablat	equ	0xFF5
 33391                           prodh	equ	0xFF4
 33392                           prodl	equ	0xFF3
 33393                           intcon	equ	0xFF2
 33394                           intcon2	equ	0xFF1
 33395                           intcon3	equ	0xFF0
 33396                           indf0	equ	0xFEF
 33397                           postinc0	equ	0xFEE
 33398                           fsr0h	equ	0xFEA
 33399                           fsr0l	equ	0xFE9
 33400                           wreg	equ	0xFE8
 33401                           indf1	equ	0xFE7
 33402                           postdec1	equ	0xFE5
 33403                           plusw1	equ	0xFE3
 33404                           fsr1h	equ	0xFE2
 33405                           fsr1l	equ	0xFE1
 33406                           indf2	equ	0xFDF
 33407                           postinc2	equ	0xFDE
 33408                           postdec2	equ	0xFDD
 33409                           plusw2	equ	0xFDB
 33410                           fsr2h	equ	0xFDA
 33411                           fsr2l	equ	0xFD9
 33412                           status	equ	0xFD8
 33413                           
 33414 ;; *************** function __get_first_cluster *****************
 33415 ;; Defined at:
 33416 ;;		line 205 in file "fat16.c"
 33417 ;; Parameters:    Size  Location     Type
 33418 ;;  slot            1    wreg     unsigned char 
 33419 ;; Auto vars:     Size  Location     Type
 33420 ;;  slot            1   56[COMRAM] unsigned char 
 33421 ;;  first_cluste    2   54[COMRAM] unsigned int 
 33422 ;;  offset          2   52[COMRAM] unsigned int 
 33423 ;;  sector          2   50[COMRAM] unsigned int 
 33424 ;; Return value:  Size  Location     Type
 33425 ;;                  2   47[COMRAM] unsigned int 
 33426 ;; Registers used:
 33427 ;;		wreg, status,2, status,0, cstack
 33428 ;; Tracked objects:
 33429 ;;		On entry : 0/0
 33430 ;;		On exit  : 0/0
 33431 ;;		Unchanged: 0/0
 33432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33433 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33434 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33435 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33436 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33437 ;;Total ram usage:       10 bytes
 33438 ;; Hardware stack levels used:    1
 33439 ;; Hardware stack levels required when called:    5
 33440 ;; This function calls:
 33441 ;;		_flash_partial_read
 33442 ;; This function is called by:
 33443 ;;		_fat_delete_file
 33444 ;; This function uses a non-reentrant model
 33445 ;;
 33446                           
 33447                           	psect	text169
 33448  006A6E                     __ptext169:
 33449                           	opt stack 0
 33450  006A6E                     __get_first_cluster:
 33451                           	opt stack 21
 33452                           
 33453                           ;incstack = 0
 33454                           ;__get_first_cluster@slot stored from wreg
 33455  006A6E  6E39               	movwf	__get_first_cluster@slot,c
 33456                           
 33457                           ;fat16.c: 207: uint16_t sector;;fat16.c: 208: uint16_t offset;;fat16.c: 209: uint16_t fi
      +                          rst_cluster;;fat16.c: 210: sector = slot >> 4;
 33458  006A70  C039  F032         	movff	__get_first_cluster@slot,??__get_first_cluster
 33459  006A74  3A32               	swapf	??__get_first_cluster,f,c
 33460  006A76  0E0F               	movlw	15
 33461  006A78  1632               	andwf	??__get_first_cluster,f,c
 33462  006A7A  5032               	movf	??__get_first_cluster,w,c
 33463  006A7C  6E33               	movwf	__get_first_cluster@sector,c
 33464  006A7E  6A34               	clrf	__get_first_cluster@sector+1,c
 33465                           
 33466                           ;fat16.c: 211: sector += 18;
 33467  006A80  0E12               	movlw	18
 33468  006A82  2633               	addwf	__get_first_cluster@sector,f,c
 33469  006A84  0E00               	movlw	0
 33470  006A86  2234               	addwfc	__get_first_cluster@sector+1,f,c
 33471                           
 33472                           ;fat16.c: 212: offset = slot & 0b1111;
 33473  006A88  C039  F032         	movff	__get_first_cluster@slot,??__get_first_cluster
 33474  006A8C  0E0F               	movlw	15
 33475  006A8E  1632               	andwf	??__get_first_cluster,f,c
 33476  006A90  5032               	movf	??__get_first_cluster,w,c
 33477  006A92  6E35               	movwf	__get_first_cluster@offset,c
 33478  006A94  6A36               	clrf	__get_first_cluster@offset+1,c
 33479                           
 33480                           ;fat16.c: 213: offset <<= 5;
 33481  006A96  0E05               	movlw	5
 33482  006A98                     u7615:
 33483  006A98  90D8               	bcf	status,0,c
 33484  006A9A  3635               	rlcf	__get_first_cluster@offset,f,c
 33485  006A9C  3636               	rlcf	__get_first_cluster@offset+1,f,c
 33486  006A9E  2EE8               	decfsz	wreg,f,c
 33487  006AA0  D7FB               	goto	u7615
 33488                           
 33489                           ;fat16.c: 214: offset += 26;
 33490  006AA2  0E1A               	movlw	26
 33491  006AA4  2635               	addwf	__get_first_cluster@offset,f,c
 33492  006AA6  0E00               	movlw	0
 33493  006AA8  2236               	addwfc	__get_first_cluster@offset+1,f,c
 33494                           
 33495                           ;fat16.c: 215: flash_partial_read(sector, offset, 2, &first_cluster);
 33496  006AAA  C033  F028         	movff	__get_first_cluster@sector,flash_partial_read@page
 33497  006AAE  C034  F029         	movff	__get_first_cluster@sector+1,flash_partial_read@page+1
 33498  006AB2  C035  F02A         	movff	__get_first_cluster@offset,flash_partial_read@start
 33499  006AB6  C036  F02B         	movff	__get_first_cluster@offset+1,flash_partial_read@start+1
 33500  006ABA  0E00               	movlw	0
 33501  006ABC  6E2D               	movwf	flash_partial_read@length+1,c
 33502  006ABE  0E02               	movlw	2
 33503  006AC0  6E2C               	movwf	flash_partial_read@length,c
 33504  006AC2  0E37               	movlw	low __get_first_cluster@first_cluster
 33505  006AC4  6E2E               	movwf	flash_partial_read@data,c
 33506  006AC6  0E00               	movlw	high __get_first_cluster@first_cluster
 33507  006AC8  6E2F               	movwf	flash_partial_read@data+1,c
 33508  006ACA  EC69  F03C         	call	_flash_partial_read	;wreg free
 33509                           
 33510                           ;fat16.c: 216: return first_cluster;
 33511  006ACE  C037  F030         	movff	__get_first_cluster@first_cluster,?__get_first_cluster
 33512  006AD2  C038  F031         	movff	__get_first_cluster@first_cluster+1,?__get_first_cluster+1
 33513  006AD6  0012               	return	
 33514  006AD8                     __end_of__get_first_cluster:
 33515                           	opt stack 0
 33516                           tosu	equ	0xFFF
 33517                           tosh	equ	0xFFE
 33518                           tosl	equ	0xFFD
 33519                           pclath	equ	0xFFA
 33520                           tblptru	equ	0xFF8
 33521                           tblptrh	equ	0xFF7
 33522                           tblptrl	equ	0xFF6
 33523                           tablat	equ	0xFF5
 33524                           prodh	equ	0xFF4
 33525                           prodl	equ	0xFF3
 33526                           intcon	equ	0xFF2
 33527                           intcon2	equ	0xFF1
 33528                           intcon3	equ	0xFF0
 33529                           indf0	equ	0xFEF
 33530                           postinc0	equ	0xFEE
 33531                           fsr0h	equ	0xFEA
 33532                           fsr0l	equ	0xFE9
 33533                           wreg	equ	0xFE8
 33534                           indf1	equ	0xFE7
 33535                           postdec1	equ	0xFE5
 33536                           plusw1	equ	0xFE3
 33537                           fsr1h	equ	0xFE2
 33538                           fsr1l	equ	0xFE1
 33539                           indf2	equ	0xFDF
 33540                           postinc2	equ	0xFDE
 33541                           postdec2	equ	0xFDD
 33542                           plusw2	equ	0xFDB
 33543                           fsr2h	equ	0xFDA
 33544                           fsr2l	equ	0xFD9
 33545                           status	equ	0xFD8
 33546                           
 33547 ;; *************** function __delete_root *****************
 33548 ;; Defined at:
 33549 ;;		line 192 in file "fat16.c"
 33550 ;; Parameters:    Size  Location     Type
 33551 ;;  slot            1    wreg     unsigned char 
 33552 ;; Auto vars:     Size  Location     Type
 33553 ;;  slot            1   46[COMRAM] unsigned char 
 33554 ;;  offset          2   43[COMRAM] unsigned int 
 33555 ;;  root_sector     2   41[COMRAM] unsigned int 
 33556 ;;  deleted_valu    1   45[COMRAM] unsigned char 
 33557 ;; Return value:  Size  Location     Type
 33558 ;;                  1    wreg      void 
 33559 ;; Registers used:
 33560 ;;		wreg, status,2, status,0, cstack
 33561 ;; Tracked objects:
 33562 ;;		On entry : 0/0
 33563 ;;		On exit  : 0/0
 33564 ;;		Unchanged: 0/0
 33565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33567 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33568 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33569 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33570 ;;Total ram usage:        7 bytes
 33571 ;; Hardware stack levels used:    1
 33572 ;; Hardware stack levels required when called:    5
 33573 ;; This function calls:
 33574 ;;		_flash_partial_write
 33575 ;; This function is called by:
 33576 ;;		_fat_delete_file
 33577 ;; This function uses a non-reentrant model
 33578 ;;
 33579                           
 33580                           	psect	text170
 33581  006D28                     __ptext170:
 33582                           	opt stack 0
 33583  006D28                     __delete_root:
 33584                           	opt stack 21
 33585                           
 33586                           ;incstack = 0
 33587                           ;__delete_root@slot stored from wreg
 33588  006D28  6E2F               	movwf	__delete_root@slot,c
 33589                           
 33590                           ;fat16.c: 194: uint16_t root_sector;;fat16.c: 195: uint16_t offset;;fat16.c: 196: uint8_
      +                          t deleted_value;;fat16.c: 198: root_sector = (slot >> 4) + 18;
 33591  006D2A  C02F  F029         	movff	__delete_root@slot,??__delete_root
 33592  006D2E  3A29               	swapf	??__delete_root,f,c
 33593  006D30  0E0F               	movlw	15
 33594  006D32  1629               	andwf	??__delete_root,f,c
 33595  006D34  0E12               	movlw	18
 33596  006D36  2429               	addwf	??__delete_root,w,c
 33597  006D38  6E2A               	movwf	__delete_root@root_sector,c
 33598  006D3A  6A2B               	clrf	__delete_root@root_sector+1,c
 33599  006D3C  0E00               	movlw	0
 33600  006D3E  222B               	addwfc	__delete_root@root_sector+1,f,c
 33601                           
 33602                           ;fat16.c: 199: offset = (slot & 0b1111);
 33603  006D40  C02F  F029         	movff	__delete_root@slot,??__delete_root
 33604  006D44  0E0F               	movlw	15
 33605  006D46  1629               	andwf	??__delete_root,f,c
 33606  006D48  5029               	movf	??__delete_root,w,c
 33607  006D4A  6E2C               	movwf	__delete_root@offset,c
 33608  006D4C  6A2D               	clrf	__delete_root@offset+1,c
 33609                           
 33610                           ;fat16.c: 200: offset <<= 5;
 33611  006D4E  0E05               	movlw	5
 33612  006D50                     u7605:
 33613  006D50  90D8               	bcf	status,0,c
 33614  006D52  362C               	rlcf	__delete_root@offset,f,c
 33615  006D54  362D               	rlcf	__delete_root@offset+1,f,c
 33616  006D56  2EE8               	decfsz	wreg,f,c
 33617  006D58  D7FB               	goto	u7605
 33618                           
 33619                           ;fat16.c: 201: deleted_value = 0xE5;
 33620  006D5A  0EE5               	movlw	229
 33621  006D5C  6E2E               	movwf	__delete_root@deleted_value,c
 33622                           
 33623                           ;fat16.c: 202: flash_partial_write(root_sector, offset, 1, &deleted_value);
 33624  006D5E  C02A  F020         	movff	__delete_root@root_sector,flash_partial_write@page
 33625  006D62  C02B  F021         	movff	__delete_root@root_sector+1,flash_partial_write@page+1
 33626  006D66  C02C  F022         	movff	__delete_root@offset,flash_partial_write@start
 33627  006D6A  C02D  F023         	movff	__delete_root@offset+1,flash_partial_write@start+1
 33628  006D6E  0E00               	movlw	0
 33629  006D70  6E25               	movwf	flash_partial_write@length+1,c
 33630  006D72  0E01               	movlw	1
 33631  006D74  6E24               	movwf	flash_partial_write@length,c
 33632  006D76  0E2E               	movlw	low __delete_root@deleted_value
 33633  006D78  6E26               	movwf	flash_partial_write@data,c
 33634  006D7A  0E00               	movlw	high __delete_root@deleted_value
 33635  006D7C  6E27               	movwf	flash_partial_write@data+1,c
 33636  006D7E  ECBE  F033         	call	_flash_partial_write	;wreg free
 33637  006D82  0012               	return		;funcret
 33638  006D84                     __end_of__delete_root:
 33639                           	opt stack 0
 33640                           tosu	equ	0xFFF
 33641                           tosh	equ	0xFFE
 33642                           tosl	equ	0xFFD
 33643                           pclath	equ	0xFFA
 33644                           tblptru	equ	0xFF8
 33645                           tblptrh	equ	0xFF7
 33646                           tblptrl	equ	0xFF6
 33647                           tablat	equ	0xFF5
 33648                           prodh	equ	0xFF4
 33649                           prodl	equ	0xFF3
 33650                           intcon	equ	0xFF2
 33651                           intcon2	equ	0xFF1
 33652                           intcon3	equ	0xFF0
 33653                           indf0	equ	0xFEF
 33654                           postinc0	equ	0xFEE
 33655                           fsr0h	equ	0xFEA
 33656                           fsr0l	equ	0xFE9
 33657                           wreg	equ	0xFE8
 33658                           indf1	equ	0xFE7
 33659                           postdec1	equ	0xFE5
 33660                           plusw1	equ	0xFE3
 33661                           fsr1h	equ	0xFE2
 33662                           fsr1l	equ	0xFE1
 33663                           indf2	equ	0xFDF
 33664                           postinc2	equ	0xFDE
 33665                           postdec2	equ	0xFDD
 33666                           plusw2	equ	0xFDB
 33667                           fsr2h	equ	0xFDA
 33668                           fsr2l	equ	0xFD9
 33669                           status	equ	0xFD8
 33670                           
 33671 ;; *************** function __parse_file_create *****************
 33672 ;; Defined at:
 33673 ;;		line 507 in file "api.c"
 33674 ;; Parameters:    Size  Location     Type
 33675 ;;  data            2   79[COMRAM] PTR unsigned char 
 33676 ;;		 -> RAM(3759), 
 33677 ;; Auto vars:     Size  Location     Type
 33678 ;;		None
 33679 ;; Return value:  Size  Location     Type
 33680 ;;                  1    wreg      unsigned char 
 33681 ;; Registers used:
 33682 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33683 ;; Tracked objects:
 33684 ;;		On entry : 0/0
 33685 ;;		On exit  : 0/0
 33686 ;;		Unchanged: 0/0
 33687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33688 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33690 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33691 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33692 ;;Total ram usage:        3 bytes
 33693 ;; Hardware stack levels used:    1
 33694 ;; Hardware stack levels required when called:    8
 33695 ;; This function calls:
 33696 ;;		_fat_create_file
 33697 ;; This function is called by:
 33698 ;;		__parse_command_long
 33699 ;; This function uses a non-reentrant model
 33700 ;;
 33701                           
 33702                           	psect	text171
 33703  00685A                     __ptext171:
 33704                           	opt stack 0
 33705  00685A                     __parse_file_create:
 33706                           	opt stack 20
 33707                           
 33708                           ;api.c: 510: if((data[0]!=COMMAND_FILE_CREATE) || (data[12]!=0xBD) || (data[13]!=0x4F))
 33709                           
 33710                           ;incstack = 0
 33711  00685A  C050  FFD9         	movff	__parse_file_create@data,fsr2l
 33712  00685E  C051  FFDA         	movff	__parse_file_create@data+1,fsr2h
 33713  006862  0E52               	movlw	82
 33714  006864  18DE               	xorwf	postinc2,w,c
 33715  006866  A4D8               	btfss	status,2,c
 33716  006868  D014               	goto	u9040
 33717  00686A  EE20 F00C          	lfsr	2,12
 33718  00686E  5050               	movf	__parse_file_create@data,w,c
 33719  006870  26D9               	addwf	fsr2l,f,c
 33720  006872  5051               	movf	__parse_file_create@data+1,w,c
 33721  006874  22DA               	addwfc	fsr2h,f,c
 33722  006876  0EBD               	movlw	189
 33723  006878  18DE               	xorwf	postinc2,w,c
 33724  00687A  A4D8               	btfss	status,2,c
 33725  00687C  D00A               	goto	u9040
 33726  00687E  EE20 F00D          	lfsr	2,13
 33727  006882  5050               	movf	__parse_file_create@data,w,c
 33728  006884  26D9               	addwf	fsr2l,f,c
 33729  006886  5051               	movf	__parse_file_create@data+1,w,c
 33730  006888  22DA               	addwfc	fsr2h,f,c
 33731  00688A  0E4F               	movlw	79
 33732  00688C  18DE               	xorwf	postinc2,w,c
 33733  00688E  B4D8               	btfsc	status,2,c
 33734  006890  D002               	goto	l2607
 33735  006892                     u9040:
 33736                           
 33737                           ;api.c: 511: {;api.c: 512: return 14;
 33738  006892  0E0E               	movlw	14
 33739  006894  0012               	return	
 33740  006896                     l2607:
 33741                           
 33742                           ;api.c: 513: };api.c: 516: fat_create_file(&data[1], &data[9], 0);
 33743  006896  0E01               	movlw	1
 33744  006898  2450               	addwf	__parse_file_create@data,w,c
 33745  00689A  6E44               	movwf	fat_create_file@name,c
 33746  00689C  0E00               	movlw	0
 33747  00689E  2051               	addwfc	__parse_file_create@data+1,w,c
 33748  0068A0  6E45               	movwf	fat_create_file@name+1,c
 33749  0068A2  0E09               	movlw	9
 33750  0068A4  2450               	addwf	__parse_file_create@data,w,c
 33751  0068A6  6E46               	movwf	fat_create_file@extension,c
 33752  0068A8  0E00               	movlw	0
 33753  0068AA  2051               	addwfc	__parse_file_create@data+1,w,c
 33754  0068AC  6E47               	movwf	fat_create_file@extension+1,c
 33755  0068AE  0E00               	movlw	0
 33756  0068B0  6E48               	movwf	fat_create_file@size,c
 33757  0068B2  0E00               	movlw	0
 33758  0068B4  6E49               	movwf	fat_create_file@size+1,c
 33759  0068B6  0E00               	movlw	0
 33760  0068B8  6E4A               	movwf	fat_create_file@size+2,c
 33761  0068BA  0E00               	movlw	0
 33762  0068BC  6E4B               	movwf	fat_create_file@size+3,c
 33763  0068BE  EC65  F017         	call	_fat_create_file	;wreg free
 33764                           
 33765                           ;api.c: 517: return 14;
 33766  0068C2  0E0E               	movlw	14
 33767  0068C4  0012               	return	
 33768  0068C6                     __end_of__parse_file_create:
 33769                           	opt stack 0
 33770                           tosu	equ	0xFFF
 33771                           tosh	equ	0xFFE
 33772                           tosl	equ	0xFFD
 33773                           pclath	equ	0xFFA
 33774                           tblptru	equ	0xFF8
 33775                           tblptrh	equ	0xFF7
 33776                           tblptrl	equ	0xFF6
 33777                           tablat	equ	0xFF5
 33778                           prodh	equ	0xFF4
 33779                           prodl	equ	0xFF3
 33780                           intcon	equ	0xFF2
 33781                           intcon2	equ	0xFF1
 33782                           intcon3	equ	0xFF0
 33783                           indf0	equ	0xFEF
 33784                           postinc0	equ	0xFEE
 33785                           fsr0h	equ	0xFEA
 33786                           fsr0l	equ	0xFE9
 33787                           wreg	equ	0xFE8
 33788                           indf1	equ	0xFE7
 33789                           postdec1	equ	0xFE5
 33790                           plusw1	equ	0xFE3
 33791                           fsr1h	equ	0xFE2
 33792                           fsr1l	equ	0xFE1
 33793                           indf2	equ	0xFDF
 33794                           postinc2	equ	0xFDE
 33795                           postdec2	equ	0xFDD
 33796                           plusw2	equ	0xFDB
 33797                           fsr2h	equ	0xFDA
 33798                           fsr2l	equ	0xFD9
 33799                           status	equ	0xFD8
 33800                           
 33801 ;; *************** function _fat_create_file *****************
 33802 ;; Defined at:
 33803 ;;		line 309 in file "fat16.c"
 33804 ;; Parameters:    Size  Location     Type
 33805 ;;  name            2   67[COMRAM] PTR unsigned char 
 33806 ;;		 -> RAM(3759), 
 33807 ;;  extension       2   69[COMRAM] PTR unsigned char 
 33808 ;;		 -> RAM(3759), 
 33809 ;;  size            4   71[COMRAM] unsigned long 
 33810 ;; Auto vars:     Size  Location     Type
 33811 ;;  root_entry     32    9[BANK0 ] struct .
 33812 ;;  cluster         2    7[BANK0 ] unsigned int 
 33813 ;;  number_of_cl    2    5[BANK0 ] unsigned int 
 33814 ;;  cluster_coun    2    2[BANK0 ] unsigned int 
 33815 ;;  next_cluster    2    0[BANK0 ] unsigned int 
 33816 ;;  root_slot       1    4[BANK0 ] unsigned char 
 33817 ;; Return value:  Size  Location     Type
 33818 ;;                  1    wreg      unsigned char 
 33819 ;; Registers used:
 33820 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33821 ;; Tracked objects:
 33822 ;;		On entry : 0/0
 33823 ;;		On exit  : 0/0
 33824 ;;		Unchanged: 0/0
 33825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33826 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33827 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33828 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33829 ;;      Totals:        12      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33830 ;;Total ram usage:       53 bytes
 33831 ;; Hardware stack levels used:    1
 33832 ;; Hardware stack levels required when called:    7
 33833 ;; This function calls:
 33834 ;;		__get_available_root_entry
 33835 ;;		__get_date
 33836 ;;		__get_empty_cluster
 33837 ;;		__get_time
 33838 ;;		__write_fat
 33839 ;;		__write_root
 33840 ;;		_fat_find_file
 33841 ;;		_fat_get_empty_clusters
 33842 ;;		_memcpy
 33843 ;; This function is called by:
 33844 ;;		__parse_file_create
 33845 ;; This function uses a non-reentrant model
 33846 ;;
 33847                           
 33848                           	psect	text172
 33849  002ECA                     __ptext172:
 33850                           	opt stack 0
 33851  002ECA                     _fat_create_file:
 33852                           	opt stack 20
 33853                           
 33854                           ;fat16.c: 311: uint8_t root_slot;;fat16.c: 312: rootEntry_t root_entry;;fat16.c: 313: ui
      +                          nt16_t cluster;;fat16.c: 314: uint16_t next_cluster;;fat16.c: 315: uint16_t number_of_cl
      +                          usters;;fat16.c: 316: uint16_t cluster_count;;fat16.c: 320: if(fat_find_file(name, exten
      +                          sion) != 0xFF)
 33855                           
 33856                           ;incstack = 0
 33857  002ECA  C044  F030         	movff	fat_create_file@name,fat_find_file@name
 33858  002ECE  C045  F031         	movff	fat_create_file@name+1,fat_find_file@name+1
 33859  002ED2  C046  F032         	movff	fat_create_file@extension,fat_find_file@extension
 33860  002ED6  C047  F033         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 33861  002EDA  EC65  F029         	call	_fat_find_file	;wreg free
 33862  002EDE  0AFF               	xorlw	255
 33863  002EE0  A4D8               	btfss	status,2,c
 33864  002EE2  0012               	return	
 33865                           
 33866                           ;fat16.c: 325: };fat16.c: 329: root_slot = _get_available_root_entry();
 33867                           
 33868                           ;fat16.c: 321: {;fat16.c: 324: return 0xFF;;	Return value of _fat_create_file is never u
      +                          sed
 33869  002EE4  ECA9  F03D         	call	__get_available_root_entry	;wreg free
 33870  002EE8  0100               	movlb	0	; () banked
 33871  002EEA  6FB9               	movwf	fat_create_file@root_slot& (0+255),b
 33872                           
 33873                           ; BSR set to: 0
 33874                           ;fat16.c: 330: if(root_slot == 0xFF)
 33875  002EEC  29B9               	incf	fat_create_file@root_slot& (0+255),w,b
 33876  002EEE  B4D8               	btfsc	status,2,c
 33877  002EF0  0012               	return	
 33878                           
 33879                           ; BSR set to: 0
 33880                           ;fat16.c: 335: };fat16.c: 338: number_of_clusters = (size>>9) + 1;
 33881                           
 33882                           ; BSR set to: 0
 33883                           
 33884                           ; BSR set to: 0
 33885                           ;fat16.c: 331: {;fat16.c: 334: return 0xFE;;	Return value of _fat_create_file is never u
      +                          sed
 33886  002EF2  C048  F04C         	movff	fat_create_file@size,??_fat_create_file
 33887  002EF6  C049  F04D         	movff	fat_create_file@size+1,??_fat_create_file+1
 33888  002EFA  C04A  F04E         	movff	fat_create_file@size+2,??_fat_create_file+2
 33889  002EFE  C04B  F04F         	movff	fat_create_file@size+3,??_fat_create_file+3
 33890  002F02  0E0A               	movlw	10
 33891  002F04  D005               	goto	u8390
 33892  002F06                     u8395:
 33893  002F06  90D8               	bcf	status,0,c
 33894  002F08  324F               	rrcf	??_fat_create_file+3,f,c
 33895  002F0A  324E               	rrcf	??_fat_create_file+2,f,c
 33896  002F0C  324D               	rrcf	??_fat_create_file+1,f,c
 33897  002F0E  324C               	rrcf	??_fat_create_file,f,c
 33898  002F10                     u8390:
 33899  002F10  2EE8               	decfsz	wreg,f,c
 33900  002F12  D7F9               	goto	u8395
 33901  002F14  0E01               	movlw	1
 33902  002F16  244C               	addwf	??_fat_create_file,w,c
 33903  002F18  6FBA               	movwf	fat_create_file@number_of_clusters& (0+255),b
 33904  002F1A  0E00               	movlw	0
 33905  002F1C  204D               	addwfc	??_fat_create_file+1,w,c
 33906  002F1E  6FBB               	movwf	(fat_create_file@number_of_clusters+1)& (0+255),b
 33907                           
 33908                           ; BSR set to: 0
 33909                           ;fat16.c: 339: if(fat_get_empty_clusters(number_of_clusters) != number_of_clusters)
 33910  002F20  C0BA  F030         	movff	fat_create_file@number_of_clusters,fat_get_empty_clusters@maximum
 33911  002F24  C0BB  F031         	movff	fat_create_file@number_of_clusters+1,fat_get_empty_clusters@maximum+1
 33912  002F28  ECCE  F02F         	call	_fat_get_empty_clusters	;wreg free
 33913  002F2C  0100               	movlb	0	; () banked
 33914  002F2E  51BA               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 33915  002F30  1830               	xorwf	?_fat_get_empty_clusters,w,c
 33916  002F32  E105               	bnz	u8400
 33917  002F34  51BB               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 33918  002F36  1831               	xorwf	?_fat_get_empty_clusters+1,w,c
 33919  002F38  A4D8               	btfss	status,2,c
 33920  002F3A  0012               	return	
 33921  002F3C  D001               	goto	l1920
 33922  002F3E                     u8400:
 33923                           
 33924                           ; BSR set to: 0
 33925                           ;fat16.c: 340: {;fat16.c: 343: return 0xFD;;	Return value of _fat_create_file is never u
      +                          sed
 33926  002F3E  0012               	return	
 33927  002F40                     l1920:
 33928                           
 33929                           ; BSR set to: 0
 33930                           ;fat16.c: 344: };fat16.c: 347: cluster = _get_empty_cluster(2);
 33931                           
 33932                           ; BSR set to: 0
 33933  002F40  0E00               	movlw	0
 33934  002F42  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 33935  002F44  0E02               	movlw	2
 33936  002F46  6E30               	movwf	__get_empty_cluster@first_cluster,c
 33937  002F48  EC13  F033         	call	__get_empty_cluster	;wreg free
 33938  002F4C  C030  F0BC         	movff	?__get_empty_cluster,fat_create_file@cluster
 33939  002F50  C031  F0BD         	movff	?__get_empty_cluster+1,fat_create_file@cluster+1
 33940                           
 33941                           ;fat16.c: 350: memcpy(root_entry.fileName, name, 8);
 33942  002F54  0EBE               	movlw	low fat_create_file@root_entry
 33943  002F56  6E01               	movwf	memcpy@d1,c
 33944  002F58  0E00               	movlw	high fat_create_file@root_entry
 33945  002F5A  6E02               	movwf	memcpy@d1+1,c
 33946  002F5C  C044  F003         	movff	fat_create_file@name,memcpy@s1
 33947  002F60  C045  F004         	movff	fat_create_file@name+1,memcpy@s1+1
 33948  002F64  5003               	movf	memcpy@s1,w,c
 33949  002F66  1004               	iorwf	memcpy@s1+1,w,c
 33950  002F68  A4D8               	btfss	status,2,c
 33951  002F6A  0E20               	movlw	32
 33952  002F6C  6E05               	movwf	memcpy@s1+2,c
 33953  002F6E  0E00               	movlw	0
 33954  002F70  6E07               	movwf	memcpy@n+1,c
 33955  002F72  0E08               	movlw	8
 33956  002F74  6E06               	movwf	memcpy@n,c
 33957  002F76  EC9F  F035         	call	_memcpy	;wreg free
 33958                           
 33959                           ;fat16.c: 351: memcpy(root_entry.fileExtension, extension, 3);
 33960  002F7A  0EC6               	movlw	low (fat_create_file@root_entry+8)
 33961  002F7C  6E01               	movwf	memcpy@d1,c
 33962  002F7E  0E00               	movlw	high (fat_create_file@root_entry+8)
 33963  002F80  6E02               	movwf	memcpy@d1+1,c
 33964  002F82  C046  F003         	movff	fat_create_file@extension,memcpy@s1
 33965  002F86  C047  F004         	movff	fat_create_file@extension+1,memcpy@s1+1
 33966  002F8A  5003               	movf	memcpy@s1,w,c
 33967  002F8C  1004               	iorwf	memcpy@s1+1,w,c
 33968  002F8E  A4D8               	btfss	status,2,c
 33969  002F90  0E20               	movlw	32
 33970  002F92  6E05               	movwf	memcpy@s1+2,c
 33971  002F94  0E00               	movlw	0
 33972  002F96  6E07               	movwf	memcpy@n+1,c
 33973  002F98  0E03               	movlw	3
 33974  002F9A  6E06               	movwf	memcpy@n,c
 33975  002F9C  EC9F  F035         	call	_memcpy	;wreg free
 33976                           
 33977                           ;fat16.c: 352: root_entry.attributes = 0x00;
 33978  002FA0  0E00               	movlw	0
 33979  002FA2  0100               	movlb	0	; () banked
 33980  002FA4  6FC9               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 33981                           
 33982                           ; BSR set to: 0
 33983                           ;fat16.c: 353: root_entry.reserved1 = 0x00;
 33984  002FA6  0E00               	movlw	0
 33985  002FA8  6FCA               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 33986                           
 33987                           ; BSR set to: 0
 33988                           ;fat16.c: 354: root_entry.secondFractions = 0x00;
 33989  002FAA  0E00               	movlw	0
 33990  002FAC  6FCB               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 33991                           
 33992                           ; BSR set to: 0
 33993                           ;fat16.c: 355: root_entry.createdTime = _get_time();
 33994  002FAE  ECFD  F03E         	call	__get_time	;wreg free
 33995  002FB2  C001  F0CC         	movff	?__get_time,fat_create_file@root_entry+14
 33996  002FB6  C002  F0CD         	movff	?__get_time+1,fat_create_file@root_entry+15
 33997                           
 33998                           ;fat16.c: 356: root_entry.createdDate = _get_date();
 33999  002FBA  EC02  F03F         	call	__get_date	;wreg free
 34000  002FBE  C001  F0CE         	movff	?__get_date,fat_create_file@root_entry+16
 34001  002FC2  C002  F0CF         	movff	?__get_date+1,fat_create_file@root_entry+17
 34002                           
 34003                           ;fat16.c: 357: root_entry.lastAccessDate = root_entry.createdDate;
 34004  002FC6  C0CE  F0D0         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 34005  002FCA  C0CF  F0D1         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 34006                           
 34007                           ;fat16.c: 358: root_entry.reserved2 = 0x00;
 34008  002FCE  0E00               	movlw	0
 34009  002FD0  0100               	movlb	0	; () banked
 34010  002FD2  6FD3               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 34011  002FD4  0E00               	movlw	0
 34012  002FD6  6FD2               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 34013                           
 34014                           ; BSR set to: 0
 34015                           ;fat16.c: 359: root_entry.modifiedTime = root_entry.createdTime;
 34016  002FD8  C0CC  F0D4         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 34017  002FDC  C0CD  F0D5         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 34018                           
 34019                           ; BSR set to: 0
 34020                           ;fat16.c: 360: root_entry.modifiedDate = root_entry.createdDate;
 34021  002FE0  C0CE  F0D6         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 34022  002FE4  C0CF  F0D7         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 34023                           
 34024                           ; BSR set to: 0
 34025                           ;fat16.c: 361: root_entry.firstCluster = cluster;
 34026  002FE8  C0BC  F0D8         	movff	fat_create_file@cluster,fat_create_file@root_entry+26
 34027  002FEC  C0BD  F0D9         	movff	fat_create_file@cluster+1,fat_create_file@root_entry+27
 34028                           
 34029                           ; BSR set to: 0
 34030                           ;fat16.c: 362: root_entry.fileSize = size;
 34031  002FF0  C048  F0DA         	movff	fat_create_file@size,fat_create_file@root_entry+28
 34032  002FF4  C049  F0DB         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 34033  002FF8  C04A  F0DC         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 34034  002FFC  C04B  F0DD         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 34035                           
 34036                           ;fat16.c: 365: _write_root(root_slot, &root_entry);
 34037  003000  0EBE               	movlw	low fat_create_file@root_entry
 34038  003002  6E29               	movwf	__write_root@data,c
 34039  003004  0E00               	movlw	high fat_create_file@root_entry
 34040  003006  6E2A               	movwf	__write_root@data+1,c
 34041  003008  51B9               	movf	fat_create_file@root_slot& (0+255),w,b
 34042  00300A  EC47  F037         	call	__write_root
 34043                           
 34044                           ;fat16.c: 370: for(cluster_count=1; cluster_count<=number_of_clusters; ++cluster_count)
 34045  00300E  0E00               	movlw	0
 34046  003010  0100               	movlb	0	; () banked
 34047  003012  6FB8               	movwf	(fat_create_file@cluster_count+1)& (0+255),b
 34048  003014  0E01               	movlw	1
 34049  003016  6FB7               	movwf	fat_create_file@cluster_count& (0+255),b
 34050  003018  D02F               	goto	l1921
 34051  00301A                     
 34052                           ; BSR set to: 0
 34053                           ;fat16.c: 371: {;fat16.c: 373: if(cluster_count==number_of_clusters)
 34054                           
 34055                           ; BSR set to: 0
 34056  00301A  51BA               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 34057  00301C  19B7               	xorwf	fat_create_file@cluster_count& (0+255),w,b
 34058  00301E  E10E               	bnz	l11176
 34059  003020  51BB               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 34060  003022  19B8               	xorwf	(fat_create_file@cluster_count+1)& (0+255),w,b
 34061  003024  A4D8               	btfss	status,2,c
 34062  003026  D00A               	goto	l1923
 34063                           
 34064                           ; BSR set to: 0
 34065                           ;fat16.c: 374: {;fat16.c: 376: _write_fat(cluster, 0xFFFF);
 34066  003028  C0BC  F029         	movff	fat_create_file@cluster,__write_fat@cluster
 34067  00302C  C0BD  F02A         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 34068  003030  0EFF               	movlw	255
 34069  003032  6E2C               	movwf	__write_fat@value+1,c
 34070  003034  682B               	setf	__write_fat@value,c
 34071  003036  ECAB  F03A         	call	__write_fat	;wreg free
 34072                           
 34073                           ;fat16.c: 377: }
 34074  00303A  D01B               	goto	l1924
 34075  00303C                     l1923:
 34076  00303C                     l11176:
 34077                           
 34078                           ;fat16.c: 378: else;fat16.c: 379: {;fat16.c: 381: next_cluster = _get_empty_cluster(clus
      +                          ter+1);
 34079  00303C  0E01               	movlw	1
 34080  00303E  0100               	movlb	0	; () banked
 34081  003040  25BC               	addwf	fat_create_file@cluster& (0+255),w,b
 34082  003042  6E30               	movwf	__get_empty_cluster@first_cluster,c
 34083  003044  0E00               	movlw	0
 34084  003046  21BD               	addwfc	(fat_create_file@cluster+1)& (0+255),w,b
 34085  003048  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 34086  00304A  EC13  F033         	call	__get_empty_cluster	;wreg free
 34087  00304E  C030  F0B5         	movff	?__get_empty_cluster,fat_create_file@next_cluster
 34088  003052  C031  F0B6         	movff	?__get_empty_cluster+1,fat_create_file@next_cluster+1
 34089                           
 34090                           ;fat16.c: 383: _write_fat(cluster, next_cluster);
 34091  003056  C0BC  F029         	movff	fat_create_file@cluster,__write_fat@cluster
 34092  00305A  C0BD  F02A         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 34093  00305E  C0B5  F02B         	movff	fat_create_file@next_cluster,__write_fat@value
 34094  003062  C0B6  F02C         	movff	fat_create_file@next_cluster+1,__write_fat@value+1
 34095  003066  ECAB  F03A         	call	__write_fat	;wreg free
 34096                           
 34097                           ;fat16.c: 385: cluster = next_cluster;
 34098  00306A  C0B5  F0BC         	movff	fat_create_file@next_cluster,fat_create_file@cluster
 34099  00306E  C0B6  F0BD         	movff	fat_create_file@next_cluster+1,fat_create_file@cluster+1
 34100  003072                     l1924:
 34101  003072  0100               	movlb	0	; () banked
 34102  003074  4BB7               	infsnz	fat_create_file@cluster_count& (0+255),f,b
 34103  003076  2BB8               	incf	(fat_create_file@cluster_count+1)& (0+255),f,b
 34104  003078                     l1921:
 34105                           
 34106                           ; BSR set to: 0
 34107                           
 34108                           ; BSR set to: 0
 34109  003078  51B7               	movf	fat_create_file@cluster_count& (0+255),w,b
 34110  00307A  5DBA               	subwf	fat_create_file@number_of_clusters& (0+255),w,b
 34111  00307C  51B8               	movf	(fat_create_file@cluster_count+1)& (0+255),w,b
 34112  00307E  59BB               	subwfb	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 34113  003080  A0D8               	btfss	status,0,c
 34114  003082  0012               	return	
 34115  003084  D7CA               	goto	l1922
 34116  003086                     __end_of_fat_create_file:
 34117                           	opt stack 0
 34118                           tosu	equ	0xFFF
 34119                           tosh	equ	0xFFE
 34120                           tosl	equ	0xFFD
 34121                           pclath	equ	0xFFA
 34122                           tblptru	equ	0xFF8
 34123                           tblptrh	equ	0xFF7
 34124                           tblptrl	equ	0xFF6
 34125                           tablat	equ	0xFF5
 34126                           prodh	equ	0xFF4
 34127                           prodl	equ	0xFF3
 34128                           intcon	equ	0xFF2
 34129                           intcon2	equ	0xFF1
 34130                           intcon3	equ	0xFF0
 34131                           indf0	equ	0xFEF
 34132                           postinc0	equ	0xFEE
 34133                           fsr0h	equ	0xFEA
 34134                           fsr0l	equ	0xFE9
 34135                           wreg	equ	0xFE8
 34136                           indf1	equ	0xFE7
 34137                           postdec1	equ	0xFE5
 34138                           plusw1	equ	0xFE3
 34139                           fsr1h	equ	0xFE2
 34140                           fsr1l	equ	0xFE1
 34141                           indf2	equ	0xFDF
 34142                           postinc2	equ	0xFDE
 34143                           postdec2	equ	0xFDD
 34144                           plusw2	equ	0xFDB
 34145                           fsr2h	equ	0xFDA
 34146                           fsr2l	equ	0xFD9
 34147                           status	equ	0xFD8
 34148                           
 34149 ;; *************** function _memcpy *****************
 34150 ;; Defined at:
 34151 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 34152 ;; Parameters:    Size  Location     Type
 34153 ;;  d1              2    0[COMRAM] PTR void 
 34154 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 34155 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 34156 ;;  s1              3    2[COMRAM] PTR const void 
 34157 ;;		 -> _spi_external_rx_buffer(64), ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 34158 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 34159 ;;  n               2    5[COMRAM] unsigned int 
 34160 ;; Auto vars:     Size  Location     Type
 34161 ;;  s               3    7[COMRAM] PTR const unsigned char 
 34162 ;;		 -> _spi_external_rx_buffer(64), ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 34163 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 34164 ;;  d               2   10[COMRAM] PTR unsigned char 
 34165 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 34166 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 34167 ;;  tmp             1   12[COMRAM] unsigned char 
 34168 ;; Return value:  Size  Location     Type
 34169 ;;                  2    0[COMRAM] PTR void 
 34170 ;; Registers used:
 34171 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 34172 ;; Tracked objects:
 34173 ;;		On entry : 0/0
 34174 ;;		On exit  : 0/0
 34175 ;;		Unchanged: 0/0
 34176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34177 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34178 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34180 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34181 ;;Total ram usage:       13 bytes
 34182 ;; Hardware stack levels used:    1
 34183 ;; This function calls:
 34184 ;;		Nothing
 34185 ;; This function is called by:
 34186 ;;		_USBCtrlEPService
 34187 ;;		_MSDProcessCommandMediaPresent
 34188 ;;		__flash_set_page_size
 34189 ;;		_fat_create_file
 34190 ;;		_internalFlash_read
 34191 ;;		_api_prepare
 34192 ;; This function uses a non-reentrant model
 34193 ;;
 34194                           
 34195                           	psect	text173
 34196  006B3E                     __ptext173:
 34197                           	opt stack 0
 34198  006B3E                     _memcpy:
 34199                           	opt stack 27
 34200                           
 34201                           ;incstack = 0
 34202  006B3E  C003  F008         	movff	memcpy@s1,memcpy@s
 34203  006B42  C004  F009         	movff	memcpy@s1+1,memcpy@s+1
 34204  006B46  C005  F00A         	movff	memcpy@s1+2,memcpy@s+2
 34205  006B4A  C001  F00B         	movff	memcpy@d1,memcpy@d
 34206  006B4E  C002  F00C         	movff	memcpy@d1+1,memcpy@d+1
 34207  006B52  D01F               	goto	l3454
 34208  006B54                     l10262:
 34209  006B54  C008  FFF6         	movff	memcpy@s,tblptrl
 34210  006B58  C009  FFF7         	movff	memcpy@s+1,tblptrh
 34211  006B5C  C00A  FFF8         	movff	memcpy@s+2,tblptru
 34212  006B60  BAF8               	btfsc	tblptru,5,c
 34213  006B62  D003               	bra	u7077
 34214  006B64  0008               	tblrd		*
 34215  006B66  50F5               	movf	tablat,w,c
 34216  006B68  D005               	bra	u7070
 34217  006B6A                     u7077:
 34218  006B6A  CFF6 FFE9          	movff	tblptrl,fsr0l
 34219  006B6E  CFF7 FFEA          	movff	tblptrh,fsr0h
 34220  006B72  50EF               	movf	indf0,w,c
 34221  006B74                     u7070:
 34222  006B74  6E0D               	movwf	memcpy@tmp,c
 34223  006B76  0E01               	movlw	1
 34224  006B78  2608               	addwf	memcpy@s,f,c
 34225  006B7A  0E00               	movlw	0
 34226  006B7C  2209               	addwfc	memcpy@s+1,f,c
 34227  006B7E  0E00               	movlw	0
 34228  006B80  220A               	addwfc	memcpy@s+2,f,c
 34229  006B82  C00B  FFD9         	movff	memcpy@d,fsr2l
 34230  006B86  C00C  FFDA         	movff	memcpy@d+1,fsr2h
 34231  006B8A  C00D  FFDF         	movff	memcpy@tmp,indf2
 34232  006B8E  4A0B               	infsnz	memcpy@d,f,c
 34233  006B90  2A0C               	incf	memcpy@d+1,f,c
 34234  006B92                     l3454:
 34235  006B92  0606               	decf	memcpy@n,f,c
 34236  006B94  A0D8               	btfss	status,0,c
 34237  006B96  0607               	decf	memcpy@n+1,f,c
 34238  006B98  2806               	incf	memcpy@n,w,c
 34239  006B9A  E1DC               	bnz	l10262
 34240  006B9C  2807               	incf	memcpy@n+1,w,c
 34241  006B9E  B4D8               	btfsc	status,2,c
 34242  006BA0  0012               	return	
 34243  006BA2  D7D8               	goto	l3455
 34244  006BA4                     __end_of_memcpy:
 34245                           	opt stack 0
 34246                           tosu	equ	0xFFF
 34247                           tosh	equ	0xFFE
 34248                           tosl	equ	0xFFD
 34249                           pclath	equ	0xFFA
 34250                           tblptru	equ	0xFF8
 34251                           tblptrh	equ	0xFF7
 34252                           tblptrl	equ	0xFF6
 34253                           tablat	equ	0xFF5
 34254                           prodh	equ	0xFF4
 34255                           prodl	equ	0xFF3
 34256                           intcon	equ	0xFF2
 34257                           intcon2	equ	0xFF1
 34258                           intcon3	equ	0xFF0
 34259                           indf0	equ	0xFEF
 34260                           postinc0	equ	0xFEE
 34261                           fsr0h	equ	0xFEA
 34262                           fsr0l	equ	0xFE9
 34263                           wreg	equ	0xFE8
 34264                           indf1	equ	0xFE7
 34265                           postdec1	equ	0xFE5
 34266                           plusw1	equ	0xFE3
 34267                           fsr1h	equ	0xFE2
 34268                           fsr1l	equ	0xFE1
 34269                           indf2	equ	0xFDF
 34270                           postinc2	equ	0xFDE
 34271                           postdec2	equ	0xFDD
 34272                           plusw2	equ	0xFDB
 34273                           fsr2h	equ	0xFDA
 34274                           fsr2l	equ	0xFD9
 34275                           status	equ	0xFD8
 34276                           
 34277 ;; *************** function _fat_get_empty_clusters *****************
 34278 ;; Defined at:
 34279 ;;		line 130 in file "fat16.c"
 34280 ;; Parameters:    Size  Location     Type
 34281 ;;  maximum         2   47[COMRAM] unsigned int 
 34282 ;; Auto vars:     Size  Location     Type
 34283 ;;  cluster         2   57[COMRAM] unsigned int 
 34284 ;;  empty_cluste    2   55[COMRAM] unsigned int 
 34285 ;;  value           2   53[COMRAM] unsigned int 
 34286 ;;  offset          2   51[COMRAM] unsigned int 
 34287 ;;  fat_sector      2   49[COMRAM] unsigned int 
 34288 ;; Return value:  Size  Location     Type
 34289 ;;                  2   47[COMRAM] unsigned int 
 34290 ;; Registers used:
 34291 ;;		wreg, status,2, status,0, cstack
 34292 ;; Tracked objects:
 34293 ;;		On entry : 0/0
 34294 ;;		On exit  : 0/0
 34295 ;;		Unchanged: 0/0
 34296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34298 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34300 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34301 ;;Total ram usage:       12 bytes
 34302 ;; Hardware stack levels used:    1
 34303 ;; Hardware stack levels required when called:    5
 34304 ;; This function calls:
 34305 ;;		_flash_partial_read
 34306 ;; This function is called by:
 34307 ;;		_fat_create_file
 34308 ;; This function uses a non-reentrant model
 34309 ;;
 34310                           
 34311                           	psect	text174
 34312  005F9C                     __ptext174:
 34313                           	opt stack 0
 34314  005F9C                     _fat_get_empty_clusters:
 34315                           	opt stack 21
 34316                           
 34317                           ;fat16.c: 132: uint16_t empty_clusters = 0;
 34318                           
 34319                           ;incstack = 0
 34320  005F9C  0E00               	movlw	0
 34321  005F9E  6E39               	movwf	fat_get_empty_clusters@empty_clusters+1,c
 34322  005FA0  0E00               	movlw	0
 34323  005FA2  6E38               	movwf	fat_get_empty_clusters@empty_clusters,c
 34324                           
 34325                           ;fat16.c: 133: uint16_t cluster;;fat16.c: 134: uint16_t fat_sector;;fat16.c: 135: uint16
      +                          _t offset;;fat16.c: 136: uint16_t value;;fat16.c: 139: for(cluster=2; cluster<(4074+2); 
      +                          ++cluster)
 34326  005FA4  0E00               	movlw	0
 34327  005FA6  6E3B               	movwf	fat_get_empty_clusters@cluster+1,c
 34328  005FA8  0E02               	movlw	2
 34329  005FAA  6E3A               	movwf	fat_get_empty_clusters@cluster,c
 34330  005FAC  D033               	goto	l10544
 34331  005FAE                     
 34332                           ;fat16.c: 140: {;fat16.c: 141: fat_sector = cluster>>8;
 34333  005FAE  503B               	movf	fat_get_empty_clusters@cluster+1,w,c
 34334  005FB0  6E32               	movwf	fat_get_empty_clusters@fat_sector,c
 34335  005FB2  6A33               	clrf	fat_get_empty_clusters@fat_sector+1,c
 34336                           
 34337                           ;fat16.c: 142: fat_sector += 2;
 34338  005FB4  0E02               	movlw	2
 34339  005FB6  2632               	addwf	fat_get_empty_clusters@fat_sector,f,c
 34340  005FB8  0E00               	movlw	0
 34341  005FBA  2233               	addwfc	fat_get_empty_clusters@fat_sector+1,f,c
 34342                           
 34343                           ;fat16.c: 143: offset = cluster & 0xFF;
 34344  005FBC  503A               	movf	fat_get_empty_clusters@cluster,w,c
 34345  005FBE  6E34               	movwf	fat_get_empty_clusters@offset,c
 34346  005FC0  6A35               	clrf	fat_get_empty_clusters@offset+1,c
 34347                           
 34348                           ;fat16.c: 144: offset <<= 1;
 34349  005FC2  90D8               	bcf	status,0,c
 34350  005FC4  3634               	rlcf	fat_get_empty_clusters@offset,f,c
 34351  005FC6  3635               	rlcf	fat_get_empty_clusters@offset+1,f,c
 34352                           
 34353                           ;fat16.c: 145: flash_partial_read(fat_sector, offset, 2, &value);
 34354  005FC8  C032  F028         	movff	fat_get_empty_clusters@fat_sector,flash_partial_read@page
 34355  005FCC  C033  F029         	movff	fat_get_empty_clusters@fat_sector+1,flash_partial_read@page+1
 34356  005FD0  C034  F02A         	movff	fat_get_empty_clusters@offset,flash_partial_read@start
 34357  005FD4  C035  F02B         	movff	fat_get_empty_clusters@offset+1,flash_partial_read@start+1
 34358  005FD8  0E00               	movlw	0
 34359  005FDA  6E2D               	movwf	flash_partial_read@length+1,c
 34360  005FDC  0E02               	movlw	2
 34361  005FDE  6E2C               	movwf	flash_partial_read@length,c
 34362  005FE0  0E36               	movlw	low fat_get_empty_clusters@value
 34363  005FE2  6E2E               	movwf	flash_partial_read@data,c
 34364  005FE4  0E00               	movlw	high fat_get_empty_clusters@value
 34365  005FE6  6E2F               	movwf	flash_partial_read@data+1,c
 34366  005FE8  EC69  F03C         	call	_flash_partial_read	;wreg free
 34367                           
 34368                           ;fat16.c: 146: if(value==0x0000)
 34369  005FEC  5036               	movf	fat_get_empty_clusters@value,w,c
 34370  005FEE  1037               	iorwf	fat_get_empty_clusters@value+1,w,c
 34371  005FF0  A4D8               	btfss	status,2,c
 34372  005FF2  D00E               	goto	l1876
 34373                           
 34374                           ;fat16.c: 147: {;fat16.c: 148: ++empty_clusters;
 34375  005FF4  4A38               	infsnz	fat_get_empty_clusters@empty_clusters,f,c
 34376  005FF6  2A39               	incf	fat_get_empty_clusters@empty_clusters+1,f,c
 34377                           
 34378                           ;fat16.c: 149: if(empty_clusters==maximum)
 34379  005FF8  5030               	movf	fat_get_empty_clusters@maximum,w,c
 34380  005FFA  1838               	xorwf	fat_get_empty_clusters@empty_clusters,w,c
 34381  005FFC  E109               	bnz	l10542
 34382  005FFE  5031               	movf	fat_get_empty_clusters@maximum+1,w,c
 34383  006000  1839               	xorwf	fat_get_empty_clusters@empty_clusters+1,w,c
 34384  006002  A4D8               	btfss	status,2,c
 34385  006004  D005               	goto	l1876
 34386                           
 34387                           ;fat16.c: 150: {;fat16.c: 151: return empty_clusters;
 34388  006006  C038  F030         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 34389  00600A  C039  F031         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 34390  00600E  0012               	return	
 34391  006010                     l1876:
 34392  006010                     l10542:
 34393  006010  4A3A               	infsnz	fat_get_empty_clusters@cluster,f,c
 34394  006012  2A3B               	incf	fat_get_empty_clusters@cluster+1,f,c
 34395  006014                     l10544:
 34396  006014  0EEC               	movlw	236
 34397  006016  5C3A               	subwf	fat_get_empty_clusters@cluster,w,c
 34398  006018  0E0F               	movlw	15
 34399  00601A  583B               	subwfb	fat_get_empty_clusters@cluster+1,w,c
 34400  00601C  A0D8               	btfss	status,0,c
 34401  00601E  D7C7               	goto	l1873
 34402                           
 34403                           ;fat16.c: 152: };fat16.c: 153: };fat16.c: 154: };fat16.c: 155: return empty_clusters;
 34404  006020  C038  F030         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 34405  006024  C039  F031         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 34406  006028  0012               	return		;funcret
 34407  00602A                     __end_of_fat_get_empty_clusters:
 34408                           	opt stack 0
 34409                           tosu	equ	0xFFF
 34410                           tosh	equ	0xFFE
 34411                           tosl	equ	0xFFD
 34412                           pclath	equ	0xFFA
 34413                           tblptru	equ	0xFF8
 34414                           tblptrh	equ	0xFF7
 34415                           tblptrl	equ	0xFF6
 34416                           tablat	equ	0xFF5
 34417                           prodh	equ	0xFF4
 34418                           prodl	equ	0xFF3
 34419                           intcon	equ	0xFF2
 34420                           intcon2	equ	0xFF1
 34421                           intcon3	equ	0xFF0
 34422                           indf0	equ	0xFEF
 34423                           postinc0	equ	0xFEE
 34424                           fsr0h	equ	0xFEA
 34425                           fsr0l	equ	0xFE9
 34426                           wreg	equ	0xFE8
 34427                           indf1	equ	0xFE7
 34428                           postdec1	equ	0xFE5
 34429                           plusw1	equ	0xFE3
 34430                           fsr1h	equ	0xFE2
 34431                           fsr1l	equ	0xFE1
 34432                           indf2	equ	0xFDF
 34433                           postinc2	equ	0xFDE
 34434                           postdec2	equ	0xFDD
 34435                           plusw2	equ	0xFDB
 34436                           fsr2h	equ	0xFDA
 34437                           fsr2l	equ	0xFD9
 34438                           status	equ	0xFD8
 34439                           
 34440 ;; *************** function _fat_find_file *****************
 34441 ;; Defined at:
 34442 ;;		line 250 in file "fat16.c"
 34443 ;; Parameters:    Size  Location     Type
 34444 ;;  name            2   47[COMRAM] PTR unsigned char 
 34445 ;;		 -> _spi_external_rx_buffer(64), bootloader_filename(9), RAM(3759), 
 34446 ;;  extension       2   49[COMRAM] PTR unsigned char 
 34447 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), RAM(3759), 
 34448 ;; Auto vars:     Size  Location     Type
 34449 ;;  buffer         11   51[COMRAM] unsigned char [11]
 34450 ;;  offset          2   65[COMRAM] unsigned int 
 34451 ;;  sector          2   63[COMRAM] unsigned int 
 34452 ;;  slot            1   62[COMRAM] unsigned char 
 34453 ;; Return value:  Size  Location     Type
 34454 ;;                  1    wreg      unsigned char 
 34455 ;; Registers used:
 34456 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 34457 ;; Tracked objects:
 34458 ;;		On entry : 0/0
 34459 ;;		On exit  : 0/0
 34460 ;;		Unchanged: 0/0
 34461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34462 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34463 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34465 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34466 ;;Total ram usage:       20 bytes
 34467 ;; Hardware stack levels used:    1
 34468 ;; Hardware stack levels required when called:    5
 34469 ;; This function calls:
 34470 ;;		_flash_partial_read
 34471 ;;		_strncmp
 34472 ;; This function is called by:
 34473 ;;		_fat_create_file
 34474 ;;		__bootloader_find_file
 34475 ;;		__fill_buffer_find_file
 34476 ;; This function uses a non-reentrant model
 34477 ;;
 34478                           
 34479                           	psect	text175
 34480  0052CA                     __ptext175:
 34481                           	opt stack 0
 34482  0052CA                     _fat_find_file:
 34483                           	opt stack 23
 34484                           
 34485                           ;fat16.c: 252: uint8_t slot;;fat16.c: 253: uint16_t sector;;fat16.c: 254: uint16_t offse
      +                          t;;fat16.c: 255: uint8_t buffer[11];;fat16.c: 256: slot = 0;
 34486                           
 34487                           ;incstack = 0
 34488  0052CA  0E00               	movlw	0
 34489  0052CC  6E3F               	movwf	fat_find_file@slot,c
 34490                           
 34491                           ;fat16.c: 257: for(sector = 18; sector <= 21; ++sector)
 34492  0052CE  0E00               	movlw	0
 34493  0052D0  6E41               	movwf	fat_find_file@sector+1,c
 34494  0052D2  0E12               	movlw	18
 34495  0052D4  6E40               	movwf	fat_find_file@sector,c
 34496  0052D6                     l10590:
 34497  0052D6  5041               	movf	fat_find_file@sector+1,w,c
 34498  0052D8  E156               	bnz	l10632
 34499  0052DA  0E16               	movlw	22
 34500  0052DC  5C40               	subwf	fat_find_file@sector,w,c
 34501  0052DE  B0D8               	btfsc	status,0,c
 34502  0052E0  D052               	goto	u7690
 34503                           
 34504                           ;fat16.c: 258: {;fat16.c: 259: for(offset = 0; offset<512; offset += 32)
 34505  0052E2  0E00               	movlw	0
 34506  0052E4  6E43               	movwf	fat_find_file@offset+1,c
 34507  0052E6  0E00               	movlw	0
 34508  0052E8  6E42               	movwf	fat_find_file@offset,c
 34509  0052EA                     l10596:
 34510  0052EA  0E02               	movlw	2
 34511  0052EC  5C43               	subwf	fat_find_file@offset+1,w,c
 34512  0052EE  B0D8               	btfsc	status,0,c
 34513  0052F0  D047               	goto	u7680
 34514                           
 34515                           ;fat16.c: 260: {;fat16.c: 261: flash_partial_read(sector, offset, 11, &buffer);
 34516  0052F2  C040  F028         	movff	fat_find_file@sector,flash_partial_read@page
 34517  0052F6  C041  F029         	movff	fat_find_file@sector+1,flash_partial_read@page+1
 34518  0052FA  C042  F02A         	movff	fat_find_file@offset,flash_partial_read@start
 34519  0052FE  C043  F02B         	movff	fat_find_file@offset+1,flash_partial_read@start+1
 34520  005302  0E00               	movlw	0
 34521  005304  6E2D               	movwf	flash_partial_read@length+1,c
 34522  005306  0E0B               	movlw	11
 34523  005308  6E2C               	movwf	flash_partial_read@length,c
 34524  00530A  0E34               	movlw	low fat_find_file@buffer
 34525  00530C  6E2E               	movwf	flash_partial_read@data,c
 34526  00530E  0E00               	movlw	high fat_find_file@buffer
 34527  005310  6E2F               	movwf	flash_partial_read@data+1,c
 34528  005312  EC69  F03C         	call	_flash_partial_read	;wreg free
 34529                           
 34530                           ;fat16.c: 262: if(buffer[0]==0x00)
 34531  005316  5034               	movf	fat_find_file@buffer,w,c
 34532  005318  A4D8               	btfss	status,2,c
 34533  00531A  D002               	goto	l1905
 34534                           
 34535                           ;fat16.c: 263: {;fat16.c: 266: return 0xFF;
 34536  00531C  0EFF               	movlw	255
 34537  00531E  0012               	return	
 34538  005320                     l1905:
 34539                           
 34540                           ;fat16.c: 268: else if(buffer[0]==0xE5)
 34541  005320  0EE5               	movlw	229
 34542  005322  1834               	xorwf	fat_find_file@buffer,w,c
 34543  005324  B4D8               	btfsc	status,2,c
 34544  005326  D026               	goto	l1911
 34545                           
 34546                           ;fat16.c: 274: else;fat16.c: 275: {;fat16.c: 277: if(strncmp(name, &buffer[0], 8) == 0)
 34547                           
 34548                           ;fat16.c: 269: {;fat16.c: 273: }
 34549  005328  C030  F001         	movff	fat_find_file@name,strncmp@s1
 34550  00532C  C031  F002         	movff	fat_find_file@name+1,strncmp@s1+1
 34551  005330  0E34               	movlw	low fat_find_file@buffer
 34552  005332  6E03               	movwf	strncmp@s2,c
 34553  005334  0E00               	movlw	high fat_find_file@buffer
 34554  005336  6E04               	movwf	strncmp@s2+1,c
 34555  005338  0E00               	movlw	0
 34556  00533A  6E06               	movwf	strncmp@len+1,c
 34557  00533C  0E08               	movlw	8
 34558  00533E  6E05               	movwf	strncmp@len,c
 34559  005340  EC04  F029         	call	_strncmp	;wreg free
 34560  005344  5001               	movf	?_strncmp,w,c
 34561  005346  1002               	iorwf	?_strncmp+1,w,c
 34562  005348  A4D8               	btfss	status,2,c
 34563  00534A  D014               	goto	l1911
 34564                           
 34565                           ;fat16.c: 278: {;fat16.c: 280: if(strncmp(extension, &buffer[8], 3) == 0)
 34566  00534C  C032  F001         	movff	fat_find_file@extension,strncmp@s1
 34567  005350  C033  F002         	movff	fat_find_file@extension+1,strncmp@s1+1
 34568  005354  0E3C               	movlw	low (fat_find_file@buffer+8)
 34569  005356  6E03               	movwf	strncmp@s2,c
 34570  005358  0E00               	movlw	high (fat_find_file@buffer+8)
 34571  00535A  6E04               	movwf	strncmp@s2+1,c
 34572  00535C  0E00               	movlw	0
 34573  00535E  6E06               	movwf	strncmp@len+1,c
 34574  005360  0E03               	movlw	3
 34575  005362  6E05               	movwf	strncmp@len,c
 34576  005364  EC04  F029         	call	_strncmp	;wreg free
 34577  005368  5001               	movf	?_strncmp,w,c
 34578  00536A  1002               	iorwf	?_strncmp+1,w,c
 34579  00536C  A4D8               	btfss	status,2,c
 34580  00536E  D002               	goto	l1911
 34581                           
 34582                           ;fat16.c: 281: {;fat16.c: 284: return slot;
 34583  005370  503F               	movf	fat_find_file@slot,w,c
 34584  005372  0012               	return	
 34585  005374                     l1911:
 34586                           
 34587                           ;fat16.c: 285: };fat16.c: 286: };fat16.c: 287: };fat16.c: 288: ++slot;
 34588  005374  2A3F               	incf	fat_find_file@slot,f,c
 34589  005376  0E20               	movlw	32
 34590  005378  2642               	addwf	fat_find_file@offset,f,c
 34591  00537A  0E00               	movlw	0
 34592  00537C  2243               	addwfc	fat_find_file@offset+1,f,c
 34593  00537E  D7B5               	goto	l10596
 34594  005380                     u7680:
 34595  005380  4A40               	infsnz	fat_find_file@sector,f,c
 34596  005382  2A41               	incf	fat_find_file@sector+1,f,c
 34597  005384  D7A8               	goto	l10590
 34598  005386                     u7690:
 34599  005386                     l10632:
 34600                           
 34601                           ;fat16.c: 289: };fat16.c: 290: };fat16.c: 291: return 0xFF;
 34602  005386  0EFF               	movlw	255
 34603  005388  0012               	return	
 34604  00538A                     __end_of_fat_find_file:
 34605                           	opt stack 0
 34606                           tosu	equ	0xFFF
 34607                           tosh	equ	0xFFE
 34608                           tosl	equ	0xFFD
 34609                           pclath	equ	0xFFA
 34610                           tblptru	equ	0xFF8
 34611                           tblptrh	equ	0xFF7
 34612                           tblptrl	equ	0xFF6
 34613                           tablat	equ	0xFF5
 34614                           prodh	equ	0xFF4
 34615                           prodl	equ	0xFF3
 34616                           intcon	equ	0xFF2
 34617                           intcon2	equ	0xFF1
 34618                           intcon3	equ	0xFF0
 34619                           indf0	equ	0xFEF
 34620                           postinc0	equ	0xFEE
 34621                           fsr0h	equ	0xFEA
 34622                           fsr0l	equ	0xFE9
 34623                           wreg	equ	0xFE8
 34624                           indf1	equ	0xFE7
 34625                           postdec1	equ	0xFE5
 34626                           plusw1	equ	0xFE3
 34627                           fsr1h	equ	0xFE2
 34628                           fsr1l	equ	0xFE1
 34629                           indf2	equ	0xFDF
 34630                           postinc2	equ	0xFDE
 34631                           postdec2	equ	0xFDD
 34632                           plusw2	equ	0xFDB
 34633                           fsr2h	equ	0xFDA
 34634                           fsr2l	equ	0xFD9
 34635                           status	equ	0xFD8
 34636                           
 34637 ;; *************** function _strncmp *****************
 34638 ;; Defined at:
 34639 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 34640 ;; Parameters:    Size  Location     Type
 34641 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 34642 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), bootloader_filename(9), RAM(3759), 
 34643 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 34644 ;;		 -> fat_find_file@buffer(11), 
 34645 ;;  len             2    4[COMRAM] unsigned int 
 34646 ;; Auto vars:     Size  Location     Type
 34647 ;;		None
 34648 ;; Return value:  Size  Location     Type
 34649 ;;                  2    0[COMRAM] int 
 34650 ;; Registers used:
 34651 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 34652 ;; Tracked objects:
 34653 ;;		On entry : 0/0
 34654 ;;		On exit  : 0/0
 34655 ;;		Unchanged: 0/0
 34656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34657 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34659 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34660 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34661 ;;Total ram usage:        9 bytes
 34662 ;; Hardware stack levels used:    1
 34663 ;; This function calls:
 34664 ;;		Nothing
 34665 ;; This function is called by:
 34666 ;;		_fat_find_file
 34667 ;; This function uses a non-reentrant model
 34668 ;;
 34669                           
 34670                           	psect	text176
 34671  005208                     __ptext176:
 34672                           	opt stack 0
 34673  005208                     _strncmp:
 34674                           	opt stack 27
 34675                           
 34676                           ;incstack = 0
 34677  005208  D053               	goto	l3472
 34678  00520A                     l10126:
 34679  00520A  C001  FFF6         	movff	strncmp@s1,tblptrl
 34680  00520E  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 34681  005212  6AF8               	clrf	tblptru,c
 34682  005214  0E0E               	movlw	(high __ramtop+-1)
 34683  005216  64F7               	cpfsgt	tblptrh,c
 34684  005218  D003               	bra	u6877
 34685  00521A  0008               	tblrd		*
 34686  00521C  50F5               	movf	tablat,w,c
 34687  00521E  D005               	bra	u6870
 34688  005220                     u6877:
 34689  005220  CFF6 FFE9          	movff	tblptrl,fsr0l
 34690  005224  CFF7 FFEA          	movff	tblptrh,fsr0h
 34691  005228  50EF               	movf	indf0,w,c
 34692  00522A                     u6870:
 34693  00522A  0900               	iorlw	0
 34694  00522C  B4D8               	btfsc	status,2,c
 34695  00522E  D019               	goto	u6890
 34696  005230  C003  FFD9         	movff	strncmp@s2,fsr2l
 34697  005234  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 34698  005238  50DF               	movf	indf2,w,c
 34699  00523A  6E07               	movwf	??_strncmp& (0+255),c
 34700  00523C  C001  FFF6         	movff	strncmp@s1,tblptrl
 34701  005240  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 34702  005244  6AF8               	clrf	tblptru,c
 34703  005246  0E0E               	movlw	(high __ramtop+-1)
 34704  005248  64F7               	cpfsgt	tblptrh,c
 34705  00524A  D003               	bra	u6897
 34706  00524C  0008               	tblrd		*
 34707  00524E  50F5               	movf	tablat,w,c
 34708  005250  D005               	bra	u6895
 34709  005252                     u6897:
 34710  005252  CFF6 FFE9          	movff	tblptrl,fsr0l
 34711  005256  CFF7 FFEA          	movff	tblptrh,fsr0h
 34712  00525A  50EF               	movf	indf0,w,c
 34713  00525C                     u6895:
 34714  00525C  1807               	xorwf	??_strncmp,w,c
 34715  00525E  B4D8               	btfsc	status,2,c
 34716  005260  D023               	goto	l3474
 34717  005262                     u6890:
 34718  005262  C003  FFD9         	movff	strncmp@s2,fsr2l
 34719  005266  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 34720  00526A  50DF               	movf	indf2,w,c
 34721  00526C  6E07               	movwf	??_strncmp& (0+255),c
 34722  00526E  6A08               	clrf	(??_strncmp+1)& (0+255),c
 34723  005270  1E07               	comf	??_strncmp,f,c
 34724  005272  1E08               	comf	??_strncmp+1,f,c
 34725  005274  4A07               	infsnz	??_strncmp,f,c
 34726  005276  2A08               	incf	??_strncmp+1,f,c
 34727  005278  C001  FFF6         	movff	strncmp@s1,tblptrl
 34728  00527C  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 34729  005280  6AF8               	clrf	tblptru,c
 34730  005282  0E0E               	movlw	(high __ramtop+-1)
 34731  005284  64F7               	cpfsgt	tblptrh,c
 34732  005286  D003               	bra	u6907
 34733  005288  0008               	tblrd		*
 34734  00528A  50F5               	movf	tablat,w,c
 34735  00528C  D005               	bra	u6900
 34736  00528E                     u6907:
 34737  00528E  CFF6 FFE9          	movff	tblptrl,fsr0l
 34738  005292  CFF7 FFEA          	movff	tblptrh,fsr0h
 34739  005296  50EF               	movf	indf0,w,c
 34740  005298                     u6900:
 34741  005298  6E09               	movwf	(??_strncmp+2)& (0+255),c
 34742  00529A  5009               	movf	??_strncmp+2,w,c
 34743  00529C  2407               	addwf	??_strncmp,w,c
 34744  00529E  6E01               	movwf	?_strncmp,c
 34745  0052A0  0E00               	movlw	0
 34746  0052A2  2008               	addwfc	??_strncmp+1,w,c
 34747  0052A4  6E02               	movwf	?_strncmp+1,c
 34748  0052A6  0012               	return	
 34749  0052A8                     l3474:
 34750  0052A8  4A01               	infsnz	strncmp@s1,f,c
 34751  0052AA  2A02               	incf	strncmp@s1+1,f,c
 34752  0052AC  4A03               	infsnz	strncmp@s2,f,c
 34753  0052AE  2A04               	incf	strncmp@s2+1,f,c
 34754  0052B0                     l3472:
 34755  0052B0  0605               	decf	strncmp@len,f,c
 34756  0052B2  A0D8               	btfss	status,0,c
 34757  0052B4  0606               	decf	strncmp@len+1,f,c
 34758  0052B6  2805               	incf	strncmp@len,w,c
 34759  0052B8  E1A8               	bnz	l10126
 34760  0052BA  2806               	incf	strncmp@len+1,w,c
 34761  0052BC  A4D8               	btfss	status,2,c
 34762  0052BE  D7A5               	goto	l3473
 34763  0052C0  0E00               	movlw	0
 34764  0052C2  6E02               	movwf	?_strncmp+1,c
 34765  0052C4  0E00               	movlw	0
 34766  0052C6  6E01               	movwf	?_strncmp,c
 34767  0052C8  0012               	return	
 34768  0052CA                     __end_of_strncmp:
 34769                           	opt stack 0
 34770                           tosu	equ	0xFFF
 34771                           tosh	equ	0xFFE
 34772                           tosl	equ	0xFFD
 34773                           pclath	equ	0xFFA
 34774                           tblptru	equ	0xFF8
 34775                           tblptrh	equ	0xFF7
 34776                           tblptrl	equ	0xFF6
 34777                           tablat	equ	0xFF5
 34778                           prodh	equ	0xFF4
 34779                           prodl	equ	0xFF3
 34780                           intcon	equ	0xFF2
 34781                           intcon2	equ	0xFF1
 34782                           intcon3	equ	0xFF0
 34783                           indf0	equ	0xFEF
 34784                           postinc0	equ	0xFEE
 34785                           fsr0h	equ	0xFEA
 34786                           fsr0l	equ	0xFE9
 34787                           wreg	equ	0xFE8
 34788                           indf1	equ	0xFE7
 34789                           postdec1	equ	0xFE5
 34790                           plusw1	equ	0xFE3
 34791                           fsr1h	equ	0xFE2
 34792                           fsr1l	equ	0xFE1
 34793                           indf2	equ	0xFDF
 34794                           postinc2	equ	0xFDE
 34795                           postdec2	equ	0xFDD
 34796                           plusw2	equ	0xFDB
 34797                           fsr2h	equ	0xFDA
 34798                           fsr2l	equ	0xFD9
 34799                           status	equ	0xFD8
 34800                           
 34801 ;; *************** function __get_available_root_entry *****************
 34802 ;; Defined at:
 34803 ;;		line 94 in file "fat16.c"
 34804 ;; Parameters:    Size  Location     Type
 34805 ;;		None
 34806 ;; Auto vars:     Size  Location     Type
 34807 ;;  file_number     1   54[COMRAM] unsigned char 
 34808 ;; Return value:  Size  Location     Type
 34809 ;;                  1    wreg      unsigned char 
 34810 ;; Registers used:
 34811 ;;		wreg, status,2, status,0, cstack
 34812 ;; Tracked objects:
 34813 ;;		On entry : 0/0
 34814 ;;		On exit  : 0/0
 34815 ;;		Unchanged: 0/0
 34816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34818 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34820 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34821 ;;Total ram usage:        1 bytes
 34822 ;; Hardware stack levels used:    1
 34823 ;; Hardware stack levels required when called:    6
 34824 ;; This function calls:
 34825 ;;		__root_is_available
 34826 ;; This function is called by:
 34827 ;;		_fat_create_file
 34828 ;; This function uses a non-reentrant model
 34829 ;;
 34830                           
 34831                           	psect	text177
 34832  007B52                     __ptext177:
 34833                           	opt stack 0
 34834  007B52                     __get_available_root_entry:
 34835                           	opt stack 20
 34836                           
 34837                           ;fat16.c: 96: uint8_t file_number;;fat16.c: 97: for(file_number=0; file_number<64; ++fil
      +                          e_number)
 34838                           
 34839                           ;incstack = 0
 34840  007B52  0E00               	movlw	0
 34841  007B54  6E37               	movwf	__get_available_root_entry@file_number,c
 34842  007B56                     l10472:
 34843  007B56  0E3F               	movlw	63
 34844  007B58  6437               	cpfsgt	__get_available_root_entry@file_number,c
 34845  007B5A  D001               	goto	l1861
 34846  007B5C  D00A               	goto	u7510
 34847  007B5E                     l1861:
 34848                           
 34849                           ;fat16.c: 98: {;fat16.c: 99: if(_root_is_available(file_number))
 34850  007B5E  5037               	movf	__get_available_root_entry@file_number,w,c
 34851  007B60  EC9E  F032         	call	__root_is_available
 34852  007B64  0900               	iorlw	0
 34853  007B66  B4D8               	btfsc	status,2,c
 34854  007B68  D002               	goto	l1863
 34855                           
 34856                           ;fat16.c: 100: {;fat16.c: 101: return file_number;
 34857  007B6A  5037               	movf	__get_available_root_entry@file_number,w,c
 34858  007B6C  0012               	return	
 34859  007B6E                     l1863:
 34860  007B6E  2A37               	incf	__get_available_root_entry@file_number,f,c
 34861  007B70  D7F2               	goto	l10472
 34862  007B72                     u7510:
 34863                           
 34864                           ;fat16.c: 102: };fat16.c: 103: };fat16.c: 104: return 0xFF;
 34865  007B72  0EFF               	movlw	255
 34866  007B74  0012               	return	
 34867  007B76                     __end_of__get_available_root_entry:
 34868                           	opt stack 0
 34869                           tosu	equ	0xFFF
 34870                           tosh	equ	0xFFE
 34871                           tosl	equ	0xFFD
 34872                           pclath	equ	0xFFA
 34873                           tblptru	equ	0xFF8
 34874                           tblptrh	equ	0xFF7
 34875                           tblptrl	equ	0xFF6
 34876                           tablat	equ	0xFF5
 34877                           prodh	equ	0xFF4
 34878                           prodl	equ	0xFF3
 34879                           intcon	equ	0xFF2
 34880                           intcon2	equ	0xFF1
 34881                           intcon3	equ	0xFF0
 34882                           indf0	equ	0xFEF
 34883                           postinc0	equ	0xFEE
 34884                           fsr0h	equ	0xFEA
 34885                           fsr0l	equ	0xFE9
 34886                           wreg	equ	0xFE8
 34887                           indf1	equ	0xFE7
 34888                           postdec1	equ	0xFE5
 34889                           plusw1	equ	0xFE3
 34890                           fsr1h	equ	0xFE2
 34891                           fsr1l	equ	0xFE1
 34892                           indf2	equ	0xFDF
 34893                           postinc2	equ	0xFDE
 34894                           postdec2	equ	0xFDD
 34895                           plusw2	equ	0xFDB
 34896                           fsr2h	equ	0xFDA
 34897                           fsr2l	equ	0xFD9
 34898                           status	equ	0xFD8
 34899                           
 34900 ;; *************** function __parse_file_append *****************
 34901 ;; Defined at:
 34902 ;;		line 533 in file "api.c"
 34903 ;; Parameters:    Size  Location     Type
 34904 ;;  data            2   74[COMRAM] PTR unsigned char 
 34905 ;;		 -> RAM(3759), 
 34906 ;; Auto vars:     Size  Location     Type
 34907 ;;		None
 34908 ;; Return value:  Size  Location     Type
 34909 ;;                  1    wreg      unsigned char 
 34910 ;; Registers used:
 34911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 34912 ;; Tracked objects:
 34913 ;;		On entry : 0/0
 34914 ;;		On exit  : 0/0
 34915 ;;		Unchanged: 0/0
 34916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34917 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34919 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34920 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34921 ;;Total ram usage:        3 bytes
 34922 ;; Hardware stack levels used:    1
 34923 ;; Hardware stack levels required when called:    8
 34924 ;; This function calls:
 34925 ;;		_fat_append_to_file
 34926 ;; This function is called by:
 34927 ;;		__parse_command_long
 34928 ;; This function uses a non-reentrant model
 34929 ;;
 34930                           
 34931                           	psect	text178
 34932  0062D2                     __ptext178:
 34933                           	opt stack 0
 34934  0062D2                     __parse_file_append:
 34935                           	opt stack 20
 34936                           
 34937                           ;api.c: 536: if((data[0]!=COMMAND_FILE_APPEND) || (data[3]!=0xFE) || (data[4]!=0x4B))
 34938                           
 34939                           ;incstack = 0
 34940  0062D2  C04B  FFD9         	movff	__parse_file_append@data,fsr2l
 34941  0062D6  C04C  FFDA         	movff	__parse_file_append@data+1,fsr2h
 34942  0062DA  0E54               	movlw	84
 34943  0062DC  18DE               	xorwf	postinc2,w,c
 34944  0062DE  A4D8               	btfss	status,2,c
 34945  0062E0  D014               	goto	u9100
 34946  0062E2  EE20 F003          	lfsr	2,3
 34947  0062E6  504B               	movf	__parse_file_append@data,w,c
 34948  0062E8  26D9               	addwf	fsr2l,f,c
 34949  0062EA  504C               	movf	__parse_file_append@data+1,w,c
 34950  0062EC  22DA               	addwfc	fsr2h,f,c
 34951  0062EE  0EFE               	movlw	254
 34952  0062F0  18DE               	xorwf	postinc2,w,c
 34953  0062F2  A4D8               	btfss	status,2,c
 34954  0062F4  D00A               	goto	u9100
 34955  0062F6  EE20 F004          	lfsr	2,4
 34956  0062FA  504B               	movf	__parse_file_append@data,w,c
 34957  0062FC  26D9               	addwf	fsr2l,f,c
 34958  0062FE  504C               	movf	__parse_file_append@data+1,w,c
 34959  006300  22DA               	addwfc	fsr2h,f,c
 34960  006302  0E4B               	movlw	75
 34961  006304  18DE               	xorwf	postinc2,w,c
 34962  006306  B4D8               	btfsc	status,2,c
 34963  006308  D002               	goto	l2619
 34964  00630A                     u9100:
 34965                           
 34966                           ;api.c: 537: {;api.c: 538: return 15;
 34967  00630A  0E0F               	movlw	15
 34968  00630C  0012               	return	
 34969  00630E                     l2619:
 34970                           
 34971                           ;api.c: 539: };api.c: 542: fat_append_to_file(data[1], (uint16_t) data[2], &data[5]);
 34972  00630E  EE20 F002          	lfsr	2,2
 34973  006312  504B               	movf	__parse_file_append@data,w,c
 34974  006314  26D9               	addwf	fsr2l,f,c
 34975  006316  504C               	movf	__parse_file_append@data+1,w,c
 34976  006318  22DA               	addwfc	fsr2h,f,c
 34977  00631A  50DF               	movf	indf2,w,c
 34978  00631C  6E4D               	movwf	??__parse_file_append& (0+255),c
 34979  00631E  504D               	movf	??__parse_file_append,w,c
 34980  006320  6E3F               	movwf	fat_append_to_file@number_of_bytes,c
 34981  006322  6A40               	clrf	fat_append_to_file@number_of_bytes+1,c
 34982  006324  0E05               	movlw	5
 34983  006326  244B               	addwf	__parse_file_append@data,w,c
 34984  006328  6E41               	movwf	fat_append_to_file@data,c
 34985  00632A  0E00               	movlw	0
 34986  00632C  204C               	addwfc	__parse_file_append@data+1,w,c
 34987  00632E  6E42               	movwf	fat_append_to_file@data+1,c
 34988  006330  EE20 F001          	lfsr	2,1
 34989  006334  504B               	movf	__parse_file_append@data,w,c
 34990  006336  26D9               	addwf	fsr2l,f,c
 34991  006338  504C               	movf	__parse_file_append@data+1,w,c
 34992  00633A  22DA               	addwfc	fsr2h,f,c
 34993  00633C  50DF               	movf	indf2,w,c
 34994  00633E  EC8E  F010         	call	_fat_append_to_file
 34995                           
 34996                           ;api.c: 543: return data[2] + 5;
 34997  006342  EE20 F002          	lfsr	2,2
 34998  006346  504B               	movf	__parse_file_append@data,w,c
 34999  006348  26D9               	addwf	fsr2l,f,c
 35000  00634A  504C               	movf	__parse_file_append@data+1,w,c
 35001  00634C  22DA               	addwfc	fsr2h,f,c
 35002  00634E  50DF               	movf	indf2,w,c
 35003  006350  0F05               	addlw	5
 35004  006352  0012               	return	
 35005  006354                     __end_of__parse_file_append:
 35006                           	opt stack 0
 35007                           tosu	equ	0xFFF
 35008                           tosh	equ	0xFFE
 35009                           tosl	equ	0xFFD
 35010                           pclath	equ	0xFFA
 35011                           tblptru	equ	0xFF8
 35012                           tblptrh	equ	0xFF7
 35013                           tblptrl	equ	0xFF6
 35014                           tablat	equ	0xFF5
 35015                           prodh	equ	0xFF4
 35016                           prodl	equ	0xFF3
 35017                           intcon	equ	0xFF2
 35018                           intcon2	equ	0xFF1
 35019                           intcon3	equ	0xFF0
 35020                           indf0	equ	0xFEF
 35021                           postinc0	equ	0xFEE
 35022                           fsr0h	equ	0xFEA
 35023                           fsr0l	equ	0xFE9
 35024                           wreg	equ	0xFE8
 35025                           indf1	equ	0xFE7
 35026                           postdec1	equ	0xFE5
 35027                           plusw1	equ	0xFE3
 35028                           fsr1h	equ	0xFE2
 35029                           fsr1l	equ	0xFE1
 35030                           indf2	equ	0xFDF
 35031                           postinc2	equ	0xFDE
 35032                           postdec2	equ	0xFDD
 35033                           plusw2	equ	0xFDB
 35034                           fsr2h	equ	0xFDA
 35035                           fsr2l	equ	0xFD9
 35036                           status	equ	0xFD8
 35037                           
 35038 ;; *************** function _fat_append_to_file *****************
 35039 ;; Defined at:
 35040 ;;		line 448 in file "fat16.c"
 35041 ;; Parameters:    Size  Location     Type
 35042 ;;  file_number     1    wreg     unsigned char 
 35043 ;;  number_of_by    2   62[COMRAM] unsigned int 
 35044 ;;  data            2   64[COMRAM] PTR unsigned char 
 35045 ;;		 -> RAM(3759), 
 35046 ;; Auto vars:     Size  Location     Type
 35047 ;;  file_number     1   12[BANK0 ] unsigned char 
 35048 ;;  root           32   19[BANK0 ] struct .
 35049 ;;  position        4   15[BANK0 ] unsigned long 
 35050 ;;  file_size       4    2[BANK0 ] unsigned long 
 35051 ;;  length          2   13[BANK0 ] unsigned int 
 35052 ;;  offset          2   10[BANK0 ] unsigned int 
 35053 ;;  fat_cluster     2    8[BANK0 ] unsigned int 
 35054 ;;  new_cluster     2    6[BANK0 ] unsigned int 
 35055 ;;  sector          2    0[BANK0 ] unsigned int 
 35056 ;; Return value:  Size  Location     Type
 35057 ;;                  1    wreg      unsigned char 
 35058 ;; Registers used:
 35059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35060 ;; Tracked objects:
 35061 ;;		On entry : 0/0
 35062 ;;		On exit  : 0/0
 35063 ;;		Unchanged: 0/0
 35064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35065 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35066 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35067 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35068 ;;      Totals:        12      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35069 ;;Total ram usage:       63 bytes
 35070 ;; Hardware stack levels used:    1
 35071 ;; Hardware stack levels required when called:    7
 35072 ;; This function calls:
 35073 ;;		__get_empty_cluster
 35074 ;;		__read_fat
 35075 ;;		__root_is_available
 35076 ;;		__sector_from_cluster
 35077 ;;		__update_modified_time
 35078 ;;		__write_fat
 35079 ;;		__write_root
 35080 ;;		_fat_get_file_information
 35081 ;;		_flash_partial_write
 35082 ;; This function is called by:
 35083 ;;		__parse_file_append
 35084 ;; This function uses a non-reentrant model
 35085 ;;
 35086                           
 35087                           	psect	text179
 35088  00211C                     __ptext179:
 35089                           	opt stack 0
 35090  00211C                     _fat_append_to_file:
 35091                           	opt stack 20
 35092                           
 35093                           ;incstack = 0
 35094                           ;fat_append_to_file@file_number stored from wreg
 35095  00211C  0100               	movlb	0	; () banked
 35096  00211E  6FC1               	movwf	fat_append_to_file@file_number& (0+255),b
 35097                           
 35098                           ;fat16.c: 450: rootEntry_t root;;fat16.c: 451: uint32_t file_size;;fat16.c: 452: uint16_
      +                          t fat_cluster;;fat16.c: 453: uint16_t new_cluster;;fat16.c: 454: uint32_t position;;fat1
      +                          6.c: 455: uint16_t offset;;fat16.c: 456: uint16_t sector;;fat16.c: 457: uint16_t length;
      +                          ;fat16.c: 460: if(file_number>=64)
 35099  002120  0E3F               	movlw	63
 35100  002122  0100               	movlb	0	; () banked
 35101  002124  65C1               	cpfsgt	fat_append_to_file@file_number& (0+255),b
 35102  002126  D001               	goto	l1941
 35103  002128  0012               	return	
 35104  00212A                     l1941:
 35105                           
 35106                           ; BSR set to: 0
 35107                           ;fat16.c: 464: };fat16.c: 467: if(_root_is_available(file_number))
 35108                           
 35109                           ; BSR set to: 0
 35110  00212A  51C1               	movf	fat_append_to_file@file_number& (0+255),w,b
 35111  00212C  EC9E  F032         	call	__root_is_available
 35112  002130  0900               	iorlw	0
 35113  002132  A4D8               	btfss	status,2,c
 35114  002134  0012               	return	
 35115                           
 35116                           ;fat16.c: 471: };fat16.c: 474: fat_get_file_information(file_number, &root);
 35117                           
 35118                           ;fat16.c: 468: {;fat16.c: 470: return 0xFE;;	Return value of _fat_append_to_file is neve
      +                          r used
 35119  002136  0EC8               	movlw	low fat_append_to_file@root
 35120  002138  6E37               	movwf	fat_get_file_information@data,c
 35121  00213A  0E00               	movlw	high fat_append_to_file@root
 35122  00213C  6E38               	movwf	fat_get_file_information@data+1,c
 35123  00213E  0100               	movlb	0	; () banked
 35124  002140  51C1               	movf	fat_append_to_file@file_number& (0+255),w,b
 35125  002142  ECD9  F032         	call	_fat_get_file_information
 35126                           
 35127                           ;fat16.c: 475: file_size = root.fileSize;
 35128  002146  C0E4  F0B7         	movff	fat_append_to_file@root+28,fat_append_to_file@file_size
 35129  00214A  C0E5  F0B8         	movff	fat_append_to_file@root+29,fat_append_to_file@file_size+1
 35130  00214E  C0E6  F0B9         	movff	fat_append_to_file@root+30,fat_append_to_file@file_size+2
 35131  002152  C0E7  F0BA         	movff	fat_append_to_file@root+31,fat_append_to_file@file_size+3
 35132                           
 35133                           ;fat16.c: 476: fat_cluster = root.firstCluster;
 35134  002156  C0E2  F0BD         	movff	fat_append_to_file@root+26,fat_append_to_file@fat_cluster
 35135  00215A  C0E3  F0BE         	movff	fat_append_to_file@root+27,fat_append_to_file@fat_cluster+1
 35136                           
 35137                           ;fat16.c: 479: position = 0;
 35138  00215E  0E00               	movlw	0
 35139  002160  0100               	movlb	0	; () banked
 35140  002162  6FC4               	movwf	fat_append_to_file@position& (0+255),b
 35141  002164  0E00               	movlw	0
 35142  002166  6FC5               	movwf	(fat_append_to_file@position+1)& (0+255),b
 35143  002168  0E00               	movlw	0
 35144  00216A  6FC6               	movwf	(fat_append_to_file@position+2)& (0+255),b
 35145  00216C  0E00               	movlw	0
 35146  00216E  6FC7               	movwf	(fat_append_to_file@position+3)& (0+255),b
 35147                           
 35148                           ;fat16.c: 480: while((file_size-position)>512)
 35149  002170  D013               	goto	l1944
 35150  002172                     l11218:
 35151                           
 35152                           ; BSR set to: 0
 35153                           ;fat16.c: 481: {;fat16.c: 482: fat_cluster = _read_fat(fat_cluster);
 35154  002172  C0BD  F030         	movff	fat_append_to_file@fat_cluster,__read_fat@cluster
 35155  002176  C0BE  F031         	movff	fat_append_to_file@fat_cluster+1,__read_fat@cluster+1
 35156  00217A  ECE2  F039         	call	__read_fat	;wreg free
 35157  00217E  C030  F0BD         	movff	?__read_fat,fat_append_to_file@fat_cluster
 35158  002182  C031  F0BE         	movff	?__read_fat+1,fat_append_to_file@fat_cluster+1
 35159                           
 35160                           ;fat16.c: 483: position += 512;
 35161  002186  0E00               	movlw	0
 35162  002188  0100               	movlb	0	; () banked
 35163  00218A  27C4               	addwf	fat_append_to_file@position& (0+255),f,b
 35164  00218C  0E02               	movlw	2
 35165  00218E  23C5               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 35166  002190  0E00               	movlw	0
 35167  002192  23C6               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 35168  002194  0E00               	movlw	0
 35169  002196  23C7               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 35170  002198                     l1944:
 35171                           
 35172                           ; BSR set to: 0
 35173                           
 35174                           ; BSR set to: 0
 35175  002198  C0C4  F043         	movff	fat_append_to_file@position,??_fat_append_to_file
 35176  00219C  C0C5  F044         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 35177  0021A0  C0C6  F045         	movff	fat_append_to_file@position+2,??_fat_append_to_file+2
 35178  0021A4  C0C7  F046         	movff	fat_append_to_file@position+3,??_fat_append_to_file+3
 35179  0021A8  1E43               	comf	??_fat_append_to_file,f,c
 35180  0021AA  1E44               	comf	??_fat_append_to_file+1,f,c
 35181  0021AC  1E45               	comf	??_fat_append_to_file+2,f,c
 35182  0021AE  1E46               	comf	??_fat_append_to_file+3,f,c
 35183  0021B0  2A43               	incf	??_fat_append_to_file,f,c
 35184  0021B2  0E00               	movlw	0
 35185  0021B4  2244               	addwfc	??_fat_append_to_file+1,f,c
 35186  0021B6  2245               	addwfc	??_fat_append_to_file+2,f,c
 35187  0021B8  2246               	addwfc	??_fat_append_to_file+3,f,c
 35188  0021BA  51B7               	movf	fat_append_to_file@file_size& (0+255),w,b
 35189  0021BC  2443               	addwf	??_fat_append_to_file,w,c
 35190  0021BE  6E47               	movwf	(??_fat_append_to_file+4)& (0+255),c
 35191  0021C0  51B8               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 35192  0021C2  2044               	addwfc	??_fat_append_to_file+1,w,c
 35193  0021C4  6E48               	movwf	(??_fat_append_to_file+5)& (0+255),c
 35194  0021C6  51B9               	movf	(fat_append_to_file@file_size+2)& (0+255),w,b
 35195  0021C8  2045               	addwfc	??_fat_append_to_file+2,w,c
 35196  0021CA  6E49               	movwf	(??_fat_append_to_file+6)& (0+255),c
 35197  0021CC  51BA               	movf	(fat_append_to_file@file_size+3)& (0+255),w,b
 35198  0021CE  2046               	addwfc	??_fat_append_to_file+3,w,c
 35199  0021D0  6E4A               	movwf	(??_fat_append_to_file+7)& (0+255),c
 35200  0021D2  504A               	movf	??_fat_append_to_file+7,w,c
 35201  0021D4  1049               	iorwf	??_fat_append_to_file+6,w,c
 35202  0021D6  E1CD               	bnz	l11218
 35203  0021D8  0447               	decf	??_fat_append_to_file+4,w,c
 35204  0021DA  0E02               	movlw	2
 35205  0021DC  5848               	subwfb	??_fat_append_to_file+5,w,c
 35206  0021DE  B0D8               	btfsc	status,0,c
 35207  0021E0  D7C8               	goto	l1945
 35208                           
 35209                           ; BSR set to: 0
 35210                           ;fat16.c: 484: };fat16.c: 487: offset = file_size - position;
 35211                           
 35212                           ; BSR set to: 0
 35213  0021E2  C0C4  F043         	movff	fat_append_to_file@position,??_fat_append_to_file
 35214  0021E6  C0C5  F044         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 35215  0021EA  1E43               	comf	??_fat_append_to_file,f,c
 35216  0021EC  1E44               	comf	??_fat_append_to_file+1,f,c
 35217  0021EE  4A43               	infsnz	??_fat_append_to_file,f,c
 35218  0021F0  2A44               	incf	??_fat_append_to_file+1,f,c
 35219  0021F2  51B7               	movf	fat_append_to_file@file_size& (0+255),w,b
 35220  0021F4  2443               	addwf	??_fat_append_to_file,w,c
 35221  0021F6  6FBF               	movwf	fat_append_to_file@offset& (0+255),b
 35222  0021F8  51B8               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 35223  0021FA  2044               	addwfc	??_fat_append_to_file+1,w,c
 35224  0021FC  6FC0               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 35225                           
 35226                           ; BSR set to: 0
 35227                           ;fat16.c: 490: position = 0;
 35228  0021FE  0E00               	movlw	0
 35229  002200  6FC4               	movwf	fat_append_to_file@position& (0+255),b
 35230  002202  0E00               	movlw	0
 35231  002204  6FC5               	movwf	(fat_append_to_file@position+1)& (0+255),b
 35232  002206  0E00               	movlw	0
 35233  002208  6FC6               	movwf	(fat_append_to_file@position+2)& (0+255),b
 35234  00220A  0E00               	movlw	0
 35235  00220C  6FC7               	movwf	(fat_append_to_file@position+3)& (0+255),b
 35236                           
 35237                           ;fat16.c: 491: while(position < number_of_bytes)
 35238  00220E  D06F               	goto	l1947
 35239  002210                     
 35240                           ; BSR set to: 0
 35241                           ;fat16.c: 492: {;fat16.c: 494: if(offset==512)
 35242                           
 35243                           ; BSR set to: 0
 35244  002210  0E02               	movlw	2
 35245  002212  19C0               	xorwf	(fat_append_to_file@offset+1)& (0+255),w,b
 35246  002214  11BF               	iorwf	fat_append_to_file@offset& (0+255),w,b
 35247  002216  A4D8               	btfss	status,2,c
 35248  002218  D026               	goto	l1949
 35249                           
 35250                           ; BSR set to: 0
 35251                           ;fat16.c: 495: {;fat16.c: 498: new_cluster = _get_empty_cluster(0x0000);
 35252  00221A  0E00               	movlw	0
 35253  00221C  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 35254  00221E  0E00               	movlw	0
 35255  002220  6E30               	movwf	__get_empty_cluster@first_cluster,c
 35256  002222  EC13  F033         	call	__get_empty_cluster	;wreg free
 35257  002226  C030  F0BB         	movff	?__get_empty_cluster,fat_append_to_file@new_cluster
 35258  00222A  C031  F0BC         	movff	?__get_empty_cluster+1,fat_append_to_file@new_cluster+1
 35259                           
 35260                           ;fat16.c: 500: _write_fat(fat_cluster, new_cluster);
 35261  00222E  C0BD  F029         	movff	fat_append_to_file@fat_cluster,__write_fat@cluster
 35262  002232  C0BE  F02A         	movff	fat_append_to_file@fat_cluster+1,__write_fat@cluster+1
 35263  002236  C0BB  F02B         	movff	fat_append_to_file@new_cluster,__write_fat@value
 35264  00223A  C0BC  F02C         	movff	fat_append_to_file@new_cluster+1,__write_fat@value+1
 35265  00223E  ECAB  F03A         	call	__write_fat	;wreg free
 35266                           
 35267                           ;fat16.c: 502: _write_fat(new_cluster, 0xFFFF);
 35268  002242  C0BB  F029         	movff	fat_append_to_file@new_cluster,__write_fat@cluster
 35269  002246  C0BC  F02A         	movff	fat_append_to_file@new_cluster+1,__write_fat@cluster+1
 35270  00224A  0EFF               	movlw	255
 35271  00224C  6E2C               	movwf	__write_fat@value+1,c
 35272  00224E  682B               	setf	__write_fat@value,c
 35273  002250  ECAB  F03A         	call	__write_fat	;wreg free
 35274                           
 35275                           ;fat16.c: 504: fat_cluster = new_cluster;
 35276  002254  C0BB  F0BD         	movff	fat_append_to_file@new_cluster,fat_append_to_file@fat_cluster
 35277  002258  C0BC  F0BE         	movff	fat_append_to_file@new_cluster+1,fat_append_to_file@fat_cluster+1
 35278                           
 35279                           ;fat16.c: 505: offset = 0;
 35280  00225C  0E00               	movlw	0
 35281  00225E  0100               	movlb	0	; () banked
 35282  002260  6FC0               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 35283  002262  0E00               	movlw	0
 35284  002264  6FBF               	movwf	fat_append_to_file@offset& (0+255),b
 35285  002266                     l1949:
 35286                           
 35287                           ; BSR set to: 0
 35288                           ;fat16.c: 506: };fat16.c: 509: sector = _sector_from_cluster(fat_cluster);
 35289                           
 35290                           ; BSR set to: 0
 35291  002266  C0BD  F001         	movff	fat_append_to_file@fat_cluster,__sector_from_cluster@fat_cluster
 35292  00226A  C0BE  F002         	movff	fat_append_to_file@fat_cluster+1,__sector_from_cluster@fat_cluster+1
 35293  00226E  ECB4  F03E         	call	__sector_from_cluster	;wreg free
 35294  002272  C001  F0B5         	movff	?__sector_from_cluster,fat_append_to_file@sector
 35295  002276  C002  F0B6         	movff	?__sector_from_cluster+1,fat_append_to_file@sector+1
 35296                           
 35297                           ;fat16.c: 512: length = 512 - offset;
 35298  00227A  C0BF  F043         	movff	fat_append_to_file@offset,??_fat_append_to_file
 35299  00227E  C0C0  F044         	movff	fat_append_to_file@offset+1,??_fat_append_to_file+1
 35300  002282  1E43               	comf	??_fat_append_to_file,f,c
 35301  002284  1E44               	comf	??_fat_append_to_file+1,f,c
 35302  002286  4A43               	infsnz	??_fat_append_to_file,f,c
 35303  002288  2A44               	incf	??_fat_append_to_file+1,f,c
 35304  00228A  0E00               	movlw	0
 35305  00228C  2443               	addwf	??_fat_append_to_file,w,c
 35306  00228E  0100               	movlb	0	; () banked
 35307  002290  6FC2               	movwf	fat_append_to_file@length& (0+255),b
 35308  002292  0E02               	movlw	2
 35309  002294  2044               	addwfc	??_fat_append_to_file+1,w,c
 35310  002296  6FC3               	movwf	(fat_append_to_file@length+1)& (0+255),b
 35311                           
 35312                           ; BSR set to: 0
 35313                           ;fat16.c: 513: if(length>number_of_bytes)
 35314  002298  51C2               	movf	fat_append_to_file@length& (0+255),w,b
 35315  00229A  5C3F               	subwf	fat_append_to_file@number_of_bytes,w,c
 35316  00229C  51C3               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 35317  00229E  5840               	subwfb	fat_append_to_file@number_of_bytes+1,w,c
 35318  0022A0  B0D8               	btfsc	status,0,c
 35319  0022A2  D004               	goto	l1950
 35320                           
 35321                           ; BSR set to: 0
 35322                           ;fat16.c: 514: {;fat16.c: 515: length = number_of_bytes;
 35323  0022A4  C03F  F0C2         	movff	fat_append_to_file@number_of_bytes,fat_append_to_file@length
 35324  0022A8  C040  F0C3         	movff	fat_append_to_file@number_of_bytes+1,fat_append_to_file@length+1
 35325  0022AC                     l1950:
 35326                           
 35327                           ; BSR set to: 0
 35328                           ;fat16.c: 516: };fat16.c: 519: flash_partial_write(sector, offset, length, &data[positio
      +                          n]);
 35329                           
 35330                           ; BSR set to: 0
 35331  0022AC  C0B5  F020         	movff	fat_append_to_file@sector,flash_partial_write@page
 35332  0022B0  C0B6  F021         	movff	fat_append_to_file@sector+1,flash_partial_write@page+1
 35333  0022B4  C0BF  F022         	movff	fat_append_to_file@offset,flash_partial_write@start
 35334  0022B8  C0C0  F023         	movff	fat_append_to_file@offset+1,flash_partial_write@start+1
 35335  0022BC  C0C2  F024         	movff	fat_append_to_file@length,flash_partial_write@length
 35336  0022C0  C0C3  F025         	movff	fat_append_to_file@length+1,flash_partial_write@length+1
 35337  0022C4  51C4               	movf	fat_append_to_file@position& (0+255),w,b
 35338  0022C6  2441               	addwf	fat_append_to_file@data,w,c
 35339  0022C8  6E26               	movwf	flash_partial_write@data,c
 35340  0022CA  51C5               	movf	(fat_append_to_file@position+1)& (0+255),w,b
 35341  0022CC  2042               	addwfc	fat_append_to_file@data+1,w,c
 35342  0022CE  6E27               	movwf	flash_partial_write@data+1,c
 35343  0022D0  ECBE  F033         	call	_flash_partial_write	;wreg free
 35344                           
 35345                           ;fat16.c: 522: position += length;
 35346  0022D4  0100               	movlb	0	; () banked
 35347  0022D6  51C2               	movf	fat_append_to_file@length& (0+255),w,b
 35348  0022D8  27C4               	addwf	fat_append_to_file@position& (0+255),f,b
 35349  0022DA  51C3               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 35350  0022DC  23C5               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 35351  0022DE  0E00               	movlw	0
 35352  0022E0  23C6               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 35353  0022E2  0E00               	movlw	0
 35354  0022E4  23C7               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 35355                           
 35356                           ; BSR set to: 0
 35357                           ;fat16.c: 523: offset += length;
 35358  0022E6  51C2               	movf	fat_append_to_file@length& (0+255),w,b
 35359  0022E8  27BF               	addwf	fat_append_to_file@offset& (0+255),f,b
 35360  0022EA  51C3               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 35361  0022EC  23C0               	addwfc	(fat_append_to_file@offset+1)& (0+255),f,b
 35362  0022EE                     l1947:
 35363                           
 35364                           ; BSR set to: 0
 35365                           
 35366                           ; BSR set to: 0
 35367  0022EE  503F               	movf	fat_append_to_file@number_of_bytes,w,c
 35368  0022F0  6E43               	movwf	??_fat_append_to_file& (0+255),c
 35369  0022F2  5040               	movf	fat_append_to_file@number_of_bytes+1,w,c
 35370  0022F4  6E44               	movwf	(??_fat_append_to_file+1)& (0+255),c
 35371  0022F6  6A45               	clrf	(??_fat_append_to_file+2)& (0+255),c
 35372  0022F8  6A46               	clrf	(??_fat_append_to_file+3)& (0+255),c
 35373  0022FA  5043               	movf	??_fat_append_to_file,w,c
 35374  0022FC  5DC4               	subwf	fat_append_to_file@position& (0+255),w,b
 35375  0022FE  5044               	movf	??_fat_append_to_file+1,w,c
 35376  002300  59C5               	subwfb	(fat_append_to_file@position+1)& (0+255),w,b
 35377  002302  5045               	movf	??_fat_append_to_file+2,w,c
 35378  002304  59C6               	subwfb	(fat_append_to_file@position+2)& (0+255),w,b
 35379  002306  5046               	movf	??_fat_append_to_file+3,w,c
 35380  002308  59C7               	subwfb	(fat_append_to_file@position+3)& (0+255),w,b
 35381  00230A  A0D8               	btfss	status,0,c
 35382  00230C  D781               	goto	l1948
 35383                           
 35384                           ; BSR set to: 0
 35385                           ;fat16.c: 524: };fat16.c: 528: root.fileSize += number_of_bytes;
 35386                           
 35387                           ; BSR set to: 0
 35388  00230E  503F               	movf	fat_append_to_file@number_of_bytes,w,c
 35389  002310  27E4               	addwf	(fat_append_to_file@root+28)& (0+255),f,b
 35390  002312  5040               	movf	fat_append_to_file@number_of_bytes+1,w,c
 35391  002314  23E5               	addwfc	(fat_append_to_file@root+29)& (0+255),f,b
 35392  002316  0E00               	movlw	0
 35393  002318  23E6               	addwfc	(fat_append_to_file@root+30)& (0+255),f,b
 35394  00231A  0E00               	movlw	0
 35395  00231C  23E7               	addwfc	(fat_append_to_file@root+31)& (0+255),f,b
 35396                           
 35397                           ; BSR set to: 0
 35398                           ;fat16.c: 529: _update_modified_time(&root);
 35399  00231E  0EC8               	movlw	low fat_append_to_file@root
 35400  002320  6E05               	movwf	__update_modified_time@root,c
 35401  002322  0E00               	movlw	high fat_append_to_file@root
 35402  002324  6E06               	movwf	__update_modified_time@root+1,c
 35403  002326  EC50  F03C         	call	__update_modified_time	;wreg free
 35404                           
 35405                           ;fat16.c: 530: _write_root(file_number, &root);
 35406  00232A  0EC8               	movlw	low fat_append_to_file@root
 35407  00232C  6E29               	movwf	__write_root@data,c
 35408  00232E  0E00               	movlw	high fat_append_to_file@root
 35409  002330  6E2A               	movwf	__write_root@data+1,c
 35410  002332  0100               	movlb	0	; () banked
 35411  002334  51C1               	movf	fat_append_to_file@file_number& (0+255),w,b
 35412  002336  EC47  F037         	call	__write_root
 35413  00233A  0012               	return	
 35414  00233C                     __end_of_fat_append_to_file:
 35415                           	opt stack 0
 35416                           tosu	equ	0xFFF
 35417                           tosh	equ	0xFFE
 35418                           tosl	equ	0xFFD
 35419                           pclath	equ	0xFFA
 35420                           tblptru	equ	0xFF8
 35421                           tblptrh	equ	0xFF7
 35422                           tblptrl	equ	0xFF6
 35423                           tablat	equ	0xFF5
 35424                           prodh	equ	0xFF4
 35425                           prodl	equ	0xFF3
 35426                           intcon	equ	0xFF2
 35427                           intcon2	equ	0xFF1
 35428                           intcon3	equ	0xFF0
 35429                           indf0	equ	0xFEF
 35430                           postinc0	equ	0xFEE
 35431                           fsr0h	equ	0xFEA
 35432                           fsr0l	equ	0xFE9
 35433                           wreg	equ	0xFE8
 35434                           indf1	equ	0xFE7
 35435                           postdec1	equ	0xFE5
 35436                           plusw1	equ	0xFE3
 35437                           fsr1h	equ	0xFE2
 35438                           fsr1l	equ	0xFE1
 35439                           indf2	equ	0xFDF
 35440                           postinc2	equ	0xFDE
 35441                           postdec2	equ	0xFDD
 35442                           plusw2	equ	0xFDB
 35443                           fsr2h	equ	0xFDA
 35444                           fsr2l	equ	0xFD9
 35445                           status	equ	0xFD8
 35446                           
 35447 ;; *************** function _fat_get_file_information *****************
 35448 ;; Defined at:
 35449 ;;		line 1020 in file "fat16.c"
 35450 ;; Parameters:    Size  Location     Type
 35451 ;;  file_number     1    wreg     unsigned char 
 35452 ;;  data            2   54[COMRAM] PTR struct .
 35453 ;;		 -> _spi_external_tx_buffer(64), fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32),
      + 
 35454 ;;		 -> RAM(3759), 
 35455 ;; Auto vars:     Size  Location     Type
 35456 ;;  file_number     1   61[COMRAM] unsigned char 
 35457 ;;  offset          2   59[COMRAM] unsigned int 
 35458 ;;  root_sector     2   57[COMRAM] unsigned int 
 35459 ;; Return value:  Size  Location     Type
 35460 ;;                  1    wreg      unsigned char 
 35461 ;; Registers used:
 35462 ;;		wreg, status,2, status,0, cstack
 35463 ;; Tracked objects:
 35464 ;;		On entry : 0/0
 35465 ;;		On exit  : 0/0
 35466 ;;		Unchanged: 0/0
 35467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35469 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35470 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35471 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35472 ;;Total ram usage:        8 bytes
 35473 ;; Hardware stack levels used:    1
 35474 ;; Hardware stack levels required when called:    6
 35475 ;; This function calls:
 35476 ;;		__root_is_available
 35477 ;;		_flash_partial_read
 35478 ;; This function is called by:
 35479 ;;		_fat_append_to_file
 35480 ;;		_fat_rename_file
 35481 ;;		_fat_read_from_file
 35482 ;;		__fill_buffer_get_file_details
 35483 ;; This function uses a non-reentrant model
 35484 ;;
 35485                           
 35486                           	psect	text180
 35487  0065B2                     __ptext180:
 35488                           	opt stack 0
 35489  0065B2                     _fat_get_file_information:
 35490                           	opt stack 21
 35491                           
 35492                           ;incstack = 0
 35493                           ;fat_get_file_information@file_number stored from wreg
 35494  0065B2  6E3E               	movwf	fat_get_file_information@file_number,c
 35495                           
 35496                           ;fat16.c: 1022: uint16_t root_sector;;fat16.c: 1023: uint16_t offset;;fat16.c: 1025: if(
      +                          file_number>=64)
 35497  0065B4  0E3F               	movlw	63
 35498  0065B6  643E               	cpfsgt	fat_get_file_information@file_number,c
 35499  0065B8  D002               	goto	l2133
 35500                           
 35501                           ;fat16.c: 1026: {;fat16.c: 1028: return 0x01;
 35502  0065BA  0E01               	movlw	1
 35503  0065BC  0012               	return	
 35504  0065BE                     l2133:
 35505                           
 35506                           ;fat16.c: 1029: };fat16.c: 1030: if(_root_is_available(file_number))
 35507  0065BE  503E               	movf	fat_get_file_information@file_number,w,c
 35508  0065C0  EC9E  F032         	call	__root_is_available
 35509  0065C4  0900               	iorlw	0
 35510  0065C6  B4D8               	btfsc	status,2,c
 35511  0065C8  D002               	goto	l2135
 35512                           
 35513                           ;fat16.c: 1031: {;fat16.c: 1033: return 0x02;
 35514  0065CA  0E02               	movlw	2
 35515  0065CC  0012               	return	
 35516  0065CE                     l2135:
 35517                           
 35518                           ;fat16.c: 1034: };fat16.c: 1036: root_sector = (file_number >> 4) + 18;
 35519  0065CE  C03E  F039         	movff	fat_get_file_information@file_number,??_fat_get_file_information
 35520  0065D2  3A39               	swapf	??_fat_get_file_information,f,c
 35521  0065D4  0E0F               	movlw	15
 35522  0065D6  1639               	andwf	??_fat_get_file_information,f,c
 35523  0065D8  0E12               	movlw	18
 35524  0065DA  2439               	addwf	??_fat_get_file_information,w,c
 35525  0065DC  6E3A               	movwf	fat_get_file_information@root_sector,c
 35526  0065DE  6A3B               	clrf	fat_get_file_information@root_sector+1,c
 35527  0065E0  0E00               	movlw	0
 35528  0065E2  223B               	addwfc	fat_get_file_information@root_sector+1,f,c
 35529                           
 35530                           ;fat16.c: 1037: offset = (file_number & 0b1111);
 35531  0065E4  C03E  F039         	movff	fat_get_file_information@file_number,??_fat_get_file_information
 35532  0065E8  0E0F               	movlw	15
 35533  0065EA  1639               	andwf	??_fat_get_file_information,f,c
 35534  0065EC  5039               	movf	??_fat_get_file_information,w,c
 35535  0065EE  6E3C               	movwf	fat_get_file_information@offset,c
 35536  0065F0  6A3D               	clrf	fat_get_file_information@offset+1,c
 35537                           
 35538                           ;fat16.c: 1038: offset <<= 5;
 35539  0065F2  0E05               	movlw	5
 35540  0065F4                     u7725:
 35541  0065F4  90D8               	bcf	status,0,c
 35542  0065F6  363C               	rlcf	fat_get_file_information@offset,f,c
 35543  0065F8  363D               	rlcf	fat_get_file_information@offset+1,f,c
 35544  0065FA  2EE8               	decfsz	wreg,f,c
 35545  0065FC  D7FB               	goto	u7725
 35546                           
 35547                           ;fat16.c: 1039: flash_partial_read(root_sector, offset, 32, data);
 35548  0065FE  C03A  F028         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 35549  006602  C03B  F029         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 35550  006606  C03C  F02A         	movff	fat_get_file_information@offset,flash_partial_read@start
 35551  00660A  C03D  F02B         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 35552  00660E  0E00               	movlw	0
 35553  006610  6E2D               	movwf	flash_partial_read@length+1,c
 35554  006612  0E20               	movlw	32
 35555  006614  6E2C               	movwf	flash_partial_read@length,c
 35556  006616  C037  F02E         	movff	fat_get_file_information@data,flash_partial_read@data
 35557  00661A  C038  F02F         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 35558  00661E  EC69  F03C         	call	_flash_partial_read	;wreg free
 35559                           
 35560                           ;fat16.c: 1042: return 0x00;
 35561  006622  0E00               	movlw	0
 35562  006624  0012               	return	
 35563  006626                     __end_of_fat_get_file_information:
 35564                           	opt stack 0
 35565                           tosu	equ	0xFFF
 35566                           tosh	equ	0xFFE
 35567                           tosl	equ	0xFFD
 35568                           pclath	equ	0xFFA
 35569                           tblptru	equ	0xFF8
 35570                           tblptrh	equ	0xFF7
 35571                           tblptrl	equ	0xFF6
 35572                           tablat	equ	0xFF5
 35573                           prodh	equ	0xFF4
 35574                           prodl	equ	0xFF3
 35575                           intcon	equ	0xFF2
 35576                           intcon2	equ	0xFF1
 35577                           intcon3	equ	0xFF0
 35578                           indf0	equ	0xFEF
 35579                           postinc0	equ	0xFEE
 35580                           fsr0h	equ	0xFEA
 35581                           fsr0l	equ	0xFE9
 35582                           wreg	equ	0xFE8
 35583                           indf1	equ	0xFE7
 35584                           postdec1	equ	0xFE5
 35585                           plusw1	equ	0xFE3
 35586                           fsr1h	equ	0xFE2
 35587                           fsr1l	equ	0xFE1
 35588                           indf2	equ	0xFDF
 35589                           postinc2	equ	0xFDE
 35590                           postdec2	equ	0xFDD
 35591                           plusw2	equ	0xFDB
 35592                           fsr2h	equ	0xFDA
 35593                           fsr2l	equ	0xFD9
 35594                           status	equ	0xFD8
 35595                           
 35596 ;; *************** function __root_is_available *****************
 35597 ;; Defined at:
 35598 ;;		line 59 in file "fat16.c"
 35599 ;; Parameters:    Size  Location     Type
 35600 ;;  file_number     1    wreg     unsigned char 
 35601 ;; Auto vars:     Size  Location     Type
 35602 ;;  file_number     1   52[COMRAM] unsigned char 
 35603 ;;  offset          2   50[COMRAM] unsigned int 
 35604 ;;  root_sector     2   48[COMRAM] unsigned int 
 35605 ;;  first_byte      1   53[COMRAM] unsigned char 
 35606 ;; Return value:  Size  Location     Type
 35607 ;;                  1    wreg      unsigned char 
 35608 ;; Registers used:
 35609 ;;		wreg, status,2, status,0, cstack
 35610 ;; Tracked objects:
 35611 ;;		On entry : 0/0
 35612 ;;		On exit  : 0/0
 35613 ;;		Unchanged: 0/0
 35614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35616 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35617 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35618 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35619 ;;Total ram usage:        7 bytes
 35620 ;; Hardware stack levels used:    1
 35621 ;; Hardware stack levels required when called:    5
 35622 ;; This function calls:
 35623 ;;		_flash_partial_read
 35624 ;; This function is called by:
 35625 ;;		__get_available_root_entry
 35626 ;;		_fat_delete_file
 35627 ;;		_fat_append_to_file
 35628 ;;		_fat_get_file_information
 35629 ;; This function uses a non-reentrant model
 35630 ;;
 35631                           
 35632                           	psect	text181
 35633  00653C                     __ptext181:
 35634                           	opt stack 0
 35635  00653C                     __root_is_available:
 35636                           	opt stack 21
 35637                           
 35638                           ;incstack = 0
 35639                           ;__root_is_available@file_number stored from wreg
 35640  00653C  6E35               	movwf	__root_is_available@file_number,c
 35641                           
 35642                           ;fat16.c: 61: uint16_t root_sector;;fat16.c: 62: uint16_t offset;;fat16.c: 63: uint8_t f
      +                          irst_byte;;fat16.c: 67: if(file_number>=64)
 35643  00653E  0E3F               	movlw	63
 35644  006540  6435               	cpfsgt	__root_is_available@file_number,c
 35645  006542  D002               	goto	l1853
 35646                           
 35647                           ;fat16.c: 68: {;fat16.c: 70: return 0;
 35648  006544  0E00               	movlw	0
 35649  006546  0012               	return	
 35650  006548                     l1853:
 35651                           
 35652                           ;fat16.c: 71: };fat16.c: 74: root_sector = (file_number >> 4) + 18;
 35653  006548  C035  F030         	movff	__root_is_available@file_number,??__root_is_available
 35654  00654C  3A30               	swapf	??__root_is_available,f,c
 35655  00654E  0E0F               	movlw	15
 35656  006550  1630               	andwf	??__root_is_available,f,c
 35657  006552  0E12               	movlw	18
 35658  006554  2430               	addwf	??__root_is_available,w,c
 35659  006556  6E31               	movwf	__root_is_available@root_sector,c
 35660  006558  6A32               	clrf	__root_is_available@root_sector+1,c
 35661  00655A  0E00               	movlw	0
 35662  00655C  2232               	addwfc	__root_is_available@root_sector+1,f,c
 35663                           
 35664                           ;fat16.c: 75: offset = (file_number & 0b1111);
 35665  00655E  C035  F030         	movff	__root_is_available@file_number,??__root_is_available
 35666  006562  0E0F               	movlw	15
 35667  006564  1630               	andwf	??__root_is_available,f,c
 35668  006566  5030               	movf	??__root_is_available,w,c
 35669  006568  6E33               	movwf	__root_is_available@offset,c
 35670  00656A  6A34               	clrf	__root_is_available@offset+1,c
 35671                           
 35672                           ;fat16.c: 76: offset <<= 5;
 35673  00656C  0E05               	movlw	5
 35674  00656E                     u6845:
 35675  00656E  90D8               	bcf	status,0,c
 35676  006570  3633               	rlcf	__root_is_available@offset,f,c
 35677  006572  3634               	rlcf	__root_is_available@offset+1,f,c
 35678  006574  2EE8               	decfsz	wreg,f,c
 35679  006576  D7FB               	goto	u6845
 35680                           
 35681                           ;fat16.c: 79: flash_partial_read(root_sector, offset, 1, &first_byte);
 35682  006578  C031  F028         	movff	__root_is_available@root_sector,flash_partial_read@page
 35683  00657C  C032  F029         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 35684  006580  C033  F02A         	movff	__root_is_available@offset,flash_partial_read@start
 35685  006584  C034  F02B         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 35686  006588  0E00               	movlw	0
 35687  00658A  6E2D               	movwf	flash_partial_read@length+1,c
 35688  00658C  0E01               	movlw	1
 35689  00658E  6E2C               	movwf	flash_partial_read@length,c
 35690  006590  0E36               	movlw	low __root_is_available@first_byte
 35691  006592  6E2E               	movwf	flash_partial_read@data,c
 35692  006594  0E00               	movlw	high __root_is_available@first_byte
 35693  006596  6E2F               	movwf	flash_partial_read@data+1,c
 35694  006598  EC69  F03C         	call	_flash_partial_read	;wreg free
 35695                           
 35696                           ;fat16.c: 82: if((first_byte==0x00) || (first_byte==0xE5))
 35697  00659C  5036               	movf	__root_is_available@first_byte,w,c
 35698  00659E  B4D8               	btfsc	status,2,c
 35699  0065A0  D004               	goto	u6860
 35700  0065A2  0EE5               	movlw	229
 35701  0065A4  1836               	xorwf	__root_is_available@first_byte,w,c
 35702  0065A6  A4D8               	btfss	status,2,c
 35703  0065A8  D002               	goto	l1855
 35704  0065AA                     u6860:
 35705                           
 35706                           ;fat16.c: 83: {;fat16.c: 85: return 1;
 35707  0065AA  0E01               	movlw	1
 35708                           
 35709                           ;fat16.c: 86: }
 35710  0065AC  0012               	return	
 35711  0065AE                     l1855:
 35712                           
 35713                           ;fat16.c: 87: else;fat16.c: 88: {;fat16.c: 90: return 0;
 35714  0065AE  0E00               	movlw	0
 35715  0065B0  0012               	return	
 35716  0065B2                     __end_of__root_is_available:
 35717                           	opt stack 0
 35718                           tosu	equ	0xFFF
 35719                           tosh	equ	0xFFE
 35720                           tosl	equ	0xFFD
 35721                           pclath	equ	0xFFA
 35722                           tblptru	equ	0xFF8
 35723                           tblptrh	equ	0xFF7
 35724                           tblptrl	equ	0xFF6
 35725                           tablat	equ	0xFF5
 35726                           prodh	equ	0xFF4
 35727                           prodl	equ	0xFF3
 35728                           intcon	equ	0xFF2
 35729                           intcon2	equ	0xFF1
 35730                           intcon3	equ	0xFF0
 35731                           indf0	equ	0xFEF
 35732                           postinc0	equ	0xFEE
 35733                           fsr0h	equ	0xFEA
 35734                           fsr0l	equ	0xFE9
 35735                           wreg	equ	0xFE8
 35736                           indf1	equ	0xFE7
 35737                           postdec1	equ	0xFE5
 35738                           plusw1	equ	0xFE3
 35739                           fsr1h	equ	0xFE2
 35740                           fsr1l	equ	0xFE1
 35741                           indf2	equ	0xFDF
 35742                           postinc2	equ	0xFDE
 35743                           postdec2	equ	0xFDD
 35744                           plusw2	equ	0xFDB
 35745                           fsr2h	equ	0xFDA
 35746                           fsr2l	equ	0xFD9
 35747                           status	equ	0xFD8
 35748                           
 35749 ;; *************** function __write_root *****************
 35750 ;; Defined at:
 35751 ;;		line 182 in file "fat16.c"
 35752 ;; Parameters:    Size  Location     Type
 35753 ;;  slot            1    wreg     unsigned char 
 35754 ;;  data            2   40[COMRAM] PTR struct .
 35755 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 35756 ;; Auto vars:     Size  Location     Type
 35757 ;;  slot            1   47[COMRAM] unsigned char 
 35758 ;;  offset          2   45[COMRAM] unsigned int 
 35759 ;;  root_sector     2   43[COMRAM] unsigned int 
 35760 ;; Return value:  Size  Location     Type
 35761 ;;                  1    wreg      void 
 35762 ;; Registers used:
 35763 ;;		wreg, status,2, status,0, cstack
 35764 ;; Tracked objects:
 35765 ;;		On entry : 0/0
 35766 ;;		On exit  : 0/0
 35767 ;;		Unchanged: 0/0
 35768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35769 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35770 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35771 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35772 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35773 ;;Total ram usage:        8 bytes
 35774 ;; Hardware stack levels used:    1
 35775 ;; Hardware stack levels required when called:    5
 35776 ;; This function calls:
 35777 ;;		_flash_partial_write
 35778 ;; This function is called by:
 35779 ;;		_fat_create_file
 35780 ;;		_fat_append_to_file
 35781 ;;		_fat_rename_file
 35782 ;; This function uses a non-reentrant model
 35783 ;;
 35784                           
 35785                           	psect	text182
 35786  006E8E                     __ptext182:
 35787                           	opt stack 0
 35788  006E8E                     __write_root:
 35789                           	opt stack 21
 35790                           
 35791                           ;incstack = 0
 35792                           ;__write_root@slot stored from wreg
 35793  006E8E  6E30               	movwf	__write_root@slot,c
 35794                           
 35795                           ;fat16.c: 184: uint16_t root_sector;;fat16.c: 185: uint16_t offset;;fat16.c: 186: root_s
      +                          ector = (slot >> 4) + 18;
 35796  006E90  C030  F02B         	movff	__write_root@slot,??__write_root
 35797  006E94  3A2B               	swapf	??__write_root,f,c
 35798  006E96  0E0F               	movlw	15
 35799  006E98  162B               	andwf	??__write_root,f,c
 35800  006E9A  0E12               	movlw	18
 35801  006E9C  242B               	addwf	??__write_root,w,c
 35802  006E9E  6E2C               	movwf	__write_root@root_sector,c
 35803  006EA0  6A2D               	clrf	__write_root@root_sector+1,c
 35804  006EA2  0E00               	movlw	0
 35805  006EA4  222D               	addwfc	__write_root@root_sector+1,f,c
 35806                           
 35807                           ;fat16.c: 187: offset = (slot & 0b1111);
 35808  006EA6  C030  F02B         	movff	__write_root@slot,??__write_root
 35809  006EAA  0E0F               	movlw	15
 35810  006EAC  162B               	andwf	??__write_root,f,c
 35811  006EAE  502B               	movf	??__write_root,w,c
 35812  006EB0  6E2E               	movwf	__write_root@offset,c
 35813  006EB2  6A2F               	clrf	__write_root@offset+1,c
 35814                           
 35815                           ;fat16.c: 188: offset <<= 5;
 35816  006EB4  0E05               	movlw	5
 35817  006EB6                     u7595:
 35818  006EB6  90D8               	bcf	status,0,c
 35819  006EB8  362E               	rlcf	__write_root@offset,f,c
 35820  006EBA  362F               	rlcf	__write_root@offset+1,f,c
 35821  006EBC  2EE8               	decfsz	wreg,f,c
 35822  006EBE  D7FB               	goto	u7595
 35823                           
 35824                           ;fat16.c: 189: flash_partial_write(root_sector, offset, 32, data);
 35825  006EC0  C02C  F020         	movff	__write_root@root_sector,flash_partial_write@page
 35826  006EC4  C02D  F021         	movff	__write_root@root_sector+1,flash_partial_write@page+1
 35827  006EC8  C02E  F022         	movff	__write_root@offset,flash_partial_write@start
 35828  006ECC  C02F  F023         	movff	__write_root@offset+1,flash_partial_write@start+1
 35829  006ED0  0E00               	movlw	0
 35830  006ED2  6E25               	movwf	flash_partial_write@length+1,c
 35831  006ED4  0E20               	movlw	32
 35832  006ED6  6E24               	movwf	flash_partial_write@length,c
 35833  006ED8  C029  F026         	movff	__write_root@data,flash_partial_write@data
 35834  006EDC  C02A  F027         	movff	__write_root@data+1,flash_partial_write@data+1
 35835  006EE0  ECBE  F033         	call	_flash_partial_write	;wreg free
 35836  006EE4  0012               	return		;funcret
 35837  006EE6                     __end_of__write_root:
 35838                           	opt stack 0
 35839                           tosu	equ	0xFFF
 35840                           tosh	equ	0xFFE
 35841                           tosl	equ	0xFFD
 35842                           pclath	equ	0xFFA
 35843                           tblptru	equ	0xFF8
 35844                           tblptrh	equ	0xFF7
 35845                           tblptrl	equ	0xFF6
 35846                           tablat	equ	0xFF5
 35847                           prodh	equ	0xFF4
 35848                           prodl	equ	0xFF3
 35849                           intcon	equ	0xFF2
 35850                           intcon2	equ	0xFF1
 35851                           intcon3	equ	0xFF0
 35852                           indf0	equ	0xFEF
 35853                           postinc0	equ	0xFEE
 35854                           fsr0h	equ	0xFEA
 35855                           fsr0l	equ	0xFE9
 35856                           wreg	equ	0xFE8
 35857                           indf1	equ	0xFE7
 35858                           postdec1	equ	0xFE5
 35859                           plusw1	equ	0xFE3
 35860                           fsr1h	equ	0xFE2
 35861                           fsr1l	equ	0xFE1
 35862                           indf2	equ	0xFDF
 35863                           postinc2	equ	0xFDE
 35864                           postdec2	equ	0xFDD
 35865                           plusw2	equ	0xFDB
 35866                           fsr2h	equ	0xFDA
 35867                           fsr2l	equ	0xFD9
 35868                           status	equ	0xFD8
 35869                           
 35870 ;; *************** function __write_fat *****************
 35871 ;; Defined at:
 35872 ;;		line 158 in file "fat16.c"
 35873 ;; Parameters:    Size  Location     Type
 35874 ;;  cluster         2   40[COMRAM] unsigned int 
 35875 ;;  value           2   42[COMRAM] unsigned int 
 35876 ;; Auto vars:     Size  Location     Type
 35877 ;;  offset          2   46[COMRAM] unsigned int 
 35878 ;;  fat_sector      2   44[COMRAM] unsigned int 
 35879 ;; Return value:  Size  Location     Type
 35880 ;;                  1    wreg      void 
 35881 ;; Registers used:
 35882 ;;		wreg, status,2, status,0, cstack
 35883 ;; Tracked objects:
 35884 ;;		On entry : 0/0
 35885 ;;		On exit  : 0/0
 35886 ;;		Unchanged: 0/0
 35887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35888 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35889 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35891 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35892 ;;Total ram usage:        8 bytes
 35893 ;; Hardware stack levels used:    1
 35894 ;; Hardware stack levels required when called:    5
 35895 ;; This function calls:
 35896 ;;		_flash_partial_write
 35897 ;; This function is called by:
 35898 ;;		_fat_create_file
 35899 ;;		_fat_delete_file
 35900 ;;		_fat_append_to_file
 35901 ;; This function uses a non-reentrant model
 35902 ;;
 35903                           
 35904                           	psect	text183
 35905  007556                     __ptext183:
 35906                           	opt stack 0
 35907  007556                     __write_fat:
 35908                           	opt stack 21
 35909                           
 35910                           ;fat16.c: 160: uint16_t fat_sector;;fat16.c: 161: uint16_t offset;;fat16.c: 162: fat_sec
      +                          tor = cluster>>8;
 35911                           
 35912                           ;incstack = 0
 35913  007556  502A               	movf	__write_fat@cluster+1,w,c
 35914  007558  6E2D               	movwf	__write_fat@fat_sector,c
 35915  00755A  6A2E               	clrf	__write_fat@fat_sector+1,c
 35916                           
 35917                           ;fat16.c: 163: fat_sector += 2;
 35918  00755C  0E02               	movlw	2
 35919  00755E  262D               	addwf	__write_fat@fat_sector,f,c
 35920  007560  0E00               	movlw	0
 35921  007562  222E               	addwfc	__write_fat@fat_sector+1,f,c
 35922                           
 35923                           ;fat16.c: 164: offset = cluster & 0xFF;
 35924  007564  5029               	movf	__write_fat@cluster,w,c
 35925  007566  6E2F               	movwf	__write_fat@offset,c
 35926  007568  6A30               	clrf	__write_fat@offset+1,c
 35927                           
 35928                           ;fat16.c: 165: offset <<= 1;
 35929  00756A  90D8               	bcf	status,0,c
 35930  00756C  362F               	rlcf	__write_fat@offset,f,c
 35931  00756E  3630               	rlcf	__write_fat@offset+1,f,c
 35932                           
 35933                           ;fat16.c: 166: flash_partial_write(fat_sector, offset, 2, &value);
 35934  007570  C02D  F020         	movff	__write_fat@fat_sector,flash_partial_write@page
 35935  007574  C02E  F021         	movff	__write_fat@fat_sector+1,flash_partial_write@page+1
 35936  007578  C02F  F022         	movff	__write_fat@offset,flash_partial_write@start
 35937  00757C  C030  F023         	movff	__write_fat@offset+1,flash_partial_write@start+1
 35938  007580  0E00               	movlw	0
 35939  007582  6E25               	movwf	flash_partial_write@length+1,c
 35940  007584  0E02               	movlw	2
 35941  007586  6E24               	movwf	flash_partial_write@length,c
 35942  007588  0E2B               	movlw	low __write_fat@value
 35943  00758A  6E26               	movwf	flash_partial_write@data,c
 35944  00758C  0E00               	movlw	high __write_fat@value
 35945  00758E  6E27               	movwf	flash_partial_write@data+1,c
 35946  007590  ECBE  F033         	call	_flash_partial_write	;wreg free
 35947  007594  0012               	return		;funcret
 35948  007596                     __end_of__write_fat:
 35949                           	opt stack 0
 35950                           tosu	equ	0xFFF
 35951                           tosh	equ	0xFFE
 35952                           tosl	equ	0xFFD
 35953                           pclath	equ	0xFFA
 35954                           tblptru	equ	0xFF8
 35955                           tblptrh	equ	0xFF7
 35956                           tblptrl	equ	0xFF6
 35957                           tablat	equ	0xFF5
 35958                           prodh	equ	0xFF4
 35959                           prodl	equ	0xFF3
 35960                           intcon	equ	0xFF2
 35961                           intcon2	equ	0xFF1
 35962                           intcon3	equ	0xFF0
 35963                           indf0	equ	0xFEF
 35964                           postinc0	equ	0xFEE
 35965                           fsr0h	equ	0xFEA
 35966                           fsr0l	equ	0xFE9
 35967                           wreg	equ	0xFE8
 35968                           indf1	equ	0xFE7
 35969                           postdec1	equ	0xFE5
 35970                           plusw1	equ	0xFE3
 35971                           fsr1h	equ	0xFE2
 35972                           fsr1l	equ	0xFE1
 35973                           indf2	equ	0xFDF
 35974                           postinc2	equ	0xFDE
 35975                           postdec2	equ	0xFDD
 35976                           plusw2	equ	0xFDB
 35977                           fsr2h	equ	0xFDA
 35978                           fsr2l	equ	0xFD9
 35979                           status	equ	0xFD8
 35980                           
 35981 ;; *************** function _flash_partial_write *****************
 35982 ;; Defined at:
 35983 ;;		line 471 in file "flash.c"
 35984 ;; Parameters:    Size  Location     Type
 35985 ;;  page            2   31[COMRAM] unsigned int 
 35986 ;;  start           2   33[COMRAM] unsigned int 
 35987 ;;  length          2   35[COMRAM] unsigned int 
 35988 ;;  data            2   37[COMRAM] PTR unsigned char 
 35989 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), _write_file_size@new_file
      +_size(4), 
 35990 ;;		 -> _delete_root@deleted_value(1), _write_fat@value(2), RAM(3759), 
 35991 ;; Auto vars:     Size  Location     Type
 35992 ;;  match           1   39[COMRAM] enum E6878
 35993 ;; Return value:  Size  Location     Type
 35994 ;;                  1    wreg      void 
 35995 ;; Registers used:
 35996 ;;		wreg, status,2, status,0, cstack
 35997 ;; Tracked objects:
 35998 ;;		On entry : 0/0
 35999 ;;		On exit  : 0/0
 36000 ;;		Unchanged: 0/0
 36001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36002 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36003 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36005 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36006 ;;Total ram usage:        9 bytes
 36007 ;; Hardware stack levels used:    1
 36008 ;; Hardware stack levels required when called:    4
 36009 ;; This function calls:
 36010 ;;		__flash_compare_page_to_buffer
 36011 ;;		__flash_copy_page_to_buffer
 36012 ;;		__flash_write_page_from_buffer
 36013 ;;		__flash_write_to_buffer
 36014 ;;		_flash_is_busy
 36015 ;;		_spi_set_configuration
 36016 ;; This function is called by:
 36017 ;;		__write_fat
 36018 ;;		__write_root
 36019 ;;		__delete_root
 36020 ;;		_fat_append_to_file
 36021 ;;		__write_file_size
 36022 ;; This function uses a non-reentrant model
 36023 ;;
 36024                           
 36025                           	psect	text184
 36026  00677C                     __ptext184:
 36027                           	opt stack 0
 36028  00677C                     _flash_partial_write:
 36029                           	opt stack 21
 36030                           
 36031                           ;flash.c: 473: flashMatchResult_t match;;flash.c: 476: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 36032                           
 36033                           ;incstack = 0
 36034  00677C  0E00               	movlw	0
 36035  00677E  ECB0  F021         	call	_spi_set_configuration
 36036  006782  EC6B  F03E         	call	_flash_is_busy	;wreg free
 36037  006786  0900               	iorlw	0
 36038  006788  A4D8               	btfss	status,2,c
 36039  00678A  D7FB               	goto	l1785
 36040                           
 36041                           ;flash.c: 482: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 36042  00678C  C020  F014         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 36043  006790  C021  F015         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 36044  006794  0E00               	movlw	0
 36045  006796  6E16               	movwf	__flash_copy_page_to_buffer@buffer,c
 36046  006798  EC9F  F037         	call	__flash_copy_page_to_buffer	;wreg free
 36047                           
 36048                           ;flash.c: 485: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 36049  00679C  C022  F014         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 36050  0067A0  C023  F015         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 36051  0067A4  C026  F016         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 36052  0067A8  C027  F017         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 36053  0067AC  C024  F018         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 36054  0067B0  C025  F019         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 36055  0067B4  0E00               	movlw	0
 36056  0067B6  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 36057  0067B8  EC72  F039         	call	__flash_write_to_buffer	;wreg free
 36058                           
 36059                           ;flash.c: 488: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 36060  0067BC  C020  F014         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 36061  0067C0  C021  F015         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 36062  0067C4  0E00               	movlw	0
 36063  0067C6  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 36064  0067C8  EC26  F032         	call	__flash_compare_page_to_buffer	;wreg free
 36065  0067CC  6E28               	movwf	flash_partial_write@match,c
 36066                           
 36067                           ;flash.c: 491: if(match==DATA_DOES_NOT_MATCH)
 36068  0067CE  0428               	decf	flash_partial_write@match,w,c
 36069  0067D0  A4D8               	btfss	status,2,c
 36070  0067D2  D008               	goto	l1787
 36071                           
 36072                           ;flash.c: 492: {;flash.c: 493: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 36073  0067D4  C020  F014         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 36074  0067D8  C021  F015         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 36075  0067DC  0E00               	movlw	0
 36076  0067DE  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 36077  0067E0  EC73  F037         	call	__flash_write_page_from_buffer	;wreg free
 36078  0067E4                     l1787:
 36079                           
 36080                           ;flash.c: 494: };flash.c: 497: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 36081  0067E4  0E01               	movlw	1
 36082  0067E6  ECB0  F021         	call	_spi_set_configuration
 36083  0067EA  0012               	return		;funcret
 36084  0067EC                     __end_of_flash_partial_write:
 36085                           	opt stack 0
 36086                           tosu	equ	0xFFF
 36087                           tosh	equ	0xFFE
 36088                           tosl	equ	0xFFD
 36089                           pclath	equ	0xFFA
 36090                           tblptru	equ	0xFF8
 36091                           tblptrh	equ	0xFF7
 36092                           tblptrl	equ	0xFF6
 36093                           tablat	equ	0xFF5
 36094                           prodh	equ	0xFF4
 36095                           prodl	equ	0xFF3
 36096                           intcon	equ	0xFF2
 36097                           intcon2	equ	0xFF1
 36098                           intcon3	equ	0xFF0
 36099                           indf0	equ	0xFEF
 36100                           postinc0	equ	0xFEE
 36101                           fsr0h	equ	0xFEA
 36102                           fsr0l	equ	0xFE9
 36103                           wreg	equ	0xFE8
 36104                           indf1	equ	0xFE7
 36105                           postdec1	equ	0xFE5
 36106                           plusw1	equ	0xFE3
 36107                           fsr1h	equ	0xFE2
 36108                           fsr1l	equ	0xFE1
 36109                           indf2	equ	0xFDF
 36110                           postinc2	equ	0xFDE
 36111                           postdec2	equ	0xFDD
 36112                           plusw2	equ	0xFDB
 36113                           fsr2h	equ	0xFDA
 36114                           fsr2l	equ	0xFD9
 36115                           status	equ	0xFD8
 36116                           
 36117 ;; *************** function _flash_is_busy *****************
 36118 ;; Defined at:
 36119 ;;		line 354 in file "flash.c"
 36120 ;; Parameters:    Size  Location     Type
 36121 ;;		None
 36122 ;; Auto vars:     Size  Location     Type
 36123 ;;  result          1   19[COMRAM] unsigned char 
 36124 ;; Return value:  Size  Location     Type
 36125 ;;                  1    wreg      unsigned char 
 36126 ;; Registers used:
 36127 ;;		wreg, status,2, status,0, cstack
 36128 ;; Tracked objects:
 36129 ;;		On entry : 0/0
 36130 ;;		On exit  : 0/0
 36131 ;;		Unchanged: 0/0
 36132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36134 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36136 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36137 ;;Total ram usage:        1 bytes
 36138 ;; Hardware stack levels used:    1
 36139 ;; Hardware stack levels required when called:    3
 36140 ;; This function calls:
 36141 ;;		__flash_is_busy
 36142 ;;		_spi_set_configuration
 36143 ;; This function is called by:
 36144 ;;		_flash_partial_write
 36145 ;;		_api_prepare
 36146 ;;		__fill_buffer_get_status
 36147 ;; This function uses a non-reentrant model
 36148 ;;
 36149                           
 36150                           	psect	text185
 36151  007CD6                     __ptext185:
 36152                           	opt stack 0
 36153  007CD6                     _flash_is_busy:
 36154                           	opt stack 26
 36155                           
 36156                           ;flash.c: 356: uint8_t result;;flash.c: 359: spi_set_configuration(SPI_CONFIGURATION_INT
      +                          ERNAL);
 36157                           
 36158                           ;incstack = 0
 36159  007CD6  0E00               	movlw	0
 36160  007CD8  ECB0  F021         	call	_spi_set_configuration
 36161                           
 36162                           ;flash.c: 362: result = _flash_is_busy();
 36163  007CDC  ECEE  F03D         	call	__flash_is_busy	;wreg free
 36164  007CE0  6E14               	movwf	flash_is_busy@result,c
 36165                           
 36166                           ;flash.c: 365: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 36167  007CE2  0E01               	movlw	1
 36168  007CE4  ECB0  F021         	call	_spi_set_configuration
 36169                           
 36170                           ;flash.c: 368: return result;
 36171  007CE8  5014               	movf	flash_is_busy@result,w,c
 36172  007CEA  0012               	return	
 36173  007CEC                     __end_of_flash_is_busy:
 36174                           	opt stack 0
 36175                           tosu	equ	0xFFF
 36176                           tosh	equ	0xFFE
 36177                           tosl	equ	0xFFD
 36178                           pclath	equ	0xFFA
 36179                           tblptru	equ	0xFF8
 36180                           tblptrh	equ	0xFF7
 36181                           tblptrl	equ	0xFF6
 36182                           tablat	equ	0xFF5
 36183                           prodh	equ	0xFF4
 36184                           prodl	equ	0xFF3
 36185                           intcon	equ	0xFF2
 36186                           intcon2	equ	0xFF1
 36187                           intcon3	equ	0xFF0
 36188                           indf0	equ	0xFEF
 36189                           postinc0	equ	0xFEE
 36190                           fsr0h	equ	0xFEA
 36191                           fsr0l	equ	0xFE9
 36192                           wreg	equ	0xFE8
 36193                           indf1	equ	0xFE7
 36194                           postdec1	equ	0xFE5
 36195                           plusw1	equ	0xFE3
 36196                           fsr1h	equ	0xFE2
 36197                           fsr1l	equ	0xFE1
 36198                           indf2	equ	0xFDF
 36199                           postinc2	equ	0xFDE
 36200                           postdec2	equ	0xFDD
 36201                           plusw2	equ	0xFDB
 36202                           fsr2h	equ	0xFDA
 36203                           fsr2l	equ	0xFD9
 36204                           status	equ	0xFD8
 36205                           
 36206 ;; *************** function __flash_write_to_buffer *****************
 36207 ;; Defined at:
 36208 ;;		line 232 in file "flash.c"
 36209 ;; Parameters:    Size  Location     Type
 36210 ;;  start           2   19[COMRAM] unsigned int 
 36211 ;;  data            2   21[COMRAM] PTR unsigned char 
 36212 ;;		 -> buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 36213 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), msd_buffer(512), 
 36214 ;;		 -> RAM(3759), 
 36215 ;;  data_length     2   23[COMRAM] unsigned int 
 36216 ;;  buffer          1   25[COMRAM] enum E6874
 36217 ;; Auto vars:     Size  Location     Type
 36218 ;;  command         4   26[COMRAM] unsigned char [4]
 36219 ;; Return value:  Size  Location     Type
 36220 ;;                  1    wreg      void 
 36221 ;; Registers used:
 36222 ;;		wreg, status,2, status,0, cstack
 36223 ;; Tracked objects:
 36224 ;;		On entry : 0/0
 36225 ;;		On exit  : 0/0
 36226 ;;		Unchanged: 0/0
 36227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36228 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36229 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36231 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36232 ;;Total ram usage:       11 bytes
 36233 ;; Hardware stack levels used:    1
 36234 ;; Hardware stack levels required when called:    3
 36235 ;; This function calls:
 36236 ;;		__flash_is_busy
 36237 ;;		_spi_tx_tx
 36238 ;; This function is called by:
 36239 ;;		_flash_page_write
 36240 ;;		_flash_partial_write
 36241 ;; This function uses a non-reentrant model
 36242 ;;
 36243                           
 36244                           	psect	text186
 36245  0072E4                     __ptext186:
 36246                           	opt stack 0
 36247  0072E4                     __flash_write_to_buffer:
 36248                           	opt stack 23
 36249                           
 36250                           ;flash.c: 234: uint8_t command[4];;flash.c: 237: while(_flash_is_busy());
 36251                           
 36252                           ;incstack = 0
 36253  0072E4  ECEE  F03D         	call	__flash_is_busy	;wreg free
 36254  0072E8  0900               	iorlw	0
 36255  0072EA  A4D8               	btfss	status,2,c
 36256  0072EC  D7FB               	goto	__flash_write_to_buffer
 36257                           
 36258                           ;flash.c: 240: if(buffer==FLASH_BUFFER_1)
 36259  0072EE  501A               	movf	__flash_write_to_buffer@buffer,w,c
 36260  0072F0  A4D8               	btfss	status,2,c
 36261  0072F2  D002               	goto	l1726
 36262                           
 36263                           ;flash.c: 241: command[0] = 0x84;
 36264  0072F4  0E84               	movlw	132
 36265  0072F6  6E1B               	movwf	__flash_write_to_buffer@command,c
 36266  0072F8                     l1726:
 36267                           
 36268                           ;flash.c: 242: if(buffer==FLASH_BUFFER_2)
 36269  0072F8  041A               	decf	__flash_write_to_buffer@buffer,w,c
 36270  0072FA  A4D8               	btfss	status,2,c
 36271  0072FC  D002               	goto	l1727
 36272                           
 36273                           ;flash.c: 243: command[0] = 0x87;
 36274  0072FE  0E87               	movlw	135
 36275  007300  6E1B               	movwf	__flash_write_to_buffer@command,c
 36276  007302                     l1727:
 36277                           
 36278                           ;flash.c: 245: command[1] = 0x00;
 36279  007302  0E00               	movlw	0
 36280  007304  6E1C               	movwf	__flash_write_to_buffer@command+1,c
 36281                           
 36282                           ;flash.c: 246: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 36283  007306  5015               	movf	__flash_write_to_buffer@start+1,w,c
 36284  007308  6E1D               	movwf	__flash_write_to_buffer@command+2,c
 36285                           
 36286                           ;flash.c: 247: command[3] = ((unsigned char)((start)&0xFF));
 36287  00730A  C014  F01E         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 36288                           
 36289                           ;flash.c: 250: spi_tx_tx(command, 4, data, data_length);
 36290  00730E  0E1B               	movlw	low __flash_write_to_buffer@command
 36291  007310  6E01               	movwf	spi_tx_tx@command,c
 36292  007312  0E00               	movlw	high __flash_write_to_buffer@command
 36293  007314  6E02               	movwf	spi_tx_tx@command+1,c
 36294  007316  0E00               	movlw	0
 36295  007318  6E04               	movwf	spi_tx_tx@command_length+1,c
 36296  00731A  0E04               	movlw	4
 36297  00731C  6E03               	movwf	spi_tx_tx@command_length,c
 36298  00731E  C016  F005         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 36299  007322  C017  F006         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 36300  007326  C018  F007         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 36301  00732A  C019  F008         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 36302  00732E  EC5B  F030         	call	_spi_tx_tx	;wreg free
 36303  007332  0012               	return		;funcret
 36304  007334                     __end_of__flash_write_to_buffer:
 36305                           	opt stack 0
 36306                           tosu	equ	0xFFF
 36307                           tosh	equ	0xFFE
 36308                           tosl	equ	0xFFD
 36309                           pclath	equ	0xFFA
 36310                           tblptru	equ	0xFF8
 36311                           tblptrh	equ	0xFF7
 36312                           tblptrl	equ	0xFF6
 36313                           tablat	equ	0xFF5
 36314                           prodh	equ	0xFF4
 36315                           prodl	equ	0xFF3
 36316                           intcon	equ	0xFF2
 36317                           intcon2	equ	0xFF1
 36318                           intcon3	equ	0xFF0
 36319                           indf0	equ	0xFEF
 36320                           postinc0	equ	0xFEE
 36321                           fsr0h	equ	0xFEA
 36322                           fsr0l	equ	0xFE9
 36323                           wreg	equ	0xFE8
 36324                           indf1	equ	0xFE7
 36325                           postdec1	equ	0xFE5
 36326                           plusw1	equ	0xFE3
 36327                           fsr1h	equ	0xFE2
 36328                           fsr1l	equ	0xFE1
 36329                           indf2	equ	0xFDF
 36330                           postinc2	equ	0xFDE
 36331                           postdec2	equ	0xFDD
 36332                           plusw2	equ	0xFDB
 36333                           fsr2h	equ	0xFDA
 36334                           fsr2l	equ	0xFD9
 36335                           status	equ	0xFD8
 36336                           
 36337 ;; *************** function _spi_tx_tx *****************
 36338 ;; Defined at:
 36339 ;;		line 378 in file "spi.c"
 36340 ;; Parameters:    Size  Location     Type
 36341 ;;  command         2    0[COMRAM] PTR unsigned char 
 36342 ;;		 -> _flash_write_to_buffer@command(4), 
 36343 ;;  command_leng    2    2[COMRAM] unsigned int 
 36344 ;;  data            2    4[COMRAM] PTR unsigned char 
 36345 ;;		 -> buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 36346 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), msd_buffer(512), 
 36347 ;;		 -> RAM(3759), 
 36348 ;;  data_length     2    6[COMRAM] unsigned int 
 36349 ;; Auto vars:     Size  Location     Type
 36350 ;;		None
 36351 ;; Return value:  Size  Location     Type
 36352 ;;                  1    wreg      void 
 36353 ;; Registers used:
 36354 ;;		wreg, status,2, status,0
 36355 ;; Tracked objects:
 36356 ;;		On entry : 0/0
 36357 ;;		On exit  : 0/0
 36358 ;;		Unchanged: 0/0
 36359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36360 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36362 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36363 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36364 ;;Total ram usage:       12 bytes
 36365 ;; Hardware stack levels used:    1
 36366 ;; This function calls:
 36367 ;;		Nothing
 36368 ;; This function is called by:
 36369 ;;		__flash_write_to_buffer
 36370 ;; This function uses a non-reentrant model
 36371 ;;
 36372                           
 36373                           	psect	text187
 36374  0060B6                     __ptext187:
 36375                           	opt stack 0
 36376  0060B6                     _spi_tx_tx:
 36377                           	opt stack 25
 36378                           
 36379                           ;spi.c: 381: DMACON1bits.SSCON1 = 0;
 36380                           
 36381                           ;incstack = 0
 36382  0060B6  9E88               	bcf	3976,7,c	;volatile
 36383                           
 36384                           ;spi.c: 382: DMACON1bits.SSCON0 = 0;
 36385  0060B8  9C88               	bcf	3976,6,c	;volatile
 36386                           
 36387                           ;spi.c: 384: DMACON1bits.TXINC = 1;
 36388  0060BA  8A88               	bsf	3976,5,c	;volatile
 36389                           
 36390                           ;spi.c: 386: DMACON1bits.RXINC = 0;
 36391  0060BC  9888               	bcf	3976,4,c	;volatile
 36392                           
 36393                           ;spi.c: 388: DMACON1bits.DUPLEX1 = 0;
 36394  0060BE  9688               	bcf	3976,3,c	;volatile
 36395                           
 36396                           ;spi.c: 389: DMACON1bits.DUPLEX0 = 1;
 36397  0060C0  8488               	bsf	3976,2,c	;volatile
 36398                           
 36399                           ;spi.c: 391: DMACON1bits.DLYINTEN = 0;
 36400  0060C2  9288               	bcf	3976,1,c	;volatile
 36401                           
 36402                           ;spi.c: 393: DMACON2bits.DLYCYC = 0b0000;
 36403  0060C4  9886               	bcf	3974,4,c	;volatile
 36404  0060C6  9A86               	bcf	3974,5,c	;volatile
 36405  0060C8  9C86               	bcf	3974,6,c	;volatile
 36406  0060CA  9E86               	bcf	3974,7,c	;volatile
 36407                           
 36408                           ;spi.c: 395: DMACON2bits.INTLVL = 0b0000;
 36409  0060CC  9086               	bcf	3974,0,c	;volatile
 36410  0060CE  9286               	bcf	3974,1,c	;volatile
 36411  0060D0  9486               	bcf	3974,2,c	;volatile
 36412  0060D2  9686               	bcf	3974,3,c	;volatile
 36413                           
 36414                           ;spi.c: 398: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 36415  0060D4  5002               	movf	spi_tx_tx@command+1,w,c
 36416  0060D6  6E6A               	movwf	3946,c	;volatile
 36417                           
 36418                           ;spi.c: 399: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 36419  0060D8  C001  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 36420                           
 36421                           ;spi.c: 402: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 36422  0060DC  0EFF               	movlw	255
 36423  0060DE  6E09               	movwf	??_spi_tx_tx& (0+255),c
 36424  0060E0  0EFF               	movlw	255
 36425  0060E2  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 36426  0060E4  C003  F00B         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 36427  0060E8  C004  F00C         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 36428  0060EC  5009               	movf	??_spi_tx_tx,w,c
 36429  0060EE  260B               	addwf	??_spi_tx_tx+2,f,c
 36430  0060F0  500A               	movf	??_spi_tx_tx+1,w,c
 36431  0060F2  220C               	addwfc	??_spi_tx_tx+3,f,c
 36432  0060F4  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 36433  0060F8  6A0C               	clrf	??_spi_tx_tx+3,c
 36434  0060FA  500B               	movf	??_spi_tx_tx+2,w,c
 36435  0060FC  6E66               	movwf	3942,c	;volatile
 36436                           
 36437                           ;spi.c: 403: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 36438  0060FE  0403               	decf	spi_tx_tx@command_length,w,c
 36439  006100  6E67               	movwf	3943,c	;volatile
 36440                           
 36441                           ;spi.c: 406: LATDbits.LD7 = 0;
 36442  006102  9E8C               	bcf	3980,7,c	;volatile
 36443                           
 36444                           ;spi.c: 409: DMACON1bits.DMAEN = 1;
 36445  006104  8088               	bsf	3976,0,c	;volatile
 36446  006106  B088               	btfsc	3976,0,c	;volatile
 36447  006108  D7FE               	goto	l2761
 36448                           
 36449                           ;spi.c: 413: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 36450  00610A  5006               	movf	spi_tx_tx@data+1,w,c
 36451  00610C  6E6A               	movwf	3946,c	;volatile
 36452                           
 36453                           ;spi.c: 414: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 36454  00610E  C005  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 36455                           
 36456                           ;spi.c: 417: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 36457  006112  0EFF               	movlw	255
 36458  006114  6E09               	movwf	??_spi_tx_tx& (0+255),c
 36459  006116  0EFF               	movlw	255
 36460  006118  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 36461  00611A  C007  F00B         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 36462  00611E  C008  F00C         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 36463  006122  5009               	movf	??_spi_tx_tx,w,c
 36464  006124  260B               	addwf	??_spi_tx_tx+2,f,c
 36465  006126  500A               	movf	??_spi_tx_tx+1,w,c
 36466  006128  220C               	addwfc	??_spi_tx_tx+3,f,c
 36467  00612A  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 36468  00612E  6A0C               	clrf	??_spi_tx_tx+3,c
 36469  006130  500B               	movf	??_spi_tx_tx+2,w,c
 36470  006132  6E66               	movwf	3942,c	;volatile
 36471                           
 36472                           ;spi.c: 418: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 36473  006134  0407               	decf	spi_tx_tx@data_length,w,c
 36474  006136  6E67               	movwf	3943,c	;volatile
 36475                           
 36476                           ;spi.c: 421: DMACON1bits.DMAEN = 1;
 36477  006138  8088               	bsf	3976,0,c	;volatile
 36478  00613A  B088               	btfsc	3976,0,c	;volatile
 36479  00613C  D7FE               	goto	l2764
 36480                           
 36481                           ;spi.c: 425: LATDbits.LD7 = 1;
 36482  00613E  8E8C               	bsf	3980,7,c	;volatile
 36483  006140  0012               	return		;funcret
 36484  006142                     __end_of_spi_tx_tx:
 36485                           	opt stack 0
 36486                           tosu	equ	0xFFF
 36487                           tosh	equ	0xFFE
 36488                           tosl	equ	0xFFD
 36489                           pclath	equ	0xFFA
 36490                           tblptru	equ	0xFF8
 36491                           tblptrh	equ	0xFF7
 36492                           tblptrl	equ	0xFF6
 36493                           tablat	equ	0xFF5
 36494                           prodh	equ	0xFF4
 36495                           prodl	equ	0xFF3
 36496                           intcon	equ	0xFF2
 36497                           intcon2	equ	0xFF1
 36498                           intcon3	equ	0xFF0
 36499                           indf0	equ	0xFEF
 36500                           postinc0	equ	0xFEE
 36501                           fsr0h	equ	0xFEA
 36502                           fsr0l	equ	0xFE9
 36503                           wreg	equ	0xFE8
 36504                           indf1	equ	0xFE7
 36505                           postdec1	equ	0xFE5
 36506                           plusw1	equ	0xFE3
 36507                           fsr1h	equ	0xFE2
 36508                           fsr1l	equ	0xFE1
 36509                           indf2	equ	0xFDF
 36510                           postinc2	equ	0xFDE
 36511                           postdec2	equ	0xFDD
 36512                           plusw2	equ	0xFDB
 36513                           fsr2h	equ	0xFDA
 36514                           fsr2l	equ	0xFD9
 36515                           status	equ	0xFD8
 36516                           
 36517 ;; *************** function __flash_write_page_from_buffer *****************
 36518 ;; Defined at:
 36519 ;;		line 254 in file "flash.c"
 36520 ;; Parameters:    Size  Location     Type
 36521 ;;  page            2   19[COMRAM] unsigned int 
 36522 ;;  buffer          1   21[COMRAM] enum E6874
 36523 ;; Auto vars:     Size  Location     Type
 36524 ;;  command         4   25[COMRAM] unsigned char [4]
 36525 ;; Return value:  Size  Location     Type
 36526 ;;                  1    wreg      void 
 36527 ;; Registers used:
 36528 ;;		wreg, status,2, status,0, cstack
 36529 ;; Tracked objects:
 36530 ;;		On entry : 0/0
 36531 ;;		On exit  : 0/0
 36532 ;;		Unchanged: 0/0
 36533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36534 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36535 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36536 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36537 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36538 ;;Total ram usage:       10 bytes
 36539 ;; Hardware stack levels used:    1
 36540 ;; Hardware stack levels required when called:    3
 36541 ;; This function calls:
 36542 ;;		__flash_is_busy
 36543 ;;		_spi_tx
 36544 ;; This function is called by:
 36545 ;;		_flash_page_write
 36546 ;;		_flash_partial_write
 36547 ;; This function uses a non-reentrant model
 36548 ;;
 36549                           
 36550                           	psect	text188
 36551  006EE6                     __ptext188:
 36552                           	opt stack 0
 36553  006EE6                     __flash_write_page_from_buffer:
 36554                           	opt stack 23
 36555                           
 36556                           ;flash.c: 256: uint8_t command[4];;flash.c: 259: while(_flash_is_busy());
 36557                           
 36558                           ;incstack = 0
 36559  006EE6  ECEE  F03D         	call	__flash_is_busy	;wreg free
 36560  006EEA  0900               	iorlw	0
 36561  006EEC  A4D8               	btfss	status,2,c
 36562  006EEE  D7FB               	goto	__flash_write_page_from_buffer
 36563                           
 36564                           ;flash.c: 262: if(buffer==FLASH_BUFFER_1)
 36565  006EF0  5016               	movf	__flash_write_page_from_buffer@buffer,w,c
 36566  006EF2  A4D8               	btfss	status,2,c
 36567  006EF4  D002               	goto	l1734
 36568                           
 36569                           ;flash.c: 263: command[0] = 0x83;
 36570  006EF6  0E83               	movlw	131
 36571  006EF8  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 36572  006EFA                     l1734:
 36573                           
 36574                           ;flash.c: 264: if(buffer==FLASH_BUFFER_2)
 36575  006EFA  0416               	decf	__flash_write_page_from_buffer@buffer,w,c
 36576  006EFC  A4D8               	btfss	status,2,c
 36577  006EFE  D002               	goto	l1735
 36578                           
 36579                           ;flash.c: 265: command[0] = 0x86;
 36580  006F00  0E86               	movlw	134
 36581  006F02  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 36582  006F04                     l1735:
 36583                           
 36584                           ;flash.c: 267: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 36585  006F04  C014  F017         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 36586  006F08  C015  F018         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 36587  006F0C  0E07               	movlw	7
 36588  006F0E  6E19               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),c
 36589  006F10                     u6215:
 36590  006F10  90D8               	bcf	status,0,c
 36591  006F12  3218               	rrcf	??__flash_write_page_from_buffer+1,f,c
 36592  006F14  3217               	rrcf	??__flash_write_page_from_buffer,f,c
 36593  006F16  2E19               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,c
 36594  006F18  D7FB               	goto	u6215
 36595  006F1A  5017               	movf	??__flash_write_page_from_buffer,w,c
 36596  006F1C  6E1B               	movwf	__flash_write_page_from_buffer@command+1,c
 36597                           
 36598                           ;flash.c: 268: command[2] = ((unsigned char)((page<<1)&0xFF));
 36599  006F1E  5014               	movf	__flash_write_page_from_buffer@page,w,c
 36600  006F20  2414               	addwf	__flash_write_page_from_buffer@page,w,c
 36601  006F22  6E1C               	movwf	__flash_write_page_from_buffer@command+2,c
 36602                           
 36603                           ;flash.c: 269: command[3] = 0x00;
 36604  006F24  0E00               	movlw	0
 36605  006F26  6E1D               	movwf	__flash_write_page_from_buffer@command+3,c
 36606                           
 36607                           ;flash.c: 272: spi_tx(command, 4);
 36608  006F28  0E1A               	movlw	low __flash_write_page_from_buffer@command
 36609  006F2A  6E01               	movwf	spi_tx@data,c
 36610  006F2C  0E00               	movlw	high __flash_write_page_from_buffer@command
 36611  006F2E  6E02               	movwf	spi_tx@data+1,c
 36612  006F30  0E00               	movlw	0
 36613  006F32  6E04               	movwf	spi_tx@length+1,c
 36614  006F34  0E04               	movlw	4
 36615  006F36  6E03               	movwf	spi_tx@length,c
 36616  006F38  ECCB  F037         	call	_spi_tx	;wreg free
 36617  006F3C  0012               	return		;funcret
 36618  006F3E                     __end_of__flash_write_page_from_buffer:
 36619                           	opt stack 0
 36620                           tosu	equ	0xFFF
 36621                           tosh	equ	0xFFE
 36622                           tosl	equ	0xFFD
 36623                           pclath	equ	0xFFA
 36624                           tblptru	equ	0xFF8
 36625                           tblptrh	equ	0xFF7
 36626                           tblptrl	equ	0xFF6
 36627                           tablat	equ	0xFF5
 36628                           prodh	equ	0xFF4
 36629                           prodl	equ	0xFF3
 36630                           intcon	equ	0xFF2
 36631                           intcon2	equ	0xFF1
 36632                           intcon3	equ	0xFF0
 36633                           indf0	equ	0xFEF
 36634                           postinc0	equ	0xFEE
 36635                           fsr0h	equ	0xFEA
 36636                           fsr0l	equ	0xFE9
 36637                           wreg	equ	0xFE8
 36638                           indf1	equ	0xFE7
 36639                           postdec1	equ	0xFE5
 36640                           plusw1	equ	0xFE3
 36641                           fsr1h	equ	0xFE2
 36642                           fsr1l	equ	0xFE1
 36643                           indf2	equ	0xFDF
 36644                           postinc2	equ	0xFDE
 36645                           postdec2	equ	0xFDD
 36646                           plusw2	equ	0xFDB
 36647                           fsr2h	equ	0xFDA
 36648                           fsr2l	equ	0xFD9
 36649                           status	equ	0xFD8
 36650                           
 36651 ;; *************** function __flash_copy_page_to_buffer *****************
 36652 ;; Defined at:
 36653 ;;		line 150 in file "flash.c"
 36654 ;; Parameters:    Size  Location     Type
 36655 ;;  page            2   19[COMRAM] unsigned int 
 36656 ;;  buffer          1   21[COMRAM] enum E6874
 36657 ;; Auto vars:     Size  Location     Type
 36658 ;;  command         4   25[COMRAM] unsigned char [4]
 36659 ;; Return value:  Size  Location     Type
 36660 ;;                  1    wreg      void 
 36661 ;; Registers used:
 36662 ;;		wreg, status,2, status,0, cstack
 36663 ;; Tracked objects:
 36664 ;;		On entry : 0/0
 36665 ;;		On exit  : 0/0
 36666 ;;		Unchanged: 0/0
 36667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36668 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36669 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36670 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36671 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36672 ;;Total ram usage:       10 bytes
 36673 ;; Hardware stack levels used:    1
 36674 ;; Hardware stack levels required when called:    3
 36675 ;; This function calls:
 36676 ;;		__flash_is_busy
 36677 ;;		_spi_tx
 36678 ;; This function is called by:
 36679 ;;		_flash_partial_write
 36680 ;; This function uses a non-reentrant model
 36681 ;;
 36682                           
 36683                           	psect	text189
 36684  006F3E                     __ptext189:
 36685                           	opt stack 0
 36686  006F3E                     __flash_copy_page_to_buffer:
 36687                           	opt stack 21
 36688                           
 36689                           ;flash.c: 152: uint8_t command[4];;flash.c: 155: while(_flash_is_busy());
 36690                           
 36691                           ;incstack = 0
 36692  006F3E  ECEE  F03D         	call	__flash_is_busy	;wreg free
 36693  006F42  0900               	iorlw	0
 36694  006F44  A4D8               	btfss	status,2,c
 36695  006F46  D7FB               	goto	__flash_copy_page_to_buffer
 36696                           
 36697                           ;flash.c: 158: if(buffer==FLASH_BUFFER_1)
 36698  006F48  5016               	movf	__flash_copy_page_to_buffer@buffer,w,c
 36699  006F4A  A4D8               	btfss	status,2,c
 36700  006F4C  D002               	goto	l1699
 36701                           
 36702                           ;flash.c: 159: command[0] = 0x53;
 36703  006F4E  0E53               	movlw	83
 36704  006F50  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 36705  006F52                     l1699:
 36706                           
 36707                           ;flash.c: 160: if(buffer==FLASH_BUFFER_2)
 36708  006F52  0416               	decf	__flash_copy_page_to_buffer@buffer,w,c
 36709  006F54  A4D8               	btfss	status,2,c
 36710  006F56  D002               	goto	l1700
 36711                           
 36712                           ;flash.c: 161: command[0] = 0x55;
 36713  006F58  0E55               	movlw	85
 36714  006F5A  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 36715  006F5C                     l1700:
 36716                           
 36717                           ;flash.c: 163: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 36718  006F5C  C014  F017         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 36719  006F60  C015  F018         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 36720  006F64  0E07               	movlw	7
 36721  006F66  6E19               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),c
 36722  006F68                     u6425:
 36723  006F68  90D8               	bcf	status,0,c
 36724  006F6A  3218               	rrcf	??__flash_copy_page_to_buffer+1,f,c
 36725  006F6C  3217               	rrcf	??__flash_copy_page_to_buffer,f,c
 36726  006F6E  2E19               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,c
 36727  006F70  D7FB               	goto	u6425
 36728  006F72  5017               	movf	??__flash_copy_page_to_buffer,w,c
 36729  006F74  6E1B               	movwf	__flash_copy_page_to_buffer@command+1,c
 36730                           
 36731                           ;flash.c: 164: command[2] = ((unsigned char)((page<<1)&0xFF));
 36732  006F76  5014               	movf	__flash_copy_page_to_buffer@page,w,c
 36733  006F78  2414               	addwf	__flash_copy_page_to_buffer@page,w,c
 36734  006F7A  6E1C               	movwf	__flash_copy_page_to_buffer@command+2,c
 36735                           
 36736                           ;flash.c: 165: command[3] = 0x00;
 36737  006F7C  0E00               	movlw	0
 36738  006F7E  6E1D               	movwf	__flash_copy_page_to_buffer@command+3,c
 36739                           
 36740                           ;flash.c: 168: spi_tx(command, 4);
 36741  006F80  0E1A               	movlw	low __flash_copy_page_to_buffer@command
 36742  006F82  6E01               	movwf	spi_tx@data,c
 36743  006F84  0E00               	movlw	high __flash_copy_page_to_buffer@command
 36744  006F86  6E02               	movwf	spi_tx@data+1,c
 36745  006F88  0E00               	movlw	0
 36746  006F8A  6E04               	movwf	spi_tx@length+1,c
 36747  006F8C  0E04               	movlw	4
 36748  006F8E  6E03               	movwf	spi_tx@length,c
 36749  006F90  ECCB  F037         	call	_spi_tx	;wreg free
 36750  006F94  0012               	return		;funcret
 36751  006F96                     __end_of__flash_copy_page_to_buffer:
 36752                           	opt stack 0
 36753                           tosu	equ	0xFFF
 36754                           tosh	equ	0xFFE
 36755                           tosl	equ	0xFFD
 36756                           pclath	equ	0xFFA
 36757                           tblptru	equ	0xFF8
 36758                           tblptrh	equ	0xFF7
 36759                           tblptrl	equ	0xFF6
 36760                           tablat	equ	0xFF5
 36761                           prodh	equ	0xFF4
 36762                           prodl	equ	0xFF3
 36763                           intcon	equ	0xFF2
 36764                           intcon2	equ	0xFF1
 36765                           intcon3	equ	0xFF0
 36766                           indf0	equ	0xFEF
 36767                           postinc0	equ	0xFEE
 36768                           fsr0h	equ	0xFEA
 36769                           fsr0l	equ	0xFE9
 36770                           wreg	equ	0xFE8
 36771                           indf1	equ	0xFE7
 36772                           postdec1	equ	0xFE5
 36773                           plusw1	equ	0xFE3
 36774                           fsr1h	equ	0xFE2
 36775                           fsr1l	equ	0xFE1
 36776                           indf2	equ	0xFDF
 36777                           postinc2	equ	0xFDE
 36778                           postdec2	equ	0xFDD
 36779                           plusw2	equ	0xFDB
 36780                           fsr2h	equ	0xFDA
 36781                           fsr2l	equ	0xFD9
 36782                           status	equ	0xFD8
 36783                           
 36784 ;; *************** function __flash_compare_page_to_buffer *****************
 36785 ;; Defined at:
 36786 ;;		line 172 in file "flash.c"
 36787 ;; Parameters:    Size  Location     Type
 36788 ;;  page            2   19[COMRAM] unsigned int 
 36789 ;;  buffer          1   21[COMRAM] enum E6874
 36790 ;; Auto vars:     Size  Location     Type
 36791 ;;  command         4   27[COMRAM] unsigned char [4]
 36792 ;;  status          2   25[COMRAM] unsigned int 
 36793 ;; Return value:  Size  Location     Type
 36794 ;;                  1    wreg      enum E6878
 36795 ;; Registers used:
 36796 ;;		wreg, status,2, status,0, cstack
 36797 ;; Tracked objects:
 36798 ;;		On entry : 0/0
 36799 ;;		On exit  : 0/0
 36800 ;;		Unchanged: 0/0
 36801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36802 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36803 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36804 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36805 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36806 ;;Total ram usage:       12 bytes
 36807 ;; Hardware stack levels used:    1
 36808 ;; Hardware stack levels required when called:    3
 36809 ;; This function calls:
 36810 ;;		__flash_get_status
 36811 ;;		__flash_is_busy
 36812 ;;		_spi_tx
 36813 ;; This function is called by:
 36814 ;;		_flash_page_write
 36815 ;;		_flash_partial_write
 36816 ;; This function uses a non-reentrant model
 36817 ;;
 36818                           
 36819                           	psect	text190
 36820  00644C                     __ptext190:
 36821                           	opt stack 0
 36822  00644C                     __flash_compare_page_to_buffer:
 36823                           	opt stack 23
 36824                           
 36825                           ;flash.c: 174: uint8_t command[4];;flash.c: 175: uint16_t status;;flash.c: 178: while(_f
      +                          lash_is_busy());
 36826                           
 36827                           ;incstack = 0
 36828  00644C  ECEE  F03D         	call	__flash_is_busy	;wreg free
 36829  006450  0900               	iorlw	0
 36830  006452  A4D8               	btfss	status,2,c
 36831  006454  D7FB               	goto	__flash_compare_page_to_buffer
 36832                           
 36833                           ;flash.c: 181: if(buffer==FLASH_BUFFER_1)
 36834  006456  5016               	movf	__flash_compare_page_to_buffer@buffer,w,c
 36835  006458  A4D8               	btfss	status,2,c
 36836  00645A  D002               	goto	l1707
 36837                           
 36838                           ;flash.c: 182: command[0] = 0x60;
 36839  00645C  0E60               	movlw	96
 36840  00645E  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 36841  006460                     l1707:
 36842                           
 36843                           ;flash.c: 183: if(buffer==FLASH_BUFFER_2)
 36844  006460  0416               	decf	__flash_compare_page_to_buffer@buffer,w,c
 36845  006462  A4D8               	btfss	status,2,c
 36846  006464  D002               	goto	l1708
 36847                           
 36848                           ;flash.c: 184: command[0] = 0x60;
 36849  006466  0E60               	movlw	96
 36850  006468  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 36851  00646A                     l1708:
 36852                           
 36853                           ;flash.c: 186: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 36854  00646A  C014  F017         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 36855  00646E  C015  F018         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 36856  006472  0E07               	movlw	7
 36857  006474  6E19               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),c
 36858  006476                     u6125:
 36859  006476  90D8               	bcf	status,0,c
 36860  006478  3218               	rrcf	??__flash_compare_page_to_buffer+1,f,c
 36861  00647A  3217               	rrcf	??__flash_compare_page_to_buffer,f,c
 36862  00647C  2E19               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,c
 36863  00647E  D7FB               	goto	u6125
 36864  006480  5017               	movf	??__flash_compare_page_to_buffer,w,c
 36865  006482  6E1D               	movwf	__flash_compare_page_to_buffer@command+1,c
 36866                           
 36867                           ;flash.c: 187: command[2] = ((unsigned char)((page<<1)&0xFF));
 36868  006484  5014               	movf	__flash_compare_page_to_buffer@page,w,c
 36869  006486  2414               	addwf	__flash_compare_page_to_buffer@page,w,c
 36870  006488  6E1E               	movwf	__flash_compare_page_to_buffer@command+2,c
 36871                           
 36872                           ;flash.c: 188: command[3] = 0x00;
 36873  00648A  0E00               	movlw	0
 36874  00648C  6E1F               	movwf	__flash_compare_page_to_buffer@command+3,c
 36875                           
 36876                           ;flash.c: 191: spi_tx(command, 4);
 36877  00648E  0E1C               	movlw	low __flash_compare_page_to_buffer@command
 36878  006490  6E01               	movwf	spi_tx@data,c
 36879  006492  0E00               	movlw	high __flash_compare_page_to_buffer@command
 36880  006494  6E02               	movwf	spi_tx@data+1,c
 36881  006496  0E00               	movlw	0
 36882  006498  6E04               	movwf	spi_tx@length+1,c
 36883  00649A  0E04               	movlw	4
 36884  00649C  6E03               	movwf	spi_tx@length,c
 36885  00649E  ECCB  F037         	call	_spi_tx	;wreg free
 36886  0064A2  ECEE  F03D         	call	__flash_is_busy	;wreg free
 36887  0064A6  0900               	iorlw	0
 36888  0064A8  A4D8               	btfss	status,2,c
 36889  0064AA  D7FB               	goto	l1710
 36890                           
 36891                           ;flash.c: 197: status = _flash_get_status();
 36892  0064AC  EC82  F03C         	call	__flash_get_status	;wreg free
 36893  0064B0  C00D  F01A         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 36894  0064B4  C00E  F01B         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 36895                           
 36896                           ;flash.c: 200: if(status & 0b0000000001000000)
 36897  0064B8  AC1A               	btfss	__flash_compare_page_to_buffer@status,6,c
 36898  0064BA  D002               	goto	l1712
 36899                           
 36900                           ;flash.c: 201: {;flash.c: 203: return DATA_DOES_NOT_MATCH;
 36901  0064BC  0E01               	movlw	1
 36902                           
 36903                           ;flash.c: 204: }
 36904  0064BE  0012               	return	
 36905  0064C0                     l1712:
 36906                           
 36907                           ;flash.c: 205: else;flash.c: 206: {;flash.c: 208: return DATA_DOES_MATCH;
 36908  0064C0  0E00               	movlw	0
 36909  0064C2  0012               	return	
 36910  0064C4                     __end_of__flash_compare_page_to_buffer:
 36911                           	opt stack 0
 36912                           tosu	equ	0xFFF
 36913                           tosh	equ	0xFFE
 36914                           tosl	equ	0xFFD
 36915                           pclath	equ	0xFFA
 36916                           tblptru	equ	0xFF8
 36917                           tblptrh	equ	0xFF7
 36918                           tblptrl	equ	0xFF6
 36919                           tablat	equ	0xFF5
 36920                           prodh	equ	0xFF4
 36921                           prodl	equ	0xFF3
 36922                           intcon	equ	0xFF2
 36923                           intcon2	equ	0xFF1
 36924                           intcon3	equ	0xFF0
 36925                           indf0	equ	0xFEF
 36926                           postinc0	equ	0xFEE
 36927                           fsr0h	equ	0xFEA
 36928                           fsr0l	equ	0xFE9
 36929                           wreg	equ	0xFE8
 36930                           indf1	equ	0xFE7
 36931                           postdec1	equ	0xFE5
 36932                           plusw1	equ	0xFE3
 36933                           fsr1h	equ	0xFE2
 36934                           fsr1l	equ	0xFE1
 36935                           indf2	equ	0xFDF
 36936                           postinc2	equ	0xFDE
 36937                           postdec2	equ	0xFDD
 36938                           plusw2	equ	0xFDB
 36939                           fsr2h	equ	0xFDA
 36940                           fsr2l	equ	0xFD9
 36941                           status	equ	0xFD8
 36942                           
 36943 ;; *************** function __update_modified_time *****************
 36944 ;; Defined at:
 36945 ;;		line 53 in file "fat16.c"
 36946 ;; Parameters:    Size  Location     Type
 36947 ;;  root            2    4[COMRAM] PTR struct .
 36948 ;;		 -> fat_append_to_file@root(32), 
 36949 ;; Auto vars:     Size  Location     Type
 36950 ;;		None
 36951 ;; Return value:  Size  Location     Type
 36952 ;;                  1    wreg      void 
 36953 ;; Registers used:
 36954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36955 ;; Tracked objects:
 36956 ;;		On entry : 0/0
 36957 ;;		On exit  : 0/0
 36958 ;;		Unchanged: 0/0
 36959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36960 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36963 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36964 ;;Total ram usage:        2 bytes
 36965 ;; Hardware stack levels used:    1
 36966 ;; Hardware stack levels required when called:    1
 36967 ;; This function calls:
 36968 ;;		__get_date
 36969 ;;		__get_time
 36970 ;; This function is called by:
 36971 ;;		_fat_append_to_file
 36972 ;; This function uses a non-reentrant model
 36973 ;;
 36974                           
 36975                           	psect	text191
 36976  0078A0                     __ptext191:
 36977                           	opt stack 0
 36978  0078A0                     __update_modified_time:
 36979                           	opt stack 25
 36980                           
 36981                           ;fat16.c: 55: root->modifiedDate = _get_date();
 36982                           
 36983                           ;incstack = 0
 36984  0078A0  EC02  F03F         	call	__get_date	;wreg free
 36985  0078A4  EE20 F018          	lfsr	2,24
 36986  0078A8  5005               	movf	__update_modified_time@root,w,c
 36987  0078AA  26D9               	addwf	fsr2l,f,c
 36988  0078AC  5006               	movf	__update_modified_time@root+1,w,c
 36989  0078AE  22DA               	addwfc	fsr2h,f,c
 36990  0078B0  C001  FFDE         	movff	?__get_date,postinc2
 36991  0078B4  C002  FFDD         	movff	?__get_date+1,postdec2
 36992                           
 36993                           ;fat16.c: 56: root->modifiedTime = _get_time();
 36994  0078B8  ECFD  F03E         	call	__get_time	;wreg free
 36995  0078BC  EE20 F016          	lfsr	2,22
 36996  0078C0  5005               	movf	__update_modified_time@root,w,c
 36997  0078C2  26D9               	addwf	fsr2l,f,c
 36998  0078C4  5006               	movf	__update_modified_time@root+1,w,c
 36999  0078C6  22DA               	addwfc	fsr2h,f,c
 37000  0078C8  C001  FFDE         	movff	?__get_time,postinc2
 37001  0078CC  C002  FFDD         	movff	?__get_time+1,postdec2
 37002  0078D0  0012               	return		;funcret
 37003  0078D2                     __end_of__update_modified_time:
 37004                           	opt stack 0
 37005                           tosu	equ	0xFFF
 37006                           tosh	equ	0xFFE
 37007                           tosl	equ	0xFFD
 37008                           pclath	equ	0xFFA
 37009                           tblptru	equ	0xFF8
 37010                           tblptrh	equ	0xFF7
 37011                           tblptrl	equ	0xFF6
 37012                           tablat	equ	0xFF5
 37013                           prodh	equ	0xFF4
 37014                           prodl	equ	0xFF3
 37015                           intcon	equ	0xFF2
 37016                           intcon2	equ	0xFF1
 37017                           intcon3	equ	0xFF0
 37018                           indf0	equ	0xFEF
 37019                           postinc0	equ	0xFEE
 37020                           fsr0h	equ	0xFEA
 37021                           fsr0l	equ	0xFE9
 37022                           wreg	equ	0xFE8
 37023                           indf1	equ	0xFE7
 37024                           postdec1	equ	0xFE5
 37025                           plusw1	equ	0xFE3
 37026                           fsr1h	equ	0xFE2
 37027                           fsr1l	equ	0xFE1
 37028                           indf2	equ	0xFDF
 37029                           postinc2	equ	0xFDE
 37030                           postdec2	equ	0xFDD
 37031                           plusw2	equ	0xFDB
 37032                           fsr2h	equ	0xFDA
 37033                           fsr2l	equ	0xFD9
 37034                           status	equ	0xFD8
 37035                           
 37036 ;; *************** function __get_time *****************
 37037 ;; Defined at:
 37038 ;;		line 29 in file "fat16.c"
 37039 ;; Parameters:    Size  Location     Type
 37040 ;;		None
 37041 ;; Auto vars:     Size  Location     Type
 37042 ;;  time            2    2[COMRAM] unsigned int 
 37043 ;; Return value:  Size  Location     Type
 37044 ;;                  2    0[COMRAM] unsigned int 
 37045 ;; Registers used:
 37046 ;;		None
 37047 ;; Tracked objects:
 37048 ;;		On entry : 0/0
 37049 ;;		On exit  : 0/0
 37050 ;;		Unchanged: 0/0
 37051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37052 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37053 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37055 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37056 ;;Total ram usage:        4 bytes
 37057 ;; Hardware stack levels used:    1
 37058 ;; This function calls:
 37059 ;;		Nothing
 37060 ;; This function is called by:
 37061 ;;		__update_modified_time
 37062 ;;		_fat_create_file
 37063 ;; This function uses a non-reentrant model
 37064 ;;
 37065                           
 37066                           	psect	text192
 37067  007DFA                     __ptext192:
 37068                           	opt stack 0
 37069  007DFA                     __get_time:
 37070                           	opt stack 26
 37071                           
 37072                           ;fat16.c: 31: uint16_t time;;fat16.c: 38: return time;
 37073                           
 37074                           ;incstack = 0
 37075  007DFA  C003  F001         	movff	__get_time@time,?__get_time
 37076  007DFE  C004  F002         	movff	__get_time@time+1,?__get_time+1
 37077  007E02  0012               	return		;funcret
 37078  007E04                     __end_of__get_time:
 37079                           	opt stack 0
 37080                           tosu	equ	0xFFF
 37081                           tosh	equ	0xFFE
 37082                           tosl	equ	0xFFD
 37083                           pclath	equ	0xFFA
 37084                           tblptru	equ	0xFF8
 37085                           tblptrh	equ	0xFF7
 37086                           tblptrl	equ	0xFF6
 37087                           tablat	equ	0xFF5
 37088                           prodh	equ	0xFF4
 37089                           prodl	equ	0xFF3
 37090                           intcon	equ	0xFF2
 37091                           intcon2	equ	0xFF1
 37092                           intcon3	equ	0xFF0
 37093                           indf0	equ	0xFEF
 37094                           postinc0	equ	0xFEE
 37095                           fsr0h	equ	0xFEA
 37096                           fsr0l	equ	0xFE9
 37097                           wreg	equ	0xFE8
 37098                           indf1	equ	0xFE7
 37099                           postdec1	equ	0xFE5
 37100                           plusw1	equ	0xFE3
 37101                           fsr1h	equ	0xFE2
 37102                           fsr1l	equ	0xFE1
 37103                           indf2	equ	0xFDF
 37104                           postinc2	equ	0xFDE
 37105                           postdec2	equ	0xFDD
 37106                           plusw2	equ	0xFDB
 37107                           fsr2h	equ	0xFDA
 37108                           fsr2l	equ	0xFD9
 37109                           status	equ	0xFD8
 37110                           
 37111 ;; *************** function __get_date *****************
 37112 ;; Defined at:
 37113 ;;		line 41 in file "fat16.c"
 37114 ;; Parameters:    Size  Location     Type
 37115 ;;		None
 37116 ;; Auto vars:     Size  Location     Type
 37117 ;;  date            2    2[COMRAM] unsigned int 
 37118 ;; Return value:  Size  Location     Type
 37119 ;;                  2    0[COMRAM] unsigned int 
 37120 ;; Registers used:
 37121 ;;		None
 37122 ;; Tracked objects:
 37123 ;;		On entry : 0/0
 37124 ;;		On exit  : 0/0
 37125 ;;		Unchanged: 0/0
 37126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37127 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37128 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37130 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37131 ;;Total ram usage:        4 bytes
 37132 ;; Hardware stack levels used:    1
 37133 ;; This function calls:
 37134 ;;		Nothing
 37135 ;; This function is called by:
 37136 ;;		__update_modified_time
 37137 ;;		_fat_create_file
 37138 ;; This function uses a non-reentrant model
 37139 ;;
 37140                           
 37141                           	psect	text193
 37142  007E04                     __ptext193:
 37143                           	opt stack 0
 37144  007E04                     __get_date:
 37145                           	opt stack 26
 37146                           
 37147                           ;fat16.c: 43: uint16_t date;;fat16.c: 50: return date;
 37148                           
 37149                           ;incstack = 0
 37150  007E04  C003  F001         	movff	__get_date@date,?__get_date
 37151  007E08  C004  F002         	movff	__get_date@date+1,?__get_date+1
 37152  007E0C  0012               	return		;funcret
 37153  007E0E                     __end_of__get_date:
 37154                           	opt stack 0
 37155                           tosu	equ	0xFFF
 37156                           tosh	equ	0xFFE
 37157                           tosl	equ	0xFFD
 37158                           pclath	equ	0xFFA
 37159                           tblptru	equ	0xFF8
 37160                           tblptrh	equ	0xFF7
 37161                           tblptrl	equ	0xFF6
 37162                           tablat	equ	0xFF5
 37163                           prodh	equ	0xFF4
 37164                           prodl	equ	0xFF3
 37165                           intcon	equ	0xFF2
 37166                           intcon2	equ	0xFF1
 37167                           intcon3	equ	0xFF0
 37168                           indf0	equ	0xFEF
 37169                           postinc0	equ	0xFEE
 37170                           fsr0h	equ	0xFEA
 37171                           fsr0l	equ	0xFE9
 37172                           wreg	equ	0xFE8
 37173                           indf1	equ	0xFE7
 37174                           postdec1	equ	0xFE5
 37175                           plusw1	equ	0xFE3
 37176                           fsr1h	equ	0xFE2
 37177                           fsr1l	equ	0xFE1
 37178                           indf2	equ	0xFDF
 37179                           postinc2	equ	0xFDE
 37180                           postdec2	equ	0xFDD
 37181                           plusw2	equ	0xFDB
 37182                           fsr2h	equ	0xFDA
 37183                           fsr2l	equ	0xFD9
 37184                           status	equ	0xFD8
 37185                           
 37186 ;; *************** function __sector_from_cluster *****************
 37187 ;; Defined at:
 37188 ;;		line 443 in file "fat16.c"
 37189 ;; Parameters:    Size  Location     Type
 37190 ;;  fat_cluster     2    0[COMRAM] unsigned int 
 37191 ;; Auto vars:     Size  Location     Type
 37192 ;;		None
 37193 ;; Return value:  Size  Location     Type
 37194 ;;                  2    0[COMRAM] unsigned int 
 37195 ;; Registers used:
 37196 ;;		wreg, status,2, status,0
 37197 ;; Tracked objects:
 37198 ;;		On entry : 0/0
 37199 ;;		On exit  : 0/0
 37200 ;;		Unchanged: 0/0
 37201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37202 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37205 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37206 ;;Total ram usage:        2 bytes
 37207 ;; Hardware stack levels used:    1
 37208 ;; This function calls:
 37209 ;;		Nothing
 37210 ;; This function is called by:
 37211 ;;		_fat_append_to_file
 37212 ;;		_fat_read_from_file
 37213 ;; This function uses a non-reentrant model
 37214 ;;
 37215                           
 37216                           	psect	text194
 37217  007D68                     __ptext194:
 37218                           	opt stack 0
 37219  007D68                     __sector_from_cluster:
 37220                           	opt stack 27
 37221                           
 37222                           ;fat16.c: 445: return fat_cluster + 22 - 2;
 37223                           
 37224                           ;incstack = 0
 37225  007D68  0E14               	movlw	20
 37226  007D6A  2401               	addwf	__sector_from_cluster@fat_cluster,w,c
 37227  007D6C  6E01               	movwf	?__sector_from_cluster,c
 37228  007D6E  0E00               	movlw	0
 37229  007D70  2002               	addwfc	__sector_from_cluster@fat_cluster+1,w,c
 37230  007D72  6E02               	movwf	?__sector_from_cluster+1,c
 37231  007D74  0012               	return	
 37232  007D76                     __end_of__sector_from_cluster:
 37233                           	opt stack 0
 37234                           tosu	equ	0xFFF
 37235                           tosh	equ	0xFFE
 37236                           tosl	equ	0xFFD
 37237                           pclath	equ	0xFFA
 37238                           tblptru	equ	0xFF8
 37239                           tblptrh	equ	0xFF7
 37240                           tblptrl	equ	0xFF6
 37241                           tablat	equ	0xFF5
 37242                           prodh	equ	0xFF4
 37243                           prodl	equ	0xFF3
 37244                           intcon	equ	0xFF2
 37245                           intcon2	equ	0xFF1
 37246                           intcon3	equ	0xFF0
 37247                           indf0	equ	0xFEF
 37248                           postinc0	equ	0xFEE
 37249                           fsr0h	equ	0xFEA
 37250                           fsr0l	equ	0xFE9
 37251                           wreg	equ	0xFE8
 37252                           indf1	equ	0xFE7
 37253                           postdec1	equ	0xFE5
 37254                           plusw1	equ	0xFE3
 37255                           fsr1h	equ	0xFE2
 37256                           fsr1l	equ	0xFE1
 37257                           indf2	equ	0xFDF
 37258                           postinc2	equ	0xFDE
 37259                           postdec2	equ	0xFDD
 37260                           plusw2	equ	0xFDB
 37261                           fsr2h	equ	0xFDA
 37262                           fsr2l	equ	0xFD9
 37263                           status	equ	0xFD8
 37264                           
 37265 ;; *************** function __read_fat *****************
 37266 ;; Defined at:
 37267 ;;		line 169 in file "fat16.c"
 37268 ;; Parameters:    Size  Location     Type
 37269 ;;  cluster         2   47[COMRAM] unsigned int 
 37270 ;; Auto vars:     Size  Location     Type
 37271 ;;  value           2   53[COMRAM] unsigned int 
 37272 ;;  offset          2   51[COMRAM] unsigned int 
 37273 ;;  fat_sector      2   49[COMRAM] unsigned int 
 37274 ;; Return value:  Size  Location     Type
 37275 ;;                  2   47[COMRAM] unsigned int 
 37276 ;; Registers used:
 37277 ;;		wreg, status,2, status,0, cstack
 37278 ;; Tracked objects:
 37279 ;;		On entry : 0/0
 37280 ;;		On exit  : 0/0
 37281 ;;		Unchanged: 0/0
 37282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37283 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37284 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37286 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37287 ;;Total ram usage:        8 bytes
 37288 ;; Hardware stack levels used:    1
 37289 ;; Hardware stack levels required when called:    5
 37290 ;; This function calls:
 37291 ;;		_flash_partial_read
 37292 ;; This function is called by:
 37293 ;;		_fat_delete_file
 37294 ;;		_fat_append_to_file
 37295 ;;		_fat_read_from_file
 37296 ;; This function uses a non-reentrant model
 37297 ;;
 37298                           
 37299                           	psect	text195
 37300  0073C4                     __ptext195:
 37301                           	opt stack 0
 37302  0073C4                     __read_fat:
 37303                           	opt stack 22
 37304                           
 37305                           ;fat16.c: 171: uint16_t fat_sector;;fat16.c: 172: uint16_t offset;;fat16.c: 173: uint16_
      +                          t value;;fat16.c: 174: fat_sector = cluster>>8;
 37306                           
 37307                           ;incstack = 0
 37308  0073C4  5031               	movf	__read_fat@cluster+1,w,c
 37309  0073C6  6E32               	movwf	__read_fat@fat_sector,c
 37310  0073C8  6A33               	clrf	__read_fat@fat_sector+1,c
 37311                           
 37312                           ;fat16.c: 175: fat_sector += 2;
 37313  0073CA  0E02               	movlw	2
 37314  0073CC  2632               	addwf	__read_fat@fat_sector,f,c
 37315  0073CE  0E00               	movlw	0
 37316  0073D0  2233               	addwfc	__read_fat@fat_sector+1,f,c
 37317                           
 37318                           ;fat16.c: 176: offset = cluster & 0xFF;
 37319  0073D2  5030               	movf	__read_fat@cluster,w,c
 37320  0073D4  6E34               	movwf	__read_fat@offset,c
 37321  0073D6  6A35               	clrf	__read_fat@offset+1,c
 37322                           
 37323                           ;fat16.c: 177: offset <<= 1;
 37324  0073D8  90D8               	bcf	status,0,c
 37325  0073DA  3634               	rlcf	__read_fat@offset,f,c
 37326  0073DC  3635               	rlcf	__read_fat@offset+1,f,c
 37327                           
 37328                           ;fat16.c: 178: flash_partial_read(fat_sector, offset, 2, &value);
 37329  0073DE  C032  F028         	movff	__read_fat@fat_sector,flash_partial_read@page
 37330  0073E2  C033  F029         	movff	__read_fat@fat_sector+1,flash_partial_read@page+1
 37331  0073E6  C034  F02A         	movff	__read_fat@offset,flash_partial_read@start
 37332  0073EA  C035  F02B         	movff	__read_fat@offset+1,flash_partial_read@start+1
 37333  0073EE  0E00               	movlw	0
 37334  0073F0  6E2D               	movwf	flash_partial_read@length+1,c
 37335  0073F2  0E02               	movlw	2
 37336  0073F4  6E2C               	movwf	flash_partial_read@length,c
 37337  0073F6  0E36               	movlw	low __read_fat@value
 37338  0073F8  6E2E               	movwf	flash_partial_read@data,c
 37339  0073FA  0E00               	movlw	high __read_fat@value
 37340  0073FC  6E2F               	movwf	flash_partial_read@data+1,c
 37341  0073FE  EC69  F03C         	call	_flash_partial_read	;wreg free
 37342                           
 37343                           ;fat16.c: 179: return value;
 37344  007402  C036  F030         	movff	__read_fat@value,?__read_fat
 37345  007406  C037  F031         	movff	__read_fat@value+1,?__read_fat+1
 37346  00740A  0012               	return	
 37347  00740C                     __end_of__read_fat:
 37348                           	opt stack 0
 37349                           tosu	equ	0xFFF
 37350                           tosh	equ	0xFFE
 37351                           tosl	equ	0xFFD
 37352                           pclath	equ	0xFFA
 37353                           tblptru	equ	0xFF8
 37354                           tblptrh	equ	0xFF7
 37355                           tblptrl	equ	0xFF6
 37356                           tablat	equ	0xFF5
 37357                           prodh	equ	0xFF4
 37358                           prodl	equ	0xFF3
 37359                           intcon	equ	0xFF2
 37360                           intcon2	equ	0xFF1
 37361                           intcon3	equ	0xFF0
 37362                           indf0	equ	0xFEF
 37363                           postinc0	equ	0xFEE
 37364                           fsr0h	equ	0xFEA
 37365                           fsr0l	equ	0xFE9
 37366                           wreg	equ	0xFE8
 37367                           indf1	equ	0xFE7
 37368                           postdec1	equ	0xFE5
 37369                           plusw1	equ	0xFE3
 37370                           fsr1h	equ	0xFE2
 37371                           fsr1l	equ	0xFE1
 37372                           indf2	equ	0xFDF
 37373                           postinc2	equ	0xFDE
 37374                           postdec2	equ	0xFDD
 37375                           plusw2	equ	0xFDB
 37376                           fsr2h	equ	0xFDA
 37377                           fsr2l	equ	0xFD9
 37378                           status	equ	0xFD8
 37379                           
 37380 ;; *************** function __get_empty_cluster *****************
 37381 ;; Defined at:
 37382 ;;		line 107 in file "fat16.c"
 37383 ;; Parameters:    Size  Location     Type
 37384 ;;  first_cluste    2   47[COMRAM] unsigned int 
 37385 ;; Auto vars:     Size  Location     Type
 37386 ;;  cluster         2   55[COMRAM] unsigned int 
 37387 ;;  value           2   53[COMRAM] unsigned int 
 37388 ;;  offset          2   51[COMRAM] unsigned int 
 37389 ;;  fat_sector      2   49[COMRAM] unsigned int 
 37390 ;; Return value:  Size  Location     Type
 37391 ;;                  2   47[COMRAM] unsigned int 
 37392 ;; Registers used:
 37393 ;;		wreg, status,2, status,0, cstack
 37394 ;; Tracked objects:
 37395 ;;		On entry : 0/0
 37396 ;;		On exit  : 0/0
 37397 ;;		Unchanged: 0/0
 37398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37399 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37400 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37402 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37403 ;;Total ram usage:       10 bytes
 37404 ;; Hardware stack levels used:    1
 37405 ;; Hardware stack levels required when called:    5
 37406 ;; This function calls:
 37407 ;;		_flash_partial_read
 37408 ;; This function is called by:
 37409 ;;		_fat_create_file
 37410 ;;		_fat_append_to_file
 37411 ;; This function uses a non-reentrant model
 37412 ;;
 37413                           
 37414                           	psect	text196
 37415  006626                     __ptext196:
 37416                           	opt stack 0
 37417  006626                     __get_empty_cluster:
 37418                           	opt stack 21
 37419                           
 37420                           ;fat16.c: 109: uint16_t cluster;;fat16.c: 110: uint16_t fat_sector;;fat16.c: 111: uint16
      +                          _t offset;;fat16.c: 112: uint16_t value;;fat16.c: 115: for(cluster=first_cluster; cluste
      +                          r<(4074+2); ++cluster)
 37421                           
 37422                           ;incstack = 0
 37423  006626  C030  F038         	movff	__get_empty_cluster@first_cluster,__get_empty_cluster@cluster
 37424  00662A  C031  F039         	movff	__get_empty_cluster@first_cluster+1,__get_empty_cluster@cluster+1
 37425  00662E                     l10492:
 37426  00662E  0EEC               	movlw	236
 37427  006630  5C38               	subwf	__get_empty_cluster@cluster,w,c
 37428  006632  0E0F               	movlw	15
 37429  006634  5839               	subwfb	__get_empty_cluster@cluster+1,w,c
 37430  006636  B0D8               	btfsc	status,0,c
 37431  006638  D02B               	goto	u7540
 37432                           
 37433                           ;fat16.c: 116: {;fat16.c: 117: fat_sector = cluster>>8;
 37434  00663A  5039               	movf	__get_empty_cluster@cluster+1,w,c
 37435  00663C  6E32               	movwf	__get_empty_cluster@fat_sector,c
 37436  00663E  6A33               	clrf	__get_empty_cluster@fat_sector+1,c
 37437                           
 37438                           ;fat16.c: 118: fat_sector += 2;
 37439  006640  0E02               	movlw	2
 37440  006642  2632               	addwf	__get_empty_cluster@fat_sector,f,c
 37441  006644  0E00               	movlw	0
 37442  006646  2233               	addwfc	__get_empty_cluster@fat_sector+1,f,c
 37443                           
 37444                           ;fat16.c: 119: offset = cluster & 0xFF;
 37445  006648  5038               	movf	__get_empty_cluster@cluster,w,c
 37446  00664A  6E34               	movwf	__get_empty_cluster@offset,c
 37447  00664C  6A35               	clrf	__get_empty_cluster@offset+1,c
 37448                           
 37449                           ;fat16.c: 120: offset <<= 1;
 37450  00664E  90D8               	bcf	status,0,c
 37451  006650  3634               	rlcf	__get_empty_cluster@offset,f,c
 37452  006652  3635               	rlcf	__get_empty_cluster@offset+1,f,c
 37453                           
 37454                           ;fat16.c: 121: flash_partial_read(fat_sector, offset, 2, &value);
 37455  006654  C032  F028         	movff	__get_empty_cluster@fat_sector,flash_partial_read@page
 37456  006658  C033  F029         	movff	__get_empty_cluster@fat_sector+1,flash_partial_read@page+1
 37457  00665C  C034  F02A         	movff	__get_empty_cluster@offset,flash_partial_read@start
 37458  006660  C035  F02B         	movff	__get_empty_cluster@offset+1,flash_partial_read@start+1
 37459  006664  0E00               	movlw	0
 37460  006666  6E2D               	movwf	flash_partial_read@length+1,c
 37461  006668  0E02               	movlw	2
 37462  00666A  6E2C               	movwf	flash_partial_read@length,c
 37463  00666C  0E36               	movlw	low __get_empty_cluster@value
 37464  00666E  6E2E               	movwf	flash_partial_read@data,c
 37465  006670  0E00               	movlw	high __get_empty_cluster@value
 37466  006672  6E2F               	movwf	flash_partial_read@data+1,c
 37467  006674  EC69  F03C         	call	_flash_partial_read	;wreg free
 37468                           
 37469                           ;fat16.c: 122: if(value==0x0000)
 37470  006678  5036               	movf	__get_empty_cluster@value,w,c
 37471  00667A  1037               	iorwf	__get_empty_cluster@value+1,w,c
 37472  00667C  A4D8               	btfss	status,2,c
 37473  00667E  D005               	goto	l1869
 37474                           
 37475                           ;fat16.c: 123: {;fat16.c: 124: return cluster;
 37476  006680  C038  F030         	movff	__get_empty_cluster@cluster,?__get_empty_cluster
 37477  006684  C039  F031         	movff	__get_empty_cluster@cluster+1,?__get_empty_cluster+1
 37478  006688  0012               	return	
 37479  00668A                     l1869:
 37480  00668A  4A38               	infsnz	__get_empty_cluster@cluster,f,c
 37481  00668C  2A39               	incf	__get_empty_cluster@cluster+1,f,c
 37482  00668E  D7CF               	goto	l10492
 37483  006690                     u7540:
 37484                           
 37485                           ;fat16.c: 125: };fat16.c: 126: };fat16.c: 127: return 0x0000;
 37486  006690  0E00               	movlw	0
 37487  006692  6E31               	movwf	?__get_empty_cluster+1,c
 37488  006694  0E00               	movlw	0
 37489  006696  6E30               	movwf	?__get_empty_cluster,c
 37490  006698  0012               	return	
 37491  00669A                     __end_of__get_empty_cluster:
 37492                           	opt stack 0
 37493                           tosu	equ	0xFFF
 37494                           tosh	equ	0xFFE
 37495                           tosl	equ	0xFFD
 37496                           pclath	equ	0xFFA
 37497                           tblptru	equ	0xFF8
 37498                           tblptrh	equ	0xFF7
 37499                           tblptrl	equ	0xFF6
 37500                           tablat	equ	0xFF5
 37501                           prodh	equ	0xFF4
 37502                           prodl	equ	0xFF3
 37503                           intcon	equ	0xFF2
 37504                           intcon2	equ	0xFF1
 37505                           intcon3	equ	0xFF0
 37506                           indf0	equ	0xFEF
 37507                           postinc0	equ	0xFEE
 37508                           fsr0h	equ	0xFEA
 37509                           fsr0l	equ	0xFE9
 37510                           wreg	equ	0xFE8
 37511                           indf1	equ	0xFE7
 37512                           postdec1	equ	0xFE5
 37513                           plusw1	equ	0xFE3
 37514                           fsr1h	equ	0xFE2
 37515                           fsr1l	equ	0xFE1
 37516                           indf2	equ	0xFDF
 37517                           postinc2	equ	0xFDE
 37518                           postdec2	equ	0xFDD
 37519                           plusw2	equ	0xFDB
 37520                           fsr2h	equ	0xFDA
 37521                           fsr2l	equ	0xFD9
 37522                           status	equ	0xFD8
 37523                           
 37524 ;; *************** function _flash_partial_read *****************
 37525 ;; Defined at:
 37526 ;;		line 457 in file "flash.c"
 37527 ;; Parameters:    Size  Location     Type
 37528 ;;  page            2   39[COMRAM] unsigned int 
 37529 ;;  start           2   41[COMRAM] unsigned int 
 37530 ;;  length          2   43[COMRAM] unsigned int 
 37531 ;;  data            2   45[COMRAM] PTR unsigned char 
 37532 ;;		 -> _spi_external_tx_buffer(64), file_buffer(50), fat_read_from_file@root(32), fat_rename_file@root(32), 
 37533 ;;		 -> fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11), _get_file_size@file_size(
      +4), 
 37534 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@value(2), _get_empty_cluster@val
      +ue(2), 
 37535 ;;		 -> _root_is_available@first_byte(1), RAM(3759), 
 37536 ;; Auto vars:     Size  Location     Type
 37537 ;;		None
 37538 ;; Return value:  Size  Location     Type
 37539 ;;                  1    wreg      void 
 37540 ;; Registers used:
 37541 ;;		wreg, status,2, status,0, cstack
 37542 ;; Tracked objects:
 37543 ;;		On entry : 0/0
 37544 ;;		On exit  : 0/0
 37545 ;;		Unchanged: 0/0
 37546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37547 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37550 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37551 ;;Total ram usage:        8 bytes
 37552 ;; Hardware stack levels used:    1
 37553 ;; Hardware stack levels required when called:    4
 37554 ;; This function calls:
 37555 ;;		__flash_partial_read
 37556 ;;		_spi_set_configuration
 37557 ;; This function is called by:
 37558 ;;		__root_is_available
 37559 ;;		__get_empty_cluster
 37560 ;;		_fat_get_empty_clusters
 37561 ;;		__read_fat
 37562 ;;		__get_first_cluster
 37563 ;;		_fat_find_file
 37564 ;;		_fat_get_file_size
 37565 ;;		_fat_read_from_file
 37566 ;;		_fat_get_file_information
 37567 ;;		__get_file_size
 37568 ;; This function uses a non-reentrant model
 37569 ;;
 37570                           
 37571                           	psect	text197
 37572  0078D2                     __ptext197:
 37573                           	opt stack 0
 37574  0078D2                     _flash_partial_read:
 37575                           	opt stack 23
 37576                           
 37577                           ;flash.c: 460: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 37578                           
 37579                           ;incstack = 0
 37580  0078D2  0E00               	movlw	0
 37581  0078D4  ECB0  F021         	call	_spi_set_configuration
 37582                           
 37583                           ;flash.c: 463: _flash_partial_read(page, start, length, data);
 37584  0078D8  C028  F014         	movff	flash_partial_read@page,__flash_partial_read@page
 37585  0078DC  C029  F015         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 37586  0078E0  C02A  F016         	movff	flash_partial_read@start,__flash_partial_read@start
 37587  0078E4  C02B  F017         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 37588  0078E8  C02C  F018         	movff	flash_partial_read@length,__flash_partial_read@length
 37589  0078EC  C02D  F019         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 37590  0078F0  C02E  F01A         	movff	flash_partial_read@data,__flash_partial_read@data
 37591  0078F4  C02F  F01B         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 37592  0078F8  EC62  F032         	call	__flash_partial_read	;wreg free
 37593                           
 37594                           ;flash.c: 466: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 37595  0078FC  0E01               	movlw	1
 37596  0078FE  ECB0  F021         	call	_spi_set_configuration
 37597  007902  0012               	return		;funcret
 37598  007904                     __end_of_flash_partial_read:
 37599                           	opt stack 0
 37600                           tosu	equ	0xFFF
 37601                           tosh	equ	0xFFE
 37602                           tosl	equ	0xFFD
 37603                           pclath	equ	0xFFA
 37604                           tblptru	equ	0xFF8
 37605                           tblptrh	equ	0xFF7
 37606                           tblptrl	equ	0xFF6
 37607                           tablat	equ	0xFF5
 37608                           prodh	equ	0xFF4
 37609                           prodl	equ	0xFF3
 37610                           intcon	equ	0xFF2
 37611                           intcon2	equ	0xFF1
 37612                           intcon3	equ	0xFF0
 37613                           indf0	equ	0xFEF
 37614                           postinc0	equ	0xFEE
 37615                           fsr0h	equ	0xFEA
 37616                           fsr0l	equ	0xFE9
 37617                           wreg	equ	0xFE8
 37618                           indf1	equ	0xFE7
 37619                           postdec1	equ	0xFE5
 37620                           plusw1	equ	0xFE3
 37621                           fsr1h	equ	0xFE2
 37622                           fsr1l	equ	0xFE1
 37623                           indf2	equ	0xFDF
 37624                           postinc2	equ	0xFDE
 37625                           postdec2	equ	0xFDD
 37626                           plusw2	equ	0xFDB
 37627                           fsr2h	equ	0xFDA
 37628                           fsr2l	equ	0xFD9
 37629                           status	equ	0xFD8
 37630                           
 37631 ;; *************** function _spi_set_configuration *****************
 37632 ;; Defined at:
 37633 ;;		line 139 in file "spi.c"
 37634 ;; Parameters:    Size  Location     Type
 37635 ;;  configuratio    1    wreg     enum E6747
 37636 ;; Auto vars:     Size  Location     Type
 37637 ;;  configuratio    1    0[COMRAM] enum E6747
 37638 ;;  cntr            1    0        unsigned char 
 37639 ;; Return value:  Size  Location     Type
 37640 ;;                  1    wreg      void 
 37641 ;; Registers used:
 37642 ;;		wreg, status,2, status,0
 37643 ;; Tracked objects:
 37644 ;;		On entry : 0/0
 37645 ;;		On exit  : 0/0
 37646 ;;		Unchanged: 0/0
 37647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37649 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37651 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37652 ;;Total ram usage:        1 bytes
 37653 ;; Hardware stack levels used:    1
 37654 ;; This function calls:
 37655 ;;		Nothing
 37656 ;; This function is called by:
 37657 ;;		_flash_init
 37658 ;;		_flash_is_busy
 37659 ;;		_flash_page_read
 37660 ;;		_flash_page_write
 37661 ;;		_flash_partial_read
 37662 ;;		_flash_partial_write
 37663 ;;		_flash_set_power_state
 37664 ;; This function uses a non-reentrant model
 37665 ;;
 37666                           
 37667                           	psect	text198
 37668  004360                     __ptext198:
 37669                           	opt stack 0
 37670  004360                     _spi_set_configuration:
 37671                           	opt stack 28
 37672                           
 37673                           ;incstack = 0
 37674                           ;spi_set_configuration@configuration stored from wreg
 37675  004360  6E01               	movwf	spi_set_configuration@configuration,c
 37676                           
 37677                           ;spi.c: 141: uint8_t cntr;;spi.c: 144: switch(configuration)
 37678  004362  D078               	goto	l2741
 37679  004364                     
 37680                           ;spi.c: 149: while(!PORTDbits.RD2);
 37681  004364  A483               	btfss	3971,2,c	;volatile
 37682  004366  D7FE               	goto	l2742
 37683                           
 37684                           ;spi.c: 151: DMACON1bits.DMAEN = 0;
 37685  004368  9088               	bcf	3976,0,c	;volatile
 37686                           
 37687                           ;spi.c: 152: SSP2CON1bits.SSPEN = 0;
 37688  00436A  9A72               	bcf	3954,5,c	;volatile
 37689                           
 37690                           ;spi.c: 155: TRISDbits.TRISD6 = 1;
 37691  00436C  8C95               	bsf	3989,6,c	;volatile
 37692                           
 37693                           ;spi.c: 156: TRISDbits.TRISD4 = 0;
 37694  00436E  9895               	bcf	3989,4,c	;volatile
 37695                           
 37696                           ;spi.c: 157: LATDbits.LD4 = 0;
 37697  004370  988C               	bcf	3980,4,c	;volatile
 37698                           
 37699                           ;spi.c: 158: TRISDbits.TRISD5 = 0;
 37700  004372  9A95               	bcf	3989,5,c	;volatile
 37701                           
 37702                           ;spi.c: 159: LATDbits.LD5 = 0;
 37703  004374  9A8C               	bcf	3980,5,c	;volatile
 37704                           
 37705                           ;spi.c: 160: TRISDbits.TRISD7 = 0;
 37706  004376  9E95               	bcf	3989,7,c	;volatile
 37707                           
 37708                           ;spi.c: 161: LATDbits.LD7 = 1;
 37709  004378  8E8C               	bsf	3980,7,c	;volatile
 37710                           
 37711                           ;spi.c: 164: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 37712  00437A  0E55               	movlw	85
 37713  00437C  6EA7               	movwf	4007,c	;volsfr
 37714  00437E  0EAA               	movlw	170
 37715  004380  6EA7               	movwf	4007,c	;volsfr
 37716  004382  010E               	movlb	14	; () banked
 37717  004384  91BF               	bcf	191,0,b	;volatile
 37718                           
 37719                           ;spi.c: 166: RPOR23 = 0b00000;
 37720  004386  0E00               	movlw	0
 37721  004388  6FD7               	movwf	215,b	;volatile
 37722                           
 37723                           ;spi.c: 167: RPINR21 = 0b11111;
 37724  00438A  0E1F               	movlw	31
 37725  00438C  6FFC               	movwf	252,b	;volatile
 37726                           
 37727                           ;spi.c: 168: RPINR23 = 0b11111;
 37728  00438E  0E1F               	movlw	31
 37729  004390  6FFE               	movwf	254,b	;volatile
 37730                           
 37731                           ;spi.c: 170: RPINR21 = 23;
 37732  004392  0E17               	movlw	23
 37733  004394  6FFC               	movwf	252,b	;volatile
 37734                           
 37735                           ;spi.c: 171: RPOR21 = 10;
 37736  004396  0E0A               	movlw	10
 37737  004398  6FD5               	movwf	213,b	;volatile
 37738                           
 37739                           ;spi.c: 173: RPOR22 = 11;
 37740  00439A  0E0B               	movlw	11
 37741  00439C  6FD6               	movwf	214,b	;volatile
 37742                           
 37743                           ;spi.c: 174: RPINR22 = 22;
 37744  00439E  0E16               	movlw	22
 37745  0043A0  6FFD               	movwf	253,b	;volatile
 37746                           
 37747                           ;spi.c: 175: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 37748  0043A2  0E55               	movlw	85
 37749  0043A4  6EA7               	movwf	4007,c	;volsfr
 37750  0043A6  0EAA               	movlw	170
 37751  0043A8  6EA7               	movwf	4007,c	;volsfr
 37752                           
 37753                           ; BSR set to: 14
 37754  0043AA  81BF               	bsf	191,0,b	;volatile
 37755                           
 37756                           ; BSR set to: 14
 37757                           ;spi.c: 178: SSP2STATbits.SMP = 1;
 37758  0043AC  8E73               	bsf	3955,7,c	;volatile
 37759                           
 37760                           ; BSR set to: 14
 37761                           ;spi.c: 179: SSP2STATbits.CKE = 1;
 37762  0043AE  8C73               	bsf	3955,6,c	;volatile
 37763                           
 37764                           ; BSR set to: 14
 37765                           ;spi.c: 180: SSP2CON1bits.WCOL = 0;
 37766  0043B0  9E72               	bcf	3954,7,c	;volatile
 37767                           
 37768                           ; BSR set to: 14
 37769                           ;spi.c: 181: SSP2CON1bits.SSPOV = 0;
 37770  0043B2  9C72               	bcf	3954,6,c	;volatile
 37771                           
 37772                           ; BSR set to: 14
 37773                           ;spi.c: 182: SSP2CON1bits.CKP = 0;
 37774  0043B4  9872               	bcf	3954,4,c	;volatile
 37775                           
 37776                           ; BSR set to: 14
 37777                           ;spi.c: 183: SSP2CON1bits.SSPM =0b0000;
 37778  0043B6  9072               	bcf	3954,0,c	;volatile
 37779  0043B8  9272               	bcf	3954,1,c	;volatile
 37780  0043BA  9472               	bcf	3954,2,c	;volatile
 37781  0043BC  9672               	bcf	3954,3,c	;volatile
 37782                           
 37783                           ; BSR set to: 14
 37784                           ;spi.c: 184: SSP2CON1bits.SSPEN = 1;
 37785  0043BE  8A72               	bsf	3954,5,c	;volatile
 37786                           
 37787                           ;spi.c: 187: active_configuration = SPI_CONFIGURATION_INTERNAL;
 37788  0043C0  0E00               	movlw	0
 37789  0043C2  0100               	movlb	0	; () banked
 37790  0043C4  6F94               	movwf	_active_configuration& (0+255),b
 37791                           
 37792                           ;spi.c: 188: break;
 37793  0043C6  0012               	return	
 37794  0043C8                     l2747:
 37795                           
 37796                           ;spi.c: 192: DMACON1bits.DMAEN = 0;
 37797  0043C8  9088               	bcf	3976,0,c	;volatile
 37798                           
 37799                           ;spi.c: 193: SSP2CON1bits.SSPEN = 0;
 37800  0043CA  9A72               	bcf	3954,5,c	;volatile
 37801                           
 37802                           ;spi.c: 196: ODCON3bits.SPI2OD = 0;
 37803  0043CC  010F               	movlb	15	; () banked
 37804  0043CE  9340               	bcf	64,1,b	;volatile
 37805                           
 37806                           ; BSR set to: 15
 37807                           ;spi.c: 199: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 37808  0043D0  0E55               	movlw	85
 37809  0043D2  6EA7               	movwf	4007,c	;volsfr
 37810  0043D4  0EAA               	movlw	170
 37811  0043D6  6EA7               	movwf	4007,c	;volsfr
 37812                           
 37813                           ; BSR set to: 15
 37814  0043D8  010E               	movlb	14	; () banked
 37815  0043DA  91BF               	bcf	191,0,b	;volatile
 37816                           
 37817                           ;spi.c: 200: RPOR23 = 10;
 37818  0043DC  0E0A               	movlw	10
 37819  0043DE  6FD7               	movwf	215,b	;volatile
 37820                           
 37821                           ;spi.c: 201: RPINR21 = 21;
 37822  0043E0  0E15               	movlw	21
 37823  0043E2  6FFC               	movwf	252,b	;volatile
 37824                           
 37825                           ;spi.c: 202: RPINR22 = 22;
 37826  0043E4  0E16               	movlw	22
 37827  0043E6  6FFD               	movwf	253,b	;volatile
 37828                           
 37829                           ;spi.c: 203: RPINR23 = 19;
 37830  0043E8  0E13               	movlw	19
 37831  0043EA  6FFE               	movwf	254,b	;volatile
 37832                           
 37833                           ;spi.c: 204: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 37834  0043EC  0E55               	movlw	85
 37835  0043EE  6EA7               	movwf	4007,c	;volsfr
 37836  0043F0  0EAA               	movlw	170
 37837  0043F2  6EA7               	movwf	4007,c	;volsfr
 37838                           
 37839                           ; BSR set to: 14
 37840  0043F4  81BF               	bsf	191,0,b	;volatile
 37841                           
 37842                           ; BSR set to: 14
 37843                           ;spi.c: 206: SSP2CON1bits.SSPEN = 0;
 37844  0043F6  9A72               	bcf	3954,5,c	;volatile
 37845                           
 37846                           ; BSR set to: 14
 37847                           ;spi.c: 214: TRISDbits.TRISD5 = 1;
 37848  0043F8  8A95               	bsf	3989,5,c	;volatile
 37849                           
 37850                           ; BSR set to: 14
 37851                           ;spi.c: 215: TRISDbits.TRISD4 = 1;
 37852  0043FA  8895               	bsf	3989,4,c	;volatile
 37853                           
 37854                           ; BSR set to: 14
 37855                           ;spi.c: 218: TRISDbits.TRISD6 = 0;
 37856  0043FC  9C95               	bcf	3989,6,c	;volatile
 37857                           
 37858                           ; BSR set to: 14
 37859                           ;spi.c: 219: LATDbits.LD6 = 1;
 37860  0043FE  8C8C               	bsf	3980,6,c	;volatile
 37861                           
 37862                           ; BSR set to: 14
 37863                           ;spi.c: 222: TRISDbits.TRISD2 = 1;
 37864  004400  8495               	bsf	3989,2,c	;volatile
 37865                           
 37866                           ; BSR set to: 14
 37867                           ;spi.c: 228: SSP2STATbits.SMP = 0;
 37868  004402  9E73               	bcf	3955,7,c	;volatile
 37869                           
 37870                           ; BSR set to: 14
 37871                           ;spi.c: 229: SSP2STATbits.CKE = 1;
 37872  004404  8C73               	bsf	3955,6,c	;volatile
 37873                           
 37874                           ; BSR set to: 14
 37875                           ;spi.c: 230: SSP2CON1bits.WCOL = 0;
 37876  004406  9E72               	bcf	3954,7,c	;volatile
 37877                           
 37878                           ; BSR set to: 14
 37879                           ;spi.c: 231: SSP2CON1bits.SSPOV = 0;
 37880  004408  9C72               	bcf	3954,6,c	;volatile
 37881                           
 37882                           ; BSR set to: 14
 37883                           ;spi.c: 232: SSP2CON1bits.CKP = 0;
 37884  00440A  9872               	bcf	3954,4,c	;volatile
 37885                           
 37886                           ; BSR set to: 14
 37887                           ;spi.c: 233: SSP2CON1bits.SSPM =0b0100;
 37888  00440C  5072               	movf	3954,w,c	;volatile
 37889  00440E  0BF0               	andlw	-16
 37890  004410  0904               	iorlw	4
 37891  004412  6E72               	movwf	3954,c	;volatile
 37892                           
 37893                           ; BSR set to: 14
 37894                           ;spi.c: 234: PIR3bits.SSP2IF = 0;
 37895  004414  9EA4               	bcf	4004,7,c	;volatile
 37896                           
 37897                           ; BSR set to: 14
 37898                           ;spi.c: 235: SSP2CON1bits.SSPEN = 1;
 37899  004416  8A72               	bsf	3954,5,c	;volatile
 37900                           
 37901                           ; BSR set to: 14
 37902                           ;spi.c: 238: DMACON1bits.TXINC = 1;
 37903  004418  8A88               	bsf	3976,5,c	;volatile
 37904                           
 37905                           ; BSR set to: 14
 37906                           ;spi.c: 239: DMACON1bits.RXINC = 1;
 37907  00441A  8888               	bsf	3976,4,c	;volatile
 37908                           
 37909                           ; BSR set to: 14
 37910                           ;spi.c: 240: DMACON1bits.DUPLEX1 = 1;
 37911  00441C  8688               	bsf	3976,3,c	;volatile
 37912                           
 37913                           ; BSR set to: 14
 37914                           ;spi.c: 241: DMACON1bits.DUPLEX0 = 0;
 37915  00441E  9488               	bcf	3976,2,c	;volatile
 37916                           
 37917                           ; BSR set to: 14
 37918                           ;spi.c: 242: DMACON1bits.DLYINTEN = 0;
 37919  004420  9288               	bcf	3976,1,c	;volatile
 37920                           
 37921                           ; BSR set to: 14
 37922                           ;spi.c: 244: DMACON2bits.DLYCYC = 0b0000;
 37923  004422  9886               	bcf	3974,4,c	;volatile
 37924  004424  9A86               	bcf	3974,5,c	;volatile
 37925  004426  9C86               	bcf	3974,6,c	;volatile
 37926  004428  9E86               	bcf	3974,7,c	;volatile
 37927                           
 37928                           ; BSR set to: 14
 37929                           ;spi.c: 245: DMACON2bits.INTLVL = 0b0000;
 37930  00442A  9086               	bcf	3974,0,c	;volatile
 37931  00442C  9286               	bcf	3974,1,c	;volatile
 37932  00442E  9486               	bcf	3974,2,c	;volatile
 37933  004430  9686               	bcf	3974,3,c	;volatile
 37934                           
 37935                           ; BSR set to: 14
 37936                           ;spi.c: 248: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
 37937  004432  0E00               	movlw	0
 37938  004434  6E66               	movwf	3942,c	;volatile
 37939                           
 37940                           ; BSR set to: 14
 37941                           ;spi.c: 249: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
 37942  004436  0E3F               	movlw	63
 37943  004438  6E67               	movwf	3943,c	;volatile
 37944                           
 37945                           ; BSR set to: 14
 37946                           ;spi.c: 252: TXADDRH = ((unsigned char)((((uint16_t) _spi_external_tx_buffer)>>8)&0xFF))
      +                          ;
 37947  00443A  0E02               	movlw	high __spi_external_tx_buffer
 37948  00443C  6E6A               	movwf	3946,c	;volatile
 37949                           
 37950                           ; BSR set to: 14
 37951                           ;spi.c: 253: TXADDRL = ((unsigned char)(((uint16_t) _spi_external_tx_buffer)&0xFF));
 37952  00443E  0E40               	movlw	low (low __spi_external_tx_buffer)
 37953  004440  6E6B               	movwf	3947,c	;volatile
 37954                           
 37955                           ; BSR set to: 14
 37956                           ;spi.c: 256: RXADDRH = ((unsigned char)((((uint16_t) _spi_external_rx_buffer)>>8)&0xFF))
      +                          ;
 37957  004442  0E02               	movlw	high __spi_external_rx_buffer
 37958  004444  6E68               	movwf	3944,c	;volatile
 37959                           
 37960                           ; BSR set to: 14
 37961                           ;spi.c: 257: RXADDRL = ((unsigned char)(((uint16_t) _spi_external_rx_buffer)&0xFF));
 37962  004446  0E00               	movlw	low (low __spi_external_rx_buffer)
 37963  004448  6E69               	movwf	3945,c	;volatile
 37964                           
 37965                           ; BSR set to: 14
 37966                           ;spi.c: 259: DMACON1bits.DMAEN = 1;
 37967  00444A  8088               	bsf	3976,0,c	;volatile
 37968                           
 37969                           ; BSR set to: 14
 37970                           ;spi.c: 327: active_configuration = SPI_CONFIGURATION_EXTERNAL;
 37971  00444C  0E01               	movlw	1
 37972  00444E  0100               	movlb	0	; () banked
 37973  004450  6F94               	movwf	_active_configuration& (0+255),b
 37974                           
 37975                           ; BSR set to: 0
 37976                           ;spi.c: 329: }
 37977                           
 37978                           ;spi.c: 328: break;
 37979  004452  0012               	return	
 37980  004454                     l2741:
 37981                           
 37982                           ; BSR set to: 0
 37983  004454  5001               	movf	spi_set_configuration@configuration,w,c
 37984                           
 37985                           ; Switch size 1, requested type "space"
 37986                           ; Number of cases is 2, Range of values is 0 to 1
 37987                           ; switch strategies available:
 37988                           ; Name         Instructions Cycles
 37989                           ; simple_byte            7     4 (average)
 37990                           ;	Chosen strategy is simple_byte
 37991  004456  0A00               	xorlw	0	; case 0
 37992  004458  B4D8               	btfsc	status,2,c
 37993  00445A  D784               	goto	l2742
 37994  00445C  0A01               	xorlw	1	; case 1
 37995  00445E  A4D8               	btfss	status,2,c
 37996  004460  0012               	return	
 37997  004462  D7B2               	goto	l2747
 37998  004464                     __end_of_spi_set_configuration:
 37999                           	opt stack 0
 38000                           tosu	equ	0xFFF
 38001                           tosh	equ	0xFFE
 38002                           tosl	equ	0xFFD
 38003                           pclath	equ	0xFFA
 38004                           tblptru	equ	0xFF8
 38005                           tblptrh	equ	0xFF7
 38006                           tblptrl	equ	0xFF6
 38007                           tablat	equ	0xFF5
 38008                           prodh	equ	0xFF4
 38009                           prodl	equ	0xFF3
 38010                           intcon	equ	0xFF2
 38011                           intcon2	equ	0xFF1
 38012                           intcon3	equ	0xFF0
 38013                           indf0	equ	0xFEF
 38014                           postinc0	equ	0xFEE
 38015                           fsr0h	equ	0xFEA
 38016                           fsr0l	equ	0xFE9
 38017                           wreg	equ	0xFE8
 38018                           indf1	equ	0xFE7
 38019                           postdec1	equ	0xFE5
 38020                           plusw1	equ	0xFE3
 38021                           fsr1h	equ	0xFE2
 38022                           fsr1l	equ	0xFE1
 38023                           indf2	equ	0xFDF
 38024                           postinc2	equ	0xFDE
 38025                           postdec2	equ	0xFDD
 38026                           plusw2	equ	0xFDB
 38027                           fsr2h	equ	0xFDA
 38028                           fsr2l	equ	0xFD9
 38029                           status	equ	0xFD8
 38030                           
 38031 ;; *************** function __flash_partial_read *****************
 38032 ;; Defined at:
 38033 ;;		line 305 in file "flash.c"
 38034 ;; Parameters:    Size  Location     Type
 38035 ;;  page            2   19[COMRAM] unsigned int 
 38036 ;;  start           2   21[COMRAM] unsigned int 
 38037 ;;  length          2   23[COMRAM] unsigned int 
 38038 ;;  data            2   25[COMRAM] PTR unsigned char 
 38039 ;;		 -> _spi_external_tx_buffer(64), file_buffer(50), buffer(512), fat_read_from_file@root(32), 
 38040 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11),
      + 
 38041 ;;		 -> _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@val
      +ue(2), 
 38042 ;;		 -> _get_empty_cluster@value(2), _root_is_available@first_byte(1), msd_buffer(512), RAM(3759), 
 38043 ;; Auto vars:     Size  Location     Type
 38044 ;;  command         4   31[COMRAM] unsigned char [4]
 38045 ;;  address         4   35[COMRAM] unsigned long 
 38046 ;; Return value:  Size  Location     Type
 38047 ;;                  1    wreg      void 
 38048 ;; Registers used:
 38049 ;;		wreg, status,2, status,0, cstack
 38050 ;; Tracked objects:
 38051 ;;		On entry : 0/0
 38052 ;;		On exit  : 0/0
 38053 ;;		Unchanged: 0/0
 38054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38055 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38056 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38057 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38058 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38059 ;;Total ram usage:       20 bytes
 38060 ;; Hardware stack levels used:    1
 38061 ;; Hardware stack levels required when called:    3
 38062 ;; This function calls:
 38063 ;;		__flash_is_busy
 38064 ;;		_spi_tx_rx
 38065 ;; This function is called by:
 38066 ;;		_flash_page_read
 38067 ;;		_flash_partial_read
 38068 ;; This function uses a non-reentrant model
 38069 ;;
 38070                           
 38071                           	psect	text199
 38072  0064C4                     __ptext199:
 38073                           	opt stack 0
 38074  0064C4                     __flash_partial_read:
 38075                           	opt stack 23
 38076                           
 38077                           ;flash.c: 307: uint32_t address;;flash.c: 308: uint8_t command[4];;flash.c: 311: while(_
      +                          flash_is_busy());
 38078                           
 38079                           ;incstack = 0
 38080  0064C4  ECEE  F03D         	call	__flash_is_busy	;wreg free
 38081  0064C8  0900               	iorlw	0
 38082  0064CA  A4D8               	btfss	status,2,c
 38083  0064CC  D7FB               	goto	__flash_partial_read
 38084                           
 38085                           ;flash.c: 314: address = page;
 38086  0064CE  C014  F024         	movff	__flash_partial_read@page,__flash_partial_read@address
 38087  0064D2  C015  F025         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 38088  0064D6  6A26               	clrf	__flash_partial_read@address+2,c
 38089  0064D8  6A27               	clrf	__flash_partial_read@address+3,c
 38090                           
 38091                           ;flash.c: 315: address <<= 9;
 38092  0064DA  0E09               	movlw	9
 38093  0064DC                     u6235:
 38094  0064DC  90D8               	bcf	status,0,c
 38095  0064DE  3624               	rlcf	__flash_partial_read@address,f,c
 38096  0064E0  3625               	rlcf	__flash_partial_read@address+1,f,c
 38097  0064E2  3626               	rlcf	__flash_partial_read@address+2,f,c
 38098  0064E4  3627               	rlcf	__flash_partial_read@address+3,f,c
 38099  0064E6  2EE8               	decfsz	wreg,f,c
 38100  0064E8  D7F9               	goto	u6235
 38101                           
 38102                           ;flash.c: 316: address |= start;
 38103  0064EA  5016               	movf	__flash_partial_read@start,w,c
 38104  0064EC  6E1C               	movwf	??__flash_partial_read& (0+255),c
 38105  0064EE  5017               	movf	__flash_partial_read@start+1,w,c
 38106  0064F0  6E1D               	movwf	(??__flash_partial_read+1)& (0+255),c
 38107  0064F2  6A1E               	clrf	(??__flash_partial_read+2)& (0+255),c
 38108  0064F4  6A1F               	clrf	(??__flash_partial_read+3)& (0+255),c
 38109  0064F6  501C               	movf	??__flash_partial_read,w,c
 38110  0064F8  1224               	iorwf	__flash_partial_read@address,f,c
 38111  0064FA  501D               	movf	??__flash_partial_read+1,w,c
 38112  0064FC  1225               	iorwf	__flash_partial_read@address+1,f,c
 38113  0064FE  501E               	movf	??__flash_partial_read+2,w,c
 38114  006500  1226               	iorwf	__flash_partial_read@address+2,f,c
 38115  006502  501F               	movf	??__flash_partial_read+3,w,c
 38116  006504  1227               	iorwf	__flash_partial_read@address+3,f,c
 38117                           
 38118                           ;flash.c: 319: command[0] = 0x03;
 38119  006506  0E03               	movlw	3
 38120  006508  6E20               	movwf	__flash_partial_read@command,c
 38121                           
 38122                           ;flash.c: 320: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 38123  00650A  C026  F021         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 38124                           
 38125                           ;flash.c: 321: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 38126  00650E  5025               	movf	__flash_partial_read@address+1,w,c
 38127  006510  6E22               	movwf	__flash_partial_read@command+2,c
 38128                           
 38129                           ;flash.c: 322: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 38130  006512  C024  F023         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 38131                           
 38132                           ;flash.c: 325: spi_tx_rx(command, 4, data, length);
 38133  006516  0E20               	movlw	low __flash_partial_read@command
 38134  006518  6E01               	movwf	spi_tx_rx@command,c
 38135  00651A  0E00               	movlw	high __flash_partial_read@command
 38136  00651C  6E02               	movwf	spi_tx_rx@command+1,c
 38137  00651E  0E00               	movlw	0
 38138  006520  6E04               	movwf	spi_tx_rx@command_length+1,c
 38139  006522  0E04               	movlw	4
 38140  006524  6E03               	movwf	spi_tx_rx@command_length,c
 38141  006526  C01A  F005         	movff	__flash_partial_read@data,spi_tx_rx@data
 38142  00652A  C01B  F006         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 38143  00652E  C018  F007         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 38144  006532  C019  F008         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 38145  006536  ECF4  F02E         	call	_spi_tx_rx	;wreg free
 38146  00653A  0012               	return		;funcret
 38147  00653C                     __end_of__flash_partial_read:
 38148                           	opt stack 0
 38149                           tosu	equ	0xFFF
 38150                           tosh	equ	0xFFE
 38151                           tosl	equ	0xFFD
 38152                           pclath	equ	0xFFA
 38153                           tblptru	equ	0xFF8
 38154                           tblptrh	equ	0xFF7
 38155                           tblptrl	equ	0xFF6
 38156                           tablat	equ	0xFF5
 38157                           prodh	equ	0xFF4
 38158                           prodl	equ	0xFF3
 38159                           intcon	equ	0xFF2
 38160                           intcon2	equ	0xFF1
 38161                           intcon3	equ	0xFF0
 38162                           indf0	equ	0xFEF
 38163                           postinc0	equ	0xFEE
 38164                           fsr0h	equ	0xFEA
 38165                           fsr0l	equ	0xFE9
 38166                           wreg	equ	0xFE8
 38167                           indf1	equ	0xFE7
 38168                           postdec1	equ	0xFE5
 38169                           plusw1	equ	0xFE3
 38170                           fsr1h	equ	0xFE2
 38171                           fsr1l	equ	0xFE1
 38172                           indf2	equ	0xFDF
 38173                           postinc2	equ	0xFDE
 38174                           postdec2	equ	0xFDD
 38175                           plusw2	equ	0xFDB
 38176                           fsr2h	equ	0xFDA
 38177                           fsr2l	equ	0xFD9
 38178                           status	equ	0xFD8
 38179                           
 38180 ;; *************** function __flash_is_busy *****************
 38181 ;; Defined at:
 38182 ;;		line 277 in file "flash.c"
 38183 ;; Parameters:    Size  Location     Type
 38184 ;;		None
 38185 ;; Auto vars:     Size  Location     Type
 38186 ;;  status          2   17[COMRAM] unsigned int 
 38187 ;; Return value:  Size  Location     Type
 38188 ;;                  1    wreg      unsigned char 
 38189 ;; Registers used:
 38190 ;;		wreg, status,2, status,0, cstack
 38191 ;; Tracked objects:
 38192 ;;		On entry : 0/0
 38193 ;;		On exit  : 0/0
 38194 ;;		Unchanged: 0/0
 38195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38197 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38199 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38200 ;;Total ram usage:        2 bytes
 38201 ;; Hardware stack levels used:    1
 38202 ;; Hardware stack levels required when called:    2
 38203 ;; This function calls:
 38204 ;;		__flash_get_status
 38205 ;;		__flash_wakeup
 38206 ;; This function is called by:
 38207 ;;		__flash_set_page_size
 38208 ;;		__flash_copy_page_to_buffer
 38209 ;;		__flash_compare_page_to_buffer
 38210 ;;		__flash_write_to_buffer
 38211 ;;		__flash_write_page_from_buffer
 38212 ;;		__flash_partial_read
 38213 ;;		_flash_is_busy
 38214 ;;		__flash_erase_page
 38215 ;;		_flash_set_power_state
 38216 ;; This function uses a non-reentrant model
 38217 ;;
 38218                           
 38219                           	psect	text200
 38220  007BDC                     __ptext200:
 38221                           	opt stack 0
 38222  007BDC                     __flash_is_busy:
 38223                           	opt stack 25
 38224                           
 38225                           ;flash.c: 279: uint16_t status;;flash.c: 282: if(power_state!=FLASH_POWER_STATE_NORMAL)
 38226                           
 38227                           ;incstack = 0
 38228  007BDC  0100               	movlb	0	; () banked
 38229  007BDE  5197               	movf	_power_state& (0+255),w,b
 38230  007BE0  A4D8               	btfss	status,2,c
 38231                           
 38232                           ; BSR set to: 0
 38233                           ;flash.c: 283: {;flash.c: 284: _flash_wakeup();
 38234  007BE2  ECA3  F038         	call	__flash_wakeup	;wreg free
 38235                           
 38236                           ;flash.c: 285: };flash.c: 288: status = _flash_get_status();
 38237  007BE6  EC82  F03C         	call	__flash_get_status	;wreg free
 38238  007BEA  C00D  F012         	movff	?__flash_get_status,__flash_is_busy@status
 38239  007BEE  C00E  F013         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 38240                           
 38241                           ;flash.c: 291: if(status & 0b0000000010000000)
 38242  007BF2  AE12               	btfss	__flash_is_busy@status,7,c
 38243  007BF4  D002               	goto	l1740
 38244                           
 38245                           ;flash.c: 292: {;flash.c: 294: return 0;
 38246  007BF6  0E00               	movlw	0
 38247                           
 38248                           ;flash.c: 295: }
 38249  007BF8  0012               	return	
 38250  007BFA                     l1740:
 38251                           
 38252                           ;flash.c: 296: else;flash.c: 297: {;flash.c: 299: return 1;
 38253  007BFA  0E01               	movlw	1
 38254  007BFC  0012               	return	
 38255  007BFE                     __end_of__flash_is_busy:
 38256                           	opt stack 0
 38257                           tosu	equ	0xFFF
 38258                           tosh	equ	0xFFE
 38259                           tosl	equ	0xFFD
 38260                           pclath	equ	0xFFA
 38261                           tblptru	equ	0xFF8
 38262                           tblptrh	equ	0xFF7
 38263                           tblptrl	equ	0xFF6
 38264                           tablat	equ	0xFF5
 38265                           prodh	equ	0xFF4
 38266                           prodl	equ	0xFF3
 38267                           intcon	equ	0xFF2
 38268                           intcon2	equ	0xFF1
 38269                           intcon3	equ	0xFF0
 38270                           indf0	equ	0xFEF
 38271                           postinc0	equ	0xFEE
 38272                           fsr0h	equ	0xFEA
 38273                           fsr0l	equ	0xFE9
 38274                           wreg	equ	0xFE8
 38275                           indf1	equ	0xFE7
 38276                           postdec1	equ	0xFE5
 38277                           plusw1	equ	0xFE3
 38278                           fsr1h	equ	0xFE2
 38279                           fsr1l	equ	0xFE1
 38280                           indf2	equ	0xFDF
 38281                           postinc2	equ	0xFDE
 38282                           postdec2	equ	0xFDD
 38283                           plusw2	equ	0xFDB
 38284                           fsr2h	equ	0xFDA
 38285                           fsr2l	equ	0xFD9
 38286                           status	equ	0xFD8
 38287                           
 38288 ;; *************** function __flash_wakeup *****************
 38289 ;; Defined at:
 38290 ;;		line 124 in file "flash.c"
 38291 ;; Parameters:    Size  Location     Type
 38292 ;;		None
 38293 ;; Auto vars:     Size  Location     Type
 38294 ;;  command         1    8[COMRAM] unsigned char 
 38295 ;; Return value:  Size  Location     Type
 38296 ;;                  1    wreg      void 
 38297 ;; Registers used:
 38298 ;;		wreg, status,2, status,0, cstack
 38299 ;; Tracked objects:
 38300 ;;		On entry : 0/0
 38301 ;;		On exit  : 0/0
 38302 ;;		Unchanged: 0/0
 38303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38305 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38307 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38308 ;;Total ram usage:        1 bytes
 38309 ;; Hardware stack levels used:    1
 38310 ;; Hardware stack levels required when called:    1
 38311 ;; This function calls:
 38312 ;;		_spi_tx
 38313 ;; This function is called by:
 38314 ;;		__flash_is_busy
 38315 ;;		_flash_set_power_state
 38316 ;; This function uses a non-reentrant model
 38317 ;;
 38318                           
 38319                           	psect	text201
 38320  007146                     __ptext201:
 38321                           	opt stack 0
 38322  007146                     __flash_wakeup:
 38323                           	opt stack 25
 38324                           
 38325                           ;flash.c: 126: uint8_t command;;flash.c: 128: switch(power_state)
 38326                           
 38327                           ;incstack = 0
 38328  007146  D021               	goto	l1689
 38329  007148                     
 38330                           ;flash.c: 131: command = 0xAB;
 38331  007148  0EAB               	movlw	171
 38332  00714A  6E09               	movwf	__flash_wakeup@command,c
 38333                           
 38334                           ;flash.c: 132: spi_tx(&command, 1);
 38335  00714C  0E09               	movlw	low __flash_wakeup@command
 38336  00714E  6E01               	movwf	spi_tx@data,c
 38337  007150  0E00               	movlw	high __flash_wakeup@command
 38338  007152  6E02               	movwf	spi_tx@data+1,c
 38339  007154  0E00               	movlw	0
 38340  007156  6E04               	movwf	spi_tx@length+1,c
 38341  007158  0E01               	movlw	1
 38342  00715A  6E03               	movwf	spi_tx@length,c
 38343  00715C  ECCB  F037         	call	_spi_tx	;wreg free
 38344                           
 38345                           ;flash.c: 133: _delay((unsigned long)((35)*(8000000/4000000.0)));
 38346  007160  0E17               	movlw	23
 38347  007162                     u11927:
 38348  007162  2EE8               	decfsz	wreg,f,c
 38349  007164  D7FE               	bra	u11927
 38350  007166  F000               	nop	
 38351                           
 38352                           ;flash.c: 134: power_state = FLASH_POWER_STATE_NORMAL;
 38353  007168  0E00               	movlw	0
 38354  00716A  0100               	movlb	0	; () banked
 38355  00716C  6F97               	movwf	_power_state& (0+255),b
 38356                           
 38357                           ;flash.c: 135: break;
 38358  00716E  0012               	return	
 38359  007170                     l1692:
 38360                           
 38361                           ; BSR set to: 0
 38362                           ;flash.c: 140: LATDbits.LD7 = 0;
 38363  007170  9E8C               	bcf	3980,7,c	;volatile
 38364                           
 38365                           ; BSR set to: 0
 38366                           ;flash.c: 141: _delay((unsigned long)((20)*(8000000/4000000.0)));
 38367  007172  0E0D               	movlw	13
 38368  007174                     u11937:
 38369  007174  2EE8               	decfsz	wreg,f,c
 38370  007176  D7FE               	bra	u11937
 38371  007178  F000               	nop	
 38372                           
 38373                           ;flash.c: 142: LATDbits.LD7 = 1;
 38374  00717A  8E8C               	bsf	3980,7,c	;volatile
 38375                           
 38376                           ;flash.c: 143: _delay((unsigned long)((120)*(8000000/4000000.0)));
 38377  00717C  0E50               	movlw	80
 38378  00717E                     u11947:
 38379  00717E  2EE8               	decfsz	wreg,f,c
 38380  007180  D7FE               	bra	u11947
 38381                           
 38382                           ;flash.c: 144: power_state = FLASH_POWER_STATE_NORMAL;
 38383  007182  0E00               	movlw	0
 38384  007184  0100               	movlb	0	; () banked
 38385  007186  6F97               	movwf	_power_state& (0+255),b
 38386                           
 38387                           ; BSR set to: 0
 38388                           ;flash.c: 146: }
 38389                           
 38390                           ;flash.c: 145: break;
 38391  007188  0012               	return	
 38392  00718A                     l1689:
 38393                           
 38394                           ; BSR set to: 0
 38395  00718A  0100               	movlb	0	; () banked
 38396  00718C  5197               	movf	_power_state& (0+255),w,b
 38397                           
 38398                           ; Switch size 1, requested type "space"
 38399                           ; Number of cases is 2, Range of values is 1 to 2
 38400                           ; switch strategies available:
 38401                           ; Name         Instructions Cycles
 38402                           ; simple_byte            7     4 (average)
 38403                           ;	Chosen strategy is simple_byte
 38404  00718E  0A01               	xorlw	1	; case 1
 38405  007190  B4D8               	btfsc	status,2,c
 38406  007192  D7DA               	goto	l1690
 38407  007194  0A03               	xorlw	3	; case 2
 38408  007196  A4D8               	btfss	status,2,c
 38409  007198  0012               	return	
 38410  00719A  D7EA               	goto	l1692
 38411  00719C                     __end_of__flash_wakeup:
 38412                           	opt stack 0
 38413                           tosu	equ	0xFFF
 38414                           tosh	equ	0xFFE
 38415                           tosl	equ	0xFFD
 38416                           pclath	equ	0xFFA
 38417                           tblptru	equ	0xFF8
 38418                           tblptrh	equ	0xFF7
 38419                           tblptrl	equ	0xFF6
 38420                           tablat	equ	0xFF5
 38421                           prodh	equ	0xFF4
 38422                           prodl	equ	0xFF3
 38423                           intcon	equ	0xFF2
 38424                           intcon2	equ	0xFF1
 38425                           intcon3	equ	0xFF0
 38426                           indf0	equ	0xFEF
 38427                           postinc0	equ	0xFEE
 38428                           fsr0h	equ	0xFEA
 38429                           fsr0l	equ	0xFE9
 38430                           wreg	equ	0xFE8
 38431                           indf1	equ	0xFE7
 38432                           postdec1	equ	0xFE5
 38433                           plusw1	equ	0xFE3
 38434                           fsr1h	equ	0xFE2
 38435                           fsr1l	equ	0xFE1
 38436                           indf2	equ	0xFDF
 38437                           postinc2	equ	0xFDE
 38438                           postdec2	equ	0xFDD
 38439                           plusw2	equ	0xFDB
 38440                           fsr2h	equ	0xFDA
 38441                           fsr2l	equ	0xFD9
 38442                           status	equ	0xFD8
 38443                           
 38444 ;; *************** function _spi_tx *****************
 38445 ;; Defined at:
 38446 ;;		line 340 in file "spi.c"
 38447 ;; Parameters:    Size  Location     Type
 38448 ;;  data            2    0[COMRAM] PTR unsigned char 
 38449 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 38450 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 38451 ;;  length          2    2[COMRAM] unsigned int 
 38452 ;; Auto vars:     Size  Location     Type
 38453 ;;		None
 38454 ;; Return value:  Size  Location     Type
 38455 ;;                  1    wreg      void 
 38456 ;; Registers used:
 38457 ;;		wreg, status,2, status,0
 38458 ;; Tracked objects:
 38459 ;;		On entry : 0/0
 38460 ;;		On exit  : 0/0
 38461 ;;		Unchanged: 0/0
 38462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38463 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38465 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38466 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38467 ;;Total ram usage:        8 bytes
 38468 ;; Hardware stack levels used:    1
 38469 ;; This function calls:
 38470 ;;		Nothing
 38471 ;; This function is called by:
 38472 ;;		__flash_set_page_size
 38473 ;;		__flash_wakeup
 38474 ;;		__flash_copy_page_to_buffer
 38475 ;;		__flash_compare_page_to_buffer
 38476 ;;		__flash_write_page_from_buffer
 38477 ;;		__flash_erase_page
 38478 ;;		_flash_set_power_state
 38479 ;; This function uses a non-reentrant model
 38480 ;;
 38481                           
 38482                           	psect	text202
 38483  006F96                     __ptext202:
 38484                           	opt stack 0
 38485  006F96                     _spi_tx:
 38486                           	opt stack 27
 38487                           
 38488                           ;spi.c: 343: DMACON1bits.SSCON1 = 0;
 38489                           
 38490                           ; BSR set to: 0
 38491                           ;incstack = 0
 38492  006F96  9E88               	bcf	3976,7,c	;volatile
 38493                           
 38494                           ;spi.c: 344: DMACON1bits.SSCON0 = 0;
 38495  006F98  9C88               	bcf	3976,6,c	;volatile
 38496                           
 38497                           ;spi.c: 346: DMACON1bits.TXINC = 1;
 38498  006F9A  8A88               	bsf	3976,5,c	;volatile
 38499                           
 38500                           ;spi.c: 348: DMACON1bits.RXINC = 0;
 38501  006F9C  9888               	bcf	3976,4,c	;volatile
 38502                           
 38503                           ;spi.c: 350: DMACON1bits.DUPLEX1 = 0;
 38504  006F9E  9688               	bcf	3976,3,c	;volatile
 38505                           
 38506                           ;spi.c: 351: DMACON1bits.DUPLEX0 = 1;
 38507  006FA0  8488               	bsf	3976,2,c	;volatile
 38508                           
 38509                           ;spi.c: 353: DMACON1bits.DLYINTEN = 0;
 38510  006FA2  9288               	bcf	3976,1,c	;volatile
 38511                           
 38512                           ;spi.c: 355: DMACON2bits.DLYCYC = 0b0000;
 38513  006FA4  9886               	bcf	3974,4,c	;volatile
 38514  006FA6  9A86               	bcf	3974,5,c	;volatile
 38515  006FA8  9C86               	bcf	3974,6,c	;volatile
 38516  006FAA  9E86               	bcf	3974,7,c	;volatile
 38517                           
 38518                           ;spi.c: 357: DMACON2bits.INTLVL = 0b0000;
 38519  006FAC  9086               	bcf	3974,0,c	;volatile
 38520  006FAE  9286               	bcf	3974,1,c	;volatile
 38521  006FB0  9486               	bcf	3974,2,c	;volatile
 38522  006FB2  9686               	bcf	3974,3,c	;volatile
 38523                           
 38524                           ;spi.c: 360: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 38525  006FB4  5002               	movf	spi_tx@data+1,w,c
 38526  006FB6  6E6A               	movwf	3946,c	;volatile
 38527                           
 38528                           ;spi.c: 361: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 38529  006FB8  C001  FF6B         	movff	spi_tx@data,3947	;volatile
 38530                           
 38531                           ;spi.c: 364: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 38532  006FBC  0EFF               	movlw	255
 38533  006FBE  6E05               	movwf	??_spi_tx& (0+255),c
 38534  006FC0  0EFF               	movlw	255
 38535  006FC2  6E06               	movwf	(??_spi_tx+1)& (0+255),c
 38536  006FC4  C003  F007         	movff	spi_tx@length,??_spi_tx+2
 38537  006FC8  C004  F008         	movff	spi_tx@length+1,??_spi_tx+3
 38538  006FCC  5005               	movf	??_spi_tx,w,c
 38539  006FCE  2607               	addwf	??_spi_tx+2,f,c
 38540  006FD0  5006               	movf	??_spi_tx+1,w,c
 38541  006FD2  2208               	addwfc	??_spi_tx+3,f,c
 38542  006FD4  C008  F007         	movff	??_spi_tx+3,??_spi_tx+2
 38543  006FD8  6A08               	clrf	??_spi_tx+3,c
 38544  006FDA  5007               	movf	??_spi_tx+2,w,c
 38545  006FDC  6E66               	movwf	3942,c	;volatile
 38546                           
 38547                           ;spi.c: 365: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 38548  006FDE  0403               	decf	spi_tx@length,w,c
 38549  006FE0  6E67               	movwf	3943,c	;volatile
 38550                           
 38551                           ;spi.c: 368: LATDbits.LD7 = 0;
 38552  006FE2  9E8C               	bcf	3980,7,c	;volatile
 38553                           
 38554                           ;spi.c: 369: DMACON1bits.DMAEN = 1;
 38555  006FE4  8088               	bsf	3976,0,c	;volatile
 38556  006FE6  B088               	btfsc	3976,0,c	;volatile
 38557  006FE8  D7FE               	goto	l2755
 38558                           
 38559                           ;spi.c: 371: LATDbits.LD7 = 1;
 38560  006FEA  8E8C               	bsf	3980,7,c	;volatile
 38561  006FEC  0012               	return		;funcret
 38562  006FEE                     __end_of_spi_tx:
 38563                           	opt stack 0
 38564                           tosu	equ	0xFFF
 38565                           tosh	equ	0xFFE
 38566                           tosl	equ	0xFFD
 38567                           pclath	equ	0xFFA
 38568                           tblptru	equ	0xFF8
 38569                           tblptrh	equ	0xFF7
 38570                           tblptrl	equ	0xFF6
 38571                           tablat	equ	0xFF5
 38572                           prodh	equ	0xFF4
 38573                           prodl	equ	0xFF3
 38574                           intcon	equ	0xFF2
 38575                           intcon2	equ	0xFF1
 38576                           intcon3	equ	0xFF0
 38577                           indf0	equ	0xFEF
 38578                           postinc0	equ	0xFEE
 38579                           fsr0h	equ	0xFEA
 38580                           fsr0l	equ	0xFE9
 38581                           wreg	equ	0xFE8
 38582                           indf1	equ	0xFE7
 38583                           postdec1	equ	0xFE5
 38584                           plusw1	equ	0xFE3
 38585                           fsr1h	equ	0xFE2
 38586                           fsr1l	equ	0xFE1
 38587                           indf2	equ	0xFDF
 38588                           postinc2	equ	0xFDE
 38589                           postdec2	equ	0xFDD
 38590                           plusw2	equ	0xFDB
 38591                           fsr2h	equ	0xFDA
 38592                           fsr2l	equ	0xFD9
 38593                           status	equ	0xFD8
 38594                           
 38595 ;; *************** function __flash_get_status *****************
 38596 ;; Defined at:
 38597 ;;		line 113 in file "flash.c"
 38598 ;; Parameters:    Size  Location     Type
 38599 ;;		None
 38600 ;; Auto vars:     Size  Location     Type
 38601 ;;  status          2   15[COMRAM] unsigned int 
 38602 ;;  command         1   14[COMRAM] unsigned char 
 38603 ;; Return value:  Size  Location     Type
 38604 ;;                  2   12[COMRAM] unsigned int 
 38605 ;; Registers used:
 38606 ;;		wreg, status,2, status,0, cstack
 38607 ;; Tracked objects:
 38608 ;;		On entry : 0/0
 38609 ;;		On exit  : 0/0
 38610 ;;		Unchanged: 0/0
 38611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38612 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38613 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38615 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38616 ;;Total ram usage:        5 bytes
 38617 ;; Hardware stack levels used:    1
 38618 ;; Hardware stack levels required when called:    1
 38619 ;; This function calls:
 38620 ;;		_spi_tx_rx
 38621 ;; This function is called by:
 38622 ;;		__flash_compare_page_to_buffer
 38623 ;;		__flash_is_busy
 38624 ;; This function uses a non-reentrant model
 38625 ;;
 38626                           
 38627                           	psect	text203
 38628  007904                     __ptext203:
 38629                           	opt stack 0
 38630  007904                     __flash_get_status:
 38631                           	opt stack 25
 38632                           
 38633                           ;flash.c: 117: uint8_t command = 0xD7;
 38634                           
 38635                           ;incstack = 0
 38636  007904  0ED7               	movlw	215
 38637  007906  6E0F               	movwf	__flash_get_status@command,c
 38638                           
 38639                           ;flash.c: 118: uint16_t status;;flash.c: 119: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 38640  007908  0E0F               	movlw	low __flash_get_status@command
 38641  00790A  6E01               	movwf	spi_tx_rx@command,c
 38642  00790C  0E00               	movlw	high __flash_get_status@command
 38643  00790E  6E02               	movwf	spi_tx_rx@command+1,c
 38644  007910  0E00               	movlw	0
 38645  007912  6E04               	movwf	spi_tx_rx@command_length+1,c
 38646  007914  0E01               	movlw	1
 38647  007916  6E03               	movwf	spi_tx_rx@command_length,c
 38648  007918  0E10               	movlw	low __flash_get_status@status
 38649  00791A  6E05               	movwf	spi_tx_rx@data,c
 38650  00791C  0E00               	movlw	high __flash_get_status@status
 38651  00791E  6E06               	movwf	spi_tx_rx@data+1,c
 38652  007920  0E00               	movlw	0
 38653  007922  6E08               	movwf	spi_tx_rx@data_length+1,c
 38654  007924  0E02               	movlw	2
 38655  007926  6E07               	movwf	spi_tx_rx@data_length,c
 38656  007928  ECF4  F02E         	call	_spi_tx_rx	;wreg free
 38657                           
 38658                           ;flash.c: 120: return status;
 38659  00792C  C010  F00D         	movff	__flash_get_status@status,?__flash_get_status
 38660  007930  C011  F00E         	movff	__flash_get_status@status+1,?__flash_get_status+1
 38661  007934  0012               	return	
 38662  007936                     __end_of__flash_get_status:
 38663                           	opt stack 0
 38664                           tosu	equ	0xFFF
 38665                           tosh	equ	0xFFE
 38666                           tosl	equ	0xFFD
 38667                           pclath	equ	0xFFA
 38668                           tblptru	equ	0xFF8
 38669                           tblptrh	equ	0xFF7
 38670                           tblptrl	equ	0xFF6
 38671                           tablat	equ	0xFF5
 38672                           prodh	equ	0xFF4
 38673                           prodl	equ	0xFF3
 38674                           intcon	equ	0xFF2
 38675                           intcon2	equ	0xFF1
 38676                           intcon3	equ	0xFF0
 38677                           indf0	equ	0xFEF
 38678                           postinc0	equ	0xFEE
 38679                           fsr0h	equ	0xFEA
 38680                           fsr0l	equ	0xFE9
 38681                           wreg	equ	0xFE8
 38682                           indf1	equ	0xFE7
 38683                           postdec1	equ	0xFE5
 38684                           plusw1	equ	0xFE3
 38685                           fsr1h	equ	0xFE2
 38686                           fsr1l	equ	0xFE1
 38687                           indf2	equ	0xFDF
 38688                           postinc2	equ	0xFDE
 38689                           postdec2	equ	0xFDD
 38690                           plusw2	equ	0xFDB
 38691                           fsr2h	equ	0xFDA
 38692                           fsr2l	equ	0xFD9
 38693                           status	equ	0xFD8
 38694                           
 38695 ;; *************** function _spi_tx_rx *****************
 38696 ;; Defined at:
 38697 ;;		line 431 in file "spi.c"
 38698 ;; Parameters:    Size  Location     Type
 38699 ;;  command         2    0[COMRAM] PTR unsigned char 
 38700 ;;		 -> _flash_partial_read@command(4), _flash_get_status@command(1), 
 38701 ;;  command_leng    2    2[COMRAM] unsigned int 
 38702 ;;  data            2    4[COMRAM] PTR unsigned char 
 38703 ;;		 -> _spi_external_tx_buffer(64), file_buffer(50), buffer(512), fat_read_from_file@root(32), 
 38704 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11),
      + 
 38705 ;;		 -> _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@val
      +ue(2), 
 38706 ;;		 -> _get_empty_cluster@value(2), _root_is_available@first_byte(1), _flash_get_status@status(2), msd_buffer(512), 
 38707 ;;		 -> RAM(3759), 
 38708 ;;  data_length     2    6[COMRAM] unsigned int 
 38709 ;; Auto vars:     Size  Location     Type
 38710 ;;		None
 38711 ;; Return value:  Size  Location     Type
 38712 ;;                  1    wreg      void 
 38713 ;; Registers used:
 38714 ;;		wreg, status,2, status,0
 38715 ;; Tracked objects:
 38716 ;;		On entry : 0/0
 38717 ;;		On exit  : 0/0
 38718 ;;		Unchanged: 0/0
 38719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38720 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38722 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38723 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38724 ;;Total ram usage:       12 bytes
 38725 ;; Hardware stack levels used:    1
 38726 ;; This function calls:
 38727 ;;		Nothing
 38728 ;; This function is called by:
 38729 ;;		__flash_get_status
 38730 ;;		__flash_partial_read
 38731 ;; This function uses a non-reentrant model
 38732 ;;
 38733                           
 38734                           	psect	text204
 38735  005DE8                     __ptext204:
 38736                           	opt stack 0
 38737  005DE8                     _spi_tx_rx:
 38738                           	opt stack 25
 38739                           
 38740                           ;spi.c: 434: DMACON1bits.SSCON1 = 0;
 38741                           
 38742                           ;incstack = 0
 38743  005DE8  9E88               	bcf	3976,7,c	;volatile
 38744                           
 38745                           ;spi.c: 435: DMACON1bits.SSCON0 = 0;
 38746  005DEA  9C88               	bcf	3976,6,c	;volatile
 38747                           
 38748                           ;spi.c: 437: DMACON1bits.TXINC = 1;
 38749  005DEC  8A88               	bsf	3976,5,c	;volatile
 38750                           
 38751                           ;spi.c: 439: DMACON1bits.RXINC = 0;
 38752  005DEE  9888               	bcf	3976,4,c	;volatile
 38753                           
 38754                           ;spi.c: 441: DMACON1bits.DUPLEX1 = 0;
 38755  005DF0  9688               	bcf	3976,3,c	;volatile
 38756                           
 38757                           ;spi.c: 442: DMACON1bits.DUPLEX0 = 1;
 38758  005DF2  8488               	bsf	3976,2,c	;volatile
 38759                           
 38760                           ;spi.c: 444: DMACON1bits.DLYINTEN = 0;
 38761  005DF4  9288               	bcf	3976,1,c	;volatile
 38762                           
 38763                           ;spi.c: 446: DMACON2bits.DLYCYC = 0b0000;
 38764  005DF6  9886               	bcf	3974,4,c	;volatile
 38765  005DF8  9A86               	bcf	3974,5,c	;volatile
 38766  005DFA  9C86               	bcf	3974,6,c	;volatile
 38767  005DFC  9E86               	bcf	3974,7,c	;volatile
 38768                           
 38769                           ;spi.c: 448: DMACON2bits.INTLVL = 0b0000;
 38770  005DFE  9086               	bcf	3974,0,c	;volatile
 38771  005E00  9286               	bcf	3974,1,c	;volatile
 38772  005E02  9486               	bcf	3974,2,c	;volatile
 38773  005E04  9686               	bcf	3974,3,c	;volatile
 38774                           
 38775                           ;spi.c: 451: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 38776  005E06  5002               	movf	spi_tx_rx@command+1,w,c
 38777  005E08  6E6A               	movwf	3946,c	;volatile
 38778                           
 38779                           ;spi.c: 452: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 38780  005E0A  C001  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 38781                           
 38782                           ;spi.c: 455: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 38783  005E0E  0EFF               	movlw	255
 38784  005E10  6E09               	movwf	??_spi_tx_rx& (0+255),c
 38785  005E12  0EFF               	movlw	255
 38786  005E14  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 38787  005E16  C003  F00B         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 38788  005E1A  C004  F00C         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 38789  005E1E  5009               	movf	??_spi_tx_rx,w,c
 38790  005E20  260B               	addwf	??_spi_tx_rx+2,f,c
 38791  005E22  500A               	movf	??_spi_tx_rx+1,w,c
 38792  005E24  220C               	addwfc	??_spi_tx_rx+3,f,c
 38793  005E26  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 38794  005E2A  6A0C               	clrf	??_spi_tx_rx+3,c
 38795  005E2C  500B               	movf	??_spi_tx_rx+2,w,c
 38796  005E2E  6E66               	movwf	3942,c	;volatile
 38797                           
 38798                           ;spi.c: 456: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 38799  005E30  0403               	decf	spi_tx_rx@command_length,w,c
 38800  005E32  6E67               	movwf	3943,c	;volatile
 38801                           
 38802                           ;spi.c: 459: LATDbits.LD7 = 0;
 38803  005E34  9E8C               	bcf	3980,7,c	;volatile
 38804                           
 38805                           ;spi.c: 462: DMACON1bits.DMAEN = 1;
 38806  005E36  8088               	bsf	3976,0,c	;volatile
 38807  005E38  B088               	btfsc	3976,0,c	;volatile
 38808  005E3A  D7FE               	goto	l2770
 38809                           
 38810                           ;spi.c: 466: DMACON1bits.TXINC = 0;
 38811  005E3C  9A88               	bcf	3976,5,c	;volatile
 38812                           
 38813                           ;spi.c: 468: DMACON1bits.RXINC = 1;
 38814  005E3E  8888               	bsf	3976,4,c	;volatile
 38815                           
 38816                           ;spi.c: 470: DMACON1bits.DUPLEX1 = 0;
 38817  005E40  9688               	bcf	3976,3,c	;volatile
 38818                           
 38819                           ;spi.c: 471: DMACON1bits.DUPLEX0 = 0;
 38820  005E42  9488               	bcf	3976,2,c	;volatile
 38821                           
 38822                           ;spi.c: 474: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 38823  005E44  5006               	movf	spi_tx_rx@data+1,w,c
 38824  005E46  6E68               	movwf	3944,c	;volatile
 38825                           
 38826                           ;spi.c: 475: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 38827  005E48  C005  FF69         	movff	spi_tx_rx@data,3945	;volatile
 38828                           
 38829                           ;spi.c: 478: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 38830  005E4C  0EFF               	movlw	255
 38831  005E4E  6E09               	movwf	??_spi_tx_rx& (0+255),c
 38832  005E50  0EFF               	movlw	255
 38833  005E52  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 38834  005E54  C007  F00B         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 38835  005E58  C008  F00C         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 38836  005E5C  5009               	movf	??_spi_tx_rx,w,c
 38837  005E5E  260B               	addwf	??_spi_tx_rx+2,f,c
 38838  005E60  500A               	movf	??_spi_tx_rx+1,w,c
 38839  005E62  220C               	addwfc	??_spi_tx_rx+3,f,c
 38840  005E64  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 38841  005E68  6A0C               	clrf	??_spi_tx_rx+3,c
 38842  005E6A  500B               	movf	??_spi_tx_rx+2,w,c
 38843  005E6C  6E66               	movwf	3942,c	;volatile
 38844                           
 38845                           ;spi.c: 479: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 38846  005E6E  0407               	decf	spi_tx_rx@data_length,w,c
 38847  005E70  6E67               	movwf	3943,c	;volatile
 38848                           
 38849                           ;spi.c: 482: DMACON1bits.DMAEN = 1;
 38850  005E72  8088               	bsf	3976,0,c	;volatile
 38851  005E74  B088               	btfsc	3976,0,c	;volatile
 38852  005E76  D7FE               	goto	l2773
 38853                           
 38854                           ;spi.c: 486: LATDbits.LD7 = 1;
 38855  005E78  8E8C               	bsf	3980,7,c	;volatile
 38856  005E7A  0012               	return		;funcret
 38857  005E7C                     __end_of_spi_tx_rx:
 38858                           	opt stack 0
 38859                           tosu	equ	0xFFF
 38860                           tosh	equ	0xFFE
 38861                           tosl	equ	0xFFD
 38862                           pclath	equ	0xFFA
 38863                           tblptru	equ	0xFF8
 38864                           tblptrh	equ	0xFF7
 38865                           tblptrl	equ	0xFF6
 38866                           tablat	equ	0xFF5
 38867                           prodh	equ	0xFF4
 38868                           prodl	equ	0xFF3
 38869                           intcon	equ	0xFF2
 38870                           intcon2	equ	0xFF1
 38871                           intcon3	equ	0xFF0
 38872                           indf0	equ	0xFEF
 38873                           postinc0	equ	0xFEE
 38874                           fsr0h	equ	0xFEA
 38875                           fsr0l	equ	0xFE9
 38876                           wreg	equ	0xFE8
 38877                           indf1	equ	0xFE7
 38878                           postdec1	equ	0xFE5
 38879                           plusw1	equ	0xFE3
 38880                           fsr1h	equ	0xFE2
 38881                           fsr1l	equ	0xFE1
 38882                           indf2	equ	0xFDF
 38883                           postinc2	equ	0xFDE
 38884                           postdec2	equ	0xFDD
 38885                           plusw2	equ	0xFDB
 38886                           fsr2h	equ	0xFDA
 38887                           fsr2l	equ	0xFD9
 38888                           status	equ	0xFD8
 38889                           
 38890 ;; *************** function _USBTransferOnePacket *****************
 38891 ;; Defined at:
 38892 ;;		line 995 in file "usb_device.c"
 38893 ;; Parameters:    Size  Location     Type
 38894 ;;  ep              1    wreg     unsigned char 
 38895 ;;  dir             1    0[COMRAM] unsigned char 
 38896 ;;  data            2    1[COMRAM] PTR unsigned char 
 38897 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 38898 ;;		 -> msd_cbw(31), NULL(0), 
 38899 ;;  len             1    3[COMRAM] unsigned char 
 38900 ;; Auto vars:     Size  Location     Type
 38901 ;;  ep              1    8[COMRAM] unsigned char 
 38902 ;;  handle          2    9[COMRAM] PTR volatile struct __BD
 38903 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 38904 ;; Return value:  Size  Location     Type
 38905 ;;                  2    0[COMRAM] PTR void 
 38906 ;; Registers used:
 38907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38908 ;; Tracked objects:
 38909 ;;		On entry : 0/0
 38910 ;;		On exit  : 0/0
 38911 ;;		Unchanged: 0/0
 38912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38913 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38914 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38915 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38916 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38917 ;;Total ram usage:       11 bytes
 38918 ;; Hardware stack levels used:    1
 38919 ;; This function calls:
 38920 ;;		Nothing
 38921 ;; This function is called by:
 38922 ;;		_USBMSDInit
 38923 ;;		_USBCheckMSDRequest
 38924 ;;		_MSDTasks
 38925 ;;		_MSDProcessCommandMediaPresent
 38926 ;;		_MSDReadHandler
 38927 ;;		_MSDWriteHandler
 38928 ;;		_MSDTransferTerminated
 38929 ;;		_APP_DeviceCustomHIDInitialize
 38930 ;;		_APP_DeviceCustomHIDTasks
 38931 ;; This function uses a non-reentrant model
 38932 ;;
 38933                           
 38934                           	psect	text205
 38935  004464                     __ptext205:
 38936                           	opt stack 0
 38937  004464                     _USBTransferOnePacket:
 38938                           	opt stack 27
 38939                           
 38940                           ;incstack = 0
 38941                           ;USBTransferOnePacket@ep stored from wreg
 38942  004464  6E09               	movwf	USBTransferOnePacket@ep,c
 38943                           
 38944                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 38945  004466  5001               	movf	USBTransferOnePacket@dir,w,c
 38946  004468  B4D8               	btfsc	status,2,c
 38947  00446A  D007               	goto	l183
 38948                           
 38949                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 38950  00446C  5009               	movf	USBTransferOnePacket@ep,w,c
 38951  00446E  0D02               	mullw	2
 38952  004470  0E6C               	movlw	low _pBDTEntryIn
 38953  004472  24F3               	addwf	prodl,w,c
 38954  004474  6ED9               	movwf	fsr2l,c
 38955  004476  0E00               	movlw	high _pBDTEntryIn
 38956  004478  D006               	goto	L41
 38957  00447A                     l183:
 38958                           
 38959                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 38960  00447A  5009               	movf	USBTransferOnePacket@ep,w,c
 38961  00447C  0D02               	mullw	2
 38962  00447E  0E72               	movlw	low _pBDTEntryOut
 38963  004480  24F3               	addwf	prodl,w,c
 38964  004482  6ED9               	movwf	fsr2l,c
 38965  004484  0E00               	movlw	high _pBDTEntryOut
 38966  004486                     L41:
 38967  004486  20F4               	addwfc	prodh,w,c
 38968  004488  6EDA               	movwf	fsr2h,c
 38969  00448A  CFDE F00A          	movff	postinc2,USBTransferOnePacket@handle
 38970  00448E  CFDD F00B          	movff	postdec2,USBTransferOnePacket@handle+1
 38971                           
 38972                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 38973  004492  500A               	movf	USBTransferOnePacket@handle,w,c
 38974  004494  100B               	iorwf	USBTransferOnePacket@handle+1,w,c
 38975  004496  A4D8               	btfss	status,2,c
 38976  004498  D005               	goto	l185
 38977                           
 38978                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 38979  00449A  0E00               	movlw	0
 38980  00449C  6E01               	movwf	?_USBTransferOnePacket,c
 38981  00449E  0E00               	movlw	0
 38982  0044A0  6E02               	movwf	?_USBTransferOnePacket+1,c
 38983  0044A2  0012               	return	
 38984  0044A4                     l185:
 38985                           
 38986                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 38987  0044A4  EE20 F002          	lfsr	2,2
 38988  0044A8  500A               	movf	USBTransferOnePacket@handle,w,c
 38989  0044AA  26D9               	addwf	fsr2l,f,c
 38990  0044AC  500B               	movf	USBTransferOnePacket@handle+1,w,c
 38991  0044AE  22DA               	addwfc	fsr2h,f,c
 38992  0044B0  C002  FFDE         	movff	USBTransferOnePacket@data,postinc2
 38993  0044B4  C003  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 38994                           
 38995                           ;usb_device.c: 1030: handle->CNT = len;
 38996  0044B8  EE20 F001          	lfsr	2,1
 38997  0044BC  500A               	movf	USBTransferOnePacket@handle,w,c
 38998  0044BE  26D9               	addwf	fsr2l,f,c
 38999  0044C0  500B               	movf	USBTransferOnePacket@handle+1,w,c
 39000  0044C2  22DA               	addwfc	fsr2h,f,c
 39001  0044C4  C004  FFDF         	movff	USBTransferOnePacket@len,indf2
 39002                           
 39003                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 39004  0044C8  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 39005  0044CC  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 39006  0044D0  0E40               	movlw	64
 39007  0044D2  16DF               	andwf	indf2,f,c
 39008                           
 39009                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 39010  0044D4  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 39011  0044D8  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 39012  0044DC  0E00               	movlw	0
 39013  0044DE  86DB               	bsf	plusw2,3,c
 39014                           
 39015                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 39016  0044E0  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 39017  0044E4  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 39018  0044E8  0E00               	movlw	0
 39019  0044EA  8EDB               	bsf	plusw2,7,c
 39020                           
 39021                           ;usb_device.c: 1036: if(dir != 0)
 39022  0044EC  5001               	movf	USBTransferOnePacket@dir,w,c
 39023  0044EE  B4D8               	btfsc	status,2,c
 39024  0044F0  D018               	goto	l187
 39025                           
 39026                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 39027  0044F2  5009               	movf	USBTransferOnePacket@ep,w,c
 39028  0044F4  0D02               	mullw	2
 39029  0044F6  0E6C               	movlw	low _pBDTEntryIn
 39030  0044F8  24F3               	addwf	prodl,w,c
 39031  0044FA  6ED9               	movwf	fsr2l,c
 39032  0044FC  0E00               	movlw	high _pBDTEntryIn
 39033  0044FE  20F4               	addwfc	prodh,w,c
 39034  004500  6EDA               	movwf	fsr2h,c
 39035  004502  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 39036  004506  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 39037  00450A  0E04               	movlw	4
 39038  00450C  1805               	xorwf	??_USBTransferOnePacket,w,c
 39039  00450E  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 39040  004510  5006               	movf	??_USBTransferOnePacket+1,w,c
 39041  004512  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 39042  004514  5009               	movf	USBTransferOnePacket@ep,w,c
 39043  004516  0D02               	mullw	2
 39044  004518  0E6C               	movlw	low _pBDTEntryIn
 39045  00451A  24F3               	addwf	prodl,w,c
 39046  00451C  6ED9               	movwf	fsr2l,c
 39047  00451E  0E00               	movlw	high _pBDTEntryIn
 39048  004520  D017               	goto	L42
 39049  004522                     l187:
 39050                           
 39051                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 39052  004522  5009               	movf	USBTransferOnePacket@ep,w,c
 39053  004524  0D02               	mullw	2
 39054  004526  0E72               	movlw	low _pBDTEntryOut
 39055  004528  24F3               	addwf	prodl,w,c
 39056  00452A  6ED9               	movwf	fsr2l,c
 39057  00452C  0E00               	movlw	high _pBDTEntryOut
 39058  00452E  20F4               	addwfc	prodh,w,c
 39059  004530  6EDA               	movwf	fsr2h,c
 39060  004532  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 39061  004536  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 39062  00453A  0E04               	movlw	4
 39063  00453C  1805               	xorwf	??_USBTransferOnePacket,w,c
 39064  00453E  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 39065  004540  5006               	movf	??_USBTransferOnePacket+1,w,c
 39066  004542  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 39067  004544  5009               	movf	USBTransferOnePacket@ep,w,c
 39068  004546  0D02               	mullw	2
 39069  004548  0E72               	movlw	low _pBDTEntryOut
 39070  00454A  24F3               	addwf	prodl,w,c
 39071  00454C  6ED9               	movwf	fsr2l,c
 39072  00454E  0E00               	movlw	high _pBDTEntryOut
 39073  004550                     L42:
 39074  004550  20F4               	addwfc	prodh,w,c
 39075  004552  6EDA               	movwf	fsr2h,c
 39076  004554  C007  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 39077  004558  C008  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 39078                           
 39079                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 39080  00455C  C00A  F001         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 39081  004560  C00B  F002         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 39082  004564  0012               	return	
 39083  004566                     __end_of_USBTransferOnePacket:
 39084                           	opt stack 0
 39085                           tosu	equ	0xFFF
 39086                           tosh	equ	0xFFE
 39087                           tosl	equ	0xFFD
 39088                           pclath	equ	0xFFA
 39089                           tblptru	equ	0xFF8
 39090                           tblptrh	equ	0xFF7
 39091                           tblptrl	equ	0xFF6
 39092                           tablat	equ	0xFF5
 39093                           prodh	equ	0xFF4
 39094                           prodl	equ	0xFF3
 39095                           intcon	equ	0xFF2
 39096                           intcon2	equ	0xFF1
 39097                           intcon3	equ	0xFF0
 39098                           indf0	equ	0xFEF
 39099                           postinc0	equ	0xFEE
 39100                           fsr0h	equ	0xFEA
 39101                           fsr0l	equ	0xFE9
 39102                           wreg	equ	0xFE8
 39103                           indf1	equ	0xFE7
 39104                           postdec1	equ	0xFE5
 39105                           plusw1	equ	0xFE3
 39106                           fsr1h	equ	0xFE2
 39107                           fsr1l	equ	0xFE1
 39108                           indf2	equ	0xFDF
 39109                           postinc2	equ	0xFDE
 39110                           postdec2	equ	0xFDD
 39111                           plusw2	equ	0xFDB
 39112                           fsr2h	equ	0xFDA
 39113                           fsr2l	equ	0xFD9
 39114                           status	equ	0xFD8
 39115                           tosu	equ	0xFFF
 39116                           tosh	equ	0xFFE
 39117                           tosl	equ	0xFFD
 39118                           pclath	equ	0xFFA
 39119                           tblptru	equ	0xFF8
 39120                           tblptrh	equ	0xFF7
 39121                           tblptrl	equ	0xFF6
 39122                           tablat	equ	0xFF5
 39123                           prodh	equ	0xFF4
 39124                           prodl	equ	0xFF3
 39125                           intcon	equ	0xFF2
 39126                           intcon2	equ	0xFF1
 39127                           intcon3	equ	0xFF0
 39128                           indf0	equ	0xFEF
 39129                           postinc0	equ	0xFEE
 39130                           fsr0h	equ	0xFEA
 39131                           fsr0l	equ	0xFE9
 39132                           wreg	equ	0xFE8
 39133                           indf1	equ	0xFE7
 39134                           postdec1	equ	0xFE5
 39135                           plusw1	equ	0xFE3
 39136                           fsr1h	equ	0xFE2
 39137                           fsr1l	equ	0xFE1
 39138                           indf2	equ	0xFDF
 39139                           postinc2	equ	0xFDE
 39140                           postdec2	equ	0xFDD
 39141                           plusw2	equ	0xFDB
 39142                           fsr2h	equ	0xFDA
 39143                           fsr2l	equ	0xFD9
 39144                           status	equ	0xFD8
 39145                           
 39146                           	psect	text206
 39147  000000                     __ptext206:
 39148                           	opt stack 0
 39149                           tosu	equ	0xFFF
 39150                           tosh	equ	0xFFE
 39151                           tosl	equ	0xFFD
 39152                           pclath	equ	0xFFA
 39153                           tblptru	equ	0xFF8
 39154                           tblptrh	equ	0xFF7
 39155                           tblptrl	equ	0xFF6
 39156                           tablat	equ	0xFF5
 39157                           prodh	equ	0xFF4
 39158                           prodl	equ	0xFF3
 39159                           intcon	equ	0xFF2
 39160                           intcon2	equ	0xFF1
 39161                           intcon3	equ	0xFF0
 39162                           indf0	equ	0xFEF
 39163                           postinc0	equ	0xFEE
 39164                           fsr0h	equ	0xFEA
 39165                           fsr0l	equ	0xFE9
 39166                           wreg	equ	0xFE8
 39167                           indf1	equ	0xFE7
 39168                           postdec1	equ	0xFE5
 39169                           plusw1	equ	0xFE3
 39170                           fsr1h	equ	0xFE2
 39171                           fsr1l	equ	0xFE1
 39172                           indf2	equ	0xFDF
 39173                           postinc2	equ	0xFDE
 39174                           postdec2	equ	0xFDD
 39175                           plusw2	equ	0xFDB
 39176                           fsr2h	equ	0xFDA
 39177                           fsr2l	equ	0xFD9
 39178                           status	equ	0xFD8
 39179                           
 39180                           	psect	rparam
 39181  0000                     tosu	equ	0xFFF
 39182                           tosh	equ	0xFFE
 39183                           tosl	equ	0xFFD
 39184                           pclath	equ	0xFFA
 39185                           tblptru	equ	0xFF8
 39186                           tblptrh	equ	0xFF7
 39187                           tblptrl	equ	0xFF6
 39188                           tablat	equ	0xFF5
 39189                           prodh	equ	0xFF4
 39190                           prodl	equ	0xFF3
 39191                           intcon	equ	0xFF2
 39192                           intcon2	equ	0xFF1
 39193                           intcon3	equ	0xFF0
 39194                           indf0	equ	0xFEF
 39195                           postinc0	equ	0xFEE
 39196                           fsr0h	equ	0xFEA
 39197                           fsr0l	equ	0xFE9
 39198                           wreg	equ	0xFE8
 39199                           indf1	equ	0xFE7
 39200                           postdec1	equ	0xFE5
 39201                           plusw1	equ	0xFE3
 39202                           fsr1h	equ	0xFE2
 39203                           fsr1l	equ	0xFE1
 39204                           indf2	equ	0xFDF
 39205                           postinc2	equ	0xFDE
 39206                           postdec2	equ	0xFDD
 39207                           plusw2	equ	0xFDB
 39208                           fsr2h	equ	0xFDA
 39209                           fsr2l	equ	0xFD9
 39210                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    770
    Data        38
    BSS         2153
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     73     159
    BANK1           256      0     255
    BANK2           256      0     250
    BANK3           256      0      64
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    _parse_file_modify@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_truncate@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    S1973$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FileAddress	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> fat_find_file@buffer(COMRAM[11]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), bootloader_extension(CODE[4]), bootloader_filename(CODE[9]), RAM(DATA[3759]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(3) Largest target is 36863
		 -> _spi_external_rx_buffer(BANK2[64]), ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 36863
		 -> _spi_external_rx_buffer(BANK2[64]), ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), file_buffer(BANK2[50]), buffer(BIGRAMll[512]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), 
		 -> _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), 
		 -> _get_empty_cluster@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), _flash_get_status@status(COMRAM[2]), msd_buffer(BIGRAMll[512]), 
		 -> RAM(DATA[3759]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_partial_read@command(COMRAM[4]), _flash_get_status@command(COMRAM[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 3759
		 -> buffer(BIGRAMll[512]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), msd_buffer(BIGRAMll[512]), 
		 -> RAM(DATA[3759]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(COMRAM[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(COMRAM[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(COMRAM[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(COMRAM[1]), _flash_set_page_size@command(COMRAM[4]), 

    _parse_file_append@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_rename@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_create@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_delete@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_read_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_read_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_configuration@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_bootloader_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK2[64]), ReceivedDataBuffer(BANK2[64]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), RAM(DATA[3759]), 

    internalFlash_read@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), 

    sp__internalFlash_getBuffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    _bootloader_program@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    parseHexFileEntry@hexEntry	PTR struct HexFileEntry size(2) Largest target is 23
		 -> hex_file_entry(BANK1[23]), 

    parseHexFileEntry@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK2[50]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), 
		 -> RAM(DATA[3759]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), file_buffer(BANK2[50]), RAM(DATA[3759]), 

    fat_rename_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_rename_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_append_to_file@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), bootloader_extension(CODE[4]), RAM(DATA[3759]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), bootloader_filename(CODE[9]), RAM(DATA[3759]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 

    _update_modified_time@root	PTR struct . size(2) Largest target is 32
		 -> fat_append_to_file@root(BANK0[32]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 3759
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), 
		 -> _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), RAM(DATA[3759]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), file_buffer(BANK2[50]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), 
		 -> fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), _get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), _get_empty_cluster@value(COMRAM[2]), 
		 -> _root_is_available@first_byte(COMRAM[1]), RAM(DATA[3759]), 

    flash_page_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_page_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), file_buffer(BANK2[50]), buffer(BIGRAMll[512]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), 
		 -> _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), 
		 -> _get_empty_cluster@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 3759
		 -> buffer(BIGRAMll[512]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), msd_buffer(BIGRAMll[512]), 
		 -> RAM(DATA[3759]), 

    _display_itoa_u32@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_digipot_backlight@data_array(COMRAM[2]), i2c_digipot_reset_off@data_array(COMRAM[2]), i2c_digipot_reset_on@data_array(COMRAM[2]), i2c_display_send_init_sequence@init_sequence(COMRAM[9]), 
		 -> _ic2_display_set_address@data_array(COMRAM[2]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__spi_get_external_tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK2[64]), 

    main@tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK2[64]), 

    sp__spi_get_external_rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK2[64]), 

    main@rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK2[64]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2407	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2373	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2372	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2320	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2319	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S1973$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S1973$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S1973$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S1973$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S1973$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S1973$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S1973$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S1973$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    _main->_api_prepare
    _main->_bootloader_run
    _ui_run->_i2c_display_send_init_sequence
    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    _i2c_init->_i2c_set_frequency
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_page_read
    _fat_format->_flash_page_write
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_found
    __display_verify->__display_itoa_u16
    __display_programming->__display_itoa_u16
    __display_found->__display_itoa_u32
    __display_failed->__display_itoa_u32
    __display_itoa_u32->__display_itoa_u16
    __display_done->__display_itoa_u16
    __display_checked->__display_itoa_u16
    __display_itoa_u16->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _bootloader_run->__bootloader_program
    _bootloader_run->__bootloader_verify_file
    __bootloader_verify_file->_fat_read_from_file
    __bootloader_program->_fat_read_from_file
    _parseHexFileEntry->_hexCharsToUint16
    _hexCharsToUint8->_hexCharToUint8
    _hexCharsToUint16->_hexCharToUint8
    _internalFlash_writePage->__internalFlash_unlockAndActivate
    _internalFlash_readPage->_internalFlash_read
    _internalFlash_read->_memcpy
    _internalFlash_erasePage->__internalFlash_unlockAndActivate
    _internalFlash_addressWithinPage->_internalFlash_addressFromPage
    __bootloader_find_file->_fat_find_file
    __normal_mode->_i2c_eeprom_readByte
    _i2c_eeprom_readByte->__i2c_read
    __i2c_read->__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->_USBTransferOnePacket
    _MSDTransferTerminated->_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_page_write
    _flash_page_write->__flash_compare_page_to_buffer
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_page_read
    _flash_page_read->__flash_partial_read
    _APP_DeviceCustomHIDTasks->_api_prepare
    _api_prepare->__fill_buffer_read_file
    __fill_buffer_read_file->_fat_read_from_file
    _fat_read_from_file->_fat_get_file_information
    _fat_get_file_size->_flash_partial_read
    __fill_buffer_get_status->_flash_is_busy
    __fill_buffer_get_file_details->_fat_get_file_information
    __fill_buffer_get_display->_display_get_character
    __fill_buffer_get_bootloader_details->_bootloader_get_file_size
    __fill_buffer_find_file->_fat_find_file
    _api_parse->__parse_command_long
    __parse_command_short->_i2c_eeprom_writeByte
    _i2c_eeprom_writeByte->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->__parse_file_create
    __parse_file_rename->_fat_rename_file
    _fat_rename_file->_fat_get_file_information
    __parse_file_delete->_fat_delete_file
    _fat_delete_file->__get_first_cluster
    __get_first_cluster->_flash_partial_read
    __delete_root->_flash_partial_write
    __parse_file_create->_fat_create_file
    _fat_create_file->_fat_find_file
    _fat_get_empty_clusters->_flash_partial_read
    _fat_find_file->_flash_partial_read
    __get_available_root_entry->__root_is_available
    __parse_file_append->_fat_append_to_file
    _fat_append_to_file->_fat_get_file_information
    _fat_get_file_information->__root_is_available
    __root_is_available->_flash_partial_read
    __write_root->_flash_partial_write
    __write_fat->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    _flash_is_busy->__flash_is_busy
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_copy_page_to_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    __update_modified_time->__get_date
    __update_modified_time->__get_time
    __read_fat->_flash_partial_read
    __get_empty_cluster->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx

Critical Paths under _main in BANK0

    _main->_APP_DeviceCustomHIDTasks
    _bootloader_run->__bootloader_program
    __bootloader_verify_file->_fat_read_from_file
    __bootloader_program->_fat_read_from_file
    _APP_DeviceCustomHIDTasks->_api_prepare
    _api_prepare->__fill_buffer_read_file
    __fill_buffer_read_file->_fat_read_from_file
    __parse_file_rename->_fat_rename_file
    __parse_file_create->_fat_create_file
    __parse_file_append->_fat_append_to_file

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0 1230535
                                             93 COMRAM     2     2      0
                                             65 BANK0      8     8      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                       __normal_mode
                          _api_parse
                        _api_prepare
                     _bootloader_run
                    _display_prepare
                     _display_update
               _jump_to_main_program
         _spi_get_external_rx_buffer
         _spi_get_external_tx_buffer
                        _system_init
                   _timer_pseudo_isr
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0    7310
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
              _system_encoder_enable
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    1804
                                             10 COMRAM     9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0       0
               _jump_to_main_program
 ---------------------------------------------------------------------------------
 (1) _timer_pseudo_isr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0   28129
               __system_encoder_init
                __system_timer0_init
                           _fat_init
                         _flash_init
                           _i2c_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      44
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    6304
               __flash_set_page_size
                           _spi_init
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 COMRAM     1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    6060
                                             19 COMRAM     5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   21781
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    5367
                                             43 COMRAM     4     4      0
                           __get_fbr
                           __get_mbr
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   16414
                                             36 COMRAM     2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_tx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_rx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _display_update                                       0     0      0    3188
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (2) _i2c_display_write_fixed                              4     1      3     868
                                              5 COMRAM     4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_display_cursor                                   3     2      1    2320
                                             13 COMRAM     3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __ic2_display_set_address                             3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                      3     3      0   63681
                                             40 COMRAM     3     3      0
                   __display_checked
                     __display_clear
                      __display_done
                    __display_failed
                     __display_found
               __display_programming
                     __display_start
                    __display_verify
 ---------------------------------------------------------------------------------
 (2) __display_verify                                      4     4      0    6683
                                             30 COMRAM     3     3      0
                  __display_itoa_u16
             _bootloader_get_entries
 ---------------------------------------------------------------------------------
 (2) __display_start                                       1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __display_programming                                 1     1      0    6819
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
             _bootloader_get_entries
   _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (2) __display_found                                       4     4      0   14817
                                             36 COMRAM     4     4      0
                  __display_itoa_u32
           _bootloader_get_file_size
 ---------------------------------------------------------------------------------
 (2) __display_failed                                      2     2      0   21428
                                             36 COMRAM     1     1      0
                  __display_itoa_u16
                  __display_itoa_u32
             _bootloader_get_entries
               _bootloader_get_error
         _bootloader_get_rec_address
 ---------------------------------------------------------------------------------
 (3) __display_itoa_u32                                    6     0      6   14409
                                             30 COMRAM     6     0      6
                            ___lldiv
                            ___llmod
                  __display_itoa_u16
           _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8    1049
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    1052
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) __display_done                                        1     1      0    6751
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
   _bootloader_get_flashPagesWritten
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) __display_checked                                     4     4      0    6753
                                             30 COMRAM     4     4      0
                  __display_itoa_u16
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (3) __display_itoa_u16                                    6     0      6    6457
                                             24 COMRAM     6     0      6
             _bootloader_get_entries (ARG)
   _bootloader_get_flashPagesWritten (ARG)
       _bootloader_get_total_entries (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 8     2      6    4791
                                             16 COMRAM     8     2      6
                            ___lldiv (ARG)
                            ___llmod (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    1424
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     337
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     518
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _bootloader_run                                       1     1      0  108165
                                             92 COMRAM     1     1      0
              __bootloader_find_file
                __bootloader_program
            __bootloader_verify_file
 ---------------------------------------------------------------------------------
 (2) __bootloader_verify_file                             17    17      0   46869
                                             84 COMRAM     8     8      0
                                             45 BANK0      9     9      0
          __bootloader_check_address
                  _fat_get_file_size
                 _fat_read_from_file
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (2) __bootloader_program                                 27    27      0   43860
                                             84 COMRAM     8     8      0
                                             45 BANK0     19    19      0
          __bootloader_check_address
                 _fat_read_from_file
    _internalFlash_addressWithinPage
            _internalFlash_erasePage
            _internalFlash_getBuffer
      _internalFlash_pageFromAddress
             _internalFlash_readPage
            _internalFlash_writePage
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (3) _parseHexFileEntry                                   17     9      8    3134
                                             11 COMRAM    17     9      8
                   _hexCharsToUint16
                    _hexCharsToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint8                                      4     3      1     538
                                              2 COMRAM     4     3      1
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint16                                     9     6      3     495
                                              2 COMRAM     9     6      3
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (5) _hexCharToUint8                                       2     2      0     114
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_writePage                             12    10      2     385
                                              2 COMRAM    10     8      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (3) _internalFlash_readPage                               6     4      2    3259
                                             21 COMRAM     6     4      2
      _internalFlash_addressFromPage
                 _internalFlash_read
 ---------------------------------------------------------------------------------
 (4) _internalFlash_read                                   8     0      8    2901
                                             13 COMRAM     8     0      8
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _internalFlash_pageFromAddress                        5     1      4     201
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _internalFlash_getBuffer                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _internalFlash_erasePage                              6     4      2     269
                                              2 COMRAM     6     4      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (4) __internalFlash_unlockAndActivate                     2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_addressWithinPage                     14     8      6     492
                                              8 COMRAM    14     8      6
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) _internalFlash_addressFromPage                        8     4      4     224
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) __bootloader_check_address                           12     7      5     693
                                              0 COMRAM    12     7      5
 ---------------------------------------------------------------------------------
 (2) __bootloader_find_file                                0     0      0   17370
                      _fat_find_file
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (1) __normal_mode                                         0     0      0    5282
                _i2c_eeprom_readByte
               _i2c_eeprom_writeByte
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readByte                                  7     5      2    2653
                                             17 COMRAM     7     5      2
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_read                                           12     9      3     534
                                              5 COMRAM    12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0  143347
                                             31 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1366
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     2     2      0   82979
                                             29 COMRAM     2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   80471
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   60727
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0   20906
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1164
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0   20123
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6   19652
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                  _SYSTEM_Initialize
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckMSDRequest                                   4     4      0    3361
                                             11 COMRAM     4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBCheckHIDRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SYSTEM_Initialize                                    5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _MSDTransferTerminated                                4     2      2    5161
                                             11 COMRAM     4     2      2
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceMSDInitialize                              0     0      0    4302
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (4) _USBMSDInit                                           3     3      0    3569
                                             11 COMRAM     3     3      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
                     _ResetSenseData
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceCustomHIDInitialize                        0     0      0    4046
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0   99240
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0   99240
                                             76 COMRAM     6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0   94076
                                             71 COMRAM     5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   47789
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   46031
                                             57 COMRAM    14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   22671
                                             47 COMRAM     5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   15083
                                             36 COMRAM    11     2      9
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (4) _flash_page_write                                     5     1      4   14738
                                             31 COMRAM     5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   12464
                                             53 COMRAM     4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2370
                                             10 COMRAM     7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1758
                                              8 COMRAM     2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (4) _USBStallEndpoint                                     8     7      1    1713
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    5068
                                             43 COMRAM    10     2      8
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (4) _flash_page_read                                      4     0      4    4787
                                             39 COMRAM     4     0      4
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaInitialize                        2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaDetect                            2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             5     5      0  386922
                                             61 BANK0      4     4      0
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (1) _api_prepare                                          5     1      4   80638
                                             92 COMRAM     1     1      0
                                             57 BANK0      4     0      4
             __fill_buffer_find_file
__fill_buffer_get_bootloader_details
     __fill_buffer_get_configuration
           __fill_buffer_get_display
      __fill_buffer_get_file_details
            __fill_buffer_get_status
             __fill_buffer_read_file
                      _flash_is_busy
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_read_file                              20    16      4   43599
                                             84 COMRAM     8     4      4
                                             45 BANK0     12    12      0
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  67    57     10   34800
                                             62 COMRAM    22    12     10
                                              0 BANK0     45    45      0
                          __read_fat
               __sector_from_cluster
           _fat_get_file_information
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   14    10      4    7995
                                             47 COMRAM    14    10      4
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_status                              2     0      2    2866
                                             20 COMRAM     2     0      2
                      _flash_is_busy
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (1) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_file_details                        5     1      4   16783
                                             62 COMRAM     5     1      4
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display                            12     9      3     827
                                              4 COMRAM    12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (3) _display_get_character                                4     3      1     133
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_configuration                       2     0      2     309
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_bootloader_details                 13    11      2    1023
                                              4 COMRAM    13    11      2
             _bootloader_get_entries
               _bootloader_get_error
           _bootloader_get_file_size
   _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
        _bootloader_get_rec_checksum
   _bootloader_get_rec_checksumCheck
            _bootloader_get_rec_data
      _bootloader_get_rec_dataLength
      _bootloader_get_rec_recordType
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_total_entries                         2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_recordType                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_dataLength                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_data                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksumCheck                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksum                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_address                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_flashPagesWritten                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_file_size                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_error                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_entries                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_find_file                               9     5      4    9819
                                             67 COMRAM     9     5      4
                      _fat_find_file
 ---------------------------------------------------------------------------------
 (1) _api_parse                                            6     3      3  302971
                                             85 COMRAM     3     3      0
                                             51 BANK0      3     0      3
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (2) __parse_command_short                                 1     1      0    2697
                                             19 COMRAM     1     1      0
               _i2c_eeprom_writeByte
               _jump_to_main_program
                       _jump_to_zero
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (3) _system_delay_ms                                      3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _jump_to_zero                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _jump_to_main_program                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_writeByte                                 9     6      3    2629
                                             10 COMRAM     9     6      3
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    1736
                                              5 COMRAM     5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_long                                  3     1      2  299628
                                             82 COMRAM     3     1      2
                 __parse_file_append
                 __parse_file_create
                 __parse_file_delete
                 __parse_file_modify
                 __parse_file_rename
               __parse_file_truncate
 ---------------------------------------------------------------------------------
 (3) __parse_file_truncate                                 2     0      2      89
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __parse_file_rename                                   3     1      2   39116
                                             66 COMRAM     3     1      2
                    _fat_rename_file
 ---------------------------------------------------------------------------------
 (4) _fat_rename_file                                     38    34      4   38895
                                             62 COMRAM     4     0      4
                                              0 BANK0     34    34      0
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) __parse_file_modify                                   2     0      2      89
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __parse_file_delete                                   3     1      2   68995
                                             62 COMRAM     3     1      2
                    _fat_delete_file
 ---------------------------------------------------------------------------------
 (4) _fat_delete_file                                      5     5      0   68818
                                             57 COMRAM     5     5      0
                       __delete_root
                 __get_first_cluster
                          __read_fat
                 __root_is_available
                         __write_fat
 ---------------------------------------------------------------------------------
 (5) __get_first_cluster                                  10     8      2    7994
                                             47 COMRAM    10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __delete_root                                         7     7      0   21685
                                             40 COMRAM     7     7      0
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __parse_file_create                                   3     1      2   82238
                                             79 COMRAM     3     1      2
                    _fat_create_file
 ---------------------------------------------------------------------------------
 (4) _fat_create_file                                     53    45      8   82039
                                             67 COMRAM    12     4      8
                                              0 BANK0     41    41      0
          __get_available_root_entry
                          __get_date
                 __get_empty_cluster
                          __get_time
                         __write_fat
                        __write_root
                      _fat_find_file
             _fat_get_empty_clusters
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              13     6      7    2279
                                              0 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 (5) _fat_get_empty_clusters                              12    10      2    8218
                                             47 COMRAM    12    10      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       20    16      4    9375
                                             47 COMRAM    20    16      4
                 _flash_partial_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (5) __get_available_root_entry                            1     1      0    8126
                                             54 COMRAM     1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (3) __parse_file_append                                   3     1      2  108829
                                             74 COMRAM     3     1      2
                 _fat_append_to_file
 ---------------------------------------------------------------------------------
 (4) _fat_append_to_file                                  63    59      4  108586
                                             62 COMRAM    12     8      4
                                              0 BANK0     51    51      0
                 __get_empty_cluster
                          __read_fat
                 __root_is_available
               __sector_from_cluster
              __update_modified_time
                         __write_fat
                        __write_root
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (4) _fat_get_file_information                             8     6      2   16406
                                             54 COMRAM     8     6      2
                 __root_is_available
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __root_is_available                                   7     7      0    8036
                                             47 COMRAM     7     7      0
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __write_root                                          8     6      2   21951
                                             40 COMRAM     8     6      2
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) __write_fat                                           8     4      4   22575
                                             40 COMRAM     8     4      4
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (6) _flash_partial_write                                  9     1      8   21571
                                             31 COMRAM     9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
                      _flash_is_busy
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (2) _flash_is_busy                                        1     1      0    2380
                                             19 COMRAM     1     1      0
                     __flash_is_busy
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    3807
                                             19 COMRAM    11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4209
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (7) __flash_copy_page_to_buffer                          10     7      3    4031
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5187
                                             19 COMRAM    12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __update_modified_time                                2     0      2     177
                                              4 COMRAM     2     0      2
                          __get_date
                          __get_time
 ---------------------------------------------------------------------------------
 (5) __get_time                                            4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) __get_date                                            4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __sector_from_cluster                                 2     0      2     200
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8349
                                             47 COMRAM     8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __get_empty_cluster                                  10     8      2    8350
                                             47 COMRAM    10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) _flash_partial_read                                   8     0      8    7857
                                             39 COMRAM     8     0      8
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_set_configuration                                2     2      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4187
                                             19 COMRAM    20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2335
                                             17 COMRAM     2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 COMRAM     1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2     955
                                             12 COMRAM     5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8     888
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                11     7      4    3313
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_file_append
           _fat_append_to_file
             __get_empty_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_cluster
             __update_modified_time
               __get_date
               __get_time
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             _fat_get_file_information
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
         __parse_file_create
           _fat_create_file
             __get_available_root_entry
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
             __get_date
             __get_empty_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_time
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             _fat_find_file
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _strncmp
             _fat_get_empty_clusters
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _memcpy
         __parse_file_delete
           _fat_delete_file
             __delete_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             __get_first_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
         __parse_file_modify
         __parse_file_rename
           _fat_rename_file
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             _fat_get_file_information
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_file_truncate
       __parse_command_short
         _i2c_eeprom_writeByte
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _jump_to_main_program
         _jump_to_zero
         _system_delay_ms
     _api_prepare
       __fill_buffer_find_file
         _fat_find_file
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
           _strncmp
       __fill_buffer_get_bootloader_details
         _bootloader_get_entries
         _bootloader_get_error
         _bootloader_get_file_size
         _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
         _bootloader_get_rec_checksum
         _bootloader_get_rec_checksumCheck
         _bootloader_get_rec_data
         _bootloader_get_rec_dataLength
         _bootloader_get_rec_recordType
         _bootloader_get_total_entries
       __fill_buffer_get_configuration
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_file_details
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
       __fill_buffer_get_status
         _flash_is_busy
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           _spi_set_configuration
         _ui_get_status
       __fill_buffer_read_file
         _fat_get_file_size
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _fat_read_from_file
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __sector_from_cluster
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
       _flash_is_busy
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _spi_set_configuration
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_page_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_page_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_page_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_page_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 _ExternalFlash_MediaDetect *
                 _ExternalFlash_MediaInitialize *
                 _ResetSenseData *
                 _USBTransferOnePacket *
             _MSDTransferTerminated
               _USBStallEndpoint
               _USBTransferOnePacket
             _SYSTEM_Initialize
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               _ExternalFlash_MediaDetect *
               _ExternalFlash_MediaInitialize *
               _ResetSenseData *
               _USBTransferOnePacket *
           _MSDTransferTerminated
             _USBStallEndpoint
             _USBTransferOnePacket
           _SYSTEM_Initialize
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             _USBTransferOnePacket
       _memcpy
     _USBDeviceInit
       _memset
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           _ExternalFlash_MediaDetect *
           _ExternalFlash_MediaInitialize *
           _ResetSenseData *
           _USBTransferOnePacket *
       _MSDTransferTerminated
         _USBStallEndpoint
         _USBTransferOnePacket
       _SYSTEM_Initialize
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         _USBTransferOnePacket
   __normal_mode
     _i2c_eeprom_readByte
       __i2c_read
         __i2c_acknowledge
         __i2c_get
         __i2c_not_acknowledge
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_eeprom_writeByte
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
   _api_parse
     __parse_command_long
       __parse_file_append
         _fat_append_to_file
           __get_empty_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __sector_from_cluster
           __update_modified_time
             __get_date
             __get_time
           __write_fat
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           __write_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _flash_is_busy
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_set_configuration
             _spi_set_configuration
       __parse_file_create
         _fat_create_file
           __get_available_root_entry
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
           __get_date
           __get_empty_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __get_time
           __write_fat
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           __write_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           _fat_find_file
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _strncmp
           _fat_get_empty_clusters
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _memcpy
       __parse_file_delete
         _fat_delete_file
           __delete_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           __get_first_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __write_fat
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
       __parse_file_modify
       __parse_file_rename
         _fat_rename_file
           __write_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_file_truncate
     __parse_command_short
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _jump_to_main_program
       _jump_to_zero
       _system_delay_ms
   _api_prepare
     __fill_buffer_find_file
       _fat_find_file
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
     __fill_buffer_get_bootloader_details
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_file_size
       _bootloader_get_flashPagesWritten
       _bootloader_get_rec_address
       _bootloader_get_rec_checksum
       _bootloader_get_rec_checksumCheck
       _bootloader_get_rec_data
       _bootloader_get_rec_dataLength
       _bootloader_get_rec_recordType
       _bootloader_get_total_entries
     __fill_buffer_get_configuration
     __fill_buffer_get_display
       _display_get_character
     __fill_buffer_get_file_details
       _fat_get_file_information
         __root_is_available
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __fill_buffer_get_status
       _flash_is_busy
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _spi_set_configuration
       _ui_get_status
     __fill_buffer_read_file
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file
         __read_fat
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_cluster
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     _flash_is_busy
       __flash_is_busy
         __flash_get_status
           _spi_tx_rx
         __flash_wakeup
           _spi_tx
       _spi_set_configuration
     _memcpy
   _bootloader_run
     __bootloader_find_file
       _fat_find_file
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __bootloader_program
       __bootloader_check_address
       _fat_read_from_file
         __read_fat
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_cluster
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _internalFlash_addressWithinPage
         _internalFlash_addressFromPage
       _internalFlash_erasePage
         __internalFlash_unlockAndActivate
       _internalFlash_getBuffer
       _internalFlash_pageFromAddress
       _internalFlash_readPage
         _internalFlash_addressFromPage
         _internalFlash_read
           _memcpy
       _internalFlash_writePage
         __internalFlash_unlockAndActivate
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
     __bootloader_verify_file
       __bootloader_check_address
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file
         __read_fat
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_cluster
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
   _display_prepare
     __display_checked
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_total_entries
     __display_clear
     __display_done
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_flashPagesWritten
     __display_failed
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_rec_address
     __display_found
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_file_size
     __display_programming
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
     __display_start
     __display_verify
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _jump_to_main_program
   _spi_get_external_rx_buffer
   _spi_get_external_tx_buffer
   _system_init
     __system_encoder_init
     __system_timer0_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_page_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
           _spi_set_configuration
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_page_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
       _spi_set_configuration
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
     _ui_init
   _timer_pseudo_isr
   _ui_get_status
   _ui_run
     __ui_encoder
       _jump_to_main_program
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_enable
     _ui_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0     400      35       80.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      40      11       25.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FA       9       97.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     49      9F       5       99.4%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     337      31        0.0%
DATA                 0      0     937       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Thu Aug 23 23:38:31 2018

                          __end_of_fat_read_from_file 211C  
                           ??_internalFlash_getBuffer 0003  
                                          _USB_SD_Ptr 8E7B  
                            fat_create_file@extension 0046  
              __end_of_i2c_display_send_init_sequence 79C0  
             __size_of_i2c_display_send_init_sequence 002C  
                      _i2c_display_send_init_sequence 7994  
                                 __system_timer0_init 7BFE  
                                                  _os 0060  
                                       _USBDeviceInit 394E  
                                  _USBCheckHIDRequest 482A  
                __bootloader_verify_file@return_value 00E3  
                                    ??__flash_is_busy 0012  
                                        __CFG_CP0$OFF 000000  
                      __root_is_available@root_sector 0031  
                                 __end_of_system_init 6930  
                           ??_internalFlash_erasePage 0005  
                            ?_i2c_display_write_fixed 0006  
                USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                 l202 50CA  
                                                 l210 5B50  
                                                 l220 458E  
                                                 l141 39BC  
                                                 l214 5DB6  
                                                 l310 56F0  
                                                 l150 3248  
                                                 l143 39F8  
                                                 l303 7724  
                                                 l151 323E  
                                                 l320 6CD8  
                                                 l208 5B36  
                                                 l224 4610  
                                                 l304 7722  
                                                 l152 323C  
                                                 l241 4EEE  
                                                 l233 4E4A  
                                                 l161 32C4  
                                                 l242 4EB8  
                                                 l330 4FB0  
                                                 l322 6D22  
                                                 l235 4E54  
                                                 l331 4F76  
                                                 l251 3EEA  
                                                 l411 4878  
                                                 l219 45E6  
                                                 l139 3994  
                                                 l171 3354  
                                                 l163 32DA  
                                                 l155 3264  
                                                 l252 3ED0  
                                                 l412 4846  
                                                 l260 4792  
                                                 l164 32E6  
                                                 l156 3274  
                                                 l237 4EB0  
                                                 l333 4F96  
                                                 l309 56F6  
                                                 l173 3378  
                                                 l165 330E  
                                                 l157 327C  
                                                 l238 4E7A  
                                                 l422 489A  
                                                 l414 488A  
                         __end_of_USBStdGetDscHandler 3BD6  
                                                 l262 4806  
                                                 l350 46A6  
                                                 l166 331A  
                                                 l158 3292  
                                                 l183 447A  
                                                 l191 40AC  
                                                 l423 48B2  
                                                 l415 4864  
                                                 l271 3AC2  
                                                 l343 4704  
                                                 l175 3394  
                                                 l159 329E  
                                                 l328 4F2E  
                                                 l248 3E74  
                                                 l424 48BE  
                                                 l360 17D6  
                                                 l272 3B50  
                                                 l352 46AC  
                                                 l344 4676  
                                                 l168 332C  
                                                 l185 44A4  
                                                 l329 4F34  
                                                 l249 3E52  
                                                 l521 424A  
                                                 l425 48D6  
                                                 l361 17DC  
                                                 l281 5786  
                                                 l353 46CA  
                                                 l610 6BDA  
                                                 l178 75E2  
                                                 l418 48E2  
                                                 l530 515A  
                                                 l274 3B58  
                                                 l282 5714  
                                                 l354 46E6  
                                                 l346 4680  
                                                 l187 4522  
                                                 l603 6BE2  
                                                 l179 75F0  
                                                 l371 18FC  
                                                 l363 1848  
                                                 l275 3BAE  
                                                 l347 4686  
                                                 l620 04BE  
                                                 l604 6BA6  
                                                 l372 1918  
                                                 l268 3BBE  
                                                 l348 468C  
                                                 l621 04C8  
                                                 l381 1A10  
                                                 l365 1890  
                                                 l277 3BB6  
                                                 l269 3AAE  
                                                 l285 579C  
                                                 l349 46A0  
                                                 l710 491C  
                                                 l702 1740  
                                                 l614 0810  
                                                 l630 066E  
                                                 l606 6BC2  
                                                 l518 4252  
                                                 l534 51C0  
                                                 l374 197E  
                                                 l286 5726  
                                                 l703 1758  
                                                 l623 0520  
                                                 l615 049E  
                                                 l519 41C6  
                                                 l375 198A  
                                                 l367 18B2  
                                                 l287 572C  
                                                 l295 744C  
                                                 l712 4932  
                                                 l704 1770  
                                                 l640 0738  
                                                 l624 05DA  
                                                 l608 6BCE  
                                                 l800 61FE  
                                                 l376 1A04  
                                                 l288 574A  
                                                 l296 744A  
                                                 l721 49BE  
                                                 l633 06A2  
                                                 l625 05E4  
                                                 l609 6BD4  
                                                 l561 1DEC  
                                                 l529 51F6  
                                                 l369 1932  
                                                 l722 49A8  
                                                 l650 07B8  
                                                 l634 06D0  
                                                 l626 0604  
                                                 l618 04AE  
                                                 l554 1ED8  
                                                 l562 1DD6  
                                                 l546 51C8  
                                                 l810 61F0  
                                                 l715 4962  
                                                 l651 07CC  
                                                 l571 1E08  
                                                 l563 1DAA  
                                                 l555 1CAA  
                                                 l379 19BE  
                                                 l644 0770  
                                                 l636 0704  
                                                 l628 0634  
                                                 l564 1DB2  
                                                 l804 61CC  
                                                 l900 37A0  
                                                 l661 5C76  
                                                 l741 4286  
                                                 l733 49D0  
                                                 l645 0784  
                                                 l573 1E1A  
                                                 l805 61D4  
                                                 l750 42BA  
                                                 l718 496E  
                                                 l670 2B7E  
                                                 l654 0808  
                                                 l646 07A2  
                                                 l638 0720  
                                                 l566 1DCA  
                                                 l806 61DC  
                                                 l910 6E2A  
                                                 l751 42C6  
                                                 l719 4988  
                                                 l671 2B88  
                                                 l575 1E3C  
                                                 l559 1CCA  
                                                 l752 42D8  
                                                 l680 2CB4  
                                                 l672 2B9C  
                                                 l648 07CE  
                                                 l592 3FAA  
                                                 l576 1E44  
                                                 l920 71DA  
                                                 l808 61E6  
                                                 l912 6E32  
                                                 l753 42E4  
                                                 l737 49E0  
                                                 l665 2CCA  
                                                 l649 07A8  
                                                 l577 1E68  
                                                 l921 71A0  
                                                 l754 42F6  
                                                 l674 2BE6  
                                                 l666 2B1E  
                                                 l690 15A6  
                                                 l586 1EBA  
                                                 l659 5C60  
                                                 l747 4338  
                                                 l755 432C  
                                                 l675 2C0E  
                                                 l691 15B2  
                                                 l923 71AA  
                                                 l907 6E04  
                                                 l748 42B2  
                                                 l668 2CEE  
                                                 l676 2C3C  
                                                 l684 1788  
                                                 l692 15D0  
                                                 l596 4042  
                                                 l764 70B8  
                                                 _BDT 000D00  
                                                 l677 2C4E  
                                                 l669 2B72  
                                                 l693 161A  
                                                 l685 1500  
                                                 l597 403C  
                                                 l589 1EC2  
                                                 l678 2C54  
                                                 l694 15F4  
                                                 l679 2C68  
                                                 l687 17AC  
                                                 l695 165C  
                                                 l599 4046  
                                                 l767 70EE  
                                                 l927 71BC  
                                                 l960 57BC  
                                                 l696 1658  
                                                 l688 15A0  
                                                 l929 71C8  
                       __size_of__sector_from_cluster 000E  
                                                 l698 1670  
                                                 l890 37B0  
                                                 l699 16D8  
                                                 l891 375C  
                                                 l892 37F4  
                                                 l893 3764  
                                                 l966 582A  
                                                 l894 376C  
                                                 l886 36C8  
                                                 l895 3774  
                                                 l896 377C  
                                                 l888 374E  
                                                 l897 3784  
                                                 l898 378C  
                                                 _LBA 0080  
                                                 _LUN 01E2  
                                                 _UIE 000F36  
                                                 _UIR 000F62  
                             __get_first_cluster@slot 0039  
                                _i2c_digipot_reset_on 7B76  
                                   main@tx_start_addr 00F6  
                            __size_of__display_failed 02F6  
                                         _start_line1 8D88  
                                         _start_line2 8D77  
                                         _start_line3 8CF6  
                                         _start_line4 8E62  
                                  api_prepare@command 005D  
                                          _USBSuspend 7936  
                                  _internalFlash_read 7730  
                              __end_of_display_update 699A  
                                USBStdSetCfgHandler@i 0018  
                                                 prod 000FF3  
                                                 tosl 000FFD  
                                                 wreg 000FE8  
                                      _USBDeviceTasks 321C  
                                 ?_USBCheckHIDRequest 0001  
                                        __CFG_IESO$ON 000000  
                                      _USBDeviceState 00B0  
                                        ?__write_root 0029  
                            __size_of__display_verify 012C  
                               _spi_set_configuration 4360  
                               ??_USBCtrlTrfRxService 0001  
                                __read_fat@fat_sector 0032  
                                       _hex_file_size 0078  
                            USBEnableEndpoint@options 0009  
                   internalFlash_addressFromPage@page 0001  
                                   ??_MSDErrorHandler 0009  
                                ?__system_timer0_init 0001  
                                 api_prepare@inBuffer 00EE  
                            fat_create_file@root_slot 00B9  
                         __flash_write_to_buffer@data 0016  
                                                l1002 7D0A  
                                                l2000 1A3C  
                                                l2001 1A40  
                                                l2010 1AC6  
                                                l2002 1A44  
                                                l2011 1ACA  
                                                l2003 1A56  
                                                l1220 7070  
                                                l2020 1AEE  
                                                l2012 1ACE  
                                                l2004 1A66  
                                                l2021 1AF2  
                                                l2013 1AD2  
                                                l2005 1A76  
                                                l2101 58A6  
                                                l2030 1B16  
                                                l2022 1AF6  
                                                l2014 1AD6  
                                                l2006 1A86  
                                                l1302 4AE6  
                                                l2031 1B1A  
                                                l2023 1AFA  
                                                l2015 1ADA  
                                                l2007 1A96  
                                                l1303 4AFA  
                                                l1144 7E20  
                                                l2040 1B3E  
                                                l2032 1B1E  
                                                l2024 1AFE  
                                                l2016 1ADE  
                                                l2008 1AA6  
                                                l1304 4B10  
                                                l1153 7DAC  
                                                l2041 1B42  
                                                l2033 1B22  
                                                l2025 1B02  
                                                l2017 1AE2  
                                                l2009 1AB6  
                                                l2105 58F6  
                                                l2042 1B46  
                                                l2034 1B26  
                                                l2026 1B06  
                                                l2018 1AE6  
                                                l1306 4B38  
                                                l1171 7DA4  
                                                l1219 708C  
                                                l2051 700C  
                                                l2043 1B4A  
                                                l2035 1B2A  
                                                l2027 1B0A  
                                                l2019 1AEA  
                                                l1307 4B58  
                                                l1092 7B48  
                                                l2140 79DA  
                                                l2052 6FF0  
                                                l2044 1B4E  
                                                l2036 1B2E  
                                                l2028 1B0E  
                                                l1308 4B76  
                                                l2133 65BE  
                                                l1093 7B36  
                                                l1165 7DB8  
                                                l2301 0EE8  
                                                l2045 1B52  
                                                l2037 1B32  
                                                l2029 1B12  
                                                l1085 77F0  
                                                l1190 73B6  
                                                l1182 7A2A  
                                                l2142 79E8  
                                                l1510 53A4  
                                                l2054 6FF4  
                                                l2046 1B56  
                                                l2038 1B36  
                                                l2070 318C  
                                                l1086 77FA  
                                                l2135 65CE  
                                                l1159 7E18  
                                                l1191 739A  
                                                l1183 7A1C  
                                                l1511 53AA  
                                                l2055 6FF8  
                                                l2047 1B5A  
                                                l2039 1B3A  
                                                l2071 3138  
                                                l1184 7A3E  
                                                l2160 0310  
                                                l1600 10B0  
                                                l1512 53B0  
                                                l2056 6FFC  
                                                l2080 315C  
                                                l2072 313C  
                                                l2064 30B6  
                                                l1185 7A20  
                                                l2153 003E  
                                                l2241 6DA0  
                                                l1441 506E  
                                                l1601 1082  
                                                l1505 53BC  
                                                l1513 53B6  
                                                l2057 7000  
                                                l2081 3160  
                                                l2073 3140  
                                                l1273 54C8  
                                                l1281 5480  
                                                l1186 7A24  
                                                l2250 4C7E  
                                                l2138 79D0  
                                                l2162 039C  
                                                l1434 5000  
                                                l1530 38AA  
                                                l1514 540E  
                                                l1506 5392  
                                                l2058 7004  
                                                l2090 3184  
                                                l2082 3164  
                                                l2074 3144  
                                                l2066 30C4  
                                                l1274 5446  
                                                l2251 4BBA  
                                                l2163 03C0  
                                                l2155 00B4  
                                                l2235 6DB2  
                                                l1427 7340  
                                                l1611 11E4  
                                                l1523 3830  
                                                l1515 53FA  
                                                l2059 7008  
                                                l2091 3188  
                                                l2083 3168  
                                                l2075 3148  
                                                l1283 5490  
                                                l1700 6F5C  
                                                l1196 6066  
                                                l2252 4C10  
                                                l2156 0202  
                                                l2244 6DA6  
                                                l2236 6D88  
                                                l1612 11B6  
                                                l1604 1100  
                                                l1620 2D7C  
                                                l1532 392C  
                                                l1524 3802  
                                                l1516 5400  
                                                l1508 5398  
                                                l2092 3218  
                                                l2084 316C  
                                                l2076 314C  
                                                l2068 30FC  
                                                l1197 604A  
                                                l2165 0426  
                                                l2157 0188  
                                                l1437 5026  
                                                l1429 734C  
                                                l1605 10D2  
                                                l1541 29C6  
                                                l1621 2D4E  
                                                l1533 38FE  
                                                l1517 5406  
                                                l1509 539E  
                                                l2085 3170  
                                                l2077 3150  
                                                l1285 54A8  
                                                l1277 5458  
                                                l1710 64A2  
                                                l2262 5ACC  
                                                l2254 4C66  
                                                l2270 1332  
                                                l1550 2AFA  
                                                l1542 2998  
                                                l1526 3884  
                                                l1518 5438  
                                                l2086 3174  
                                                l2078 3154  
                                                l2511 3D42  
                                                l2255 4C68  
                                                l2167 0458  
                                                l2159 033E  
                                                l2271 13AC  
                                                l2239 6D94  
                                                l1439 504A  
                                                l1471 0882  
                                                l1551 2ACC  
                                                l1623 2DD0  
                                                l1527 3856  
                                                l2095 7A92  
                                                l2087 3178  
                                                l2079 3158  
                                                l1287 54B8  
                                                l1279 5470  
                                                l1712 64C0  
                                                l2520 3DC4  
                                                l2512 3D58  
                                                l2256 4C72  
                                                l1632 354C  
                                                l1608 1150  
                                                l1544 2A1A  
                                                l1624 2DA2  
                                                l1560 3C30  
                                                l2088 317C  
                                                l2601 727E  
                                                l2521 3DD2  
                                                l2169 048A  
                                                l2273 140C  
                                                l1641 366C  
                                                l1633 351E  
                                                l1473 092C  
                                                l1609 1122  
                                                l1545 29EC  
                                                l1617 2D28  
                                                l1529 38D8  
                                                l2089 3180  
                                                l2530 4CBC  
                                                l2514 3DFA  
                                                l2290 0D24  
                                                l2274 143E  
                                                l1642 363E  
                                                l1538 2972  
                                                l1626 2E84  
                                                l1618 2CFA  
                                                l1562 3CB2  
                                                l1298 4B86  
                                                l1707 6460  
                                                l2531 4D50  
                                                l2515 3D84  
                                                l2283 0BE2  
                                                l2275 146C  
                                                l1571 3424  
                                                l1635 35A0  
                                                l1475 09D8  
                                                l1547 2AA6  
                                                l1539 2944  
                                                l1627 2E56  
                                                l1563 3C84  
                                                l1299 4AD2  
                                                l1740 7BFA  
                                                l1708 646A  
                                                l2532 4CD4  
                                                l2524 4C9A  
                                                l2508 3D6E  
                                                l1820 7784  
                                                l2284 0C5E  
                                                l2276 14C8  
                                                l1572 33F6  
                                                l1636 3572  
                                                l1548 2A6E  
                                                l1556 3C0A  
                          USBConfigureEndpoint@handle 0007  
                                                l2613 69D6  
                                                l2533 4CF0  
                                                l2541 550A  
                                                l2517 3D92  
                                                l2509 3D2C  
                                                l2381 6390  
                                                l2293 0D60  
                                                l2285 0CB8  
                                                l2269 12D8  
                                                l1477 0A84  
                                                l1557 3BDC  
                                                l1734 6EFA  
                                                l1726 72F8  
                                                l2518 3DA4  
                                                l2286 0D12  
                                                l2278 14EA  
                                                l3262 722E  
                                                l1574 34A2  
                                                l1638 35F4  
                                                l1735 6F04  
                                                l1727 7302  
                                                l1911 5374  
                                                l2607 6896  
                                                l2527 4CA0  
                                                l2543 5544  
                                                l2519 3DB6  
                                                l2383 639C  
                                                l2295 0E0E  
                                                l3263 7238  
                                                l1575 346A  
                                                l1639 35C6  
                                                l3191 6B1E  
                                                l1479 0B30  
                                                l1591 1010  
                                                l1583 0F68  
                                                l1559 3C5E  
                                                l1920 2F40  
                                                l1816 77BA  
                                                l2296 0ED2  
                                                l3272 74C0  
                                                l1568 33D0  
                                                l3192 6B2C  
                                                l1592 0FE2  
                                                l1584 0F3A  
                                                l1905 5320  
                                                l1921 3078  
                                                l2529 4D18  
                                                l2553 2906  
                                                l2545 5582  
                                                l2289 0F1C  
                                                l2297 0E18  
                                                l3273 74CA  
                                                l1577 34F6  
                                                l1569 33A2  
                                                l1681 640A  
                                                l1690 7148  
                                                l1922 301A  
                                                l2554 2934  
                                                l2546 554E  
                                                l2298 0E90  
                                                l3258 720E  
                                                l3442 7474  
                                                l1578 34C8  
                                                l2810 62B2  
                                                l1594 11B0  
                                                l1586 0FBC  
                                                l1682 6436  
                                                l2619 630E  
                                                l1923 303C  
                                                l1931 6A28  
                                                l2555 290C  
                                                l2547 555A  
                                                l2571 24F4  
                                                l2299 0ECC  
                                                l3259 7206  
                                                l2811 62C0  
                                                l3187 6AF6  
                                                l1587 0F8E  
                                                l1692 7170  
                                                l1924 3072  
                                                l2580 6184  
                                                l3460 7A06  
                                                l2388 7AA4  
                                                l3268 74A8  
                                                l3188 6AEA  
                                                l1596 1060  
                                                l2741 4454  
                                                l1853 6548  
                                                l1941 212A  
                                                l1861 7B5E  
                                                l1933 6A66  
                                                l2581 618A  
                                                l3461 79F6  
                                                l2397 7764  
                                                l3269 74A0  
                                                l1589 118E  
                                                l1597 1032  
                                                l2742 4364  
                                                l1950 22AC  
                                                l3454 6B92  
                                                l2590 5F22  
                                                l2582 6190  
                                                l2566 5A0A  
                                                l3446 5908  
                                                l2806 627E  
                                                l2734 75BE  
                                                l1855 65AE  
                                                l1863 7B6E  
                                                l3455 6B54  
                                                l2591 5F30  
                                                l2575 619C  
                                                l2583 6196  
                                                l2807 6272  
                                                l2735 759A  
                                                l1944 2198  
                                                l3472 52B0  
                                                l1928 6A0E  
                                                l2592 5F3E  
                                                l2576 6146  
                                                l3448 5942  
                                                l2736 75CC  
                                                l1689 718A  
                                                l2761 6106  
                                                l1785 6782  
                                                l1945 2172  
                                                l3473 520A  
                                                l1873 5FAE  
                                                l2593 5F4C  
                                                l1961 1F44  
                                                l1777 713E  
                                                l3449 5980  
                                                l2737 75AC  
                                                l2770 5E38  
                                                l3474 52A8  
                                                l1954 5CE0  
                                                l2594 5F5A  
                                                l2578 614C  
                                                l2755 6FE6  
                                                l2747 43C8  
                                                l1699 6F52  
                                                l1787 67E4  
                                                l1947 22EE  
                                                l2587 5F6A  
                                                l2579 6168  
                                                l1963 1F7C  
                                                l2764 613A  
                                                l1948 2210  
                                                l1876 6010  
                                                l1956 5D14  
                                                l2588 5F14  
                                                l1964 1F56  
                                                l1980 4D72  
                                                l2773 5E74  
                                                l1869 668A  
                                                l1949 2266  
                                                l2589 5F98  
                                                l1973 4DAA  
                                                l1981 4D76  
                                                l1966 2104  
                                                l1990 4D9A  
                                                l1982 4D7A  
                                                l1974 4D5E  
                                                l1967 1FF2  
                                                l1991 4D9E  
                                                l1983 4D7E  
                                                l1968 201A  
                                                l1992 4DA2  
                                                l1984 4D82  
                                                l1976 4D62  
                                                l1969 20C2  
                                                l1993 4DA6  
                                                l1985 4D86  
                                                l1977 4D66  
                                                l1986 4D8A  
                                                l1978 4D6A  
                                                l1987 4D8E  
                                                l1979 4D6E  
                                                l1988 4D92  
                                                l1997 1B5E  
                                                l1989 4D96  
                                                l1998 1A38  
                                                STR_1 8FF1  
                                                l9848 485E  
                                                STR_2 8FF1  
                                                STR_3 8FF1  
                                                STR_4 8FF1  
                                                STR_5 8FF1  
                                                STR_6 8FF1  
                                                STR_7 8FF1  
                               __end_of_checked_line1 8E09  
                                                l9966 496E  
                                                STR_8 8FF1  
                               __end_of_checked_line2 8CE2  
                                                STR_9 8FDC  
                               __end_of_checked_line3 8E7B  
                               __end_of_checked_line4 8D77  
                                      _bootloader_run 6D84  
                                 ?_internalFlash_read 000E  
                                       _i2c_frequency 0099  
                                                u6125 6476  
                                                u7030 4EA2  
                                                u6215 6F10  
                                                u7050 4EE0  
                                                u6314 423C  
                                                u6235 64DC  
                                                u6315 4236  
                                                u6340 4272  
                                                u7205 1526  
                                                u7037 4E98  
                                                u7070 6B74  
                                                u7400 6E40  
                                                u8120 19A4  
                                                u6425 6F68  
                                                u7057 4ED6  
                                                u9010 727A  
                                                u7410 6E4C  
                                                u7330 1712  
                                                u9100 630A  
                                                u7420 6E58  
                                                u6700 49BA  
                                                u7148 2BC0  
                                                u7340 1714  
                                                u7228 155A  
                                                u8300 075E  
                                                u8220 062C  
                                                u6540 51A2  
                                                u7077 6B6A  
                                                u7149 2BD4  
                                                u7229 156E  
                                                u7510 7B72  
                                                u7430 6E64  
                                                u6278 41E6  
                                                u7095 2B44  
                                                u6279 41F8  
                               ??_USBCtrlTrfTxService 0001  
                                                u8400 2F3E  
                                                u9040 6892  
                                                u7440 6E70  
                                                u7408 6E42  
                                                u6720 49CC  
                                                u9120 6282  
                                                u7450 6E7A  
                                                u7418 6E4E  
                                                u6810 77B6  
                                                u8330 07D6  
                                                u6298 420A  
                                                u6299 421E  
                                                u7540 6690  
                                                u6900 5298  
                                                u7428 6E5A  
                                                u6740 49DC  
                                                u6820 7780  
                                                u7605 6D50  
                                                u9070 69D2  
                                                u7438 6E66  
                                                u6670 49A4  
                                                u7358 171A  
                                                u8238 064C  
                                                u9150 6AFA  
                                                u7615 6A98  
                                                u7359 172E  
                                                u8239 0660  
                                                _UCFG 000F39  
                                                u7456 6E7C  
                                                u7448 6E72  
                                                u7288 1626  
                                                u7289 163A  
                                                u8530 5D08  
                                                u8290 074C  
                                                u6930 7212  
                                                u6907 528E  
                                                u6860 65AA  
                                                u8188 052C  
                                                u7900 3BA2  
                                                u9500 2582  
                                                _UEP0 000F26  
                                                u6845 656E  
                                                u7725 65F4  
                                                u8189 0540  
                                                _UEP1 000F27  
                                                u6870 522A  
                                                u8390 2F10  
                                                u8550 5D44  
                                                u8198 055C  
                                                u9334 4012  
                                                u9318 3FE2  
                                                u9270 3F78  
                                                u7830 47BE  
                                    ?_fat_create_file 0044  
                                                u8199 0570  
                                                u9335 400C  
                                                u9319 3FF4  
                                                u7680 5380  
                                                u6960 74AC  
                                                u8800 505A  
                                                u9600 26A2  
                                                u9520 25C6  
                                                u6890 5262  
                                                u7690 5386  
                                                u9258 3F46  
                                                u9370 0940  
                                                u9450 58AC  
                                                u7595 6EB6  
                                                u8395 2F06  
                                                u9259 3F5A  
                                                u7907 3B98  
                                                _UEIE 000F37  
                                                u9284 3F8E  
                                                u9380 09EC  
                                                u9620 26DC  
                                                u9540 260A  
                                                u6877 5220  
                                                u8725 7522  
                                                u9285 3F88  
                                                u8901 30CE  
                                                u9294 3FC0  
                                                u7870 3B1A  
                                                u9390 0A98  
                                                u6895 525C  
                                                u8815 66BC  
                                                u9295 3FBA  
                                                u7880 3B4A  
                                                u9640 270A  
                                                u9560 2644  
                                                u9480 58FC  
                                                u6897 5252  
                                                u8770 4FEC  
                                                u8780 5012  
                                                u9660 273A  
                                                u9580 2672  
                                                u7877 3B10  
                                                u8790 5036  
                                                u7887 3B40  
                                                u9920 24E4  
                                                u9760 4BE0  
                                                u9680 00A2  
                                                _UEIR 000F63  
                                                _UCON 000F65  
                                                u8945 671A  
                                                u9835 7C5C  
                                                u9780 4C3C  
                                                u8965 7974  
                                                u9845 7814  
                                                u9855 6362  
                                                u9960 5580  
                                                u9880 63B6  
                               _i2c_digipot_reset_off 7B98  
                             ??_fat_get_format_status 002C  
                           __parse_file_truncate@data 0001  
                               __size_of__delete_root 005C  
                                      _ResetSenseData 6C06  
              __end_of__fill_buffer_get_configuration 5C22  
             __size_of__fill_buffer_get_configuration 009E  
                      __fill_buffer_get_configuration 5B84  
              USBStdFeatureReqHandler@current_ep_data 001B  
                              ?__update_modified_time 0005  
                                                _pDst 008E  
                                                _main 368E  
                                                _itoa 7450  
                          __end_of_fat_append_to_file 233C  
                         __size_of_APP_DeviceMSDTasks 0014  
                                                fsr0h 000FEA  
                                                fsr1h 000FE2  
                             __end_of_display_prepare 5444  
                                                indf0 000FEF  
                                                fsr2h 000FDA  
                                                fsr0l 000FE9  
                                                indf1 000FE7  
                                                indf2 000FDF  
                                                fsr1l 000FE1  
                                                fsr2l 000FD9  
                                                _utoa 5900  
                          ??_ExternalFlash_SectorRead 0034  
                         __fill_buffer_find_file@cntr 004C  
                             __bootloader_verify_file 122A  
                           _ExternalFlash_MediaDetect 7E50  
                                                prodh 000FF4  
                                                prodl 000FF3  
                                                start 001C  
                     __end_of_APP_DeviceMSDInitialize 7D68  
                               _display_get_character 7A44  
                                ??_USBCheckHIDRequest 0001  
                                    ?_MSDWriteHandler 0001  
                                __end_of_failed_line1 8DF9  
                                __end_of_failed_line2 8D54  
                                __end_of_failed_line4 8E73  
                      ??_MSDProcessCommandMediaAbsent 0048  
                          __end_of_USBCheckStdRequest 4748  
                              ??_USBCtrlTrfOutHandler 0003  
                                 __bootloader_program 0BC8  
                        ??__flash_copy_page_to_buffer 0017  
                    __fill_buffer_find_file@outBuffer 0046  
                      ?__flash_write_page_from_buffer 0014  
                                        ___param_bank 000000  
                           __size_of_flash_page_write 0056  
                           ??_USBStdFeatureReqHandler 0018  
                                        _USBOutHandle 0084  
                internalFlash_addressFromPage@address 0005  
                               parseHexFileEntry@data 000C  
                            __end_of__display_checked 3518  
                                      _hex_file_entry 01C4  
                              _bootloader_get_entries 7DF0  
                     __size_of__flash_write_to_buffer 0050  
                            ??_USBStdGetStatusHandler 0001  
                                ??_internalFlash_read 0016  
                                      ?_USBDeviceInit 0001  
                                   __flash_get_status 7904  
    __fill_buffer_get_bootloader_details@buffer_large 000C  
                            _system_ui_inactive_count 016C  
    __fill_buffer_get_bootloader_details@buffer_small 0010  
                                       __CFG_PLLDIV$2 000000  
                       i2c_display_write_fixed@length 0008  
                          __end_of__get_first_cluster 6AD8  
                                               l10034 71AA  
                                               l10126 520A  
                                               l10230 4E54  
                                               l10038 71C8  
                                               l10340 2CC4  
                                               l10262 6B54  
                                               l10182 79F6  
                                               l12104 7A92  
                                               l11218 2172  
                                               l13002 5552  
                                               l10542 6010  
                                               l10472 7B56  
                                               l10632 5386  
                                               l10544 6014  
                                               l11176 303C  
                                               l11264 5CD8  
                                               l10492 662E  
                                               l11276 5D0C  
                                               l11604 1F56  
                              ?_i2c_digipot_backlight 0001  
                                               l10590 52D6  
                                               l14200 3324  
                                               l12088 318C  
                                               l12512 63D4  
                                               l13306 1CC2  
                                               l10754 478A  
                                               l10596 52EA  
                                               l12620 2626  
                                               l12540 5878  
                             ?__fill_buffer_find_file 0044  
                                               l12606 25E2  
                                               l13168 398C  
                                               l12456 0882  
                                               l12632 264C  
                                               l14074 0E90  
                                               l12642 2672  
                                               l13452 4CEC  
                                               l13196 39F0  
                                               l12644 267A  
                                               l12670 26E4  
                                               l12558 58C8  
                                               l13632 7344  
                                               l12680 270A  
                                               l12592 259E  
                                               l10986 05FC  
                                               l12850 6388  
                                               l13626 7338  
                                               l12682 2712  
                                               l12658 26BE  
                                               l12578 255A  
                                               l12782 4C10  
                                               l11982 30B6  
                                               l12928 5A02  
                                               l12856 6394  
                                               l11996 30FC  
                                               l11988 30C4  
                                               l13950 1258  
                                        spi_tx@length 0003  
                                               l14960 1B76  
                                               l14970 6216  
                                               l14962 1C8E  
                                               l14972 624A  
                                  ?__flash_get_status 000D  
                             __end_of_fat_rename_file 5D54  
                                               ?_main 0001  
                                               ?_itoa 0011  
                                               STR_10 8FE8  
                                               STR_11 8FFA  
                                               STR_12 8FCF  
                               ?_i2c_digipot_reset_on 0001  
                                    ??__display_clear 0001  
                   __size_of_USBCtrlEPServiceComplete 0100  
                                               u10010 39B0  
                                     __end_of___lldiv 62D2  
                                               ?_utoa 0008  
                                               u10040 3A54  
                    MSDCheckForErrorCases@DeviceBytes 000B  
                                               u10160 1CBE  
                                               u10180 1CF2  
                                               u10350 1E9C  
                                               u11310 3398  
                                               u10415 72A0  
                                               u10431 799E  
                                               u11400 57D4  
                                               u11420 57EA  
                                               u10540 7378  
                                               u11500 4B22  
                                     __end_of___llmod 6B3E  
                              __end_of_USBDeviceTasks 339C  
                                               u11530 4B70  
                                               u10900 12A8  
                                               u11917 7B3C  
                                               u10990 0C2E  
                                               u11927 7162  
                                               u11937 7174  
                           ?_USBCtrlEPServiceComplete 0001  
                                               u11947 717E  
                                     __end_of___lwdiv 7242  
                        __flash_write_to_buffer@start 0014  
                                    ??__display_found 0025  
                                     __end_of___lwmod 74D4  
                                               _UADDR 000F38  
                                               _TMR0H 000FD7  
                                               _TMR0L 000FD6  
                                _file_minimum_address 0148  
                                    ??__display_start 0001  
                                               _USTAT 000F64  
                                    __i2c_read@length 0008  
                          __size_of_parseHexFileEntry 047C  
                         ?_ExternalFlash_CapacityRead 0001  
                                     ?_display_update 0001  
                            __bootloader_program@cntr 00F1  
                  __size_of_USBCtrlEPAllowStatusStage 00C4  
                                ?__bootloader_program 0001  
                                        __delete_root 6D28  
                                     ??_flash_is_busy 0014  
                                    __end_of_MSDTasks 1EF6  
                                      __CFG_FCMEN$OFF 000000  
                                     __read_fat@value 0036  
                                  _USBCheckMSDRequest 5146  
                     __end_of_internalFlash_getBuffer 7DA0  
                     __end_of_USBCtrlEPAllowDataStage 5B84  
                                               _sd000 8FCB  
                                               _sd001 8EE7  
                                               _sd002 8F1B  
                                               _sd003 8F8A  
                      ?_USBIncrement1msInternalTimers 0001  
                      __size_of_MSDTransferTerminated 0056  
                                 ??__flash_get_status 000F  
                              __end_of_bootloader_run 6DDE  
                       __end_of_MSDTransferTerminated 70F0  
                 i2c_display_send_init_sequence@F6791 01F6  
                                        _gblCBWLength 009D  
                          __end_of__parse_file_delete 7294  
                           ??_internalFlash_writePage 0005  
                              ?_MSDCheckForErrorCases 000B  
                               ??__system_timer0_init 0001  
                          __end_of__parse_file_append 6354  
                          __end_of__parse_file_create 68C6  
                              __end_of_ResetSenseData 6C68  
                            __get_empty_cluster@value 0036  
                          __end_of__parse_file_modify 7E5C  
                          __end_of__parse_file_rename 6A04  
                           internalFlash_read@address 000E  
                            __parse_command_long@data 0053  
                           fat_get_format_status@cntr 002E  
                             ?__fill_buffer_read_file 0055  
                                               pclath 000FFA  
                                     __end_of_ui_init 7D00  
                                               tablat 000FF5  
                           __size_of_USBStallEndpoint 0108  
                                 ?_USBCheckMSDRequest 0001  
                                     _MSDCommandState 00A1  
                         ??_ExternalFlash_SectorWrite 002E  
                                               plusw1 000FE3  
                                               plusw2 000FDB  
                     __end_of_internalFlash_erasePage 783A  
                                         ?_USBMSDInit 0001  
            ExternalFlash_WriteProtectStateGet@config 0001  
                       __size_of__system_encoder_init 003A  
                                               utoa@c 0010  
                                               utoa@v 000E  
                                               status 000FD8  
                             i2c_eeprom_readByte@addr 0018  
                         ?__flash_copy_page_to_buffer 0014  
                                   __CFG_DSWDTPS$8192 000000  
                                     __end_of_strncmp 52CA  
                               hexCharsToUint8@retVal 0006  
                     __fill_buffer_read_file@inBuffer 0055  
                      __bootloader_check_address@cntr 000C  
                      ??_MSDComputeDeviceInAndResidue 0003  
                            __ic2_display_set_address 7AE4  
             __fill_buffer_get_file_details@outBuffer 0041  
                                      _MSDReadHandler 2B1C  
                                   __delete_root@slot 002F  
                             __CFG_DSWDTOSC$INTOSCREF 000000  
                        __size_of_USBStdSetCfgHandler 00E2  
                   fat_create_file@number_of_clusters 00BA  
                                flash_page_write@data 0022  
                     __size_of_fat_get_empty_clusters 008E  
               __bootloader_check_address@byte_status 000B  
                                flash_page_write@page 0020  
                       internalFlash_readPage@address 0018  
                                     __initialization 55AC  
                       fat_read_from_file@file_number 00B7  
                           __end_of__flash_get_status 7936  
                        fat_get_file_information@data 0037  
                  spi_set_configuration@configuration 0001  
               __end_of_ExternalFlash_MediaInitialize 7CA8  
              __size_of_ExternalFlash_MediaInitialize 001A  
                       _ExternalFlash_MediaInitialize 7C8E  
                                         _system_init 68C6  
                      __size_of_system_encoder_enable 0010  
                                         _FileAddress 0164  
                                        __end_of_main 37FC  
                                        __end_of_itoa 7492  
                       __end_of_system_encoder_enable 7D48  
                          i2c_eeprom_readByte@address 0012  
                     __end_of_i2c_display_write_fixed 709A  
                                        __end_of_utoa 59A4  
                                __end_of__normal_mode 6E36  
                                    _timer_pseudo_isr 77D2  
                            __parse_command_short@cmd 0014  
                                    __end_of_i2c_init 7D82  
                            __end_of__i2c_acknowledge 7DBE  
                      __end_of__fill_buffer_find_file 5A46  
                                       ??__i2c_open_1 0001  
                                     _hex_file_offset 007C  
                          __end_of__get_empty_cluster 669A  
                                ??_USBCheckMSDRequest 000C  
                   __fill_buffer_get_status@outBuffer 0015  
                                      __CFG_OSC$HSPLL 000000  
                     ??_bootloader_get_rec_dataLength 0003  
              MSDComputeDeviceInAndResidue@DiExpected 0001  
                              hexCharsToUint16@retVal 000A  
                             _USBCheckMSDRequest$2320 000E  
                             _USBCheckMSDRequest$2319 000C  
                             _bootloader_get_rec_data 7CC0  
                           __size_of_USBCtrlEPService 00AC  
                                        __get_fat@idx 0001  
                                        __get_fbr@idx 0001  
                                api_prepare@outBuffer 00F0  
                                              ??_main 005E  
                                    __end_of__i2c_get 7DB4  
                                              ??_itoa 0017  
                                  USBStallEndpoint@ep 0006  
                                __size_of__ui_encoder 00B4  
                                              ??_utoa 000E  
                          __bootloader_program@buffer 00E2  
                                       __activetblptr 000003  
                                     ?_USBDeviceTasks 0001  
                               main@bytes_transmitted 00F8  
                            _fat_get_file_information 65B2  
                                  __write_root@offset 002E  
                                        __get_mbr@idx 0001  
          __end_of_ExternalFlash_WriteProtectStateGet 7E50  
         __size_of_ExternalFlash_WriteProtectStateGet 0004  
                ??_ExternalFlash_WriteProtectStateGet 0003  
                 ?_ExternalFlash_WriteProtectStateGet 0001  
                  _ExternalFlash_WriteProtectStateGet 7E4C  
                                         ?_USBSuspend 0001  
                         ?_spi_get_external_rx_buffer 0001  
                                __size_of_api_prepare 0120  
                               ??__bootloader_program 0055  
          __internalFlash_unlockAndActivate@UnlockKey 0001  
                              ?_spi_set_configuration 0001  
                                _i2c_eeprom_writeByte 7516  
                         ?_spi_get_external_tx_buffer 0001  
                                     ?_bootloader_run 0001  
                       __flash_write_to_buffer@buffer 001A  
                                     _system_delay_ms 7B2E  
                              __flash_write_to_buffer 72E4  
                     i2c_digipot_reset_off@data_array 000B  
                       __size_of__parse_file_truncate 0004  
                      __end_of__fill_buffer_read_file 2552  
                                _start_from_byte_next 0095  
                                    ___llmod@dividend 0001  
                                              _EECON1 000FA6  
                                              _EECON2 000FA7  
                                              _DMABCH 000F66  
                                              _DMABCL 000F67  
                                   ??__display_failed 0025  
                              ?_i2c_digipot_reset_off 0001  
                                     ?_ResetSenseData 0001  
                         ??__get_available_root_entry 0037  
                                          __i2c_start 7E1E  
                              SYSTEM_Initialize@state 0005  
                                          __i2c_write 737C  
                           fat_read_from_file@cluster 00D8  
                                      __CFG_WDTEN$OFF 000000  
                __flash_write_page_from_buffer@buffer 0016  
                                              _INTCON 000FF2  
                                              _TABLAT 000FF5  
                           ??__bootloader_verify_file 0055  
                     ??_APP_DeviceCustomHIDInitialize 000D  
                            ?__fill_buffer_get_status 0015  
                                    __end_of__get_fat 7044  
                                    __end_of__get_fbr 1C9E  
                                    __end_of__get_mbr 4E2A  
                                              _OSCCON 000FD3  
                         __flash_partial_read@address 0024  
                                              _TBLPTR 000FF6  
                                              _RPINR1 000EE1  
                                              _RPOR21 000ED5  
                                              _RPINR2 000EE2  
                                              _RPOR22 000ED6  
                                              _RPINR3 000EE3  
                                              _RPOR23 000ED7  
                                   ??__display_verify 001F  
                                      __CFG_WPCFG$OFF 000000  
                              __end_of_MSDReadHandler 2CF4  
                                 _flash_pages_written 0166  
                                   __spi_init@details 0001  
                                    ??__i2c_wait_idle 0001  
                              ?_display_get_character 0001  
                                    ?_display_prepare 0001  
                         fat_append_to_file@file_size 00B7  
            __fill_buffer_get_bootloader_details@cntr 000B  
                         __flash_partial_read@command 0020  
                                      __CFG_WPDIS$OFF 000000  
                               __bootloader_find_file 5A46  
                                    __read_fat@offset 0034  
                                    __end_of_fat_init 7D58  
                   __bootloader_program@page_to_write 00F3  
                                   _shortPacketStatus 00AF  
                   fat_append_to_file@number_of_bytes 003F  
                          __get_empty_cluster@cluster 0038  
                                      __CFG_XINST$OFF 000000  
                                     USBDeviceTasks@i 0020  
                         USBStdFeatureReqHandler@pUEP 0019  
                            USBTransferOnePacket@data 0002  
                          USBCtrlTrfInHandler@lastDTS 0002  
                     __end_of_internalFlash_writePage 63D2  
                        __end_of__flash_set_page_size 644C  
                                     _hexCharsToUint8 7C3C  
                                     ??_USBDeviceInit 0009  
                  __flash_copy_page_to_buffer@command 001A  
                            flash_partial_read@length 002C  
                                              _gblCBW 0100  
                                   _fat_get_file_size 669A  
                                  __size_of__i2c_read 008C  
                           __size_of_hexCharsToUint16 0070  
                                  __size_of__i2c_send 0008  
                                      __CFG_STVREN$ON 000000  
                                  __size_of__i2c_stop 0008  
                                           ??___lldiv 0009  
                                           ??___llmod 0009  
           SYSTEM_Initialize@pll_startup_counter_3026 0003  
                                           ??___lwdiv 0005  
                        __size_of_flash_partial_write 0070  
                                          _SoftDetach 009C  
                                           ??___lwmod 0005  
                                              _buffer 0340  
                                   _USBEnableEndpoint 75D2  
                       __bootloader_program@address32 00EC  
                     __size_of_USBStdGetStatusHandler 00AA  
                                              _memcpy 6B3E  
                                  ?_fat_get_file_size 0030  
                                              _memset 79EC  
                                              clear_0 5606  
                                              clear_1 561A  
                                              clear_2 562C  
                                              clear_3 5638  
                                              clear_4 5644  
                                              clear_5 5650  
                           _ExternalFlash_SectorWrite 7766  
                                   api_parse@inBuffer 00E8  
                                     __CFG_CLKOEC$OFF 000000  
                                    __end_of_inq_resp 8F6D  
                __bootloader_check_address@worst_case 000A  
                              ??_i2c_digipot_reset_on 000B  
                        bootloader_get_rec_data@index 0001  
                                              _ui_run 4AD0  
                                              _spi_tx 6F96  
                                  ?_USBEnableEndpoint 0009  
                         internalFlash_erasePage@page 0003  
                             i2c_eeprom_writeByte@dat 0011  
                                  _flash_partial_read 78D2  
                                              _tx_buf 02F2  
                                    ?_fat_rename_file 003F  
                          __parse_command_long@length 0055  
                            ??_internalFlash_readPage 0018  
                       __size_of_USBTransferOnePacket 0102  
                                 __size_of_USBMSDInit 0106  
                         i2c_display_write_fixed@data 0006  
         i2c_display_send_init_sequence@init_sequence 000B  
                              __size_of__flash_wakeup 0056  
                             __write_root@root_sector 002C  
                                              itoa@cp 0017  
                                   _i2c_set_frequency 7A18  
                        __end_of_jump_to_main_program 7686  
                               __end_of_fat_find_file 538A  
                         fat_get_empty_clusters@value 0036  
                                 ??_fat_get_file_size 0034  
                              _fat_get_empty_clusters 5F9C  
                       __size_of__parse_command_short 0088  
                         ?_bootloader_get_rec_address 0001  
                               ?_i2c_eeprom_writeByte 000B  
                                        __mediumconst 8CCC  
                                 __end_of__i2c_open_1 7CC0  
                      i2c_digipot_reset_on@data_array 000B  
                                              tblptrh 000FF7  
                                              tblptrl 000FF6  
             __end_of_internalFlash_addressWithinPage 6CC8  
            __size_of_internalFlash_addressWithinPage 0060  
                   ??_internalFlash_addressWithinPage 000F  
                    ?_internalFlash_addressWithinPage 0009  
                     _internalFlash_addressWithinPage 6C68  
                                              tblptru 000FF8  
                                    __end_of_spi_init 75D2  
                                           ??_ui_init 0001  
                    __size_of_APP_DeviceMSDInitialize 0010  
                                       main@rx_buffer 00FA  
                     ??__flash_compare_page_to_buffer 0017  
                                 ??_USBEnableEndpoint 000A  
                                  ?_i2c_set_frequency 0001  
                                 ?_flash_partial_read 0028  
                         ??__bootloader_check_address 0006  
                            __size_of_flash_page_read 0032  
                                       spi_tx_rx@data 0005  
                          __end_of__root_is_available 65B2  
                             __spi_external_rx_buffer 0200  
                                       spi_tx_tx@data 0005  
                                         _CtrlTrfData 000D38  
                                           ??_strncmp 0007  
                                __size_of__write_root 0058  
                                       main@tx_buffer 00FC  
                               __end_of_ui_get_status 7E34  
                     ExternalFlash_MediaDetect@config 0001  
                                _controlTransferState 00AE  
                          ??_APP_DeviceCustomHIDTasks 00F2  
                                __CFG_LS48MHZ$SYS48X8 000000  
                             __spi_external_tx_buffer 0240  
                                   _SYSTEM_Initialize 719C  
                                 ??_i2c_set_frequency 0001  
                       fat_read_from_file@read_length 00DC  
                                          __accesstop 0060  
                             __end_of__initialization 5656  
                   MSDCheckForErrorCases@MSDErrorCase 0010  
                                     ?_MSDReadHandler 0001  
                                  ?_SYSTEM_Initialize 0001  
                              __size_of__display_done 0176  
                                       ___rparam_used 000001  
                                  parseHexFileEntry@i 001C  
                            __size_of_USBStallHandler 0044  
                        __end_of__i2c_not_acknowledge 7DAA  
                     ExternalFlash_SectorWrite@config 0025  
                     ExternalFlash_SectorWrite@buffer 002B  
                    __fill_buffer_read_file@file_size 00E2  
                         __end_of__parse_command_long 5F9C  
                   __end_of_failed_line3_noNextRecord 8E47  
                                  __size_of__get_data 0028  
                                  __size_of__get_date 000A  
                           __end_of_fat_get_file_size 670C  
                                 __size_of_USBSuspend 0030  
                                  __size_of__get_time 000A  
                                  __size_of__get_root 0196  
                               __write_fat@fat_sector 002D  
                               flash_page_write@match 0024  
                                ??_flash_partial_read 0030  
                                    _flash_page_write 70F0  
                                      __pcstackCOMRAM 0001  
                          __size_of__flash_get_status 0032  
                           __end_of_USBEnableEndpoint 760E  
                            _bootloader_get_file_size 7D26  
                 __size_of_ExternalFlash_CapacityRead 0012  
                                       __end_of_sd000 8FCF  
                                       __end_of_sd001 8F1B  
                                       __end_of_sd002 8F49  
                                       __end_of_sd003 8FA4  
                                           ?_MSDTasks 0001  
                                        __pidataBANK0 7E5C  
                                        __pidataBANK1 7C1E  
                                        __pidataBANK2 7E0E  
                           ??_bootloader_get_rec_data 0001  
                                 ??_SYSTEM_Initialize 0001  
            __end_of_bootloader_get_flashPagesWritten 7DF0  
           __size_of_bootloader_get_flashPagesWritten 000A  
                  ??_bootloader_get_flashPagesWritten 0003  
                   ?_bootloader_get_flashPagesWritten 0001  
                    _bootloader_get_flashPagesWritten 7DE6  
                           __get_available_root_entry 7B52  
                                 fat_rename_file@cntr 00D6  
                                 fat_rename_file@name 003F  
                ExternalFlash_SectorWrite@sector_addr 0027  
                    __size_of_USBCtrlEPAllowDataStage 009E  
                                 fat_rename_file@root 00B6  
                                  __size_of__read_fat 0048  
                                     _active_protocol 00B1  
                       __size_of_USBConfigureEndpoint 0094  
                     __end_of__bootloader_verify_file 14FE  
                     ??_bootloader_get_rec_recordType 0001  
                  __size_of_ExternalFlash_MediaDetect 0004  
                         __end_of_USBCtrlTrfInHandler 4FBE  
                                 _userInterfaceStatus 0098  
                                 display_prepare@mode 002B  
                                        _gblSenseData 011F  
                                     _MSDErrorHandler 425A  
                      ?_ExternalFlash_MediaInitialize 0001  
                           __end_of_i2c_set_frequency 7A44  
                       __size_of__display_programming 01D6  
                             __end_of_system_delay_ms 7B52  
                                  __size_of_api_parse 00D2  
                             parseHexFileEntry@offset 000E  
                                    _hex_file_entries 016A  
                      __end_of_failed_line3_startCode 8D1D  
                               _communicationSettings 0139  
                    fat_get_empty_clusters@fat_sector 0032  
                                  _fat_read_from_file 1EF6  
                                  __size_of__spi_init 0038  
                          fat_delete_file@file_number 003E  
               __end_of_MSDProcessCommandMediaPresent 085A  
              __size_of_MSDProcessCommandMediaPresent 03BE  
                       _MSDProcessCommandMediaPresent 049C  
                                        _failed_line1 8DE9  
                                        _failed_line2 8D42  
                                        _failed_line4 8E6B  
                              flash_partial_read@data 002E  
                              flash_partial_read@page 0028  
                                       __get_data@idx 0001  
                       __size_of_bootloader_get_error 0006  
                            ??_USBCtrlTrfSetupHandler 001E  
                             _USBTicksSinceSuspendEnd 00A3  
                   __flash_copy_page_to_buffer@buffer 0016  
                           __end_of_SYSTEM_Initialize 71F0  
                             ??__update_modified_time 0007  
                                   __end_of__i2c_read 60B6  
                                   __end_of__i2c_send 7E2E  
                                 hexCharToUint8@ascii 0002  
                              _USBStdGetStatusHandler 5708  
                                 USBStallEndpoint@dir 0001  
                                   __end_of__i2c_stop 7E1E  
                                         ?__i2c_start 0001  
                                 ?_fat_read_from_file 003F  
                                         ?__i2c_write 0006  
                                          __pbssBANK0 0060  
                                          __pbssBANK1 0100  
                                          __pbssBANK2 0200  
                                          __pbssBANK3 0300  
                       fat_append_to_file@fat_cluster 00BD  
                    __size_of_i2c_display_write_fixed 0056  
                                    _USBStallEndpoint 404C  
                        __size_of_i2c_eeprom_readByte 0050  
                                          _gblNumBLKS 0150  
                                           ?_i2c_init 0001  
                    __fill_buffer_read_file@outBuffer 0057  
                        __end_of__sector_from_cluster 7D76  
                                    _mediaInformation 01DB  
                             __end_of_hexCharsToUint8 7C58  
                      __size_of_fat_get_format_status 00A4  
                      fat_get_file_information@offset 003C  
                              ?__bootloader_find_file 0001  
                       __end_of_fat_get_format_status 5900  
                     ??__fill_buffer_get_file_details 0043  
                                       __flash_wakeup 7146  
                            __fill_buffer_get_display 54F8  
                                           ?__i2c_get 0001  
                         __size_of_USBWakeFromSuspend 0038  
                                         _pBDTEntryIn 006C  
                               __size_of__normal_mode 0058  
                         __size_of_i2c_display_cursor 0024  
                             ?_bootloader_get_entries 0001  
                          __update_modified_time@root 0005  
                    __end_of_USBCtrlEPServiceComplete 4666  
               __end_of_APP_DeviceCustomHIDInitialize 786E  
              __size_of_APP_DeviceCustomHIDInitialize 0034  
                       _APP_DeviceCustomHIDInitialize 783A  
                         MSDTransferTerminated@handle 000C  
                           __bootloader_check_address 4BB0  
                  ExternalFlash_SectorSizeRead@config 0001  
                                USBCtrlTrfRxService@i 0001  
                                          ??_MSDTasks 004D  
                             ??_i2c_digipot_backlight 000B  
                                          _fat_format 2552  
                                   ?__display_checked 0001  
                      __flash_write_to_buffer@command 001B  
                                ??_fat_read_from_file 0049  
                        __size_of__flash_partial_read 0078  
                            __size_of_fat_delete_file 006A  
                                           MSDTasks@i 0052  
                    ??__fill_buffer_get_configuration 0003  
                     ?__fill_buffer_get_configuration 0001  
                                             ?_memcpy 0001  
                                  _fat_append_to_file 211C  
                                             ?_memset 0001  
                                          _device_dsc 8FA4  
                 fat_get_file_information@file_number 003E  
                                    ??_display_update 0011  
                                       __get_root@idx 0001  
                                  ??__display_checked 001F  
                                         __i2c_open_1 7CA8  
                                    _USBCtrlEPService 565C  
                                             ?_ui_run 0001  
                                          _ep_data_in 0161  
                                             ?_spi_tx 0001  
                                  __display_clear@col 0004  
                             _extended_linear_address 0140  
                                  __display_clear@row 0003  
                       fat_append_to_file@file_number 00C1  
                                           ?__get_fat 0001  
                                           ?__get_fbr 0001  
                                       __display_done 3518  
                    __sector_from_cluster@fat_cluster 0001  
                                           ?__get_mbr 0001  
                         __end_of_USBCtrlTrfRxService 3F3A  
                                  _USBCheckStdRequest 4666  
                              ??_i2c_eeprom_writeByte 000E  
                                   _configDescriptor1 8EA7  
                     __size_of_internalFlash_readPage 0042  
                             ??_MSDCheckForErrorCases 000F  
                                 ?_fat_append_to_file 003F  
                              fat_append_to_file@data 0041  
                                          _flash_init 7C74  
                  __fill_buffer_get_display@outBuffer 0005  
                         __end_of_USBCtrlTrfTxService 4EF6  
                                   __end_of__get_data 7A96  
                                   __end_of__get_date 7E0E  
                                 _USBStdSetCfgHandler 4748  
                              fat_append_to_file@root 00C8  
                                  __display_done@cntr 001F  
                                   __end_of__get_time 7E04  
                                       ?_jump_to_zero 0001  
                                   __end_of__get_root 321C  
                                  __size_of_spi_tx_rx 0094  
                                  __size_of_spi_tx_tx 008C  
                                           ?_fat_init 0001  
                                             _RPINR21 000EFC  
                                             _RPINR22 000EFD  
                                             _RPINR23 000EFE  
                                          _done_line1 8DB9  
                                          _done_line2 8E9F  
                                          _done_line3 8DA9  
                                          _done_line4 8D99  
                                             _SSP1ADD 000FC8  
                                             _SSP1BUF 000FC9  
                     __end_of_bootloader_get_rec_data 7CD6  
                                             _RXADDRH 000F68  
                                             _RXADDRL 000F69  
                              _total_hex_file_entries 0168  
                                             _TXADDRH 000F6A  
                                             _TXADDRL 000F6B  
                                 ?_USBCheckStdRequest 0001  
                          ??__ic2_display_set_address 000B  
                        __size_of_USBStdGetDscHandler 013A  
                                __flash_set_page_size 63D2  
                                             _UIEbits 000F36  
                            __end_of_timer_pseudo_isr 7806  
                                  __get_first_cluster 6A6E  
                                        __normal_mode 6DDE  
                          __end_of_APP_DeviceMSDTasks 7D14  
                                             _UIRbits 000F62  
                                   __end_of__read_fat 740C  
                     ??_internalFlash_pageFromAddress 0005  
         MSDCheckForErrorCases@HostMoreDataThanDevice 000F  
                 __bootloader_verify_file@rec_counter 00E2  
                             __size_of_hexCharToUint8 002C  
               __end_of__flash_compare_page_to_buffer 64C4  
              __size_of__flash_compare_page_to_buffer 0078  
                       __flash_compare_page_to_buffer 644C  
                                          __write_fat 7556  
                                          ??_i2c_init 0002  
                                    __CFG_CFGPLLEN$ON 000000  
                            __i2c_write@slave_address 0009  
                                 _bootloader_filename 8FB6  
                 __ic2_display_set_address@data_array 000C  
                                          _pageBuffer 0800  
                                        ??_USBMSDInit 000C  
                                   __read_fat@cluster 0030  
                                      ?__flash_wakeup 0001  
                                   ??_flash_page_read 002C  
                      __end_of_bootloader_get_entries 7DFA  
                              fat_find_file@extension 0032  
                            ?_internalFlash_getBuffer 0001  
                                   __end_of_api_parse 4D5C  
                                 ?__get_first_cluster 0030  
                    i2c_eeprom_readByte@slave_address 0017  
                                          ??__i2c_get 0001  
                                   _MSDProcessCommand 3F3A  
                                     hexCharToUint8@c 0001  
                                ??_fat_append_to_file 0043  
                                       __i2c_send@dat 0001  
                           __flash_get_status@command 000F  
                                             __Hparam 0000  
                     ??_USBIncrement1msInternalTimers 0001  
                                  __parse_file_delete 7242  
                                ?_USBStdSetCfgHandler 0001  
                          __size_of_fat_get_file_size 0072  
                                   __end_of__spi_init 76F8  
                         __size_of_USBCheckHIDRequest 00E2  
                                  __parse_file_append 62D2  
                                             __Lparam 0000  
                                  __parse_file_create 685A  
                                _jump_to_main_program 764A  
                            __size_of_fat_create_file 01BC  
                                   __end_of_hid_rpt01 8F8A  
                                  ?_MSDProcessCommand 0001  
                                __display_failed@cntr 0025  
                             __end_of_MSDErrorHandler 4360  
                          _MSDTransferTerminated$2407 000E  
                          __size_of_USBEnableEndpoint 003C  
                                        ?_system_init 0001  
                                  __parse_file_modify 7E58  
                                  __parse_file_rename 699A  
                          ??_fat_get_file_information 0039  
                                ??_USBCheckStdRequest 001E  
                                    _hexCharsToUint16 670C  
                                          _last_error 0096  
                                           ?_spi_init 0001  
                       __size_of_USBCtrlTrfOutHandler 0060  
                 ExternalFlash_MediaInitialize@config 0001  
                                    _ToSendDataBuffer 0300  
                            ?_internalFlash_erasePage 0003  
                                __end_of_found_line3b 8E98  
                                             ___lldiv 6250  
                                    ??_USBDeviceTasks 0020  
                                             ___llmod 6AD8  
                                             ___lwdiv 71F0  
                                   ??_USBStallHandler 0001  
                                             ___lwmod 7492  
                         __size_of_internalFlash_read 0036  
                                 ?__parse_file_delete 003F  
                                   ?__i2c_acknowledge 0001  
                                 ?__parse_file_append 004B  
                                 ?__parse_file_create 0050  
                                 __size_of__i2c_start 0008  
                        __end_of__system_encoder_init 76C0  
                                             __pcinit 55AC  
                                     __size_of_memcpy 0066  
                                 __size_of__i2c_write 0048  
                                     __size_of_memset 002C  
                            __size_of_MSDWriteHandler 02B4  
                           __end_of_configDescriptor1 8EE7  
                                 ??_MSDProcessCommand 0048  
                                             __ramtop 0F00  
                        ExternalFlash_SectorRead@page 0034  
                              __display_itoa_u32@text 0023  
                              __display_itoa_u16@text 001D  
                          __size_of_i2c_set_frequency 002C  
                                      ?__display_done 0001  
                                             __ptext0 368E  
                                             __ptext1 4AD0  
                                     __display_failed 0F34  
                                             __ptext2 7D38  
                                             __ptext3 7994  
                                             __ptext4 7B76  
                                             __ptext5 7B98  
                                             __ptext6 7ABE  
                                             __ptext7 5444  
                                             __ptext8 77D2  
                                 ?__parse_file_modify 0001  
                                             __ptext9 68C6  
                                             _inPipes 0066  
                             ??_spi_set_configuration 0001  
                                 ?__parse_file_rename 0043  
                                     __size_of_ui_run 00E0  
                                      fat_format@cntr 0025  
                   __size_of_ExternalFlash_SectorRead 0036  
                                     __size_of_spi_tx 0058  
                         _USBDeferOUTDataStagePackets 00A4  
                                  ??__i2c_acknowledge 0001  
                                           _T0CONbits 000FD5  
                                          ??__get_fat 0003  
                                          ??__get_fbr 0003  
                                          ??__get_mbr 0003  
                           ?_ExternalFlash_SectorRead 002C  
                                    ??_bootloader_run 005D  
                                    ?_system_delay_ms 0001  
                         __end_of__system_timer0_init 7C1E  
                                ??__get_first_cluster 0032  
                                        ??_USBSuspend 0018  
                                  __end_of_USBMSDInit 425A  
                                    ??_ResetSenseData 0001  
                             ?__flash_write_to_buffer 0014  
                             _APP_DeviceMSDInitialize 7D58  
                                             _msd_cbw 000D40  
                                     __display_verify 3BD6  
                                             _msd_csw 000D80  
                                      ??_jump_to_zero 0001  
                             ??_i2c_digipot_reset_off 000B  
                                __i2c_not_acknowledge 7DA0  
                                             _ui_init 7CEC  
                                          ??_fat_init 0030  
                  __size_of_ExternalFlash_SectorWrite 0036  
                               ?__flash_set_page_size 0001  
                               __end_of_flash_is_busy 7CEC  
                                  __end_of_USB_CD_Ptr 8EA7  
                            i2c_eeprom_writeByte@data 000D  
                                          _msd_buffer 000600  
                                  __get_empty_cluster 6626  
                          __size_of_SYSTEM_Initialize 0054  
                     __size_of_USBCtrlTrfSetupHandler 0092  
                             __size_of__flash_is_busy 0022  
                        fat_get_file_size@file_number 003D  
                                             _strncmp 5208  
                                 _flash_partial_write 677C  
                                end_of_initialization 5656  
                                ??__parse_file_delete 0041  
       __fill_buffer_get_bootloader_details@outBuffer 0005  
                             ??_display_get_character 0002  
                               _MSDTransferTerminated 709A  
               __flash_compare_page_to_buffer@command 001C  
         __end_of__fill_buffer_get_bootloader_details 293E  
        __size_of__fill_buffer_get_bootloader_details 01EE  
               ??__fill_buffer_get_bootloader_details 0007  
                ?__fill_buffer_get_bootloader_details 0005  
                 __fill_buffer_get_bootloader_details 2750  
                      ?_MSDProcessCommandMediaPresent 0001  
                                ??__parse_file_append 004D  
                                ??__parse_file_create 0052  
                                  __end_of_USB_SD_Ptr 8E83  
                                             memcpy@d 000B  
                                             memcpy@n 0006  
                                             memcpy@s 0008  
                                    __write_fat@value 002B  
                                 _pBDTEntryEP0OutNext 0090  
                                ??__parse_file_modify 0003  
                           __end_of_MSDProcessCommand 404C  
                                             itoa@buf 0011  
                                ??__parse_file_rename 0045  
                                             memset@c 0003  
                                             itoa@val 0013  
                                             memset@n 0005  
                                             memset@p 0007  
                        fat_delete_file@first_cluster 003C  
                                     _USB1msTickCount 0154  
                                    ?_hexCharsToUint8 0003  
                                 ?__get_empty_cluster 0030  
                            __flash_partial_read@data 001A  
                        fat_get_empty_clusters@offset 0034  
                              _internalFlash_readPage 74D4  
                            ?_USBStdFeatureReqHandler 0001  
                            __flash_partial_read@page 0014  
                            fat_append_to_file@length 00C2  
                         i2c_eeprom_writeByte@address 000B  
                            fat_append_to_file@offset 00BF  
           __fill_buffer_get_file_details@file_number 0043  
                               ??_USBStdSetCfgHandler 0018  
                                     ___lldiv@divisor 0005  
                            fat_append_to_file@sector 00B5  
                               ?_jump_to_main_program 0001  
                                     ___lldiv@counter 000D  
                        ?_bootloader_get_rec_checksum 0001  
                                  __end_of_USBSuspend 7966  
                        __end_of__parse_file_truncate 7E58  
                             _USBCtrlEPAllowDataStage 5AE6  
                                   __end_of_spi_tx_rx 5E7C  
                                   __end_of_spi_tx_tx 6142  
               __end_of__fill_buffer_get_file_details 685A  
              __size_of__fill_buffer_get_file_details 006E  
                       __fill_buffer_get_file_details 67EC  
                                             postdec1 000FE5  
                                             postdec2 000FDD  
                __end_of_ExternalFlash_SectorSizeRead 7DC8  
               __size_of_ExternalFlash_SectorSizeRead 000A  
                        _ExternalFlash_SectorSizeRead 7DBE  
                                          ??_spi_init 0004  
                                             postinc0 000FEE  
                                             postinc2 000FDE  
                                         ?_fat_format 0001  
                                ?_flash_partial_write 0020  
                    __size_of__fill_buffer_get_status 00E2  
                                       ??__ui_encoder 0001  
                                             utoa@buf 0008  
             MSDProcessCommandMediaPresent@sectorSize 003F  
                            _USBCtrlEPServiceComplete 4566  
                                             utoa@val 000A  
                                           _MSD_State 00A2  
                         __end_of__bootloader_program 0F34  
                               _system_encoder_enable 7D38  
                     ??_internalFlash_addressFromPage 0005  
                         __size_of_USBCheckMSDRequest 00C2  
                                       ??_api_prepare 005D  
                          _USBStatusStageEnabledFlag1 00A7  
                          _USBStatusStageEnabledFlag2 00A6  
                            flash_partial_write@match 0028  
                                  USBEnableEndpoint@p 000A  
                             ?_fat_get_empty_clusters 0030  
                                           _PORTAbits 000F80  
                                           _PORTBbits 000F81  
                                           _PORTDbits 000F83  
                            flash_partial_write@start 0022  
                                ??__get_empty_cluster 0032  
                      __end_of__flash_write_to_buffer 7334  
                                    __CFG_DSBOREN$OFF 000000  
                                __sector_from_cluster 7D68  
                      internalFlash_writePage@address 0005  
                            ?_internalFlash_writePage 0003  
                  __size_of__get_available_root_entry 0024  
                                spi_tx_rx@data_length 0007  
                               ?__i2c_not_acknowledge 0001  
                       fat_append_to_file@new_cluster 00BB  
                                   ??_fat_delete_file 003A  
                              fat_create_file@cluster 00BC  
                                 flash_page_read@data 002A  
                                         ?_flash_init 0001  
                                 flash_page_read@page 0028  
                                    __CFG_CPUDIV$OSC1 000000  
                       fat_get_empty_clusters@cluster 003A  
                     __fill_buffer_find_file@inBuffer 0044  
                                           _TRISAbits 000F92  
                                           _TRISBbits 000F93  
                                           _TRISCbits 000F94  
                                           _TRISDbits 000F95  
                                           _TRISEbits 000F96  
                                  _ReceivedDataBuffer 0280  
                                  _BothEP0OutUOWNsSet 00AA  
                       fat_get_empty_clusters@maximum 0030  
                            __end_of_flash_page_write 7146  
                                       __pbssBIGRAMlh 0800  
                                       __pbssBIGRAMll 0340  
                                    ??_MSDReadHandler 0036  
                           __flash_partial_read@start 0016  
                           USBConfigureEndpoint@EPNum 0006  
                             _i2c_display_write_fixed 7044  
                                   __CFG_SOSCSEL$HIGH 000000  
                          ?_USBCtrlEPAllowStatusStage 0001  
                 USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                             __size_of__display_clear 0048  
                                           _USTATcopy 00B3  
                                     ??__flash_wakeup 0009  
       MSDProcessCommandMediaPresent@NumBytesInPacket 003E  
                             __size_of__display_found 01DE  
                                       _checked_line1 8DF9  
                                       _checked_line2 8CCD  
                                       _checked_line3 8E73  
                                       _checked_line4 8D66  
                                         ?__write_fat 0029  
                                 __delete_root@offset 002C  
                          ??_bootloader_get_file_size 0005  
                            _failed_line3_dataTooLong 8E47  
                             __size_of__display_start 0152  
                        __end_of_USBTransferOnePacket 4566  
                              i2c_display_cursor@line 000F  
                                    __CFG_IOL1WAY$OFF 000000  
                   internalFlash_writePage@block_cntr 000B  
                        __end_of__parse_command_short 61CA  
               __end_of_internalFlash_pageFromAddress 7C74  
              __size_of_internalFlash_pageFromAddress 001C  
                       _internalFlash_pageFromAddress 7C58  
                      ?__flash_compare_page_to_buffer 0014  
                       __fill_buffer_get_display@cntr 000D  
                                  __root_is_available 653C  
                       __fill_buffer_get_display@line 000E  
                                   __CFG_WPEND$PAGE_0 000000  
                  __flash_compare_page_to_buffer@page 0014  
                                 __CFG_MSSP7B_EN$MSK7 000000  
                             __end_of__display_failed 122A  
                       __get_empty_cluster@fat_sector 0032  
                                    ?_MSDErrorHandler 0001  
                                    __write_root@data 0029  
                              _USBCtrlTrfSetupHandler 5E7C  
                               ??_flash_partial_write 0028  
                       ??_bootloader_get_rec_checksum 0001  
                                    __write_root@slot 0030  
                      __bootloader_program@entry_page 00E4  
                              __display_checked@start 0021  
                    ExternalFlash_CapacityRead@config 0001  
                            __size_of_display_prepare 00BA  
                               __end_of_USBDeviceInit 3A9C  
               __end_of_USBIncrement1msInternalTimers 7BDC  
              __size_of_USBIncrement1msInternalTimers 0022  
                       _USBIncrement1msInternalTimers 7BBA  
                                     ??__display_done 001F  
                      __end_of_fat_get_empty_clusters 602A  
                       ?_ExternalFlash_SectorSizeRead 0001  
                             __end_of__display_verify 3D02  
                                 ?__root_is_available 0001  
                                   __size_of_MSDTasks 0258  
                            __end_of_USBStallEndpoint 4154  
                                 _i2c_eeprom_readByte 7294  
                                   ??_fat_create_file 004C  
                 __bootloader_program@start_from_byte 00F0  
                  __fill_buffer_read_file@data_length 00E6  
                           ??_APP_DeviceMSDInitialize 000F  
                           _failed_line3_addressRange 8CE2  
                               ?__sector_from_cluster 0001  
                                      __end_of_memcpy 6BA4  
                                     _MSDRetryAttempt 009E  
                                      __end_of_memset 7A18  
                  __size_of__bootloader_check_address 00DA  
                                    __CFG_DSWDTEN$OFF 000000  
                       __size_of_i2c_digipot_reset_on 0022  
                                   _USBBusIsSuspended 00AC  
                           flash_partial_write@length 0024  
                                      __end_of_ui_run 4BB0  
                                      __end_of_spi_tx 6FEE  
               __get_available_root_entry@file_number 0037  
                                 __end_of__ui_encoder 54F8  
                           __flash_set_page_size@size 0018  
                                 start_initialization 55AC  
                             ?_USBStdGetStatusHandler 0001  
                                       ??__write_root 002B  
                       ExternalFlash_SectorWrite@page 002E  
                       USBCtrlTrfRxService@byteToRead 0002  
                              ??__flash_set_page_size 0014  
                                   ??_MSDWriteHandler 0030  
                                 __end_of_api_prepare 3E22  
                   __end_of__get_available_root_entry 7B76  
                            ?__bootloader_verify_file 0001  
                                __display_found@start 0027  
                          ??__fill_buffer_get_display 0008  
                          i2c_display_cursor@position 000E  
                              ?_MSDTransferTerminated 000C  
                            __size_of_fat_rename_file 0096  
                                     _USBMSDOutHandle 008A  
                    __ic2_display_set_address@address 000B  
                        __end_of_USBConfigureEndpoint 5DE8  
                                        ??__i2c_start 0001  
   internalFlash_addressWithinPage@page_start_address 0013  
                                        ??__i2c_write 0009  
                     __end_of_USBStdFeatureReqHandler 1A36  
                                 __flash_partial_read 64C4  
                                   USBStallEndpoint@p 0007  
                                 __size_of_fat_format 01FE  
                             ??__bootloader_find_file 0044  
                                       _MSDHostNoData 009B  
                                      _hexCharToUint8 79C0  
              internalFlash_addressWithinPage@address 0009  
                                ??__root_is_available 0030  
                      __size_of__update_modified_time 0032  
                   __end_of_USBCtrlEPAllowStatusStage 5146  
                                ?_i2c_eeprom_readByte 0012  
                       __end_of__update_modified_time 78D2  
                        __end_of__display_programming 2ECA  
                fat_get_empty_clusters@empty_clusters 0038  
                            __end_of_USBCtrlEPService 5708  
                          __size_of_MSDProcessCommand 0112  
                                __system_encoder_init 7686  
                                           __i2c_read 602A  
                                           __i2c_send 7E26  
                                     ___llmod@divisor 0005  
                                           __i2c_stop 7E16  
                              ??_jump_to_main_program 0001  
                                     ___llmod@counter 0009  
                                   __size_of_i2c_init 000C  
                           ??_USBCtrlEPAllowDataStage 0002  
                            ??__fill_buffer_find_file 0048  
                                      USBDeviceInit@i 0009  
                        __end_of_bootloader_get_error 7E4C  
                          __flash_partial_read@length 0018  
                       __end_of_failed_line3_checksum 8E38  
                       __root_is_available@first_byte 0036  
                              _pBDTEntryEP0OutCurrent 0092  
                              __size_of_fat_find_file 00C0  
                                __end_of_jump_to_zero 764A  
                    __end_of_fat_get_file_information 6626  
                                         _DMACON1bits 000F88  
                                         _DMACON2bits 000F86  
                                 __size_of_flash_init 001A  
                             USBTransferOnePacket@dir 0001  
                             USBTransferOnePacket@len 0004  
                                   _programming_line1 8DD9  
                                   _programming_line2 8D30  
                                   _programming_line3 8E83  
                                   _programming_line4 8DC9  
                                       _MSDTasks$2372 004E  
                                       _MSDTasks$2373 0050  
                                   __size_of__i2c_get 000A  
                         MSDErrorHandler@OldMSD_State 000A  
                         __size_of_flash_partial_read 0032  
                                      __get_date@date 0003  
                               spi_init@configuration 0004  
                             flash_partial_read@start 002A  
                                 _USBStdGetDscHandler 3A9C  
                              ?_system_encoder_enable 0001  
                                ?__flash_partial_read 0014  
                                   __CFG_ADCSEL$BIT10 000000  
                   __size_of_APP_DeviceCustomHIDTasks 00AA  
                          fat_get_file_size@file_size 0037  
                                         __pdataBANK0 00FE  
                                         __pdataBANK1 01E2  
                                         __pdataBANK2 02F2  
                           ?_APP_DeviceCustomHIDTasks 0001  
                                __size_of_system_init 006A  
                      __size_of_i2c_digipot_backlight 0026  
                                            ??_memcpy 0008  
                             __size_of__i2c_wait_idle 0058  
                                            ??_memset 0007  
                        __size_of__parse_command_long 008E  
                       __end_of_i2c_digipot_backlight 7AE4  
                                        ?__i2c_open_1 0001  
                              __size_of_ui_get_status 0006  
                                            ??_ui_run 0014  
                                  __end_of__i2c_start 7E26  
                                            ??_spi_tx 0005  
                      ?__fill_buffer_get_file_details 003F  
                                  __end_of__i2c_write 73C4  
                           __root_is_available@offset 0033  
                                 __size_of__write_fat 0040  
                              ??__i2c_not_acknowledge 0001  
                              _USBActiveConfiguration 00B4  
                            ??__fill_buffer_read_file 0059  
                      __end_of_USBStdGetStatusHandler 57B2  
                         api_parse@receivedDataLength 00EA  
                   __end_of__bootloader_check_address 4C8A  
                                       ?__delete_root 0001  
               __end_of_internalFlash_addressFromPage 7994  
              __size_of_internalFlash_addressFromPage 002E  
                       _internalFlash_addressFromPage 7966  
                          fat_append_to_file@position 00C4  
                         fat_create_file@next_cluster 00B5  
                                   __size_of__get_fat 0056  
                                   __size_of__get_fbr 0268  
                                     _flash_page_read 786E  
                           ??_i2c_display_write_fixed 0009  
                                       __pcstackBANK0 00B5  
                        __size_of_USBCtrlTrfInHandler 00C8  
                                   __size_of__get_mbr 00CE  
                        ??_ExternalFlash_CapacityRead 0005  
                      __size_of_MSDCheckForErrorCases 00E2  
                __size_of_bootloader_get_rec_checksum 0006  
                        __end_of_bootloader_extension 8FCB  
                       __end_of_MSDCheckForErrorCases 49EE  
             __bootloader_program@address_within_page 00E6  
                              __end_of_hexCharToUint8 79EC  
                           __size_of__display_checked 017C  
                                           _gblBLKLen 014C  
                  __end_of_flash_command_pagesize_512 8FC7  
                          _flash_command_pagesize_512 8FC3  
                  __end_of_flash_command_pagesize_528 8FC3  
                          _flash_command_pagesize_528 8FBF  
                                      __flash_is_busy 7BDC  
                                ?_USBStdGetDscHandler 0001  
                            __end_of_hexCharsToUint16 677C  
                                __parse_file_truncate 7E54  
                          i2c_set_frequency@frequency 0001  
                                        _found_line3b 8E91  
                                           __get_data 7A6E  
                                           __get_date 7E04  
                    __bootloader_program@return_value 00E8  
                                   __size_of_fat_init 0010  
                               ??_i2c_eeprom_readByte 0014  
                 fat_get_file_information@root_sector 003A  
                                   ?_timer_pseudo_isr 0001  
                                           __get_time 7DFA  
                                           __get_root 3086  
                                 __end_of__write_root 6EE6  
     __fill_buffer_get_bootloader_details@data_length 000A  
                               ?__system_encoder_init 0001  
                          __end_of_USBWakeFromSuspend 7730  
                            __delete_root@root_sector 002A  
                          __end_of_i2c_display_cursor 7B2E  
                                          ?__i2c_read 0006  
                                  ??_timer_pseudo_isr 0001  
                                          ?__i2c_send 0001  
                                     _USBStallHandler 740C  
                                        _pBDTEntryOut 0072  
                                          ?__i2c_stop 0001  
                          fat_rename_file@file_number 00B5  
                                           __read_fat 73C4  
                            ?_bootloader_get_rec_data 0001  
                           __end_of_programming_line1 8DE9  
                           __end_of_programming_line2 8D42  
                           __end_of_programming_line3 8E8A  
                           __end_of_programming_line4 8DD9  
                    __end_of_ExternalFlash_SectorRead 77D2  
                                 flash_is_busy@result 0014  
                __end_of_bootloader_get_total_entries 7DD2  
               __size_of_bootloader_get_total_entries 000A  
                        _bootloader_get_total_entries 7DC8  
                                    ___lwdiv@dividend 0001  
                               _fat_get_format_status 585C  
                                   fat_find_file@name 0030  
                      MSDProcessCommandMediaPresent@i 0047  
                                 fat_find_file@buffer 0034  
                                   fat_find_file@slot 003F  
                                           _api_parse 4C8A  
                           fat_create_file@root_entry 00BE  
                                    ?__display_failed 0001  
                             __fill_buffer_get_status 49EE  
                                  _APP_DeviceMSDTasks 7D00  
                                       __pmediumconst 8CCC  
                                 fat_find_file@offset 0042  
                               ??__flash_partial_read 001C  
                                           __ptext100 6CC8  
                                           __ptext101 3E22  
                                           __ptext110 14FE  
                                           __ptext102 5082  
                                           __ptext111 7E4C  
                                           __ptext103 4EF6  
                                           __ptext200 7BDC  
                                           __ptext120 786E  
                                           __ptext112 7766  
                                           __ptext104 4E2A  
                                           __ptext201 7146  
                                           __ptext121 5C22  
                                           __ptext113 70F0  
                                           __ptext105 7D00  
                                           __ptext202 6F96  
                                           __ptext130 669A  
                                           __ptext122 7DBE  
                                           __ptext114 2B1C  
                                           __ptext106 1C9E  
                                           __ptext203 7904  
                                           __ptext131 49EE  
                                           __ptext123 7D14  
                                           __ptext115 490C  
                                           __ptext107 3F3A  
                                           __ptext204 5DE8  
                                           __ptext140 7DD2  
                                           __ptext132 7E2E  
                                           __ptext124 7C8E  
                                           __ptext116 425A  
                                           __ptext108 6BA4  
                                           __ptext205 4464  
                                           __ptext141 7CC0  
                                           __ptext133 67EC  
                                           __ptext125 7E50  
                                           __ptext117 404C  
                                           __ptext109 049C  
                                           __ptext206 0000  
                                           __ptext150 4C8A  
                                           __ptext142 7E3A  
                                           __ptext134 54F8  
                                           __ptext126 57B2  
                                           __ptext118 6C06  
                                           __ptext151 6142  
                                           __ptext143 7E40  
                                           __ptext135 7A44  
                                           __ptext127 3D02  
                                           __ptext119 779C  
                                           __ptext160 7E1E  
                                           __ptext152 7B2E  
                                           __ptext144 7DDC  
                                           __ptext136 5B84  
                                           __ptext128 233C  
                                           __ptext161 7E26  
                                           __ptext153 760E  
                                           __ptext145 7DE6  
                                           __ptext137 2750  
                                           __ptext129 1EF6  
                                           __ptext170 6D28  
                                           __ptext162 5F0E  
                                           __ptext154 764A  
                                           __ptext146 7D26  
                                           __ptext138 7DC8  
                                           __ptext171 685A  
                                           __ptext163 7E54  
                                           __ptext155 7516  
                                           __ptext147 7E46  
                                           __ptext139 7E34  
                                           __ptext180 65B2  
                                           __ptext172 2ECA  
                                           __ptext164 699A  
                                           __ptext156 7A18  
                                           __ptext148 7DF0  
                                           __ptext181 653C  
                                           __ptext173 6B3E  
                                           __ptext165 5CBE  
                                           __ptext157 737C  
                                           __ptext149 59A4  
                                           __ptext190 644C  
                                           __ptext182 6E8E  
                                           __ptext174 5F9C  
                                           __ptext166 7E58  
                                           __ptext158 6E36  
                                           __ptext191 78A0  
                                           __ptext183 7556  
                                           __ptext175 52CA  
                                           __ptext167 7242  
                                           __ptext159 7E16  
                                           __ptext192 7DFA  
                                           __ptext184 677C  
                                           __ptext176 5208  
                                           __ptext168 6A04  
                                           __ptext193 7E04  
                                           __ptext185 7CD6  
                                           __ptext177 7B52  
                                           __ptext169 6A6E  
                                           __ptext194 7D68  
                                           __ptext186 72E4  
                                           __ptext178 62D2  
                                           __ptext195 73C4  
                                           __ptext187 60B6  
                                           __ptext179 211C  
                                           __ptext196 6626  
                                           __ptext188 6EE6  
                                           __ptext197 78D2  
                                           __ptext189 6F3E  
                                           __ptext198 4360  
                                           __ptext199 64C4  
                      ?_internalFlash_pageFromAddress 0001  
                                 fat_find_file@sector 0040  
                                            ?___lldiv 0001  
                                            ?___llmod 0001  
                                            ?___lwdiv 0001  
                                           __spi_init 76C0  
                                            ?___lwmod 0001  
                         __size_of_fat_read_from_file 0226  
                                           _hid_rpt01 8F6D  
                                         __ui_encoder 5444  
                           __get_first_cluster@offset 0035  
                              ??__sector_from_cluster 0003  
                                           _idle_rate 00B2  
                                    ?__display_verify 0001  
                                   __size_of_spi_init 003C  
                           __get_first_cluster@sector 0033  
                                      __get_time@time 0003  
                    __size_of_internalFlash_getBuffer 000A  
                                         _api_prepare 3D02  
                             __parse_file_delete@data 003F  
                                     __i2c_write@data 0006  
                                _file_maximum_address 0144  
                                     __i2c_write@cntr 000A  
                                 fat_create_file@name 0044  
                                 ?_APP_DeviceMSDTasks 0001  
                  __flash_write_to_buffer@data_length 0018  
                                 fat_create_file@size 0048  
                      internalFlash_erasePage@address 0005  
                                   system_delay_ms@ms 0002  
                                _USBTransferOnePacket 4464  
                          ?_ExternalFlash_MediaDetect 0001  
                                      ??__delete_root 0029  
                      __size_of_spi_set_configuration 0104  
                      ??_ExternalFlash_SectorSizeRead 0003  
                                   ??_display_prepare 0029  
                       __end_of_spi_set_configuration 4464  
                                __CFG_RTCOSC$T1OSCREF 000000  
                                __parse_command_short 6142  
                        ??_spi_get_external_rx_buffer 0003  
                              fat_read_from_file@data 0047  
                 __fill_buffer_get_display@secondHalf 0007  
                              __end_of__flash_is_busy 7BFE  
                                       _fat_find_file 52CA  
                       __size_of_i2c_eeprom_writeByte 0040  
                                            ?_ui_init 0001  
                              fat_read_from_file@root 00B8  
                           __display_programming@cntr 001F  
                                   __display_itoa_u32 085A  
                                   __display_itoa_u16 4FBE  
                    __size_of_internalFlash_erasePage 0034  
                        __end_of_USBCtrlTrfOutHandler 6D28  
                               ??_USBStdGetDscHandler 0001  
                               ?__parse_file_truncate 0001  
                      __size_of_i2c_digipot_reset_off 0022  
                 __size_of__flash_copy_page_to_buffer 0058  
                                 __end_of_found_line1 8E29  
                                 __end_of_found_line2 8D30  
                                 __end_of_found_line3 8E9F  
                                 __end_of_found_line4 8D66  
                                         _ep_data_out 015E  
                                     ?_hexCharToUint8 0001  
                                    ___lwdiv@quotient 0005  
               __end_of_bootloader_get_rec_dataLength 7DDC  
              __size_of_bootloader_get_rec_dataLength 000A  
                       __end_of_i2c_digipot_reset_off 7BBA  
                       _bootloader_get_rec_dataLength 7DD2  
                        ??_spi_get_external_tx_buffer 0003  
                                       _MSDWriteState 009F  
                        __size_of_USBCtrlTrfRxService 0118  
                                  ?__display_itoa_u32 001F  
                                  ?__display_itoa_u16 0019  
                       USBConfigureEndpoint@direction 0001  
                                            ?_strncmp 0001  
                                      __display_clear 7334  
                           __size_of__i2c_acknowledge 000A  
                                          ?__get_data 0001  
                                          ?__get_date 0001  
                             ?_internalFlash_readPage 0016  
                    ??_i2c_display_send_init_sequence 000B  
                     ?_i2c_display_send_init_sequence 0001  
                                      __display_found 293E  
                    __end_of_bootloader_get_file_size 7D38  
                                         _file_buffer 02C0  
                                     _config_internal 015B  
                                          ?__get_time 0001  
                                          ?__get_root 0001  
                                       _ui_get_status 7E2E  
                                     _config_external 0158  
                                      __display_start 37FC  
                        __size_of_USBCtrlTrfTxService 00CC  
                      __size_of_display_get_character 002A  
                                ??_APP_DeviceMSDTasks 0053  
                       __end_of_display_get_character 7A6E  
                                         _file_number 00FE  
                                            _LATAbits 000F89  
                                            _LATBbits 000F8A  
                                            _LATCbits 000F8B  
                                            _LATDbits 000F8C  
                                            _LATEbits 000F8D  
                          __end_of_USBCheckHIDRequest 490C  
                      __root_is_available@file_number 0035  
                __flash_compare_page_to_buffer@buffer 0016  
                          ??_USBCtrlEPServiceComplete 0002  
                                          ?__read_fat 0030  
                                   ??_fat_rename_file 0043  
                                 ??__display_itoa_u32 0025  
                                 ??__display_itoa_u16 001F  
                             __i2c_read@slave_address 0010  
                                            _PIE2bits 000FA0  
                internalFlash_pageFromAddress@address 0001  
                       internalFlash_read@data_length 0012  
                         __size_of_fat_append_to_file 0220  
                     __size_of__fill_buffer_find_file 00A2  
                __flash_compare_page_to_buffer@status 001A  
                                            _PIR2bits 000FA1  
                           parseHexFileEntry@hexEntry 0012  
                                            _PIR3bits 000FA4  
              __fill_buffer_get_file_details@inBuffer 003F  
                   __bootloader_verify_file@address32 00E7  
                          __end_of_internalFlash_read 7766  
                                          ?_api_parse 00E8  
                                    __CFG_WDTPS$32768 000000  
                                            _UEP0bits 000F26  
                       ?_bootloader_get_total_entries 0001  
                   __size_of__ic2_display_set_address 0026  
                             __parse_file_append@data 004B  
                                            _MSDTasks 1C9E  
                          _USBDeferINDataStagePackets 00A5  
                                        ??_fat_format 0025  
                                     _fat_delete_file 6A04  
                                _active_configuration 0094  
                           ?__ic2_display_set_address 0001  
                             spi_tx_rx@command_length 0003  
                             __parse_file_create@data 0050  
                             flash_partial_write@data 0026  
                         __size_of_USBCheckStdRequest 00E2  
                     ??_MSDProcessCommandMediaPresent 003A  
                             flash_partial_write@page 0020  
                                            _UCONbits 000F65  
                                          ?__spi_init 0001  
                 __size_of_spi_get_external_rx_buffer 000A  
                                _USBConfigureEndpoint 5D54  
                                   __i2c_write@length 0008  
                             __end_of_flash_page_read 78A0  
                                           _spi_tx_rx 5DE8  
                                           _spi_tx_tx 60B6  
                                __display_verify@cntr 0021  
                  __flash_write_page_from_buffer@page 0014  
                    __size_of_USBStdFeatureReqHandler 0284  
                                      _USBMSDInHandle 0088  
                 __size_of_spi_get_external_tx_buffer 000A  
                                __display_programming 2CF4  
                               ?_USBTransferOnePacket 0001  
                 internalFlash_addressWithinPage@page 000D  
                                 system_delay_ms@cntr 0003  
                         __size_of__get_first_cluster 006A  
                           __end_of__display_itoa_u16 5082  
                           __end_of__display_itoa_u32 0BC8  
                     __size_of__fill_buffer_read_file 0216  
                               ?__parse_command_short 0001  
                                __end_of_verify_line1 8E19  
                                __end_of_verify_line2 8E62  
                                __end_of_verify_line3 8E91  
                           i2c_display_cursor@address 0010  
                                    __CFG_WPFP$PAGE_1 000000  
                                      ?_fat_find_file 0030  
                            fat_rename_file@extension 0041  
                                        ??_flash_init 0019  
                                        _RemoteWakeup 00AD  
                   __end_of_ExternalFlash_MediaDetect 7E54  
                   MSDCheckForErrorCases@DeviceNoData 0011  
                            internalFlash_read@buffer 0014  
                                spi_tx_tx@data_length 0007  
                                     ?__flash_is_busy 0001  
                    __end_of__fill_buffer_get_display 55AC  
                        ??_bootloader_get_rec_address 0003  
                                         __write_root 6E8E  
                 __fill_buffer_get_display@start_line 000F  
                              __end_of__display_clear 737C  
                   __size_of_fat_get_file_information 0074  
                                _bootloader_get_error 7E46  
                               __display_checked@cntr 0022  
                                          spi_tx@data 0001  
                           ?_fat_get_file_information 0037  
                              __end_of__display_found 2B1C  
                             __end_of_USBStallHandler 7450  
                                   ?_flash_page_write 0020  
                      __end_of_internalFlash_readPage 7516  
                                      __i2c_read@data 0006  
                     ??__flash_write_page_from_buffer 0017  
                             __size_of_display_update 006A  
                                      __i2c_read@cntr 0011  
                              __end_of__display_start 394E  
                                         _INTCON2bits 000FF1  
                                         _INTCON3bits 000FF0  
                                           copy_data0 55C0  
                                           copy_data1 55E0  
                        __size_of__system_timer0_init 0020  
                            __size_of_system_delay_ms 0024  
                      ?_internalFlash_addressFromPage 0001  
                                      ?_ui_get_status 0001  
                              ??__system_encoder_init 0001  
                         ??_USBCtrlEPAllowStatusStage 0001  
                        fat_create_file@cluster_count 00B7  
                         __end_of_USBStdSetCfgHandler 482A  
                                  ??_flash_page_write 0024  
                         __size_of__parse_file_delete 0052  
                                        ??__write_fat 002D  
                                  __end_of_fat_format 2750  
                         __size_of__parse_file_append 0082  
                         __size_of__parse_file_create 006C  
                                 __display_found@cntr 0028  
                                            _i2c_init 7D76  
                                         ??__i2c_read 0009  
                         __size_of__parse_file_modify 0004  
                               __size_of_jump_to_zero 003C  
                    __size_of_internalFlash_writePage 007E  
                                         ??__i2c_send 0001  
                                        _MSDReadState 00A0  
                         __size_of__parse_file_rename 006A  
                                         ??__i2c_stop 0001  
                                  __write_fat@cluster 0029  
                                  __end_of_device_dsc 8FB6  
                                          _EECON1bits 000FA6  
                            MSDErrorHandler@ErrorCase 0009  
                              ?_fat_get_format_status 0001  
                                            __i2c_get 7DAA  
                             ?_USBCtrlTrfSetupHandler 0001  
                    internalFlash_writePage@byte_cntr 000C  
                                     _fat_create_file 2ECA  
                           ??__fill_buffer_get_status 0017  
                                          _ANCON0bits 000F48  
                             USBStdGetStatusHandler@p 0002  
                            fat_read_from_file@length 0043  
                                            __Hrparam 0000  
                            fat_read_from_file@offset 00DA  
                         __end_of_bootloader_filename 8FBF  
                            fat_read_from_file@sector 00B5  
                                           memcpy@tmp 000D  
                                            __Lrparam 0000  
                              USBTransferOnePacket@ep 0009  
            __fill_buffer_get_configuration@outBuffer 0001  
                                            _SetupPkt 000D30  
                                  __end_of_flash_init 7C8E  
                                      _TransferLength 0086  
                                _bootloader_extension 8FC7  
                           __get_empty_cluster@offset 0034  
                          __end_of_USBCheckMSDRequest 5208  
                            __size_of_hexCharsToUint8 001C  
                               ?_USBConfigureEndpoint 0001  
                               __flash_is_busy@status 0012  
                            _ExternalFlash_SectorRead 779C  
                           display_get_character@line 0004  
                              __size_of_flash_is_busy 0016  
                                  __end_of_done_line1 8DC9  
                                  __end_of_done_line2 8EA5  
                                  __end_of_done_line3 8DB9  
                                  __end_of_done_line4 8DA9  
                                      __i2c_wait_idle 6E36  
                                     _MSDWriteHandler 14FE  
                                    __size_of___lldiv 0082  
                                    __size_of___llmod 0066  
                 __size_of_bootloader_get_rec_address 000A  
                                    __size_of___lwdiv 0052  
                                    __size_of___lwmod 0042  
           ExternalFlash_SectorWrite@allowWriteToZero 002D  
                                          ?_spi_tx_rx 0001  
                                          ?_spi_tx_tx 0001  
                                         _MSDCBWValid 009A  
                               ?__display_programming 0001  
                                   ?_USBStallEndpoint 0001  
                          i2c_display_write_fixed@pos 0009  
                                         _found_line1 8E19  
                                         _found_line2 8D1D  
                                         _found_line3 8E98  
                                         _found_line4 8D54  
                                            __get_fat 6FEE  
                                            __get_fbr 1A36  
                         __size_of__get_empty_cluster 0074  
                                            __get_mbr 4D5C  
                                  __end_of__write_fat 7596  
                                __size_of__i2c_open_1 0018  
                                  ??_USBStallEndpoint 0002  
                     __flash_copy_page_to_buffer@page 0014  
                  __end_of_ExternalFlash_CapacityRead 7D26  
                          _ExternalFlash_CapacityRead 7D14  
                             ??_MSDTransferTerminated 000E  
                              __fill_buffer_find_file 59A4  
                              ??__parse_file_truncate 0003  
                        __size_of__bootloader_program 036C  
                               ?_bootloader_get_error 0001  
                             __size_of_USBDeviceTasks 0180  
                                     ___lwdiv@divisor 0003  
                             __display_itoa_u32@value 001F  
                             __display_itoa_u16@value 0019  
                                            _fat_init 7D48  
                    __get_first_cluster@first_cluster 0037  
                                     ?__display_clear 0001  
                                        _jump_to_zero 760E  
                                     ___lwdiv@counter 0007  
                                    __display_checked 339C  
               __end_of_bootloader_get_rec_recordType 7E3A  
              __size_of_bootloader_get_rec_recordType 0006  
                       _bootloader_get_rec_recordType 7E34  
                                            __ptext10 7CEC  
                                            __ptext11 7D76  
                                            __ptext20 3086  
                                            __ptext12 7CA8  
                                            __ptext21 4D5C  
                                            __ptext13 7C74  
                                            __ptext30 7044  
                                            __ptext22 1A36  
                                            __ptext14 7596  
                                            __ptext31 7B0A  
                                            __ptext23 6FEE  
                                            __ptext15 76C0  
                                            __ptext40 6AD8  
                                            __ptext32 7AE4  
                                            __ptext24 7A6E  
                                            __ptext16 63D2  
                                            __ptext41 6250  
                                            __ptext33 538A  
                                            __ptext25 7BFE  
                                            __ptext17 7D48  
                                            __ptext50 6D84  
                                            __ptext42 3518  
                                            __ptext34 3BD6  
                                            __ptext26 7686  
                                            __ptext18 585C  
                                            __ptext51 122A  
                                            __ptext43 7334  
                                            __ptext35 37FC  
                                            __ptext27 7D82  
                                            __ptext19 2552  
                                            __ptext60 7C58  
                                            __ptext52 0BC8  
                                            __ptext44 339C  
                                            __ptext36 2CF4  
                                            __ptext28 7D8C  
                                            __ptext61 7D96  
                                            __ptext53 0020  
                                            __ptext45 4FBE  
                                            __ptext37 293E  
                                            __ptext29 6930  
                                            __ptext70 602A  
                                            __ptext62 7806  
                                            __ptext54 7C3C  
                                            __ptext46 7450  
                                            __ptext38 0F34  
                                            __ptext71 7DA0  
                                            __ptext63 7A96  
                                            __ptext55 670C  
                                            __ptext47 5900  
                                            __ptext39 085A  
                                            __ptext80 565C  
                                            __ptext72 7DAA  
                                            __ptext64 6C68  
                                            __ptext56 79C0  
                                            __ptext48 7492  
                                            __ptext81 5E7C  
                                            __ptext73 7DB4  
                                            __ptext65 7966  
                                            __ptext57 6354  
                                            __ptext49 71F0  
                                            __ptext90 61CA  
                                            __ptext82 4566  
                                            __ptext74 321C  
                                            __ptext66 4BB0  
                                            __ptext58 74D4  
                                            __ptext91 5146  
                                            __ptext83 5AE6  
                                            __ptext75 76F8  
                                            __ptext67 5A46  
                                            __ptext59 7730  
                                            __ptext92 482A  
                                            __ptext84 4666  
                                            __ptext76 7936  
                                            __ptext68 6DDE  
                                            __ptext93 719C  
                                            __ptext85 4748  
                                            __ptext77 740C  
                                            __ptext69 7294  
                                            __ptext94 709A  
                                            __ptext86 79EC  
                                            __ptext78 7BBA  
                                            __ptext95 7D58  
                                            __ptext87 5708  
                                            __ptext79 394E  
                                            __ptext96 4154  
                                            __ptext88 3A9C  
                                            __ptext97 783A  
                                            __ptext89 17B2  
                                            __ptext98 75D2  
                                            __ptext99 5D54  
                                     ?__display_found 0001  
                                    __size_of_ui_init 0014  
                                        _SSP1CON1bits 000FC6  
                                        _SSP1CON2bits 000FC5  
                            ??_bootloader_get_entries 0003  
                                     ?__display_start 0001  
                        __flash_set_page_size@command 0014  
                                        _SSP2CON1bits 000F72  
                __end_of_MSDProcessCommandMediaAbsent 6C06  
               __size_of_MSDProcessCommandMediaAbsent 0062  
                        _MSDProcessCommandMediaAbsent 6BA4  
                                         ??__get_data 0003  
                                         ??__get_date 0003  
                               __flash_wakeup@command 0009  
                                         ??__get_time 0003  
                                         ??__get_root 0003  
                             __size_of_bootloader_run 005A  
                                    __size_of_strncmp 00C2  
                                 __parse_command_long 5F0E  
                   __end_of_failed_line3_addressRange 8CF6  
                          ?_ExternalFlash_SectorWrite 0025  
                      ExternalFlash_SectorRead@config 002C  
                      ExternalFlash_SectorRead@buffer 0032  
                                        api_parse@idx 0058  
                      __size_of__bootloader_find_file 00A0  
                  __end_of__flash_copy_page_to_buffer 6F96  
                          __flash_copy_page_to_buffer 6F3E  
                             __size_of_ResetSenseData 0062  
                    __end_of_APP_DeviceCustomHIDTasks 585C  
                       __end_of__bootloader_find_file 5AE6  
                        __end_of_i2c_digipot_reset_on 7B98  
                      ?_bootloader_get_rec_dataLength 0001  
                               __end_of__flash_wakeup 719C  
                      __end_of_USBCtrlTrfSetupHandler 5F0E  
                                       __size_of_main 016E  
                                   ?_USBCtrlEPService 0001  
                                       __size_of_itoa 0042  
                                            _inq_resp 8F49  
                                       __size_of_utoa 00A4  
                             __end_of_fat_delete_file 6A6E  
                                         ??__read_fat 0032  
                              __fill_buffer_read_file 233C  
                         __end_of_flash_partial_write 67EC  
                                          strncmp@len 0005  
                             fat_get_file_size@offset 003B  
                             fat_get_file_size@sector 0035  
                                  ??_USBCtrlEPService 001E  
                                __end_of__delete_root 6D84  
                    __size_of__bootloader_verify_file 02D4  
                             ??_system_encoder_enable 0001  
            __end_of_bootloader_get_rec_checksumCheck 7E40  
           __size_of_bootloader_get_rec_checksumCheck 0006  
                  ??_bootloader_get_rec_checksumCheck 0001  
                   ?_bootloader_get_rec_checksumCheck 0001  
                    _bootloader_get_rec_checksumCheck 7E3A  
                                 _USBCtrlTrfInHandler 4EF6  
                  _MSDProcessCommandMediaPresent$2390 003C  
                    __get_empty_cluster@first_cluster 0030  
                                         ??_api_parse 0056  
                              __end_of__i2c_wait_idle 6E8E  
                          internalFlash_readPage@page 0016  
                                            _outPipes 0131  
                                          _ODCON3bits 000F40  
                                            _spi_init 7596  
                                _USBCtrlTrfOutHandler 6CC8  
                           _USBCtrlEPAllowStatusStage 5082  
                                         ??__spi_init 0004  
                             _internalFlash_getBuffer 7D96  
                                ?__parse_command_long 0053  
                                        _SSP1STATbits 000FC7  
                   __size_of_bootloader_get_file_size 0012  
                   i2c_eeprom_writeByte@slave_address 0013  
                              ??_USBTransferOnePacket 0005  
                           ?_bootloader_get_file_size 0001  
                          i2c_digipot_backlight@level 000B  
                                  hexCharsToUint16@c1 0009  
                                  hexCharsToUint16@c2 0003  
                                  hexCharsToUint16@c3 0004  
                                  hexCharsToUint16@c4 0005  
                                    ?_flash_page_read 0028  
                                 __display_start@cntr 0001  
                                        _SSP2STATbits 000F73  
                               __end_of__display_done 368E  
                      ??_bootloader_get_total_entries 0003  
                      ?_APP_DeviceCustomHIDInitialize 0001  
                                     ??_fat_find_file 0034  
                              ??__parse_command_short 0014  
               MSDProcessCommandMediaPresent@capacity 0043  
                       display_get_character@position 0001  
                            __size_of_MSDErrorHandler 0106  
                           _USBDeferStatusStagePacket 00A8  
                  __end_of_spi_get_external_rx_buffer 7D96  
                          _spi_get_external_rx_buffer 7D8C  
                          __size_of__display_itoa_u16 00C4  
                          __size_of__display_itoa_u32 036E  
                     __end_of__fill_buffer_get_status 4AD0  
                             __parse_file_modify@data 0001  
                   __fill_buffer_get_display@position 0010  
                                         _OSCTUNEbits 000F9B  
                                          _INTCONbits 000FF2  
            __end_of__internalFlash_unlockAndActivate 7ABE  
           __size_of__internalFlash_unlockAndActivate 0028  
                  ??__internalFlash_unlockAndActivate 0001  
                   ?__internalFlash_unlockAndActivate 0001  
                    __internalFlash_unlockAndActivate 7A96  
                             _internalFlash_erasePage 7806  
                                   __write_fat@offset 002F  
                                ?_USBCtrlTrfInHandler 0001  
                                            memcpy@d1 0001  
                                            memcpy@s1 0003  
                       USBCtrlTrfTxService@byteToSend 0001  
                  __end_of_spi_get_external_tx_buffer 7D8C  
                          _spi_get_external_tx_buffer 7D82  
                     i2c_digipot_backlight@data_array 000C  
                                            itoa@base 0015  
                                     ??_ui_get_status 0001  
                                            memset@p1 0001  
                                   _parseHexFileEntry 0020  
                __end_of_MSDComputeDeviceInAndResidue 5CBE  
               __size_of_MSDComputeDeviceInAndResidue 009C  
                        _MSDComputeDeviceInAndResidue 5C22  
                                    ?_USBStallHandler 0001  
                            USBStdFeatureReqHandler@p 001C  
                             spi_tx_tx@command_length 0003  
                          ?__get_available_root_entry 0001  
                                 __end_of_start_line1 8D99  
                                 __end_of_start_line2 8D88  
                                 __end_of_start_line3 8D0A  
                                 __end_of_start_line4 8E6B  
                       __size_of__flash_set_page_size 007A  
                                       ?__normal_mode 0001  
                                       _flash_is_busy 7CD6  
                                   ?_hexCharsToUint16 0003  
                                    __i2c_acknowledge 7DB4  
                              bootloader_run@timeslot 005D  
                             __end_of_fat_create_file 3086  
                                    spi_tx_rx@command 0001  
                            __flash_get_status@status 0010  
                                  ?_parseHexFileEntry 000C  
                         __size_of__root_is_available 0076  
                             __parse_file_rename@data 0043  
                              __size_of_USBDeviceInit 014E  
                       ?_MSDProcessCommandMediaAbsent 0001  
             __end_of_USER_USB_CALLBACK_EVENT_HANDLER 6250  
            __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                   ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                    ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                     _USER_USB_CALLBACK_EVENT_HANDLER 61CA  
                                  ??_hexCharsToUint16 0006  
                                    ___lwmod@dividend 0001  
                   __end_of_ExternalFlash_SectorWrite 779C  
                                    ___lldiv@dividend 0001  
               __end_of__flash_write_page_from_buffer 6F3E  
              __size_of__flash_write_page_from_buffer 0058  
                       __flash_write_page_from_buffer 6EE6  
                SYSTEM_Initialize@pll_startup_counter 0001  
                               __update_modified_time 78A0  
                        fat_read_from_file@start_byte 003F  
                                     _display_content 0174  
                          __end_of_flash_partial_read 7904  
                                   ??_system_delay_ms 0001  
                             __end_of_MSDWriteHandler 17B2  
                                 ??_parseHexFileEntry 0014  
                                           strncmp@s1 0001  
                                           strncmp@s2 0003  
                                    spi_tx_tx@command 0001  
                 __end_of_bootloader_get_rec_checksum 7E46  
                         _bootloader_get_rec_checksum 7E40  
                             __size_of_MSDReadHandler 01D8  
                       __size_of_jump_to_main_program 003C  
                                       ??_system_init 0030  
                   __size_of__fill_buffer_get_display 00B4  
                           ?__fill_buffer_get_display 0005  
                              ??_USBConfigureEndpoint 0002  
                                     ?__i2c_wait_idle 0001  
                               ?_USBCtrlTrfOutHandler 0001  
                                     _display_prepare 538A  
                            ??__flash_write_to_buffer 001B  
                            ?_APP_DeviceMSDInitialize 0001  
                               _failed_line3_checksum 8E29  
                                 _USBCtrlTrfRxService 3E22  
                           __size_of_timer_pseudo_isr 0034  
                                  _USBWakeFromSuspend 76F8  
                               ??__parse_command_long 0055  
                                   hexCharsToUint8@c1 0005  
                                   hexCharsToUint8@c2 0003  
                         internalFlash_writePage@cntr 0009  
                         internalFlash_writePage@page 0003  
                                        ?__ui_encoder 0001  
                                  _i2c_display_cursor 7B0A  
                              ??__display_programming 001F  
                             _USBStdFeatureReqHandler 17B2  
                        __fill_buffer_read_file@start 00EA  
                                         ??_spi_tx_rx 0009  
                                         ??_spi_tx_tx 0009  
                   __bootloader_check_address@address 0001  
                                 _USBCtrlTrfTxService 4E2A  
                         fat_delete_file@next_cluster 003A  
                                        ?_api_prepare 00EE  
               __flash_write_page_from_buffer@command 001A  
                                            utoa@base 000C  
                                     _gblMediaPresent 0170  
                    __size_of_bootloader_get_rec_data 0016  
                               _i2c_digipot_backlight 7ABE  
                                    ??_hexCharToUint8 0001  
                 ExternalFlash_SectorRead@sector_addr 002E  
                                 ?_USBWakeFromSuspend 0001  
                                   ??_hexCharsToUint8 0004  
                    __end_of_failed_line3_dataTooLong 8E55  
                                          _PPSCONbits 000EBF  
                                    ___lldiv@quotient 0009  
                              ??_bootloader_get_error 0001  
                                     ___lwmod@divisor 0003  
                         ??_ExternalFlash_MediaDetect 0003  
                                 ?_i2c_display_cursor 000E  
                               ??_USBCtrlTrfInHandler 0002  
                  __end_of_bootloader_get_rec_address 7DE6  
                          _bootloader_get_rec_address 7DDC  
                               _USBAlternateInterface 01E0  
                __bootloader_check_address@dataLength 0005  
                           __end_of_parseHexFileEntry 049C  
                                     ___lwmod@counter 0005  
                         __end_of_i2c_eeprom_readByte 72E4  
                          __delete_root@deleted_value 002E  
                       __size_of__i2c_not_acknowledge 000A  
                                         _ptrNextData 008C  
                           _failed_line3_noNextRecord 8E38  
                          ?__bootloader_check_address 0001  
                                     _fat_rename_file 5CBE  
                                 USBEnableEndpoint@ep 000C  
                                     _endpoint_number 00AB  
                                      _display_update 6930  
                                      ??__normal_mode 0019  
                                      ?_flash_is_busy 0001  
                                ?_USBCtrlTrfRxService 0001  
                              _failed_line3_startCode 8D0A  
                     __size_of_bootloader_get_entries 000A  
__internalFlash_unlockAndActivate@InterruptEnableSave 0002  
                               _MSDCheckForErrorCases 490C  
                          fat_read_from_file@position 00DE  
                       ?_MSDComputeDeviceInAndResidue 0001  
                    __end_of__ic2_display_set_address 7B0A  
                            ?_USBCtrlEPAllowDataStage 0001  
                                      _MSBBufferIndex 0172  
                             _internalFlash_writePage 6354  
                                ?_USBCtrlTrfTxService 0001  
                      ?_bootloader_get_rec_recordType 0001  
                                          _USBMSDInit 4154  
                        _USBStatusStageTimeoutCounter 00A9  
                     ??_ExternalFlash_MediaInitialize 0003  
                                    ?_fat_delete_file 0001  
                                ??_USBWakeFromSuspend 0018  
                         __end_of__flash_partial_read 653C  
                          USBTransferOnePacket@handle 000A  
                                ??_i2c_display_cursor 000F  
                        __end_of_i2c_eeprom_writeByte 7556  
                                        _verify_line1 8E09  
                                        _verify_line2 8E55  
                                        _verify_line3 8E8A  
                            ??_fat_get_empty_clusters 0032  
                                          _USB_CD_Ptr 8EA5  
                                         _power_state 0097  
                                         _USBInHandle 016E  
                            _APP_DeviceCustomHIDTasks 57B2  
